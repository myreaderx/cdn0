{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-10-10 00:29:33","updatedTime":"2020-10-10 00:29:33","title":"How bout sniffin’ those 802.11 packets?","link":"http://z4ziggy.wordpress.com/?p=1025","description":"<p>As the title suggests, I needed to sniff some 802.11 packets, but this time using an ESP8266 (actually, a <a href=\"https://wiki.wemos.cc/products:d1:d1_mini_lite\">Wemos D1 mini Lite</a>, which features ESP8285, but any ESP-based device should work).</p>\n<p><a href=\"https://wiki.wemos.cc/products:d1:d1_mini_lite\"><img data-attachment-id=\"1030\" data-permalink=\"https://z4ziggy.wordpress.com/2019/04/27/how-bout-sniffin-those-802-11-packets/productsd1lite_v1-0-0_1_16x9/\" data-orig-file=\"https://z4ziggy.files.wordpress.com/2019/04/productsd1lite_v1.0.0_1_16x9.jpg\" data-orig-size=\"1600,900\" data-comments-opened=\"1\" data-image-meta=\"{&#34;aperture&#34;:&#34;0&#34;,&#34;credit&#34;:&#34;&#34;,&#34;camera&#34;:&#34;&#34;,&#34;caption&#34;:&#34;&#34;,&#34;created_timestamp&#34;:&#34;0&#34;,&#34;copyright&#34;:&#34;&#34;,&#34;focal_length&#34;:&#34;0&#34;,&#34;iso&#34;:&#34;0&#34;,&#34;shutter_speed&#34;:&#34;0&#34;,&#34;title&#34;:&#34;&#34;,&#34;orientation&#34;:&#34;1&#34;}\" data-image-title=\"productsd1lite_v1.0.0_1_16x9\" data-image-description=\"\" data-medium-file=\"https://z4ziggy.files.wordpress.com/2019/04/productsd1lite_v1.0.0_1_16x9.jpg?w=300\" data-large-file=\"https://z4ziggy.files.wordpress.com/2019/04/productsd1lite_v1.0.0_1_16x9.jpg?w=1000\" class=\"alignnone size-full wp-image-1030\" src=\"https://z4ziggy.files.wordpress.com/2019/04/productsd1lite_v1.0.0_1_16x9.jpg?w=1000\" alt=\"productsd1lite_v1.0.0_1_16x9\" srcset=\"https://z4ziggy.files.wordpress.com/2019/04/productsd1lite_v1.0.0_1_16x9.jpg?w=1000 1000w, https://z4ziggy.files.wordpress.com/2019/04/productsd1lite_v1.0.0_1_16x9.jpg?w=150 150w, https://z4ziggy.files.wordpress.com/2019/04/productsd1lite_v1.0.0_1_16x9.jpg?w=300 300w, https://z4ziggy.files.wordpress.com/2019/04/productsd1lite_v1.0.0_1_16x9.jpg?w=768 768w, https://z4ziggy.files.wordpress.com/2019/04/productsd1lite_v1.0.0_1_16x9.jpg?w=1024 1024w, https://z4ziggy.files.wordpress.com/2019/04/productsd1lite_v1.0.0_1_16x9.jpg 1600w\" sizes=\"(max-width: 1000px) 100vw, 1000px\"   /></a></p>\n<p>I started with grabbing the <a href=\"https://github.com/spacehuhn/ArduinoPcap/blob/master/examples/esp8266_pcap_serial/esp8266_pcap_serial.ino\">esp8266_pcap_serial</a> from <a href=\"https://github.com/spacehuhn/ArduinoPcap\">ArduinoPcap</a> just to find out it lacks the structs to properly stream the buffer to Wireshark. I quickly fixed it (uploaded <a href=\"https://github.com/z4ziggy/esp8266_pcap_serial\">here</a>) and then encountered a 2nd problem which was not as easy to fix &#8211; there is a 128 bytes limitation on the SDK for packet size. Oh dear, I guess some firmware hacking are heading my way. But hey, if we&#8217;re going to hack the firmware, we better code a new sniffer, right? Here goes.</p>\n<p>We have two official firmwares to choose from: <a href=\"https://github.com/espressif/ESP8266_NONOS_SDK\">Non-OS SDK</a> or <a href=\"https://github.com/espressif/ESP8266_RTOS_SDK\">RTOS SDK</a>. The main differences are (taken from <a href=\"https://bbs.espressif.com/viewtopic.php?t=838\">here</a>):</p>\n<blockquote>\n<h3>Non-OS SDK</h3>\n<ul>\n<li>The Non-OS SDK uses timers and callbacks as the main way to perform the various functions &#8211; nested events, functions triggered by certain conditions. The Non-OS SDK uses the espconn network interface; the user needs to develop their software according to the usage rules of the espconn interface.</li>\n</ul>\n<h3>RTOS SDK</h3>\n<ul>\n<li>RTOS version SDK uses the freeRTOS system, a multi-tasking OS. You can use standard interfaces to freeRTOS resource management, recycling operations, execution delay, inter-task messaging and synchronization, task-oriented process design. For the specifics of interface methods, refer to freeRTOS official website instructions or USING THE FREERTOS REAL TIME KERNEL &#8211; A Practical Guide introduction.</li>\n<li>RTOS SDK version of the network operating interface is a standard lwIP API, while providing a package which enables BSD Socket APIsocket interface. Users can directly use the socket API to develop software applications; your code can also be directly compiled to run standard applications on other platforms Socket , effectively reducing the cost of learning platform switching. (possibly flawed translation)</li>\n<li>RTOS version of the SDK introduces cJSON library, use the library functions to more easily parse JSON packets.</li>\n<li>RTOS version is compatible with non-OS SDK in the Wi-Fi interface, smart config interfaces, Sniffer related interfaces, system interface, timer interface, FOTA interfaces and peripheral driver interface, but does not support the AT implementation.</li>\n</ul>\n</blockquote>\n<p>For my purposes I naturally went with the RTOS SDK. Follow the instructions on the <a href=\"https://github.com/espressif/ESP8266_RTOS_SDK/blob/master/README.md\">README</a> and install the proper toolchain (mine is Linux64) before proceeding with the firmware itself.</p>\n<blockquote><p><strong>WARNING:</strong> Do not try `apt install gcc-xtensa-lx106` or any other version, since the firmware will fail to compile. Here, I just saved you a few hours of errors.</p></blockquote>\n<pre class=\"brush: bash; title: ; notranslate\">\nwget https://dl.espressif.com/dl/xtensa-lx106-elf-linux64-1.22.0-92-g8facf4c-5.2.0.tar.gz\ntar zxvf xtensa-lx106-elf-linux64-1.22.0-92-g8facf4c-5.2.0.tar.gz\nexport PATH=$PATH:`pwd`/xtensa-lx106-elf/bin\n</pre>\n<p>Now I was ready to clone and compile the firmware. First thing todo is configure the firmware options via <code>make menuconfig</code> . A few important notes:</p>\n<ul>\n<li style=\"list-style-type:none;\">\n<ul>\n<li>Make sure you select correct memory size for your board on <code>'Serial flasher config -&#62; Flash size'</code>.</li>\n<li>Do not change <code>'Compiler Options'</code> from <code>'Debug'</code> to <code>'Release'</code>, otherwise your program will fail to load properly.</li>\n<li>For <code>'Wemos D1 mini Lite'</code> I had to change the default <code>'Serial flasher config' -&#62; 'Flash SPI mode'</code> to <code>'DOUT'</code>, otherwise it won&#8217;t flash properly. Other boards such as <code>'<a href=\"https://wiki.wemos.cc/products:retired:d1_mini_pro_v1.0.0\">Wemos D1 mini Pro</a>'</code> worked just fine with the default <code>'QIO'</code>.</li>\n</ul>\n</li>\n</ul>\n<pre class=\"brush: bash; title: ; notranslate\">\ngit clone https://github.com/espressif/ESP8266_RTOS_SDK.git\ncd ESP8266_RTOS_SDK\nexport IDF_PATH=`pwd`\ncd examples/system/console\nmake menuconfig\nmake -j8 flash monitor\n</pre>\n<p>Press the RESET on the ESP8266 board, and watch the terminal log for some geeks&#8217; entertainment (to exit Miniterm, press &#8216;CTRL-]&#8217;). If you want more logging fun, select &#8216;Verbose&#8217; on the log level, recompile and flash again.</p>\n<p>Now for the sniffer part, I patched together some <a href=\"https://github.com/z4ziggy/esp8266_pcap_uart\">ESP8266 pcap sniffer firmware</a>. To try it yourself, make sure you disable all log output (on <code>make menuconfig</code>) since the log output will interfere with the pcap output of the sniffer. Use <code>make menuconfig</code> to change the sniffer settings.</p>\n<pre class=\"brush: bash; title: ; notranslate\">\ncd $IDF_PATH/examples/wifi\ngit clone https://github.com/z4ziggy/esp8266_pcap_uart.git\ncd esp8266_pcap_uart\nmake menuconfig\nmake -j8 flash\n./SerialShark.py\n</pre>\n<p> </p>\n<p>This is what it should look like:</p>\n<p><img data-attachment-id=\"1031\" data-permalink=\"https://z4ziggy.wordpress.com/2019/04/27/how-bout-sniffin-those-802-11-packets/esp8266-sniffer/\" data-orig-file=\"https://z4ziggy.files.wordpress.com/2019/04/esp8266-sniffer.gif\" data-orig-size=\"968,804\" data-comments-opened=\"1\" data-image-meta=\"{&#34;aperture&#34;:&#34;0&#34;,&#34;credit&#34;:&#34;&#34;,&#34;camera&#34;:&#34;&#34;,&#34;caption&#34;:&#34;&#34;,&#34;created_timestamp&#34;:&#34;0&#34;,&#34;copyright&#34;:&#34;&#34;,&#34;focal_length&#34;:&#34;0&#34;,&#34;iso&#34;:&#34;0&#34;,&#34;shutter_speed&#34;:&#34;0&#34;,&#34;title&#34;:&#34;&#34;,&#34;orientation&#34;:&#34;0&#34;}\" data-image-title=\"esp8266-sniffer\" data-image-description=\"\" data-medium-file=\"https://z4ziggy.files.wordpress.com/2019/04/esp8266-sniffer.gif?w=300\" data-large-file=\"https://z4ziggy.files.wordpress.com/2019/04/esp8266-sniffer.gif?w=968\" class=\"alignnone size-full wp-image-1031\" src=\"https://z4ziggy.files.wordpress.com/2019/04/esp8266-sniffer.gif?w=1000\" alt=\"esp8266-sniffer\"   /></p>\n","descriptionType":"html","publishedDate":"Sat, 27 Apr 2019 14:49:23 +0000","feedId":40270,"bgimg":"https://z4ziggy.files.wordpress.com/2019/04/sniffing.jpg","linkMd5":"2c12ddc9989b8afa5294f9b24774dbe0","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn20@2020_2/2020/10/09/16-29-33-840_7f896d525f839391.webp","destWidth":450,"destHeight":338,"sourceBytes":90454,"destBytes":43684,"author":"z4ziggy","articleImgCdnMap":{"https://z4ziggy.files.wordpress.com/2019/04/productsd1lite_v1.0.0_1_16x9.jpg?w=1000":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn24@2020_4/2020/10/09/16-29-33-649_9d7423a8b00f1495.webp","https://z4ziggy.files.wordpress.com/2019/04/esp8266-sniffer.gif?w=1000":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn27@2020_3/2020/10/09/16-30-53-144_a8c02f3756b5cbcc.webp"},"publishedOrCreatedDate":1602260973378}],"record":{"createdTime":"2020-10-10 00:29:33","updatedTime":"2020-10-10 00:29:33","feedId":40270,"fetchDate":"Fri, 09 Oct 2020 16:29:33 +0000","fetchMs":97,"handleMs":42,"totalMs":82534,"newArticles":0,"totalArticles":10,"status":1,"type":0,"ip":"0b4009930f9af5660966c5695d71af7c","hostName":"us-039*","requestId":"2bcd6123ab3240a697200b34148a85cd_40270","contentType":"application/rss+xml; charset=UTF-8","totalBytes":8593126,"bgimgsTotal":1,"bgimgsGithubTotal":1,"articlesImgsTotal":2,"articlesImgsGithubTotal":2,"successGithubMap":{"myreaderx6":1,"myreaderx1":1,"myreaderx19":1},"failGithubMap":{}},"feed":{"createdTime":"2020-09-07 03:20:10","updatedTime":"2020-09-07 05:36:26","id":40270,"name":"Ziggy's of the world","url":"https://z4ziggy.wordpress.com/feed/","subscriber":80,"website":null,"icon":"https://secure.gravatar.com/blavatar/53645dfa06080e4d289df72cb1da1d48?s=96&d=https%3A%2F%2Fs0.wp.com%2Fi%2Fbuttonw-com.png","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx62/cdn6@2020_3/2020/09/06/21-36-20-428_2175f468f965697d.jpg","description":"geeks, computers, and bread","weekly":null,"link":null},"noPictureArticleList":[],"tmpCommonImgCdnBytes":0,"tmpBodyImgCdnBytes":8593126,"tmpBgImgCdnBytes":0,"extra4":{"start":1602260973236,"total":0,"statList":[{"spend":100,"msg":"获取xml内容"},{"spend":42,"msg":"解释文章"},{"spend":1475,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":82384,"msg":"正文链接上传到cdn"}]},"extra5":2,"extra6":2,"extra7ImgCdnFailResultVector":[null],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://us-018.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]},"http://us-030.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://z4ziggy.files.wordpress.com/2019/04/productsd1lite_v1.0.0_1_16x9.jpg?w=1000","sourceStatusCode":200,"destWidth":1000,"destHeight":562,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn24@2020_4/2020/10/09/16-29-33-649_9d7423a8b00f1495.webp","sourceBytes":49284,"destBytes":49284,"feedId":40270,"totalSpendMs":1174,"convertSpendMs":0,"createdTime":"2020-10-10 00:29:33","host":"us-030*","referer":"http://z4ziggy.wordpress.com/?p=1025","linkMd5ListStr":"2c12ddc9989b8afa5294f9b24774dbe0","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"compressRate":"100%","sourceSize":"48.1 KB","destSize":"48.1 KB"},{"code":1,"isDone":false,"source":"https://z4ziggy.files.wordpress.com/2019/04/sniffing.jpg","sourceStatusCode":200,"destWidth":450,"destHeight":338,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn20@2020_2/2020/10/09/16-29-33-840_7f896d525f839391.webp","sourceBytes":90454,"destBytes":43684,"targetWebpQuality":75,"feedId":40270,"totalSpendMs":1434,"convertSpendMs":216,"createdTime":"2020-10-10 00:29:33","host":"us-53*","referer":"http://z4ziggy.wordpress.com/?p=1025","linkMd5ListStr":"2c12ddc9989b8afa5294f9b24774dbe0","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"compressRate":"48.3%","sourceSize":"88.3 KB","destSize":"42.7 KB"},{"code":1,"isDone":false,"source":"https://z4ziggy.files.wordpress.com/2019/04/esp8266-sniffer.gif?w=1000","sourceStatusCode":200,"destWidth":968,"destHeight":804,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn27@2020_3/2020/10/09/16-30-53-144_a8c02f3756b5cbcc.webp","sourceBytes":21843202,"destBytes":8543842,"targetWebpQuality":4,"feedId":40270,"totalSpendMs":22089,"convertSpendMs":18089,"createdTime":"2020-10-10 00:30:33","host":"us-030*","referer":"http://z4ziggy.wordpress.com/?p=1025","linkMd5ListStr":"2c12ddc9989b8afa5294f9b24774dbe0","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"compressRate":"39.1%","sourceSize":"20.8 MB","destSize":"8.1 MB"}],"successGithubMap":{"myreaderx6":1,"myreaderx1":1,"myreaderx19":1},"failGithubMap":{}}