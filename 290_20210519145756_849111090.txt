{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2021-05-19 22:57:26","updatedTime":"2021-05-19 22:57:26","title":"Achieving observability in async workflows","link":"https://medium.com/p/cd89b923c784","description":"<p><em>Written by </em><a href=\"https://www.linkedin.com/in/colbycallahan\"><em>Colby Callahan</em></a><em>, </em><a href=\"https://www.linkedin.com/in/megha-manohara-ba71b09/\"><em>Megha Manohara</em></a><em>, and </em><a href=\"https://www.linkedin.com/in/mike-azar-7064883b/\"><em>Mike Azar</em></a><em>.</em></p><p>Managing and operating asynchronous workflows can be difficult without the proper tools and architecture that puts observability, debugging, and tracing at the forefront.</p><p>Imagine getting paged outside normal work hours — users are having trouble with the application you’re responsible for, and you start diving into logs. However, they are scattered across multiple systems, and there isn’t an easy way to tie related messages together. Once you finally find useful identifiers, you may begin writing SQL queries against your production database to find out what went wrong. You’re joining tables, resolving status types, cross-referencing data manually with other systems, and by the end of it all you ask yourself why?</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/304/1*hHyMQuRdHYQp81PsybLhDg.png\" /><figcaption>An upset on-call</figcaption></figure><p>This was the experience for us as the backend team on Prodicle Distribution, which is one of the many services offered in the suite of content production-facing applications called Prodicle.</p><p>Prodicle is one of the many applications that is at the exciting intersection of connecting the world of content productions to <a href=\"https://netflixtechblog.com/netflix-studio-engineering-overview-ed60afcfa0ce\">Netflix Studio Engineering</a>. It enables a Production Office Coordinator to keep a Production’s cast, crew, and vendors organized and up to date with the latest information throughout the course of a title’s filming. (e.g. Netflix original series such as La Casa De Papel), as well as with Netflix Studio.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/431/1*8BlwxH4Rj8pztbYACRwWGA.png\" /><figcaption>Users of Prodicle: Production Office Coordinator on their job</figcaption></figure><p>As the adoption of Prodicle grew over time, Productions asked for more features, which led to the system quickly evolving in multiple programming languages under different teams. When our team took ownership of Prodicle Distribution, we decided to revamp the service and expand its implementation to multiple UI clients built for web, <a href=\"https://netflixtechblog.com/netflix-android-and-ios-studio-apps-kotlin-multiplatform-d6d4d8d25d23\">Android and iOS</a>.</p><p><strong>Prodicle Distribution</strong></p><p>Prodicle Distribution allows a production office coordinator to send secure, watermarked documents, such as scripts, to crew members as attachments or links, and track delivery. One distribution job might result in several thousand watermarked documents and links being created. If a job has 10 files and 20 recipients, then we have 10 x 20 = 200 unique watermarked documents and (optionally) links associated with them depending on the type of the Distribution job. The recipients of watermarked documents are able to access these documents and links in their email as well as in the Prodicle mobile application.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*nQAmn2xNrp51H89JpyQJqg.gif\" /><figcaption>Prodicle Distribution</figcaption></figure><p>Our service is required to be elastic and handle bursty traffic. It also needs to handle third-party integration with Google Drive, making copies of PDFs with watermarks specific to each recipient, adding password protection, creating revocable links, generating thumbnails, and sending emails and push notifications. We are expected to process 1,000 watermarks for a single distribution in a minute, with non-linear latency growth as the number of watermarks increases. The goal is to process these documents as fast as possible and reliably deliver them to recipients while offering strong observability to both our users and internal teams.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/800/1*mLE6HkEYybvZIyoD2ZLLrQ.png\" /><figcaption>Prodicle Distribution Requirements</figcaption></figure><p><strong>Asynchronous workflow</strong></p><p>Previously, the Distribution feature of Prodicle was treated as its own unique application. In late 2019, our team started integrating it with the rest of the ecosystem by writing a thin Java <a href=\"https://netflixtechblog.com/open-sourcing-the-netflix-domain-graph-service-framework-graphql-for-spring-boot-92b9dcecda18\">Domain graph service</a> (DGS) to wrap the asynchronous watermarking functionality that was then in Ruby on Rails. The watermarking functionality, at the start, was a simple offering with various Google Drive integrations for storage and links. Our team was responsible for Google integrations, watermarking, bursty traffic management, and on-call support for this application. We had to traverse multiple codebases, and observability systems to debug errors and inefficiencies in the system. Things got hairy. New feature requests were adding to the maintenance burden for the team.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*oFsiKKHtAltaFUHKk_7j0w.png\" /><figcaption>Initial offering of Prodicle Distribution backend</figcaption></figure><p>When we decided to migrate the asynchronous workflow to Java, we landed on these additional requirements: 1. We wanted a scalable service that was near real-time, 2. We wanted a workflow orchestrator with good observability for developers, and 3. We wanted to delegate the responsibility of watermarking and bursty traffic management for our asynchronous functions to appropriate teams.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/848/1*_pbBaQmaCNphR2MitJIjDQ.png\" /><figcaption>Migration consideration for Prodicle Distribution’s asynchronous workflow</figcaption></figure><p>We evaluated what it would take to do this ourselves or rely on the offerings from our platform teams — <a href=\"https://netflixtechblog.com/evolution-of-netflix-conductor-16600be36bca\">Conductor</a> and one of the new offerings <a href=\"https://netflixtechblog.com/the-netflix-cosmos-platform-35c14d9351ad\">Cosmos</a>. Even though Cosmos was developed for asynchronous media processing, we worked with them to expand to generic file processing and tune their workflow platform for our near real-time use case. Early prototypes and load tests validated that the offering could meet our needs. We leaned into Cosmos because of the low variance in latency through the system, separation of concerns between the API, workflow, and the function systems, ease of load testing, customizable API layer and notifications, support for File I/O abstractions and elastic functions. Another benefit was their observability portal and its capabilities with search. We also migrated the ownership of watermarking to another internal team to focus on developing and supporting additional features.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*-fAoOZ8reMn7qUK3EspZyg.png\" /><figcaption>Current architecture of Prodicle Distribution on Cosmos</figcaption></figure><p>With Cosmos, we are well-positioned to expand to future use cases like watermarking on images and videos. The Cosmos team is dedicated to improving features and functionality over the next year to make observations of our async workflows even better. It is great to have a team that will be improving the platform in the background as we continue our application development. We expect the performance and scaling to continue to get better without much effort on our part. We also expect other services to move some of their processing functionality into Cosmos, which makes integrations even easier because services can expose a function within the platform instead of GRPC or REST endpoints. The more services move to Cosmos, the bigger the value proposition becomes.</p><p><strong>Deployed to Production for Productions</strong></p><p>With productions returning to work in the midst of a global pandemic, the adoption of Prodicle Distribution has grown 10x, between June 2020 and April 2021. Starting January 2021 we did an incremental release of Prodicle Distribution on Cosmos and completed the migration in April 2021. We now support hundreds of productions, with tens of thousands of Distribution jobs, and millions of watermarks every month.</p><p>With our migration of Prodicle Distribution to Cosmos, we are able to use their observability portal called Nirvana to debug our workflow and bottlenecks.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*Qn5duKIDgu9HSU8O_OL2XQ.png\" /><figcaption>Observing Prodicle Distribution on Cosmos in Nirvana</figcaption></figure><p>Now that we have a platform team dedicated to the management of our async infrastructure and watermarking, our team can better maintain and support the distribution of documents. Since our migration, the number of support tickets has decreased. It is now easier for the on-call engineer and the developers to find the associated logs and traces while visualizing the state of the asynchronous workflow and data in the whole system.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/520/1*bmNmCSwr-EQJ67ohBZLOCg.png\" /><figcaption>A stress-free on-call</figcaption></figure><img src=\"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=cd89b923c784\" width=\"1\" height=\"1\" alt=\"\"><hr><p><a href=\"https://netflixtechblog.com/achieving-observability-in-async-workflows-cd89b923c784\">Achieving observability in async workflows</a> was originally published in <a href=\"https://netflixtechblog.com\">Netflix TechBlog</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>","descriptionType":"html","publishedDate":"Fri, 14 May 2021 17:43:31 +0000","feedId":290,"bgimg":"https://cdn-images-1.medium.com/max/304/1*hHyMQuRdHYQp81PsybLhDg.png","linkMd5":"30eb28cde31a86efd962ac5c0dba9e5c","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn30@2020_3/2021/05/19/14-57-26-854_fecfb81e362a11a4.webp","destWidth":304,"destHeight":254,"sourceBytes":11621,"destBytes":11190,"author":"Netflix Technology Blog","articleImgCdnMap":{"https://cdn-images-1.medium.com/max/304/1*hHyMQuRdHYQp81PsybLhDg.png":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn30@2020_3/2021/05/19/14-57-26-854_fecfb81e362a11a4.webp","https://cdn-images-1.medium.com/max/431/1*8BlwxH4Rj8pztbYACRwWGA.png":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn38@2020_6/2021/05/19/14-57-27-340_a7eddfa88154ebd4.webp","https://cdn-images-1.medium.com/max/1024/1*nQAmn2xNrp51H89JpyQJqg.gif":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn45@2020_5/2021/05/19/14-57-54-732_a79aac8762bfb8bb.webp","https://cdn-images-1.medium.com/max/800/1*mLE6HkEYybvZIyoD2ZLLrQ.png":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn57@2020_2/2021/05/19/14-57-27-364_9b00f2960f59233f.webp","https://cdn-images-1.medium.com/max/1024/1*oFsiKKHtAltaFUHKk_7j0w.png":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn53@2020_4/2021/05/19/14-57-27-355_1d1a1cdfea7ac423.webp","https://cdn-images-1.medium.com/max/848/1*_pbBaQmaCNphR2MitJIjDQ.png":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn66@2020_4/2021/05/19/14-57-27-517_217f2f6052698b07.webp","https://cdn-images-1.medium.com/max/1024/1*-fAoOZ8reMn7qUK3EspZyg.png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn61@2020_1/2021/05/19/14-57-27-400_e665a99e3cf41535.webp","https://cdn-images-1.medium.com/max/1024/1*Qn5duKIDgu9HSU8O_OL2XQ.png":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn34@2020_5/2021/05/19/14-57-27-331_234c21e596b64cc8.webp","https://cdn-images-1.medium.com/max/520/1*bmNmCSwr-EQJ67ohBZLOCg.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn50@2020_3/2021/05/19/14-57-27-513_a6cda5c38e5da06e.webp","https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=cd89b923c784":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn41@2020_6/2021/05/19/14-57-27-612_5b5fdefce10c8d37.webp"},"publishedOrCreatedDate":1621436246801}],"record":{"createdTime":"2021-05-19 22:57:26","updatedTime":"2021-05-19 22:57:26","feedId":290,"fetchDate":"Wed, 19 May 2021 14:57:26 +0000","fetchMs":195,"handleMs":26,"totalMs":29315,"newArticles":0,"totalArticles":10,"status":1,"type":0,"ip":"af0629e1ae74a27744b4cbd27b40a78e","hostName":"us-019*","requestId":"0eb4dc37304b4a42bea6b64e07a8836d_290","contentType":"text/xml; charset=UTF-8","totalBytes":3711364,"bgimgsTotal":1,"bgimgsGithubTotal":1,"articlesImgsTotal":10,"articlesImgsGithubTotal":10,"successGithubMap":{"myreaderx6":1,"myreaderx16":1,"myreaderx21":1,"myreaderx32":1,"myreaderx12":1,"myreaderx24":1,"myreaderx30":1,"myreaderx18":1,"myreaderx19":1,"myreaderx":1},"failGithubMap":{}},"feed":{"createdTime":"2020-08-16 17:44:26","updatedTime":"2020-09-01 09:28:09","id":290,"name":"Netflix TechBlog - Medium","url":"http://techblog.netflix.com/feeds/posts/default","subscriber":null,"website":null,"icon":"https://cdn-images-1.medium.com/proxy/1*TGH72Nnw24QL3iV9IOm4VA.png","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx65/cdn26@2020_3/2020/09/01/01-28-09-665_7b1d3de1dd751a79.png","description":"Learn about Netflix’s world class engineering efforts, company culture, product developments and more. - Medium","weekly":null,"link":null},"noPictureArticleList":[],"tmpCommonImgCdnBytes":11190,"tmpBodyImgCdnBytes":3700174,"tmpBgImgCdnBytes":0,"extra4":{"start":1621436246560,"total":0,"statList":[{"spend":215,"msg":"获取xml内容"},{"spend":26,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":28600,"msg":"正文链接上传到cdn"}]},"extra5":10,"extra6":10,"extra7ImgCdnFailResultVector":[],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://europe-56.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-017.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe68.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-034.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-005.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-022.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-22.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-009.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-030.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://cdn-images-1.medium.com/max/304/1*hHyMQuRdHYQp81PsybLhDg.png","sourceStatusCode":200,"destWidth":304,"destHeight":254,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn30@2020_3/2021/05/19/14-57-26-854_fecfb81e362a11a4.webp","sourceBytes":11621,"destBytes":11190,"targetWebpQuality":75,"feedId":290,"totalSpendMs":455,"convertSpendMs":4,"createdTime":"2021-05-19 22:57:26","host":"us-52*","referer":"https://medium.com/p/cd89b923c784","linkMd5ListStr":"30eb28cde31a86efd962ac5c0dba9e5c,30eb28cde31a86efd962ac5c0dba9e5c","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"11.3 KB","destSize":"10.9 KB","compressRate":"96.3%"},{"code":1,"isDone":false,"source":"https://cdn-images-1.medium.com/max/800/1*mLE6HkEYybvZIyoD2ZLLrQ.png","sourceStatusCode":200,"destWidth":800,"destHeight":300,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn57@2020_2/2021/05/19/14-57-27-364_9b00f2960f59233f.webp","sourceBytes":29528,"destBytes":19022,"targetWebpQuality":75,"feedId":290,"totalSpendMs":369,"convertSpendMs":11,"createdTime":"2021-05-19 22:57:27","host":"us-022*","referer":"https://medium.com/p/cd89b923c784","linkMd5ListStr":"30eb28cde31a86efd962ac5c0dba9e5c","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"28.8 KB","destSize":"18.6 KB","compressRate":"64.4%"},{"code":1,"isDone":false,"source":"https://cdn-images-1.medium.com/max/1024/1*-fAoOZ8reMn7qUK3EspZyg.png","sourceStatusCode":200,"destWidth":1024,"destHeight":819,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn61@2020_1/2021/05/19/14-57-27-400_e665a99e3cf41535.webp","sourceBytes":146052,"destBytes":41710,"targetWebpQuality":75,"feedId":290,"totalSpendMs":391,"convertSpendMs":32,"createdTime":"2021-05-19 22:57:27","host":"us-009*","referer":"https://medium.com/p/cd89b923c784","linkMd5ListStr":"30eb28cde31a86efd962ac5c0dba9e5c","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"142.6 KB","destSize":"40.7 KB","compressRate":"28.6%"},{"code":1,"isDone":false,"source":"https://cdn-images-1.medium.com/max/1024/1*oFsiKKHtAltaFUHKk_7j0w.png","sourceStatusCode":200,"destWidth":1024,"destHeight":743,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn53@2020_4/2021/05/19/14-57-27-355_1d1a1cdfea7ac423.webp","sourceBytes":136655,"destBytes":38964,"targetWebpQuality":75,"feedId":290,"totalSpendMs":425,"convertSpendMs":24,"createdTime":"2021-05-19 22:57:27","host":"us-034*","referer":"https://medium.com/p/cd89b923c784","linkMd5ListStr":"30eb28cde31a86efd962ac5c0dba9e5c","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"133.5 KB","destSize":"38.1 KB","compressRate":"28.5%"},{"code":1,"isDone":false,"source":"https://cdn-images-1.medium.com/max/1024/1*Qn5duKIDgu9HSU8O_OL2XQ.png","sourceStatusCode":200,"destWidth":1024,"destHeight":290,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn34@2020_5/2021/05/19/14-57-27-331_234c21e596b64cc8.webp","sourceBytes":77682,"destBytes":16222,"targetWebpQuality":75,"feedId":290,"totalSpendMs":487,"convertSpendMs":12,"createdTime":"2021-05-19 22:57:27","host":"us-030*","referer":"https://medium.com/p/cd89b923c784","linkMd5ListStr":"30eb28cde31a86efd962ac5c0dba9e5c","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"75.9 KB","destSize":"15.8 KB","compressRate":"20.9%"},{"code":1,"isDone":false,"source":"https://cdn-images-1.medium.com/max/431/1*8BlwxH4Rj8pztbYACRwWGA.png","sourceStatusCode":200,"destWidth":431,"destHeight":273,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn38@2020_6/2021/05/19/14-57-27-340_a7eddfa88154ebd4.webp","sourceBytes":15711,"destBytes":10638,"targetWebpQuality":75,"feedId":290,"totalSpendMs":503,"convertSpendMs":6,"createdTime":"2021-05-19 22:57:27","host":"us-017*","referer":"https://medium.com/p/cd89b923c784","linkMd5ListStr":"30eb28cde31a86efd962ac5c0dba9e5c","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"15.3 KB","destSize":"10.4 KB","compressRate":"67.7%"},{"code":1,"isDone":false,"source":"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=cd89b923c784","sourceStatusCode":200,"destWidth":1,"destHeight":1,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn41@2020_6/2021/05/19/14-57-27-612_5b5fdefce10c8d37.webp","sourceBytes":43,"destBytes":72,"targetWebpQuality":75,"feedId":290,"totalSpendMs":590,"convertSpendMs":1,"createdTime":"2021-05-19 22:57:27","host":"us-005*","referer":"https://medium.com/p/cd89b923c784","linkMd5ListStr":"30eb28cde31a86efd962ac5c0dba9e5c","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"43 B","destSize":"72 B","compressRate":"167.4%"},{"code":1,"isDone":false,"source":"https://cdn-images-1.medium.com/max/848/1*_pbBaQmaCNphR2MitJIjDQ.png","sourceStatusCode":200,"destWidth":848,"destHeight":422,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn66@2020_4/2021/05/19/14-57-27-517_217f2f6052698b07.webp","sourceBytes":33228,"destBytes":19618,"targetWebpQuality":75,"feedId":290,"totalSpendMs":784,"convertSpendMs":12,"createdTime":"2021-05-19 22:57:27","host":"europe-22*","referer":"https://medium.com/p/cd89b923c784","linkMd5ListStr":"30eb28cde31a86efd962ac5c0dba9e5c","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"32.4 KB","destSize":"19.2 KB","compressRate":"59%"},{"code":1,"isDone":false,"source":"https://cdn-images-1.medium.com/max/520/1*bmNmCSwr-EQJ67ohBZLOCg.png","sourceStatusCode":200,"destWidth":520,"destHeight":282,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn50@2020_3/2021/05/19/14-57-27-513_a6cda5c38e5da06e.webp","sourceBytes":19514,"destBytes":17420,"targetWebpQuality":75,"feedId":290,"totalSpendMs":922,"convertSpendMs":8,"createdTime":"2021-05-19 22:57:27","host":"europe-56*","referer":"https://medium.com/p/cd89b923c784","linkMd5ListStr":"30eb28cde31a86efd962ac5c0dba9e5c","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"19.1 KB","destSize":"17 KB","compressRate":"89.3%"},{"code":1,"isDone":false,"source":"https://cdn-images-1.medium.com/max/1024/1*nQAmn2xNrp51H89JpyQJqg.gif","sourceStatusCode":200,"destWidth":1440,"destHeight":810,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn45@2020_5/2021/05/19/14-57-54-732_a79aac8762bfb8bb.webp","sourceBytes":7739860,"destBytes":3536508,"targetWebpQuality":52,"feedId":290,"totalSpendMs":28453,"convertSpendMs":27122,"createdTime":"2021-05-19 22:57:27","host":"europe68*","referer":"https://medium.com/p/cd89b923c784","linkMd5ListStr":"30eb28cde31a86efd962ac5c0dba9e5c","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"7.4 MB","destSize":"3.4 MB","compressRate":"45.7%"}],"successGithubMap":{"myreaderx6":1,"myreaderx16":1,"myreaderx21":1,"myreaderx32":1,"myreaderx12":1,"myreaderx24":1,"myreaderx30":1,"myreaderx18":1,"myreaderx19":1,"myreaderx":1},"failGithubMap":{}}