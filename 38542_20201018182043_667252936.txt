{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-10-19 02:18:39","updatedTime":"2020-10-19 02:18:39","title":"An Introduction to Hardware Hacking","link":"http://18.130.251.17/?p=242","description":"<h2>Introduction</h2> \n<p>I’m currently writing up a series on hardware hacking fundamentals, and before I get into the specifics – I thought it sensible to add a piece on <em>why</em> hardware security is important and to lay out the major themes of what I’ll be discussing.</p> \n<span id=\"more-242\"></span> \n<p>Firstly, with physical devices, the attackers have more options when it comes to attacking the devices and it should be noted that breaking a specific device might not be the final aim. As an attacker over the internet, I only have exposed network services to “play” with, but if I’m testing a physical device the attack surface can be much wider. With options including network services, radio frequency input/output, on-chip debugging, exposed serial ports, memory extraction, etc, etc.</p> \n<p>Additionally, once I’ve broken the device I have physical access to I may be able to use the discovered vulnerabilities (or extracted access keys) to compromise other devices. In fact, that’s kind of the point.</p> \n<p>Pulling apart each device to gain root access to it is not really a viable plan, but compromising one device and using the information gained the compromise all the devices, is well…a lot better for the attacker.</p> \n<p>But I mentioned lots of things a second ago and then walked on past them, so let’s take a quick look at terminology, and a little bit of the attack surface:</p> \n<h2>Attack Surface</h2> \n<h3>Network Services</h3> \n<p>Exposed services on the device can of course be compromised, and there’s not really a lot to add here other than we consider all of the issues discussed under the categories of <a href=\"http://18.130.251.17/category/web-application/\">Web Application</a> and <a href=\"http://18.130.251.17/category/infrastructure/\">Infrastructure</a> vulnerabilities.</p> \n<p>This could be something as simple as outdated software, or as complicated as blind command injection. </p> \n<p>However it’s worth pointing out that one (hardware hacking) can inform the other (web app hacking). For example, a command injection vulnerability in the administrative interface of a device is a great thing, and having access to the source code of an application can make it easier to find those, and hardware hacking techniques can lead to source code extraction from a device.</p> \n<h3>Radio Frequency Input/Output</h3> \n<p>Devices don’t only communicate over cables, or common communication protocols like WiFi, there are <em>other things</em> to play with! I’m reminded of a <a href=\"https://www.youtube.com/watch?v=0JzORzMnm-E\">great talk</a> by Natalie “Natashenka” Silvanovich back in around 2013 where she discussed hardware hacking Tamagotchi. If you haven’t seen that talk, I recommend it as a fun way into the major themes of hardware hacking. She mentions that Tamagotchi also have Infrared (IR) communications and that it is a possible attack vector.</p> \n<p>In the context of hardware hacking you might come across BLE (Bluetooth Low Energy), ZigBee, FM RDS. Attacking RF communications can be achieved with an SDR – a Software-defined Radio. </p> \n<p>You might also see the term USRP<img src=\"https://s.w.org/images/core/emoji/13.0.0/72x72/2122.png\" alt=\"™\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" /> (Universal Software Radio Peripheral), which in short, is what Ettus call their SDR.</p> \n<p>These transceivers aren’t necassarily as large as you might expect; for example here’s a Ettus b200mini USRP (70MHz – 6GHz), minus its antennas: </p> \n<figure class=\"wp-block-image size-large\"> \n <img loading=\"lazy\" width=\"1024\" height=\"768\" src=\"https://gracefulsecurity.com/wp-content/uploads/2020/02/USRP-1024x768.jpg\" alt=\"\" class=\"wp-image-243\" srcset=\"https://gracefulsecurity.com/wp-content/uploads/2020/02/USRP-1024x768.jpg 1024w, https://gracefulsecurity.com/wp-content/uploads/2020/02/USRP-300x225.jpg 300w, https://gracefulsecurity.com/wp-content/uploads/2020/02/USRP-768x576.jpg 768w, https://gracefulsecurity.com/wp-content/uploads/2020/02/USRP.jpg 1080w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /> \n</figure> \n<h3>On-Chip Debugging</h3> \n<p>Many devices have on-board methods of testing them. I often hear people laugh at manufacturers for having these, especially where hackers have leveraged them to compromise a device – but they’re there for an important reason.</p> \n<p>If you’re manufacturing devices, which can be a fairly expensive process, it’d be great to have a method of testing these when they pop-off the far end of the assembly line. Was the complete manufacturing process successful or is this a batch of duds? What about if a customer returns some devices to you saying they’re broken – are they broken? <em>how</em> are they broken?</p> \n<p>On-board, or on-chip, interfaces that allow you to interact with the system can make those problems easier to deal with. But yes, they can make messing around with the systems internals and breaking security easier too.</p> \n<p>In this context we’re talking about things like “JTAGing”. JTAG (Joint Test Action Group) refers to a standard for verifying and testing devices; usually when it’s used in the context of hardware hacking you’ll hear things like “JTAG port”, which can be a little misleading.</p> \n<p>The JTAG standard (IEEE 1149.x) doesn’t define any kind of connector, it’s simply a standard that defines a serial protocol for interacting with chips. It can often be found internally as a group of pins set off to one side, but it could just as easily be exposed only by clipping into pins on the controller.</p> \n<p>Here’s an example of a JTAG, neatly exposed on a board as a set of connectors:</p> \n<figure class=\"wp-block-image size-large\"> \n <img loading=\"lazy\" width=\"1024\" height=\"576\" src=\"https://gracefulsecurity.com/wp-content/uploads/2020/02/JTAG-and-UART-1024x576.jpg\" alt=\"\" class=\"wp-image-205\" srcset=\"https://gracefulsecurity.com/wp-content/uploads/2020/02/JTAG-and-UART-1024x576.jpg 1024w, https://gracefulsecurity.com/wp-content/uploads/2020/02/JTAG-and-UART-300x169.jpg 300w, https://gracefulsecurity.com/wp-content/uploads/2020/02/JTAG-and-UART-768x432.jpg 768w, https://gracefulsecurity.com/wp-content/uploads/2020/02/JTAG-and-UART-1536x864.jpg 1536w, https://gracefulsecurity.com/wp-content/uploads/2020/02/JTAG-and-UART-1200x675.jpg 1200w, https://gracefulsecurity.com/wp-content/uploads/2020/02/JTAG-and-UART.jpg 1710w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /> \n <figcaption>\n   An example device showing a neat collection of pins for JTAG in red, and also a neat collection of pins for UART in yellow! \n </figcaption> \n</figure> \n<h3>Exposed Serial Ports (UART)</h3> \n<p>Serial connections or UART (Universal Asynchronous Receiver/Transmitter) are connections on-board which can allow you to see what the device is up to and sometimes supply it input. There term is generic for serial input-output, but often refers to a connection on a device which supplies text-based output.</p> \n<p>You can often hook into the device with a USB-to-UART and use a terminal emulator like PuTTY to interact with the running operating system or receive debugging output.</p> \n<h3>Memory Extraction</h3> \n<p>Many devices have storage chips on-board, which you may be able to extract the contents from. That doesn’t necessarily mean those contents will be unenciphered – so there may be additional work to do, such as extracting the encryption key.</p> \n<p>However sometimes you can access the storage chip, interact with it to dump its contents and then be able to look at the software the system runs – you might even be able to modify it directly – allowing you to change access key, expose services such as telnet/ssh, or disable firewalls such as iptables on embedded Linux systems.</p> \n<p>The post <a href=\"https://gracefulsecurity.com/an-introduction-to-hardware-hacking/\" target=\"_blank\">An Introduction to Hardware Hacking</a> first appeared on <a href=\"https://gracefulsecurity.com/\" target=\"_blank\">GracefulSecurity</a>.</p>","descriptionType":"html","publishedDate":"Sat, 16 Mar 2019 21:00:00 +0000","feedId":38542,"bgimg":"https://s.w.org/images/core/emoji/13.0.0/72x72/2122.png","linkMd5":"0d0f0fd61a6d3fe977bc2d420e7a4ba4","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn58@2020_1/2020/10/18/18-20-40-862_03be5e4393e715e0.webp","destWidth":72,"destHeight":72,"sourceBytes":613,"destBytes":1242,"author":"HollyGraceful","articleImgCdnMap":{"https://s.w.org/images/core/emoji/13.0.0/72x72/2122.png":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn58@2020_1/2020/10/18/18-20-40-862_03be5e4393e715e0.webp","https://gracefulsecurity.com/wp-content/uploads/2020/02/USRP-1024x768.jpg":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn66@2020_6/2020/10/18/18-20-42-363_c13d90720d0a99b4.webp","https://gracefulsecurity.com/wp-content/uploads/2020/02/JTAG-and-UART-1024x576.jpg":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn62@2020_6/2020/10/18/18-20-42-018_dc9947df43fa58f4.webp"},"publishedOrCreatedDate":1603045119259}],"record":{"createdTime":"2020-10-19 02:18:39","updatedTime":"2020-10-19 02:18:39","feedId":38542,"fetchDate":"Sun, 18 Oct 2020 18:18:39 +0000","fetchMs":1097,"handleMs":14,"totalMs":125296,"newArticles":0,"totalArticles":10,"status":1,"type":0,"ip":"8c6c16c7600d6b411627dac06cbaa89a","hostName":"us-52*","requestId":"d6330be1707b4c55b74640c7eaf6f4ea_38542","contentType":"application/rss+xml; charset=UTF-8","totalBytes":123654,"bgimgsTotal":1,"bgimgsGithubTotal":1,"articlesImgsTotal":3,"articlesImgsGithubTotal":3,"successGithubMap":{"myreaderx33":1,"myreaderx2":1,"myreaderx12":1},"failGithubMap":{}},"feed":{"createdTime":"2020-09-07 03:14:28","updatedTime":"2020-09-07 05:29:49","id":38542,"name":"GracefulSecurity","url":"https://www.gracefulsecurity.com/feed/","subscriber":83,"website":null,"icon":"https://gracefulsecurity.com/favicon.ico","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx63/cdn51@2020_5/2020/09/06/21-29-48-565_efa7f8a14ab972d4.png","description":"","weekly":null,"link":null},"noPictureArticleList":[],"tmpCommonImgCdnBytes":1242,"tmpBodyImgCdnBytes":122412,"tmpBgImgCdnBytes":0,"extra4":{"start":1603045118066,"total":0,"statList":[{"spend":1179,"msg":"获取xml内容"},{"spend":14,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":1742,"msg":"正文链接上传到cdn"}]},"extra5":3,"extra6":3,"extra7ImgCdnFailResultVector":[],"extra10_invalidATagHrefValue":{"http://18.130.251.17/?p=242_/category/web-application/":"http://18.130.251.17/category/web-application/","http://18.130.251.17/?p=242_/category/infrastructure/":"http://18.130.251.17/category/infrastructure/"},"extra111_proxyServerAndStatMap":{"http://europe64.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-51.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://s.w.org/images/core/emoji/13.0.0/72x72/2122.png","sourceStatusCode":200,"destWidth":72,"destHeight":72,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn58@2020_1/2020/10/18/18-20-40-862_03be5e4393e715e0.webp","sourceBytes":613,"destBytes":1242,"targetWebpQuality":75,"feedId":38542,"totalSpendMs":810,"convertSpendMs":4,"createdTime":"2020-10-19 02:20:40","host":"us-001*","referer":"http://18.130.251.17/?p=242","linkMd5ListStr":"0d0f0fd61a6d3fe977bc2d420e7a4ba4,0d0f0fd61a6d3fe977bc2d420e7a4ba4","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"613 B","destSize":"1.2 KB","compressRate":"202.6%"},{"code":1,"isDone":false,"source":"https://gracefulsecurity.com/wp-content/uploads/2020/02/USRP-1024x768.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn66@2020_6/2020/10/18/18-20-42-363_c13d90720d0a99b4.webp","sourceBytes":85829,"destBytes":36234,"targetWebpQuality":75,"feedId":38542,"totalSpendMs":1601,"convertSpendMs":32,"createdTime":"2020-10-19 02:20:41","host":"us-51*","referer":"http://18.130.251.17/?p=242","linkMd5ListStr":"0d0f0fd61a6d3fe977bc2d420e7a4ba4","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"83.8 KB","destSize":"35.4 KB","compressRate":"42.2%"},{"code":1,"isDone":false,"source":"https://gracefulsecurity.com/wp-content/uploads/2020/02/JTAG-and-UART-1024x576.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":576,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn62@2020_6/2020/10/18/18-20-42-018_dc9947df43fa58f4.webp","sourceBytes":119890,"destBytes":86178,"targetWebpQuality":75,"feedId":38542,"totalSpendMs":1591,"convertSpendMs":25,"createdTime":"2020-10-19 02:20:41","host":"europe64*","referer":"http://18.130.251.17/?p=242","linkMd5ListStr":"0d0f0fd61a6d3fe977bc2d420e7a4ba4","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"117.1 KB","destSize":"84.2 KB","compressRate":"71.9%"}],"successGithubMap":{"myreaderx33":1,"myreaderx2":1,"myreaderx12":1},"failGithubMap":{}}