{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-08-25 08:09:39","updatedTime":"2020-08-25 08:09:39","title":"Getting to the Bottom of Noether's Theorem","link":"https://golem.ph.utexas.edu/category/2020/06/getting_to_the_bottom_of_noeth.html","description":"\r\n      <div xmlns=\"http://www.w3.org/1999/xhtml\">\r\n<div><a href=\"http://golem.ph.utexas.edu/~distler/blog/mathml.html\"><img class=\"mathlogo\" src=\"https://golem.ph.utexas.edu/~distler/blog/images/MathML.png\" alt=\"MathML-enabled post (click for more details).\" title=\"MathML-enabled post (click for details).\" /></a></div>\r\n\r\n<p>Most of us have been staying holed up at home lately.  I spent the last month holed up writing a paper that expands on my talk at a conference honoring <a href=\"https://philosophy.nd.edu/news/events/noether/\">the centennial of Noether’s 1918 paper on symmetries and conservation laws</a>.  This made my confinement a lot more bearable.  It was good getting back to this sort of mathematical physics after a long time spent on applied category theory.  It turns out I really missed it.</p>\r\n\r\n<p>While everyone at the conference kept emphasizing that Noether’s 1918 paper had <em>two</em> big theorems in it, my paper is just about the easy one—the one physicists call Noether’s theorem:</p>\r\n\r\n<ul>\r\n<li><a href=\"http://math.ucr.edu/home/baez/noether_theorem.pdf\">Getting to the bottom of Noether’s theorem</a>.</li>\r\n</ul>\r\n\r\n<div><a href=\"http://golem.ph.utexas.edu/~distler/blog/mathml.html\"><img class=\"mathlogo\" src=\"https://golem.ph.utexas.edu/~distler/blog/images/MathML.png\" alt=\"MathML-enabled post (click for more details).\" title=\"MathML-enabled post (click for details).\" /></a></div>\r\n\r\n<p>People often summarize this theorem by saying “symmetries give conservation laws”.   And that’s right, but it’s only true under some assumptions: for example, that the equations of motion come from a Lagrangian.</p>\r\n\r\n<p>This leads to some interesting questions.  <i>For which types of physical theories do symmetries give conservation laws?  What are we assuming about the world, if we assume it is described by a theories of this type?</i>  It’s hard to get to the bottom of these questions, but it’s worth trying.</p>\r\n\r\n<p>We can prove versions of Noether’s theorem relating symmetries to conserved quantities in many frameworks.  While a differential geometric framework is truer to Noether’s original vision, my paper studies the theorem <i>algebraically</i>, without mentioning Lagrangians.</p>\r\n\r\n<p>Now, Atiyah said:</p>\r\n\r\n<blockquote>\r\n  <p>…algebra is to the geometer what you might call the Faustian offer. As you know, Faust in Goethe’s story was offered whatever he wanted (in his case the love of a beautiful woman), by the devil, in return for selling his soul. Algebra is the offer made by the devil to the mathematician. The devil says: I will give you this powerful machine, it will answer any question you like. All you need to do is give me your soul: give up geometry and you will have this marvellous machine.</p>\r\n</blockquote>\r\n\r\n<p>While this is sometimes true, algebra is more than a computational tool: it allows us to express concepts in a very clear and distilled way.   Furthermore, the geometrical framework developed for classical mechanics is not sufficient for quantum mechanics.   An algebraic approach emphasizes the similarity between classical and quantum mechanics, clarifying their differences.</p>\r\n\r\n<p>In talking about Noether’s theorem I keep using an interlocking trio of important concepts used to describe physical systems: ‘states’, ‘observables’ and `generators’.    A physical system has a convex set of states, where convex linear combinations let us describe probabilistic mixtures of states.    An observable is a real-valued quantity whose value depends—perhaps with some randomness—on the state.  More precisely: an observable maps each state to a probability measure on the real line.  A generator, on the other hand, is something that gives rise to a one-parameter group of transformations of the set of states—or dually, of the set of observables.</p>\r\n\r\n<p>It’s easy to mix up observables and generators, but I want to distinguish them.  When we say ‘the energy of the system is 7 joules’, we are treating energy as an observable: something you can measure.   When we say ‘the Hamiltonian generates time translations’, we are treating the Hamiltonian as a generator.</p>\r\n\r\n<p>In both classical mechanics and ordinary complex quantum mechanics we usually say the Hamiltonian <i>is</i> the energy, because we have a way to identify them.   But  observables and generators play distinct roles—and in some theories, such as real or quaternionic quantum mechanics, they are truly different.   In all the theories I consider in my paper the set of observables is a <a href=\"http://math.ucr.edu/home/baez/diary/june_2020.html#june_28\">Jordan algebra</a>, while the set of generators is a <a href=\"http://math.ucr.edu/home/baez/diary/june_2020.html#june_24\">Lie algebra</a>.  (Don’t worry, I explain what those are.)</p>\r\n\r\n<p>When we can identify observables with generators, we can state Noether’s theorem as the following equivalence:</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>The</mi><mspace width=\"0.27778em\" /><mi>generator</mi><mspace width=\"0.27778em\" /><mi>a</mi><mspace width=\"0.27778em\" /><mi>generates</mi><mspace width=\"0.27778em\" /><mi>transformations</mi><mspace width=\"0.27778em\" /><mi>that</mi><mspace width=\"0.27778em\" /><mi>leave</mi><mspace width=\"0.27778em\" /><mi>the</mi><mi>observable</mi><mspace width=\"0.27778em\" /><mi>b</mi><mspace width=\"0.27778em\" /><mi>fixed</mi><mspace width=\"-0.16667em\" /><mo>.</mo></mrow><annotation encoding=\"application/x-tex\"> The \\;  generator \\; a \\; generates \\; transformations \\; that \\; leave \\; the\r\nobservable \\; b \\; fixed\\!.</annotation></semantics></math></p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo>⇕</mo></mrow><annotation encoding=\"application/x-tex\">\\Updownarrow</annotation></semantics></math></p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>The</mi><mspace width=\"0.27778em\" /><mi>generator</mi><mspace width=\"0.27778em\" /><mi>b</mi><mspace width=\"0.27778em\" /><mi>generates</mi><mspace width=\"0.27778em\" /><mi>transformations</mi><mspace width=\"0.27778em\" /><mi>that</mi><mspace width=\"0.27778em\" /><mi>leave</mi><mspace width=\"0.27778em\" /><mi>the</mi><mspace width=\"0.27778em\" /><mi>observable</mi><mspace width=\"0.27778em\" /><mi>a</mi><mspace width=\"0.27778em\" /><mi>fixed</mi><mspace width=\"-0.16667em\" /><mo>.</mo></mrow><annotation encoding=\"application/x-tex\">The \\; generator \\; b \\; generates \\; transformations \\; that \\; leave \\; the \\; observable \\; a \\; fixed\\!.</annotation></semantics></math></p>\r\n\r\n<p>In this beautifully symmetrical statement, we switch from thinking of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">a</annotation></semantics></math> as the generator and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">b</annotation></semantics></math> as the observable in the first part to thinking of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">b</annotation></semantics></math> as the generator and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">a</annotation></semantics></math> as the observable in the second part.   Of course, this statement is <i>true</i> only under some conditions, and the goal of my paper is to better understand these conditions.  But the most fundamental condition, I claim, is the ability to identify\r\nobservables with generators.</p>\r\n\r\n<p>In classical mechanics we treat observables as being <i>the same</i> as generators, by treating them as elements of a <a href=\"https://en.wikipedia.org/wiki/Poisson_algebra\">Poisson algebra</a>, which is both a Jordan algebra and a Lie algebra.   In quantum mechanics observables are not quite the same as generators.  They are both elements of something called a <a href=\"https://en.wikipedia.org/wiki/*-algebra\">∗-algebra</a>. Observables are self-adjoint, obeying</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msup><mi>a</mi> <mo>*</mo></msup><mo>=</mo><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">a^* = a</annotation></semantics></math></p>\r\n\r\n<p>while generators are skew-adjoint, obeying</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msup><mi>a</mi> <mo>*</mo></msup><mo>=</mo><mo lspace=\"0.11111em\" rspace=\"0em\">−</mo><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">a^* = -a</annotation></semantics></math></p>\r\n\r\n<p>The self-adjoint elements form a Jordan algebra, while the skew-adjoint elements form a Lie algebra.</p>\r\n\r\n<p>In ordinary complex quantum mechanics we use a <i>complex</i> ∗-algebra.   This lets us turn any self-adjoint element into a skew-adjoint one by multiplying it by <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msqrt><mrow><mo lspace=\"0.11111em\" rspace=\"0em\">−</mo><mn>1</mn></mrow></msqrt></mrow><annotation encoding=\"application/x-tex\">\\sqrt{-1}</annotation></semantics></math>.    Thus, the complex numbers let us identify observables with generators!  In real and quaternionic quantum mechanics this identification is impossible, so the appearance of complex numbers in quantum mechanics is closely connected to Noether’s theorem.</p>\r\n\r\n<p>In short, classical mechanics and ordinary complex quantum mechanics fit together in this sort of picture:</p>\r\n\r\n<p><img src=\"https://johncarlosbaez.files.wordpress.com/2020/06/classical_and_quantum_mechanics.png\" width=\"500\" alt=\"\" /></p>\r\n\r\n<p>To dig deeper, it’s good to examine generators on their own: that is, Lie algebras.   Lie algebras arise very naturally from the concept of ‘symmetry’.  Any Lie group gives rise to a Lie algebra, and any element of this Lie algebra then generates a one-parameter family of transformations of that very same Lie algebra.   This lets us state a version of Noether’s theorem solely in terms of generators:</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>The</mi><mspace width=\"0.27778em\" /><mi>generator</mi><mspace width=\"0.27778em\" /><mi>a</mi><mspace width=\"0.27778em\" /><mi>generates</mi><mspace width=\"0.27778em\" /><mi>transformations</mi><mspace width=\"0.27778em\" /><mi>that</mi><mspace width=\"0.27778em\" /><mi>leave</mi><mspace width=\"0.27778em\" /><mi>the</mi><mspace width=\"0.27778em\" /><mi>generator</mi><mspace width=\"0.27778em\" /><mi>b</mi><mi>fixed</mi><mspace width=\"-0.16667em\" /><mo>.</mo></mrow><annotation encoding=\"application/x-tex\">The \\; generator \\; a \\; generates \\; transformations \\; that \\; leave \\; the \\; generator \\; b fixed\\!.</annotation></semantics></math></p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo>⇕</mo></mrow><annotation encoding=\"application/x-tex\">\\Updownarrow </annotation></semantics></math></p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>The</mi><mspace width=\"0.27778em\" /><mi>generator</mi><mspace width=\"0.27778em\" /><mi>b</mi><mspace width=\"0.27778em\" /><mi>generates</mi><mspace width=\"0.27778em\" /><mi>transformations</mi><mspace width=\"0.27778em\" /><mi>that</mi><mspace width=\"0.27778em\" /><mi>leave</mi><mspace width=\"0.27778em\" /><mi>the</mi><mspace width=\"0.27778em\" /><mi>generator</mi><mspace width=\"0.27778em\" /><mi>a</mi><mspace width=\"0.27778em\" /><mi>fixed</mi><mspace width=\"-0.16667em\" /><mo>.</mo></mrow><annotation encoding=\"application/x-tex\"> The \\; generator \\; b \\; generates \\; transformations \\; that \\; leave \\; the \\; generator \\; a \\; fixed\\!.</annotation></semantics></math></p>\r\n\r\n<p>And when we translate these statements into equations, their equivalence follows directly from this elementary property of the Lie bracket:</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>a</mi><mo>,</mo><mi>b</mi><mo stretchy=\"false\">]</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">[a,b] = 0</annotation></semantics></math></p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo>⇕</mo></mrow><annotation encoding=\"application/x-tex\">\\Updownarrow </annotation></semantics></math></p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>b</mi><mo>,</mo><mi>a</mi><mo stretchy=\"false\">]</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">[b,a] = 0</annotation></semantics></math></p>\r\n\r\n<p>Thus, Noether’s theorem is almost automatic <i>if</i> we forget about observables and work solely with generators.  The only questions left are: <i>why should symmetries be described by Lie groups</i>, and <i>what is the meaning of this property of the Lie bracket?</i></p>\r\n\r\n<p>In my paper I tackle both these questions, and point out that the Lie algebra formulation of Noether’s theorem comes from a more primitive <i>group</i> formulation, which says that whenever you have two group elements <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">g</annotation></semantics></math> and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>h</mi></mrow><annotation encoding=\"application/x-tex\">h</annotation></semantics></math>,</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>g</mi><mspace width=\"0.27778em\" /><mi>commutes</mi><mspace width=\"0.27778em\" /><mi>with</mi><mi>h</mi><mspace width=\"-0.16667em\" /><mo>.</mo></mrow><annotation encoding=\"application/x-tex\">g \\; commutes \\; with h\\!. </annotation></semantics></math> </p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo>⇕</mo></mrow><annotation encoding=\"application/x-tex\">\\Updownarrow </annotation></semantics></math></p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>h</mi><mspace width=\"0.27778em\" /><mi>commutes</mi><mspace width=\"0.27778em\" /><mi>with</mi><mspace width=\"0.27778em\" /><mi>g</mi><mspace width=\"-0.16667em\" /><mo>.</mo></mrow><annotation encoding=\"application/x-tex\">h \\; commutes \\; with \\; g\\!.</annotation></semantics></math></p>\r\n\r\n<p>That is: whenever you’ve got two ways of transforming a physical system, the first transformation is ‘conserved’ by second if and only if the second is conserved by the first!</p>\r\n\r\n<p>However, observables are crucial in physics.  Working solely with generators in order to make Noether’s theorem a tautology would be another sort of Faustian bargain.  So, to really get to the bottom of Noether’s theorem, we need to understand the map from observables to generators.  In ordinary quantum mechanics this comes from multiplication by <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math>.  But this just pushes the mystery back a notch: <i>why should we be using the complex numbers in quantum mechanics?</i></p>\r\n\r\n<p>For this it’s good to spend some time examining observables on their own: that is, Jordan algebras.   Those of greatest importance in physics are the <a href=\"https://ncatlab.org/nlab/show/Jordan-Banach+algebra\">unital JB-algebras</a>, which are unfortunately named not after me, but Jordan and Banach.   These allow a unified approach to real, complex and quaternionic quantum mechanics, along with some more exotic theories.  So, they let us study how the role of complex numbers in quantum mechanics is connected to Noether’s theorem.</p>\r\n\r\n<p>Any unital JB-algebra <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>O</mi></mrow><annotation encoding=\"application/x-tex\">O</annotation></semantics></math> has a partial ordering: that is, we can talk about one observable being greater than or equal to another.  With the help of this we can define states on <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>O</mi><mo>,</mo></mrow><annotation encoding=\"application/x-tex\">O,</annotation></semantics></math> and prove that any observable maps each state to a probability measure on the real line.</p>\r\n\r\n<p>More surprisingly, any JB-algebra also gives rise to <i>two</i> Lie algebras.  The smaller of these, say <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>L</mi><mo>,</mo></mrow><annotation encoding=\"application/x-tex\">L,</annotation></semantics></math> has elements that generate transformations of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>O</mi></mrow><annotation encoding=\"application/x-tex\">O</annotation></semantics></math> that preserve all the structure of this unital JB-algebra.   They also act on the set of states.  Thus, elements of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>L</mi></mrow><annotation encoding=\"application/x-tex\">L</annotation></semantics></math> truly deserve to be considered ‘generators’.</p>\r\n\r\n<p>In a unital JB-algebra there is not always a way to reinterpret observables as generators.  However, <a href=\"https://www.pnas.org/content/95/12/6596\">Alfsen and Shultz</a> have defined the notion of a ‘dynamical correspondence’ for such an algebra, which is a well-behaved map</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>ψ</mi><mo lspace=\"0.11111em\">:</mo><mi>O</mi><mo>→</mo><mi>L</mi></mrow><annotation encoding=\"application/x-tex\">\\psi \\colon O \\to L</annotation></semantics></math></p>\r\n\r\n<p>One of the two conditions they impose on this map implies a version of Noether’s theorem. They prove that any JB-algebra with a dynamical correspondence gives a complex ∗-algebra where the observables are self-adjoint elements, the generators are skew-adjoint, and we can convert observables into generators by multiplying them by <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math>.</p>\r\n\r\n<p>This result is important, because the definition of JB-algebra does not involve the complex numbers, nor does the concept of dynamical correspondence.  Rather, the role of the complex numbers in quantum mechanics <i>emerges</i> from a map from observables to generators that obeys conditions including Noether’s theorem!</p>\r\n\r\n<p>To be a bit more precise, Alfsen and Shultz’s first condition on the map <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>ψ</mi><mo lspace=\"0.11111em\">:</mo><mi>O</mi><mo>→</mo><mi>L</mi></mrow><annotation encoding=\"application/x-tex\">\\psi \\colon O \\to L</annotation></semantics></math> says that every observable <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>a</mi><mo>∈</mo><mi>O</mi></mrow><annotation encoding=\"application/x-tex\">a \\in O</annotation></semantics></math> generates transformations that leave <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">a</annotation></semantics></math> itself fixed.   I call this the <b>self-conservation principle</b>.   It implies Noether’s theorem.</p>\r\n\r\n<p>However, in their definition of dynamical correspondence, Alfsen and Shultz also impose a second, more mysterious condition on the map <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>ψ</mi></mrow><annotation encoding=\"application/x-tex\">\\psi</annotation></semantics></math>.   I claim that that this condition is best understood in terms of the larger Lie algebra associated to a unital JB-algebra.  As a vector space this is the direct sum</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>A</mi><mo>=</mo><mi>O</mi><mo>⊕</mo><mi>L</mi></mrow><annotation encoding=\"application/x-tex\">A = O \\oplus L</annotation></semantics></math></p>\r\n\r\n<p>but it’s equipped with a Lie bracket such that</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo stretchy=\"false\">[</mo><mo lspace=\"0.11111em\" rspace=\"0em\">−</mo><mo>,</mo><mo lspace=\"0.11111em\" rspace=\"0em\">−</mo><mo stretchy=\"false\">]</mo><mo lspace=\"0.11111em\">:</mo><mi>L</mi><mo>×</mo><mi>L</mi><mo>→</mo><mi>L</mi><mspace width=\"2em\" /><mo stretchy=\"false\">[</mo><mo lspace=\"0.11111em\" rspace=\"0em\">−</mo><mo>,</mo><mo lspace=\"0.11111em\" rspace=\"0em\">−</mo><mo stretchy=\"false\">]</mo><mo lspace=\"0.11111em\">:</mo><mi>L</mi><mo>×</mo><mi>O</mi><mo>→</mo><mi>O</mi></mrow><annotation encoding=\"application/x-tex\"> [-,-] \\colon L \\times L \\to L    \\qquad [-,-] \\colon L \\times O \\to O </annotation></semantics></math></p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo stretchy=\"false\">[</mo><mo lspace=\"0.11111em\" rspace=\"0em\">−</mo><mo>,</mo><mo lspace=\"0.11111em\" rspace=\"0em\">−</mo><mo stretchy=\"false\">]</mo><mo lspace=\"0.11111em\">:</mo><mi>O</mi><mo>×</mo><mi>L</mi><mo>→</mo><mi>O</mi><mspace width=\"2em\" /><mo stretchy=\"false\">[</mo><mo lspace=\"0.11111em\" rspace=\"0em\">−</mo><mo>,</mo><mo lspace=\"0.11111em\" rspace=\"0em\">−</mo><mo stretchy=\"false\">]</mo><mo lspace=\"0.11111em\">:</mo><mi>O</mi><mo>×</mo><mi>O</mi><mo>→</mo><mi>L</mi></mrow><annotation encoding=\"application/x-tex\"> [-,-] \\colon O \\times L \\to O    \\qquad [-,-] \\colon O \\times O \\to L </annotation></semantics></math></p>\r\n\r\n<p>As I mentioned, elements of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>L</mi></mrow><annotation encoding=\"application/x-tex\">L</annotation></semantics></math> generate transformations of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>O</mi></mrow><annotation encoding=\"application/x-tex\">O</annotation></semantics></math> that preserve all the structure on this unital JB-algebra.   Elements of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>O</mi></mrow><annotation encoding=\"application/x-tex\">O</annotation></semantics></math> also generate transformations of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>O</mi><mo>,</mo></mrow><annotation encoding=\"application/x-tex\">O,</annotation></semantics></math> but these only preserve its vector space structure and partial ordering.</p>\r\n\r\n<p>What’s the meaning of these other transformations?  I claim they’re connected to <i>statistical</i> mechanics.</p>\r\n\r\n<p>For example, consider ordinary quantum mechanics and let <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>O</mi></mrow><annotation encoding=\"application/x-tex\">O</annotation></semantics></math> be the unital JB-algebra of all bounded self-adjoint operators on a complex Hilbert space.  Then <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>L</mi></mrow><annotation encoding=\"application/x-tex\">L</annotation></semantics></math> is the Lie algebra of all bounded skew-adjoint operators on this Hilbert space. There is a dynamical correpondence sending any observable <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>H</mi><mo>∈</mo><mi>O</mi></mrow><annotation encoding=\"application/x-tex\">H \\in O</annotation></semantics></math> to the generator <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>ψ</mi><mo stretchy=\"false\">(</mo><mi>H</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>i</mi><mi>H</mi><mo>∈</mo><mi>L</mi><mo>,</mo></mrow><annotation encoding=\"application/x-tex\">\\psi(H) = i H \\in L,</annotation></semantics></math> which then generates a one-parameter group of transformations of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>O</mi></mrow><annotation encoding=\"application/x-tex\">O</annotation></semantics></math> like this:</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>a</mi><mo>↦</mo><msup><mi>e</mi> <mrow><mi>i</mi><mi>t</mi><mi>H</mi><mo stretchy=\"false\">/</mo><mi>ℏ</mi></mrow></msup><mspace width=\"0.16667em\" /><mi>a</mi><mspace width=\"0.16667em\" /><msup><mi>e</mi> <mrow><mo lspace=\"0.11111em\" rspace=\"0em\">−</mo><mi>i</mi><mi>t</mi><mi>H</mi><mo stretchy=\"false\">/</mo><mi>ℏ</mi></mrow></msup><mspace width=\"2em\" /><mo>∀</mo><mi>t</mi><mo>∈</mo><mi>ℝ</mi><mo>,</mo><mi>a</mi><mo>∈</mo><mi>O</mi></mrow><annotation encoding=\"application/x-tex\">     a \\mapsto e^{i t H/\\hbar} \\, a \\, e^{-i t H/\\hbar}  \\qquad \\forall t \\in \\mathbb{R}, a \\in O</annotation></semantics></math></p>\r\n\r\n<p>where <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>ℏ</mi></mrow><annotation encoding=\"application/x-tex\">\\hbar</annotation></semantics></math> is Planck’s constant.  If <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>H</mi></mrow><annotation encoding=\"application/x-tex\">H</annotation></semantics></math> is the Hamiltonian of some system, this is the usual formula for time evolution of observables in the Heisenberg picture.   But <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>H</mi></mrow><annotation encoding=\"application/x-tex\">H</annotation></semantics></math> also generates a one-parameter group of transformations of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>O</mi></mrow><annotation encoding=\"application/x-tex\">O</annotation></semantics></math> as follows:</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>a</mi><mo>↦</mo><msup><mi>e</mi> <mrow><mo lspace=\"0.11111em\" rspace=\"0em\">−</mo><mi>β</mi><mi>H</mi><mo stretchy=\"false\">/</mo><mn>2</mn></mrow></msup><mspace width=\"0.16667em\" /><mi>a</mi><mspace width=\"0.16667em\" /><msup><mi>e</mi> <mrow><mo lspace=\"0.11111em\" rspace=\"0em\">−</mo><mi>β</mi><mi>H</mi><mo stretchy=\"false\">/</mo><mn>2</mn></mrow></msup><mspace width=\"2em\" /><mo>∀</mo><mi>β</mi><mo>∈</mo><mi>ℝ</mi><mo>,</mo><mi>a</mi><mo>∈</mo><mi>O</mi></mrow><annotation encoding=\"application/x-tex\">         a \\mapsto  e^{-\\beta H/2} \\, a \\, e^{-\\beta H/2}  \\qquad \\forall \\beta \\in \\mathbb{R}, a \\in O </annotation></semantics></math></p>\r\n\r\n<p>Writing <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>β</mi><mo>=</mo><mn>1</mn><mo stretchy=\"false\">/</mo><mi>k</mi><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">\\beta = 1/k T</annotation></semantics></math> where <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">T</annotation></semantics></math> is temperature and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math> is Boltzmann’s constant, I claim that these are ‘thermal transformations’.  Acting on a state in thermal equilibrium at some temperature, these transformations produce states in thermal equilibrium at other temperatures (up to normalization).</p>\r\n\r\n<p>The analogy between <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>i</mi><mi>t</mi><mo stretchy=\"false\">/</mo><mi>ℏ</mi></mrow><annotation encoding=\"application/x-tex\">i t/\\hbar</annotation></semantics></math> and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mn>1</mn><mo stretchy=\"false\">/</mo><mi>k</mi><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">1/k T</annotation></semantics></math> is often summarized by saying “inverse temperature is imaginary time”.   The second condition in Alfsen and Shultz’s definition of dynamical correspondence is a way of capturing this principle in a way that does not explicitly mention the complex numbers.  Thus, we may <i>very roughly</i> say their result explains the role of complex numbers in quantum mechanics starting from three assumptions:</p>\r\n\r\n<ul>\r\n<li><p>observables form Jordan algebra of a nice sort (a unital JB-algebra)</p></li>\r\n<li><p>the self-conservation principle (and thus Noether’s theorem)</p></li>\r\n<li><p>the relation between time and inverse temperature.</p></li>\r\n</ul>\r\n\r\n<p>I still want to understand all of this more deeply, but the way statistical mechanics entered the game was surprising to me, so I feel I made a little progress.</p>\r\n\r\n<p>I hope the paper is half as fun to read as it was to write!  There’s a lot more in it than described here.</p>\r\n\r\n      </div>\r\n    ","descriptionType":"xhtml","publishedDate":"Mon, 29 Jun 2020 22:21:10 +0000","feedId":8914,"bgimg":"https://golem.ph.utexas.edu/~distler/blog/images/MathML.png","linkMd5":"640905b7b29c4b88755437bd6d0ba4de","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn27@2020_2/2020/08/25/00-09-56-839_3e27bbc676e8d5d2.webp","destWidth":65,"destHeight":36,"sourceBytes":3238,"destBytes":1426,"author":"john","articleImgCdnMap":{"https://golem.ph.utexas.edu/~distler/blog/images/MathML.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn27@2020_2/2020/08/25/00-09-56-839_3e27bbc676e8d5d2.webp","https://johncarlosbaez.files.wordpress.com/2020/06/classical_and_quantum_mechanics.png":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn20@2020_1/2020/08/25/00-09-58-339_1be008d02b91be35.webp"},"publishedOrCreatedDate":1598314179548},{"createdTime":"2020-08-25 08:09:39","updatedTime":"2020-08-25 08:09:39","title":"The Group With No Elements","link":"https://golem.ph.utexas.edu/category/2020/08/the_group_with_no_elements.html","description":"\r\n      <div xmlns=\"http://www.w3.org/1999/xhtml\">\r\n<div><a href=\"http://golem.ph.utexas.edu/~distler/blog/mathml.html\"><img class=\"mathlogo\" src=\"https://golem.ph.utexas.edu/~distler/blog/images/MathML.png\" alt=\"MathML-enabled post (click for more details).\" title=\"MathML-enabled post (click for details).\" /></a></div>\r\n\r\n<p>Maybe people who are all excited about the “field with one element” should start at the beginning and think a bit about the “group with no elements”.</p>\r\n\r\n<div><a href=\"http://golem.ph.utexas.edu/~distler/blog/mathml.html\"><img class=\"mathlogo\" src=\"https://golem.ph.utexas.edu/~distler/blog/images/MathML.png\" alt=\"MathML-enabled post (click for more details).\" title=\"MathML-enabled post (click for details).\" /></a></div>\r\n\r\n<p>I’m just kidding, but I did learn something fun today from <a href=\"https://twitter.com/ProfKinyon/status/1292812290090086401\">Michael Kinyon</a>’s response to a puzzle posed by <a href=\"https://twitter.com/BarbaraFantechi/status/1292716848086212608\">Barbara Fantechi</a>.   Namely: there’s a nice way to define a group as a <em>nonempty</em> set with some structure and properties.  This makes the nonemptiness condition seem silly and tacked-on… and if you drop it, you get a slight generalization of the definition of group, which allows there to be an <em>empty group.</em></p>\r\n\r\n<p>It goes like this.   A group is the same as a nonempty set with an associative binary operation <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo>⋅</mo><mo>:</mo><mi>G</mi><mo>×</mo><mi>G</mi><mo>→</mo><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">\\cdot : G \\times G \\to G</annotation></semantics></math> called <strong>multiplication</strong> such that for any <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>g</mi><mo>∈</mo><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">g \\in G</annotation></semantics></math>, the operations of left and right multiplication by <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">g</annotation></semantics></math> are bijections.  </p>\r\n\r\n<p>Why?  Clearly every group has such a multiplication, so the challenge is to prove the converse, and the key step is to get ahold of the identity element.   So let’s do that.</p>\r\n\r\n<p>For starters, let’s define <strong>left division</strong> by <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">g</annotation></semantics></math> to be the inverse of left multiplication by <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">g</annotation></semantics></math>, and write <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>g</mi><mo>\\</mo><mi>h</mi></mrow><annotation encoding=\"application/x-tex\">g\\backslash h</annotation></semantics></math> to mean <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>h</mi></mrow><annotation encoding=\"application/x-tex\">h</annotation></semantics></math> left divided by <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">g</annotation></semantics></math>.   Similarly, define <strong>right division</strong> by <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">g</annotation></semantics></math> to be the inverse of right multiplication by <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">g</annotation></semantics></math>, and write <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>h</mi><mo stretchy=\"false\">/</mo><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">h/g</annotation></semantics></math> to mean <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>h</mi></mrow><annotation encoding=\"application/x-tex\">h</annotation></semantics></math> right divided by <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">g</annotation></semantics></math>.</p>\r\n\r\n<p>Saying that left division by <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">g</annotation></semantics></math> is the inverse of left multiplication by <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">g</annotation></semantics></math> amounts to this:</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>g</mi><mo>⋅</mo><mo stretchy=\"false\">(</mo><mi>g</mi><mo>\\</mo><mi>h</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>h</mi><mo>,</mo><mspace width=\"2em\" /><mi>g</mi><mo>\\</mo><mo stretchy=\"false\">(</mo><mi>g</mi><mo>⋅</mo><mi>h</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>h</mi></mrow><annotation encoding=\"application/x-tex\"> g \\cdot (g\\backslash h) = h, \\qquad  g\\backslash(g \\cdot h) = h </annotation></semantics></math></p>\r\n\r\n<p>Similarly, saying right division by <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">g</annotation></semantics></math> is the inverse of right multiplication by <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">g</annotation></semantics></math> amounts to this:</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>h</mi><mo stretchy=\"false\">/</mo><mi>g</mi><mo stretchy=\"false\">)</mo><mo>⋅</mo><mi>g</mi><mo>=</mo><mi>h</mi><mo>,</mo><mspace width=\"2em\" /><mo stretchy=\"false\">(</mo><mi>h</mi><mo>⋅</mo><mi>g</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">/</mo><mi>g</mi><mo>=</mo><mi>h</mi></mrow><annotation encoding=\"application/x-tex\"> (h/g) \\cdot g = h, \\qquad  (h \\cdot g)/g = h </annotation></semantics></math></p>\r\n\r\n<p>Now, how do we get the identity element <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mn>1</mn><mo>∈</mo><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">1 \\in G</annotation></semantics></math>?   If <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math> is nonempty, we can choose any element and try taking <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mn>1</mn><mo>=</mo><mi>g</mi><mo stretchy=\"false\">/</mo><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">1 = g/g</annotation></semantics></math>.  But why is this independent of our choice?  Also, it’s equally natural to try <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mn>1</mn><mo>=</mo><mi>h</mi><mo>\\</mo><mi>h</mi></mrow><annotation encoding=\"application/x-tex\">1 = h\\backslash h</annotation></semantics></math> for some <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>h</mi><mo>∈</mo><mi>H</mi></mrow><annotation encoding=\"application/x-tex\">h \\in H</annotation></semantics></math>.  Why is this the same thing, independent of our choice of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>h</mi></mrow><annotation encoding=\"application/x-tex\">h</annotation></semantics></math>?</p>\r\n\r\n<p>We can settle all these questions simultaneously.  If <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>g</mi><mo>,</mo><mi>h</mi><mo>∈</mo><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">g,h \\in G</annotation></semantics></math> we have</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>g</mi><mo>⋅</mo><mi>h</mi><mo>=</mo><mi>g</mi><mo>⋅</mo><mo stretchy=\"false\">(</mo><mi>g</mi><mo>\\</mo><mi>g</mi><mo stretchy=\"false\">)</mo><mo>⋅</mo><mi>h</mi></mrow><annotation encoding=\"application/x-tex\"> g \\cdot h = g \\cdot (g\\backslash g) \\cdot h </annotation></semantics></math> </p>\r\n\r\n<p>Dividing on the left by <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">g</annotation></semantics></math> we get</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>h</mi><mo>=</mo><mo stretchy=\"false\">(</mo><mi>g</mi><mo>\\</mo><mi>g</mi><mo stretchy=\"false\">)</mo><mo>⋅</mo><mi>h</mi></mrow><annotation encoding=\"application/x-tex\"> h = (g\\backslash g) \\cdot h </annotation></semantics></math></p>\r\n\r\n<p>Dividing on the right by <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>h</mi></mrow><annotation encoding=\"application/x-tex\">h</annotation></semantics></math> we get</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>h</mi><mo stretchy=\"false\">/</mo><mi>h</mi><mo>=</mo><mi>g</mi><mo>\\</mo><mi>g</mi></mrow><annotation encoding=\"application/x-tex\"> h/h = g\\backslash g </annotation></semantics></math></p>\r\n\r\n<p>for all <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>g</mi><mo>,</mo><mi>h</mi><mo>∈</mo><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">g,h \\in G</annotation></semantics></math>.   Done!</p>\r\n\r\n<p>So, <em>if <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math> is nonempty</em>, we can set <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mn>1</mn><mo>=</mo><mi>g</mi><mo>\\</mo><mi>g</mi><mo>=</mo><mi>g</mi><mo stretchy=\"false\">/</mo><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">1 = g\\backslash g = g/g</annotation></semantics></math> for any <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>g</mi><mo>∈</mo><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">g \\in G</annotation></semantics></math>.  This is independent of our choice of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>g</mi><mo>∈</mo><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">g \\in G</annotation></semantics></math>, and it obeys</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mn>1</mn><mo>⋅</mo><mi>g</mi><mo>=</mo><mo stretchy=\"false\">(</mo><mi>g</mi><mo stretchy=\"false\">/</mo><mi>g</mi><mo stretchy=\"false\">)</mo><mo>⋅</mo><mi>g</mi><mo>=</mo><mi>g</mi></mrow><annotation encoding=\"application/x-tex\"> 1 \\cdot g = (g/g) \\cdot g = g </annotation></semantics></math></p>\r\n\r\n<p>and also</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>g</mi><mo>⋅</mo><mn>1</mn><mo>=</mo><mi>g</mi><mo>⋅</mo><mo stretchy=\"false\">(</mo><mi>g</mi><mo>\\</mo><mi>g</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>g</mi></mrow><annotation encoding=\"application/x-tex\"> g \\cdot 1 = g \\cdot (g\\backslash g) = g </annotation></semantics></math></p>\r\n\r\n<p>It’s now easy to get inverses: whenever you have a monoid where every element <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">g</annotation></semantics></math> has both a left inverse (here <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mn>1</mn><mo stretchy=\"false\">/</mo><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">1/g</annotation></semantics></math>) and a right inverse (here <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>g</mi><mo>\\</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">g\\backslash 1</annotation></semantics></math>), they must be equal, so we can take either one to be <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msup><mi>g</mi> <mrow><mo lspace=\"0.11111em\" rspace=\"0em\">−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding=\"application/x-tex\">g^{-1}</annotation></semantics></math>.   </p>\r\n\r\n<p>The fun part, for me, is that we can say</p>\r\n\r\n<p><strong>Definition.</strong> A <strong>possibly empty group</strong> is a set <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math> with an associative binary operation <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo>⋅</mo><mo>:</mo><mi>G</mi><mo>×</mo><mi>G</mi><mo>→</mo><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">\\cdot : G \\times G \\to G</annotation></semantics></math> called <strong>multiplication</strong> together with two more binary operations:</p>\r\n\r\n<ul>\r\n<li><strong>left division</strong>: <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mspace width=\"1em\" /><mo>\\</mo><mo>:</mo><mi>G</mi><mo>×</mo><mi>G</mi><mo>→</mo><mi>G</mi></mrow><annotation encoding=\"application/x-tex\"> \\quad \\backslash : G \\times G \\to G</annotation></semantics></math></li>\r\n<li><strong>right division</strong>: <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mspace width=\"1em\" /><mo stretchy=\"false\">/</mo><mo>:</mo><mi>G</mi><mo>×</mo><mi>G</mi><mo>→</mo><mi>G</mi></mrow><annotation encoding=\"application/x-tex\"> \\quad / : G \\times G \\to G</annotation></semantics></math></li>\r\n</ul>\r\n\r\n<p>such that </p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>g</mi><mo>⋅</mo><mo stretchy=\"false\">(</mo><mi>g</mi><mo>\\</mo><mi>h</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>h</mi><mo>,</mo><mspace width=\"2em\" /><mi>g</mi><mo>\\</mo><mo stretchy=\"false\">(</mo><mi>g</mi><mo>⋅</mo><mi>h</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>h</mi></mrow><annotation encoding=\"application/x-tex\"> g \\cdot (g\\backslash h) = h, \\qquad  g\\backslash (g \\cdot h) = h </annotation></semantics></math>\r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>h</mi><mo stretchy=\"false\">/</mo><mi>g</mi><mo stretchy=\"false\">)</mo><mo>⋅</mo><mi>g</mi><mo>=</mo><mi>h</mi><mo>,</mo><mspace width=\"2em\" /><mo stretchy=\"false\">(</mo><mi>h</mi><mo>⋅</mo><mi>g</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">/</mo><mi>g</mi><mo>=</mo><mi>h</mi></mrow><annotation encoding=\"application/x-tex\"> (h/g) \\cdot g = h, \\qquad  (h \\cdot g)/g = h </annotation></semantics></math></p>\r\n\r\n<p>for all <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>g</mi><mo>,</mo><mi>h</mi><mo>∈</mo><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">g, h \\in G</annotation></semantics></math>.</p>\r\n\r\n<p>There’s an obvious concept of <em>morphism</em> between possibly empty groups — a map preserving all three operations.    The category of possibly empty groups is equivalent to the category of groups with a new initial object thrown in, “the empty group”, and no morphisms from any groups to this one.</p>\r\n\r\n<p>Note that there’s a Lawvere theory for possibly empty groups!  Its category of <em>nonempty</em> algebras is equivalent to the category of groups.   </p>\r\n\r\n<p>I doubt this stuff is very important, but I’m surprised I hadn’t heard about it earlier, and a bit surprised that there’s a Lawvere theory whose algebras are the usual groups and also one extra ‘empty group’.</p>\r\n\r\n<p>In hindsight it’s quite reminiscent of how a <a href=\"http://math.ucr.edu/home/baez/torsors.html\">torsor</a> of a group is defined as a <em>nonempty</em> set on which that group acts freely and transitively.</p>\r\n\r\n<p>Here’s a puzzle that could help sharpen my intuitions.  I haven’t solved it:</p>\r\n\r\n<p><strong>Puzzle.</strong>  Prove or disprove this conjecture: there is no Lawvere theory whose category of algebras is the category of monoids together with one more algebra, the empty set.</p>\r\n\r\n<p>(Note that this one extra algebra will be initial, with no morphisms from any other algebra to it.)</p>\r\n\r\n<p>I bet this conjecture is true.</p>\r\n\r\n      </div>\r\n    ","descriptionType":"xhtml","publishedDate":"Mon, 10 Aug 2020 23:34:20 +0000","feedId":8914,"bgimg":"https://golem.ph.utexas.edu/~distler/blog/images/MathML.png","linkMd5":"656622f887cc74d036ed171b1a24a875","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn27@2020_2/2020/08/25/00-09-56-839_3e27bbc676e8d5d2.webp","destWidth":65,"destHeight":36,"sourceBytes":3238,"destBytes":1426,"author":"john","articleImgCdnMap":{"https://golem.ph.utexas.edu/~distler/blog/images/MathML.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn27@2020_2/2020/08/25/00-09-56-839_3e27bbc676e8d5d2.webp"},"publishedOrCreatedDate":1598314179387},{"createdTime":"2020-08-25 08:09:39","updatedTime":"2020-08-25 08:09:39","title":"ACT2020 Program","link":"https://golem.ph.utexas.edu/category/2020/06/act2020_program.html","description":"\r\n      <div xmlns=\"http://www.w3.org/1999/xhtml\">\r\n<div><a href=\"http://golem.ph.utexas.edu/~distler/blog/mathml.html\"><img class=\"mathlogo\" src=\"https://golem.ph.utexas.edu/~distler/blog/images/MathML.png\" alt=\"MathML-enabled post (click for more details).\" title=\"MathML-enabled post (click for details).\" /></a></div>\r\n\r\n<p><a href=\"https://act2020.mit.edu/\">Applied Category Theory 2020</a> is coming up soon!  After the <a href=\"https://johncarlosbaez.wordpress.com/2020/06/17/act2020-tutorial-day/\">Tutorial Day</a> on Sunday July 6th, there will be talks from Monday July 7th to Friday July 10th.  </p>\r\n\r\n<p>Here is the program—click on it to download a more readable version:</p>\r\n\r\n<p><a href=\"http://act2020.mit.edu/ACT2020-Schedule.pdf\"><img width=\"150\" src=\"http://math.ucr.edu/home/baez/ACT2020/ACT2020-Schedule.jpg\" alt=\"\" />\r\n</a></p>\r\n\r\n<p>All talks will be <a href=\"https://mit.zoom.us/j/7055345747\">live on Zoom</a>.  Recorded versions should appear on YouTube later.</p>\r\n\r\n<p>And here’s a list of the talks….</p>\r\n\r\n<div><a href=\"http://golem.ph.utexas.edu/~distler/blog/mathml.html\"><img class=\"mathlogo\" src=\"https://golem.ph.utexas.edu/~distler/blog/images/MathML.png\" alt=\"MathML-enabled post (click for more details).\" title=\"MathML-enabled post (click for details).\" /></a></div>\r\n\r\n<p>Here are the talks!  They come in three kinds: keynotes, regular presentations and short industry presentations.   Within each I’ve listed them in alphabetical order by speaker: I believe the first author is the speaker.</p>\r\n\r\n<p>This is gonna be fun.</p>\r\n\r\n<p><strong>Keynote presentations (35 minutes)</strong></p>\r\n\r\n<ul>\r\n<li><p>Henry Adams, Johnathan Bush and Joshua Mirth, Operations on metric thickenings.</p></li>\r\n<li><p>Nicolas Blanco and Noam Zeilberger: Bifibrations of polycategories and classical linear logic.</p></li>\r\n<li><p>Bryce Clarke, Derek Elkins, Jeremy Gibbons, Fosco Loregian, Bartosz Milewski, Emily Pillmore and Mario Román: Profunctor optics, a categorical update.</p></li>\r\n<li><p>Tobias Fritz, Tomáš Gonda, Paolo Perrone and Eigil Rischel: Distribution functors, second-order stochastic dominance and the Blackwell–Sherman–Stein Theorem in categorical probability.</p></li>\r\n<li><p>Micah Halter, Evan Patterson, Andrew Baas and James Fairbanks: Compositional scientific computing with Catlab and SemanticModels.</p></li>\r\n<li><p>Joachim Kock: Whole-grain Petri nets and processes.</p></li>\r\n<li><p>Andre Kornell, Bert Lindenhovius and Michael Mislove: Quantum CPOs.</p></li>\r\n<li><p>Martha Lewis: Towards logical negation in compositional distributional semantics.</p></li>\r\n<li><p>Jade Master and John Baez: Open Petri nets.</p></li>\r\n<li><p>Lachlan McPheat, Mehrnoosh Sadrzadeh, Hadi Wazni and Gijs Wijnholds, Categorical vector space semantics for Lambek calculus with a relevant modality.</p></li>\r\n<li><p>David Jaz Myers: Double categories of open dynamical systems.</p></li>\r\n<li><p>Toby St Clere Smithe, Cyber Kittens, or first steps towards categorical cybernetics.</p></li>\r\n</ul>\r\n\r\n<p><strong>Regular presentations (20 minutes)</strong></p>\r\n\r\n<ul>\r\n<li><p>Robert Atkey, Bruno Gavranović, Neil Ghani, Clemens Kupke, Jeremy Ledent and Fredrik Nordvall Forsberg:  Compositional game theory, compositionally.</p></li>\r\n<li><p>John Baez and Kenny Courser: Coarse-graining open Markov processes.</p></li>\r\n<li><p>Georgios Bakirtzis, Christina Vasilakopoulou and Cody Fleming, Compositional cyber-physical systems modeling.</p></li>\r\n<li><p>Marco Benini, Marco Perin, Alexander Alexander Schenkel and Lukas Woike: Categorification of algebraic quantum field theories.</p></li>\r\n<li><p>Daniel Cicala: Rewriting structured cospans.</p></li>\r\n<li><p>Bryce Clarke: A diagrammatic approach to symmetric lenses.</p></li>\r\n<li><p>Bob Coecke, Giovanni de Felice, Konstantinos Meichanetzidis, Alexis Toumi, Stefano Gogioso and Nicolo Chiappori: Quantum natural language processing.</p></li>\r\n<li><p>Geoffrey Cruttwell, Jonathan Gallagher and Dorette Pronk: Categorical semantics of a simple differential programming language.</p></li>\r\n<li><p>Swaraj Dash and Sam Staton: A monad for probabilistic point processes.</p></li>\r\n<li><p>Giovanni de Felice, Elena Di Lavore, Mario Román and Alexis Toumi: Functorial language games for question answering.</p></li>\r\n<li><p>Giovanni de Felice, Alexis Toumi and Bob Coecke: DisCoPy: monoidal categories in Python.</p></li>\r\n<li><p>Brendan Fong, David Jaz Myers and David I. Spivak: Behavioral mereology: a modal logic for passing constraints.</p></li>\r\n<li><p>Rocco Gangle, Gianluca Caterina and Fernando Tohme, A generic figures reconstruction of Peirce’s existential graphs (alpha).</p></li>\r\n<li><p>Jules Hedges and Philipp Zahn: Open games in practice.</p></li>\r\n<li><p>Jules Hedges: Non-compositionality in categorical systems theory.</p></li>\r\n<li><p>Michael Johnson and Robert Rosebrugh, The more legs the merrier: A new composition for symmetric (multi-)lenses.</p></li>\r\n<li><p>Joe Moeller, John Baez and John Foley: Petri nets with catalysts.</p></li>\r\n<li><p>John Nolan and Spencer Breiner, Symmetric monoidal categories with attributes.</p></li>\r\n<li><p>Joseph Razavi and Andrea Schalk: Gandy machines made easy via category theory.</p></li>\r\n<li><p>Callum Reader: Measures and enriched categories.</p></li>\r\n<li><p>Mario Román: Open diagrams via coend calculus.</p></li>\r\n<li><p>Luigi Santocanale, Dualizing sup-preserving endomaps of a complete lattice.</p></li>\r\n<li><p>Dan Shiebler: Categorical stochastic processes and likelihood.</p></li>\r\n<li><p>Richard Statman, Products in a category with only one object.</p></li>\r\n<li><p>David I. Spivak: Poly: An abundant categorical setting for mode-dependent dynamics.</p></li>\r\n<li><p>Christine Tasson and Martin Hyland, The linear-non-linear substitution 2-monad.</p></li>\r\n<li><p>Tarmo Uustalu, Niccolò Veltri and Noam Zeilberger: Proof theory of partially normal skew monoidal categories.</p></li>\r\n<li><p>Dmitry Vagner, David I. Spivak and Evan Patterson: Wiring diagrams as normal forms for computing in symmetric monoidal categories.</p></li>\r\n<li><p>Matthew Wilson, James Hefford, Guillaume Boisseau and Vincent Wang: The safari of update structures: visiting the lens and quantum enclosures.</p></li>\r\n<li><p>Paul Wilson and Fabio Zanasi: Reverse derivative ascent: a categorical approach to learning Boolean circuits.</p></li>\r\n<li><p>Vladimir Zamdzhiev: Computational adequacy for substructural lambda calculi.</p></li>\r\n<li><p>Gioele Zardini, David I. Spivak, Andrea Censi and Emilio Frazzoli: A compositional sheaf-theoretic framework for event-based systems.</p></li>\r\n</ul>\r\n\r\n<p><strong>Industry presentations (8 minutes)</strong></p>\r\n\r\n<ul>\r\n<li><p>Arquimedes Canedo (Siemens Corporate Technology).</p></li>\r\n<li><p>Brendan Fong (Topos Institute).</p></li>\r\n<li><p>Jelle Herold (Statebox): Industrial strength CT.</p></li>\r\n<li><p>Steve Huntsman (BAE): Inhabiting the value proposition for category theory.</p></li>\r\n<li><p>Ilyas Khan (Cambridge Quantum Computing).</p></li>\r\n<li><p>Alan Ransil (Protocol Labs): Compositional data structures for the decentralized web.</p></li>\r\n<li><p>Alberto Speranzon (Honeywell).</p></li>\r\n<li><p>Ryan Wisnesky (Conexus): Categorical informatics at scale.</p></li>\r\n</ul>\r\n\r\n      </div>\r\n    ","descriptionType":"xhtml","publishedDate":"Sat, 27 Jun 2020 22:06:07 +0000","feedId":8914,"bgimg":"https://golem.ph.utexas.edu/~distler/blog/images/MathML.png","linkMd5":"d827c13f3c587d017c33329f63496f20","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn27@2020_2/2020/08/25/00-09-56-839_3e27bbc676e8d5d2.webp","destWidth":65,"destHeight":36,"sourceBytes":3238,"destBytes":1426,"author":"john","articleImgCdnMap":{"https://golem.ph.utexas.edu/~distler/blog/images/MathML.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn27@2020_2/2020/08/25/00-09-56-839_3e27bbc676e8d5d2.webp","http://math.ucr.edu/home/baez/ACT2020/ACT2020-Schedule.jpg":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn51@2020_3/2020/08/25/00-09-58-590_de9da12244332446.webp"},"publishedOrCreatedDate":1598314179471},{"createdTime":"2020-08-25 08:09:39","updatedTime":"2020-08-25 08:09:39","title":"Linear Logic Flavoured Composition of Petri Nets","link":"https://golem.ph.utexas.edu/category/2020/07/linear_logic_flavoured_composi.html","description":"\r\n      <div xmlns=\"http://www.w3.org/1999/xhtml\">\r\n<div><a href=\"http://golem.ph.utexas.edu/~distler/blog/mathml.html\"><img class=\"mathlogo\" src=\"https://golem.ph.utexas.edu/~distler/blog/images/MathML.png\" alt=\"MathML-enabled post (click for more details).\" title=\"MathML-enabled post (click for details).\" /></a></div>\r\n\r\n<p><em>guest post by <strong><a href=\"https://elenadilavore.github.io/\">Elena Di Lavore</a></strong> and <strong><a href=\"https://xiaoyan-li.github.io/\">Xiaoyan\r\nLi</a></strong></em></p>\r\n\r\n<p><a href=\"https://en.wikipedia.org/wiki/Petri_net\">Petri nets</a> are a mathematical model for systems in which processes, when\r\nactivated, consume some resources and produce others. They can be used to model,\r\namong many others, <a href=\"https://www.sciencedirect.com/science/article/abs/pii/S0377221700002927\">business\r\nprocesses</a>,\r\n<a href=\"https://www.sciencedirect.com/science/article/abs/pii/S0025556407001460\">chemical\r\nreactions</a>,\r\n<a href=\"https://arxiv.org/abs/1907.11316\">gene activation</a> or <a href=\"https://ieeexplore.ieee.org/abstract/document/1702760\">parallel computations</a>. There are different approaches to define a categorical model for Petri nets, for example, <a href=\"https://core.ac.uk/download/pdf/82342688.pdf\">Petri nets are\r\nmonoids</a>, <a href=\"https://arxiv.org/abs/1307.0204\">nets with\r\nboundaries</a> and <a href=\"https://arxiv.org/abs/1808.05415\">open Petri\r\nnets</a>.</p>\r\n\r\n<p>This first post of the <a href=\"https://www.appliedcategorytheory.org/adjoint-school-act-2020/\">Applied Category Theory Adjoint School\r\n2020</a> presents\r\nthe approach of Carolyn Brown and Doug Gurr in the paper <a href=\"https://ieeexplore.ieee.org/abstract/document/113747\">A Categorical Linear\r\nFramework for Petri Nets</a>,\r\nwhich is based on Valeria de Paiva’s <a href=\"https://www.cl.cam.ac.uk/techreports/UCAM-CL-TR-213.pdf\">dialectica\r\ncategories</a>. The\r\ninteresting aspect of this approach is the fact that it combines linear logic\r\nand category theory to model different ways of composing Petri nets.</p>\r\n\r\n<div><a href=\"http://golem.ph.utexas.edu/~distler/blog/mathml.html\"><img class=\"mathlogo\" src=\"https://golem.ph.utexas.edu/~distler/blog/images/MathML.png\" alt=\"MathML-enabled post (click for more details).\" title=\"MathML-enabled post (click for details).\" /></a></div>\r\n\r\n<p>Elementary Petri nets are the objects of a category <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"bold\"><mi>N</mi></mstyle><mi>&#x1d49e;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{N}\\mathcal{C}</annotation></semantics></math>\r\nwhose morphisms can represent simulations or refinements of them. The\r\ninterpretations of the linear logic connectives of the dialectica category\r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"bold\"><mi>G</mi></mstyle><mi>&#x1d49e;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{G}\\mathcal{C}</annotation></semantics></math> can be lifted to the category <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"bold\"><mi>N</mi></mstyle><mi>&#x1d49e;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{N}\\mathcal{C}</annotation></semantics></math>\r\nand used to define compound nets. Each connective gives a different\r\ninterpretation to the corresponding compound net, based on its meaning in\r\nintuitionistic linear logic.</p>\r\n\r\n<p>The scope of the paper is wider and it covers markings, a definition of a\r\ncategory of arbitrary Petri nets and the description of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"bold\"><mi>N</mi></mstyle><mi>&#x1d49e;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{N}\\mathcal{C}</annotation></semantics></math>\r\nfor some <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d49e;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{C}</annotation></semantics></math> different from <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"bold\"><mi>Set</mi></mstyle></mrow><annotation encoding=\"application/x-tex\">\\mathbf{Set}</annotation></semantics></math>. We will focus on the\r\naspect of composition of Petri nets via logical connectives giving a concrete\r\nexample for each one of them and trying to give an interpretation to their\r\ncorresponding constructs on Petri nets.</p>\r\n\r\n<h1>Preliminary definitions</h1>\r\n\r\n<h2>Petri nets</h2>\r\n\r\n<p>We start by introducing Petri nets and elementary Petri nets, which will be the focus of this post. </p>\r\n\r\n<p>Petri nets describe systems where some processes, called <em>events</em>, can be\r\n<em>fired</em> when all their <em>preconditions</em> are marked with at least the amount of\r\ntokens indicated by the weight of each arrow. After an event has been fired, the\r\nmarkings of all <em>postconditions</em> of this event will be increased by the weight\r\nof each arrow. We will represent events with rectangles and conditions with\r\ncircles. The following figure represents the firing of the event <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>e</mi> <mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">e_1</annotation></semantics></math>. Its\r\npreconditions, <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>b</mi> <mn>0</mn></msub></mrow><annotation encoding=\"application/x-tex\">b_0</annotation></semantics></math> and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>b</mi> <mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">b_1</annotation></semantics></math>, are indicated with an incoming arrow together\r\nwith a weight. Similarly, its postconditions, <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>b</mi> <mn>0</mn></msub></mrow><annotation encoding=\"application/x-tex\">b_0</annotation></semantics></math> and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>b</mi> <mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">b_2</annotation></semantics></math>, are indicated\r\nwith an outgoing arrow together with a weight. The firing of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>e</mi> <mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">e_1</annotation></semantics></math> consumes a\r\ntoken from <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>b</mi> <mn>0</mn></msub></mrow><annotation encoding=\"application/x-tex\">b_0</annotation></semantics></math> and two tokens from <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>b</mi> <mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">b_1</annotation></semantics></math> and produces one token in <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>b</mi> <mn>0</mn></msub></mrow><annotation encoding=\"application/x-tex\">b_0</annotation></semantics></math> and\r\nthree tokens in <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>b</mi> <mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">b_2</annotation></semantics></math>.</p>\r\n\r\n<p><img width=\"100%\" src=\"http://math.ucr.edu/home/baez/mathematical/ACT2020/DiLavore-Li/firing.png\" alt=\"\" /></p>\r\n\r\n<p>A <strong>Petri net</strong> <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d4a9;</mi><mo>=</mo><mo stretchy=\"false\">(</mo><mi>E</mi><mo>,</mo><mi>B</mi><mo>,</mo><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle><mo>,</mo><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathcal{N}= (E,B, \\mathit{pre},\r\n\\mathit{post})</annotation></semantics></math> is given by two sets <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>E</mi><mo>,</mo><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">E, B</annotation></semantics></math> and two multirelations\r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle><mo>,</mo><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle><mo lspace=\"0.11111em\">:</mo><mi>E</mi><msub><mo>→</mo> <mi>m</mi></msub><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">\\mathit{pre},\\mathit{post} \\colon E \\rightarrow _m B</annotation></semantics></math>. The\r\nset <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>E</mi></mrow><annotation encoding=\"application/x-tex\">E</annotation></semantics></math> represents the <em>events</em> that are possible in the net <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d4a9;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{N}</annotation></semantics></math> while\r\nthe set <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">B</annotation></semantics></math> represents the <em>conditions</em> around the events in <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>E</mi></mrow><annotation encoding=\"application/x-tex\">E</annotation></semantics></math>. The\r\nmultirelation <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle></mrow><annotation encoding=\"application/x-tex\">\\mathit{pre}</annotation></semantics></math> keeps track of ”how many times” a\r\ncondition is needed in order to fire an event. Similarly, the multirelation\r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle></mrow><annotation encoding=\"application/x-tex\">\\mathit{post}</annotation></semantics></math> keeps track of ”how many times” a condition is\r\nproduced after firing an event.</p>\r\n\r\n<p>We will write <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle><mo stretchy=\"false\">(</mo><mi>e</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathit{pre}(e)</annotation></semantics></math> and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle><mo stretchy=\"false\">(</mo><mi>e</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathit{post}(e)</annotation></semantics></math> to\r\nindicate the multisets of preconditions and postconditions of an event <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>e</mi></mrow><annotation encoding=\"application/x-tex\">e</annotation></semantics></math>.</p>\r\n\r\n<p>In this post, we will focus on Petri nets whose <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle></mrow><annotation encoding=\"application/x-tex\">\\mathit{pre}</annotation></semantics></math> and\r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle></mrow><annotation encoding=\"application/x-tex\">\\mathit{post}</annotation></semantics></math> multirelations are ordinary relations and, thus,\r\ncorrespond to subsets of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>E</mi><mo>×</mo><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">E \\times B</annotation></semantics></math>. These are called <strong>elementary Petri\r\nnets</strong>.</p>\r\n\r\n<p><img width=\"100%\" src=\"http://math.ucr.edu/home/baez/mathematical/ACT2020/DiLavore-Li/nets.png\" alt=\"\" /></p>\r\n\r\n<p><em>In general, the weight of each condition can be an integer. In the case of\r\nelementary Petri nets, only nets whose arrows have weight one are considered\r\n(thus, the weight is omitted).</em></p>\r\n\r\n<h2>The category of elementary Petri nets <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"bold\"><mi>N</mi></mstyle><mi>&#x1d49e;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{N} \\mathcal{C}</annotation></semantics></math></h2>\r\n\r\n<p>We can define the category of elementary Petri nets <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"bold\"><mi>N</mi></mstyle><mi>&#x1d49e;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{N}\r\n\\mathcal{C}</annotation></semantics></math> based on the <a href=\"https://www.cl.cam.ac.uk/techreports/UCAM-CL-TR-213.pdf\">dialectica category\r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"bold\"><mi>G</mi></mstyle><mi>&#x1d49e;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{G}\\mathcal{C}</annotation></semantics></math></a>.\r\nObjects and morphisms in <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"bold\"><mi>N</mi></mstyle><mi>&#x1d49e;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{N} \\mathcal{C}</annotation></semantics></math> are defined from\r\nobjects and morphisms in <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"bold\"><mi>G</mi></mstyle><mi>&#x1d49e;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{G} \\mathcal{C}</annotation></semantics></math>.</p>\r\n\r\n<p>Let <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d49e;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{C}</annotation></semantics></math> be a category with finite limits, then there is a category\r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"bold\"><mi>N</mi></mstyle><mi>&#x1d49e;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{N} \\mathcal{C}</annotation></semantics></math> defined as follows.</p>\r\n\r\n<ul>\r\n<li><p>An object is a pair <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d4a9;</mi><mo>=</mo><mo stretchy=\"false\">(</mo><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle><mo>,</mo><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathcal{N}=(\\mathit{pre},\r\n \\mathit{post})</annotation></semantics></math>, where <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle></mrow><annotation encoding=\"application/x-tex\">\\mathit{pre}</annotation></semantics></math> and\r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle></mrow><annotation encoding=\"application/x-tex\">\\mathit{post}</annotation></semantics></math> are objects in <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"bold\"><mi>G</mi></mstyle><mi>&#x1d49e;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{G}\\mathcal{C}</annotation></semantics></math>.</p></li>\r\n<li><p>A morphism from <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d4a9;</mi><mo>=</mo><mo stretchy=\"false\">(</mo><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle><mo>,</mo><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathcal{N}=(\\mathit{pre},\r\n   \\mathit{post})</annotation></semantics></math> to <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d4a9;</mi><mo>′</mo><mo>=</mo><mo stretchy=\"false\">(</mo><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle><mo>′</mo><mo>,</mo><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle><mo>′</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathcal{N}'=(\\mathit{pre}',\r\n   \\mathit{post}')</annotation></semantics></math> is a pair of morphisms <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>f</mi><mo>,</mo><mi>F</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(f, F)</annotation></semantics></math> in <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d49e;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{C}</annotation></semantics></math>\r\nsuch that <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>f</mi><mo>,</mo><mi>F</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(f, F)</annotation></semantics></math> is a morphism from <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle></mrow><annotation encoding=\"application/x-tex\">\\mathit{pre}</annotation></semantics></math> to\r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">\\mathit{pre}'</annotation></semantics></math> and from <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle></mrow><annotation encoding=\"application/x-tex\">\\mathit{post}</annotation></semantics></math> to\r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">\\mathit{post}'</annotation></semantics></math> in <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"bold\"><mi>G</mi></mstyle><mi>&#x1d49e;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{G} \\mathcal{C}</annotation></semantics></math>.</p></li>\r\n</ul>\r\n\r\n<p>An object <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d4a9;</mi><mo>=</mo><mo stretchy=\"false\">(</mo><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle><mo>,</mo><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathcal{N}=(\\mathit{pre}, \\mathit{post})</annotation></semantics></math> of\r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"bold\"><mi>NSet</mi></mstyle></mrow><annotation encoding=\"application/x-tex\">\\mathbf{NSet}</annotation></semantics></math> represents an elementary Petri net whose precondition and\r\npostcondition relations are given by <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle></mrow><annotation encoding=\"application/x-tex\">\\mathit{pre}</annotation></semantics></math> and\r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle></mrow><annotation encoding=\"application/x-tex\">\\mathit{post}</annotation></semantics></math>. Taking <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d49e;</mi><mo>=</mo><mstyle mathvariant=\"bold\"><mi>Set</mi></mstyle></mrow><annotation encoding=\"application/x-tex\">\\mathcal{C} = \\mathbf{Set}</annotation></semantics></math> lets us explicit\r\nthe conditions for <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>f</mi><mo>,</mo><mi>F</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(f,F)</annotation></semantics></math> to be a morphism of Petri nets. We obtain that</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mrow><mtable displaystyle=\"true\" columnalign=\"right left right left right left right left right left\" columnspacing=\"0em\"><mtr><mtd><mi>e</mi><mspace width=\"0.27778em\" /><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle><mspace width=\"0.27778em\" /><mi>F</mi><mo stretchy=\"false\">(</mo><mi>b</mi><mo>′</mo><mo stretchy=\"false\">)</mo></mtd> <mtd><mo>⇒</mo><mi>f</mi><mo stretchy=\"false\">(</mo><mi>e</mi><mo stretchy=\"false\">)</mo><mspace width=\"0.27778em\" /><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle><mo>′</mo><mspace width=\"0.27778em\" /><mi>b</mi><mo>′</mo></mtd></mtr> <mtr><mtd><mi>e</mi><mspace width=\"0.27778em\" /><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle><mspace width=\"0.27778em\" /><mi>F</mi><mo stretchy=\"false\">(</mo><mi>b</mi><mo>′</mo><mo stretchy=\"false\">)</mo></mtd> <mtd><mo>⇒</mo><mi>f</mi><mo stretchy=\"false\">(</mo><mi>e</mi><mo stretchy=\"false\">)</mo><mspace width=\"0.27778em\" /><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle><mo>′</mo><mspace width=\"0.27778em\" /><mi>b</mi><mo>′</mo></mtd></mtr> <mtr><mtd /></mtr></mtable></mrow></mrow><annotation encoding=\"application/x-tex\">\\begin{aligned}\r\ne \\ \\mathit{pre} \\  F(b') &amp; \\Rightarrow f(e) \\ \\mathit{pre}' \\ b'\\\\\r\ne \\ \\mathit{post} \\ F(b') &amp; \\Rightarrow f(e) \\ \\mathit{post}' \\ b'\\\\\r\n\\end{aligned}</annotation></semantics></math> </p>\r\n\r\n<p>This means that the net <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d4a9;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{N}</annotation></semantics></math> is a refinement of\r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d4a9;</mi><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">\\mathcal{N}'</annotation></semantics></math>. Intuitively, this means that <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d4a9;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{N}</annotation></semantics></math> consumes and produces\r\nat least as many resources as <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d4a9;</mi><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">\\mathcal{N}'</annotation></semantics></math>.</p>\r\n\r\n<p>This is not the only way one can define morphisms of Petri net. It is possible\r\nto reverse the direction of the unique morphism <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math> for one or both the\r\ncomponents <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle></mrow><annotation encoding=\"application/x-tex\">\\mathit{pre}</annotation></semantics></math> and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle></mrow><annotation encoding=\"application/x-tex\">\\mathit{post}</annotation></semantics></math> of a Petri\r\nnet. It is also possible to consider morphisms that give an <em>if and only\r\nif</em> in the condition above. All these variants have interpretations that is\r\nworth investigating. We shortly discuss the intuitions behind these variants in\r\nthe last section.</p>\r\n\r\n<h2>The dialectica category <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"bold\"><mi>G</mi></mstyle><mi>&#x1d49e;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{G} \\mathcal{C}</annotation></semantics></math></h2>\r\n\r\n<p>We briefly give the definition of dialectica category that is necessary to\r\ndefine <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"bold\"><mi>N</mi></mstyle><mi>&#x1d49e;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{N}\\mathcal{C}</annotation></semantics></math>. The reader already\r\nfamiliar with <a href=\"https://www.cl.cam.ac.uk/techreports/UCAM-CL-TR-213.pdf\">this\r\nwork</a> is invited to\r\nskip to the next section.</p>\r\n\r\n<p>Given a category <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d49e;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{C}</annotation></semantics></math> with finite limits, we define the <a href=\"https://www.cl.cam.ac.uk/techreports/UCAM-CL-TR-213.pdf\"><strong>dialectica\r\ncategory</strong></a> <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"bold\"><mi>G</mi></mstyle><mi>&#x1d49e;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{G} \\mathcal{C}</annotation></semantics></math> as follows.</p>\r\n\r\n<ul>\r\n<li><p>Objects are relations on objects of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d49e;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{C}</annotation></semantics></math>. They are given by monics <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>α</mi><mo lspace=\"0.11111em\">:</mo><mi>A</mi><mo>→</mo><mi>E</mi><mo>×</mo><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">\r\n   \\alpha \\colon A \\to E \\times B</annotation></semantics></math> in <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d49e;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{C}</annotation></semantics></math>. We indicate them with\r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>α</mi><mo lspace=\"0.11111em\">:</mo><mi>E</mi><mo>↚</mo><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha \\colon E \\nleftarrow B </annotation></semantics></math>.</p></li>\r\n<li><p>A morphism <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>f</mi><mo>,</mo><mi>F</mi><mo stretchy=\"false\">)</mo><mo lspace=\"0.11111em\">:</mo><mi>α</mi><mo>→</mo><mi>α</mi><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">(f,F) \\colon \\alpha \\to \\alpha'</annotation></semantics></math> between two objects <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>α</mi><mo lspace=\"0.11111em\">:</mo><mi>E</mi><mo>↚</mo><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha\r\n   \\colon E \\nleftarrow B </annotation></semantics></math> and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>α</mi><mo>′</mo><mo lspace=\"0.11111em\">:</mo><mi>E</mi><mo>′</mo><mo>↚</mo><mi>B</mi><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">\\alpha' \\colon E' \\nleftarrow B' </annotation></semantics></math> is given by\r\na pair of morphisms <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>f</mi><mo lspace=\"0.11111em\">:</mo><mi>E</mi><mo>→</mo><mi>E</mi><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">f \\colon E \\rightarrow E'</annotation></semantics></math> and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>F</mi><mo lspace=\"0.11111em\">:</mo><mi>B</mi><mo>′</mo><mo>→</mo><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">F \\colon B' \\rightarrow\r\n   B</annotation></semantics></math> in <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d49e;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{C}</annotation></semantics></math> such that there exists a (necessarily unique and monic)\r\nmorphism <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math> such that the following triangle commutes.</p></li>\r\n</ul>\r\n\r\n<p><img width=\"30%\" src=\"http://math.ucr.edu/home/baez/mathematical/ACT2020/DiLavore-Li/morphism.png\" alt=\"\" /></p>\r\n\r\n<p><strong>Theorem (<a href=\"https://www.cl.cam.ac.uk/techreports/UCAM-CL-TR-213.pdf\">de\r\nPaiva</a>):</strong> If\r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d49e;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{C}</annotation></semantics></math> is a locally cartesian closed category with finite disjoint\r\ncoproducts, then <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"bold\"><mi>G</mi></mstyle><mi>&#x1d49e;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{G}\\mathcal{C}</annotation></semantics></math> is a model of intuitionistic linear\r\nlogic.</p>\r\n\r\n<p>The structure of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"bold\"><mi>G</mi></mstyle><mi>&#x1d49e;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{G}\\mathcal{C}</annotation></semantics></math> that interprets the linear logic\r\nconnectives can be lifted to the category of elementary Petri nets and used to\r\ndefine composites of Petri nets relying on the intuition of the linear logic\r\nconnectives.</p>\r\n\r\n<h1>Composing Petri nets</h1>\r\n\r\n<p>In this section, we define how the constructs of linear logic are interpreted in\r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"bold\"><mi>G</mi></mstyle><mi>&#x1d49e;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{G} \\mathcal{C}</annotation></semantics></math> and, consequently, in <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"bold\"><mi>N</mi></mstyle><mi>&#x1d49e;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{N}\\mathcal{C}</annotation></semantics></math>. We give\r\nconcrete examples in <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"bold\"><mi>NSet</mi></mstyle></mrow><annotation encoding=\"application/x-tex\">\\mathbf{NSet}</annotation></semantics></math> to try to explain the intuitive meaning of\r\nthese constructs on Petri nets.</p>\r\n\r\n<h2>Cartesian product</h2>\r\n\r\n<p>The cartesian product of two nets <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d4a9;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{N}</annotation></semantics></math> and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d4a9;</mi><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">\\mathcal{N}'</annotation></semantics></math> is a Petri\r\nnet where events are pairs <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo stretchy=\"false\">⟨</mo><mi>e</mi><mo>,</mo><mi>e</mi><mo>′</mo><mo stretchy=\"false\">⟩</mo></mrow><annotation encoding=\"application/x-tex\">\\langle e,e' \\rangle</annotation></semantics></math> that represent both the events\r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>e</mi></mrow><annotation encoding=\"application/x-tex\">e</annotation></semantics></math>, in <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d4a9;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{N}</annotation></semantics></math>, and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>e</mi><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">e'</annotation></semantics></math>, in <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d4a9;</mi><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">\\mathcal{N}'</annotation></semantics></math>, happening at the same time.\r\nConditions in the product net are conditions in <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d4a9;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{N}</annotation></semantics></math> or in\r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d4a9;</mi><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">\\mathcal{N}'</annotation></semantics></math>.</p>\r\n\r\n<p>To give a concrete example, consider two Petri nets representing interactions\r\namong genes (we took this example from <a href=\"https://arxiv.org/abs/1907.11316\">a paper that uses open Petri nets for\r\ngene regulatory networks</a>). The first one\r\nrepresents a gene <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>b</mi> <mn>0</mn></msub></mrow><annotation encoding=\"application/x-tex\">b_0</annotation></semantics></math> that, deactivating itself, can activate gene <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>b</mi> <mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">b_1</annotation></semantics></math> or\r\ngene <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>b</mi> <mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">b_2</annotation></semantics></math>, and the second one represents a gene <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>b</mi> <mn>0</mn></msub><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">b_0'</annotation></semantics></math> that can deactivate\r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>b</mi> <mn>1</mn></msub><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">b_1'</annotation></semantics></math>.</p>\r\n\r\n<p><img width=\"100%\" src=\"http://math.ucr.edu/home/baez/mathematical/ACT2020/DiLavore-Li/N-N1.png\" alt=\"\" /></p>\r\n\r\n<p>Their cartesian product represents the concurrent activation of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>b</mi> <mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">b_1</annotation></semantics></math> or <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>b</mi> <mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">b_2</annotation></semantics></math>\r\nby <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>b</mi> <mn>0</mn></msub></mrow><annotation encoding=\"application/x-tex\">b_0</annotation></semantics></math> and deactivation of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>b</mi> <mn>1</mn></msub><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">b_1'</annotation></semantics></math> by <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>b</mi> <mn>0</mn></msub><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">b_0'</annotation></semantics></math>. In fact, in order to be able to\r\nactivate <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>b</mi> <mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">b_1</annotation></semantics></math> and deactivate <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>b</mi> <mn>1</mn></msub><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">b_1'</annotation></semantics></math> simultaneously, all the preconditions of\r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>e</mi> <mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">e_1</annotation></semantics></math> in <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>&#x1d4a9;</mi> <mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">\\mathcal{N}_1</annotation></semantics></math> and all the preconditions of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>e</mi><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">e'</annotation></semantics></math> in <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>&#x1d4a9;</mi> <mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">\\mathcal{N}_2</annotation></semantics></math>\r\nmust be marked.</p>\r\n\r\n<p><img width=\"100%\" src=\"http://math.ucr.edu/home/baez/mathematical/ACT2020/DiLavore-Li/product.png\" alt=\"\" /></p>\r\n\r\n<p>More formally, the conditions on the precondition and postcondition relations\r\nfor the product <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d4a9;</mi><mspace width=\"0.27778em\" /><mi>&amp;</mi><mspace width=\"0.27778em\" /><mi>&#x1d4a9;</mi><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">\\mathcal{N} \\ \\&amp; \\  \\mathcal{N}'</annotation></semantics></math> in <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"bold\"><mi>NSet</mi></mstyle></mrow><annotation encoding=\"application/x-tex\">\\mathbf{NSet}</annotation></semantics></math> are\r\ngiven by the union of the preconditions and postconditions in the component\r\nnets. </p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mrow><mtable displaystyle=\"true\" columnalign=\"right left right left right left right left right left\" columnspacing=\"0em\"><mtr><mtd><msub><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle> <mi>&amp;</mi></msub><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">⟨</mo><mi>e</mi><mo>,</mo><mi>e</mi><mo>′</mo><mo stretchy=\"false\">⟩</mo><mo stretchy=\"false\">)</mo></mtd> <mtd><mo>=</mo><msub><mi>i</mi> <mi>B</mi></msub><mo stretchy=\"false\">(</mo><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle><mo stretchy=\"false\">(</mo><mi>e</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mo>∪</mo><msub><mi>i</mi> <mrow><mi>B</mi><mo>′</mo></mrow></msub><mo stretchy=\"false\">(</mo><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle><mo>′</mo><mo stretchy=\"false\">(</mo><mi>e</mi><mo>′</mo><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mtd></mtr> <mtr><mtd><msub><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle> <mi>&amp;</mi></msub><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">⟨</mo><mi>e</mi><mo>,</mo><mi>e</mi><mo>′</mo><mo stretchy=\"false\">⟩</mo><mo stretchy=\"false\">)</mo></mtd> <mtd><mo>=</mo><msub><mi>i</mi> <mi>B</mi></msub><mo stretchy=\"false\">(</mo><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle><mo stretchy=\"false\">(</mo><mi>e</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mo>∪</mo><msub><mi>i</mi> <mrow><mi>B</mi><mo>′</mo></mrow></msub><mo stretchy=\"false\">(</mo><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle><mo>′</mo><mo stretchy=\"false\">(</mo><mi>e</mi><mo>′</mo><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mtd></mtr> <mtr><mtd /></mtr></mtable></mrow></mrow><annotation encoding=\"application/x-tex\">\\begin{aligned}\r\n\\mathit{pre}_{\\&amp;}(\\langle e,e' \\rangle ) &amp; = i_{B}(\\mathit{pre}(e)) \\cup i_{B'}(\\mathit{pre}'(e'))\\\\\r\n\\mathit{post}_{\\&amp;}(\\langle e,e' \\rangle ) &amp; = i_{B}(\\mathit{post}(e)) \\cup i_{B'}(\\mathit{post}'(e'))\\\\\r\n\\end{aligned}</annotation></semantics></math></p>\r\n\r\n<p>These conditions come from the more general definition of the product in the\r\ncategory <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"bold\"><mi>N</mi></mstyle><mi>&#x1d49e;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{N}\\mathcal{C}</annotation></semantics></math>. In the category <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"bold\"><mi>N</mi></mstyle><mi>&#x1d49e;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{N}\\mathcal{C}</annotation></semantics></math>, the\r\ncartesian product of two nets is defined by component-wise products.\r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>&#x1d4a9;</mi><mspace width=\"0.27778em\" /><mi>&amp;</mi><mspace width=\"0.27778em\" /><mi>&#x1d4a9;</mi><mo>′</mo><mo>=</mo><mo stretchy=\"false\">(</mo><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle><mspace width=\"0.27778em\" /><mi>&amp;</mi><mspace width=\"0.27778em\" /><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle><mo>′</mo><mo>,</mo><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle><mspace width=\"0.27778em\" /><mi>&amp;</mi><mspace width=\"0.27778em\" /><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle><mo>′</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathcal{N} \\ \\&amp; \\  \\mathcal{N}' = (\\mathit{pre} \\ \\&amp; \\ \r\n\\mathit{pre}', \\mathit{post}\\ \\&amp; \\ \r\n\\mathit{post}')</annotation></semantics></math> where <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle><mspace width=\"0.27778em\" /><mi>&amp;</mi><mspace width=\"0.27778em\" /><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">\\mathit{pre} \\ \\&amp; \\ \r\n\\mathit{pre}'</annotation></semantics></math> and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle><mspace width=\"0.27778em\" /><mi>&amp;</mi><mspace width=\"0.27778em\" /><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">\\mathit{post}\\ \\&amp; \\ \r\n\\mathit{post}'</annotation></semantics></math> indicate cartesian products in\r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"bold\"><mi>G</mi></mstyle><mi>&#x1d49e;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{G}\\mathcal{C}</annotation></semantics></math>.</p>\r\n\r\n<p>For the more interested reader, we present the formal definition of cartesian\r\nproduct in the dialectica category <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"bold\"><mi>G</mi></mstyle><mi>&#x1d49e;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{G}\\mathcal{C}</annotation></semantics></math>. The cartesian\r\nproduct of two objects <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>α</mi><mo lspace=\"0.11111em\">:</mo><mi>E</mi><mo>↚</mo><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha \\colon E \\nleftarrow B</annotation></semantics></math> and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>α</mi><mo>′</mo><mo lspace=\"0.11111em\">:</mo><mi>E</mi><mo>′</mo><mo>↚</mo><mi>B</mi><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">\\alpha' \\colon E'\r\n\\nleftarrow B'</annotation></semantics></math> in <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"bold\"><mi>G</mi></mstyle><mi>&#x1d49e;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{G} \\mathcal{C}</annotation></semantics></math> is the relation <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>α</mi><mspace width=\"0.27778em\" /><mi>&amp;</mi><mspace width=\"0.27778em\" /><mi>α</mi><mo>′</mo><mo lspace=\"0.11111em\">:</mo><mi>E</mi><mo>×</mo><mi>E</mi><mo>′</mo><mo>↚</mo><mi>B</mi><mo>+</mo><mi>B</mi><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">\\alpha\r\n\\ \\&amp; \\  \\alpha' \\colon E \\times E' \\nleftarrow B + B'</annotation></semantics></math> given by <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>α</mi><mspace width=\"0.27778em\" /><mi>&amp;</mi><mspace width=\"0.27778em\" /><mi>α</mi><mo>′</mo><mo>=</mo><mo stretchy=\"false\">(</mo><mi>α</mi><mo>×</mo><msub><mi>&#x1d7d9;</mi> <mrow><mi>E</mi><mo>′</mo></mrow></msub><mo stretchy=\"false\">)</mo><mo>+</mo><mo stretchy=\"false\">(</mo><mi>α</mi><mo>′</mo><mo>×</mo><msub><mi>&#x1d7d9;</mi> <mi>E</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\alpha\r\n\\ \\&amp; \\  \\alpha' = (\\alpha \\times \\mathbb{1}_{E'})+(\\alpha' \\times\r\n\\mathbb{1}_E)</annotation></semantics></math> where <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo>×</mo></mrow><annotation encoding=\"application/x-tex\">\\times</annotation></semantics></math> and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo lspace=\"0.11111em\" rspace=\"0em\">+</mo></mrow><annotation encoding=\"application/x-tex\">+</annotation></semantics></math> indicate the product and coproduct in the\r\ncategory <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d49e;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{C}</annotation></semantics></math>. The projections are given by the morphisms\r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo stretchy=\"false\">(</mo><msub><mi>π</mi> <mi>E</mi></msub><mo>,</mo><msub><mi>i</mi> <mi>B</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(\\pi_{E},i_{B})</annotation></semantics></math> and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo stretchy=\"false\">(</mo><msub><mi>π</mi> <mrow><mi>E</mi><mo>′</mo></mrow></msub><mo>,</mo><msub><mi>i</mi> <mrow><mi>B</mi><mo>′</mo></mrow></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(\\pi_{E'},i_{B'})</annotation></semantics></math>.</p>\r\n\r\n<p>By the universal property of the product, when <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d49e;</mi><mo>=</mo><mstyle mathvariant=\"bold\"><mi>Set</mi></mstyle></mrow><annotation encoding=\"application/x-tex\">\\mathcal{C}=\\mathbf{Set}</annotation></semantics></math>, we\r\nobtain the following condition for the product relation, which directly gives\r\nthe conditions for the product of Petri nets that we presented above.</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mrow><mtable displaystyle=\"true\" columnalign=\"right left right left right left right left right left\" columnspacing=\"0em\"><mtr><mtd><mo stretchy=\"false\">⟨</mo><mi>e</mi><mo>,</mo><mi>e</mi><mo>′</mo><mo stretchy=\"false\">⟩</mo><mo stretchy=\"false\">(</mo><mi>α</mi><mspace width=\"0.27778em\" /><mi>&amp;</mi><mspace width=\"0.27778em\" /><mi>α</mi><mo>′</mo><mo stretchy=\"false\">)</mo><msub><mi>i</mi> <mi>B</mi></msub><mo stretchy=\"false\">(</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mtd> <mtd><mo>⇔</mo><mi>e</mi><mspace width=\"0.27778em\" /><mi>α</mi><mspace width=\"0.27778em\" /><mi>b</mi></mtd></mtr> <mtr><mtd><mo stretchy=\"false\">⟨</mo><mi>e</mi><mo>,</mo><mi>e</mi><mo>′</mo><mo stretchy=\"false\">⟩</mo><mo stretchy=\"false\">(</mo><mi>α</mi><mspace width=\"0.27778em\" /><mi>&amp;</mi><mspace width=\"0.27778em\" /><mi>α</mi><mo>′</mo><mo stretchy=\"false\">)</mo><msub><mi>i</mi> <mrow><mi>B</mi><mo>′</mo></mrow></msub><mo stretchy=\"false\">(</mo><mi>b</mi><mo>′</mo><mo stretchy=\"false\">)</mo></mtd> <mtd><mo>⇔</mo><mi>e</mi><mo>′</mo><mspace width=\"0.27778em\" /><mi>α</mi><mo>′</mo><mspace width=\"0.27778em\" /><mi>b</mi><mo>′</mo></mtd></mtr> <mtr><mtd /></mtr></mtable></mrow></mrow><annotation encoding=\"application/x-tex\">\\begin{aligned}\r\n\\langle e,e' \\rangle (\\alpha \\ \\&amp; \\  \\alpha')i_{B}(b)  &amp;\\Leftrightarrow e\r\n\\ \\alpha \\ b\\\\\r\n\\langle e,e' \\rangle (\\alpha \\ \\&amp; \\  \\alpha')i_{B'}(b')  &amp;\\Leftrightarrow\r\ne' \\ \\alpha' \\ b'\\\\\r\n\\end{aligned}</annotation></semantics></math></p>\r\n\r\n<h2>Coproduct</h2>\r\n\r\n<p>The behaviour of a coproduct net is to be able to fire either an event in the\r\nfirst net or one in the second. Thus, events in the coproduct net are events\r\nfrom the first net or the second. Conditions are pairs of conditions in the\r\nfirst and second net, respectively. When a condition <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo stretchy=\"false\">⟨</mo><mi>b</mi><mo>,</mo><mi>b</mi><mo>′</mo><mo stretchy=\"false\">⟩</mo></mrow><annotation encoding=\"application/x-tex\">\\langle b,b' \\rangle</annotation></semantics></math> in\r\nthe coproduct is marked, it is interpreted as one of the two conditions, <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">b</annotation></semantics></math> or\r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>b</mi><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">b'</annotation></semantics></math>, is marked. We will show this through a concrete example. Consider the\r\nfirst of the Petri nets introduced above.</p>\r\n\r\n<p><img width=\"30%\" src=\"http://math.ucr.edu/home/baez/mathematical/ACT2020/DiLavore-Li/N.png\" alt=\"\" /></p>\r\n\r\n<p>Its behaviour is to activate either <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>b</mi> <mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">b_1</annotation></semantics></math> or <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>b</mi> <mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">b_2</annotation></semantics></math> by deactivating <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>b</mi> <mn>0</mn></msub></mrow><annotation encoding=\"application/x-tex\">b_0</annotation></semantics></math>. This\r\nbehaviour seems the one of a coproduct net as we just described it. In fact, we\r\ncan see that the coproduct of the two nets <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>&#x1d4a9;</mi> <mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">\\mathcal{N}_1</annotation></semantics></math>, representing the\r\nactivation of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>b</mi> <mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">b_1</annotation></semantics></math>, and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>&#x1d4a9;</mi> <mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">\\mathcal{N}_2</annotation></semantics></math>, representing the activation of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>b</mi> <mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">b_2</annotation></semantics></math>,\r\nbelow is refined by the net <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d4a9;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{N}</annotation></semantics></math>.</p>\r\n\r\n<p><img width=\"100%\" src=\"http://math.ucr.edu/home/baez/mathematical/ACT2020/DiLavore-Li/coproduct.png\" alt=\"\" /></p>\r\n\r\n<p>In fact, a refinement of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>&#x1d4a9;</mi> <mn>1</mn></msub><mo>⊕</mo><msub><mi>&#x1d4a9;</mi> <mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">\\mathcal{N}_1 \\oplus \\mathcal{N}_2</annotation></semantics></math> by <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d4a9;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{N}</annotation></semantics></math>\r\nis the morphism of elementary nets <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>f</mi><mo>,</mo><mi>F</mi><mo stretchy=\"false\">)</mo><mo lspace=\"0.11111em\">:</mo><msub><mi>&#x1d4a9;</mi> <mn>1</mn></msub><mo>⊕</mo><msub><mi>&#x1d4a9;</mi> <mn>2</mn></msub><mo>→</mo><mi>&#x1d4a9;</mi></mrow><annotation encoding=\"application/x-tex\">(f,F) \\colon \\mathcal{N}_1 \\oplus\r\n\\mathcal{N}_2 \\to \\mathcal{N}</annotation></semantics></math> given by </p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mrow><mtable displaystyle=\"true\" columnalign=\"right left right left right left right left right left\" columnspacing=\"0em\"><mtr><mtd><mi>f</mi><mo lspace=\"0.11111em\">:</mo><msub><mi>E</mi> <mn>1</mn></msub><mo>+</mo><msub><mi>E</mi> <mn>2</mn></msub></mtd> <mtd><mo>→</mo><mi>E</mi></mtd> <mtd><mi>F</mi><mo lspace=\"0.11111em\">:</mo><mi>B</mi></mtd> <mtd><mo>→</mo><msub><mi>B</mi> <mn>1</mn></msub><mo>×</mo><msub><mi>B</mi> <mn>2</mn></msub></mtd></mtr> <mtr><mtd><msub><mi>e</mi> <mn>1</mn></msub></mtd> <mtd><mo>↦</mo><msub><mi>e</mi> <mn>1</mn></msub></mtd> <mtd><msub><mi>b</mi> <mn>0</mn></msub></mtd> <mtd><mo>↦</mo><mo stretchy=\"false\">⟨</mo><msub><mi>b</mi> <mn>0</mn></msub><mo>,</mo><msub><mi>b</mi> <mn>0</mn></msub><mo stretchy=\"false\">⟩</mo></mtd></mtr> <mtr><mtd><msub><mi>e</mi> <mn>2</mn></msub></mtd> <mtd><mo>↦</mo><msub><mi>e</mi> <mn>2</mn></msub></mtd> <mtd><msub><mi>b</mi> <mn>1</mn></msub></mtd> <mtd><mo>↦</mo><mo stretchy=\"false\">⟨</mo><msub><mi>b</mi> <mn>1</mn></msub><mo>,</mo><msub><mi>b</mi> <mn>2</mn></msub><mo stretchy=\"false\">⟩</mo></mtd></mtr> <mtr><mtd /> <mtd /> <mtd><msub><mi>b</mi> <mn>2</mn></msub></mtd> <mtd><mo>↦</mo><mo stretchy=\"false\">⟨</mo><msub><mi>b</mi> <mn>1</mn></msub><mo>,</mo><msub><mi>b</mi> <mn>2</mn></msub><mo stretchy=\"false\">⟩</mo></mtd></mtr> <mtr><mtd /></mtr></mtable></mrow></mrow><annotation encoding=\"application/x-tex\">\\begin{aligned}\r\nf \\colon E_1 + E_2 &amp; \\to E &amp; F \\colon B &amp; \\to B_1 \\times B_2 \\\\\r\ne_1 &amp; \\mapsto e_1 &amp; b_0 &amp; \\mapsto \\langle b_0,b_0 \\rangle \\\\\r\ne_2 &amp; \\mapsto e_2 &amp; b_1 &amp; \\mapsto \\langle b_1,b_2 \\rangle \\\\\r\n&amp; &amp; b_2 &amp; \\mapsto \\langle b_1,b_2 \\rangle \\\\\r\n\\end{aligned}</annotation></semantics></math></p>\r\n\r\n<p>The conditions for the coproduct of two nets <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d4a9;</mi><mo>⊕</mo><mi>&#x1d4a9;</mi><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">\\mathcal{N} \\oplus \\mathcal{N}'</annotation></semantics></math>\r\nin <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"bold\"><mi>NSet</mi></mstyle></mrow><annotation encoding=\"application/x-tex\">\\mathbf{NSet}</annotation></semantics></math> can be given explicitly. </p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mrow><mtable displaystyle=\"true\" columnalign=\"right left right left right left right left right left\" columnspacing=\"0em\"><mtr><mtd><msub><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle> <mo>⊕</mo></msub><mo stretchy=\"false\">(</mo><msub><mi>i</mi> <mi>E</mi></msub><mo stretchy=\"false\">(</mo><mi>e</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mtd> <mtd><mo>=</mo><msubsup><mi>π</mi> <mi>B</mi> <mrow><mo lspace=\"0.11111em\" rspace=\"0em\">−</mo><mn>1</mn></mrow></msubsup><mo stretchy=\"false\">(</mo><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle><mo stretchy=\"false\">(</mo><mi>e</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mtd></mtr> <mtr><mtd><msub><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle> <mo>⊕</mo></msub><mo stretchy=\"false\">(</mo><msub><mi>i</mi> <mrow><mi>E</mi><mo>′</mo></mrow></msub><mo stretchy=\"false\">(</mo><mi>e</mi><mo>′</mo><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mtd> <mtd><mo>=</mo><msubsup><mi>π</mi> <mrow><mi>B</mi><mo>′</mo></mrow> <mrow><mo lspace=\"0.11111em\" rspace=\"0em\">−</mo><mn>1</mn></mrow></msubsup><mo stretchy=\"false\">(</mo><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle><mo>′</mo><mo stretchy=\"false\">(</mo><mi>e</mi><mo>′</mo><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mtd></mtr> <mtr><mtd><msub><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle> <mo>⊕</mo></msub><mo stretchy=\"false\">(</mo><msub><mi>i</mi> <mi>E</mi></msub><mo stretchy=\"false\">(</mo><mi>e</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mtd> <mtd><mo>=</mo><msubsup><mi>π</mi> <mi>B</mi> <mrow><mo lspace=\"0.11111em\" rspace=\"0em\">−</mo><mn>1</mn></mrow></msubsup><mo stretchy=\"false\">(</mo><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle><mo stretchy=\"false\">(</mo><mi>e</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mtd></mtr> <mtr><mtd><msub><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle> <mo>⊕</mo></msub><mo stretchy=\"false\">(</mo><msub><mi>i</mi> <mrow><mi>E</mi><mo>′</mo></mrow></msub><mo stretchy=\"false\">(</mo><mi>e</mi><mo>′</mo><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mtd> <mtd><mo>=</mo><msubsup><mi>π</mi> <mrow><mi>B</mi><mo>′</mo></mrow> <mrow><mo lspace=\"0.11111em\" rspace=\"0em\">−</mo><mn>1</mn></mrow></msubsup><mo stretchy=\"false\">(</mo><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle><mo>′</mo><mo stretchy=\"false\">(</mo><mi>e</mi><mo>′</mo><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mtd></mtr> <mtr><mtd /></mtr></mtable></mrow></mrow><annotation encoding=\"application/x-tex\">\\begin{aligned}\r\n\\mathit{pre}_{\\oplus}(i_{E}(e)) &amp; = \\pi_{B}^{-1}(\\mathit{pre}(e)) \\\\\r\n\\mathit{pre}_{\\oplus}(i_{E'}(e')) &amp; = \\pi_{B'}^{-1}(\\mathit{pre}'(e')) \\\\\r\n\\mathit{post}_{\\oplus}(i_{E}(e)) &amp; = \\pi_{B}^{-1}(\\mathit{post}(e)) \\\\\r\n\\mathit{post}_{\\oplus}(i_{E'}(e')) &amp; = \\pi_{B'}^{-1}(\\mathit{post}'(e')) \\\\\r\n\\end{aligned}</annotation></semantics></math></p>\r\n\r\n<p>The coproduct of two nets is given by component-wise coproducts. <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>&#x1d4a9;</mi><mo>⊕</mo><mi>&#x1d4a9;</mi><mo>′</mo><mo>=</mo><mo stretchy=\"false\">(</mo><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle><mo>⊕</mo><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle><mo>′</mo><mo>,</mo><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle><mo>⊕</mo><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle><mo>′</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathcal{N}\r\n\\oplus \\mathcal{N}' = (\\mathit{pre} \\oplus \\mathit{pre}',\r\n\\mathit{post}\\oplus \\mathit{post}')</annotation></semantics></math> where\r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle><mo>⊕</mo><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">\\mathit{pre} \\oplus \\mathit{pre}'</annotation></semantics></math> and\r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle><mo>⊕</mo><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">\\mathit{post}\\oplus \\mathit{post}'</annotation></semantics></math> are coproducts in\r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"bold\"><mi>G</mi></mstyle><mi>&#x1d49e;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{G}\\mathcal{C}</annotation></semantics></math>.</p>\r\n\r\n<p>We define the coproduct of two objects <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>α</mi><mo lspace=\"0.11111em\">:</mo><mi>E</mi><mo>↚</mo><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha \\colon E \\nleftarrow B</annotation></semantics></math> and\r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>α</mi><mo>′</mo><mo lspace=\"0.11111em\">:</mo><mi>E</mi><mo>′</mo><mo>↚</mo><mi>B</mi><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">\\alpha' \\colon E' \\nleftarrow B'</annotation></semantics></math> in <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"bold\"><mi>G</mi></mstyle><mi>&#x1d49e;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{G} \\mathcal{C}</annotation></semantics></math>. It is the\r\nrelation <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>α</mi><mo>⊕</mo><mi>α</mi><mo>′</mo><mo lspace=\"0.11111em\">:</mo><mi>E</mi><mo>+</mo><mi>E</mi><mo>′</mo><mo>↚</mo><mi>B</mi><mo>×</mo><mi>B</mi><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">\\alpha \\oplus \\alpha' \\colon E+E' \\nleftarrow B \\times B'</annotation></semantics></math> given by\r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>α</mi><mo>⊕</mo><mi>α</mi><mo>′</mo><mo>=</mo><mo stretchy=\"false\">(</mo><mi>α</mi><mo>×</mo><msub><mi>&#x1d7d9;</mi> <mrow><mi>B</mi><mo>′</mo></mrow></msub><mo stretchy=\"false\">)</mo><mo>+</mo><mo stretchy=\"false\">(</mo><mi>α</mi><mo>′</mo><mo>×</mo><msub><mi>&#x1d7d9;</mi> <mi>B</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\alpha \\oplus \\alpha' = (\\alpha \\times \\mathbb{1}_{B'})+(\\alpha' \\times\r\n\\mathbb{1}_B)</annotation></semantics></math> where <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo>×</mo></mrow><annotation encoding=\"application/x-tex\">\\times</annotation></semantics></math> and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo lspace=\"0.11111em\" rspace=\"0em\">+</mo></mrow><annotation encoding=\"application/x-tex\">+</annotation></semantics></math> indicate the product and coproduct in the\r\ncategory <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d49e;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{C}</annotation></semantics></math>. The inclusions are the morphisms <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo stretchy=\"false\">(</mo><msub><mi>i</mi> <mi>E</mi></msub><mo>,</mo><msub><mi>π</mi> <mi>B</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(i_{E},\\pi_{B})</annotation></semantics></math> and\r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo stretchy=\"false\">(</mo><msub><mi>i</mi> <mrow><mi>E</mi><mo>′</mo></mrow></msub><mo>,</mo><msub><mi>π</mi> <mrow><mi>B</mi><mo>′</mo></mrow></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(i_{E'},\\pi_{B'})</annotation></semantics></math>.</p>\r\n\r\n<p>By the universal property of the coproduct, when <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d49e;</mi><mo>=</mo><mstyle mathvariant=\"bold\"><mi>Set</mi></mstyle></mrow><annotation encoding=\"application/x-tex\">\\mathcal{C}=\\mathbf{Set}</annotation></semantics></math>, we\r\ncan express the coproduct relation in terms of the component relations. This\r\ngives the conditions in <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"bold\"><mi>NSet</mi></mstyle></mrow><annotation encoding=\"application/x-tex\">\\mathbf{NSet}</annotation></semantics></math> written above.</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mrow><mtable displaystyle=\"true\" columnalign=\"right left right left right left right left right left\" columnspacing=\"0em\"><mtr><mtd><msub><mi>i</mi> <mi>E</mi></msub><mo stretchy=\"false\">(</mo><mi>e</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mi>α</mi><mo>⊕</mo><mi>α</mi><mo>′</mo><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">⟨</mo><mi>b</mi><mo>,</mo><mi>b</mi><mo>′</mo><mo stretchy=\"false\">⟩</mo></mtd> <mtd><mo>⇔</mo><mi>e</mi><mspace width=\"0.27778em\" /><mi>α</mi><mspace width=\"0.27778em\" /><mi>b</mi></mtd></mtr> <mtr><mtd><msub><mi>i</mi> <mrow><mi>E</mi><mo>′</mo></mrow></msub><mo stretchy=\"false\">(</mo><mi>e</mi><mo>′</mo><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mi>α</mi><mo>⊕</mo><mi>α</mi><mo>′</mo><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">⟨</mo><mi>b</mi><mo>,</mo><mi>b</mi><mo>′</mo><mo stretchy=\"false\">⟩</mo></mtd> <mtd><mo>⇔</mo><mi>e</mi><mo>′</mo><mspace width=\"0.27778em\" /><mi>α</mi><mo>′</mo><mspace width=\"0.27778em\" /><mi>b</mi><mo>′</mo></mtd></mtr> <mtr><mtd /></mtr></mtable></mrow></mrow><annotation encoding=\"application/x-tex\">\\begin{aligned}\r\ni_{E} (e) (\\alpha \\oplus \\alpha') \\langle b,b' \\rangle  &amp;\\Leftrightarrow e \\ \\alpha \\ b\\\\\r\ni_{E'}(e') (\\alpha \\oplus \\alpha') \\langle b,b' \\rangle  &amp;\\Leftrightarrow e' \\ \\alpha' \\ b'\\\\\r\n\\end{aligned}</annotation></semantics></math></p>\r\n\r\n<h2>Monoidal product</h2>\r\n\r\n<p>The monoidal product also represents the concurrent firing of events in the two\r\nnets but, contrary to the cartesian product, it keeps track of the necessary\r\nchannels of communication between events in one net and conditions in the other\r\nfor the concurrent event to happen. Thus, events in <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d4a9;</mi><mo>⊗</mo><mi>&#x1d4a9;</mi><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">\\mathcal{N} \\otimes\r\n\\mathcal{N}'</annotation></semantics></math> are going to be again pairs of events <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo stretchy=\"false\">⟨</mo><mi>e</mi><mo>,</mo><mi>e</mi><mo>′</mo><mo stretchy=\"false\">⟩</mo></mrow><annotation encoding=\"application/x-tex\">\\langle e,e' \\rangle</annotation></semantics></math>, with\r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>e</mi></mrow><annotation encoding=\"application/x-tex\">e</annotation></semantics></math> an event in <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d4a9;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{N}</annotation></semantics></math> and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>e</mi><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">e'</annotation></semantics></math> an event in <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d4a9;</mi><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">\\mathcal{N}'</annotation></semantics></math>. However,\r\nconditions are going to be pairs of functions <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo stretchy=\"false\">⟨</mo><mi>f</mi><mo>,</mo><mi>f</mi><mo>′</mo><mo stretchy=\"false\">⟩</mo></mrow><annotation encoding=\"application/x-tex\">\\langle f,f' \\rangle</annotation></semantics></math> from events\r\nin one net to conditions in the other, so that <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math> represents a channel from the\r\nevents in <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d4a9;</mi><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">\\mathcal{N}'</annotation></semantics></math> to the conditions in <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d4a9;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{N}</annotation></semantics></math> and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>f</mi><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">f'</annotation></semantics></math> a channel\r\nfrom the events in <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d4a9;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{N}</annotation></semantics></math> to the conditions in <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d4a9;</mi><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">\\mathcal{N}'</annotation></semantics></math>. Consider\r\nthe monoidal product of the Petri nets shown above <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d4a9;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{N}</annotation></semantics></math> and\r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d4a9;</mi><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">\\mathcal{N}'</annotation></semantics></math>.</p>\r\n\r\n<p><img width=\"100%\" src=\"http://math.ucr.edu/home/baez/mathematical/ACT2020/DiLavore-Li/tensor.png\" alt=\"\" /> </p>\r\n\r\n<p><em>On the right hand side, we indicate with <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>b</mi> <mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">b_i</annotation></semantics></math> the function from <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>E</mi><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">E'</annotation></semantics></math> to\r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">B</annotation></semantics></math> that sends <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>e</mi><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">e'</annotation></semantics></math> to <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>b</mi> <mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">b_i</annotation></semantics></math>. We indicate with <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d7d9;</mi><mo>,</mo><mo lspace=\"0em\" rspace=\"0.16667em\">lnot</mo><mo>,</mo><msub><mo>!</mo> <mn>0</mn></msub><mo>,</mo><msub><mo>!</mo> <mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">\\mathbb{1}, \\lnot, !_0, !_1</annotation></semantics></math> the\r\nfunctions from <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>E</mi></mrow><annotation encoding=\"application/x-tex\">E</annotation></semantics></math> to <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>B</mi><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">B'</annotation></semantics></math> that send <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>e</mi> <mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">e_i</annotation></semantics></math> to <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>b</mi><msub><mo>′</mo> <mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding=\"application/x-tex\">b'_{i-1}</annotation></semantics></math>, <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>e</mi> <mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">e_1</annotation></semantics></math> to <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>b</mi><msub><mo>′</mo> <mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">b'_1</annotation></semantics></math> and\r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>e</mi> <mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">e_2</annotation></semantics></math> to <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>b</mi><msub><mo>′</mo> <mn>0</mn></msub></mrow><annotation encoding=\"application/x-tex\">b'_0</annotation></semantics></math>, <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>e</mi> <mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">e_i</annotation></semantics></math> to <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>b</mi> <mn>0</mn></msub></mrow><annotation encoding=\"application/x-tex\">b_0</annotation></semantics></math>, and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>e</mi> <mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">e_i</annotation></semantics></math> to <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>b</mi> <mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">b_1</annotation></semantics></math>, respectively.</em></p>\r\n\r\n<p>The preconditions for the synchronous event <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo stretchy=\"false\">⟨</mo><msub><mi>e</mi> <mn>1</mn></msub><mo>,</mo><mi>e</mi><mo>′</mo><mo stretchy=\"false\">⟩</mo></mrow><annotation encoding=\"application/x-tex\">\\langle e_1,e' \\rangle</annotation></semantics></math> are all\r\nthose channels that, whenever <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>e</mi> <mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">e_1</annotation></semantics></math> can fire, enable the preconditions of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>e</mi><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">e'</annotation></semantics></math>\r\nand all those channels that, whenever <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>e</mi><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">e'</annotation></semantics></math> can fire, enable the preconditions of\r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>e</mi> <mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">e_1</annotation></semantics></math>. This means that the preconditions of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo stretchy=\"false\">⟨</mo><msub><mi>e</mi> <mn>1</mn></msub><mo>,</mo><mi>e</mi><mo>′</mo><mo stretchy=\"false\">⟩</mo></mrow><annotation encoding=\"application/x-tex\">\\langle e_1,e' \\rangle</annotation></semantics></math> are pairs\r\nof functions <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo stretchy=\"false\">⟨</mo><mi>f</mi><mo>,</mo><mi>f</mi><mo>′</mo><mo stretchy=\"false\">⟩</mo></mrow><annotation encoding=\"application/x-tex\">\\langle f,f' \\rangle</annotation></semantics></math> such that <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mi>e</mi><mo>′</mo><mo stretchy=\"false\">)</mo><mo>=</mo><msub><mi>b</mi> <mn>0</mn></msub></mrow><annotation encoding=\"application/x-tex\">f(e')=b_0</annotation></semantics></math> and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>f</mi><mo>′</mo><mo stretchy=\"false\">(</mo><msub><mi>e</mi> <mn>1</mn></msub><mo stretchy=\"false\">)</mo><mo>=</mo><msub><mi>b</mi> <mn>0</mn></msub><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">f'(e_1) = b_0'</annotation></semantics></math>\r\nor <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>f</mi><mo>′</mo><mo stretchy=\"false\">(</mo><msub><mi>e</mi> <mn>1</mn></msub><mo stretchy=\"false\">)</mo><mo>=</mo><msub><mi>b</mi> <mn>1</mn></msub><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">f'(e_1) = b_1'</annotation></semantics></math>. Similarly, after firing <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo stretchy=\"false\">⟨</mo><msub><mi>e</mi> <mn>1</mn></msub><mo>,</mo><mi>e</mi><mo>′</mo><mo stretchy=\"false\">⟩</mo></mrow><annotation encoding=\"application/x-tex\">\\langle e_1,e' \\rangle</annotation></semantics></math>, the\r\nchannels <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo stretchy=\"false\">⟨</mo><mi>f</mi><mo>,</mo><mi>f</mi><mo>′</mo><mo stretchy=\"false\">⟩</mo></mrow><annotation encoding=\"application/x-tex\">\\langle f,f' \\rangle</annotation></semantics></math> such that <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mi>e</mi><mo>′</mo><mo stretchy=\"false\">)</mo><mo>=</mo><msub><mi>b</mi> <mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">f(e')=b_1</annotation></semantics></math> and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>f</mi><mo>′</mo><mo stretchy=\"false\">(</mo><msub><mi>e</mi> <mn>1</mn></msub><mo stretchy=\"false\">)</mo><mo>=</mo><msub><mi>b</mi> <mn>0</mn></msub><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">f'(e_1)=b_0'</annotation></semantics></math>.</p>\r\n\r\n<p>In <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"bold\"><mi>NSet</mi></mstyle></mrow><annotation encoding=\"application/x-tex\">\\mathbf{NSet}</annotation></semantics></math>, the conditions on the preconditions and postconditions sets\r\ncan be given explicitly. </p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mrow><mtable displaystyle=\"true\" columnalign=\"right left right left right left right left right left\" columnspacing=\"0em\"><mtr><mtd><mo stretchy=\"false\">⟨</mo><mi>e</mi><mo>,</mo><mi>e</mi><mo>′</mo><mo stretchy=\"false\">⟩</mo><mspace width=\"0.27778em\" /><msub><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle> <mo>⊗</mo></msub><mspace width=\"0.27778em\" /><mo stretchy=\"false\">⟨</mo><mi>f</mi><mo>,</mo><mi>f</mi><mo>′</mo><mo stretchy=\"false\">⟩</mo></mtd> <mtd><mo>⇔</mo><mi>e</mi><mspace width=\"0.27778em\" /><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle><mspace width=\"0.27778em\" /><mi>f</mi><mo stretchy=\"false\">(</mo><mi>e</mi><mo>′</mo><mo stretchy=\"false\">)</mo><mspace width=\"0.27778em\" /><mtext> and </mtext><mspace width=\"0.27778em\" /><mi>e</mi><mo>′</mo><mspace width=\"0.27778em\" /><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle><mo>′</mo><mspace width=\"0.27778em\" /><mi>f</mi><mo>′</mo><mo stretchy=\"false\">(</mo><mi>e</mi><mo stretchy=\"false\">)</mo></mtd></mtr> <mtr><mtd><mo stretchy=\"false\">⟨</mo><mi>e</mi><mo>,</mo><mi>e</mi><mo>′</mo><mo stretchy=\"false\">⟩</mo><mspace width=\"0.27778em\" /><msub><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle> <mo>⊗</mo></msub><mspace width=\"0.27778em\" /><mo stretchy=\"false\">⟨</mo><mi>f</mi><mo>,</mo><mi>f</mi><mo>′</mo><mo stretchy=\"false\">⟩</mo></mtd> <mtd><mo>⇔</mo><mi>e</mi><mspace width=\"0.27778em\" /><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle><mspace width=\"0.27778em\" /><mi>f</mi><mo stretchy=\"false\">(</mo><mi>e</mi><mo>′</mo><mo stretchy=\"false\">)</mo><mspace width=\"0.27778em\" /><mtext> and </mtext><mspace width=\"0.27778em\" /><mi>e</mi><mo>′</mo><mspace width=\"0.27778em\" /><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle><mo>′</mo><mspace width=\"0.27778em\" /><mi>f</mi><mo>′</mo><mo stretchy=\"false\">(</mo><mi>e</mi><mo stretchy=\"false\">)</mo></mtd></mtr> <mtr><mtd /></mtr></mtable></mrow></mrow><annotation encoding=\"application/x-tex\">\\begin{aligned}\r\n\\langle e, e' \\rangle \\ \\mathit{pre}_{\\otimes} \\ \\langle f,f' \\rangle\r\n&amp;\\Leftrightarrow e \\ \\mathit{pre} \\ f(e') \\ \\text{ and } \\ e' \\ \\mathit{pre}' \\ f'(e) \\\\\r\n\\langle e, e' \\rangle \\ \\mathit{post}_{\\otimes} \\ \\langle f,f' \\rangle\r\n&amp;\\Leftrightarrow e \\ \\mathit{post} \\ f(e') \\ \\text{ and } \\ e' \\ \\mathit{post}' \\ f'(e) \\\\\r\n\\end{aligned}</annotation></semantics></math></p>\r\n\r\n<p>More generally, in <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"bold\"><mi>N</mi></mstyle><mi>&#x1d49e;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{N}\\mathcal{C}</annotation></semantics></math>, the monoidal product of two nets is\r\ngiven by the component-wise monoidal product <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>&#x1d4a9;</mi><mo>⊗</mo><mi>&#x1d4a9;</mi><mo>′</mo><mo>=</mo><mo stretchy=\"false\">(</mo><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle><mo>⊗</mo><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle><mo>′</mo><mo>,</mo><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle><mo>⊗</mo><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle><mo>′</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathcal{N} \\otimes \\mathcal{N}'\r\n= (\\mathit{pre} \\otimes \\mathit{pre}',\r\n\\mathit{post}\\otimes \\mathit{post}')</annotation></semantics></math> where\r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle><mo>⊗</mo><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">\\mathit{pre} \\otimes \\mathit{pre}'</annotation></semantics></math> and\r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle><mo>⊗</mo><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">\\mathit{post}\\otimes \\mathit{post}'</annotation></semantics></math> are monoidal products\r\nin <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"bold\"><mi>G</mi></mstyle><mi>&#x1d49e;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{G}\\mathcal{C}</annotation></semantics></math>.</p>\r\n\r\n<p>For the details of this definition, we need to define the monoidal product of\r\ntwo objects <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>α</mi><mo lspace=\"0.11111em\">:</mo><mi>E</mi><mo>↚</mo><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha \\colon E \\nleftarrow B</annotation></semantics></math> and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>α</mi><mo>′</mo><mo lspace=\"0.11111em\">:</mo><mi>E</mi><mo>′</mo><mo>↚</mo><mi>B</mi><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">\\alpha' \\colon E' \\nleftarrow\r\nB'</annotation></semantics></math> in <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"bold\"><mi>G</mi></mstyle><mi>&#x1d49e;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{G} \\mathcal{C}</annotation></semantics></math>. It is the relation <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>α</mi><mo>⊗</mo><mi>α</mi><mo>′</mo><mo lspace=\"0.11111em\">:</mo><mi>E</mi><mo>×</mo><mi>E</mi><mo>′</mo><mo>↚</mo><msup><mi>B</mi> <mrow><msup><mi>E</mi> <mo>′</mo></msup></mrow></msup><mo>×</mo><mi>B</mi><msup><mo>′</mo> <mi>E</mi></msup></mrow><annotation encoding=\"application/x-tex\">\\alpha \\otimes \\alpha'\r\n\\colon E \\times E' \\nleftarrow B^{E^'} \\times B'^E</annotation></semantics></math> given by <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>α</mi><mo>⊗</mo><mi>α</mi><mo>′</mo><mo>=</mo><mo stretchy=\"false\">(</mo><msub><mi>&#x1d7d9;</mi> <mrow><mi>E</mi><mo>′</mo></mrow></msub><mo>×</mo><mo stretchy=\"false\">(</mo><mi>π</mi><mo>′</mo><mo>;</mo><msub><mstyle mathvariant=\"italic\"><mi>ev</mi></mstyle> <mi>E</mi></msub><mo stretchy=\"false\">)</mo><msup><mo stretchy=\"false\">)</mo> <mrow><mo lspace=\"0.11111em\" rspace=\"0em\">−</mo><mn>1</mn></mrow></msup><mo stretchy=\"false\">(</mo><mi>α</mi><mo>′</mo><mo stretchy=\"false\">)</mo><mo>∧</mo><mo stretchy=\"false\">(</mo><msub><mi>&#x1d7d9;</mi> <mi>E</mi></msub><mo>×</mo><mo stretchy=\"false\">(</mo><mi>π</mi><mo>;</mo><msub><mstyle mathvariant=\"italic\"><mi>ev</mi></mstyle> <mrow><mi>E</mi><mo>′</mo></mrow></msub><mo stretchy=\"false\">)</mo><msup><mo stretchy=\"false\">)</mo> <mrow><mo lspace=\"0.11111em\" rspace=\"0em\">−</mo><mn>1</mn></mrow></msup><mo stretchy=\"false\">(</mo><mi>α</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\alpha \\otimes\r\n\\alpha' = (\\mathbb{1}_{E'} \\times (\\pi' ; \\mathit{ev}_E))^{-1}(\\alpha') \\wedge\r\n(\\mathbb{1}_{E} \\times (\\pi ; \\mathit{ev}_{E'}))^{-1}(\\alpha)</annotation></semantics></math> where\r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msup><mi>f</mi> <mrow><mo lspace=\"0.11111em\" rspace=\"0em\">−</mo><mn>1</mn></mrow></msup><mo stretchy=\"false\">(</mo><mi>g</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f^{-1}(g)</annotation></semantics></math> indicates the pullback of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">g</annotation></semantics></math> along <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math> in the category\r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d49e;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{C}</annotation></semantics></math> and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>f</mi><mo>∧</mo><mi>f</mi><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">f \\wedge f'</annotation></semantics></math> indicates the pullback of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math> and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>f</mi><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">f'</annotation></semantics></math>.</p>\r\n\r\n<p>By taking <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d49e;</mi><mo>=</mo><mstyle mathvariant=\"bold\"><mi>Set</mi></mstyle></mrow><annotation encoding=\"application/x-tex\">\\mathcal{C} = \\mathbf{Set}</annotation></semantics></math>, these conditions can be explicitly\r\nstated as follows.</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo stretchy=\"false\">⟨</mo><mi>e</mi><mo>,</mo><mi>e</mi><mo>′</mo><mo stretchy=\"false\">⟩</mo><mo stretchy=\"false\">(</mo><mi>α</mi><mo>⊗</mo><mi>α</mi><mo>′</mo><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">⟨</mo><mi>f</mi><mo>,</mo><mi>f</mi><mo>′</mo><mo stretchy=\"false\">⟩</mo><mo>⇔</mo><mi>e</mi><mspace width=\"0.27778em\" /><mi>α</mi><mspace width=\"0.27778em\" /><mi>f</mi><mo stretchy=\"false\">(</mo><mi>e</mi><mo>′</mo><mo stretchy=\"false\">)</mo><mspace width=\"0.27778em\" /><mtext> and </mtext><mspace width=\"0.27778em\" /><mi>e</mi><mo>′</mo><mspace width=\"0.27778em\" /><mi>α</mi><mo>′</mo><mspace width=\"0.27778em\" /><mi>f</mi><mo>′</mo><mo stretchy=\"false\">(</mo><mi>e</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\langle e, e' \\rangle (\\alpha \\otimes \\alpha') \\langle f,f' \\rangle\r\n\\Leftrightarrow e \\ \\alpha \\ f(e') \\ \\text{ and } \\ e' \\ \\alpha' \\ f'(e)</annotation></semantics></math></p>\r\n\r\n<h2>Units</h2>\r\n\r\n<p>The units of the operations given so far are the terminal object, the initial\r\nobject and the monoidal unit respectively.</p>\r\n\r\n<p><img width=\"50%\" src=\"http://math.ucr.edu/home/baez/mathematical/ACT2020/DiLavore-Li/units.png\" alt=\"\" /></p>\r\n\r\n<p>The unit for the cartesian product is the empty relation from <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">0</annotation></semantics></math> to <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math>, the\r\nunit of the coproduct is the empty relation from <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math> to <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">0</annotation></semantics></math> and the monoidal\r\nunit is the identity relation from <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math> to <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math>, where <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">0</annotation></semantics></math> and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math> indicate the\r\ninitial and terminal object of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d49e;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{C}</annotation></semantics></math>, respectively.</p>\r\n\r\n<h2>Exponential</h2>\r\n\r\n<p>The exponential of two nets, as one might expect, gives information about the\r\nmorphisms from one net to the other because morphisms from <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d4a9;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{N}</annotation></semantics></math> to\r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d4a9;</mi><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">\\mathcal{N}'</annotation></semantics></math> correspond to points of the exponential <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mrow><mo>[</mo><mi>&#x1d4a9;</mi><mo>,</mo><mi>&#x1d4a9;</mi><mo>′</mo><mo>]</mo></mrow></mrow><annotation encoding=\"application/x-tex\">\\left[ \\mathcal{N},\r\n\\mathcal{N}' \\right]</annotation></semantics></math>. Events in <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mrow><mo>[</mo><mi>&#x1d4a9;</mi><mo>,</mo><mi>&#x1d4a9;</mi><mo>′</mo><mo>]</mo></mrow></mrow><annotation encoding=\"application/x-tex\">\\left[ \\mathcal{N}, \\mathcal{N}' \\right]</annotation></semantics></math> have\r\nthe types of morphisms from <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d4a9;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{N}</annotation></semantics></math> to <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d4a9;</mi><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">\\mathcal{N}'</annotation></semantics></math>, and they correspond\r\nto morphisms precisely when they have all places in the exponential net as\r\npreconditions and postconditions. Places in the exponential are elements in\r\nwhich the events can be evaluated, namely, pairs <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo stretchy=\"false\">⟨</mo><mi>e</mi><mo>,</mo><mi>b</mi><mo>′</mo><mo stretchy=\"false\">⟩</mo></mrow><annotation encoding=\"application/x-tex\">\\langle e,b' \\rangle</annotation></semantics></math> with <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>e</mi><mo>∈</mo><mi>E</mi></mrow><annotation encoding=\"application/x-tex\">e\r\n\\in E</annotation></semantics></math> and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>b</mi><mo>′</mo><mo>∈</mo><mi>B</mi><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">b' \\in B'</annotation></semantics></math>. The following example shows that there is one possible\r\nmorphism from the first net to the second one, the one corresponding to the\r\ncoloured event <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo stretchy=\"false\">⟨</mo><mo>!</mo><mo>,</mo><msub><mi>b</mi> <mn>0</mn></msub><mo stretchy=\"false\">⟩</mo></mrow><annotation encoding=\"application/x-tex\">\\langle ! , b_0 \\rangle</annotation></semantics></math>.</p>\r\n\r\n<p><img width=\"100%\" src=\"http://math.ucr.edu/home/baez/mathematical/ACT2020/DiLavore-Li/exponential.png\" alt=\"\" /> </p>\r\n\r\n<p><em>On the right hand side, we indicate with <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>b</mi> <mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">b_i</annotation></semantics></math> the function from\r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>B</mi><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">B'</annotation></semantics></math> to <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">B</annotation></semantics></math> that sends <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>b</mi> <mn>0</mn></msub><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">b_0'</annotation></semantics></math> to <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>b</mi> <mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">b_i</annotation></semantics></math> and with <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo>!</mo></mrow><annotation encoding=\"application/x-tex\">!</annotation></semantics></math> the only function from <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>E</mi></mrow><annotation encoding=\"application/x-tex\">E</annotation></semantics></math>\r\nto <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>E</mi><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">E'</annotation></semantics></math>.</em></p>\r\n\r\n<p>If the first net represents cooking pizza from the ingredients and the second\r\nnet represents destroying the ingredients, then destroying the ingredients is a\r\nrefinement of using the ingredients to cook a pizza and the refinement map is\r\ngiven by the pair of functions <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo stretchy=\"false\">(</mo><mo>!</mo><mo>,</mo><msub><mi>b</mi> <mn>0</mn></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(!,b_0)</annotation></semantics></math> that sends cooking to destroying and\r\nthe ingredients to the ingredients.</p>\r\n\r\n<p>We can write the precondition and postcondition relations of the exponential of\r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d4a9;</mi><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">\\mathcal{N}'</annotation></semantics></math> by <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d4a9;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{N}</annotation></semantics></math> in terms of the ones in <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d4a9;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{N}</annotation></semantics></math> and\r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d4a9;</mi><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">\\mathcal{N}'</annotation></semantics></math>. </p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mrow><mtable displaystyle=\"true\" columnalign=\"right left right left right left right left right left\" columnspacing=\"0em\"><mtr><mtd><mo stretchy=\"false\">⟨</mo><mi>f</mi><mo>,</mo><mi>F</mi><mo stretchy=\"false\">⟩</mo><mrow><mo>[</mo><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle><mo>,</mo><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle><mo>′</mo><mo>]</mo></mrow><mo stretchy=\"false\">⟨</mo><mi>e</mi><mo>,</mo><mi>b</mi><mo>′</mo><mo stretchy=\"false\">⟩</mo></mtd> <mtd><mo>⇔</mo><mspace width=\"0.27778em\" /><mtext> if </mtext><mspace width=\"0.27778em\" /><mi>e</mi><mspace width=\"0.27778em\" /><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle><mspace width=\"0.27778em\" /><mi>F</mi><mo stretchy=\"false\">(</mo><mi>b</mi><mo>′</mo><mo stretchy=\"false\">)</mo><mspace width=\"0.27778em\" /><mtext> then\r\n</mtext><mspace width=\"0.27778em\" /><mi>f</mi><mo stretchy=\"false\">(</mo><mi>e</mi><mo stretchy=\"false\">)</mo><mspace width=\"0.27778em\" /><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle><mo>′</mo><mspace width=\"0.27778em\" /><mi>b</mi><mo>′</mo></mtd></mtr> <mtr><mtd><mo stretchy=\"false\">⟨</mo><mi>f</mi><mo>,</mo><mi>F</mi><mo stretchy=\"false\">⟩</mo><mrow><mo>[</mo><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle><mo>,</mo><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle><mo>′</mo><mo>]</mo></mrow><mo stretchy=\"false\">⟨</mo><mi>e</mi><mo>,</mo><mi>b</mi><mo>′</mo><mo stretchy=\"false\">⟩</mo></mtd> <mtd><mo>⇔</mo><mspace width=\"0.27778em\" /><mtext> if </mtext><mspace width=\"0.27778em\" /><mi>e</mi><mspace width=\"0.27778em\" /><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle><mspace width=\"0.27778em\" /><mi>F</mi><mo stretchy=\"false\">(</mo><mi>b</mi><mo>′</mo><mo stretchy=\"false\">)</mo><mspace width=\"0.27778em\" /><mtext> then\r\n</mtext><mspace width=\"0.27778em\" /><mi>f</mi><mo stretchy=\"false\">(</mo><mi>e</mi><mo stretchy=\"false\">)</mo><mspace width=\"0.27778em\" /><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle><mo>′</mo><mspace width=\"0.27778em\" /><mi>b</mi><mo>′</mo></mtd></mtr> <mtr><mtd /></mtr></mtable></mrow></mrow><annotation encoding=\"application/x-tex\">\\begin{aligned}\r\n\\langle f,F \\rangle \\left[ \\mathit{pre}, \\mathit{pre}' \\right] \\langle e,b'\r\n\\rangle &amp;\\Leftrightarrow \\ \\text{ if } \\ e \\ \\mathit{pre} \\  F(b') \\ \\text{ then\r\n} \\ f(e) \\ \\mathit{pre}' \\ b' \\\\\r\n\\langle f,F \\rangle \\left[ \\mathit{post}, \\mathit{post}' \\right] \\langle e,b'\r\n\\rangle &amp;\\Leftrightarrow \\ \\text{ if } \\ e \\ \\mathit{post} \\ F(b') \\ \\text{ then\r\n} \\ f(e) \\ \\mathit{post}' \\ b' \\\\\r\n\\end{aligned}</annotation></semantics></math></p>\r\n\r\n<p>More generally, in the category <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"bold\"><mi>N</mi></mstyle><mi>&#x1d49e;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{N}\\mathcal{C}</annotation></semantics></math>, the exponential of two\r\nnets is given by the component-wise exponential <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mrow><mo>[</mo><mi>&#x1d4a9;</mi><mo>,</mo><mi>&#x1d4a9;</mi><mo>′</mo><mo>]</mo></mrow><mo>=</mo><mo stretchy=\"false\">(</mo><mrow><mo>[</mo><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle><mo>,</mo><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle><mo>′</mo><mo>]</mo></mrow><mo>,</mo><mrow><mo>[</mo><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle><mo>,</mo><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle><mo>′</mo><mo>]</mo></mrow><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\left[ \\mathcal{N},\r\n\\mathcal{N}' \\right] = (\\left[ \\mathit{pre}, \\mathit{pre}'\r\n\\right], \\left[ \\mathit{post}, \\mathit{post}' \\right])</annotation></semantics></math>\r\nwhere <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mrow><mo>[</mo><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle><mo>,</mo><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle><mo>′</mo><mo>]</mo></mrow></mrow><annotation encoding=\"application/x-tex\">\\left[ \\mathit{pre}, \\mathit{pre}' \\right]</annotation></semantics></math> and\r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mrow><mo>[</mo><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle><mo>,</mo><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle><mo>′</mo><mo>]</mo></mrow></mrow><annotation encoding=\"application/x-tex\">\\left[ \\mathit{post}, \\mathit{post}' \\right]</annotation></semantics></math> are\r\nexponentials in <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"bold\"><mi>G</mi></mstyle><mi>&#x1d49e;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{G}\\mathcal{C}</annotation></semantics></math>.</p>\r\n\r\n<p>In the category <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"bold\"><mi>G</mi></mstyle><mi>&#x1d49e;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{G} \\mathcal{C}</annotation></semantics></math>, the exponential of two objects <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>α</mi><mo lspace=\"0.11111em\">:</mo><mi>E</mi><mo>↚</mo><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha\r\n\\colon E \\nleftarrow B</annotation></semantics></math> and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>α</mi><mo>′</mo><mo lspace=\"0.11111em\">:</mo><mi>E</mi><mo>′</mo><mo>↚</mo><mi>B</mi><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">\\alpha' \\colon E' \\nleftarrow B'</annotation></semantics></math> is the relation\r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mrow><mo>[</mo><mi>α</mi><mo>,</mo><mi>α</mi><mo>′</mo><mo>]</mo></mrow><mo lspace=\"0.11111em\">:</mo><mi>E</mi><msup><mo>′</mo> <mi>E</mi></msup><mo>×</mo><msup><mi>B</mi> <mrow><mi>B</mi><mo>′</mo></mrow></msup><mo>↚</mo><mi>E</mi><mo>×</mo><mi>B</mi><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">\\left[ \\alpha, \\alpha' \\right] \\colon E'^E \\times B^{B'} \\nleftarrow E \\times\r\nB'</annotation></semantics></math> given by the greatest subobject <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mrow><mo>[</mo><mi>α</mi><mo>,</mo><mi>α</mi><mo>′</mo><mo>]</mo></mrow></mrow><annotation encoding=\"application/x-tex\">\\left[ \\alpha, \\alpha' \\right]</annotation></semantics></math> of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>E</mi><msup><mo>′</mo> <mi>E</mi></msup><mo>×</mo><msup><mi>B</mi> <mrow><mi>B</mi><mo>′</mo></mrow></msup><mo>×</mo><mi>E</mi><mo>×</mo><mi>B</mi><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">E'^E\r\n\\times B^{B'} \\times E \\times B'</annotation></semantics></math> such that <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mrow><mo>[</mo><mi>α</mi><mo>,</mo><mi>α</mi><mo>′</mo><mo>]</mo></mrow><mo>∧</mo><mi>γ</mi><mo>≤</mo><mi>γ</mi><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">\\left[ \\alpha, \\alpha' \\right]\r\n\\wedge \\gamma \\leq \\gamma'</annotation></semantics></math> with <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>γ</mi><mo>=</mo><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">(</mo><msub><mi>&#x1d7d9;</mi> <mrow><mi>E</mi><msup><mo>′</mo> <mi>E</mi></msup><mo>×</mo><mi>E</mi></mrow></msub><mo>×</mo><msub><mstyle mathvariant=\"italic\"><mi>ev</mi></mstyle> <mrow><mi>B</mi><mo>′</mo></mrow></msub><mo stretchy=\"false\">)</mo><mo>;</mo><mi>π</mi><msup><mo stretchy=\"false\">)</mo> <mrow><mo lspace=\"0.11111em\" rspace=\"0em\">−</mo><mn>1</mn></mrow></msup><mo stretchy=\"false\">(</mo><mi>α</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\gamma = ((\\mathbb{1}_{E'^E \\times E} \\times\r\n\\mathit{ev}_{B'}); \\pi)^{-1}(\\alpha)</annotation></semantics></math> and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>γ</mi><mo>′</mo><mo>=</mo><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">(</mo><msub><mi>&#x1d7d9;</mi> <mrow><msup><mi>B</mi> <mrow><mi>B</mi><mo>′</mo></mrow></msup><mo>×</mo><mi>B</mi><mo>′</mo></mrow></msub><mo>×</mo><msub><mstyle mathvariant=\"italic\"><mi>ev</mi></mstyle> <mi>E</mi></msub><mo stretchy=\"false\">)</mo><mo>;</mo><mi>π</mi><mo>′</mo><msup><mo stretchy=\"false\">)</mo> <mrow><mo lspace=\"0.11111em\" rspace=\"0em\">−</mo><mn>1</mn></mrow></msup><mo stretchy=\"false\">(</mo><mi>α</mi><mo>′</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\gamma' = ((\\mathbb{1}_{B^{B'} \\times\r\nB'} \\times \\mathit{ev}_{E}); \\pi')^{-1}(\\alpha')</annotation></semantics></math>, where <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msup><mi>f</mi> <mrow><mo lspace=\"0.11111em\" rspace=\"0em\">−</mo><mn>1</mn></mrow></msup><mo stretchy=\"false\">(</mo><mi>g</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f^{-1}(g)</annotation></semantics></math> indicates\r\nthe pullback of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">g</annotation></semantics></math> along <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math> in the category <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d49e;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{C}</annotation></semantics></math>, <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>f</mi><mo lspace=\"0em\" rspace=\"0.16667em\">wedgef</mo><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">f \\wedgef'</annotation></semantics></math>\r\nindicates the pullback of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math> and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>f</mi><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">f'</annotation></semantics></math> and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo>≤</mo></mrow><annotation encoding=\"application/x-tex\">\\leq</annotation></semantics></math> indicates the inclusion of\r\nsubobjects.</p>\r\n\r\n<p>When <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d49e;</mi><mo>=</mo><mstyle mathvariant=\"bold\"><mi>Set</mi></mstyle></mrow><annotation encoding=\"application/x-tex\">\\mathcal{C} = \\mathbf{Set}</annotation></semantics></math>, these conditions can be explicitly stated as\r\nfollows.</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo stretchy=\"false\">⟨</mo><mi>f</mi><mo>,</mo><mi>F</mi><mo stretchy=\"false\">⟩</mo><mrow><mo>[</mo><mi>α</mi><mo>,</mo><mi>α</mi><mo>′</mo><mo>]</mo></mrow><mo stretchy=\"false\">⟨</mo><mi>e</mi><mo>,</mo><mi>b</mi><mo>′</mo><mo stretchy=\"false\">⟩</mo><mo>⇔</mo><mspace width=\"0.27778em\" /><mtext> if </mtext><mspace width=\"0.27778em\" /><mi>e</mi><mspace width=\"0.27778em\" /><mi>α</mi><mspace width=\"0.27778em\" /><mi>F</mi><mo stretchy=\"false\">(</mo><mi>b</mi><mo>′</mo><mo stretchy=\"false\">)</mo><mspace width=\"0.27778em\" /><mtext> then </mtext><mspace width=\"0.27778em\" /><mi>f</mi><mo stretchy=\"false\">(</mo><mi>e</mi><mo stretchy=\"false\">)</mo><mspace width=\"0.27778em\" /><mi>α</mi><mo>′</mo><mspace width=\"0.27778em\" /><mi>b</mi><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">\\langle f,F \\rangle \\left[ \\alpha, \\alpha' \\right] \\langle e,b' \\rangle\r\n\\Leftrightarrow \\ \\text{ if } \\ e \\ \\alpha \\ F(b') \\ \\text{ then } \\ f(e)\r\n\\ \\alpha' \\ b'</annotation></semantics></math></p>\r\n\r\n<h2>Disjunctive monoidal product</h2>\r\n\r\n<p>The disjunctive monoidal product is the interpretation of the <em>par</em> connective\r\nin linear logic, whose meaning is well known to be unintuitive. Its behaviour on\r\nPetri nets is similar to the one of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo>⊗</mo></mrow><annotation encoding=\"application/x-tex\">\\otimes</annotation></semantics></math> but with disjunction instead of\r\nconjunction. Events in <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d4a9;</mi><mo>⅋</mo><mi>&#x1d4a9;</mi><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">\\mathcal{N} \\invamp \\mathcal{N}'</annotation></semantics></math> are pairs of\r\nfunctions from the conditions in one net to the events in the other, and places\r\nelements in which to evaluate the events, namely pairs <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo stretchy=\"false\">⟨</mo><mi>b</mi><mo>,</mo><mi>b</mi><mo>′</mo><mo stretchy=\"false\">⟩</mo></mrow><annotation encoding=\"application/x-tex\">\\langle b,b' \\rangle</annotation></semantics></math>\r\nwith <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>b</mi><mo>∈</mo><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">b \\in B</annotation></semantics></math> and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>b</mi><mo>′</mo><mo>∈</mo><mi>B</mi><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">b' \\in B'</annotation></semantics></math>. We can see an example.</p>\r\n\r\n<p><img width=\"100%\" src=\"http://math.ucr.edu/home/baez/mathematical/ACT2020/DiLavore-Li/par.png\" alt=\"\" /> </p>\r\n\r\n<p><em>On the right hand side, we indicate with <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>e</mi> <mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">e_i</annotation></semantics></math> the function from <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>B</mi><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">B'</annotation></semantics></math> to\r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>E</mi></mrow><annotation encoding=\"application/x-tex\">E</annotation></semantics></math> that sends <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>b</mi> <mn>0</mn></msub><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">b_0'</annotation></semantics></math> to <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>e</mi> <mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">e_i</annotation></semantics></math> and with <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo>!</mo></mrow><annotation encoding=\"application/x-tex\">!</annotation></semantics></math> the only function from <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">B</annotation></semantics></math> to <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>E</mi><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">E'</annotation></semantics></math>.</em></p>\r\n\r\n<p>In <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"bold\"><mi>NSet</mi></mstyle></mrow><annotation encoding=\"application/x-tex\">\\mathbf{NSet}</annotation></semantics></math>, the conditions on the preconditions and postconditions of\r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d4a9;</mi><mo>⅋</mo><mi>&#x1d4a9;</mi><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">\\mathcal{N} \\invamp \\mathcal{N}'</annotation></semantics></math> can be given explicitly. </p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mrow><mtable displaystyle=\"true\" columnalign=\"right left right left right left right left right left\" columnspacing=\"0em\"><mtr><mtd><mo stretchy=\"false\">⟨</mo><mi>f</mi><mo>,</mo><mi>f</mi><mo>′</mo><mo stretchy=\"false\">⟩</mo><mspace width=\"0.27778em\" /><msub><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle> <mo>⅋</mo></msub><mspace width=\"0.27778em\" /><mo stretchy=\"false\">⟨</mo><mi>b</mi><mo>,</mo><mi>b</mi><mo>′</mo><mo stretchy=\"false\">⟩</mo></mtd> <mtd><mo>⇔</mo><mi>f</mi><mo stretchy=\"false\">(</mo><mi>b</mi><mo>′</mo><mo stretchy=\"false\">)</mo><mspace width=\"0.27778em\" /><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle><mspace width=\"0.27778em\" /><mi>b</mi><mspace width=\"0.27778em\" /><mtext> or </mtext><mspace width=\"0.27778em\" /><mi>f</mi><mo>′</mo><mo stretchy=\"false\">(</mo><mi>b</mi><mo stretchy=\"false\">)</mo><mspace width=\"0.27778em\" /><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle><mo>′</mo><mspace width=\"0.27778em\" /><mi>b</mi><mo>′</mo></mtd></mtr> <mtr><mtd><mo stretchy=\"false\">⟨</mo><mi>f</mi><mo>,</mo><mi>f</mi><mo>′</mo><mo stretchy=\"false\">⟩</mo><mspace width=\"0.27778em\" /><msub><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle> <mo>⅋</mo></msub><mspace width=\"0.27778em\" /><mo stretchy=\"false\">⟨</mo><mi>b</mi><mo>,</mo><mi>b</mi><mo>′</mo><mo stretchy=\"false\">⟩</mo></mtd> <mtd><mo>⇔</mo><mi>f</mi><mo stretchy=\"false\">(</mo><mi>b</mi><mo>′</mo><mo stretchy=\"false\">)</mo><mspace width=\"0.27778em\" /><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle><mspace width=\"0.27778em\" /><mi>b</mi><mspace width=\"0.27778em\" /><mtext> or </mtext><mspace width=\"0.27778em\" /><mi>f</mi><mo>′</mo><mo stretchy=\"false\">(</mo><mi>b</mi><mo stretchy=\"false\">)</mo><mspace width=\"0.27778em\" /><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle><mo>′</mo><mspace width=\"0.27778em\" /><mi>b</mi><mo>′</mo></mtd></mtr> <mtr><mtd /></mtr></mtable></mrow></mrow><annotation encoding=\"application/x-tex\">\\begin{aligned}\r\n\\langle f, f' \\rangle \\ \\mathit{pre}_{\\invamp} \\ \\langle b,b' \\rangle &amp;\r\n\\Leftrightarrow f(b') \\ \\mathit{pre} \\ b \\ \\text{ or } \\ f'(b) \\ \\mathit{pre}' \\ b'\\\\\r\n\\langle f, f' \\rangle \\ \\mathit{post}_{\\invamp} \\ \\langle b,b' \\rangle\r\n&amp;\\Leftrightarrow f(b') \\ \\mathit{post} \\ b \\ \\text{ or } \\ f'(b) \\ \\mathit{post}' \\ b' \\\\\r\n\\end{aligned}</annotation></semantics></math></p>\r\n\r\n<p>In the category <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"bold\"><mi>N</mi></mstyle><mi>&#x1d49e;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{N}\\mathcal{C}</annotation></semantics></math>, the disjunctive monoidal product of two\r\nnets is given by the component-wise monoidal product <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>&#x1d4a9;</mi><mo>⅋</mo><mi>&#x1d4a9;</mi><mo>′</mo><mo>=</mo><mo stretchy=\"false\">(</mo><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle><mo>⅋</mo><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle><mo>′</mo><mo>,</mo><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle><mo>⅋</mo><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle><mo>′</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathcal{N} \\invamp\r\n\\mathcal{N}' = (\\mathit{pre} \\invamp \\mathit{pre}',\r\n\\mathit{post}\\invamp \\mathit{post}')</annotation></semantics></math> where\r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle><mo>⅋</mo><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">\\mathit{pre} \\invamp \\mathit{pre}'</annotation></semantics></math> and\r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle><mo>⅋</mo><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">\\mathit{post}\\invamp \\mathit{post}'</annotation></semantics></math> are disjunctive\r\nmonoidal products in <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"bold\"><mi>G</mi></mstyle><mi>&#x1d49e;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{G}\\mathcal{C}</annotation></semantics></math>.</p>\r\n\r\n<p>In <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"bold\"><mi>G</mi></mstyle><mi>&#x1d49e;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{G} \\mathcal{C}</annotation></semantics></math>, the disjunctive monoidal product of two objects\r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>α</mi><mo lspace=\"0.11111em\">:</mo><mi>E</mi><mo>↚</mo><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha \\colon E \\nleftarrow B</annotation></semantics></math> and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>α</mi><mo>′</mo><mo lspace=\"0.11111em\">:</mo><mi>E</mi><mo>′</mo><mo>↚</mo><mi>B</mi><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">\\alpha' \\colon E' \\nleftarrow B'</annotation></semantics></math> is the\r\nrelation <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>α</mi><mo>⅋</mo><mi>α</mi><mo>′</mo><mo lspace=\"0.11111em\">:</mo><msup><mi>E</mi> <mrow><mi>B</mi><mo>′</mo></mrow></msup><mo>×</mo><mi>E</mi><msup><mo>′</mo> <mi>B</mi></msup><mo>↚</mo><mi>B</mi><mo>×</mo><mi>B</mi><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">\\alpha \\invamp \\alpha' \\colon E^{B'} \\times E'^B \\nleftarrow B\r\n\\times B'</annotation></semantics></math> given by <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>α</mi><mo>⅋</mo><mi>α</mi><mo>′</mo><mo>=</mo><mrow><mo>(</mo><mfrac linethickness=\"0px\"><mrow><mo stretchy=\"false\">(</mo><msub><mi>&#x1d7d9;</mi> <mi>B</mi></msub><mo>×</mo><mo stretchy=\"false\">(</mo><mi>π</mi><mo>′</mo><mo>;</mo><msub><mstyle mathvariant=\"italic\"><mi>ev</mi></mstyle> <mi>B</mi></msub><mo stretchy=\"false\">)</mo><msup><mo stretchy=\"false\">)</mo> <mrow><mo lspace=\"0.11111em\" rspace=\"0em\">−</mo><mn>1</mn></mrow></msup><mo stretchy=\"false\">(</mo><mi>α</mi><mo>′</mo><mo stretchy=\"false\">)</mo></mrow><mrow><mo stretchy=\"false\">(</mo><msub><mi>&#x1d7d9;</mi> <mrow><mi>B</mi><mo>′</mo></mrow></msub><mo>×</mo><mo stretchy=\"false\">(</mo><mi>π</mi><mo>;</mo><msub><mstyle mathvariant=\"italic\"><mi>ev</mi></mstyle> <mi>B</mi></msub><mo stretchy=\"false\">)</mo><msup><mo stretchy=\"false\">)</mo> <mrow><mo lspace=\"0.11111em\" rspace=\"0em\">−</mo><mn>1</mn></mrow></msup><mo stretchy=\"false\">(</mo><mi>α</mi><mo stretchy=\"false\">)</mo></mrow></mfrac><mo>)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">\\alpha \\invamp \\alpha' = \\binom{(\\mathbb{1}_{B}\r\n\\times (\\pi' ; \\mathit{ev}_B))^{-1}(\\alpha')}{(\\mathbb{1}_{B'} \\times (\\pi ;\r\n\\mathit{ev}_{B}))^{-1}(\\alpha)}</annotation></semantics></math> where <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msup><mi>f</mi> <mrow><mo lspace=\"0.11111em\" rspace=\"0em\">−</mo><mn>1</mn></mrow></msup><mo stretchy=\"false\">(</mo><mi>g</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f^{-1}(g)</annotation></semantics></math> indicates the pullback of\r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">g</annotation></semantics></math> along <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math> in the category <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d49e;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{C}</annotation></semantics></math> and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mrow><mo>(</mo><mfrac linethickness=\"0px\"><mi>f</mi><mrow><mi>f</mi><mo>′</mo></mrow></mfrac><mo>)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">\\binom{f}{f'}</annotation></semantics></math> indicates the\r\nunique map from the coproduct of the domains of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math> and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>f</mi><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">f'</annotation></semantics></math>.</p>\r\n\r\n<p>By taking <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d49e;</mi><mo>=</mo><mstyle mathvariant=\"bold\"><mi>Set</mi></mstyle></mrow><annotation encoding=\"application/x-tex\">\\mathcal{C} = \\mathbf{Set}</annotation></semantics></math>, these conditions can be explicitly\r\nstated as follows.</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo stretchy=\"false\">⟨</mo><mi>f</mi><mo>,</mo><mi>f</mi><mo>′</mo><mo stretchy=\"false\">⟩</mo><mo stretchy=\"false\">(</mo><mi>α</mi><mo>⅋</mo><mi>α</mi><mo>′</mo><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">⟨</mo><mi>b</mi><mo>,</mo><mi>b</mi><mo>′</mo><mo stretchy=\"false\">⟩</mo><mo>⇔</mo><mi>f</mi><mo stretchy=\"false\">(</mo><mi>b</mi><mo>′</mo><mo stretchy=\"false\">)</mo><mspace width=\"0.27778em\" /><mi>α</mi><mspace width=\"0.27778em\" /><mi>b</mi><mspace width=\"0.27778em\" /><mtext> or </mtext><mspace width=\"0.27778em\" /><mi>f</mi><mo>′</mo><mo stretchy=\"false\">(</mo><mi>b</mi><mo stretchy=\"false\">)</mo><mspace width=\"0.27778em\" /><mi>α</mi><mo>′</mo><mspace width=\"0.27778em\" /><mi>b</mi><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">\\langle f,f' \\rangle (\\alpha \\invamp \\alpha') \\langle b, b' \\rangle\r\n\\Leftrightarrow f(b') \\ \\alpha \\ b \\ \\text{ or } \\ f'(b) \\ \\alpha' \\ b'</annotation></semantics></math></p>\r\n\r\n<h2>Negation</h2>\r\n\r\n<p>The unit for the disjunctive monoidal product is given by the net with one place\r\nand one event that are not related to each other.</p>\r\n\r\n<p><img width=\"20%\" src=\"http://math.ucr.edu/home/baez/mathematical/ACT2020/DiLavore-Li/negation.png\" alt=\"\" /></p>\r\n\r\n<p>The exponential <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mrow><mo>[</mo><mi>α</mi><mo>,</mo><mo>⊥</mo><mo>]</mo></mrow></mrow><annotation encoding=\"application/x-tex\">\\left[ {\\alpha}, \\perp \\right]</annotation></semantics></math> corresponds to the negation of\r\nthe relation <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>α</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha</annotation></semantics></math>. The same interpretation holds for the objects of\r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"bold\"><mi>NSet</mi></mstyle></mrow><annotation encoding=\"application/x-tex\">\\mathbf{NSet}</annotation></semantics></math>.</p>\r\n\r\n<p><img width=\"100%\" src=\"http://math.ucr.edu/home/baez/mathematical/ACT2020/DiLavore-Li/negation-example.png\" alt=\"\" /></p>\r\n\r\n<h2>Asynchronous events</h2>\r\n\r\n<p>We have seen how to model events happening synchronously with the cartesian\r\nproduct. One may wonder how to account for the possibility for only one net to\r\nfire in the cartesian product. The idea is to allow both the nets to ”do\r\nnothing” by adding an extra ”empty” event to both the nets and, then, taking\r\nthe cartesian product. This is obtained by taking the coproduct with the\r\nnegation net. In fact, the net <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d4a9;</mi><mo>⊕</mo><mo>⊥</mo></mrow><annotation encoding=\"application/x-tex\">\\mathcal{N} \\oplus \\perp</annotation></semantics></math> is the net\r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d4a9;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{N}</annotation></semantics></math> with one additional event that has no preconditions nor\r\npostconditions.</p>\r\n\r\n<p>We take again the example of genes activating other genes to show how this works\r\nconcretely. We compute <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>&#x1d4a9;</mi><mo>⊕</mo><mo>⊥</mo><mo stretchy=\"false\">)</mo><mspace width=\"0.27778em\" /><mi>&amp;</mi><mspace width=\"0.27778em\" /><mo stretchy=\"false\">(</mo><mi>&#x1d4a9;</mi><mo>′</mo><mo>⊕</mo><mo>⊥</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(\\mathcal{N} \\oplus \\perp) \\ \\&amp; \\  (\\mathcal{N}'\r\n\\oplus \\perp)</annotation></semantics></math>.</p>\r\n\r\n<p><img width=\"100%\" src=\"http://math.ucr.edu/home/baez/mathematical/ACT2020/DiLavore-Li/asynchrony.png\" alt=\"\" /></p>\r\n\r\n<p>We see that the events in this net are pairs of events in <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d4a9;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{N}</annotation></semantics></math> and\r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d4a9;</mi><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">\\mathcal{N}'</annotation></semantics></math>, with the same interpretation that they have in the cartesian\r\nproduct <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d4a9;</mi><mspace width=\"0.27778em\" /><mi>&amp;</mi><mspace width=\"0.27778em\" /><mi>&#x1d4a9;</mi><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">\\mathcal{N} \\ \\&amp; \\ \\mathcal{N}'</annotation></semantics></math>, or events, like <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>e</mi> <mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">e_1</annotation></semantics></math>, <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>e</mi> <mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">e_2</annotation></semantics></math>\r\nand <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>e</mi><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">e'</annotation></semantics></math>, that represent the asynchronous events <em>gene <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>b</mi> <mn>0</mn></msub></mrow><annotation encoding=\"application/x-tex\">b_0</annotation></semantics></math> activates gene\r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>b</mi> <mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">b_1</annotation></semantics></math></em>, <em>gene <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>b</mi> <mn>0</mn></msub></mrow><annotation encoding=\"application/x-tex\">b_0</annotation></semantics></math> activates gene <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>b</mi> <mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">b_2</annotation></semantics></math></em> and <em>gene <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>b</mi><msub><mo>′</mo> <mn>0</mn></msub></mrow><annotation encoding=\"application/x-tex\">b'_0</annotation></semantics></math> deactivates gene\r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>b</mi><msub><mo>′</mo> <mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">b'_1</annotation></semantics></math></em>, respectively, happening in one net while the other net ”does\r\nnothing”.</p>\r\n\r\n<h1>Discussion</h1>\r\n\r\n<p>The challenge of this framework is to understand how it can be useful in the\r\nnumerous and diverse applications of Petri nets. In order to do this, it is\r\nworth investigating different twists in the definition of the category\r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"bold\"><mi>N</mi></mstyle><mi>&#x1d49e;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{N}\\mathcal{C}</annotation></semantics></math>. As mentioned above, it is possible to reverse the\r\ndirection of the unique morphism <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math> (the one appearing in the definition of\r\nmorphism in <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"bold\"><mi>G</mi></mstyle><mi>&#x1d49e;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{G}\\mathcal{C}</annotation></semantics></math>) in either of the components\r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle></mrow><annotation encoding=\"application/x-tex\">\\mathit{pre}</annotation></semantics></math> or <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle></mrow><annotation encoding=\"application/x-tex\">\\mathit{post}</annotation></semantics></math> of a Petri net. Thus, we\r\ncan get four variants of category <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"bold\"><mi>N</mi></mstyle><mi>&#x1d49e;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{N}\\mathcal{C}</annotation></semantics></math>, based on the four\r\ndifferent combinations for defining morphisms in this category. By changing the\r\ndirection of the morphism <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math> in the definition of morphism in the category\r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"bold\"><mi>G</mi></mstyle><mi>&#x1d49e;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{G}\\mathcal{C}</annotation></semantics></math>, we obtain another category, isomorphic to\r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"bold\"><mi>G</mi></mstyle><msup><mi>&#x1d49e;</mi> <mi>op</mi></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbf{G}\\mathcal{C}^{op}</annotation></semantics></math>, called <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"bold\"><mi>G</mi></mstyle><msup><mi>&#x1d49e;</mi> <mi>co</mi></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbf{G}\\mathcal{C}^{co}</annotation></semantics></math>. The four\r\nvariants are as follows. A pair <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>f</mi><mo>,</mo><mi>F</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(f, F)</annotation></semantics></math> is a morphism of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"bold\"><mi>N</mi></mstyle><mi>&#x1d49e;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{N}\r\n\\mathcal{C}</annotation></semantics></math> such that:</p>\r\n\r\n<ol>\r\n<li><p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>f</mi><mo>,</mo><mi>F</mi><mo stretchy=\"false\">)</mo><mo lspace=\"0.11111em\">:</mo><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle><mo>→</mo><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">(f, F) \\colon \\mathit{pre} \\rightarrow \\mathit{pre}' </annotation></semantics></math>\r\nin <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"bold\"><mi>G</mi></mstyle><mi>&#x1d49e;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{G} \\mathcal{C}</annotation></semantics></math>, and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>f</mi><mo>,</mo><mi>F</mi><mo stretchy=\"false\">)</mo><mo lspace=\"0.11111em\">:</mo><mspace width=\"0.27778em\" /><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle><mspace width=\"0.27778em\" /><mo>→</mo><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">(f, F) \\colon \\ \\mathit{post} \\ \\rightarrow \\mathit{post}' </annotation></semantics></math> in <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"bold\"><mi>G</mi></mstyle><mi>&#x1d49e;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{G}\\mathcal{C}</annotation></semantics></math>.</p></li>\r\n<li><p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>f</mi><mo>,</mo><mi>F</mi><mo stretchy=\"false\">)</mo><mo lspace=\"0.11111em\">:</mo><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle><mo>→</mo><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">(f, F) \\colon \\mathit{pre} \\rightarrow \\mathit{pre}' </annotation></semantics></math>\r\nin <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"bold\"><mi>G</mi></mstyle><msup><mi>&#x1d49e;</mi> <mi>co</mi></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbf{G}\\mathcal{C}^{co}</annotation></semantics></math>, and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>f</mi><mo>,</mo><mi>F</mi><mo stretchy=\"false\">)</mo><mo lspace=\"0.11111em\">:</mo><mspace width=\"0.27778em\" /><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle><mspace width=\"0.27778em\" /><mo>→</mo><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">(f, F) \\colon \\ \\mathit{post} \\ \\rightarrow \\mathit{post}' </annotation></semantics></math> in <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"bold\"><mi>G</mi></mstyle><mi>&#x1d49e;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{G} \\mathcal{C}</annotation></semantics></math>.</p></li>\r\n<li><p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>f</mi><mo>,</mo><mi>F</mi><mo stretchy=\"false\">)</mo><mo lspace=\"0.11111em\">:</mo><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle><mo>→</mo><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">(f, F) \\colon \\mathit{pre} \\rightarrow \\mathit{pre}' </annotation></semantics></math>\r\nin <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"bold\"><mi>G</mi></mstyle><mi>&#x1d49e;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{G} \\mathcal{C}</annotation></semantics></math>, and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>f</mi><mo>,</mo><mi>F</mi><mo stretchy=\"false\">)</mo><mo lspace=\"0.11111em\">:</mo><mspace width=\"0.27778em\" /><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle><mspace width=\"0.27778em\" /><mo>→</mo><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">(f, F) \\colon \\ \\mathit{post} \\ \\rightarrow \\mathit{post}' </annotation></semantics></math> in <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"bold\"><mi>G</mi></mstyle><msup><mi>&#x1d49e;</mi> <mi>co</mi></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbf{G}\\mathcal{C}^{co}</annotation></semantics></math>.</p></li>\r\n<li><p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>f</mi><mo>,</mo><mi>F</mi><mo stretchy=\"false\">)</mo><mo lspace=\"0.11111em\">:</mo><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle><mo>→</mo><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">(f, F) \\colon \\mathit{pre} \\rightarrow \\mathit{pre}' </annotation></semantics></math>\r\nin <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"bold\"><mi>G</mi></mstyle><msup><mi>&#x1d49e;</mi> <mi>co</mi></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbf{G}\\mathcal{C}^{co}</annotation></semantics></math>, and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>f</mi><mo>,</mo><mi>F</mi><mo stretchy=\"false\">)</mo><mo lspace=\"0.11111em\">:</mo><mspace width=\"0.27778em\" /><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle><mspace width=\"0.27778em\" /><mo>→</mo><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">(f, F) \\colon \\ \\mathit{post} \\ \\rightarrow \\mathit{post}' </annotation></semantics></math> in <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"bold\"><mi>G</mi></mstyle><msup><mi>&#x1d49e;</mi> <mi>co</mi></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbf{G}\\mathcal{C}^{co}</annotation></semantics></math>.</p></li>\r\n</ol>\r\n\r\n<p>We can explicit the conditions above in the case <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d49e;</mi><mo>=</mo><mstyle mathvariant=\"bold\"><mi>Set</mi></mstyle></mrow><annotation encoding=\"application/x-tex\">\\mathcal{C} = \\mathbf{Set}</annotation></semantics></math>.\r\nFor all <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>e</mi></mrow><annotation encoding=\"application/x-tex\">e</annotation></semantics></math> in <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>E</mi></mrow><annotation encoding=\"application/x-tex\">E</annotation></semantics></math> and all <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>b</mi><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">b'</annotation></semantics></math> in <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>B</mi><mo>′</mo></mrow><annotation encoding=\"application/x-tex\">B'</annotation></semantics></math> we get the following inequalities.</p>\r\n\r\n<ol>\r\n<li><p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle><mo stretchy=\"false\">(</mo><mi>e</mi><mo>,</mo><mi>F</mi><mi>b</mi><mo>′</mo><mo stretchy=\"false\">)</mo><mo>≤</mo><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle><mo>′</mo><mo stretchy=\"false\">(</mo><mi>f</mi><mi>e</mi><mo>,</mo><mi>b</mi><mo>′</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathit{pre}(e, F b') \\leq \\mathit{pre}'(f e, b')</annotation></semantics></math> and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle><mo stretchy=\"false\">(</mo><mi>e</mi><mo>,</mo><mi>F</mi><mi>b</mi><mo>′</mo><mo stretchy=\"false\">)</mo><mo>≤</mo><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle><mo>′</mo><mo stretchy=\"false\">(</mo><mi>f</mi><mi>e</mi><mo>,</mo><mi>b</mi><mo>′</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathit{post}(e, F b') \\leq \\mathit{post}'(f e, b')</annotation></semantics></math>.\r\nIntuitively, this can be summed up as ”more gives more”.</p></li>\r\n<li><p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle><mo stretchy=\"false\">(</mo><mi>e</mi><mo>,</mo><mi>F</mi><mi>b</mi><mo>′</mo><mo stretchy=\"false\">)</mo><mo>≥</mo><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle><mo>′</mo><mo stretchy=\"false\">(</mo><mi>f</mi><mi>e</mi><mo>,</mo><mi>b</mi><mo>′</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathit{pre}(e, F b') \\geq \\mathit{pre}'(f e, b')</annotation></semantics></math> and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle><mo stretchy=\"false\">(</mo><mi>e</mi><mo>,</mo><mi>F</mi><mi>b</mi><mo>′</mo><mo stretchy=\"false\">)</mo><mo>≤</mo><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle><mo>′</mo><mo stretchy=\"false\">(</mo><mi>f</mi><mi>e</mi><mo>,</mo><mi>b</mi><mo>′</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathit{post}(e, F b') \\leq \\mathit{post}'(f e, b')</annotation></semantics></math>.\r\nIntuitively, this can be summed up as ”less gives more”.</p></li>\r\n<li><p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle><mo stretchy=\"false\">(</mo><mi>e</mi><mo>,</mo><mi>F</mi><mi>b</mi><mo>′</mo><mo stretchy=\"false\">)</mo><mo>≤</mo><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle><mo>′</mo><mo stretchy=\"false\">(</mo><mi>f</mi><mi>e</mi><mo>,</mo><mi>b</mi><mo>′</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathit{pre}(e, F b') \\leq \\mathit{pre}'(f e, b')</annotation></semantics></math> and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle><mo stretchy=\"false\">(</mo><mi>e</mi><mo>,</mo><mi>F</mi><mi>b</mi><mo>′</mo><mo stretchy=\"false\">)</mo><mo>≥</mo><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle><mo>′</mo><mo stretchy=\"false\">(</mo><mi>f</mi><mi>e</mi><mo>,</mo><mi>b</mi><mo>′</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathit{post}(e, F b') \\geq \\mathit{post}'(f e, b')</annotation></semantics></math>.\r\nIntuitively, this can be summed up as ”more gives less”.</p></li>\r\n<li><p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle><mo stretchy=\"false\">(</mo><mi>e</mi><mo>,</mo><mi>F</mi><mi>b</mi><mo>′</mo><mo stretchy=\"false\">)</mo><mo>≥</mo><mstyle mathvariant=\"italic\"><mi>pre</mi></mstyle><mo>′</mo><mo stretchy=\"false\">(</mo><mi>f</mi><mi>e</mi><mo>,</mo><mi>b</mi><mo>′</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathit{pre}(e, F b') \\geq \\mathit{pre}'(f e, b')</annotation></semantics></math> and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle><mo stretchy=\"false\">(</mo><mi>e</mi><mo>,</mo><mi>F</mi><mi>b</mi><mo>′</mo><mo stretchy=\"false\">)</mo><mo>≥</mo><mstyle mathvariant=\"italic\"><mi>post</mi></mstyle><mo>′</mo><mo stretchy=\"false\">(</mo><mi>f</mi><mi>e</mi><mo>,</mo><mi>b</mi><mo>′</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathit{post}(e, F b') \\geq \\mathit{post}'(f e, b')</annotation></semantics></math>.\r\nIntuitively, this can be summed up as ”less gives less”.</p></li>\r\n</ol>\r\n\r\n<p>The definition that we chose to present is the first one, given in <a href=\"https://ieeexplore.ieee.org/abstract/document/113747\">the earlier\r\nversion of the paper</a>\r\n(where elementary Petri nets are called structurally safe), while the third\r\nvariant is the same category defined in <a href=\"https://www.sciencedirect.com/science/article/pii/S0890540185711509\">a later version of the\r\npaper</a>.\r\nMorphisms in (1) represent refinements, while morphisms in (3) represent\r\nsimulations.</p>\r\n\r\n<p>It is also possible to generalise this construction to arbitrary Petri nets by\r\ntaking pairs of objects of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"bold\"><mi>G</mi></mstyle><mi>&#x1d49e;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{G}\\mathcal{C}</annotation></semantics></math> of the form <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>E</mi><mo>↚</mo><mi>B</mi><mo>×</mo><mi>ℕ</mi></mrow><annotation encoding=\"application/x-tex\">E \\nleftarrow B\r\n\\times \\mathbb{N}</annotation></semantics></math> and we leave the detailed discussion of this definition as\r\nanother aspect to investigate further.</p>\r\n\r\n<p>We thank the organizers of the ACT school for making this blog post possible and\r\nour group, in particular our TA Jade Master for her helpful suggestions.</p>\r\n\r\n      </div>\r\n    ","descriptionType":"xhtml","publishedDate":"Mon, 27 Jul 2020 00:20:37 +0000","feedId":8914,"bgimg":"https://golem.ph.utexas.edu/~distler/blog/images/MathML.png","linkMd5":"9b371e7ad1ad68768c35526347d1084b","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn27@2020_2/2020/08/25/00-09-56-839_3e27bbc676e8d5d2.webp","destWidth":65,"destHeight":36,"sourceBytes":3238,"destBytes":1426,"author":"john","articleImgCdnMap":{"https://golem.ph.utexas.edu/~distler/blog/images/MathML.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn27@2020_2/2020/08/25/00-09-56-839_3e27bbc676e8d5d2.webp","http://math.ucr.edu/home/baez/mathematical/ACT2020/DiLavore-Li/firing.png":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn16@2020_5/2020/08/25/00-09-58-666_3ccfcf1458c1ddca.webp","http://math.ucr.edu/home/baez/mathematical/ACT2020/DiLavore-Li/nets.png":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn39@2020_4/2020/08/25/00-09-58-429_3f673ab392917a26.webp","http://math.ucr.edu/home/baez/mathematical/ACT2020/DiLavore-Li/morphism.png":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn7@2020_3/2020/08/25/00-09-58-298_883675974fcae9cd.webp","http://math.ucr.edu/home/baez/mathematical/ACT2020/DiLavore-Li/N-N1.png":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn43@2020_2/2020/08/25/00-09-58-119_f2f3d4b885710554.webp","http://math.ucr.edu/home/baez/mathematical/ACT2020/DiLavore-Li/product.png":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn75@2020_3/2020/08/25/00-09-58-283_fd0184ea926f96fc.webp","http://math.ucr.edu/home/baez/mathematical/ACT2020/DiLavore-Li/N.png":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn28@2020_2/2020/08/25/00-09-58-776_f3489461d8e7cdc2.webp","http://math.ucr.edu/home/baez/mathematical/ACT2020/DiLavore-Li/coproduct.png":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn63@2020_1/2020/08/25/00-09-58-418_d657813c2baca3c1.webp","http://math.ucr.edu/home/baez/mathematical/ACT2020/DiLavore-Li/tensor.png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn60@2020_5/2020/08/25/00-09-59-033_432563df0ac5f6e5.webp","http://math.ucr.edu/home/baez/mathematical/ACT2020/DiLavore-Li/units.png":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn100@2020_3/2020/08/25/00-09-58-596_b8f212c34be964c4.webp","http://math.ucr.edu/home/baez/mathematical/ACT2020/DiLavore-Li/exponential.png":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn82@2020_5/2020/08/25/00-09-58-427_12b9746598014e09.webp","http://math.ucr.edu/home/baez/mathematical/ACT2020/DiLavore-Li/par.png":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn35@2020_4/2020/08/25/00-09-59-541_828a48c0b9995d6f.webp","http://math.ucr.edu/home/baez/mathematical/ACT2020/DiLavore-Li/negation.png":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn36@2020_1/2020/08/25/00-09-58-057_acc61791dfda340f.webp","http://math.ucr.edu/home/baez/mathematical/ACT2020/DiLavore-Li/negation-example.png":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn92@2020_4/2020/08/25/00-09-58-846_ab6f2474bcdc2091.webp","http://math.ucr.edu/home/baez/mathematical/ACT2020/DiLavore-Li/asynchrony.png":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn11@2020_3/2020/08/25/00-09-59-955_0948f208d806b2df.webp"},"publishedOrCreatedDate":1598314179610},{"createdTime":"2020-08-25 08:09:39","updatedTime":"2020-08-25 08:09:39","title":"Octonions and the Standard Model (Part 3)","link":"https://golem.ph.utexas.edu/category/2020/07/octonions_and_the_standard_mod_2.html","description":"\r\n      <div xmlns=\"http://www.w3.org/1999/xhtml\">\r\n<div><a href=\"http://golem.ph.utexas.edu/~distler/blog/mathml.html\"><img class=\"mathlogo\" src=\"https://golem.ph.utexas.edu/~distler/blog/images/MathML.png\" alt=\"MathML-enabled post (click for more details).\" title=\"MathML-enabled post (click for details).\" /></a></div>\r\n\r\n<p>Now I’ll finally explain how a quark and a lepton fit together into an octonion — in the very simplified picture where we treat these particles merely as representations of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{SU}(3)</annotation></semantics></math>, the symmetry group of the strong force.  I’ll say just enough about physics for mathematicians to get a sense of what this means.   (The most substantial part of this post will be a quick intro to ‘basic triples’, a powerful technique for working with octonions.)</p>\r\n\r\n<div><a href=\"http://golem.ph.utexas.edu/~distler/blog/mathml.html\"><img class=\"mathlogo\" src=\"https://golem.ph.utexas.edu/~distler/blog/images/MathML.png\" alt=\"MathML-enabled post (click for more details).\" title=\"MathML-enabled post (click for details).\" /></a></div>\r\n\r\n<p>One of curious features of the Standard Model is that fermions — the particles that make up ‘matter’, as opposed to particles that carry ‘forces’ — come in two kinds: leptons and quarks.  </p>\r\n\r\n<p>Quarks are affected by the strong nuclear force, while leptons are not.   Each kind of quark comes in 3 ‘colors’ — three states conventionally called red, green and blue — while leptons do not.  These two statements say almost the same thing, since strong force is governed by the group <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{SU}(3)</annotation></semantics></math>.  Mathematically, the point is that quarks transform in the usual representation of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{SU}(3)</annotation></semantics></math> on <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msup><mi>ℂ</mi> <mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}^3</annotation></semantics></math>, while leptons transform in the trivial representation of this group on <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>ℂ</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}</annotation></semantics></math>.    </p>\r\n\r\n<p>An interesting fact is that for each kind of quark there’s a corresponding lepton.  For example, ordinary matter is mainly made of two kinds of quarks, called up and down quarks, and two kinds of leptons, called electrons and electron neutrinos.   These four form the ‘first generation’ of quarks and leptons, and there are two more.  </p>\r\n\r\n<p><img width=\"500\" src=\"https://johncarlosbaez.files.wordpress.com/2020/08/standard_model_particles.png\" alt=\"\" /></p>\r\n\r\n<p>There are physical reasons to expect this ‘one quark per lepton’ pattern: the <a href=\"http://www.scholarpedia.org/article/Glashow-Iliopoulos-Maiani_mechanism\">GIM mechanism</a> and the need to <a href=\"http://www.scholarpedia.org/article/Glashow-Iliopoulos-Maiani_mechanism#Further_developments\">avoid anomalies</a>.   However, it is still tempting to seek a theory that <em>unifies</em> quarks and leptons. </p>\r\n\r\n<p>Many such theories are known.  For example, in the <a href=\"http://math.ucr.edu/~huerta/guts/node18.html\">Pati–Salam model</a>, the group <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{SU}(3)</annotation></semantics></math> is replaced with <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>4</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{SU}(4)</annotation></semantics></math> and each quark together with its partner lepton are considered at a fundamental level to be a single particle transforming in the usual representation of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>4</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{SU}(4)</annotation></semantics></math> on <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msup><mi>ℂ</mi> <mn>4</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}^4</annotation></semantics></math>.  Extending the color metaphor, the three colors of quark join with the ‘white’ lepton to form a basis of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msup><mi>ℂ</mi> <mn>4</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}^4</annotation></semantics></math>.   </p>\r\n\r\n<p>The <a href=\"http://math.ucr.edu/~huerta/guts/node16.html\">SU(5) grand unified theory</a> has a different take on this issue: here red, green and blue are joined by two other states called ‘up’ and ‘down’.  And the Pati–Salam model and SU(5) theory are themselves reconciled in the larger \r\n<a href=\"http://math.ucr.edu/~huerta/guts/guts.html\">SO(10) theory</a>.  </p>\r\n\r\n<p>A different approach, less explored and less successful so far, is to use octonions.  Here are two references:</p>\r\n\r\n<ul>\r\n<li><p>Murat Günaydin and Feza Gürsey, Quark structure and octonions, <em>Journal of Mathematical Physics</em> 14 (1973), 1651–1667.</p></li>\r\n<li><p>Geoffrey Dixon, <em>Division Algebras: Octonions, Quaternions, Complex Numbers and the Algebraic Design of Physics</em>, Springer, Berlin, 2013.</p></li>\r\n</ul>\r\n\r\n<p>though I could probably list dozens more if I worked at it.  I don’t know the whole history of this approach.   Now I’m getting curious.</p>\r\n\r\n<p>The basic idea is this: if we fix an octonion <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>i</mi><mo>∈</mo><mi>&#x1d546;</mi></mrow><annotation encoding=\"application/x-tex\">i \\in \\mathbb{O}</annotation></semantics></math> with <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msup><mi>i</mi> <mn>2</mn></msup><mo>=</mo><mo lspace=\"0.11111em\" rspace=\"0em\">−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">i^2 = -1</annotation></semantics></math>, the group of automorphisms of the octonions that fix this element is <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{SU}(3)</annotation></semantics></math>.  This element <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math> also determines a copy of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>ℂ</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}</annotation></semantics></math> in <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d546;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{O}</annotation></semantics></math>.   This makes <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d546;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{O}</annotation></semantics></math> into a complex vector space, and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{SU}(3)</annotation></semantics></math> acts on this vector space.   As a representation of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{SU}(3)</annotation></semantics></math>, this vector space is isomorphic to </p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>ℂ</mi><mo>⊕</mo><msup><mi>ℂ</mi> <mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">   \\mathbb{C} \\oplus \\mathbb{C}^3 </annotation></semantics></math></p>\r\n\r\n<p>where <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{SU}(3)</annotation></semantics></math> acts trivially on <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>ℂ</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}</annotation></semantics></math> and in the usual way on <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msup><mi>ℂ</mi> <mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}^3</annotation></semantics></math>.  This is just the representation of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{SU}(3)</annotation></semantics></math> on one kind of lepton and its corresponding quark!</p>\r\n\r\n<p>So, we can imagine trying to come up with a theory where a quark and a lepton are unified into a single octonion, and then somehow the choice of a square root of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo lspace=\"0.11111em\" rspace=\"0em\">−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">-1</annotation></semantics></math> in <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d546;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{O}</annotation></semantics></math> breaks the symmetry, splitting the octonions into two separate representations of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{SU}(3)</annotation></semantics></math>: the quark and the lepton.  This might be part of a larger story in which the complex numbers, so important in quantum physics, are secretly just one special copy of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>ℂ</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}</annotation></semantics></math> sitting inside <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d546;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{O}</annotation></semantics></math>.   </p>\r\n\r\n<p>I have no good idea for how this would work.   Since our usual paradigm for spontaneous symmetry breaking involves the <a href=\"https://en.wikipedia.org/wiki/Higgs_mechanism\">Higgs mechanism</a>, one could try to use that.   There is a 6-sphere of square roots of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo lspace=\"0.11111em\" rspace=\"0em\">−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">-1</annotation></semantics></math> sitting in the octonions, each giving a copy of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>ℂ</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}</annotation></semantics></math>, so one might imagine some sort of <a href=\"https://en.wikipedia.org/wiki/Higgs_mechanism#/media/File:Mecanismo_de_Higgs_PH.png\">Higgs potential</a>, for example a quartic polynomial, that has minima on this 6-sphere.  Someone must have tried this.  But I don’t find this idea especially inspiring unless it arises naturally somehow, or explains several things at once.</p>\r\n\r\n<p>I’ve already proved all the <em>mathematical</em> claims I just made about octonions and representations of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{SU}(3)</annotation></semantics></math> — except for one: that the group <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{SU}(3)</annotation></semantics></math> contains <em>all</em> the automorphisms of the octonions preserving <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math>.  For that it’s handy to use a very powerful tool for working with octonions: ‘basic triples’.  </p>\r\n\r\n<p>For those who prefer their math free of physics, let me state this in the form of a theorem, and then prove it:</p>\r\n\r\n<p><strong>Theorem 4.</strong> Let <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>i</mi><mo>∈</mo><mi>&#x1d546;</mi></mrow><annotation encoding=\"application/x-tex\">i \\in \\mathbb{O}</annotation></semantics></math> be any element with <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msup><mi>i</mi> <mn>2</mn></msup><mo>=</mo><mo lspace=\"0.11111em\" rspace=\"0em\">−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">i^2 = -1</annotation></semantics></math>.   Then <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math> generates a copy of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>ℂ</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}</annotation></semantics></math> in <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d546;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{O}</annotation></semantics></math>.   Left multiplication by this copy of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>ℂ</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}</annotation></semantics></math> makes <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d546;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{O}</annotation></semantics></math> into a complex vector space.   The group of automorphisms of the octonions that fix the element <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math> is isomorphic to <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{SU}(3)</annotation></semantics></math>, and this group acts in a complex-linear way on <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d546;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{O}</annotation></semantics></math>.  This representation is isomorphic to the direct sum of the trivial representation on <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>ℂ</mi><mo>⊆</mo><mi>&#x1d546;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C} \\subseteq \\mathbb{O}</annotation></semantics></math> and the usual representation of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{SU}(3)</annotation></semantics></math> on <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msup><mi>ℂ</mi> <mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}^3</annotation></semantics></math> by matrix multiplication.</p>\r\n\r\n<p><strong>Proof.</strong>  In <a href=\"https://golem.ph.utexas.edu/category/2020/07/octonions_and_the_standard_mod.html\">Part 1</a> we saw a description of the octonions as <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>ℂ</mi><mo>⊕</mo><msup><mi>ℂ</mi> <mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C} \\oplus \\mathbb{C}^3</annotation></semantics></math> where <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>ℂ</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}</annotation></semantics></math> is the subalgebra generated by a chosen square root of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo lspace=\"0.11111em\" rspace=\"0em\">−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">-1</annotation></semantics></math>.   One can see from this description that left multiplication by <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>ℂ</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}</annotation></semantics></math> makes the octonions into a complex vector space with <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msup><mi>ℂ</mi> <mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}^3</annotation></semantics></math> as a complex subspace.  In this description, octonion multiplication is given by operations that are manifestly invariant under <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{SU}(3)</annotation></semantics></math>, which acts trivially on <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>ℂ</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}</annotation></semantics></math> and by matrix multiplication on <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msup><mi>ℂ</mi> <mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}^3</annotation></semantics></math>.</p>\r\n\r\n<p>Thus, the only thing missing is a proof that no <em>bigger</em> group than <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{SU}(3)</annotation></semantics></math> acts as automorphisms of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d546;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{O}</annotation></semantics></math> fixing the chosen element <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math>.   To do this, let’s show the group of such automorphisms is an 8-dimensional connected Lie group.  Since its subgroup <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{SU}(3)</annotation></semantics></math> is also an 8-dimensional and connected, it must be the whole thing.</p>\r\n\r\n<p>For this I find it enjoyable to use the concept of ‘basic triple’.</p>\r\n\r\n<p>In a normed division algebra the norm always comes from an inner product.  Any unit vector orthogonal to <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math> is a square root of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo lspace=\"0.11111em\" rspace=\"0em\">−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">-1</annotation></semantics></math>, and vice versa.  Further, orthogonal square roots of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo lspace=\"0.11111em\" rspace=\"0em\">−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">-1</annotation></semantics></math> anticommute.  </p>\r\n\r\n<p>So, if our normed division algebra isn’t the real numbers, we can find a square root of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo lspace=\"0.11111em\" rspace=\"0em\">−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">-1</annotation></semantics></math> in it.   Choose one and call it <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math>.   Then <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math> and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math> span a copy of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>ℂ</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}</annotation></semantics></math>.</p>\r\n\r\n<p>If this isn’t our whole normed division algebra, we can find another square root of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo lspace=\"0.11111em\" rspace=\"0em\">−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">-1</annotation></semantics></math> that is orthogonal to this copy of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>ℂ</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}</annotation></semantics></math>.   Choose one and call it <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math>.   Then you can show <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mn>1</mn><mo>,</mo><mi>i</mi><mo>,</mo><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">1, i, j</annotation></semantics></math>, and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>k</mi><mo>=</mo><mi>i</mi><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">k = i j</annotation></semantics></math> span a copy of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>ℍ</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{H}</annotation></semantics></math>.</p>\r\n\r\n<p>If this isn’t our whole normed division algebra yet, we can find another square root of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo lspace=\"0.11111em\" rspace=\"0em\">−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">-1</annotation></semantics></math> that is orthogonal to this whole copy of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>ℍ</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{H}</annotation></semantics></math>.  Choose one and call it <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>ℓ</mi></mrow><annotation encoding=\"application/x-tex\">\\ell</annotation></semantics></math>.  Then you can show <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mn>1</mn><mo>,</mo><mi>i</mi><mo>,</mo><mi>j</mi><mo>,</mo><mi>k</mi><mo>,</mo><mi>ℓ</mi><mo>,</mo><mi>ℓ</mi><mi>i</mi><mo>,</mo><mi>ℓ</mi><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">1, i, j, k, \\ell, \\ell i, \\ell j</annotation></semantics></math> and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>ℓ</mi><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">\\ell k</annotation></semantics></math> span a copy of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d546;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{O}</annotation></semantics></math>.</p>\r\n\r\n<p>We say three elements <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>i</mi><mo>,</mo><mi>j</mi><mo>,</mo><mi>ℓ</mi><mo>∈</mo><mi>&#x1d546;</mi></mrow><annotation encoding=\"application/x-tex\">i, j, \\ell \\in \\mathbb{O}</annotation></semantics></math> are a <strong>basic triple</strong> if they are orthogonal square roots of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo lspace=\"0.11111em\" rspace=\"0em\">−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">-1</annotation></semantics></math> and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>ℓ</mi></mrow><annotation encoding=\"application/x-tex\">\\ell</annotation></semantics></math> is also orthogonal to <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>k</mi><mo>=</mo><mi>i</mi><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">k = i j</annotation></semantics></math>.  The multiplication table of octonions looks the same for any basic triple: you can work out what it must be.</p>\r\n\r\n<p>Fix a basic triple <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>i</mi><mo>,</mo><mi>j</mi><mo>,</mo><mi>ℓ</mi><mo>∈</mo><mi>&#x1d546;</mi></mrow><annotation encoding=\"application/x-tex\">i, j, \\ell \\in \\mathbb{O}</annotation></semantics></math>.  From what I’ve said, any automorphism of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d546;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{O}</annotation></semantics></math> maps it to some other basic triple — and conversely, given any other basic triple, there is a unique automorphism mapping <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>i</mi><mo>,</mo><mi>j</mi><mo>,</mo><mi>ℓ</mi></mrow><annotation encoding=\"application/x-tex\">i, j, \\ell</annotation></semantics></math> to that one.  So, the automorphism group of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d546;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{O}</annotation></semantics></math> acts freely and transitively on the set of basic triples.  We say the basic triples form a <a href=\"http://math.ucr.edu/home/baez/torsors.html\">torsor</a> for <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">Aut</mi><mo stretchy=\"false\">(</mo><mi>&#x1d546;</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{Aut}(\\mathbb{O})</annotation></semantics></math>.  </p>\r\n\r\n<p>The important consequence is that <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">Aut</mi><mo stretchy=\"false\">(</mo><mi>&#x1d546;</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{Aut}(\\mathbb{O})</annotation></semantics></math> is homeomorphic to the space of basic triples.  This lets us understand the topology of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">Aut</mi><mo stretchy=\"false\">(</mo><mi>&#x1d546;</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{Aut}(\\mathbb{O})</annotation></semantics></math>.   </p>\r\n\r\n<p>Since unit octonions form a 7-sphere with <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math> at the ‘north pole’, the square roots of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo lspace=\"0.11111em\" rspace=\"0em\">−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">-1</annotation></semantics></math> form the ‘equator’, which is a 6-sphere.   If we choose one of these, say <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math>, then the square roots of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo lspace=\"0.11111em\" rspace=\"0em\">−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">-1</annotation></semantics></math> that are orthogonal to it form a 5-sphere.   And if we choose one of these, say <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math>, then the square roots of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo lspace=\"0.11111em\" rspace=\"0em\">−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">-1</annotation></semantics></math> that are orthogonal to <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>i</mi><mo>,</mo><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">i, j</annotation></semantics></math> and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>k</mi><mo>=</mo><mi>i</mi><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">k = i j</annotation></semantics></math> form a 3-sphere.</p>\r\n\r\n<p>So, the group <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">Aut</mi><mo stretchy=\"false\">(</mo><mi>&#x1d546;</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{Aut}(\\mathbb{O})</annotation></semantics></math> is a bundle of 3-spheres over a bundle of 5-spheres over the 6-sphere.   As a spinoff, this implies it is a connected Lie group, and its dimension is <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mn>6</mn><mo>+</mo><mn>5</mn><mo>+</mo><mn>3</mn><mo>=</mo><mn>14</mn><mo>.</mo></mrow><annotation encoding=\"application/x-tex\">6 + 5 + 3 = 14.</annotation></semantics></math></p>\r\n\r\n<p>But we’re actually interested in automorphisms of the octonions that fix a choice of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math>.   These correspond to basic triples with this fixed choice of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math>.   This is just a bundle of 3-spheres over a 5-sphere.  So, this is a connected Lie group with dimension <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mn>5</mn><mo>+</mo><mn>3</mn><mo>=</mo><mn>8</mn></mrow><annotation encoding=\"application/x-tex\">5 + 3 = 8</annotation></semantics></math>.  And that’s what we needed to show!        █</p>\r\n\r\n<p>As another spinoff of all this, it follows that <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{SU}(3)</annotation></semantics></math> is a bundle of 3-spheres over a 5-sphere.  But that’s easy to see directly by letting <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{SU}(3)</annotation></semantics></math> act on the unit sphere of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msup><mi>ℂ</mi> <mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}^3</annotation></semantics></math>.  This is a 5-sphere, and each point is stabilized by an <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>2</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{SU}(2)</annotation></semantics></math> subgroup, which is a 3-sphere.</p>\r\n\r\n      </div>\r\n    ","descriptionType":"xhtml","publishedDate":"Fri, 24 Jul 2020 12:17:40 +0000","feedId":8914,"bgimg":"https://golem.ph.utexas.edu/~distler/blog/images/MathML.png","linkMd5":"e6aa05b6eca02ce6407aff68f5854a0e","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn27@2020_2/2020/08/25/00-09-56-839_3e27bbc676e8d5d2.webp","destWidth":65,"destHeight":36,"sourceBytes":3238,"destBytes":1426,"author":"john","articleImgCdnMap":{"https://golem.ph.utexas.edu/~distler/blog/images/MathML.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn27@2020_2/2020/08/25/00-09-56-839_3e27bbc676e8d5d2.webp","https://johncarlosbaez.files.wordpress.com/2020/08/standard_model_particles.png":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn32@2020_4/2020/08/25/00-09-58-804_ae110edaefe18e7c.webp"},"publishedOrCreatedDate":1598314179514},{"createdTime":"2020-08-25 08:09:39","updatedTime":"2020-08-25 08:09:39","title":"Octonions and the Standard Model (Part 1)","link":"https://golem.ph.utexas.edu/category/2020/07/octonions_and_the_standard_mod.html","description":"\r\n      <div xmlns=\"http://www.w3.org/1999/xhtml\">\r\n<div><a href=\"http://golem.ph.utexas.edu/~distler/blog/mathml.html\"><img class=\"mathlogo\" src=\"https://golem.ph.utexas.edu/~distler/blog/images/MathML.png\" alt=\"MathML-enabled post (click for more details).\" title=\"MathML-enabled post (click for details).\" /></a></div>\r\n\r\n<p>I want to talk about some attempts to connect the Standard Model of particle physics to the octonions.  I should start out by saying I don’t have any big agenda here.    It’d be great if the octonions — or for that matter, <em>anything</em> — led to new insights in particle physics.    But I don’t have such insights, and for me particle physics is just a hobby.   I’m not trying to come up with a grand unified theory.   I just want to explain some patterns linking the Standard Model to the octonions.      </p>\r\n\r\n<p>Understanding these patterns requires knowing a bit of physics and a bit of math.  I’ll focus on the math side of things: mainly, I’ll be polishing up some existing ideas and trying to make them more pretty.   I’ll assume you either know the physics or can fake it: either way, it won’t be the main focus.</p>\r\n\r\n<p>In writing this first post, my attempt to explain an octonionic description of the strong force led me to a construction of the octonions that makes them look very much like the quaternions.  I don’t know if it’s new, but I’d never seen it before.   The basic idea is that <em>octonions are to <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msup><mi>ℂ</mi> <mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}^3</annotation></semantics></math> as quaternions are to <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msup><mi>ℝ</mi> <mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{R}^3</annotation></semantics></math></em>.</p>\r\n\r\n<div><a href=\"http://golem.ph.utexas.edu/~distler/blog/mathml.html\"><img class=\"mathlogo\" src=\"https://golem.ph.utexas.edu/~distler/blog/images/MathML.png\" alt=\"MathML-enabled post (click for more details).\" title=\"MathML-enabled post (click for details).\" /></a></div>\r\n\r\n<p>The group of automorphisms of the octonions that preserve any chosen octonion <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math> with <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msup><mi>i</mi> <mn>2</mn></msup><mo>=</mo><mo lspace=\"0.11111em\" rspace=\"0em\">−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">i^2 = -1</annotation></semantics></math> happens to be isomorphic to <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{SU}(3)</annotation></semantics></math>.  In physics this is interesting because <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{SU}(3)</annotation></semantics></math> is the gauge group of the strong nuclear force: the force that holds quarks together.  Furthermore, when we look at how <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{SU}(3)</annotation></semantics></math> acts on the octonions, it matches how <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{SU}(3)</annotation></semantics></math> acts on quarks and leptons. </p>\r\n\r\n<p>This idea has been around for a long time, going back at least to here:</p>\r\n\r\n<ul>\r\n<li>Murat Günaydin and Feza Gürsey, Quark structure and octonions, <em>Journal of Mathematical Physics</em> <strong>14</strong> (1973), 1651–1667.</li>\r\n</ul>\r\n\r\n<p>But if you look at that paper, you’ll see swarms of indices, which in my opinion conceal the beauty of what’s going on.</p>\r\n\r\n<p>We could try to simply compute the group of automorphisms preserving some octonion <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math> with <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msup><mi>i</mi> <mn>2</mn></msup><mo>=</mo><mo lspace=\"0.11111em\" rspace=\"0em\">−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">i^2 = -1</annotation></semantics></math>.   But it turns out there’s a description of the octonions that makes it <em>obvious</em> that this group at least <em>contains</em> a copy of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{SU}(3)</annotation></semantics></math>.  </p>\r\n\r\n<p>First remember how the quaternions work.   The quaternions are numbers like</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>a</mi><mo>+</mo><mi>b</mi><mi>i</mi><mo>+</mo><mi>c</mi><mi>j</mi><mo>+</mo><mi>d</mi><mi>k</mi></mrow><annotation encoding=\"application/x-tex\"> a + b i + c j + d k </annotation></semantics></math></p>\r\n\r\n<p>with <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>a</mi><mo>,</mo><mi>b</mi><mo>,</mo><mi>c</mi><mo>,</mo><mi>d</mi></mrow><annotation encoding=\"application/x-tex\">a,b,c,d</annotation></semantics></math> real.  In the late 1800s Josiah Willard Gibbs decided to chop quaternions into a scalar and vector part; if we do that we can write a quaternion as </p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>a</mi><mo>+</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover></mrow><annotation encoding=\"application/x-tex\"> a + \\vec{a} </annotation></semantics></math></p>\r\n\r\n<p>where <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>a</mi><mo>∈</mo><mi>ℝ</mi></mrow><annotation encoding=\"application/x-tex\">a \\in \\mathbb{R}</annotation></semantics></math> and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo>∈</mo><msup><mi>ℝ</mi> <mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\vec{a} \\in \\mathbb{R}^3</annotation></semantics></math> is the vector <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>b</mi><mi>i</mi><mo>+</mo><mi>c</mi><mi>j</mi><mo>+</mo><mi>d</mi><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">b i + c j + d k</annotation></semantics></math>.   Of course, these days kids are discouraged from adding scalars and vectors, but if you use quaternions it’s okay.  Here’s how you multiply quaternions:</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>a</mi><mo>+</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mi>b</mi><mo>+</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">)</mo><mo>=</mo><mi>a</mi><mi>b</mi><mo>−</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo>⋅</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo>+</mo><mi>a</mi><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo>+</mo><mi>b</mi><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo>+</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo>×</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover></mrow><annotation encoding=\"application/x-tex\">  (a + \\vec{a})(b + \\vec{b}) = a b - \\vec{a} \\cdot \\vec{b} + a \\vec{b} + b \\vec{a} + \\vec{a} \\times \\vec{b} </annotation></semantics></math></p>\r\n\r\n<p>So, all four ways of multiplying scalars and vectors are unified in quaternion multiplication:</p>\r\n\r\n<ul>\r\n<li>multiplication of scalars (the ordinary multiplication of real numbers)</li>\r\n<li>multiplication of vectors by scalars (scalar multiplication)</li>\r\n<li>the dot product of vectors</li>\r\n<li>the cross product of vectors</li>\r\n</ul>\r\n\r\n<p>This is no coincidence: the dot product and cross product were invented by Gibbs when he chopped quaternions into a scalar and vector part, and in 1901 these operations were popularized in Edwin Wilson’s book <em>Vector Analysis: A Textbook for the Use of Students of Mathematics</em>, which was based on some lectures by Gibbs.</p>\r\n\r\n<p>Now suppose we want to generalize all this using the complex numbers.  We’ll take our scalars to live in <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>ℂ</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}</annotation></semantics></math> and our vectors to live in <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msup><mi>ℂ</mi> <mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}^3</annotation></semantics></math>.    </p>\r\n\r\n<p><em>One</em> thing we can do — not the thing I’m interested in, but I have to mention it — is to copy everything that we just did, word for word, replacing <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>ℝ</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{R}</annotation></semantics></math> by <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>ℂ</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}</annotation></semantics></math> everywhere.  We don’t get the octonions: we get the <strong><a href=\"https://en.wikipedia.org/wiki/Biquaternion\">biquaternions</a></strong>, which is a 4-dimensional complex algebra, or 8-dimensonal real algebra.  The biquaternions turn out to be isomorphic to the algebra of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mn>2</mn><mo>×</mo><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">2 \\times 2</annotation></semantics></math> complex matrices.  </p>\r\n\r\n<p>In copying everything ‘word for word’, we defined a dot product on <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msup><mi>ℂ</mi> <mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}^3</annotation></semantics></math> just as we did for <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msup><mi>ℝ</mi> <mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{R}^3</annotation></semantics></math>:</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mover><mi>v</mi><mo stretchy=\"false\">→</mo></mover><mo>⋅</mo><mover><mi>w</mi><mo stretchy=\"false\">→</mo></mover><mo>=</mo><munderover><mo lspace=\"0.16667em\" rspace=\"0.16667em\">∑</mo> <mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow> <mn>3</mn></munderover><msub><mi>v</mi> <mi>i</mi></msub><msub><mi>w</mi> <mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\"> \\vec{v} \\cdot \\vec{w} = \\sum_{i=1}^3 v_i w_i </annotation></semantics></math></p>\r\n\r\n<p>But another alternative is to use the inner product</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo stretchy=\"false\">⟨</mo><mover><mi>v</mi><mo stretchy=\"false\">→</mo></mover><mo>,</mo><mover><mi>w</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">⟩</mo><mo>=</mo><munderover><mo lspace=\"0.16667em\" rspace=\"0.16667em\">∑</mo> <mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow> <mn>3</mn></munderover><msub><mover><mi>v</mi><mo>¯</mo></mover> <mi>i</mi></msub><msub><mi>w</mi> <mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\"> \\langle \\vec{v}, \\vec{w}\\rangle = \\sum_{i=1}^3 \\overline{v}_i w_i </annotation></semantics></math></p>\r\n\r\n<p>Just as the dot product on <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msup><mi>ℝ</mi> <mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{R}^3</annotation></semantics></math> is invariant under the group <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">O</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{O}(3)</annotation></semantics></math> of orthogonal <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mn>3</mn><mo>×</mo><mn>3</mn></mrow><annotation encoding=\"application/x-tex\">3 \\times 3</annotation></semantics></math> real matrices, this inner product on <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msup><mi>ℂ</mi> <mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}^3</annotation></semantics></math> is invariant under the group <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">U</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{U}(3)</annotation></semantics></math> of unitary <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mn>3</mn><mo>×</mo></mrow><annotation encoding=\"application/x-tex\">3 \\times </annotation></semantics></math> complex matrices.  Since we’re shooting for a connection to <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{SU}(3)</annotation></semantics></math>, let’s use this!</p>\r\n\r\n<p>It turns out that this change forces us to use a modified cross product.  The cross product on <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msup><mi>ℝ</mi> <mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{R}^3</annotation></semantics></math> is invariant under the group <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">SO</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{SO}(3)</annotation></semantics></math> of orthogonal <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mn>3</mn><mo>×</mo><mn>3</mn></mrow><annotation encoding=\"application/x-tex\">3 \\times 3</annotation></semantics></math> real matrices with determinant 1.   (So: not reflections, but rotations.)   Unfortunately, the cross product on <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msup><mi>ℂ</mi> <mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}^3</annotation></semantics></math> is <em>not</em> invariant under the group <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{SU}(3)</annotation></semantics></math> of unitary <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mn>3</mn><mo>×</mo><mn>3</mn></mrow><annotation encoding=\"application/x-tex\">3 \\times 3</annotation></semantics></math> complex matrices with determinant 1.</p>\r\n\r\n<p>What’s invariant under <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{SU}(3)</annotation></semantics></math> is a mutant version of the cross product, where we first take the usual cross product and then take the <em>complex conjugate</em> of each component.   Let’s call this</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mover><mo>×</mo><mo>¯</mo></mover><mo lspace=\"0.11111em\">:</mo><msup><mi>ℂ</mi> <mn>3</mn></msup><mo>×</mo><msup><mi>ℂ</mi> <mn>3</mn></msup><mo>→</mo><msup><mi>ℂ</mi> <mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">  \\overline{\\times} \\colon \\mathbb{C}^3 \\times \\mathbb{C}^3 \\to \\mathbb{C}^3</annotation></semantics></math> </p>\r\n\r\n<p>In coordinates, it’s given by</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo stretchy=\"false\">(</mo><mover><mi>v</mi><mo stretchy=\"false\">→</mo></mover><mover><mo>×</mo><mo>¯</mo></mover><mover><mi>w</mi><mo stretchy=\"false\">→</mo></mover><msub><mo stretchy=\"false\">)</mo> <mi>i</mi></msub><mo>=</mo><mover><mrow><mo stretchy=\"false\">(</mo><mover><mi>v</mi><mo stretchy=\"false\">→</mo></mover><mo>×</mo><mover><mi>w</mi><mo stretchy=\"false\">→</mo></mover><msub><mo stretchy=\"false\">)</mo> <mi>i</mi></msub></mrow><mo>¯</mo></mover></mrow><annotation encoding=\"application/x-tex\"> (\\vec{v} \\overline{\\times} \\vec{w})_i = \\overline{(\\vec{v} \\times \\vec{w})_i}  </annotation></semantics></math></p>\r\n\r\n<p>Later I’ll give a coordinate-free definition which makes it clear why this operation is invariant under <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{SU}(3)</annotation></semantics></math>.   Some people would say ‘equivariant’ but that sounds too fancy to me right now.  I just mean that if <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>U</mi><mo>∈</mo><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">U \\in \\mathrm{SU}(3)</annotation></semantics></math> we have</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>U</mi><mover><mi>v</mi><mo stretchy=\"false\">→</mo></mover><mover><mo>×</mo><mo>¯</mo></mover><mi>U</mi><mover><mi>w</mi><mo stretchy=\"false\">→</mo></mover><mo>=</mo><mi>U</mi><mo stretchy=\"false\">(</mo><mover><mi>v</mi><mo stretchy=\"false\">→</mo></mover><mover><mo>×</mo><mo>¯</mo></mover><mover><mi>w</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\"> U \\vec{v} \\overline{\\times} U \\vec{w} = U(\\vec{v} \\overline{\\times} \\vec{w}) </annotation></semantics></math></p>\r\n\r\n<p>Now we’ve got all the machinery to describe the octonions in a way that makes them look a lot like quaternions.   The quaternions were built from real scalars and real vectors:</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>ℍ</mi><mo>≅</mo><mi>ℝ</mi><mo>⊕</mo><msup><mi>ℝ</mi> <mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\"> \\mathbb{H} \\cong \\mathbb{R} \\oplus \\mathbb{R}^3 </annotation></semantics></math></p>\r\n\r\n<p>So now we’ll build the octonions from complex scalars and complex vectors:</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>&#x1d546;</mi><mo>≅</mo><mi>ℂ</mi><mo>⊕</mo><msup><mi>ℂ</mi> <mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\"> \\mathbb{O} \\cong \\mathbb{C} \\oplus \\mathbb{C}^3 </annotation></semantics></math></p>\r\n\r\n<p>To multiply guys in here we’ll copy the formula for multiplying quaternions, but we’ll make sure the multiplication is preserved by the obvious action of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{SU}(3)</annotation></semantics></math> — namely, the trivial action on scalars and the action by matrix multiplication on vectors.   This action clearly preserves <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>i</mi><mo>∈</mo><mi>ℂ</mi><mo>⊆</mo><mi>&#x1d546;</mi></mrow><annotation encoding=\"application/x-tex\">i \\in \\mathbb{C} \\subseteq \\mathbb{O}</annotation></semantics></math>, which is another thing we want.  Then, we’ll put the most obvious norm on this space, the one with</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo stretchy=\"false\">‖</mo><mi>a</mi><mo>+</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><msup><mo stretchy=\"false\">‖</mo> <mn>2</mn></msup><mo>=</mo><mo stretchy=\"false\">|</mo><mi>a</mi><msup><mo stretchy=\"false\">|</mo> <mn>2</mn></msup><mo>+</mo><mo stretchy=\"false\">⟨</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo>,</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">⟩</mo></mrow><annotation encoding=\"application/x-tex\"> \\| a + \\vec{a} \\|^2 = |a|^2 + \\langle \\vec{a}, \\vec{a} \\rangle </annotation></semantics></math></p>\r\n\r\n<p>and we’ll show that multiplication gets along with this norm:</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo stretchy=\"false\">‖</mo><mo stretchy=\"false\">(</mo><mi>a</mi><mo>+</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mi>b</mi><mo>+</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">‖</mo><mo>=</mo><mo stretchy=\"false\">‖</mo><mi>a</mi><mo>+</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">‖</mo><mo stretchy=\"false\">‖</mo><mi>b</mi><mo>+</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">‖</mo></mrow><annotation encoding=\"application/x-tex\">  \\|(a + \\vec{a})(b + \\vec{b})\\| = \\|a + \\vec{a}\\| \\|b + \\vec{b}\\|  </annotation></semantics></math></p>\r\n\r\n<p>So, we’ll have an 8-dimensional normed division algebra — which implies that we’ve got the octonions!  </p>\r\n\r\n<p>Since our formula for multiplication will look almost like the formula for multiplying quaternions, the proof that multiplication gets along with the norm will be almost like the proof that works for the quaternions.</p>\r\n\r\n<p>Even better, just as the quaternions have <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">SO</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{SO}(3)</annotation></semantics></math> acting as automorphisms since their multiplication was built from <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">SO</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{SO}(3)</annotation></semantics></math>-invariant operations, the octonions will have <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{SU}(3)</annotation></semantics></math> acting as automorphisms that preserve <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math>, because we’ll build their multiplication from <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{SU}(3)</annotation></semantics></math>-invariant operations that preserve <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math>!</p>\r\n\r\n<p>Here’s the result:</p>\r\n\r\n<p><strong>Theorem 1.</strong>  <em>If we define multiplication on <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>ℂ</mi><mo>⊕</mo><msup><mi>ℂ</mi> <mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C} \\oplus \\mathbb{C}^3</annotation></semantics></math> by\r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>a</mi><mo>+</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mi>b</mi><mo>+</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">)</mo><mo>=</mo><mi>a</mi><mi>b</mi><mo>−</mo><mo stretchy=\"false\">⟨</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo>,</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">⟩</mo><mo>+</mo><mover><mi>a</mi><mo>¯</mo></mover><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo>+</mo><mi>b</mi><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo>+</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mover><mo>×</mo><mo>¯</mo></mover><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover></mrow><annotation encoding=\"application/x-tex\">  (a + \\vec{a})(b + \\vec{b}) = a b - \\langle \\vec{a}, \\vec{b}\\rangle + \\overline{a} \\vec{b} + b \\vec{a} + \\vec{a} \\overline{\\times} \\vec{b} </annotation></semantics></math>\r\nthen we obtain a normed division algebra, since <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mn>1</mn><mo>∈</mo><mi>ℂ</mi></mrow><annotation encoding=\"application/x-tex\">1 \\in \\mathbb{C}</annotation></semantics></math> acts as the multiplicative identity and \r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo stretchy=\"false\">‖</mo><mo stretchy=\"false\">(</mo><mi>a</mi><mo>+</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mi>b</mi><mo>+</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">‖</mo><mo>=</mo><mo stretchy=\"false\">‖</mo><mi>a</mi><mo>+</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">‖</mo><mo stretchy=\"false\">‖</mo><mi>b</mi><mo>+</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">‖</mo></mrow><annotation encoding=\"application/x-tex\">  \\|(a + \\vec{a})(b + \\vec{b})\\| = \\|a + \\vec{a}\\| \\|b + \\vec{b}\\|  </annotation></semantics></math>\r\nThis normed division algebra is isomorphic to the octonions.</em></p>\r\n\r\n<p>Note the formula for multiplication is <em>exactly</em> like the formula for multiplying quaternions… except for three things.  First, the dot product has been replaced by the inner product.   Second, the cross product has been replaced by the mutant cross product <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mover><mo>×</mo><mo>¯</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\overline{\\times}</annotation></semantics></math>.  These changes are not weird, because we want operations that are invariant under <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{SU}(3)</annotation></semantics></math>.  Third, the term <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>a</mi><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover></mrow><annotation encoding=\"application/x-tex\">a \\vec{b}</annotation></semantics></math> has been replaced by <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mover><mi>a</mi><mo>¯</mo></mover><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\overline{a} \\vec{b}</annotation></semantics></math>, while the term <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>b</mi><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover></mrow><annotation encoding=\"application/x-tex\">b \\vec{a}</annotation></semantics></math> remains unchanged.  This <em>is</em> weird.  Of course complex conjugation of scalars is invariant under <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{SU}(3)</annotation></semantics></math>.  But the reason we <em>need</em> it is to get a normed division algebra.</p>\r\n\r\n<p>I’ll give the proof at the end of this post.  In reading this proof, the main thing to keep an eye on is the overlines for complex conjugation.   I checked my calculations a few times, but if I got them wrong then maybe the <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mover><mi>a</mi><mo>¯</mo></mover><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\overline{a} \\vec{b}</annotation></semantics></math> business isn’t needed.  That would make me very happy.</p>\r\n\r\n<p>Now let me tell you how I came up with this stuff.   This part is more fancy than the story so far, but it may appeal to certain people.</p>\r\n\r\n<p>Let’s start by <em>assuming</em> the octonions <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d546;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{O}</annotation></semantics></math> are an 8-dimensional normed division algebra such that the automorphisms preserving any octonion <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math> with <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msup><mi>i</mi> <mn>2</mn></msup><mo>=</mo><mo lspace=\"0.11111em\" rspace=\"0em\">−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">i^2 = -1</annotation></semantics></math> form a copy of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{SU}(3)</annotation></semantics></math>, and use this to try to <em>guess</em> how multiplication in the octonions works.  </p>\r\n\r\n<p>What is <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d546;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{O}</annotation></semantics></math> like, as a representation of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{SU}(3)</annotation></semantics></math>?  Initially, at least, it’s a <em>real</em> representation.   It has a 1-dimensional invariant subspace spanned by the element <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math>, since <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math> is fixed by every automorphism.  And it has a 1-dimensional invariant subspace spanned by <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math>, by assumption.   Taking the direct sum of these, we get a 2-dimensional trivial subrepresentation which is also a subalgebra: a copy of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>ℂ</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}</annotation></semantics></math> in <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d546;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{O}</annotation></semantics></math>.</p>\r\n\r\n<p>Since <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{SU}(3)</annotation></semantics></math> is compact there must be a complementary 6-dimensional subspace </p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>V</mi><mo>⊆</mo><mi>&#x1d546;</mi></mrow><annotation encoding=\"application/x-tex\">V \\subseteq \\mathbb{O}</annotation></semantics></math> </p>\r\n\r\n<p>that’s also preserved by <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{SU}(3)</annotation></semantics></math>.   We can understand this better if we break it into irreducible representations of  <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{SU}(3)</annotation></semantics></math>.   The lowest-dimensional real irreps of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{SU}(3)</annotation></semantics></math> are the 1-dimensional trivial rep and the 6-dimensional irrep coming from the usual action of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{SU}(3)</annotation></semantics></math> on <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msup><mi>ℂ</mi> <mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}^3</annotation></semantics></math>.   Note: <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{SU}(3)</annotation></semantics></math> has two inequivalent <em>complex</em> irreps of dimension 3, namely its usual rep on <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msup><mi>ℂ</mi> <mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}^3</annotation></semantics></math> and the dual of this — but these are equivalent as <em>real</em> reps, as always for a unitary rep and its dual.</p>\r\n\r\n<p>It follows that <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>V</mi><mo>⊆</mo><mi>&#x1d546;</mi></mrow><annotation encoding=\"application/x-tex\">V \\subseteq \\mathbb{O}</annotation></semantics></math> is the 6-dimensional real irrep of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{SU}(3)</annotation></semantics></math>.   Indeed, the only alternative is that <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>V</mi></mrow><annotation encoding=\"application/x-tex\">V</annotation></semantics></math> is the direct sum of 6 copies of the 1-dimensional <em>trivial</em> rep!   But in that case <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{SU}(3)</annotation></semantics></math> would act trivially on <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d546;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{O}</annotation></semantics></math>, so it would not be a group of automorphisms of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d546;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{O}</annotation></semantics></math>.  So that alternative is out.</p>\r\n\r\n<p>So <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>V</mi></mrow><annotation encoding=\"application/x-tex\">V</annotation></semantics></math> must be isomorphic to the usual rep on <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msup><mi>ℂ</mi> <mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}^3</annotation></semantics></math>, and we get</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>&#x1d546;</mi><mo>≅</mo><mi>ℂ</mi><mo>⊕</mo><msup><mi>ℂ</mi> <mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">   \\mathbb{O} \\cong \\mathbb{C} \\oplus \\mathbb{C}^3 </annotation></semantics></math></p>\r\n\r\n<p>as real reps of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{SU}(3)</annotation></semantics></math>.   </p>\r\n\r\n<p>Now we can try to figure out the options for multiplying octonions.  Since the multiplication is invariant under <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{SU}(3)</annotation></semantics></math>, it must be built from <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{SU}(3)</annotation></semantics></math>-invariant bilinear maps involving <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>ℂ</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}</annotation></semantics></math> and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msup><mi>ℂ</mi> <mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}^3</annotation></semantics></math>.     </p>\r\n\r\n<p>This should instantly make you think of the quaternions!  The quaternions</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>ℍ</mi><mo>≅</mo><mi>ℝ</mi><mo>⊕</mo><msup><mi>ℝ</mi> <mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\"> \\mathbb{H} \\cong \\mathbb{R} \\oplus \\mathbb{R}^3 </annotation></semantics></math></p>\r\n\r\n<p>have multiplication built from <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">SO</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{SO}(3)</annotation></semantics></math>-invariant bilinear maps involving <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>ℝ</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{R}</annotation></semantics></math> and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msup><mi>ℝ</mi> <mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{R}^3</annotation></semantics></math>.   These maps are familiar:</p>\r\n\r\n<ul>\r\n<li>multiplication of scalars</li>\r\n<li>multiplication of vectors by scalars </li>\r\n<li>the dot product of vectors</li>\r\n<li>the cross product of vectors</li>\r\n</ul>\r\n\r\n<p>So, we should think about how to adjust these in the complex case, to get <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{SU}(3)</annotation></semantics></math>-invariant maps.    Multiplication of scalars remains unchanged, as does the multiplication of vectors by scalars, but the dot product and cross product need to be adjusted.</p>\r\n\r\n<p>First remember what’s going on with the dot product and cross product in <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msup><mi>ℝ</mi> <mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{R}^3</annotation></semantics></math>.   The usual inner product on <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msup><mi>ℝ</mi> <mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{R}^3</annotation></semantics></math> is invariant under <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">O</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{O}(3)</annotation></semantics></math> just by definition. The cross product is more complicated.   To build it, we start with the wedge product.</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo>∧</mo><mo lspace=\"0.11111em\">:</mo><msup><mi>ℝ</mi> <mn>3</mn></msup><mo>×</mo><msup><mi>ℝ</mi> <mn>3</mn></msup><mo>→</mo><msup><mi>Λ</mi> <mn>2</mn></msup><msup><mi>ℝ</mi> <mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\"> \\wedge \\colon \\mathbb{R}^3 \\times \\mathbb{R}^3 \\to \\Lambda^2 \\mathbb{R}^3 </annotation></semantics></math></p>\r\n\r\n<p>which is invariant under all of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">GL</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo>,</mo><mi>ℝ</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{GL}(3,\\mathbb{R})</annotation></semantics></math>.  Then we apply an isomorphism </p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>α</mi><mo lspace=\"0.11111em\">:</mo><msup><mi>Λ</mi> <mn>2</mn></msup><msup><mi>ℝ</mi> <mn>3</mn></msup><mo>→</mo><mo stretchy=\"false\">(</mo><msup><mi>ℝ</mi> <mn>3</mn></msup><msup><mo stretchy=\"false\">)</mo> <mo>*</mo></msup></mrow><annotation encoding=\"application/x-tex\"> \\alpha \\colon  \\Lambda^2 \\mathbb{R}^3 \\to (\\mathbb{R}^3)^\\ast </annotation></semantics></math></p>\r\n\r\n<p>This is invariant under <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">SL</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo>,</mo><mi>ℝ</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{SL}(3,\\mathbb{R})</annotation></semantics></math>, since it’s defined by</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>α</mi><mo stretchy=\"false\">(</mo><mi>ω</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mover><mi>v</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">)</mo><mspace width=\"0.27778em\" /><mi mathvariant=\"normal\">vol</mi><mo>=</mo><mi>ω</mi><mo>∧</mo><mover><mi>v</mi><mo stretchy=\"false\">→</mo></mover></mrow><annotation encoding=\"application/x-tex\"> \\alpha(\\omega)(\\vec{v}) \\; \\mathrm{vol} =  \\omega \\wedge \\vec{v}  </annotation></semantics></math></p>\r\n\r\n<p>where <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">vol</mi></mrow><annotation encoding=\"application/x-tex\">\\mathrm{vol}</annotation></semantics></math> is the usual volume 3-form and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>ω</mi></mrow><annotation encoding=\"application/x-tex\">\\omega</annotation></semantics></math> is anything in <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msup><mi>Λ</mi> <mn>2</mn></msup><msup><mi>ℝ</mi> <mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\Lambda^2 \\mathbb{R}^3</annotation></semantics></math>.  Then we apply the so-called <strong><a href=\"https://en.wikipedia.org/wiki/Musical_isomorphism\">musical isomorphism</a></strong>:</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo>♯</mo><mo lspace=\"0.11111em\">:</mo><mo stretchy=\"false\">(</mo><msup><mi>ℝ</mi> <mn>3</mn></msup><msup><mo stretchy=\"false\">)</mo> <mo>*</mo></msup><mo>→</mo><msup><mi>ℝ</mi> <mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\"> \\sharp \\colon (\\mathbb{R}^3)^* \\to \\mathbb{R}^3 </annotation></semantics></math></p>\r\n\r\n<p>which invariant under <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">O</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{O}(3)</annotation></semantics></math>, since it’s defined by</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo>♯</mo><mo stretchy=\"false\">(</mo><mi>f</mi><mo stretchy=\"false\">)</mo><mo>⋅</mo><mover><mi>v</mi><mo stretchy=\"false\">→</mo></mover><mo>=</mo><mi>f</mi><mo stretchy=\"false\">(</mo><mover><mi>v</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\"> \\sharp(f) \\cdot \\vec{v} = f(\\vec{v}) </annotation></semantics></math></p>\r\n\r\n<p>Putting all this crud together, we get the cross product</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo>×</mo><mo lspace=\"0.11111em\">:</mo><msup><mi>ℝ</mi> <mn>3</mn></msup><mo>×</mo><msup><mi>ℝ</mi> <mn>3</mn></msup><mo>→</mo><msup><mi>ℝ</mi> <mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\"> \\times \\colon \\mathbb{R}^3 \\times \\mathbb{R}^3 \\to \\mathbb{R}^3 </annotation></semantics></math></p>\r\n\r\n<p>defined by </p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mover><mi>v</mi><mo stretchy=\"false\">→</mo></mover><mo>×</mo><mover><mi>w</mi><mo stretchy=\"false\">→</mo></mover><mo>=</mo><mo>♯</mo><mi>α</mi><mo stretchy=\"false\">(</mo><mover><mi>v</mi><mo stretchy=\"false\">→</mo></mover><mo>∧</mo><mover><mi>w</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\"> \\vec{v} \\times \\vec{w} = \\sharp \\alpha(\\vec{v} \\wedge \\vec{w}) </annotation></semantics></math></p>\r\n\r\n<p>The cross product is invariant under <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">SO</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{SO}(3)</annotation></semantics></math>, since that’s the intersection of all the groups I just mentioned!   </p>\r\n\r\n<p>Whew.  It’s amazing kids can learn the cross product.   </p>\r\n\r\n<p>Now let’s copy all this stuff using complex numbers and get the octonions.  We’ll replace the dot product with the inner product on <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msup><mi>ℂ</mi> <mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}^3</annotation></semantics></math>:</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo stretchy=\"false\">⟨</mo><mover><mi>v</mi><mo stretchy=\"false\">→</mo></mover><mo>,</mo><mover><mi>w</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">⟩</mo><mo>=</mo><munderover><mo lspace=\"0.16667em\" rspace=\"0.16667em\">∑</mo> <mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow> <mn>3</mn></munderover><msub><mover><mi>v</mi><mo>¯</mo></mover> <mi>i</mi></msub><msub><mi>w</mi> <mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\"> \\langle \\vec{v}, \\vec{w} \\rangle = \\sum_{i=1}^3 \\overline{v}_i w_i </annotation></semantics></math></p>\r\n\r\n<p>This is invariant under <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">U</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{U}(3)</annotation></semantics></math>, but it’s <strong><a href=\"https://en.wikipedia.org/wiki/Sesquilinear_form\">sesquilinear</a></strong>: complex-linear in the second argument but conjugate-linear in the first.   To define a mutant version of the wedge product, we’ll start with the complex-bilinear wedge product</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo>∧</mo><mo lspace=\"0.11111em\">:</mo><msup><mi>ℂ</mi> <mn>3</mn></msup><mo>×</mo><msup><mi>ℂ</mi> <mn>3</mn></msup><mo>→</mo><msup><mi>Λ</mi> <mn>2</mn></msup><msup><mi>ℂ</mi> <mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\"> \\wedge \\colon \\mathbb{C}^3 \\times \\mathbb{C}^3 \\to \\Lambda^2 \\mathbb{C}^3 </annotation></semantics></math></p>\r\n\r\n<p>This is invariant under all of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">GL</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo>,</mo><mi>ℂ</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{GL}(3,\\mathbb{C})</annotation></semantics></math>.  Then we apply an isomorphism</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>α</mi><mo lspace=\"0.11111em\">:</mo><msup><mi>Λ</mi> <mn>2</mn></msup><msup><mi>ℂ</mi> <mn>3</mn></msup><mo>→</mo><mo stretchy=\"false\">(</mo><msup><mi>ℂ</mi> <mn>3</mn></msup><msup><mo stretchy=\"false\">)</mo> <mo>*</mo></msup></mrow><annotation encoding=\"application/x-tex\"> \\alpha \\colon  \\Lambda^2 \\mathbb{C}^3 \\to (\\mathbb{C}^3)^\\ast </annotation></semantics></math></p>\r\n\r\n<p>This is complex-linear and invariant under <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">SL</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo>,</mo><mi>ℂ</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{SL}(3,\\mathbb{C})</annotation></semantics></math>, since it’s defined by</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>α</mi><mo stretchy=\"false\">(</mo><mi>ω</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mover><mi>v</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">)</mo><mspace width=\"0.27778em\" /><mi mathvariant=\"normal\">vol</mi><mo>=</mo><mi>ω</mi><mo>∧</mo><mover><mi>v</mi><mo stretchy=\"false\">→</mo></mover></mrow><annotation encoding=\"application/x-tex\"> \\alpha(\\omega)(\\vec{v}) \\; \\mathrm{vol} =  \\omega \\wedge \\vec{v}  </annotation></semantics></math></p>\r\n\r\n<p>where <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">vol</mi></mrow><annotation encoding=\"application/x-tex\">\\mathrm{vol}</annotation></semantics></math> is the usual volume 3-form.  Then we apply an isomorphism</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo>♯</mo><mo lspace=\"0.11111em\">:</mo><mo stretchy=\"false\">(</mo><msup><mi>ℂ</mi> <mn>3</mn></msup><msup><mo stretchy=\"false\">)</mo> <mo>*</mo></msup><mo>→</mo><msup><mi>ℂ</mi> <mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\"> \\sharp \\colon (\\mathbb{C}^3)^\\ast \\to \\mathbb{C}^3 </annotation></semantics></math></p>\r\n\r\n<p>This is now <em>conjugate</em>-linear and invariant under <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">U</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{U}(3)</annotation></semantics></math>, since it’s defined by</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo stretchy=\"false\">⟨</mo><mo>♯</mo><mo stretchy=\"false\">(</mo><mi>f</mi><mo stretchy=\"false\">)</mo><mo>,</mo><mover><mi>v</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">⟩</mo><mo>=</mo><mi>f</mi><mo stretchy=\"false\">(</mo><mover><mi>v</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\"> \\langle \\sharp(f) , \\vec{v} \\rangle = f(\\vec{v}) </annotation></semantics></math></p>\r\n\r\n<p>Putting all this together, we get</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mover><mo>×</mo><mo>¯</mo></mover><mo lspace=\"0.11111em\">:</mo><msup><mi>ℂ</mi> <mn>3</mn></msup><mo>×</mo><msup><mi>ℂ</mi> <mn>3</mn></msup><mo>→</mo><msup><mi>ℂ</mi> <mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\"> \\overline{\\times} \\colon \\mathbb{C}^3 \\times \\mathbb{C}^3 \\to \\mathbb{C}^3 </annotation></semantics></math></p>\r\n\r\n<p>defined by</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mover><mi>v</mi><mo stretchy=\"false\">→</mo></mover><mover><mo>×</mo><mo>¯</mo></mover><mover><mi>w</mi><mo stretchy=\"false\">→</mo></mover><mo>=</mo><mo>♯</mo><mi>α</mi><mo stretchy=\"false\">(</mo><mover><mi>v</mi><mo stretchy=\"false\">→</mo></mover><mo>∧</mo><mover><mi>w</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\"> \\vec{v} \\overline{\\times} \\vec{w} = \\sharp \\alpha(\\vec{v} \\wedge \\vec{w}) </annotation></semantics></math></p>\r\n\r\n<p>This is <em>conjugate-linear</em> and invariant under <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{SU}(3)</annotation></semantics></math>.  If we work it out in coordinate we see</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo stretchy=\"false\">(</mo><mover><mi>v</mi><mo stretchy=\"false\">→</mo></mover><mover><mo>×</mo><mo>¯</mo></mover><mover><mi>w</mi><mo stretchy=\"false\">→</mo></mover><msub><mo stretchy=\"false\">)</mo> <mi>i</mi></msub><mo>=</mo><mover><mrow><mo stretchy=\"false\">(</mo><mover><mi>v</mi><mo stretchy=\"false\">→</mo></mover><mo>×</mo><mover><mi>w</mi><mo stretchy=\"false\">→</mo></mover><msub><mo stretchy=\"false\">)</mo> <mi>i</mi></msub></mrow><mo>¯</mo></mover></mrow><annotation encoding=\"application/x-tex\"> (\\vec{v} \\overline{\\times} \\vec{w})_i = \\overline{(\\vec{v} \\times \\vec{w})_i}  </annotation></semantics></math></p>\r\n\r\n<p>So, it’s clear that we should define octonion multiplication using these maps, and that we should make it look like quaternion multiplication so we can prove we get a normed division algebra.   The one unpredictable twist is that now we can take complex conjugates of scalars: this operation is also <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{SU}(3)</annotation></semantics></math>-invariant.  We have to do this in the right places to get a normed division algebra!</p>\r\n\r\n<p>So let’s see why, by proving this theorem:</p>\r\n\r\n<p><strong>Theorem 1.</strong>  <em>If we define multiplication on <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>ℂ</mi><mo>⊕</mo><msup><mi>ℂ</mi> <mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C} \\oplus \\mathbb{C}^3</annotation></semantics></math> by\r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>a</mi><mo>+</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mi>b</mi><mo>+</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">)</mo><mo>=</mo><mi>a</mi><mi>b</mi><mo>−</mo><mo stretchy=\"false\">⟨</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo>,</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">⟩</mo><mo>+</mo><mover><mi>a</mi><mo>¯</mo></mover><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo>+</mo><mi>b</mi><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo>+</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mover><mo>×</mo><mo>¯</mo></mover><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover></mrow><annotation encoding=\"application/x-tex\">  (a + \\vec{a})(b + \\vec{b}) = a b - \\langle\\vec{a}, \\vec{b}\\rangle + \\overline{a} \\vec{b} + b \\vec{a} + \\vec{a} \\overline{\\times} \\vec{b} </annotation></semantics></math>\r\nthen we obtain a normed division algebra, since <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mn>1</mn><mo>∈</mo><mi>ℂ</mi></mrow><annotation encoding=\"application/x-tex\">1 \\in \\mathbb{C}</annotation></semantics></math> acts as the multiplicative identity and \r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo stretchy=\"false\">‖</mo><mo stretchy=\"false\">(</mo><mi>a</mi><mo>+</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mi>b</mi><mo>+</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">‖</mo><mo>=</mo><mo stretchy=\"false\">‖</mo><mi>a</mi><mo>+</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">‖</mo><mo stretchy=\"false\">‖</mo><mi>b</mi><mo>+</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">‖</mo></mrow><annotation encoding=\"application/x-tex\">  \\|(a + \\vec{a})(b + \\vec{b})\\| = \\|a + \\vec{a}\\| \\|b + \\vec{b}\\|  </annotation></semantics></math>\r\nThis normed division algebra is isomorphic to the octonions.</em></p>\r\n\r\n<p><strong>Proof.</strong>  It’s enough to show that we have a normed division algebra, since the octonions are the only 8-dimensional normed division algebra over the reals.   We’ll use the norm with</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo stretchy=\"false\">‖</mo><mi>a</mi><mo>+</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><msup><mo stretchy=\"false\">‖</mo> <mn>2</mn></msup><mo>=</mo><mo stretchy=\"false\">|</mo><mi>a</mi><msup><mo stretchy=\"false\">|</mo> <mn>2</mn></msup><mo>+</mo><mo stretchy=\"false\">⟨</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo>,</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">⟩</mo></mrow><annotation encoding=\"application/x-tex\"> \\|a + \\vec{a}\\|^2 =  |a|^2 + \\langle \\vec{a} , \\vec{a} \\rangle </annotation></semantics></math></p>\r\n\r\n<p>and show that</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo stretchy=\"false\">‖</mo><mo stretchy=\"false\">(</mo><mi>a</mi><mo>+</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mi>b</mi><mo>+</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">‖</mo><mo>=</mo><mo stretchy=\"false\">‖</mo><mi>a</mi><mo>+</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">‖</mo><mo stretchy=\"false\">‖</mo><mi>b</mi><mo>+</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">‖</mo></mrow><annotation encoding=\"application/x-tex\">  \\|(a + \\vec{a})(b + \\vec{b})\\| = \\|a + \\vec{a}\\| \\|b + \\vec{b}\\|  </annotation></semantics></math></p>\r\n\r\n<p>It’s a calculation — and if we take all our complex numbers to be real, this calculation will also show that that <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>ℝ</mi><mo>⊕</mo><msup><mi>ℝ</mi> <mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{R} \\oplus \\mathbb{R}^3</annotation></semantics></math> is a normed division algebra with the same multiplication formula: it’s the quaternions.</p>\r\n\r\n<p>We start with</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo stretchy=\"false\">‖</mo><mo stretchy=\"false\">(</mo><mi>a</mi><mo>+</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mi>b</mi><mo>+</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">)</mo><msup><mo stretchy=\"false\">‖</mo> <mn>2</mn></msup><mo>=</mo><mo stretchy=\"false\">‖</mo><mi>a</mi><mi>b</mi><mo>−</mo><mo stretchy=\"false\">⟨</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo>,</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">⟩</mo><mo>+</mo><mover><mi>a</mi><mo>¯</mo></mover><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo>+</mo><mi>b</mi><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo>+</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mover><mo>×</mo><mo>¯</mo></mover><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><msup><mo stretchy=\"false\">‖</mo> <mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">  \\|(a + \\vec{a})(b + \\vec{b})\\|^2 = \\|a b - \\langle\\vec{a}, \\vec{b}\\rangle + \\overline{a} \\vec{b} + b \\vec{a} + \\vec{a} \\overline{\\times} \\vec{b} \\|^2 </annotation></semantics></math></p>\r\n\r\n<p>and use the definition of the norm to break this up into two terms:</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo stretchy=\"false\">|</mo><mi>a</mi><mi>b</mi><mo>−</mo><mo stretchy=\"false\">⟨</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo>,</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">⟩</mo><msup><mo stretchy=\"false\">|</mo> <mn>2</mn></msup><mo>+</mo><mo stretchy=\"false\">‖</mo><mover><mi>a</mi><mo>¯</mo></mover><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo>+</mo><mi>b</mi><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo>+</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mover><mo>×</mo><mo>¯</mo></mover><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><msup><mo stretchy=\"false\">‖</mo> <mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\"> |a b - \\langle \\vec{a}, \\vec{b} \\rangle|^2 + \\| \\overline{a} \\vec{b} + b \\vec{a} + \\vec{a} \\overline{\\times} \\vec{b} \\|^2 </annotation></semantics></math></p>\r\n\r\n<p>We can expand the first term:</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo stretchy=\"false\">|</mo><mi>a</mi><mi>b</mi><mo>−</mo><mo stretchy=\"false\">⟨</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo>,</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">⟩</mo><msup><mo stretchy=\"false\">|</mo> <mn>2</mn></msup><mo>=</mo><mo stretchy=\"false\">|</mo><mi>a</mi><mi>b</mi><msup><mo stretchy=\"false\">|</mo> <mn>2</mn></msup><mo>−</mo><mn>2</mn><mi mathvariant=\"normal\">Re</mi><mo stretchy=\"false\">(</mo><mi>a</mi><mi>b</mi><mo stretchy=\"false\">⟨</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo>,</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">⟩</mo><mo stretchy=\"false\">)</mo><mo>+</mo><mo stretchy=\"false\">|</mo><mo stretchy=\"false\">⟨</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo>,</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">⟩</mo><msup><mo stretchy=\"false\">|</mo> <mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">  |a b - \\langle \\vec{a}, \\vec{b} \\rangle|^2 = |a b|^2 - 2 \\mathrm{Re}(a b \\langle \\vec{b} , \\vec{a} \\rangle) + |\\langle \\vec{a}, \\vec{b}\\rangle|^2 </annotation></semantics></math></p>\r\n\r\n<p>We can expand the second term:</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo stretchy=\"false\">‖</mo><mover><mi>a</mi><mo>¯</mo></mover><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo>+</mo><mi>b</mi><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo>+</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mover><mo>×</mo><mo>¯</mo></mover><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><msup><mo stretchy=\"false\">‖</mo> <mn>2</mn></msup><mo>=</mo></mrow><annotation encoding=\"application/x-tex\">  \\|\\overline{a} \\vec{b} + b \\vec{a} + \\vec{a} \\overline{\\times} \\vec{b} \\|^2 = </annotation></semantics></math>\r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo stretchy=\"false\">‖</mo><mover><mi>a</mi><mo>¯</mo></mover><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><msup><mo stretchy=\"false\">‖</mo> <mn>2</mn></msup><mo>+</mo><mo stretchy=\"false\">‖</mo><mi>b</mi><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><msup><mo stretchy=\"false\">‖</mo> <mn>2</mn></msup><mo>+</mo><mo stretchy=\"false\">‖</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mover><mo>×</mo><mo>¯</mo></mover><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><msup><mo stretchy=\"false\">‖</mo> <mn>2</mn></msup><mo>+</mo><mn>2</mn><mi mathvariant=\"normal\">Re</mi><mo maxsize=\"1.2em\" minsize=\"1.2em\">(</mo><mi>a</mi><mi>b</mi><mo stretchy=\"false\">⟨</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo>,</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">⟩</mo><mo>+</mo><mi>a</mi><mo stretchy=\"false\">⟨</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo>,</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mover><mo>×</mo><mo>¯</mo></mover><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">⟩</mo><mo>+</mo><mover><mi>b</mi><mo>¯</mo></mover><mo stretchy=\"false\">⟨</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo>,</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mover><mo>×</mo><mo>¯</mo></mover><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">⟩</mo><mo maxsize=\"1.2em\" minsize=\"1.2em\">)</mo></mrow><annotation encoding=\"application/x-tex\"> \\| \\overline{a} \\vec{b} \\|^2 + \\|b \\vec{a} \\|^2 + \\|\\vec{a} \\overline{\\times} \\vec{b}\\|^2 + \r\n 2 \\mathrm{Re} \\big( a b \\langle \\vec{b}, \\vec{a} \\rangle  + \r\na \\langle \\vec{b}, \\vec{a} \\overline{\\times} \\vec{b} \\rangle +\r\n\\overline{b} \\langle \\vec{a}, \\vec{a} \\overline{\\times} \\vec{b} \\rangle  \\big) </annotation></semantics></math></p>\r\n\r\n<p>But note that</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo stretchy=\"false\">⟨</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo>,</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mover><mo>×</mo><mo>¯</mo></mover><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">⟩</mo><mo>=</mo><mover><mrow><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo>⋅</mo><mo stretchy=\"false\">(</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo>×</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">)</mo></mrow><mo>¯</mo></mover><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">  \\langle \\vec{a}, \\vec{a} \\overline{\\times} \\vec{b} \\rangle = \\overline{\\vec{a} \\cdot (\\vec{a} \\times \\vec{b})} = 0 </annotation></semantics></math></p>\r\n\r\n<p>by a well-known vector identity which works for complex vectors just as for real ones.  Similarly <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo stretchy=\"false\">⟨</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo>,</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mover><mo>×</mo><mo>¯</mo></mover><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">⟩</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">\\langle \\vec{b}, \\vec{a} \\overline{\\times} \\vec{b} \\rangle = 0</annotation></semantics></math>.  So, the expanded second term simplifies, and when we add it to the expanded first term the bits involving <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">Re</mi><mo stretchy=\"false\">(</mo><mi>a</mi><mi>b</mi><mo stretchy=\"false\">⟨</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo>,</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">⟩</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{Re}(a b \\langle \\vec{b} , \\vec{a} \\rangle)</annotation></semantics></math> cancel out.   We’re left with this:</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo stretchy=\"false\">|</mo><mi>a</mi><mi>b</mi><msup><mo stretchy=\"false\">|</mo> <mn>2</mn></msup><mo>+</mo><mo stretchy=\"false\">|</mo><mo stretchy=\"false\">⟨</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo>,</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">⟩</mo><msup><mo stretchy=\"false\">|</mo> <mn>2</mn></msup><mo>+</mo><mo stretchy=\"false\">‖</mo><mover><mi>a</mi><mo>¯</mo></mover><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><msup><mo stretchy=\"false\">‖</mo> <mn>2</mn></msup><mo>+</mo><mo stretchy=\"false\">‖</mo><mi>b</mi><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><msup><mo stretchy=\"false\">‖</mo> <mn>2</mn></msup><mo>+</mo><mo stretchy=\"false\">‖</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mover><mo>×</mo><mo>¯</mo></mover><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><msup><mo stretchy=\"false\">‖</mo> <mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">  |a b|^2 + |\\langle \\vec{a}, \\vec{b}\\rangle|^2 + \r\n \\| \\overline{a} \\vec{b} \\|^2 + \\|b \\vec{a} \\|^2 + \\|\\vec{a} \\overline{\\times} \\vec{b}\\|^2 </annotation></semantics></math></p>\r\n\r\n<p>We need to show this equals</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mtable displaystyle=\"false\" rowspacing=\"0.5ex\" columnalign=\"center center left\"><mtr><mtd><mo stretchy=\"false\">‖</mo><mi>a</mi><mo>+</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><msup><mo stretchy=\"false\">‖</mo> <mn>2</mn></msup><mo stretchy=\"false\">‖</mo><mi>b</mi><mo>+</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><msup><mo stretchy=\"false\">‖</mo> <mn>2</mn></msup></mtd> <mtd><mo>=</mo></mtd> <mtd><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">|</mo><mi>a</mi><msup><mo stretchy=\"false\">|</mo> <mn>2</mn></msup><mo>+</mo><mo stretchy=\"false\">‖</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><msup><mo stretchy=\"false\">‖</mo> <mn>2</mn></msup><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">|</mo><mi>b</mi><msup><mo stretchy=\"false\">|</mo> <mn>2</mn></msup><mo>+</mo><mo stretchy=\"false\">‖</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><msup><mo stretchy=\"false\">‖</mo> <mn>2</mn></msup><mo stretchy=\"false\">)</mo></mtd></mtr> <mtr><mtd /></mtr> <mtr><mtd /> <mtd><mo>=</mo></mtd> <mtd><mo stretchy=\"false\">|</mo><mi>a</mi><msup><mo stretchy=\"false\">|</mo> <mn>2</mn></msup><mo stretchy=\"false\">|</mo><mi>b</mi><msup><mo stretchy=\"false\">|</mo> <mn>2</mn></msup><mo>+</mo><mo stretchy=\"false\">|</mo><mi>a</mi><msup><mo stretchy=\"false\">|</mo> <mn>2</mn></msup><mo stretchy=\"false\">‖</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><msup><mo stretchy=\"false\">‖</mo> <mn>2</mn></msup><mo>+</mo><mo stretchy=\"false\">|</mo><mi>b</mi><msup><mo stretchy=\"false\">|</mo> <mn>2</mn></msup><mo stretchy=\"false\">‖</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><msup><mo stretchy=\"false\">‖</mo> <mn>2</mn></msup><mo>+</mo><mo stretchy=\"false\">‖</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><msup><mo stretchy=\"false\">‖</mo> <mn>2</mn></msup><mo stretchy=\"false\">‖</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><msup><mo stretchy=\"false\">‖</mo> <mn>2</mn></msup></mtd></mtr></mtable></mrow><annotation encoding=\"application/x-tex\"> \\begin{array}{ccl}\r\n \\|a + \\vec{a} \\|^2 \\| b + \\vec{b}\\|^2 &amp;=&amp; (|a|^2 + \\|\\vec{a}\\|^2)  (|b|^2 + \\|\\vec{b}\\|^2) \\\\ \\\\\r\n&amp;=&amp; |a|^2 |b|^2 + |a|^2 \\|\\vec{b}\\|^2 + |b|^2 \\|\\vec{a}\\|^2 + \\|\\vec{a}\\|^2 \\|\\vec{b}\\|^2 \r\n\\end{array} </annotation></semantics></math></p>\r\n\r\n<p>And if you look, you’ll see 3 terms match, so it’s enough to show</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo stretchy=\"false\">|</mo><mo stretchy=\"false\">⟨</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo>,</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">⟩</mo><msup><mo stretchy=\"false\">|</mo> <mn>2</mn></msup><mo>+</mo><mo stretchy=\"false\">‖</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mover><mo>×</mo><mo>¯</mo></mover><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><msup><mo stretchy=\"false\">‖</mo> <mn>2</mn></msup><mo>=</mo><mo stretchy=\"false\">‖</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><msup><mo stretchy=\"false\">‖</mo> <mn>2</mn></msup><mo stretchy=\"false\">‖</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><msup><mo stretchy=\"false\">‖</mo> <mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\"> |\\langle \\vec{a}, \\vec{b}\\rangle|^2 +  \\|\\vec{a} \\overline{\\times} \\vec{b}\\|^2 =  \\|\\vec{a}\\|^2 \\|\\vec{b}\\|^2 </annotation></semantics></math></p>\r\n\r\n<p>This would be a familiar vector identity if we were working in <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msup><mi>ℝ</mi> <mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{R}^3</annotation></semantics></math> with the usual cross product instead of the mutant one.   But notice, the mutant cross product is obtained from the ordinary one by componentwise complex conjugation, so </p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo stretchy=\"false\">‖</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mover><mo>×</mo><mo>¯</mo></mover><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><msup><mo stretchy=\"false\">‖</mo> <mn>2</mn></msup><mo>=</mo><mo stretchy=\"false\">‖</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo>×</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><msup><mo stretchy=\"false\">‖</mo> <mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">   \\|\\vec{a} \\overline{\\times} \\vec{b}\\|^2 =  \\|\\vec{a} \\times \\vec{b}\\|^2 </annotation></semantics></math></p>\r\n\r\n<p>Thus, we just need to show</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo stretchy=\"false\">|</mo><mo stretchy=\"false\">⟨</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo>,</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">⟩</mo><msup><mo stretchy=\"false\">|</mo> <mn>2</mn></msup><mo>+</mo><mo stretchy=\"false\">‖</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo>×</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><msup><mo stretchy=\"false\">‖</mo> <mn>2</mn></msup><mo>=</mo><mo stretchy=\"false\">‖</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><msup><mo stretchy=\"false\">‖</mo> <mn>2</mn></msup><mo stretchy=\"false\">‖</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><msup><mo stretchy=\"false\">‖</mo> <mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\"> |\\langle \\vec{a}, \\vec{b}\\rangle|^2 +  \\|\\vec{a} \\times \\vec{b}\\|^2 =  \\|\\vec{a}\\|^2 \\|\\vec{b}\\|^2 </annotation></semantics></math></p>\r\n\r\n<p>This works for <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msup><mi>ℂ</mi> <mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}^3</annotation></semantics></math> and its inner product exactly as it does for <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msup><mi>ℝ</mi> <mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{R}^3</annotation></semantics></math> and its dot product: you can either write out both sides using components and see they agree, or do a geometrical argument using the law of cosines and the law of sines.      █</p>\r\n\r\n<p>Note: after developing the above approach to the octonions, I found it here:</p>\r\n\r\n<ul>\r\n<li>Ichiro Yokota, <a href=\"https://arxiv.org/abs/0902.0431\">Exceptional Lie groups</a>, Section 1.5.</li>\r\n</ul>\r\n\r\n<p>My approach is more ‘geometrical’, less computational, but it amounts to the same thing.</p>\r\n\r\n      </div>\r\n    ","descriptionType":"xhtml","publishedDate":"Fri, 17 Jul 2020 01:34:05 +0000","feedId":8914,"bgimg":"https://golem.ph.utexas.edu/~distler/blog/images/MathML.png","linkMd5":"727a5d74f9f31719415d8a3f9490963e","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn27@2020_2/2020/08/25/00-09-56-839_3e27bbc676e8d5d2.webp","destWidth":65,"destHeight":36,"sourceBytes":3238,"destBytes":1426,"author":"john","articleImgCdnMap":{"https://golem.ph.utexas.edu/~distler/blog/images/MathML.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn27@2020_2/2020/08/25/00-09-56-839_3e27bbc676e8d5d2.webp"},"publishedOrCreatedDate":1598314179563},{"createdTime":"2020-08-25 08:09:39","updatedTime":"2020-08-25 08:09:39","title":"Open Systems: A Double Categorical Perspective (Part 1)","link":"https://golem.ph.utexas.edu/category/2020/08/open_systems_a_double_categori.html","description":"\r\n      <div xmlns=\"http://www.w3.org/1999/xhtml\">\r\n<div><a href=\"http://golem.ph.utexas.edu/~distler/blog/mathml.html\"><img class=\"mathlogo\" src=\"https://golem.ph.utexas.edu/~distler/blog/images/MathML.png\" alt=\"MathML-enabled post (click for more details).\" title=\"MathML-enabled post (click for details).\" /></a></div>\r\n\r\n<p><a href=\"https://www.coursicle.com/ucr/professors/Kenny+Courser/\">Kenny Courser</a>’s thesis has hit the arXiv:</p>\r\n\r\n<ul>\r\n<li>Kenny Courser, <em><a href=\"https://arxiv.org/abs/2008.02394\">Open Systems: A Double Categorical Perspective</a></em>, Ph.D. thesis, U. C. Riverside, 2020.</li>\r\n</ul>\r\n\r\n<p>He’s been the driving force behind a lot of work on open systems and networks at U. C. Riverside.  By the way, he’s looking for a job, so if you think you know a position that’s good for someone who can teach all kinds of math and also strong on applied category theory, give him or me a shout.</p>\r\n\r\n<p>But let me describe his thesis.</p>\r\n\r\n<div><a href=\"http://golem.ph.utexas.edu/~distler/blog/mathml.html\"><img class=\"mathlogo\" src=\"https://golem.ph.utexas.edu/~distler/blog/images/MathML.png\" alt=\"MathML-enabled post (click for more details).\" title=\"MathML-enabled post (click for details).\" /></a></div>\r\n\r\n<p>His thesis is <em>big!</em>  It lays out a general approach to open systems—systems that can interact with their environment.  In this approach, you can attach open systems in series to form larger open systems, so they act like morphisms in a category:</p>\r\n\r\n<p><img src=\"http://math.ucr.edu/home/baez/networks/coarse/composing_open_markov_processes.png\" width=\"400\" alt=\"\" /></p>\r\n\r\n<p>But you can also study 2-morphisms <em>between</em> open systems.  These describe ways to include a little system in a bigger one, or simplify a big complicated system down to smaller one:</p>\r\n\r\n<p><img src=\"http://math.ucr.edu/home/baez/networks/coarse/coarse-graining_open_markov_processes.png\" width=\"380\" alt=\"\" /></p>\r\n\r\n<p>To handle all this, Courser uses double categories, which he explains.</p>\r\n\r\n<p>His formalism also lets you set two open systems side by side ‘in parallel’ and get a new open system:</p>\r\n\r\n<p><img src=\"http://math.ucr.edu/home/baez/networks/coarse/tensoring_open_markov_processes.png\" width=\"440\" alt=\"\" /></p>\r\n\r\n<p>To handle this, he uses symmetric monoidal double categories.  He explains what these are, and how to get them.  And he illustrates his setup with examples:</p>\r\n\r\n<ul>\r\n<li><a href=\"https://johncarlosbaez.wordpress.com/2018/08/15/open-petri-nets-part-1/\">open Petri nets</a></li>\r\n<li><a href=\"https://johncarlosbaez.wordpress.com/2015/04/28/a-compositional-framework-for-passive-linear-networks/\">open electrical circuits</a></li>\r\n<li><a href=\"https://johncarlosbaez.wordpress.com/2017/07/30/a-compositional-framework-for-reaction-networks/\">open chemical reaction networks</a></li>\r\n<li><a href=\"https://johncarlosbaez.wordpress.com/2020/07/04/open-markov-processes/\">open Markov processes</a></li>\r\n</ul>\r\n\r\n<p>At a more technical level, Courser explains the problems with Brendan Fong’s and my work on <a href=\"https://arxiv.org/abs/1502.00872\">decorated cospans</a> and shows how to fix in not just one but two ways: using <a href=\"https://johncarlosbaez.wordpress.com/2019/07/01/structured-cospans/\">structured cospans</a>, and using a new improved version of decorated cospans.   He also shows that these two approaches are equivalent under fairly general conditions.</p>\r\n\r\n<p>His thesis unifies a number of papers:</p>\r\n\r\n<ul>\r\n<li><p>Kenny Courser, <a href=\"https://arxiv.org/abs/1605.08100\">A bicategory of decorated cospans</a>, <i>Theory and Applications of Categories</i> <b>32</b> (2017), 995–1027.</p></li>\r\n<li><p>John Baez and Kenny Courser, <a href=\"https://arxiv.org/abs/1710.11343\">Coarse-graining open Markov processes</a>, <i>Theory and Applications of Categories</i> <b>33</b> (2018), 1223–1268.  (Blog article <a href=\"https://johncarlosbaez.wordpress.com/2018/03/04/coarse-graining-open-markov-processes/\">here</a>.)</p></li>\r\n<li><p>John Baez and Kenny Courser, <a href=\"https://arxiv.org/abs/1911.04630\">Structured cospans</a>.  (Blog article <a href=\"https://johncarlosbaez.wordpress.com/2019/07/01/structured-cospans/\">here</a>.)</p></li>\r\n<li><p>John Baez, Kenny Courser and Christina Vasilakopoulou, Structured versus decorated cospans.</p></li>\r\n</ul>\r\n\r\n<p>The last, still being written, introduces the new improved decorated cospans and proves their equivalence to structured cospans under some conditions.  For now you’ll have to read Kenny’s thesis to see how this works!</p>\r\n\r\n<p>I think next time I’ll explain the problems with the original decorated cospan formalism. Another nice thing about Kenny’s thesis is that it goes over a bunch of papers that were afflicted by these problems, and it shows how to fix them.</p>\r\n\r\n      </div>\r\n    ","descriptionType":"xhtml","publishedDate":"Sat, 15 Aug 2020 01:51:45 +0000","feedId":8914,"bgimg":"https://golem.ph.utexas.edu/~distler/blog/images/MathML.png","linkMd5":"d344606c7abc090e0d478d90d714108b","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn27@2020_2/2020/08/25/00-09-56-839_3e27bbc676e8d5d2.webp","destWidth":65,"destHeight":36,"sourceBytes":3238,"destBytes":1426,"author":"john","articleImgCdnMap":{"https://golem.ph.utexas.edu/~distler/blog/images/MathML.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn27@2020_2/2020/08/25/00-09-56-839_3e27bbc676e8d5d2.webp","http://math.ucr.edu/home/baez/networks/coarse/composing_open_markov_processes.png":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn88@2020_3/2020/08/25/00-09-58-667_21c178bb9362456f.webp","http://math.ucr.edu/home/baez/networks/coarse/coarse-graining_open_markov_processes.png":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn96@2020_2/2020/08/25/00-09-58-130_05558a3dc32024fc.webp","http://math.ucr.edu/home/baez/networks/coarse/tensoring_open_markov_processes.png":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn71@2020_5/2020/08/25/00-09-58-717_071216491079d762.webp"},"publishedOrCreatedDate":1598314179346},{"createdTime":"2020-08-25 08:09:39","updatedTime":"2020-08-25 08:09:39","title":"Diary 2003--2020","link":"https://golem.ph.utexas.edu/category/2020/08/diary_20032020.html","description":"\r\n      <div xmlns=\"http://www.w3.org/1999/xhtml\">\r\n<div><a href=\"http://golem.ph.utexas.edu/~distler/blog/mathml.html\"><img class=\"mathlogo\" src=\"https://golem.ph.utexas.edu/~distler/blog/images/MathML.png\" alt=\"MathML-enabled post (click for more details).\" title=\"MathML-enabled post (click for details).\" /></a></div>\r\n\r\n<p>I keep putting off organizing my written material, but with coronavirus I’m feeling more mortal than usual, so I’d like get this out into the world now:</p>\r\n\r\n<ul>\r\n<li>John Baez, <a href=\"http://math.ucr.edu/home/baez/diary/diary_pdfs/baez_diary_2003-2020.pdf\">Diary, 2003–2020</a>.  </li>\r\n</ul>\r\n\r\n<p>Go ahead and grab a copy!</p>\r\n\r\n<p>It’s got all my best tweets and Google+ posts, mainly explaining math and physics, but also my travel notes and other things… starting in 2003 with my ruminations on economics and ecology.   It’s too big to read all at once, but I think you can dip into it more or less anywhere and pull out something fun.   </p>\r\n\r\n<p>It goes up to July 2020.   It’s 2184 pages long.   I fixed a few problems like missing pictures, but there are probably more.  If you let me know about them, I’ll fix them (if it’s easy).</p>\r\n\r\n\r\n      </div>\r\n    ","descriptionType":"xhtml","publishedDate":"Sun, 09 Aug 2020 01:30:12 +0000","feedId":8914,"bgimg":"https://golem.ph.utexas.edu/~distler/blog/images/MathML.png","linkMd5":"5c061b9729ceb2e7e2a64fcbf335400d","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn27@2020_2/2020/08/25/00-09-56-839_3e27bbc676e8d5d2.webp","destWidth":65,"destHeight":36,"sourceBytes":3238,"destBytes":1426,"author":"john","articleImgCdnMap":{"https://golem.ph.utexas.edu/~distler/blog/images/MathML.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn27@2020_2/2020/08/25/00-09-56-839_3e27bbc676e8d5d2.webp"},"publishedOrCreatedDate":1598314179396},{"createdTime":"2020-08-25 08:09:39","updatedTime":"2020-08-25 08:09:39","title":"Open Systems in Classical Mechanics","link":"https://golem.ph.utexas.edu/category/2020/08/open_systems_in_classical_mech.html","description":"\r\n      <div xmlns=\"http://www.w3.org/1999/xhtml\">\r\n<div><a href=\"http://golem.ph.utexas.edu/~distler/blog/mathml.html\"><img class=\"mathlogo\" src=\"https://golem.ph.utexas.edu/~distler/blog/images/MathML.png\" alt=\"MathML-enabled post (click for more details).\" title=\"MathML-enabled post (click for details).\" /></a></div>\r\n\r\n<p>I think we need a ‘compositional’ approach to classical mechanics.  A classical system is typically built from parts, and we describe the whole system by describing its parts and then saying how they are put together.  But this aspect of classical mechanics is typically left informal.  You learn how it works in a physics class by doing lots of homework problems, but the rules are never completely spelled out, which is one reason physics is hard. </p>\r\n\r\n<p>I want an approach that makes the compositionality of classical mechanics formal: a category (or categories) where the morphisms are <em>open</em> classical systems—that is, classical systems with the ability to interact with the outside world—and composing these morphisms describes putting together open systems to form larger open systems.   </p>\r\n\r\n<div><a href=\"http://golem.ph.utexas.edu/~distler/blog/mathml.html\"><img class=\"mathlogo\" src=\"https://golem.ph.utexas.edu/~distler/blog/images/MathML.png\" alt=\"MathML-enabled post (click for more details).\" title=\"MathML-enabled post (click for details).\" /></a></div>\r\n\r\n<p>There are actually two main approaches to classical mechanics: the <a href=\"https://en.wikipedia.org/wiki/Lagrangian_mechanics\">Lagrangian approach</a>, which describes the state of a system in terms of position and velocity, and the <a href=\"https://en.wikipedia.org/wiki/Hamiltonian_mechanics\">Hamiltonian approach</a>, which describes the state of a system in terms of position and momentum.  There’s a way to go from the first approach to the second, called the <a href=\"https://en.wikipedia.org/wiki/Legendre_transformation#Analytical_mechanics\">Legendre transformation</a>.   So we should have a least two categories, one for Lagrangian open systems and one for Hamiltonian open systems, and a functor from the first to the second.</p>\r\n\r\n<p>That’s what this paper provides:</p>\r\n\r\n<ul>\r\n<li>John C. Baez, David Weisbart and Adam Yassine, <a href=\"https://arxiv.org/abs/1710.11392\">Open systems in classical mechanics</a>.</li>\r\n</ul>\r\n\r\n<p>The basic idea is not new—but there are some twists!  I like treating open systems as <a href=\"https://johncarlosbaez.wordpress.com/2019/07/01/structured-cospans/\">cospans with extra structure</a>.  But in this case it makes more sense to use <em>spans</em>, since the space of states of a classical system maps <em>to</em> the space of states of any subsystem.   We’ll compose these spans using pullbacks.  </p>\r\n\r\n<p>For example, suppose you have a spring with rocks at both ends:</p>\r\n\r\n<p><img src=\"https://johncarlosbaez.files.wordpress.com/2020/08/spring.png\" alt=\"spring\" width=\"170\" /></p>\r\n\r\n<p>If it’s in 1-dimensional space, and we only care about the position and momentum of the two rocks (not vibrations of the spring), we can say the phase space of this system is the <a href=\"https://en.wikipedia.org/wiki/Cotangent_bundle\">cotangent bundle</a> <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msup><mi>T</mi> <mo>*</mo></msup><msup><mi>ℝ</mi> <mn>2</mn></msup><mo>.</mo></mrow><annotation encoding=\"application/x-tex\">T^\\ast \\mathbb{R}^2.</annotation></semantics></math>  </p>\r\n\r\n<p>But this system has some interesting subsystems: the rocks at the ends!  So we get a span.  We could draw it like this:</p>\r\n\r\n<p><img src=\"https://johncarlosbaez.files.wordpress.com/2020/08/span.png\" alt=\"span.jpg\" width=\"200\" /></p>\r\n\r\n<p>but what I really mean is that we have a span of phase spaces:</p>\r\n\r\n<p><img src=\"https://johncarlosbaez.files.wordpress.com/2020/08/span_2.png\" alt=\"span_2.jpg\" width=\"200\" /></p>\r\n\r\n<p>Here the left-hand arrow maps the state of the whole system to the state of the left-hand rock, and the right-hand arrow maps the state of the whole system to the state of the right-hand rock.   These maps are smooth maps between manifolds, but they’re better than that!  They are <a href=\"https://en.wikipedia.org/wiki/Poisson_manifold#Poisson_maps\">Poisson maps</a> between <a href=\"https://en.wikipedia.org/wiki/Symplectic_manifold\">symplectic manifolds</a>: that’s where the physics comes in.  They’re also surjective.</p>\r\n\r\n<p>Now suppose we have two such open systems.   We can compose them, or ‘glue them together’, by identifying the right-hand rock of one with the left-hand rock of the other.  We can draw this as follows:</p>\r\n\r\n<p><img src=\"https://johncarlosbaez.files.wordpress.com/2020/08/two_spans.png\" alt=\"two_spans.jpg\" width=\"350\" /></p>\r\n\r\n<p>Now we have a big three-rock system on top, whose states map to states of our original two-rock systems, and then down to states of the individual rocks.  This picture really stands for the following commutative diagram:</p>\r\n\r\n<p><img src=\"https://johncarlosbaez.files.wordpress.com/2020/08/two_spans_2.png\" alt=\"two_spans_2.jpg\" width=\"350\" /></p>\r\n\r\n<p>Here the phase space of the big three-rock system on top is obtained as a pullback: that’s how we formalize the process of gluing together two open systems!  We can then discard some information and get a span:</p>\r\n\r\n<p><img src=\"https://johncarlosbaez.files.wordpress.com/2020/08/composite_span.png\" alt=\"composite_span\" width=\"350\" /></p>\r\n\r\n<p>Bravo!  We’ve managed to build a more complicated open system by gluing together two simpler ones!  Or in mathematical terms: we’ve taken two spans of symplectic manifolds, where the maps involved in are surjective Poisson maps, and composed them to get another such span.    </p>\r\n\r\n<p>Since we can compose them, it shouldn’t be surprising that there’s a category whose morphisms are such spans — or more precisely, isomorphism classes of such spans.  But we can go further!  We can equip all the symplectic manifolds in this story with Hamiltonians, to describe dynamics.   And we get a category whose morphisms are open Hamiltonian systems, which we call <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"sans-serif\"><mi>HamSy</mi></mstyle><mo>.</mo></mrow><annotation encoding=\"application/x-tex\">\\mathsf{HamSy}.</annotation></semantics></math>  This is Theorem 4.2 of our paper.</p>\r\n\r\n<p>But be careful: to describe one of these open Hamiltonian systems, we need to choose a Hamiltonian not only on the symplectic manifold at the <i>apex</i> of the span, but also on the two symplectic manifolds at the <i>bottom</i> — its ‘feet’.   We need this to be able to compute the new Hamiltonian we get when we compose, or glue together, two open Hamiltonian systems.  If we just <i>added</i> Hamiltonians for two subsystems, we’d ‘double-count’ the energy when we glued them together.  </p>\r\n\r\n<p>This takes us further from the <a href=\"https://johncarlosbaez.wordpress.com/2015/05/01/decorated-cospans/\">decorated cospan</a> or <a href=\"https://johncarlosbaez.wordpress.com/2019/07/01/structured-cospans/\">structured cospan</a> frameworks I’ve been talking about repeatedly on this blog.  Using spans instead of cospans is not a big deal: a span in some category is just a cospan in the opposite category.  What’s a bigger deal is that we’re decorating not just the apex of our spans with extra data, but its feet — and when we compose our spans, we need this data on the feet to compute the data for the apex of the new composite span.  </p>\r\n\r\n<p>Furthermore, doing pullbacks is subtler in categories of manifolds than in the categories I’d been using for decorated or structured cospans.   To handle this nicely, my coauthors wrote a whole separate paper!</p>\r\n\r\n<ul>\r\n<li>David Weisbart and Adam Yassine, <a href=\"https://arxiv.org/abs/2007.07752\">Constructing span categories from categories without pullbacks</a>.</li>\r\n</ul>\r\n\r\n<p>Anyway, in our present paper we get not only a category <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"sans-serif\"><mi>HamSy</mi></mstyle></mrow><annotation encoding=\"application/x-tex\">\\mathsf{HamSy}</annotation></semantics></math> of open Hamiltonian systems, but also a category <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mstyle mathvariant=\"sans-serif\"><mi>LagSy</mi></mstyle></mrow><annotation encoding=\"application/x-tex\">\\mathsf{LagSy}</annotation></semantics></math> of open Lagrangian systems.  So we can do both Hamiltonian and Lagrangian mechanics with open systems.  </p>\r\n\r\n<p>Moreover, they’re compatible!   In classical mechanics we use the Legendre transformation to turn Lagrangian systems into their Hamiltonian counterparts.  Now this becomes a functor:</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>ℒ</mi><mo lspace=\"0.11111em\">:</mo><mstyle mathvariant=\"sans-serif\"><mi>LagSy</mi></mstyle><mo>→</mo><mstyle mathvariant=\"sans-serif\"><mi>HamSy</mi></mstyle></mrow><annotation encoding=\"application/x-tex\"> \\mathcal{L} \\colon \\mathsf{LagSy} \\to \\mathsf{HamSy} </annotation></semantics></math></p>\r\n\r\n<p>That’s Theorem 5.5.  </p>\r\n\r\n<p>So, classical mechanics is becoming ‘compositional’.  We can convert the Lagrangian descriptions of a bunch of little open systems into their Hamiltonian descriptions and then glue the results together, and we get the same answer as if we did that conversion on the whole big system.  Thus, we’re starting to formalize the way physicists think about physical systems ‘one piece at a time’. </p>\r\n\r\n      </div>\r\n    ","descriptionType":"xhtml","publishedDate":"Wed, 05 Aug 2020 02:22:20 +0000","feedId":8914,"bgimg":"https://golem.ph.utexas.edu/~distler/blog/images/MathML.png","linkMd5":"d8c3b728a264aa57d332425d688c9855","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn27@2020_2/2020/08/25/00-09-56-839_3e27bbc676e8d5d2.webp","destWidth":65,"destHeight":36,"sourceBytes":3238,"destBytes":1426,"author":"john","articleImgCdnMap":{"https://golem.ph.utexas.edu/~distler/blog/images/MathML.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn27@2020_2/2020/08/25/00-09-56-839_3e27bbc676e8d5d2.webp","https://johncarlosbaez.files.wordpress.com/2020/08/spring.png":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn47@2020_3/2020/08/25/00-09-58-044_e671e2e6696ffaac.webp","https://johncarlosbaez.files.wordpress.com/2020/08/span.png":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn55@2020_6/2020/08/25/00-09-57-864_cdbf344309f93631.webp","https://johncarlosbaez.files.wordpress.com/2020/08/span_2.png":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn78@2020_3/2020/08/25/00-09-57-988_a68796a2e041c3fa.webp","https://johncarlosbaez.files.wordpress.com/2020/08/two_spans.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn31@2020_5/2020/08/25/00-09-57-904_1076c9ef59773266.webp","https://johncarlosbaez.files.wordpress.com/2020/08/two_spans_2.png":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn67@2020_6/2020/08/25/00-09-58-052_0a798a4df04cb5ac.webp","https://johncarlosbaez.files.wordpress.com/2020/08/composite_span.png":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn4@2020_3/2020/08/25/00-09-57-941_c00276993e00e104.webp"},"publishedOrCreatedDate":1598314179400},{"createdTime":"2020-08-25 08:09:39","updatedTime":"2020-08-25 08:09:39","title":"Self-Referential Algebraic Structures","link":"https://golem.ph.utexas.edu/category/2020/07/selfreferential_algebraic_stru.html","description":"<div xmlns=\"http://www.w3.org/1999/xhtml\"> \n <div>\n  <a href=\"http://golem.ph.utexas.edu/~distler/blog/mathml.html\"><img class=\"mathlogo\" src=\"https://golem.ph.utexas.edu/~distler/blog/images/MathML.png\" alt=\"MathML-enabled post (click for more details).\" title=\"MathML-enabled post (click for details).\" /></a>\n </div> \n <p>Any group acts as automorphisms of itself, by conjugation. If we differentiate this idea, we get that any Lie algebra acts as derivations of itself. We can then enhance this in various ways: for example a Poisson algebra is both a Lie algebra and a commutative algebra, such that any element acts as derivations of both these structures.</p> \n <p>Why do I care?</p> \n <p>In my paper on <a href=\"https://golem.ph.utexas.edu/category/2020/06/getting_to_the_bottom_of_noeth.html\">Noether’s theorem</a> I got excited by how physics uses structures where each element acts to generate a one-parameter group of automorphisms of that structure. I proved a super-general version of Noether’s theorem based on this idea. It’s <a href=\"http://math.ucr.edu/home/baez/noether_theorem.pdf#page=19\">Theorem 8</a>, in case you’re curious.</p> \n <p>But the purest expression of the idea of a “structure where each element acts as an automorphism of that structure” is the concept of “<a href=\"https://golem.ph.utexas.edu/category/2020/07/(https://en.wikipedia.org/wiki/Racks_and_quandles\">rack</a>”. </p> \n <div>\n  <a href=\"http://golem.ph.utexas.edu/~distler/blog/mathml.html\"><img class=\"mathlogo\" src=\"https://golem.ph.utexas.edu/~distler/blog/images/MathML.png\" alt=\"MathML-enabled post (click for more details).\" title=\"MathML-enabled post (click for details).\" /></a>\n </div> \n <p>Even simpler than a rack is a “shelf”.</p> \n <p><a href=\"https://arxiv.org/abs/math/0409602\">Alissa Crans</a> defined a <strong>shelf</strong> to be a set \n  <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\">\n   <semantics>\n    <mrow>\n     <mi>\n      S\n     </mi>\n    </mrow>\n    <annotation encoding=\"application/x-tex\">\n     S\n    </annotation>\n   </semantics>\n  </math> equipped with a binary operation \n  <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\">\n   <semantics>\n    <mrow>\n     <mo>\n      ▹\n     </mo>\n     <mo lspace=\"0.11111em\">\n      :\n     </mo>\n     <mi>\n      S\n     </mi>\n     <mo>\n      ×\n     </mo>\n     <mi>\n      S\n     </mi>\n     <mo>\n      →\n     </mo>\n     <mi>\n      S\n     </mi>\n    </mrow>\n    <annotation encoding=\"application/x-tex\">\n     \\triangleright \\colon S \\times S \\to S\n    </annotation>\n   </semantics>\n  </math> such that each element \n  <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\">\n   <semantics>\n    <mrow>\n     <mi>\n      a\n     </mi>\n     <mo>\n      ∈\n     </mo>\n     <mi>\n      S\n     </mi>\n    </mrow>\n    <annotation encoding=\"application/x-tex\">\n     a \\in S\n    </annotation>\n   </semantics>\n  </math> gives a map \n  <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\">\n   <semantics>\n    <mrow>\n     <mi>\n      a\n     </mi>\n     <mo>\n      ▹\n     </mo>\n     <mo lspace=\"0.11111em\" rspace=\"0em\">\n      −\n     </mo>\n     <mo lspace=\"0.11111em\">\n      :\n     </mo>\n     <mi>\n      S\n     </mi>\n     <mo>\n      →\n     </mo>\n     <mi>\n      S\n     </mi>\n    </mrow>\n    <annotation encoding=\"application/x-tex\">\n     a \\triangleright - \\colon S \\to S\n    </annotation>\n   </semantics>\n  </math> that is a shelf endomorphism. </p> \n <p>If you don’t like the circularity of this definition (which is the whole point), what I’m saying is that a shelf is a set \n  <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\">\n   <semantics>\n    <mrow>\n     <mi>\n      S\n     </mi>\n    </mrow>\n    <annotation encoding=\"application/x-tex\">\n     S\n    </annotation>\n   </semantics>\n  </math> equipped with a binary operation \n  <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\">\n   <semantics>\n    <mrow>\n     <mo>\n      ▹\n     </mo>\n     <mo lspace=\"0.11111em\">\n      :\n     </mo>\n     <mi>\n      S\n     </mi>\n     <mo>\n      ×\n     </mo>\n     <mi>\n      S\n     </mi>\n     <mo>\n      →\n     </mo>\n     <mi>\n      S\n     </mi>\n    </mrow>\n    <annotation encoding=\"application/x-tex\">\n     \\triangleright \\colon S \\times S \\to S\n    </annotation>\n   </semantics>\n  </math> such that</p> \n <p>\n  <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\">\n   <semantics>\n    <mrow>\n     <mi>\n      a\n     </mi>\n     <mo>\n      ▹\n     </mo>\n     <mo stretchy=\"false\">\n      (\n     </mo>\n     <mi>\n      b\n     </mi>\n     <mo>\n      ▹\n     </mo>\n     <mi>\n      c\n     </mi>\n     <mo stretchy=\"false\">\n      )\n     </mo>\n     <mo>\n      =\n     </mo>\n     <mo stretchy=\"false\">\n      (\n     </mo>\n     <mi>\n      a\n     </mi>\n     <mo>\n      ▹\n     </mo>\n     <mi>\n      b\n     </mi>\n     <mo stretchy=\"false\">\n      )\n     </mo>\n     <mo>\n      ▹\n     </mo>\n     <mo stretchy=\"false\">\n      (\n     </mo>\n     <mi>\n      a\n     </mi>\n     <mo>\n      ▹\n     </mo>\n     <mi>\n      c\n     </mi>\n     <mo stretchy=\"false\">\n      )\n     </mo>\n    </mrow>\n    <annotation encoding=\"application/x-tex\">\n      a \\triangleright (b \\triangleright c) = (a \\triangleright b) \\triangleright (a \\triangleright c) \n    </annotation>\n   </semantics>\n  </math></p> \n <p>This is called the <strong>self-distributive law</strong>, since it says the operation \n  <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\">\n   <semantics>\n    <mrow>\n     <mo>\n      ▹\n     </mo>\n    </mrow>\n    <annotation encoding=\"application/x-tex\">\n     \\triangleright\n    </annotation>\n   </semantics>\n  </math> distributes over itshelf. (Sorry: “itself”.)</p> \n <p>Actually this is a <strong>left shelf</strong>; there is also a thing called a “right shelf”. Any group is both a left shelf and a right shelf in a natural way, via conjugation.</p> \n <p>We can similarly define a <strong><a href=\"https://en.wikipedia.org/wiki/Racks_and_quandles#Racks\">rack</a></strong> to be a set \n  <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\">\n   <semantics>\n    <mrow>\n     <mi>\n      S\n     </mi>\n    </mrow>\n    <annotation encoding=\"application/x-tex\">\n     S\n    </annotation>\n   </semantics>\n  </math> equipped with a binary operation \n  <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\">\n   <semantics>\n    <mrow>\n     <mo>\n      ▹\n     </mo>\n     <mo lspace=\"0.11111em\">\n      :\n     </mo>\n     <mi>\n      S\n     </mi>\n     <mo>\n      ×\n     </mo>\n     <mi>\n      S\n     </mi>\n     <mo>\n      →\n     </mo>\n     <mi>\n      S\n     </mi>\n    </mrow>\n    <annotation encoding=\"application/x-tex\">\n     \\triangleright \\colon S \\times S \\to S\n    </annotation>\n   </semantics>\n  </math> such that each element \n  <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\">\n   <semantics>\n    <mrow>\n     <mi>\n      a\n     </mi>\n     <mo>\n      ∈\n     </mo>\n     <mi>\n      S\n     </mi>\n    </mrow>\n    <annotation encoding=\"application/x-tex\">\n     a \\in S\n    </annotation>\n   </semantics>\n  </math> gives a map \n  <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\">\n   <semantics>\n    <mrow>\n     <mi>\n      a\n     </mi>\n     <mo>\n      ▹\n     </mo>\n     <mo lspace=\"0.11111em\" rspace=\"0em\">\n      −\n     </mo>\n     <mo lspace=\"0.11111em\">\n      :\n     </mo>\n     <mi>\n      S\n     </mi>\n     <mo>\n      →\n     </mo>\n     <mi>\n      S\n     </mi>\n    </mrow>\n    <annotation encoding=\"application/x-tex\">\n     a \\triangleright - \\colon S \\to S\n    </annotation>\n   </semantics>\n  </math> that is a rack <em>automorphism</em>.</p> \n <p>In other words, a rack is a shelf \n  <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\">\n   <semantics>\n    <mrow>\n     <mi>\n      S\n     </mi>\n    </mrow>\n    <annotation encoding=\"application/x-tex\">\n     S\n    </annotation>\n   </semantics>\n  </math> where each map \n  <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\">\n   <semantics>\n    <mrow>\n     <mi>\n      a\n     </mi>\n     <mo>\n      ▹\n     </mo>\n     <mo lspace=\"0.11111em\" rspace=\"0em\">\n      −\n     </mo>\n     <mo lspace=\"0.11111em\">\n      :\n     </mo>\n     <mi>\n      S\n     </mi>\n     <mo>\n      →\n     </mo>\n     <mi>\n      S\n     </mi>\n    </mrow>\n    <annotation encoding=\"application/x-tex\">\n     a \\triangleright - \\colon S \\to S\n    </annotation>\n   </semantics>\n  </math> is invertible.</p> \n <p>It’s common to write the inverse of the map \n  <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\">\n   <semantics>\n    <mrow>\n     <mi>\n      a\n     </mi>\n     <mo>\n      ▹\n     </mo>\n     <mo lspace=\"0.11111em\" rspace=\"0em\">\n      −\n     </mo>\n    </mrow>\n    <annotation encoding=\"application/x-tex\">\n     a \\triangleright - \n    </annotation>\n   </semantics>\n  </math> as \n  <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\">\n   <semantics>\n    <mrow>\n     <mo lspace=\"0.11111em\" rspace=\"0em\">\n      −\n     </mo>\n     <mo>\n      ◃\n     </mo>\n     <mi>\n      a\n     </mi>\n    </mrow>\n    <annotation encoding=\"application/x-tex\">\n     - \\triangleleft a\n    </annotation>\n   </semantics>\n  </math>. Then we can give a completely equational definition of a rack! It’s a set \n  <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\">\n   <semantics>\n    <mrow>\n     <mi>\n      S\n     </mi>\n    </mrow>\n    <annotation encoding=\"application/x-tex\">\n     S\n    </annotation>\n   </semantics>\n  </math> with two binary operations \n  <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\">\n   <semantics>\n    <mrow>\n     <mo>\n      ▹\n     </mo>\n     <mo>\n      ,\n     </mo>\n     <mo>\n      ◃\n     </mo>\n     <mo lspace=\"0.11111em\">\n      :\n     </mo>\n     <mi>\n      S\n     </mi>\n     <mo>\n      ×\n     </mo>\n     <mi>\n      S\n     </mi>\n     <mo>\n      →\n     </mo>\n     <mi>\n      S\n     </mi>\n    </mrow>\n    <annotation encoding=\"application/x-tex\">\n     \\triangleright, \\triangleleft \\colon S \\times S \\to S\n    </annotation>\n   </semantics>\n  </math> obeying these identities:</p> \n <p>\n  <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\">\n   <semantics>\n    <mrow>\n     <mo stretchy=\"false\">\n      (\n     </mo>\n     <mi>\n      c\n     </mi>\n     <mo>\n      ▹\n     </mo>\n     <mi>\n      b\n     </mi>\n     <mo stretchy=\"false\">\n      )\n     </mo>\n     <mo>\n      ▹\n     </mo>\n     <mi>\n      a\n     </mi>\n     <mo>\n      =\n     </mo>\n     <mo stretchy=\"false\">\n      (\n     </mo>\n     <mi>\n      c\n     </mi>\n     <mo>\n      ▹\n     </mo>\n     <mi>\n      a\n     </mi>\n     <mo stretchy=\"false\">\n      )\n     </mo>\n     <mo>\n      ▹\n     </mo>\n     <mo stretchy=\"false\">\n      (\n     </mo>\n     <mi>\n      b\n     </mi>\n     <mo>\n      ▹\n     </mo>\n     <mi>\n      a\n     </mi>\n     <mo stretchy=\"false\">\n      )\n     </mo>\n     <mo>\n      ,\n     </mo>\n     <mspace width=\"2em\" />\n     <mi>\n      a\n     </mi>\n     <mo>\n      ◃\n     </mo>\n     <mo stretchy=\"false\">\n      (\n     </mo>\n     <mi>\n      b\n     </mi>\n     <mo>\n      ◃\n     </mo>\n     <mi>\n      c\n     </mi>\n     <mo stretchy=\"false\">\n      )\n     </mo>\n     <mo>\n      =\n     </mo>\n     <mo stretchy=\"false\">\n      (\n     </mo>\n     <mi>\n      a\n     </mi>\n     <mo>\n      ◃\n     </mo>\n     <mi>\n      b\n     </mi>\n     <mo stretchy=\"false\">\n      )\n     </mo>\n     <mo>\n      ◃\n     </mo>\n     <mo stretchy=\"false\">\n      (\n     </mo>\n     <mi>\n      a\n     </mi>\n     <mo>\n      ◃\n     </mo>\n     <mi>\n      c\n     </mi>\n     <mo stretchy=\"false\">\n      )\n     </mo>\n    </mrow>\n    <annotation encoding=\"application/x-tex\">\n      (c \\triangleright b) \\triangleright a = (c \\triangleright a) \\triangleright (b \\triangleright a), \\qquad a \\triangleleft(b \\triangleleft c) = (a \\triangleleft b) \\triangleleft(a \\triangleleft c)\n    </annotation>\n   </semantics>\n  </math></p> \n <p>\n  <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\">\n   <semantics>\n    <mrow>\n     <mo stretchy=\"false\">\n      (\n     </mo>\n     <mi>\n      a\n     </mi>\n     <mo>\n      ◃\n     </mo>\n     <mi>\n      b\n     </mi>\n     <mo stretchy=\"false\">\n      )\n     </mo>\n     <mo>\n      ▹\n     </mo>\n     <mi>\n      a\n     </mi>\n     <mo>\n      =\n     </mo>\n     <mi>\n      b\n     </mi>\n     <mo>\n      ,\n     </mo>\n     <mspace width=\"2em\" />\n     <mi>\n      a\n     </mi>\n     <mo>\n      ◃\n     </mo>\n     <mo stretchy=\"false\">\n      (\n     </mo>\n     <mi>\n      b\n     </mi>\n     <mo>\n      ▹\n     </mo>\n     <mi>\n      a\n     </mi>\n     <mo stretchy=\"false\">\n      )\n     </mo>\n     <mo>\n      =\n     </mo>\n     <mi>\n      b\n     </mi>\n    </mrow>\n    <annotation encoding=\"application/x-tex\">\n      (a \\triangleleft b) \\triangleright a = b , \\qquad a \\triangleleft(b \\triangleright a) = b \n    </annotation>\n   </semantics>\n  </math> </p> \n <p>These axioms are slightly redundant, but nicely symmetrical.</p> \n <p>If we have a shelf that’s a smooth manifold, and the operation \n  <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\">\n   <semantics>\n    <mrow>\n     <mo>\n      ▹\n     </mo>\n    </mrow>\n    <annotation encoding=\"application/x-tex\">\n     \\triangleright\n    </annotation>\n   </semantics>\n  </math> is smooth, and an element \n  <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\">\n   <semantics>\n    <mrow>\n     <mi>\n      e\n     </mi>\n     <mo>\n      ∈\n     </mo>\n     <mi>\n      S\n     </mi>\n    </mrow>\n    <annotation encoding=\"application/x-tex\">\n     e \\in S\n    </annotation>\n   </semantics>\n  </math> obeying \n  <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\">\n   <semantics>\n    <mrow>\n     <mi>\n      e\n     </mi>\n     <mo>\n      ▹\n     </mo>\n     <mi>\n      a\n     </mi>\n     <mo>\n      =\n     </mo>\n     <mi>\n      a\n     </mi>\n    </mrow>\n    <annotation encoding=\"application/x-tex\">\n     e \\triangleright a = a\n    </annotation>\n   </semantics>\n  </math> for all \n  <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\">\n   <semantics>\n    <mrow>\n     <mi>\n      a\n     </mi>\n     <mo>\n      ∈\n     </mo>\n     <mi>\n      S\n     </mi>\n    </mrow>\n    <annotation encoding=\"application/x-tex\">\n     a \\in S\n    </annotation>\n   </semantics>\n  </math>, then I think we can differentiate the shelf operation at \n  <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\">\n   <semantics>\n    <mrow>\n     <mi>\n      e\n     </mi>\n    </mrow>\n    <annotation encoding=\"application/x-tex\">\n     e\n    </annotation>\n   </semantics>\n  </math> and get a “Leibniz algebra”. </p> \n <p>A <strong><a href=\"https://en.wikipedia.org/wiki/Leibniz_algebra\">Leibniz algebra</a></strong> is a vector space \n  <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\">\n   <semantics>\n    <mrow>\n     <mi>\n      L\n     </mi>\n    </mrow>\n    <annotation encoding=\"application/x-tex\">\n     L\n    </annotation>\n   </semantics>\n  </math> with a bilinear operation \n  <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\">\n   <semantics>\n    <mrow>\n     <mo stretchy=\"false\">\n      [\n     </mo>\n     <mo lspace=\"0.11111em\" rspace=\"0em\">\n      −\n     </mo>\n     <mo>\n      ,\n     </mo>\n     <mo lspace=\"0.11111em\" rspace=\"0em\">\n      −\n     </mo>\n     <mo stretchy=\"false\">\n      ]\n     </mo>\n     <mo lspace=\"0.11111em\">\n      :\n     </mo>\n     <mi>\n      L\n     </mi>\n     <mo>\n      ×\n     </mo>\n     <mi>\n      L\n     </mi>\n     <mo>\n      →\n     </mo>\n     <mi>\n      L\n     </mi>\n    </mrow>\n    <annotation encoding=\"application/x-tex\">\n     [-,-] \\colon L \\times L \\to L\n    </annotation>\n   </semantics>\n  </math> such that each element \n  <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\">\n   <semantics>\n    <mrow>\n     <mi>\n      a\n     </mi>\n     <mo>\n      ∈\n     </mo>\n     <mi>\n      L\n     </mi>\n    </mrow>\n    <annotation encoding=\"application/x-tex\">\n     a \\in L\n    </annotation>\n   </semantics>\n  </math> gives a map \n  <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\">\n   <semantics>\n    <mrow>\n     <mo stretchy=\"false\">\n      [\n     </mo>\n     <mi>\n      a\n     </mi>\n     <mo>\n      ,\n     </mo>\n     <mo lspace=\"0.11111em\" rspace=\"0em\">\n      −\n     </mo>\n     <mo stretchy=\"false\">\n      ]\n     </mo>\n     <mo lspace=\"0.11111em\">\n      :\n     </mo>\n     <mi>\n      L\n     </mi>\n     <mo>\n      →\n     </mo>\n     <mi>\n      L\n     </mi>\n    </mrow>\n    <annotation encoding=\"application/x-tex\">\n     [a,-] \\colon L \\to L\n    </annotation>\n   </semantics>\n  </math> that is a Leibniz algebra derivation. In other words, the <strong>Jacobi identity</strong> holds:</p> \n <p>\n  <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\">\n   <semantics>\n    <mrow>\n     <mo stretchy=\"false\">\n      [\n     </mo>\n     <mi>\n      a\n     </mi>\n     <mo>\n      ,\n     </mo>\n     <mo stretchy=\"false\">\n      [\n     </mo>\n     <mi>\n      b\n     </mi>\n     <mo>\n      ,\n     </mo>\n     <mi>\n      c\n     </mi>\n     <mo stretchy=\"false\">\n      ]\n     </mo>\n     <mo stretchy=\"false\">\n      ]\n     </mo>\n     <mo>\n      =\n     </mo>\n     <mo stretchy=\"false\">\n      [\n     </mo>\n     <mo stretchy=\"false\">\n      [\n     </mo>\n     <mi>\n      a\n     </mi>\n     <mo>\n      ,\n     </mo>\n     <mi>\n      b\n     </mi>\n     <mo stretchy=\"false\">\n      ]\n     </mo>\n     <mo>\n      ,\n     </mo>\n     <mi>\n      c\n     </mi>\n     <mo stretchy=\"false\">\n      ]\n     </mo>\n     <mo>\n      +\n     </mo>\n     <mo stretchy=\"false\">\n      [\n     </mo>\n     <mi>\n      b\n     </mi>\n     <mo>\n      ,\n     </mo>\n     <mo stretchy=\"false\">\n      [\n     </mo>\n     <mi>\n      a\n     </mi>\n     <mo>\n      ,\n     </mo>\n     <mi>\n      c\n     </mi>\n     <mo stretchy=\"false\">\n      ]\n     </mo>\n     <mo stretchy=\"false\">\n      ]\n     </mo>\n    </mrow>\n    <annotation encoding=\"application/x-tex\">\n      [a, [b,c]] = [[a,b], c] + [b, [a,c]] \n    </annotation>\n   </semantics>\n  </math> </p> \n <p>Again, this is really a <strong>left Leibniz algebra</strong>, and we could also consider “right” Leibniz algebras. Any Lie algebra is naturally both a left and a right Leibniz algebra.</p> \n <p>I’ve been trying to understand Jordan algebras, and here’s one thing that intrigues me: in a Jordan algebra \n  <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\">\n   <semantics>\n    <mrow>\n     <mi>\n      A\n     </mi>\n    </mrow>\n    <annotation encoding=\"application/x-tex\">\n     A\n    </annotation>\n   </semantics>\n  </math>, any <em>pair</em> of elements \n  <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\">\n   <semantics>\n    <mrow>\n     <mi>\n      a\n     </mi>\n     <mo>\n      ,\n     </mo>\n     <mi>\n      b\n     </mi>\n     <mo>\n      ∈\n     </mo>\n     <mi>\n      A\n     </mi>\n    </mrow>\n    <annotation encoding=\"application/x-tex\">\n     a,b \\in A\n    </annotation>\n   </semantics>\n  </math> acts to give a derivation of the Jordan algebra, say \n  <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\">\n   <semantics>\n    <mrow>\n     <msub>\n      <mi>\n       D\n      </mi> \n      <mrow>\n       <mi>\n        a\n       </mi>\n       <mo>\n        ,\n       </mo>\n       <mi>\n        b\n       </mi>\n      </mrow>\n     </msub>\n     <mo lspace=\"0.11111em\">\n      :\n     </mo>\n     <mi>\n      A\n     </mi>\n     <mo>\n      →\n     </mo>\n     <mi>\n      A\n     </mi>\n    </mrow>\n    <annotation encoding=\"application/x-tex\">\n     D_{a,b} \\colon A \\to A\n    </annotation>\n   </semantics>\n  </math>, as follows:</p> \n <p>\n  <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\">\n   <semantics>\n    <mrow>\n     <msub>\n      <mi>\n       D\n      </mi> \n      <mrow>\n       <mi>\n        a\n       </mi>\n       <mo>\n        ,\n       </mo>\n       <mi>\n        b\n       </mi>\n      </mrow>\n     </msub>\n     <mo stretchy=\"false\">\n      (\n     </mo>\n     <mi>\n      c\n     </mi>\n     <mo stretchy=\"false\">\n      )\n     </mo>\n     <mo>\n      =\n     </mo>\n     <mi>\n      a\n     </mi>\n     <mo>\n      ∘\n     </mo>\n     <mo stretchy=\"false\">\n      (\n     </mo>\n     <mi>\n      b\n     </mi>\n     <mo>\n      ∘\n     </mo>\n     <mi>\n      c\n     </mi>\n     <mo stretchy=\"false\">\n      )\n     </mo>\n     <mo>\n      −\n     </mo>\n     <mi>\n      b\n     </mi>\n     <mo>\n      ∘\n     </mo>\n     <mo stretchy=\"false\">\n      (\n     </mo>\n     <mi>\n      a\n     </mi>\n     <mo>\n      ∘\n     </mo>\n     <mi>\n      c\n     </mi>\n     <mo stretchy=\"false\">\n      )\n     </mo>\n    </mrow>\n    <annotation encoding=\"application/x-tex\">\n      D_{a,b} (c) = a \\circ (b \\circ c) - b \\circ (a \\circ c) \n    </annotation>\n   </semantics>\n  </math></p> \n <p>If \n  <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\">\n   <semantics>\n    <mrow>\n     <msub>\n      <mi>\n       L\n      </mi> \n      <mi>\n       a\n      </mi>\n     </msub>\n    </mrow>\n    <annotation encoding=\"application/x-tex\">\n     L_a\n    </annotation>\n   </semantics>\n  </math> means left multiplication by \n  <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\">\n   <semantics>\n    <mrow>\n     <mi>\n      a\n     </mi>\n    </mrow>\n    <annotation encoding=\"application/x-tex\">\n     a\n    </annotation>\n   </semantics>\n  </math>, this says \n  <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\">\n   <semantics>\n    <mrow>\n     <msub>\n      <mi>\n       D\n      </mi> \n      <mrow>\n       <mi>\n        a\n       </mi>\n       <mo>\n        ,\n       </mo>\n       <mi>\n        b\n       </mi>\n      </mrow>\n     </msub>\n     <mo>\n      =\n     </mo>\n     <msub>\n      <mi>\n       L\n      </mi> \n      <mi>\n       a\n      </mi>\n     </msub>\n     <msub>\n      <mi>\n       L\n      </mi> \n      <mi>\n       b\n      </mi>\n     </msub>\n     <mo>\n      −\n     </mo>\n     <msub>\n      <mi>\n       L\n      </mi> \n      <mi>\n       b\n      </mi>\n     </msub>\n     <msub>\n      <mi>\n       L\n      </mi> \n      <mi>\n       a\n      </mi>\n     </msub>\n    </mrow>\n    <annotation encoding=\"application/x-tex\">\n     D_{a,b} = L_a L_b - L_b L_a\n    </annotation>\n   </semantics>\n  </math>.</p> \n <p>This property of Jordan algebras seems nicer to me than the actual definition of Jordan algebra! So we could imagine turning it into a definition. Say a <strong>pre-Jordan algebra</strong> is a vector space \n  <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\">\n   <semantics>\n    <mrow>\n     <mi>\n      A\n     </mi>\n    </mrow>\n    <annotation encoding=\"application/x-tex\">\n     A\n    </annotation>\n   </semantics>\n  </math> equipped with a bilinear map \n  <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\">\n   <semantics>\n    <mrow>\n     <mo>\n      ∘\n     </mo>\n     <mo>\n      :\n     </mo>\n     <mi>\n      A\n     </mi>\n     <mo>\n      ×\n     </mo>\n     <mi>\n      A\n     </mi>\n     <mo>\n      →\n     </mo>\n     <mi>\n      A\n     </mi>\n    </mrow>\n    <annotation encoding=\"application/x-tex\">\n     \\circ : A \\times A \\to A\n    </annotation>\n   </semantics>\n  </math> such that for any \n  <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\">\n   <semantics>\n    <mrow>\n     <mi>\n      a\n     </mi>\n     <mo>\n      ,\n     </mo>\n     <mi>\n      b\n     </mi>\n     <mo>\n      ∈\n     </mo>\n     <mi>\n      A\n     </mi>\n    </mrow>\n    <annotation encoding=\"application/x-tex\">\n     a,b \\in A\n    </annotation>\n   </semantics>\n  </math>, the map \n  <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\">\n   <semantics>\n    <mrow>\n     <msub>\n      <mi>\n       D\n      </mi> \n      <mrow>\n       <mi>\n        a\n       </mi>\n       <mo>\n        ,\n       </mo>\n       <mi>\n        b\n       </mi>\n      </mrow>\n     </msub>\n     <mo lspace=\"0.11111em\">\n      :\n     </mo>\n     <mi>\n      A\n     </mi>\n     <mo>\n      →\n     </mo>\n     <mi>\n      A\n     </mi>\n    </mrow>\n    <annotation encoding=\"application/x-tex\">\n     D_{a,b} \\colon A \\to A\n    </annotation>\n   </semantics>\n  </math> defined above is a derivation, meaning</p> \n <p>\n  <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\">\n   <semantics>\n    <mrow>\n     <msub>\n      <mi>\n       D\n      </mi> \n      <mrow>\n       <mi>\n        a\n       </mi>\n       <mo>\n        ,\n       </mo>\n       <mi>\n        b\n       </mi>\n      </mrow>\n     </msub>\n     <mo stretchy=\"false\">\n      (\n     </mo>\n     <mi>\n      c\n     </mi>\n     <mo>\n      ∘\n     </mo>\n     <mi>\n      d\n     </mi>\n     <mo stretchy=\"false\">\n      )\n     </mo>\n     <mo>\n      =\n     </mo>\n     <msub>\n      <mi>\n       D\n      </mi> \n      <mrow>\n       <mi>\n        a\n       </mi>\n       <mo>\n        ,\n       </mo>\n       <mi>\n        b\n       </mi>\n      </mrow>\n     </msub>\n     <mo stretchy=\"false\">\n      (\n     </mo>\n     <mi>\n      c\n     </mi>\n     <mo stretchy=\"false\">\n      )\n     </mo>\n     <mo>\n      ∘\n     </mo>\n     <mi>\n      d\n     </mi>\n     <mo>\n      +\n     </mo>\n     <mi>\n      c\n     </mi>\n     <mo>\n      ∘\n     </mo>\n     <msub>\n      <mi>\n       D\n      </mi> \n      <mrow>\n       <mi>\n        a\n       </mi>\n       <mo>\n        ,\n       </mo>\n       <mi>\n        b\n       </mi>\n      </mrow>\n     </msub>\n     <mo stretchy=\"false\">\n      (\n     </mo>\n     <mi>\n      d\n     </mi>\n     <mo stretchy=\"false\">\n      )\n     </mo>\n    </mrow>\n    <annotation encoding=\"application/x-tex\">\n      D_{a,b}(c \\circ d) = D_{a,b} (c) \\circ d + c \\circ D_{a,b}(d) \n    </annotation>\n   </semantics>\n  </math></p> \n <p>for all \n  <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\">\n   <semantics>\n    <mrow>\n     <mi>\n      c\n     </mi>\n     <mo>\n      ,\n     </mo>\n     <mi>\n      d\n     </mi>\n     <mo>\n      ∈\n     </mo>\n     <mi>\n      A\n     </mi>\n    </mrow>\n    <annotation encoding=\"application/x-tex\">\n     c, d \\in A\n    </annotation>\n   </semantics>\n  </math>. </p> \n <p><strong>Puzzle.</strong> Are there pre-Jordan algebras that aren’t Jordan algebras? Are any of them interesting?</p> \n</div>","descriptionType":"xhtml","publishedDate":"Wed, 08 Jul 2020 19:28:27 +0000","feedId":8914,"bgimg":"https://golem.ph.utexas.edu/~distler/blog/images/MathML.png","linkMd5":"19eb521d9304d6371c3baf654500a1fd","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn27@2020_2/2020/08/25/00-09-56-839_3e27bbc676e8d5d2.webp","destWidth":65,"destHeight":36,"sourceBytes":3238,"destBytes":1426,"author":"john","articleImgCdnMap":{"https://golem.ph.utexas.edu/~distler/blog/images/MathML.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn27@2020_2/2020/08/25/00-09-56-839_3e27bbc676e8d5d2.webp"},"publishedOrCreatedDate":1598314179549},{"createdTime":"2020-08-25 08:09:39","updatedTime":"2020-08-25 08:09:39","title":"Congratulations, John!","link":"https://golem.ph.utexas.edu/category/2020/07/congratulations_john.html","description":"\r\n      <div xmlns=\"http://www.w3.org/1999/xhtml\">\r\n<div><a href=\"http://golem.ph.utexas.edu/~distler/blog/mathml.html\"><img class=\"mathlogo\" src=\"https://golem.ph.utexas.edu/~distler/blog/images/MathML.png\" alt=\"MathML-enabled post (click for more details).\" title=\"MathML-enabled post (click for details).\" /></a></div>\r\n\r\n<p>Our own <a href=\"http://math.ucr.edu/home/baez/\">John Baez</a> is famous\r\nfor inspiring people all around the world through the magic of the\r\ninternet, but what’s it like to actually be one of his grad students?\r\nFantastic, apparently!  The University of California at Riverside has just\r\ngiven him the <a href=\"https://mathdept.ucr.edu/news/2020/06/15/dr-john-baez-honored-campus-wide-doctoral-dissertation-advsormentoring-award\">Doctoral Dissertation Advisor/Mentoring\r\nAward</a>,\r\none of just two given by the university.\r\nIt “celebrates UCR faculty who have demonstrated an outstanding and long\r\nhistory of mentorship of graduate students”.</p>\r\n\r\n<p>Forgive a completely irrelevant digression, but partway through writing\r\nthat paragraph, while regretting that more details of John’s prize weren’t\r\navailable, something rather extraordinary forced me to stop writing…</p>\r\n\r\n<div><a href=\"http://golem.ph.utexas.edu/~distler/blog/mathml.html\"><img class=\"mathlogo\" src=\"https://golem.ph.utexas.edu/~distler/blog/images/MathML.png\" alt=\"MathML-enabled post (click for more details).\" title=\"MathML-enabled post (click for details).\" /></a></div>\r\n\r\n<p>…I’m writing this at home at my desk, with a window next to me that I\r\nhad open to let the breeze through, and just outside that window is the\r\nbranch of a tree.  As I was tapping away at the keyboard, writing the start\r\nof this post, there was a sudden scrabbling commotion. Before I had time to realize what was happening, a squirrel had leapt\r\noff the branch and landed on the carpet.  </p>\r\n\r\n<p><img src=\"https://www.maths.ed.ac.uk/~tl/images/squirrel.jpg\" alt=\"Eastern grey squirrel\" title=\"\" /></p>\r\n\r\n<p>I think it quickly\r\nrealized that it had made a mistake and wasn’t somewhere it wanted to be,\r\nas it did a couple of rapid, panicked, chaotic circuits of the room,\r\nbounding off things and over things and round things until, finally, it came to rest perched on my\r\ndesk.</p>\r\n\r\n<p>By that point, I’m not proud to say, I had flattened myself against the\r\nwall in a not-very-heroic manner. Our squirrels are small, but they’re wild animals and I guess can defend themselves if they\r\nwant to. Fortunately, this one was in no mood to fight. Once it had landed on\r\nmy desk, it stopped dead in its tracks and seemed to regain a kind of\r\ncalm. I looked at it, it looked at me. As I looked, I noticed that its cheeks were\r\nbulging, presumably with acorns or seeds or whatever it had been foraging\r\nfor. And right then and there, it bent over and coughed up the contents of its cheeks\r\nonto my desk, next to the computer where I’m writing this.  With\r\nthat, it hopped onto the windowsill and bounded out of the room and back into the tree.</p>\r\n\r\n<p>Once I’d closed the window, calmed my nerves, and straightened out the things the squirrel had\r\nknocked over on its frantic circuits round the room, I came back to the\r\npile of disgorged food on my desk. It turned out that it wasn’t food at\r\nall: it was a chewed-up wad of paper (which maybe explains why it wanted to\r\nget rid of it). I straightened the paper out and tried to figure out what\r\nit was.  Eventually, I got it: unbelievably, it was the full\r\ncitation for John’s award!  You’ll understand that after its long and\r\nunusual journey, the letter was in a sorry state, illegible in parts, what \r\nwith the rips and toothmarks and squirrel spit.  But here’s what I could make\r\nout: </p>\r\n\r\n<blockquote>\r\n  <p>From all of us in the Graduate Division I want to congratulate you on\r\nbeing this year’s recipient of the “Doctoral Dissertation\r\nAdvisor/Mentoring Award”. […]</p>\r\n\r\n<p>It was a real pleasure to read the many nominating letters that came\r\nfrom current students and colleagues as well as many of your previous\r\ngraduate students who are now highly successful in their own right. From\r\ntheir letters it is clear that your intelligence, enthusiasm and\r\nmentorship have attracted many outstanding students to UCR and that you\r\nhave populated the mathematical community with professors that\r\nappreciate your mentorship even more deeply. Many of the letters\r\nemphasized your infectious enthusiasm for mathematics […]</p>\r\n\r\n<p>writing and speaking about mathematics\r\nwhilst being generous and kind. It should also be noted that your\r\ncolleagues benefited from your strong voice and leadership in the highly\r\nsuccessful Mathematics Workshop for Excellence and Diversity for which\r\nwe are particularly grateful. As one letter writer comments your “impact\r\ngoes well beyond [your] own students” […]</p>\r\n\r\n<p>You are a treasure for all at UCR.</p>\r\n</blockquote>\r\n\r\n<p>Congratulations, John!</p>\r\n\r\n      </div>\r\n    ","descriptionType":"xhtml","publishedDate":"Thu, 02 Jul 2020 02:19:41 +0000","feedId":8914,"bgimg":"https://golem.ph.utexas.edu/~distler/blog/images/MathML.png","linkMd5":"349dc521827aade68f881a68ac1a739c","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn27@2020_2/2020/08/25/00-09-56-839_3e27bbc676e8d5d2.webp","destWidth":65,"destHeight":36,"sourceBytes":3238,"destBytes":1426,"author":"leinster","articleImgCdnMap":{"https://golem.ph.utexas.edu/~distler/blog/images/MathML.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn27@2020_2/2020/08/25/00-09-56-839_3e27bbc676e8d5d2.webp","https://www.maths.ed.ac.uk/~tl/images/squirrel.jpg":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn24@2020_6/2020/08/25/00-09-59-647_61e71ee86660997a.webp"},"publishedOrCreatedDate":1598314179451},{"createdTime":"2020-08-25 08:09:39","updatedTime":"2020-08-25 08:09:39","title":"Octonions and the Standard Model (Part 2)","link":"https://golem.ph.utexas.edu/category/2020/07/octonions_and_the_standard_mod_1.html","description":"\r\n      <div xmlns=\"http://www.w3.org/1999/xhtml\">\r\n<div><a href=\"http://golem.ph.utexas.edu/~distler/blog/mathml.html\"><img class=\"mathlogo\" src=\"https://golem.ph.utexas.edu/~distler/blog/images/MathML.png\" alt=\"MathML-enabled post (click for more details).\" title=\"MathML-enabled post (click for details).\" /></a></div>\r\n\r\n<p>My description of the octonions in <a href=\"https://golem.ph.utexas.edu/category/2020/07/octonions_and_the_standard_mod.html\">Part 1</a> raised enough issues that I’d like to talk about it a bit more.  I’ll show you a prettier formula for octonion multiplication in terms of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>ℂ</mi><mo>⊕</mo><msup><mi>ℂ</mi> <mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C} \\oplus \\mathbb{C}^3</annotation></semantics></math>… and also a very similar-looking formula for it in terms of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>ℝ</mi><mo>⊕</mo><msup><mi>ℝ</mi> <mn>7</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{R} \\oplus \\mathbb{R}^7</annotation></semantics></math>.  </p>\r\n\r\n<div><a href=\"http://golem.ph.utexas.edu/~distler/blog/mathml.html\"><img class=\"mathlogo\" src=\"https://golem.ph.utexas.edu/~distler/blog/images/MathML.png\" alt=\"MathML-enabled post (click for more details).\" title=\"MathML-enabled post (click for details).\" /></a></div>\r\n\r\n<p>Last time I took the usual construction of the quaternions from <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msup><mi>ℝ</mi> <mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{R}^3</annotation></semantics></math> and modified it to construct the octonions from <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msup><mi>ℂ</mi> <mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}^3</annotation></semantics></math>.   The key step was replacing the dot product on <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msup><mi>ℝ</mi> <mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{R}^3</annotation></semantics></math> by the inner product on <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msup><mi>ℂ</mi> <mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}^3</annotation></semantics></math>, which is conjugate-linear in one slot.   </p>\r\n\r\n<p><a href=\"https://golem.ph.utexas.edu/category/2020/07/octonions_and_the_standard_mod.html#c058177\">Layra Idarani</a> pointed out some other conventions that make the formula for multiplication more beautiful, so let me explain those here.  This stuff deserves to be made beautiful.</p>\r\n\r\n<p>First, we’ll make the inner product conjugate-linear in the <em>second</em> slot:</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo stretchy=\"false\">⟨</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo>,</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">⟩</mo><mo>=</mo><munderover><mo lspace=\"0.16667em\" rspace=\"0.16667em\">∑</mo> <mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow> <mn>3</mn></munderover><msub><mi>a</mi> <mi>i</mi></msub><mover><mrow><msub><mi>b</mi> <mi>i</mi></msub></mrow><mo>¯</mo></mover></mrow><annotation encoding=\"application/x-tex\"> \\langle \\vec{a} , \\vec{b} \\rangle = \\sum_{i=1}^3 a_i \\overline{b_i} </annotation></semantics></math></p>\r\n\r\n<p>It breaks my heart to do this: physicists do it the other way, so this is the convention preferred only by mathematicians who have never studied quantum mechanics.  But life is cruel: sticking with the other convention would force me to do other unpleasant things.   </p>\r\n\r\n<p>Next, we define the <b>hermitian cross product</b> of vectors in <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msup><mi>ℂ</mi> <mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}^3</annotation></semantics></math> by</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo stretchy=\"false\">(</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mover><mo>×</mo><mo>¯</mo></mover><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><msub><mo stretchy=\"false\">)</mo> <mi>i</mi></msub><mo>=</mo><mover><mrow><mo stretchy=\"false\">(</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo>×</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><msub><mo stretchy=\"false\">)</mo> <mi>i</mi></msub></mrow><mo>¯</mo></mover></mrow><annotation encoding=\"application/x-tex\">  (\\vec{a} \\overline{\\times} \\vec{b})_i = \\overline{(\\vec{a} \\times \\vec{b})_i} </annotation></semantics></math></p>\r\n\r\n<p>We saw last time that this operation is invariant under <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{SU}(3)</annotation></semantics></math>, though the usual cross product is not, nor is the operation of taking the conjugate of each component of a vector.</p>\r\n\r\n<p>Lastly, we’ll define a funny way of multiplying vectors in <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msup><mi>ℂ</mi> <mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}^3</annotation></semantics></math> <em>on the right</em> by complex numbers:</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mi>a</mi><mo>=</mo><mover><mi>a</mi><mo>¯</mo></mover><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover></mrow><annotation encoding=\"application/x-tex\">   \\vec{a} a = \\overline{a} \\vec{a} </annotation></semantics></math></p>\r\n\r\n<p>for all <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>a</mi><mo>∈</mo><mi>ℂ</mi><mo>,</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo>∈</mo><msup><mi>ℂ</mi> <mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">a \\in \\mathbb{C}, \\vec{a} \\in \\mathbb{C}^3</annotation></semantics></math>.   </p>\r\n\r\n<p>The payoff for all these contortions is a very pretty formula for octonion multiplication.  We’ll take elements of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>ℂ</mi><mo>⊕</mo><msup><mi>ℂ</mi> <mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C} \\oplus \\mathbb{C}^3</annotation></semantics></math> and write them like <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>a</mi><mo>+</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover></mrow><annotation encoding=\"application/x-tex\">a + \\vec{a}</annotation></semantics></math>, where the ‘scalar part’ <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">a</annotation></semantics></math> lives in <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>ℂ</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}</annotation></semantics></math> and the ‘vector part’ <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\vec{a}</annotation></semantics></math> lives in <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msup><mi>ℂ</mi> <mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}^3</annotation></semantics></math>.  And these will be our octonions!</p>\r\n\r\n<p><strong>Theorem 2.</strong>  <em>If we define multiplication on <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>ℂ</mi><mo>⊕</mo><msup><mi>ℂ</mi> <mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C} \\oplus \\mathbb{C}^3</annotation></semantics></math> by\r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>a</mi><mo>+</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mi>b</mi><mo>+</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">)</mo><mo>=</mo><mi>a</mi><mi>b</mi><mo>−</mo><mo stretchy=\"false\">⟨</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo>,</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">⟩</mo><mo>+</mo><mi>a</mi><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo>+</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mi>b</mi><mo>+</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mover><mo>×</mo><mo>¯</mo></mover><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover></mrow><annotation encoding=\"application/x-tex\">  (a + \\vec{a})(b + \\vec{b}) = a b -  \\langle \\vec{a}, \\vec{b}\\rangle + a \\vec{b} + \\vec{a} b + \\vec{a} \\overline{\\times} \\vec{b} </annotation></semantics></math>\r\nthen this space becomes a 8-dimensional normed division algebra over the real numbers, since <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mn>1</mn><mo>∈</mo><mi>ℂ</mi></mrow><annotation encoding=\"application/x-tex\">1 \\in \\mathbb{C}</annotation></semantics></math> acts as the multiplicative identity and \r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo stretchy=\"false\">‖</mo><mo stretchy=\"false\">(</mo><mi>a</mi><mo>+</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mi>b</mi><mo>+</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">‖</mo><mo>=</mo><mo stretchy=\"false\">‖</mo><mi>a</mi><mo>+</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">‖</mo><mo stretchy=\"false\">‖</mo><mi>b</mi><mo>+</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">‖</mo></mrow><annotation encoding=\"application/x-tex\">  \\|(a + \\vec{a})(b + \\vec{b})\\| = \\|a + \\vec{a}\\| \\|b + \\vec{b}\\|  </annotation></semantics></math>\r\nThis normed division algebra is isomorphic to the octonions.</em></p>\r\n\r\n<p>I’ll prove this at the end of this post.  It’s almost exactly like the proof of the theorem last time, but I want everyone to be able to check it.</p>\r\n\r\n<p>The idea of making <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msup><mi>ℂ</mi> <mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}^3</annotation></semantics></math> into a right <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>ℂ</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}</annotation></semantics></math>-module in a nontrivial way, ‘twisted by conjugation’, may seem weird.  Pragmatically speaking we do this to hide the appearance of conjugation in our formula for multiplication.   But it’s actually quite natural.  Let me explain why.</p>\r\n\r\n<p>First of all, note that if we pick any element <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>i</mi><mo>∈</mo><mi>&#x1d546;</mi></mrow><annotation encoding=\"application/x-tex\">i \\in \\mathbb{O}</annotation></semantics></math> with <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msup><mi>i</mi> <mn>2</mn></msup><mo>=</mo><mo lspace=\"0.11111em\" rspace=\"0em\">−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">i^2 = -1</annotation></semantics></math>, we get a copy of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>ℂ</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}</annotation></semantics></math> sitting in <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d546;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{O}</annotation></semantics></math> as a subalgebra.   <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d546;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{O}</annotation></semantics></math> then becomes a left <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>ℂ</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}</annotation></semantics></math>-module by left multiplication.  This is not as obvious as it sounds, since it’s saying that</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>a</mi><mo stretchy=\"false\">(</mo><mi>b</mi><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mo stretchy=\"false\">(</mo><mi>a</mi><mi>b</mi><mo stretchy=\"false\">)</mo><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">  a(b x) = (a b)x </annotation></semantics></math></p>\r\n\r\n<p>for all <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>a</mi><mo>,</mo><mi>b</mi><mo>∈</mo><mi>ℂ</mi><mo>⊆</mo><mi>&#x1d546;</mi></mrow><annotation encoding=\"application/x-tex\">a, b \\in \\mathbb{C} \\subseteq \\mathbb{O}</annotation></semantics></math> and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>x</mi><mo>∈</mo><mi>&#x1d546;</mi></mrow><annotation encoding=\"application/x-tex\">x \\in \\mathbb{O}</annotation></semantics></math>.  The octonions are not associative!  But they are <strong><a href=\"https://en.wikipedia.org/wiki/Alternative_algebra\">alternative</a></strong> — the subalgebra generated by any two elements is associative — and in the above equation <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">a</annotation></semantics></math> and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">b</annotation></semantics></math> are in the subalgebra generated by <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math>, while <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math> is in the subalgebra generated by <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math>.  So the desired equation holds!</p>\r\n\r\n<p>We can similarly make <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d546;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{O}</annotation></semantics></math> into a right <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>ℂ</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}</annotation></semantics></math>-bimodule by right multiplication.  Even better, <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d546;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{O}</annotation></semantics></math> is then a <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>ℂ</mi><mo>,</mo><mi>ℂ</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C},\\mathbb{C}</annotation></semantics></math>-bimodule.  The reason is that</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>a</mi><mi>x</mi><mo stretchy=\"false\">)</mo><mi>b</mi><mo>=</mo><mi>a</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\"> (a x)b = a(x b) </annotation></semantics></math></p>\r\n\r\n<p>for all <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>a</mi><mo>,</mo><mi>b</mi><mo>∈</mo><mi>ℂ</mi><mo>⊆</mo><mi>&#x1d546;</mi></mrow><annotation encoding=\"application/x-tex\">a, b \\in \\mathbb{C} \\subseteq \\mathbb{O}</annotation></semantics></math> and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>x</mi><mo>∈</mo><mi>&#x1d546;</mi></mrow><annotation encoding=\"application/x-tex\">x \\in \\mathbb{O}</annotation></semantics></math>, again because the octonions are alternative.</p>\r\n\r\n<p>The left and right actions of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>ℂ</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}</annotation></semantics></math> on the octonions are really different: </p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>a</mi><mi>x</mi><mo>≠</mo><mi>x</mi><mi>a</mi></mrow><annotation encoding=\"application/x-tex\"> a x \\ne x a </annotation></semantics></math></p>\r\n\r\n<p>for most <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>a</mi><mo>∈</mo><mi>ℂ</mi></mrow><annotation encoding=\"application/x-tex\">a \\in \\mathbb{C}</annotation></semantics></math>, <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>x</mi><mo>∈</mo><mi>&#x1d546;</mi></mrow><annotation encoding=\"application/x-tex\">x \\in \\mathbb{O}</annotation></semantics></math>, because the octonions are noncommutative.  But we can say more than just this negative statement.   There’s an inner product on the octonions that’s invariant under all automorphisms, so we can pick an invariant complement \r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>V</mi></mrow><annotation encoding=\"application/x-tex\">V</annotation></semantics></math> to <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>ℂ</mi><mo>⊆</mo><mi>&#x1d546;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C} \\subseteq \\mathbb{O}</annotation></semantics></math>.   We then have</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>a</mi><mi>v</mi><mo>=</mo><mi>v</mi><mover><mi>a</mi><mo>¯</mo></mover></mrow><annotation encoding=\"application/x-tex\"> a v = v \\overline{a} </annotation></semantics></math></p>\r\n\r\n<p>for <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>a</mi><mo>∈</mo><mi>ℂ</mi></mrow><annotation encoding=\"application/x-tex\">a \\in \\mathbb{C}</annotation></semantics></math>,  <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>v</mi><mo>∈</mo><mi>V</mi></mrow><annotation encoding=\"application/x-tex\">v \\in V</annotation></semantics></math>, because orthogonal square roots of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo lspace=\"0.11111em\" rspace=\"0em\">−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">-1</annotation></semantics></math> in the octonions anticommute.   </p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>V</mi></mrow><annotation encoding=\"application/x-tex\">V</annotation></semantics></math> is a <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>ℂ</mi><mo>,</mo><mi>ℂ</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C},\\mathbb{C}</annotation></semantics></math>-bimodule.  As a left <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>ℂ</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}</annotation></semantics></math>-module it’s isomorphic to <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msup><mi>ℂ</mi> <mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}^3</annotation></semantics></math> .   So, we can use this idea to describe <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d546;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{O}</annotation></semantics></math> as <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>ℂ</mi><mo>⊕</mo><msup><mi>ℂ</mi> <mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C} \\oplus \\mathbb{C}^3</annotation></semantics></math>, and it then becomes very natural to have <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>ℂ</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}</annotation></semantics></math> act on <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msup><mi>ℂ</mi> <mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}^3</annotation></semantics></math> in a ‘twisted’ way, obeying <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>a</mi><mi>v</mi><mo>=</mo><mi>v</mi><mover><mi>a</mi><mo>¯</mo></mover></mrow><annotation encoding=\"application/x-tex\"> a v = v \\overline{a}</annotation></semantics></math>.  This is exactly what we need to make <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msup><mi>ℂ</mi> <mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}^3</annotation></semantics></math> isomorphic to <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>V</mi></mrow><annotation encoding=\"application/x-tex\">V</annotation></semantics></math> as a <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>ℂ</mi><mo>,</mo><mi>ℂ</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C},\\mathbb{C}</annotation></semantics></math>-bimodule!</p>\r\n\r\n<p>It’s probably good to summarize this:</p>\r\n\r\n<p><strong>Theorem 3.</strong> <em>Any element <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>i</mi><mo>∈</mo><mi>&#x1d546;</mi></mrow><annotation encoding=\"application/x-tex\">i \\in \\mathbb{O}</annotation></semantics></math> with <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msup><mi>i</mi> <mn>2</mn></msup><mo>=</mo><mo lspace=\"0.11111em\" rspace=\"0em\">−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">i^2 = -1</annotation></semantics></math> generates a subalgebra of the octonions that can be canonically identified with <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>ℂ</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}</annotation></semantics></math>.  Left and right multiplication by this copy of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>ℂ</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}</annotation></semantics></math> makes <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d546;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{O}</annotation></semantics></math> into a <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>ℂ</mi><mo>,</mo><mi>ℂ</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C},\\mathbb{C}</annotation></semantics></math>-bimodule.   As a <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>ℂ</mi><mo>,</mo><mi>ℂ</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C},\\mathbb{C}</annotation></semantics></math>-bimodule we then have\r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>&#x1d546;</mi><mo>≅</mo><mi>ℂ</mi><mo>⊕</mo><msup><mi>ℂ</mi> <mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">    \\mathbb{O} \\cong \\mathbb{C} \\oplus \\mathbb{C}^3 </annotation></semantics></math>\r\nwhere the left action of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>ℂ</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}</annotation></semantics></math> on <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>ℂ</mi><mo>⊕</mo><msup><mi>ℂ</mi> <mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\"> \\mathbb{C} \\oplus \\mathbb{C}^3</annotation></semantics></math> is\r\nthe usual one, but the right action is given by\r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>b</mi><mo>,</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">)</mo><mi>a</mi><mo>=</mo><mo stretchy=\"false\">(</mo><mi>a</mi><mi>b</mi><mo>,</mo><mover><mi>a</mi><mo>¯</mo></mover><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">   (b , \\vec{b})a = (a b, \\overline{a}\\vec{b}) </annotation></semantics></math>\r\nfor <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>a</mi><mo>,</mo><mi>b</mi><mo>∈</mo><mi>ℂ</mi><mo>,</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo>∈</mo><msup><mi>ℂ</mi> <mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">a,b \\in \\mathbb{C}, \\vec{b} \\in \\mathbb{C}^3</annotation></semantics></math>.</em></p>\r\n\r\n<p>Finally, one more thing for today — a cute fact I’m not sure what to do with.  </p>\r\n\r\n<p>We can also take the octonions and split them as <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>ℝ</mi><mo>⊕</mo><msup><mi>ℝ</mi> <mn>7</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{R} \\oplus \\mathbb{R}^7</annotation></semantics></math> where <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>ℝ</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{R}</annotation></semantics></math> contains <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math> and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msup><mi>ℝ</mi> <mn>7</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{R}^7</annotation></semantics></math> contains all the ‘imaginary’ octonions: those orthogonal to <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math>.    We can thus write any octonion as <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>a</mi><mo>+</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover></mrow><annotation encoding=\"application/x-tex\">a + \\vec{a}</annotation></semantics></math> where now <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>a</mi><mo>∈</mo><mi>ℝ</mi></mrow><annotation encoding=\"application/x-tex\">a \\in \\mathbb{R}</annotation></semantics></math> and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo>∈</mo><msup><mi>ℝ</mi> <mn>7</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\vec{a} \\in \\mathbb{R}^7</annotation></semantics></math>.  And now octonion multiplication looks like this:</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>a</mi><mo>+</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mi>b</mi><mo>+</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">)</mo><mo>=</mo><mi>a</mi><mi>b</mi><mo>−</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo>⋅</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo>+</mo><mi>a</mi><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo>+</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mi>b</mi><mo>+</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo>×</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover></mrow><annotation encoding=\"application/x-tex\"> (a + \\vec{a})(b + \\vec{b}) = a b - \\vec{a} \\cdot \\vec{b} + a \\vec{b} + \\vec{a} b + \\vec{a} \\times \\vec{b} </annotation></semantics></math></p>\r\n\r\n<p>This formula looks almost exactly like the one in the theorem!  But now <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo>⋅</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\vec{a} \\cdot \\vec{b}</annotation></semantics></math> is defined using the usual dot product on <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msup><mi>ℝ</mi> <mn>7</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{R}^7</annotation></semantics></math>, and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo>×</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\vec{a} \\times \\vec{b}</annotation></semantics></math> is defined using a funny <a href=\"https://en.wikipedia.org/wiki/Seven-dimensional_cross_product\">cross product in 7 dimensions</a>, which unfortunately is easiest to define <em>using the octonions</em>.  So, this formula is less useful than the one in terms of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>ℂ</mi><mo>⊕</mo><msup><mi>ℂ</mi> <mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C} \\oplus \\mathbb{C}^3</annotation></semantics></math> if you’re trying to get off the ground and explain the octonions from scratch.   </p>\r\n\r\n<p>Oh, and by the way: I wrote <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">\\vec{a} b</annotation></semantics></math> in this formula just to be cute: in this real context it’s just the same as <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>b</mi><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover></mrow><annotation encoding=\"application/x-tex\">b \\vec{a}</annotation></semantics></math>: no sneaky tricks with complex conjugation.</p>\r\n\r\n<p>That’s all for today, except proving this:</p>\r\n\r\n<p><strong>Theorem 2.</strong>  <em>If we define multiplication on <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>ℂ</mi><mo>⊕</mo><msup><mi>ℂ</mi> <mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C} \\oplus \\mathbb{C}^3</annotation></semantics></math> by\r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>a</mi><mo>+</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mi>b</mi><mo>+</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">)</mo><mo>=</mo><mi>a</mi><mi>b</mi><mo>−</mo><mo stretchy=\"false\">⟨</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo>,</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">⟩</mo><mo>+</mo><mi>a</mi><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo>+</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mi>b</mi><mo>+</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mover><mo>×</mo><mo>¯</mo></mover><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover></mrow><annotation encoding=\"application/x-tex\">  (a + \\vec{a})(b + \\vec{b}) = a b -  \\langle \\vec{a}, \\vec{b}\\rangle + a \\vec{b} + \\vec{a} b + \\vec{a} \\overline{\\times} \\vec{b} </annotation></semantics></math>\r\nthen this space becomes a 8-dimensional normed division algebra over the real numbers, since <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mn>1</mn><mo>∈</mo><mi>ℂ</mi></mrow><annotation encoding=\"application/x-tex\">1 \\in \\mathbb{C}</annotation></semantics></math> acts as the multiplicative identity and \r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo stretchy=\"false\">‖</mo><mo stretchy=\"false\">(</mo><mi>a</mi><mo>+</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mi>b</mi><mo>+</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">‖</mo><mo>=</mo><mo stretchy=\"false\">‖</mo><mi>a</mi><mo>+</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">‖</mo><mo stretchy=\"false\">‖</mo><mi>b</mi><mo>+</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">‖</mo></mrow><annotation encoding=\"application/x-tex\">  \\|(a + \\vec{a})(b + \\vec{b})\\| = \\|a + \\vec{a}\\| \\|b + \\vec{b}\\|  </annotation></semantics></math>\r\nThis normed division algebra is isomorphic to the octonions.</em></p>\r\n\r\n<p><strong>Proof.</strong>  It’s enough to show that we have a normed division algebra, since the octonions are the only 8-dimensional normed division algebra over the reals.   We’ll use the norm with</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo stretchy=\"false\">‖</mo><mi>a</mi><mo>+</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><msup><mo stretchy=\"false\">‖</mo> <mn>2</mn></msup><mo>=</mo><mo stretchy=\"false\">|</mo><mi>a</mi><msup><mo stretchy=\"false\">|</mo> <mn>2</mn></msup><mo>+</mo><mo stretchy=\"false\">⟨</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo>,</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">⟩</mo></mrow><annotation encoding=\"application/x-tex\"> \\|a + \\vec{a}\\|^2 =  |a|^2 + \\langle \\vec{a} , \\vec{a} \\rangle </annotation></semantics></math></p>\r\n\r\n<p>and show that</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo stretchy=\"false\">‖</mo><mo stretchy=\"false\">(</mo><mi>a</mi><mo>+</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mi>b</mi><mo>+</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">‖</mo><mo>=</mo><mo stretchy=\"false\">‖</mo><mi>a</mi><mo>+</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">‖</mo><mo stretchy=\"false\">‖</mo><mi>b</mi><mo>+</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">‖</mo></mrow><annotation encoding=\"application/x-tex\">  \\|(a + \\vec{a})(b + \\vec{b})\\| = \\|a + \\vec{a}\\| \\|b + \\vec{b}\\|  </annotation></semantics></math></p>\r\n\r\n<p>We start with</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo stretchy=\"false\">‖</mo><mo stretchy=\"false\">(</mo><mi>a</mi><mo>+</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mi>b</mi><mo>+</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">)</mo><msup><mo stretchy=\"false\">‖</mo> <mn>2</mn></msup><mo>=</mo><mo stretchy=\"false\">‖</mo><mi>a</mi><mi>b</mi><mo>−</mo><mo stretchy=\"false\">⟨</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo>,</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">⟩</mo><mo>+</mo><mi>a</mi><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo>+</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mi>b</mi><mo>+</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mover><mo>×</mo><mo>¯</mo></mover><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><msup><mo stretchy=\"false\">‖</mo> <mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">  \\|(a + \\vec{a})(b + \\vec{b})\\|^2 = \\|a b - \\langle\\vec{a}, \\vec{b}\\rangle + a \\vec{b} + \\vec{a} b + \\vec{a} \\overline{\\times} \\vec{b} \\|^2 </annotation></semantics></math></p>\r\n\r\n<p>and use the definition of the norm to break this up into two terms:</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo stretchy=\"false\">|</mo><mi>a</mi><mi>b</mi><mo>−</mo><mo stretchy=\"false\">⟨</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo>,</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">⟩</mo><msup><mo stretchy=\"false\">|</mo> <mn>2</mn></msup><mo>+</mo><mo stretchy=\"false\">‖</mo><mi>a</mi><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo>+</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mi>b</mi><mo>+</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mover><mo>×</mo><mo>¯</mo></mover><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><msup><mo stretchy=\"false\">‖</mo> <mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\"> |a b - \\langle \\vec{a}, \\vec{b} \\rangle|^2 + \\| a \\vec{b} + \\vec{a} b  + \\vec{a} \\overline{\\times} \\vec{b} \\|^2 </annotation></semantics></math></p>\r\n\r\n<p>We can expand the first term:</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo stretchy=\"false\">|</mo><mi>a</mi><mi>b</mi><mo>−</mo><mo stretchy=\"false\">⟨</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo>,</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">⟩</mo><msup><mo stretchy=\"false\">|</mo> <mn>2</mn></msup><mo>=</mo><mo stretchy=\"false\">|</mo><mi>a</mi><mi>b</mi><msup><mo stretchy=\"false\">|</mo> <mn>2</mn></msup><mo>−</mo><mn>2</mn><mi mathvariant=\"normal\">Re</mi><mo stretchy=\"false\">(</mo><mi>a</mi><mi>b</mi><mo stretchy=\"false\">⟨</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo>,</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">⟩</mo><mo stretchy=\"false\">)</mo><mo>+</mo><mo stretchy=\"false\">|</mo><mo stretchy=\"false\">⟨</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo>,</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">⟩</mo><msup><mo stretchy=\"false\">|</mo> <mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">  |a b - \\langle \\vec{a}, \\vec{b} \\rangle|^2 = |a b|^2 - 2 \\mathrm{Re}(a b \\langle \\vec{b} , \\vec{a} \\rangle) + |\\langle \\vec{a}, \\vec{b}\\rangle|^2 </annotation></semantics></math></p>\r\n\r\n<p>We can expand the second term:</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo stretchy=\"false\">‖</mo><mi>a</mi><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo>+</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mi>b</mi><mo>+</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mover><mo>×</mo><mo>¯</mo></mover><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><msup><mo stretchy=\"false\">‖</mo> <mn>2</mn></msup><mo>=</mo></mrow><annotation encoding=\"application/x-tex\">  \\|a \\vec{b} + \\vec{a} b + \\vec{a} \\overline{\\times} \\vec{b} \\|^2 = </annotation></semantics></math>\r\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo stretchy=\"false\">‖</mo><mi>a</mi><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><msup><mo stretchy=\"false\">‖</mo> <mn>2</mn></msup><mo>+</mo><mo stretchy=\"false\">‖</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mi>b</mi><msup><mo stretchy=\"false\">‖</mo> <mn>2</mn></msup><mo>+</mo><mo stretchy=\"false\">‖</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mover><mo>×</mo><mo>¯</mo></mover><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><msup><mo stretchy=\"false\">‖</mo> <mn>2</mn></msup><mo>+</mo><mn>2</mn><mi mathvariant=\"normal\">Re</mi><mo maxsize=\"1.2em\" minsize=\"1.2em\">(</mo><mi>a</mi><mi>b</mi><mo stretchy=\"false\">⟨</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo>,</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">⟩</mo><mo>+</mo><mover><mi>a</mi><mo>¯</mo></mover><mo stretchy=\"false\">⟨</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo>,</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mover><mo>×</mo><mo>¯</mo></mover><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">⟩</mo><mo>+</mo><mi>b</mi><mo stretchy=\"false\">⟨</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo>,</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mover><mo>×</mo><mo>¯</mo></mover><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">⟩</mo><mo maxsize=\"1.2em\" minsize=\"1.2em\">)</mo></mrow><annotation encoding=\"application/x-tex\"> \\| a \\vec{b} \\|^2 + \\|\\vec{a} b\\|^2 + \\|\\vec{a} \\overline{\\times} \\vec{b}\\|^2 + \r\n 2 \\mathrm{Re} \\big(a b \\langle \\vec{b}, \\vec{a} \\rangle  + \r\n\\overline{a} \\langle \\vec{b}, \\vec{a} \\overline{\\times} \\vec{b} \\rangle +\r\nb \\langle \\vec{a}, \\vec{a} \\overline{\\times} \\vec{b} \\rangle  \\big) </annotation></semantics></math></p>\r\n\r\n<p>But note that</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo stretchy=\"false\">⟨</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo>,</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mover><mo>×</mo><mo>¯</mo></mover><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">⟩</mo><mo>=</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo>⋅</mo><mo stretchy=\"false\">(</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo>×</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">  \\langle \\vec{a}, \\vec{a} \\overline{\\times} \\vec{b} \\rangle = \\vec{a} \\cdot (\\vec{a} \\times \\vec{b}) = 0 </annotation></semantics></math></p>\r\n\r\n<p>by a well-known vector identity which works for complex vectors just as for real ones.  Similarly <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo stretchy=\"false\">⟨</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo>,</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mover><mo>×</mo><mo>¯</mo></mover><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">⟩</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">\\langle \\vec{b}, \\vec{a} \\overline{\\times} \\vec{b} \\rangle = 0</annotation></semantics></math>.  So, the expanded second term simplifies, and when we add it to the expanded first term the bits involving <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">Re</mi><mo stretchy=\"false\">(</mo><mi>a</mi><mi>b</mi><mo stretchy=\"false\">⟨</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo>,</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">⟩</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{Re}(a b \\langle \\vec{b} , \\vec{a} \\rangle)</annotation></semantics></math> cancel out.   We’re left with this:</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo stretchy=\"false\">|</mo><mi>a</mi><mi>b</mi><msup><mo stretchy=\"false\">|</mo> <mn>2</mn></msup><mo>+</mo><mo stretchy=\"false\">|</mo><mo stretchy=\"false\">⟨</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo>,</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">⟩</mo><msup><mo stretchy=\"false\">|</mo> <mn>2</mn></msup><mo>+</mo><mo stretchy=\"false\">‖</mo><mi>a</mi><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><msup><mo stretchy=\"false\">‖</mo> <mn>2</mn></msup><mo>+</mo><mo stretchy=\"false\">‖</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mi>b</mi><msup><mo stretchy=\"false\">‖</mo> <mn>2</mn></msup><mo>+</mo><mo stretchy=\"false\">‖</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mover><mo>×</mo><mo>¯</mo></mover><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><msup><mo stretchy=\"false\">‖</mo> <mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">  |a b|^2 + |\\langle \\vec{a}, \\vec{b}\\rangle|^2 + \r\n \\| a \\vec{b} \\|^2 + \\|\\vec{a} b\\|^2 + \\|\\vec{a} \\overline{\\times} \\vec{b}\\|^2 </annotation></semantics></math></p>\r\n\r\n<p>We need to show this equals</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mtable displaystyle=\"false\" rowspacing=\"0.5ex\" columnalign=\"center center left\"><mtr><mtd><mo stretchy=\"false\">‖</mo><mi>a</mi><mo>+</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><msup><mo stretchy=\"false\">‖</mo> <mn>2</mn></msup><mo stretchy=\"false\">‖</mo><mi>b</mi><mo>+</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><msup><mo stretchy=\"false\">‖</mo> <mn>2</mn></msup></mtd> <mtd><mo>=</mo></mtd> <mtd><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">|</mo><mi>a</mi><msup><mo stretchy=\"false\">|</mo> <mn>2</mn></msup><mo>+</mo><mo stretchy=\"false\">‖</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><msup><mo stretchy=\"false\">‖</mo> <mn>2</mn></msup><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">|</mo><mi>b</mi><msup><mo stretchy=\"false\">|</mo> <mn>2</mn></msup><mo>+</mo><mo stretchy=\"false\">‖</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><msup><mo stretchy=\"false\">‖</mo> <mn>2</mn></msup><mo stretchy=\"false\">)</mo></mtd></mtr> <mtr><mtd /></mtr> <mtr><mtd /> <mtd><mo>=</mo></mtd> <mtd><mo stretchy=\"false\">|</mo><mi>a</mi><msup><mo stretchy=\"false\">|</mo> <mn>2</mn></msup><mo stretchy=\"false\">|</mo><mi>b</mi><msup><mo stretchy=\"false\">|</mo> <mn>2</mn></msup><mo>+</mo><mo stretchy=\"false\">|</mo><mi>a</mi><msup><mo stretchy=\"false\">|</mo> <mn>2</mn></msup><mo stretchy=\"false\">‖</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><msup><mo stretchy=\"false\">‖</mo> <mn>2</mn></msup><mo>+</mo><mo stretchy=\"false\">|</mo><mi>b</mi><msup><mo stretchy=\"false\">|</mo> <mn>2</mn></msup><mo stretchy=\"false\">‖</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><msup><mo stretchy=\"false\">‖</mo> <mn>2</mn></msup><mo>+</mo><mo stretchy=\"false\">‖</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><msup><mo stretchy=\"false\">‖</mo> <mn>2</mn></msup><mo stretchy=\"false\">‖</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><msup><mo stretchy=\"false\">‖</mo> <mn>2</mn></msup></mtd></mtr></mtable></mrow><annotation encoding=\"application/x-tex\"> \\begin{array}{ccl}\r\n \\|a + \\vec{a} \\|^2 \\| b + \\vec{b}\\|^2 &amp;=&amp; (|a|^2 + \\|\\vec{a}\\|^2)  (|b|^2 + \\|\\vec{b}\\|^2) \\\\ \\\\\r\n&amp;=&amp; |a|^2 |b|^2 + |a|^2 \\|\\vec{b}\\|^2 + |b|^2 \\|\\vec{a}\\|^2 + \\|\\vec{a}\\|^2 \\|\\vec{b}\\|^2 \r\n\\end{array} </annotation></semantics></math></p>\r\n\r\n<p>Three terms match, so it’s enough to show</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo stretchy=\"false\">|</mo><mo stretchy=\"false\">⟨</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo>,</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">⟩</mo><msup><mo stretchy=\"false\">|</mo> <mn>2</mn></msup><mo>+</mo><mo stretchy=\"false\">‖</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mover><mo>×</mo><mo>¯</mo></mover><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><msup><mo stretchy=\"false\">‖</mo> <mn>2</mn></msup><mo>=</mo><mo stretchy=\"false\">‖</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><msup><mo stretchy=\"false\">‖</mo> <mn>2</mn></msup><mo stretchy=\"false\">‖</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><msup><mo stretchy=\"false\">‖</mo> <mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\"> |\\langle \\vec{a}, \\vec{b}\\rangle|^2 +  \\|\\vec{a} \\overline{\\times} \\vec{b}\\|^2 =  \\|\\vec{a}\\|^2 \\|\\vec{b}\\|^2 </annotation></semantics></math></p>\r\n\r\n<p>This would be a familiar vector identity if we were working in <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msup><mi>ℝ</mi> <mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{R}^3</annotation></semantics></math> with the usual cross product instead of the mutant one.   But notice, the mutant cross product is obtained from the ordinary one by componentwise complex conjugation, so </p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo stretchy=\"false\">‖</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mover><mo>×</mo><mo>¯</mo></mover><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><msup><mo stretchy=\"false\">‖</mo> <mn>2</mn></msup><mo>=</mo><mo stretchy=\"false\">‖</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo>×</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><msup><mo stretchy=\"false\">‖</mo> <mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">   \\|\\vec{a} \\overline{\\times} \\vec{b}\\|^2 =  \\|\\vec{a} \\times \\vec{b}\\|^2 </annotation></semantics></math></p>\r\n\r\n<p>Thus, we just need to show</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo stretchy=\"false\">|</mo><mo stretchy=\"false\">⟨</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo>,</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><mo stretchy=\"false\">⟩</mo><msup><mo stretchy=\"false\">|</mo> <mn>2</mn></msup><mo>+</mo><mo stretchy=\"false\">‖</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><mo>×</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><msup><mo stretchy=\"false\">‖</mo> <mn>2</mn></msup><mo>=</mo><mo stretchy=\"false\">‖</mo><mover><mi>a</mi><mo stretchy=\"false\">→</mo></mover><msup><mo stretchy=\"false\">‖</mo> <mn>2</mn></msup><mo stretchy=\"false\">‖</mo><mover><mi>b</mi><mo stretchy=\"false\">→</mo></mover><msup><mo stretchy=\"false\">‖</mo> <mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\"> |\\langle \\vec{a}, \\vec{b}\\rangle|^2 +  \\|\\vec{a} \\times \\vec{b}\\|^2 =  \\|\\vec{a}\\|^2 \\|\\vec{b}\\|^2 </annotation></semantics></math></p>\r\n\r\n<p>This works for <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msup><mi>ℂ</mi> <mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}^3</annotation></semantics></math> and its inner product exactly as it does for <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msup><mi>ℝ</mi> <mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{R}^3</annotation></semantics></math> and its dot product: you can either write out both sides using components and see they agree, or do a geometrical argument using the law of cosines and the law of sines.      █</p>\r\n\r\n      </div>\r\n    ","descriptionType":"xhtml","publishedDate":"Wed, 22 Jul 2020 19:36:08 +0000","feedId":8914,"bgimg":"https://golem.ph.utexas.edu/~distler/blog/images/MathML.png","linkMd5":"26dc30ea3ec7b38d13093ad65b10ca4c","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn27@2020_2/2020/08/25/00-09-56-839_3e27bbc676e8d5d2.webp","destWidth":65,"destHeight":36,"sourceBytes":3238,"destBytes":1426,"author":"john","articleImgCdnMap":{"https://golem.ph.utexas.edu/~distler/blog/images/MathML.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn27@2020_2/2020/08/25/00-09-56-839_3e27bbc676e8d5d2.webp"},"publishedOrCreatedDate":1598314179585},{"createdTime":"2020-08-25 08:09:39","updatedTime":"2020-08-25 08:09:39","title":"Octonions and the Standard Model (Part 4)","link":"https://golem.ph.utexas.edu/category/2020/08/octonions_and_the_standard_mod_3.html","description":"\r\n      <div xmlns=\"http://www.w3.org/1999/xhtml\">\r\n<div><a href=\"http://golem.ph.utexas.edu/~distler/blog/mathml.html\"><img class=\"mathlogo\" src=\"https://golem.ph.utexas.edu/~distler/blog/images/MathML.png\" alt=\"MathML-enabled post (click for more details).\" title=\"MathML-enabled post (click for details).\" /></a></div>\r\n\r\n<p><a href=\"https://golem.ph.utexas.edu/category/2020/07/octonions_and_the_standard_mod_2.html\">Last time</a> we saw what we can do by choosing a square root of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo lspace=\"0.11111em\" rspace=\"0em\">−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">-1</annotation></semantics></math> in the octonions.  They become a 4-dimensional complex vector space, and their automorphisms fixing this square root of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo lspace=\"0.11111em\" rspace=\"0em\">−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">-1</annotation></semantics></math> form the group <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{SU}(3)</annotation></semantics></math>.  This is the symmetry group of the strong force —and even better, its representation on the octonions matches the one we see for one quark and one lepton in the Standard Model.</p>\r\n\r\n<p>What happens if we play the same game for some larger structures <em>built</em> from octonions?  For example <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>&#x1d525;</mi> <mn>3</mn></msub><mo stretchy=\"false\">(</mo><mi>&#x1d546;</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathfrak{h}_3(\\mathbb{O})</annotation></semantics></math>, the space of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mn>3</mn><mo>×</mo><mn>3</mn></mrow><annotation encoding=\"application/x-tex\">3 \\times 3</annotation></semantics></math> self-adjoint matrices with octonion entries?   </p>\r\n\r\n<p>Maybe some of you can guess where I’m going with this, but I think I should start at the beginning and go slow, so more people can jump aboard the train!</p>\r\n\r\n<div><a href=\"http://golem.ph.utexas.edu/~distler/blog/mathml.html\"><img class=\"mathlogo\" src=\"https://golem.ph.utexas.edu/~distler/blog/images/MathML.png\" alt=\"MathML-enabled post (click for more details).\" title=\"MathML-enabled post (click for details).\" /></a></div>\r\n\r\n<p>In 1932, Pascual Jordan tried to isolate some axioms that an ‘algebra of observables’ should satisfy in quantum mechanics  The unadorned phrase ‘algebra’ usually signals an associative algebra, but this not the kind of algebra Jordan was led to.   The reason is that in traditional quantum mechanics, self-adjoint <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>n</mi><mo>×</mo><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n \\times n</annotation></semantics></math> complex matrices count as observables.   These aren’t closed under matrix multiplication.  Instead, they’re closed under linear combinations and the commutative operation</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>a</mi><mo>∘</mo><mi>b</mi><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mo stretchy=\"false\">(</mo><mi>a</mi><mi>b</mi><mo>+</mo><mi>b</mi><mi>a</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\"> a \\circ b = \\frac{1}{2}( a b + b a) </annotation></semantics></math></p>\r\n\r\n<p>This operation is not associative!   It is, however, <b>power-associative</b>: any way of parenthesizing a product of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math> copies of the same element <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">a</annotation></semantics></math> gives the same result, which we can call <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msup><mi>a</mi> <mi>n</mi></msup></mrow><annotation encoding=\"application/x-tex\">a^n</annotation></semantics></math>.   </p>\r\n\r\n<p>This led Jordan to define what is now called a <b>formally real Jordan algebra</b>: a real vector space with a bilinear, commutative and power-associative product satisfying</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msubsup><mi>a</mi> <mn>1</mn> <mn>2</mn></msubsup><mo>+</mo><mi>⋯</mi><mo>+</mo><msubsup><mi>a</mi> <mi>n</mi> <mn>2</mn></msubsup><mo>=</mo><mn>0</mn><mspace width=\"1em\" /><mo>⇒</mo><mspace width=\"1em\" /><msub><mi>a</mi> <mn>1</mn></msub><mo>=</mo><mi>⋯</mi><mo>=</mo><msub><mi>a</mi> <mi>n</mi></msub><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">  a_1^2 + \\cdots + a_n^2 = 0 \\quad \\implies \\quad a_1 = \\cdots = a_n = 0  </annotation></semantics></math></p>\r\n\r\n<p>for all <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math>.  The last condition, called <b>formal reality</b>, gives a partial ordering: if we write <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>a</mi><mo>≤</mo><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">a \\le b</annotation></semantics></math> when the element <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>b</mi><mo>−</mo><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">b - a</annotation></semantics></math> is a sum of squares, this condition says</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>a</mi><mo>≤</mo><mi>b</mi><mspace width=\"0.27778em\" /><mi>and</mi><mspace width=\"0.27778em\" /><mi>b</mi><mo>≤</mo><mi>a</mi><mspace width=\"0.27778em\" /><mspace width=\"1em\" /><mo>⇒</mo><mspace width=\"1em\" /><mi>a</mi><mo>=</mo><mi>b</mi><mo>.</mo></mrow><annotation encoding=\"application/x-tex\">    a \\le b \\; and \\;  b \\le a \\; \\quad \\implies \\quad a = b . </annotation></semantics></math></p>\r\n\r\n<p>In 1934, Jordan published a paper with von Neumann and Wigner classifying all finite-dimensional formally real Jordan algebras.  They began by proving that any such algebra is a direct sum of ‘simple’ ones.  A formally real Jordan algebra <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math> is <b>simple</b> when its only ideals are <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo stretchy=\"false\">{</mo><mn>0</mn><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\{0\\}</annotation></semantics></math> and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math> itself, where an <b>ideal</b> is the usual sort of thing: a vector subspace <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>B</mi><mo>⊆</mo><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">B \\subseteq A</annotation></semantics></math> such that <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>b</mi><mo>∈</mo><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">b \\in B</annotation></semantics></math> implies <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>a</mi><mo>∘</mo><mi>b</mi><mo>∈</mo><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">a \\circ b \\in B</annotation></semantics></math> for all <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>a</mi><mo>∈</mo><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">a \\in A</annotation></semantics></math>.  </p>\r\n\r\n<p>Then they proved that every simple finite-dimensional formally real Jordan algebra is isomorphic to one on this list:</p>\r\n\r\n<ul>\r\n<li> \r\nThe algebra <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>&#x1d525;</mi> <mi>n</mi></msub><mo stretchy=\"false\">(</mo><mi>ℝ</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathfrak{h}_n(\\mathbb{R})</annotation></semantics></math> of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>n</mi><mo>×</mo><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n \\times n</annotation></semantics></math> self-adjoint real \r\nmatrices with the product <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>a</mi><mo>∘</mo><mi>b</mi><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mo stretchy=\"false\">(</mo><mi>a</mi><mi>b</mi><mo>+</mo><mi>b</mi><mi>a</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">a \\circ b = \\frac{1}{2}(a b + b a)</annotation></semantics></math>.\r\n</li>\r\n<li> \r\nThe algebra <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>&#x1d525;</mi> <mi>n</mi></msub><mo stretchy=\"false\">(</mo><mi>ℂ</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathfrak{h}_n(\\mathbb{C})</annotation></semantics></math> of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>n</mi><mo>×</mo><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n \\times n</annotation></semantics></math> self-adjoint complex \r\nmatrices with the product <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>a</mi><mo>∘</mo><mi>b</mi><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mo stretchy=\"false\">(</mo><mi>a</mi><mi>b</mi><mo>+</mo><mi>b</mi><mi>a</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">a \\circ b = \\frac{1}{2}(a b + b a)</annotation></semantics></math>.\r\n</li>\r\n<li> \r\nThe algebra <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>&#x1d525;</mi> <mi>n</mi></msub><mo stretchy=\"false\">(</mo><mi>ℍ</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathfrak{h}_n(\\mathbb{H})</annotation></semantics></math> of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>n</mi><mo>×</mo><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n \\times n</annotation></semantics></math> self-adjoint quaternionic \r\nmatrices with the product <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>a</mi><mo>∘</mo><mi>b</mi><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mo stretchy=\"false\">(</mo><mi>a</mi><mi>b</mi><mo>+</mo><mi>b</mi><mi>a</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">a \\circ b = \\frac{1}{2}(a b + b a)</annotation></semantics></math>.\r\n</li>\r\n<li> \r\nThe algebra <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>&#x1d525;</mi> <mn>3</mn></msub><mo stretchy=\"false\">(</mo><mi>&#x1d546;</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathfrak{h}_3(\\mathbb{O})</annotation></semantics></math> of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>n</mi><mo>×</mo><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n \\times n</annotation></semantics></math> self-adjoint octonionic \r\nmatrices where <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>n</mi><mo>≤</mo><mn>3</mn></mrow><annotation encoding=\"application/x-tex\">n \\le 3</annotation></semantics></math>, with the product <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>a</mi><mo>∘</mo><mi>b</mi><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mo stretchy=\"false\">(</mo><mi>a</mi><mi>b</mi><mo>+</mo><mi>b</mi><mi>a</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">a \\circ b = \\frac{1}{2}(a b + b a )</annotation></semantics></math>.\r\n</li>\r\n<li> The <b>spin factors:</b> the algebras <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msup><mi>ℝ</mi> <mi>n</mi></msup><mo>⊕</mo><mi>ℝ</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{R}^n \\oplus \\mathbb{R}</annotation></semantics></math> with the product <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mo>,</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>∘</mo><mo stretchy=\"false\">(</mo><mi>x</mi><mo>′</mo><mo>,</mo><mi>t</mi><mo>′</mo><mo stretchy=\"false\">)</mo><mo>=</mo><mo stretchy=\"false\">(</mo><mi>t</mi><mi>x</mi><mo>′</mo><mo lspace=\"0.11111em\" rspace=\"0em\">+</mo><mi>t</mi><mo>′</mo><mi>x</mi><mo>,</mo><mi>x</mi><mo>⋅</mo><mi>x</mi><mo>′</mo><mo lspace=\"0.11111em\" rspace=\"0em\">+</mo><mi>t</mi><mi>t</mi><mo>′</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\"> (x,t) \\circ (x', t') = (t x' + t' x, x \\cdot x' + t t') </annotation></semantics></math>\r\n</li>\r\n</ul>\r\n\r\n<p>Here we say a square matrix <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">T</annotation></semantics></math> is <b>self-adjoint</b> if <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>T</mi> <mrow><mi>j</mi><mi>i</mi></mrow></msub><mo>=</mo><mo stretchy=\"false\">(</mo><msub><mi>T</mi> <mrow><mi>i</mi><mi>j</mi></mrow></msub><msup><mo stretchy=\"false\">)</mo> <mo>*</mo></msup></mrow><annotation encoding=\"application/x-tex\">T_{j i} =  (T_{i j})^\\ast</annotation></semantics></math>, where we use the conjugation that we have on <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>ℝ</mi><mo>,</mo><mi>ℂ</mi><mo>,</mo><mi>ℍ</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{R}, \\mathbb{C}, \\mathbb{H}</annotation></semantics></math> and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d546;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{O}</annotation></semantics></math>.    </p>\r\n\r\n<p>What does all this mean for physics?  Self-adjoint matrices with entries in <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>ℝ</mi><mo>,</mo><mi>ℂ</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{R},\\mathbb{C}</annotation></semantics></math> and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>ℍ</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{H}</annotation></semantics></math> give observables in three forms of quantum mechanics.  Complex quantum mechanics is the most important one, but real and quaternionic quantum mechanics exist too, and I’ve argued that they’re lurking behind the scenes in physics:</p>\r\n\r\n<ul>\r\n<li>\r\nJohn Baez, <a href=\"https://arxiv.org/abs/1101.5690\">Division algebras and quantum theory</a>, <i>Found. Phys.</i> <b>42</b> (2012), 819–855.\r\n</li>\r\n</ul>\r\n\r\n<p>The spin factors are weirder, but they have an intriguing relation to special relativity.  For any formally real Jordan algebra we get a cone </p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo stretchy=\"false\">{</mo><mi>a</mi><mo>:</mo><mspace width=\"0.27778em\" /><mi>a</mi><mo>≥</mo><mn>0</mn><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">    \\{a : \\; a \\ge 0\\} </annotation></semantics></math></p>\r\n\r\n<p>For the spin factor <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msup><mi>ℝ</mi> <mi>n</mi></msup><mo>⊕</mo><mi>ℝ</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{R}^n \\oplus \\mathbb{R}</annotation></semantics></math> this can be identified with the ‘future cone’ in <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(n+1)</annotation></semantics></math>-dimensional Minkowski spacetime: the set of points you can get to if you start at the origin and move no faster than light.   This gives a whole different outlook on formally real Jordan algebras: we can think of them as spacetimes having a concept of causality given by a future cone.  </p>\r\n\r\n<p>In fact there’s a theorem to justify this: the Koecher–Vinberg theorem!  This says that any formally real Jordan algebra gives a specially nice sort of cone called a ‘symmetric cone’ (actually the <em>interior</em> of the cone mentioned above) — and conversely, any symmetric cone gives a formally real Jordan algebra.   You can see details here:</p>\r\n\r\n<ul>\r\n<li>\r\nWikipedia, <a href=\"https://en.wikipedia.org/wiki/Symmetric_cone\">Symmetric cone</a>.\r\n</li>\r\n<li>\r\nnLab, <a href=\"https://ncatlab.org/nlab/show/Jordan+algebra#selfdual_homogeneous_convex_cones\">Self-dual homogeneous convex cones</a>.\r\n</li>\r\n</ul>\r\n\r\n<p>So, there’s something funny going on: we can think of formally real Jordan algebras either as algebras of observables or as spacetimes with future cones.   For example,  <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>&#x1d525;</mi> <mn>2</mn></msub><mo stretchy=\"false\">(</mo><mi>ℂ</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathfrak{h}_2(\\mathbb{C})</annotation></semantics></math> is the Jordan algebra of observables of a qubit, but we can also see it as 4d Minkowski spacetime!   This generalizes to qubits defined using other normed division algebras:</p>\r\n\r\n<ul>\r\n<li>  \r\nThe Jordan algebra <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>&#x1d525;</mi> <mn>2</mn></msub><mo stretchy=\"false\">(</mo><mi>ℝ</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathfrak{h}_2(\\mathbb{R})</annotation></semantics></math> is\r\nisomorphic to the spin factor <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msup><mi>ℝ</mi> <mn>2</mn></msup><mo>⊕</mo><mi>ℝ</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{R}^2 \\oplus \\mathbb{R}</annotation></semantics></math>.\r\n</li>\r\n<li>\r\nThe Jordan algebra <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>&#x1d525;</mi> <mn>2</mn></msub><mo stretchy=\"false\">(</mo><mi>ℂ</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathfrak{h}_2(\\mathbb{C})</annotation></semantics></math> is\r\nisomorphic to the spin factor <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msup><mi>ℝ</mi> <mn>3</mn></msup><mo>⊕</mo><mi>ℝ</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{R}^3 \\oplus \\mathbb{R}</annotation></semantics></math>.\r\n</li>\r\n<li> \r\nThe Jordan algebra <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>&#x1d525;</mi> <mn>2</mn></msub><mo stretchy=\"false\">(</mo><mi>ℍ</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathfrak{h}_2(\\mathbb{H})</annotation></semantics></math>\r\nis isomorphic to the spin factor <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msup><mi>ℝ</mi> <mn>5</mn></msup><mo>⊕</mo><mi>ℝ</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{R}^5 \\oplus \\mathbb{R}</annotation></semantics></math>.\r\n</li>\r\n<li>\r\nThe Jordan algebra <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>&#x1d525;</mi> <mn>2</mn></msub><mo stretchy=\"false\">(</mo><mi>&#x1d546;</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathfrak{h}_2(\\mathbb{O})</annotation></semantics></math> \r\nis isomorphic to the spin factor <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msup><mi>ℝ</mi> <mn>9</mn></msup><mo>⊕</mo><mi>ℝ</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{R}^9 \\oplus \\mathbb{R}</annotation></semantics></math>.\r\n</li>\r\n</ul>\r\n\r\n<p>We get a relation between the real numbers, complex numbers, quaternions and octonions and the Minkowski spacetimes of dimensions 3,4,6 and 10.  These are precisely the dimensions where a classical superstring Lagrangian can be written down!  And that’s <a href=\"https://arxiv.org/abs/1106.3385\">no coincidence</a>.  But that’s not where I’m going now.  </p>\r\n\r\n<p>It’s the self-adjoint octonionic matrices that I want to focus on now.   Due to the nonassociativity of the octonions, we can’t get Jordan algebras from self-adjoint octonionic matrices bigger than <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mn>3</mn><mo>×</mo><mn>3</mn></mrow><annotation encoding=\"application/x-tex\">3 \\times 3</annotation></semantics></math>.   This is one of those things you need to think about for a while to understand: it’s kind of sad but kind of wonderful.  </p>\r\n\r\n<p>The <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mn>1</mn><mo>×</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1 \\times 1</annotation></semantics></math> self-adjoint octonionic matrices are just a fancy way of talking about <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>ℝ</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{R}</annotation></semantics></math>.  The <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mn>2</mn><mo>×</mo><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">2 \\times 2</annotation></semantics></math> ones, as we’ve just seen, are just a way of talking about 10-dimensional Minkowski spacetime.  But the <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mn>3</mn><mo>×</mo><mn>3</mn></mrow><annotation encoding=\"application/x-tex\">3 \\times 3</annotation></semantics></math> self-adjoint octonionic matrices — the only formally real Jordan algebra I haven’t said much about yet — are called the <b><a href=\"http://math.ucr.edu/home/baez/octonions/node12.html\">exceptional Jordan algebra</a></b>.  </p>\r\n\r\n<p>Here’s what I’d like to explain in future posts.  The automorphisms of the exceptional Jordan algebra form a Lie group called <a href=\"http://math.ucr.edu/home/baez/octonions/node15.html\">F<sub>4</sub></a>.   And Dubois-Violette and Todorov found the Standard Model gauge group sitting inside <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi mathvariant=\"normal\">F</mi> <mn>4</mn></msub></mrow><annotation encoding=\"application/x-tex\">\\mathrm{F}_4</annotation></semantics></math> in a beautiful way!   They wrote three papers about this.   If you want to read just one, it should probably be this:</p>\r\n\r\n<ul>\r\n<li>\r\nMichel Dubois-Violette and Ivan Todorov, <a href=\"https://arxiv.org/abs/1808.08110\">Exceptional quantum geometry and particle physics II</a>, <i>Nucl. Phys. B</i> <b>938</b> (2019), 751–761.\r\n</li>\r\n</ul>\r\n\r\n<p>They state two main results.   For these you need to remember some stuff I’ve already explained.  Namely, if you pick a square root of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo lspace=\"0.11111em\" rspace=\"0em\">−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">-1</annotation></semantics></math> in the octonions and call it <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math>, this makes <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d546;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{O}</annotation></semantics></math> into a 4-dimensional complex vector space, and the group of automorphisms of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d546;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{O}</annotation></semantics></math> preserving this extra structure is isomorphic to <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{SU}(3)</annotation></semantics></math>, and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&#x1d546;</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{O}</annotation></semantics></math> splits into 1d and a 3d representation of this group: </p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>&#x1d546;</mi><mo>≅</mo><mi>ℂ</mi><mo>⊕</mo><mi>V</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{O} \\cong \\mathbb{C} \\oplus V</annotation></semantics></math></p>\r\n\r\n<p>If you’re willing to pick an arbitrary basis of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>V</mi></mrow><annotation encoding=\"application/x-tex\">V</annotation></semantics></math> you can say</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>&#x1d546;</mi><mo>≅</mo><mi>ℂ</mi><mo>⊕</mo><msup><mi>ℂ</mi> <mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{O} \\cong \\mathbb{C} \\oplus \\mathbb{C}^3</annotation></semantics></math></p>\r\n\r\n<p>In other words: an octonion is a complex scalar and a complex vector.</p>\r\n\r\n<p>You also need a mental picture of the exceptional Jordan algebra <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>&#x1d525;</mi> <mn>3</mn></msub><mo stretchy=\"false\">(</mo><mi>&#x1d546;</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathfrak{h}_3(\\mathbb{O})</annotation></semantics></math>.   Any element looks like this:</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mrow><mo>(</mo><mtable displaystyle=\"false\" rowspacing=\"0.5ex\" columnalign=\"center center center\"><mtr><mtd><mi>a</mi></mtd> <mtd><mi>Z</mi></mtd> <mtd><msup><mi>Y</mi> <mo>*</mo></msup></mtd></mtr> <mtr><mtd><msup><mi>Z</mi> <mo>*</mo></msup></mtd> <mtd><mi>b</mi></mtd> <mtd><mi>X</mi></mtd></mtr> <mtr><mtd><mi>Y</mi></mtd> <mtd><msup><mi>X</mi> <mo>*</mo></msup></mtd> <mtd><mi>c</mi></mtd></mtr></mtable><mo>)</mo></mrow></mrow><annotation encoding=\"application/x-tex\"> \\left( \\begin{array}{ccc} a &amp; Z &amp; Y^\\ast \\\\\r\nZ^\\ast &amp; b &amp; X \\\\\r\nY &amp; X^\\ast &amp; c \\end{array} \\right) </annotation></semantics></math></p>\r\n\r\n<p>where <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>a</mi><mo>,</mo><mi>b</mi><mo>,</mo><mi>c</mi><mo>∈</mo><mo lspace=\"0em\" rspace=\"0.16667em\">R</mo></mrow><annotation encoding=\"application/x-tex\">a,b,c \\in \\R</annotation></semantics></math> and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>X</mi><mo>,</mo><mi>Y</mi><mo>,</mo><mi>Z</mi><mo>∈</mo><mi>&#x1d546;</mi></mrow><annotation encoding=\"application/x-tex\">X,Y,Z \\in \\mathbb{O}</annotation></semantics></math>.  So, it consists of 3 real numbers and 3 octonions.   Thus, the dimension of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>&#x1d525;</mi> <mn>3</mn></msub><mo stretchy=\"false\">(</mo><mi>&#x1d546;</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathfrak{h}_3(\\mathbb{O})</annotation></semantics></math> is</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mn>27</mn><mo>=</mo><mn>3</mn><mo>+</mo><mn>3</mn><mo>×</mo><mn>8</mn></mrow><annotation encoding=\"application/x-tex\">  27 = 3 + 3 \\times 8  </annotation></semantics></math></p>\r\n\r\n<p>Using our choice of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>i</mi><mo>∈</mo><mi>&#x1d546;</mi></mrow><annotation encoding=\"application/x-tex\">i \\in \\mathbb{O}</annotation></semantics></math> we can go further and split each octonion into a complex scalar and a complex vector.  Then we get this:</p>\r\n\r\n<p><b>Theorem 5</b>.   The subgroup of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi mathvariant=\"normal\">F</mi> <mn>4</mn></msub></mrow><annotation encoding=\"application/x-tex\">\\mathrm{F}_4</annotation></semantics></math> that preserves the splitting of each off-diagonal octonion into complex scalar and complex vector parts is isomorphic to <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo><mo>×</mo><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">/</mo><msub><mi>ℤ</mi> <mn>3</mn></msub></mrow><annotation encoding=\"application/x-tex\">(\\mathrm{SU}(3) \\times \\mathrm{SU}(3))/\\mathbb{Z}_3</annotation></semantics></math>.   </p>\r\n\r\n<p>Of course I should say how <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>ℤ</mi> <mn>3</mn></msub></mrow><annotation encoding=\"application/x-tex\">\\mathbb{Z}_3</annotation></semantics></math> sits inside <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo><mo>×</mo><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{SU}(3) \\times \\mathrm{SU}(3)</annotation></semantics></math>.  I’ll do this later; for now I’ll just say it does so in the best possible, most symmetrical way.</p>\r\n\r\n<p>So we’re getting <i>two</i> copies of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{SU}(3)</annotation></semantics></math>, with a bit of overlap.  One of them corresponds to the <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{SU}(3)</annotation></semantics></math> that acts on the three colors of quark, as explained <a href=\"https://golem.ph.utexas.edu/category/2020/07/octonions_and_the_standard_mod_2.html\">last time</a>.   What about the other?  You might naively hope it acts on the three <i>generations</i> of quarks and leptons: that is, the three columns here:</p>\r\n\r\n<p><img width=\"500\" src=\"https://johncarlosbaez.files.wordpress.com/2020/08/standard_model_particles.png\" alt=\"\" /></p>\r\n\r\n<p>Note the 3 octonions in an element of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>&#x1d525;</mi> <mn>3</mn></msub><mo stretchy=\"false\">(</mo><mi>&#x1d546;</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathfrak{h}_3(\\mathbb{O})</annotation></semantics></math> have enough room to describe 3 quarks and 3 leptons.  We’d have to double this somehow to describe all 6 quarks and 6 leptons.  </p>\r\n\r\n<p>These are some vague thoughts — but let’s shelve them for now.  The next theorem points us in a different direction.  </p>\r\n\r\n<p>We can choose a copy of  <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>&#x1d525;</mi> <mn>2</mn></msub><mo stretchy=\"false\">(</mo><mi>&#x1d546;</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathfrak{h}_2(\\mathbb{O})</annotation></semantics></math> sitting inside <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>&#x1d525;</mi> <mn>3</mn></msub><mo stretchy=\"false\">(</mo><mi>&#x1d546;</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathfrak{h}_3(\\mathbb{O})</annotation></semantics></math>.   Here when I say a ‘copy’, I mean a Jordan subalgebra isomorphic to <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>&#x1d525;</mi> <mn>2</mn></msub><mo stretchy=\"false\">(</mo><mi>&#x1d546;</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathfrak{h}_2(\\mathbb{O})</annotation></semantics></math> — for example, the one consisting of these matrices:</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mrow><mo>(</mo><mtable displaystyle=\"false\" rowspacing=\"0.5ex\" columnalign=\"center center center\"><mtr><mtd><mi>a</mi></mtd> <mtd><mi>Z</mi></mtd> <mtd><mn>0</mn></mtd></mtr> <mtr><mtd><msup><mi>Z</mi> <mo>*</mo></msup></mtd> <mtd><mi>b</mi></mtd> <mtd><mn>0</mn></mtd></mtr> <mtr><mtd><mn>0</mn></mtd> <mtd><mn>0</mn></mtd> <mtd><mn>0</mn></mtd></mtr></mtable><mo>)</mo></mrow></mrow><annotation encoding=\"application/x-tex\"> \\left( \\begin{array}{ccc} a &amp; Z &amp; 0 \\\\\r\nZ^\\ast &amp; b &amp; 0 \\\\\r\n0 &amp; 0 &amp; 0 \\end{array} \\right) </annotation></semantics></math></p>\r\n\r\n<p><b>Theorem 6</b>.   The subgroup of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi mathvariant=\"normal\">F</mi> <mn>4</mn></msub></mrow><annotation encoding=\"application/x-tex\">\\mathrm{F}_4</annotation></semantics></math> that preserves the splitting of each off-diagonal octonion into complex scalar and complex vector parts <i>and</i> preserves a copy of  <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>&#x1d525;</mi> <mn>2</mn></msub><mo stretchy=\"false\">(</mo><mi>&#x1d546;</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathfrak{h}_2(\\mathbb{O})</annotation></semantics></math> in <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>&#x1d525;</mi> <mn>3</mn></msub><mo stretchy=\"false\">(</mo><mi>&#x1d546;</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathfrak{h}_3(\\mathbb{O})</annotation></semantics></math> is isomorphic to <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo><mo>×</mo><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>2</mn><mo stretchy=\"false\">)</mo><mo>×</mo><mi mathvariant=\"normal\">U</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">/</mo><msub><mi>ℤ</mi> <mn>6</mn></msub></mrow><annotation encoding=\"application/x-tex\">(\\mathrm{SU}(3) \\times \\mathrm{SU}(2) \\times \\mathrm{U}(1))/\\mathbb{Z}_6</annotation></semantics></math>.</p>\r\n\r\n<p>Of course I should say how <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>ℤ</mi> <mn>6</mn></msub></mrow><annotation encoding=\"application/x-tex\">\\mathbb{Z}_6</annotation></semantics></math> sits inside <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo><mo>×</mo><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>2</mn><mo stretchy=\"false\">)</mo><mo>×</mo><mi mathvariant=\"normal\">U</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{SU}(3) \\times \\mathrm{SU}(2) \\times \\mathrm{U}(1)</annotation></semantics></math>.  I’ll do this later; for now I’ll just say it does so in exactly the way that makes <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo><mo>×</mo><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>2</mn><mo stretchy=\"false\">)</mo><mo>×</mo><mi mathvariant=\"normal\">U</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">/</mo><msub><mi>ℤ</mi> <mn>6</mn></msub></mrow><annotation encoding=\"application/x-tex\">(\\mathrm{SU}(3) \\times \\mathrm{SU}(2) \\times \\mathrm{U}(1))/\\mathbb{Z}_6</annotation></semantics></math> into the the true gauge group of the Standard Model!</p>\r\n\r\n<p>You see, people often say the gauge group of the Standard Model is <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo><mo>×</mo><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>2</mn><mo stretchy=\"false\">)</mo><mo>×</mo><mi mathvariant=\"normal\">U</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{SU}(3) \\times \\mathrm{SU}(2) \\times \\mathrm{U}(1)</annotation></semantics></math>, but a certain <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>ℤ</mi> <mn>6</mn></msub></mrow><annotation encoding=\"application/x-tex\">\\mathbb{Z}_6</annotation></semantics></math> subgroup acts trivially on all known particles, so we can argue that the ‘true’ gauge group is the quotient by this (normal) subgroup.   And this is indeed the attitude one takes in many grand unified theories: one embeds not <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo><mo>×</mo><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>2</mn><mo stretchy=\"false\">)</mo><mo>×</mo><mi mathvariant=\"normal\">U</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{SU}(3) \\times \\mathrm{SU}(2) \\times \\mathrm{U}(1)</annotation></semantics></math> but this quotient  <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo><mo>×</mo><mi mathvariant=\"normal\">SU</mi><mo stretchy=\"false\">(</mo><mn>2</mn><mo stretchy=\"false\">)</mo><mo>×</mo><mi mathvariant=\"normal\">U</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">/</mo><msub><mi>ℤ</mi> <mn>6</mn></msub></mrow><annotation encoding=\"application/x-tex\">(\\mathrm{SU}(3) \\times \\mathrm{SU}(2) \\times \\mathrm{U}(1))/\\mathbb{Z}_6</annotation></semantics></math> into a larger group.</p>\r\n\r\n<p>So, we’re getting the Standard Model gauge group from the exceptional Jordan algebra together with two further ideas:</p>\r\n\r\n<ul>\r\n<li>\r\nfixing a square root of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo lspace=\"0.11111em\" rspace=\"0em\">−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">-1</annotation></semantics></math> inside the octonions;\r\n</li>\r\n<li>\r\nfixing a copy of  <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>&#x1d525;</mi> <mn>2</mn></msub><mo stretchy=\"false\">(</mo><mi>&#x1d546;</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathfrak{h}_2(\\mathbb{O})</annotation></semantics></math> inside <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><msub><mi>&#x1d525;</mi> <mn>3</mn></msub><mo stretchy=\"false\">(</mo><mi>&#x1d546;</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathfrak{h}_3(\\mathbb{O})</annotation></semantics></math>.\r\n</li>\r\n</ul>\r\n\r\n<p>What might this mean?   Before thinking too much about that, it’s probably good to see why Theorem 5 and Theorem 6 are true.   I’ll stop here for now, and try to tackle these theorems in future parts.</p>\r\n\r\n      </div>\r\n    ","descriptionType":"xhtml","publishedDate":"Mon, 03 Aug 2020 13:03:02 +0000","feedId":8914,"bgimg":"https://golem.ph.utexas.edu/~distler/blog/images/MathML.png","linkMd5":"097fb03f22531a9b08287545ddd151b4","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn27@2020_2/2020/08/25/00-09-56-839_3e27bbc676e8d5d2.webp","destWidth":65,"destHeight":36,"sourceBytes":3238,"destBytes":1426,"author":"john","articleImgCdnMap":{"https://golem.ph.utexas.edu/~distler/blog/images/MathML.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn27@2020_2/2020/08/25/00-09-56-839_3e27bbc676e8d5d2.webp","https://johncarlosbaez.files.wordpress.com/2020/08/standard_model_particles.png":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn32@2020_4/2020/08/25/00-09-58-804_ae110edaefe18e7c.webp"},"publishedOrCreatedDate":1598314179553},{"createdTime":"2020-08-25 08:09:39","updatedTime":"2020-08-25 08:09:39","title":"Formal and Material Inference","link":"https://golem.ph.utexas.edu/category/2020/08/formal_and_material_inference.html","description":"\r\n      <div xmlns=\"http://www.w3.org/1999/xhtml\">\r\n<div><a href=\"http://golem.ph.utexas.edu/~distler/blog/mathml.html\"><img class=\"mathlogo\" src=\"https://golem.ph.utexas.edu/~distler/blog/images/MathML.png\" alt=\"MathML-enabled post (click for more details).\" title=\"MathML-enabled post (click for details).\" /></a></div>\r\n\r\n<p>A distinction is made within philosophy between <em>formal</em> and <em>material</em> inference. The first of these operates purely through the logical form of the relevant propositions, whereas the second relies on conceptual content occurring within them.</p>\r\n\r\n<p>A classic example of a <em>formal</em> inference is <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>A</mi><mi>&amp;</mi><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">A \\&amp; B</annotation></semantics></math>, therefore <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math>. Substitute any propositions for <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math> and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">B</annotation></semantics></math> and the inference goes through. The conjunction <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>&amp;</mi></mrow><annotation encoding=\"application/x-tex\">\\&amp;</annotation></semantics></math> is a piece of logical vocabulary. By contrast, the thinking goes, that <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C</annotation></semantics></math> is west of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">D</annotation></semantics></math> implies that <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">D</annotation></semantics></math> is east of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C</annotation></semantics></math> is a piece of <em>material</em> inference, relying on the relation between the non-logical concepts, ‘east’ and ‘west’. Substitute ‘older’ for ‘east’ and ‘larger’ for ‘west’ and the inference fails.</p>\r\n\r\n<p>The philosopher Wilfred Sellars famously asserted that in such cases we’re not merely employing a tacit proposition, i.e., here ‘If <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math> is west of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">Y</annotation></semantics></math>, then <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">Y</annotation></semantics></math> is east of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math>’, instantiating it and then using <em>modus ponens</em>. For Sellars, and those following him, like Robert Brandom, material inference is primary; only for a limited portion of our inferential practices has humankind managed to extract formal inference schemas.</p>\r\n\r\n<p>But then how to decide what is ‘logical’ and what ‘non-logical’? As an adherent of dependent type theory, can’t I hold any inference carried out in that system to be formal?</p>\r\n\r\n<p>Say I have judged <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>j</mi><mo>:</mo><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">j: P</annotation></semantics></math> and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>f</mi><mo>:</mo><mo>¬</mo><mo stretchy=\"false\">(</mo><msub><mo lspace=\"0.16667em\" rspace=\"0.16667em\">∑</mo> <mrow><mi>x</mi><mo>:</mo><mi>P</mi></mrow></msub><mi>H</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f: \\neg (\\sum_{x: P}H(x))</annotation></semantics></math>, where <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>H</mi></mrow><annotation encoding=\"application/x-tex\">H</annotation></semantics></math> is a predicate on <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">P</annotation></semantics></math>. Then defining for <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>x</mi><mo>:</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mi>j</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">x: H(j)</annotation></semantics></math>, <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>g</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>:</mo><mo>≡</mo><mi>f</mi><mo stretchy=\"false\">(</mo><mi>j</mi><mo>,</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">g(x):\\equiv f(j, x)</annotation></semantics></math>, I can now judge  <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>g</mi><mo>:</mo><mo>¬</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mi>j</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">g: \\neg H(j)</annotation></semantics></math>, using standard type-theoretic rules.</p>\r\n\r\n<p>Rewriting this inference in something closer to English, we find the syllogism:</p>\r\n\r\n<blockquote>\r\n  <p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math> is a <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">P</annotation></semantics></math>, No <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">P</annotation></semantics></math>s are <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>H</mi></mrow><annotation encoding=\"application/x-tex\">H</annotation></semantics></math>, therefore <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math> is not <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>H</mi></mrow><annotation encoding=\"application/x-tex\">H</annotation></semantics></math>.</p>\r\n</blockquote>\r\n\r\n<p>As a valid syllogism, any substitution should do, so let’s choose a type, <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">P</annotation></semantics></math>, say <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>Person</mi></mrow><annotation encoding=\"application/x-tex\">Person</annotation></semantics></math>. <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math> is an element of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">P</annotation></semantics></math>, so let’s say Jane. <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>H</mi></mrow><annotation encoding=\"application/x-tex\">H</annotation></semantics></math> is a property of people, let’s say ‘being in this house’. </p>\r\n\r\n<p>Then we have the inference </p>\r\n\r\n<blockquote>\r\n  <p>Jane is a person. No people are in the house. Therefore Jane is not in the house. </p>\r\n</blockquote>\r\n\r\n<p>OK, why this example? </p>\r\n\r\n<div><a href=\"http://golem.ph.utexas.edu/~distler/blog/mathml.html\"><img class=\"mathlogo\" src=\"https://golem.ph.utexas.edu/~distler/blog/images/MathML.png\" alt=\"MathML-enabled post (click for more details).\" title=\"MathML-enabled post (click for details).\" /></a></div>\r\n\r\n<p>Because it, or something very like it, appears already in the literature:</p>\r\n\r\n<ul>\r\n<li>González de Prado Salas, J., de Donato Rodríguez, X. &amp; Zamora Bonilla, J. 2017. Inferentialism, degrees of commitment, and ampliative reasoning. Synthese. (<a href=\"https://doi.org/10.1007/s11229-017-1579-5\">paper</a>)</li>\r\n</ul>\r\n\r\n<blockquote>\r\n  <p>if I am committed to endorsing the proposition ‘The house is empty,’ I will also be committed to endorsing ‘Jane is not in the house.’</p>\r\n\r\n<p>…if one wants to characterize inferentially the content associated with non-logical vocabulary, one has to consider inferences that are not formally good, but that are made good by the content of the (non-logical) concepts they involve–that is, materially good inferences (like the inference about the empty house mentioned above).</p>\r\n</blockquote>\r\n\r\n<p>Surely it can’t be that the translation between ‘No people are in the house’ and ‘The house is empty’ changes the inference from being formal to being material. When I learn to say of a house that it’s empty, I know that it’s defined to mean that they’re aren’t people in the house. I must learn that the presence of doors within doesn’t count. And I’d better know that Jane is a person. I wouldn’t have concluded from the house’s emptiness that just anything is not in the house.</p>\r\n\r\n<p>Another case of claimed material inference, one given by Sellars himself, is that from ‘This is red’ to ‘This is colored’. On p. 17 of <a href=\"https://oxford.universitypressscholarship.com/view/10.1093/oso/9780198853404.001.0001/oso-9780198853404-chapter-1\">Chapter 1</a> of my book, which OUP has now made available, I sketch a type-theoretic account. To be able to use such language, to know that there is a type of colours, that red is a colour, that some things have a colour, when all this is written type-theoretically, I don’t see why we can’t take it too as a piece of formal inference. </p>\r\n\r\n      </div>\r\n    ","descriptionType":"xhtml","publishedDate":"Sun, 23 Aug 2020 10:20:07 +0000","feedId":8914,"bgimg":"https://golem.ph.utexas.edu/~distler/blog/images/MathML.png","linkMd5":"e42f8188d8c543f540fa0619a5a454fb","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn27@2020_2/2020/08/25/00-09-56-839_3e27bbc676e8d5d2.webp","destWidth":65,"destHeight":36,"sourceBytes":3238,"destBytes":1426,"author":"david","articleImgCdnMap":{"https://golem.ph.utexas.edu/~distler/blog/images/MathML.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn27@2020_2/2020/08/25/00-09-56-839_3e27bbc676e8d5d2.webp"},"publishedOrCreatedDate":1598314179340},{"createdTime":"2020-08-25 08:09:39","updatedTime":"2020-08-25 08:09:39","title":"Pseudocommutative 2-Monads","link":"https://golem.ph.utexas.edu/category/2020/08/pseudocommutative_2monads.html","description":"\r\n      <div xmlns=\"http://www.w3.org/1999/xhtml\">\r\n<div><a href=\"http://golem.ph.utexas.edu/~distler/blog/mathml.html\"><img class=\"mathlogo\" src=\"https://golem.ph.utexas.edu/~distler/blog/images/MathML.png\" alt=\"MathML-enabled post (click for more details).\" title=\"MathML-enabled post (click for details).\" /></a></div>\r\n\r\n<p>We can think of a monad on <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>Set</mi></mrow><annotation encoding=\"application/x-tex\">Set</annotation></semantics></math> as describing some sort of algebraic gadget equipped with a bunch of operations obeying a bunch of equations.   This works very nicely if we restrict attention to <a href=\"https://ncatlab.org/nlab/show/finitary+monad\">finitary monads</a>, which correspond to <a href=\"https://ncatlab.org/nlab/show/Lawvere+theory\">Lawvere theories</a>: then the operations I’m talking about are all ‘finitary’, taking some finite set of inputs.  But we can also generalize to higher cardinalities: for any cardinal α, a <a href=\"https://ncatlab.org/nlab/show/rank#rank_of_a_functor\">monad of rank α</a> on <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>Set</mi></mrow><annotation encoding=\"application/x-tex\">Set</annotation></semantics></math> describes some sort of gadget with operations of arity at most α.  </p>\r\n\r\n<p>There are nastier gadgets that have no upper bound on the arity of their operations, like complete semilattices, also known as <a href=\"https://ncatlab.org/nlab/show/SupLat#properties\">suplattices</a>.  The point is that in such a thing, <em>any</em> subset has a least upper bound, no matter how large its cardinality.  These are algebras of a ‘monad without rank’ — which makes me think of someone in the army who is not a private, not a lieutenant, not a colonel, not a general….</p>\r\n\r\n<p>Anyway, this viewpoint on monads helps me get a feeling for <a href=\"https://ncatlab.org/nlab/show/commutative+monad\">commutative monads</a>: these describe algebraic gadgets with a bunch of operations <em>that all commute with each other</em>, and perhaps obey other equations as well.</p>\r\n\r\n<p>I want to ask some questions about a categorified version of this story, involving <a href=\"https://www.sciencedirect.com/science/article/pii/S0022404902001330\">pseudocommutative 2-monads</a>.  </p>\r\n\r\n<p>But first: what does it mean for an <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math>-ary operation to commute with an <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">m</annotation></semantics></math>-ary operation?</p>\r\n\r\n<div><a href=\"http://golem.ph.utexas.edu/~distler/blog/mathml.html\"><img class=\"mathlogo\" src=\"https://golem.ph.utexas.edu/~distler/blog/images/MathML.png\" alt=\"MathML-enabled post (click for more details).\" title=\"MathML-enabled post (click for details).\" /></a></div>\r\n\r\n<p>I think an example makes it clear: if we’ve got an 2-ary operation <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math> and a 3-ary operation <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">g</annotation></semantics></math> we say they commute if</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mi>g</mi><mo stretchy=\"false\">(</mo><mi>u</mi><mo>,</mo><mi>v</mi><mo>,</mo><mi>w</mi><mo stretchy=\"false\">)</mo><mo>,</mo><mi>g</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo>,</mo><mi>y</mi><mo>,</mo><mi>z</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mo>=</mo><mi>g</mi><mo stretchy=\"false\">(</mo><mi>f</mi><mo stretchy=\"false\">(</mo><mi>u</mi><mo>,</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>,</mo><mi>f</mi><mo stretchy=\"false\">(</mo><mi>v</mi><mo>,</mo><mi>y</mi><mo stretchy=\"false\">)</mo><mo>,</mo><mi>f</mi><mo stretchy=\"false\">(</mo><mi>w</mi><mo>,</mo><mi>z</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f(g(u,v,w),g(x,y,z))=g(f(u,x),f(v,y),f(w,z))</annotation></semantics></math></p>\r\n\r\n<p>for all <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>u</mi><mo>,</mo><mi>v</mi><mo>,</mo><mi>w</mi><mo>,</mo><mi>x</mi><mo>,</mo><mi>y</mi><mo>,</mo><mi>z</mi></mrow><annotation encoding=\"application/x-tex\">u,v,w,x,y,z</annotation></semantics></math>.    Here you should think of the variables as arranged in a <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mn>2</mn><mo>×</mo><mn>3</mn></mrow><annotation encoding=\"application/x-tex\">2 \\times 3</annotation></semantics></math> array:</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mtable displaystyle=\"false\" rowspacing=\"0.5ex\" columnalign=\"center center center\"><mtr><mtd><mi>u</mi></mtd> <mtd><mi>v</mi></mtd> <mtd><mi>w</mi></mtd></mtr> <mtr><mtd><mi>x</mi></mtd> <mtd><mi>y</mi></mtd> <mtd><mi>z</mi></mtd></mtr></mtable></mrow><annotation encoding=\"application/x-tex\"> \\begin{array}{ccc}\r\nu &amp; v &amp; w \\\\\r\nx &amp; y &amp; z\r\n\\end{array}\r\n</annotation></semantics></math></p>\r\n\r\n<p>The equation says we can either apply <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">g</annotation></semantics></math> to each of the  rows and then apply <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math>, or apply <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math> to each of the columns and then apply <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">g</annotation></semantics></math>.   This becomes even more beautiful if we draw it using trees in 3 dimensions, and it’s almost criminal of me not to draw the picture, but nobody is paying me to write blog articles.</p>\r\n\r\n<p>Notice that if <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math> and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">g</annotation></semantics></math> are both 1-ary operations, we get commutativity in a very standard sense:</p>\r\n\r\n<p><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>f</mi><mo>∘</mo><mi>g</mi><mo>=</mo><mi>g</mi><mo>∘</mo><mi>f</mi></mrow><annotation encoding=\"application/x-tex\"> f \\circ g = g \\circ f </annotation></semantics></math></p>\r\n\r\n<p>Any monoid <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math> gives a monad whose operations are all 1-ary, corresponding to multiplication by elements of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math>.   The algebras of this monad are sets acted on by <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math>.   And this monad is commutative iff <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math> is commtutative!  </p>\r\n\r\n<p>But more interestingly, any ring <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math> gives a monad whose algebras are <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math>-modules, and this monad is commutative iff <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math> is commutative! </p>\r\n\r\n<p>Another example: the monad whose algebras are commutative monoids is a commutative monad.   </p>\r\n\r\n<p>Cool, huh?  If you want to intimidate your colleagues, just casually say this as if it were obvious: “the commutative monoid monad is a commutative monad”.  But don’t do this if you want a raise.</p>\r\n\r\n<p>One cool fact is that for any commutative monad <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">T</annotation></semantics></math> on <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>Set</mi></mrow><annotation encoding=\"application/x-tex\">Set</annotation></semantics></math> the category <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>T</mi><mi mathvariant=\"normal\">alg</mi></mrow><annotation encoding=\"application/x-tex\">T\\mathrm{alg}</annotation></semantics></math> is a symmetric monoidal closed category!  So, there’s a way to <a href=\"https://ncatlab.org/nlab/show/tensor+product+of+algebras+over+a+commutative+monad\">tensor <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">T</annotation></semantics></math>-algebras</a>, and also an <a href=\"https://ncatlab.org/nlab/show/internal+hom+of+algebras+over+a+commutative+monad\">internal hom</a>: that is, if <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math> and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">B</annotation></semantics></math> are <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">T</annotation></semantics></math>-algebras, the set of <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">T</annotation></semantics></math>-algebra maps from <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math> to <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">B</annotation></semantics></math>, say <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>A</mi><mo>,</mo><mi>B</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[A,B]</annotation></semantics></math>, is also a <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">T</annotation></semantics></math>-algebra.</p>\r\n\r\n<p><strong>Puzzle 1.</strong>   A grad student of mine assures me that if <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">S</annotation></semantics></math> and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">T</annotation></semantics></math> are commutative monads on <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>Set</mi></mrow><annotation encoding=\"application/x-tex\">Set</annotation></semantics></math>, then the composite <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>S</mi><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">S T</annotation></semantics></math> is a commutative monad too.  I’m having trouble finding this fact.   Is it  really true?   Is this for <em>some</em> distributive law or <em>any</em> distributive law?   (It may work for <em>some special</em> distributive law.)  </p>\r\n\r\n<p>But I really want categorified analogues of these facts, if possible.  When we look at 2-monad on <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>Cat</mi></mrow><annotation encoding=\"application/x-tex\">Cat</annotation></semantics></math> there are various amounts of commutativity it could have.  I think I’m interested in what Hyland and Power call a ‘symmetric pseudocommutative 2-monad’:</p>\r\n\r\n<ul>\r\n<li>Martin Hyland and John Power, <a href=\"https://www.sciencedirect.com/science/article/pii/S0022404902001330\">Pseudo-commutative monads and pseudo-closed 2-categories</a>, \r\n<em>Journal of Pure and Applied Algebra</em> <strong>175</strong> (2002), 141–185.</li>\r\n</ul>\r\n\r\n<p>Here ‘pseudo’ means some commutativity condition holds only up to isomorphism, and ‘symmetric’ means this isomorphism is better than a mere braiding: it’s more like what you see in a symmetric monoidal category.  The example to keep in mind is where <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">T</annotation></semantics></math> is the 2-monad for symmetric monoidal categories (not necessarily strict).   This is not commutative, but it is symmetric pseudocommutative.</p>\r\n\r\n<p>These authors <em>almost</em> show that for any symmetric pseudocommutative 2-monad <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">T</annotation></semantics></math> on <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>Cat</mi></mrow><annotation encoding=\"application/x-tex\">Cat</annotation></semantics></math> the 2-category <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>T</mi><mi mathvariant=\"normal\">alg</mi></mrow><annotation encoding=\"application/x-tex\">T\\mathrm{alg}</annotation></semantics></math> is a symmetric monoidal closed 2-category.   But they don’t say that.</p>\r\n\r\n<p>For starters, they define <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>T</mi><mi mathvariant=\"normal\">alg</mi></mrow><annotation encoding=\"application/x-tex\">T\\mathrm{alg}</annotation></semantics></math> to be the 2-category of strict algebras, ‘pseudo maps’ between these,  and some sort of 2-morphisms between those.   That’s good.  For example, if <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">T</annotation></semantics></math> is the 2-monad for symmetric monoidal categories, its strict algebras are symmetric monoidal categories and the pseudo maps between these are symmetric strong monoidal functors.   </p>\r\n\r\n<p>They prove a number of things:</p>\r\n\r\n<p><strong>Proposition 18.</strong>  Given a symmetric pseudocommutative 2-monad <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">T</annotation></semantics></math> on <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>Cat</mi></mrow><annotation encoding=\"application/x-tex\">Cat</annotation></semantics></math>, <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>T</mi><mi mathvariant=\"normal\">Alg</mi></mrow><annotation encoding=\"application/x-tex\">T\\mathrm{Alg}</annotation></semantics></math> is a symmetric 2-multicategory.</p>\r\n\r\n<p>A <a href=\"https://ncatlab.org/nlab/show/symmetric+multicategory\">symmetric multicategory</a> is like a symmetric monoidal category where given two objects <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">a</annotation></semantics></math> and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">b</annotation></semantics></math> you don’t actually have an object <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>a</mi><mo>⊗</mo><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">a \\otimes b</annotation></semantics></math>: you just know what the maps out of this object would be.   They define a categorified version of this, a ‘symmetric 2-multicategory’.</p>\r\n\r\n<p><strong>Proposition 22.</strong> Given a pseudocommutative 2-monad <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">T</annotation></semantics></math> on <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>Cat</mi></mrow><annotation encoding=\"application/x-tex\">Cat</annotation></semantics></math>, <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>T</mi><mi mathvariant=\"normal\">Alg</mi></mrow><annotation encoding=\"application/x-tex\">T\\mathrm{Alg}</annotation></semantics></math> is a pseudoclosed 2-category.</p>\r\n\r\n<p>A <a href=\"https://ncatlab.org/nlab/show/closed+category\">closed category</a> is a category where for any two objects <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">a</annotation></semantics></math> and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">b</annotation></semantics></math> you have a ‘hom-object’ <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>a</mi><mo>,</mo><mi>b</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[a,b]</annotation></semantics></math>.   <a href=\"https://ncatlab.org/nlab/show/closed+monoidal+category\">Closed monoidal categories</a> are the most famous kind, but you don’t need a tensor product in a closed category.  Hyland and Power work with a categorified version of closed categories, ‘pseudoclosed 2-categories’.</p>\r\n\r\n<p>Then the punchline:</p>\r\n\r\n<p><strong>Theorem 13.</strong>  Given a symmetric pseudocommutative 2-monad <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">T</annotation></semantics></math> on <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>Cat</mi></mrow><annotation encoding=\"application/x-tex\">Cat</annotation></semantics></math>, <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>T</mi><mi mathvariant=\"normal\">Alg</mi></mrow><annotation encoding=\"application/x-tex\">T\\mathrm{Alg}</annotation></semantics></math> is a symmetric pseudoclosed 2-category.</p>\r\n\r\n<p>Nice, but still no tensor product of objects!</p>\r\n\r\n<p>We get the tensor product of objects here:</p>\r\n\r\n<p><strong>Theorem 14.</strong>   Given a finitary pseudocommutative 2-monad <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">T</annotation></semantics></math> on <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>Cat</mi></mrow><annotation encoding=\"application/x-tex\">Cat</annotation></semantics></math>, <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>T</mi><mi mathvariant=\"normal\">Alg</mi></mrow><annotation encoding=\"application/x-tex\">T\\mathrm{Alg}</annotation></semantics></math> is a pseudomonoidal pseudoclosed 2-category.</p>\r\n\r\n<p>Now they’re assuming <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">T</annotation></semantics></math> is finitary, which is a bit sad even though it covers our go-to example of the monad for symmetric monoidal categories.   ‘Pseudomonoidal 2-category’  means some sort of weak monoidal 2-category; I’m not sure which but I’m sure I’ll be happy with it when I find out.   </p>\r\n\r\n<p>What makes me nervous is that they never say they’re getting a symmetric monoidal closed 2-category or — more likely for them — ‘symmetric pseudomonoidal pseudoclosed 2-category’. </p>\r\n\r\n<p>Maybe it’s obvious to experts that a symmetric 2-multicategory that’s also a symmetric pseudoclosed 2-category and a pseudomonoidal pseudoclosed 2-category is a symmetric pseudomonoidal pseudoclosed 2-category.   But do I really have to check this myself?  </p>\r\n\r\n<p>Has there been more work on this topic?</p>\r\n\r\n<p>By the way, what do I really want?  I want things like this.  Let <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">P</annotation></semantics></math> be the pseudomonad for categories with chosen finite colimits and <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">S</annotation></semantics></math> our friend the 2-monad for symmetric monoidal categories.  Then I’d be delighted if someone had done this:</p>\r\n\r\n<p><strong>Puzzle 2.</strong>  Show that <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>P</mi><mi mathvariant=\"normal\">Alg</mi></mrow><annotation encoding=\"application/x-tex\">P\\mathrm{Alg}</annotation></semantics></math> is some sort of symmetric monoidal closed 2-category: sprinkle on adjectives like ‘pseudo’ to taste.</p>\r\n\r\n<p><strong>Puzzle 3.</strong>  Show the same for <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>S</mi><mi mathvariant=\"normal\">Alg</mi></mrow><annotation encoding=\"application/x-tex\">S\\mathrm{Alg}</annotation></semantics></math>.</p>\r\n\r\n<p><strong>Puzzle 4.</strong>  Show the same for <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>P</mi><mi>S</mi><mi mathvariant=\"normal\">Alg</mi></mrow><annotation encoding=\"application/x-tex\">P S\\mathrm{Alg}</annotation></semantics></math>, where <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"inline\"><semantics><mrow><mi>P</mi><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">P S</annotation></semantics></math> is made into a 2-monad in the hopefully ‘obvious’ way, with tensor products distributing over finite colimits (up to coherent isomorphism).</p>\r\n\r\n<p>Puzzle 4 makes me wonder if a composite of symmetric commutative pseudomonads is again a thing of the same sort, but I’d be perfectly content if some god came down from the sky and solved the puzzle in any other way.</p>\r\n\r\n      </div>\r\n    ","descriptionType":"xhtml","publishedDate":"Tue, 11 Aug 2020 20:29:39 +0000","feedId":8914,"bgimg":"https://golem.ph.utexas.edu/~distler/blog/images/MathML.png","linkMd5":"d04e9ecaf00fb44f7184e2999c3670ee","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn27@2020_2/2020/08/25/00-09-56-839_3e27bbc676e8d5d2.webp","destWidth":65,"destHeight":36,"sourceBytes":3238,"destBytes":1426,"author":"john","articleImgCdnMap":{"https://golem.ph.utexas.edu/~distler/blog/images/MathML.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn27@2020_2/2020/08/25/00-09-56-839_3e27bbc676e8d5d2.webp"},"publishedOrCreatedDate":1598314179367}],"record":{"createdTime":"2020-08-25 08:09:39","updatedTime":"2020-08-25 08:09:39","feedId":8914,"fetchDate":"Tue, 25 Aug 2020 00:09:39 +0000","fetchMs":834,"handleMs":1815,"totalMs":25177,"newArticles":0,"totalArticles":15,"status":1,"type":0,"ip":"54.211.103.89","hostName":"us-009.herokuapp.com","requestId":"afaf603a1f914847a228e8919a36cc52_8914","contentType":"application/atom+xml","totalBytes":1895754,"bgimgsTotal":15,"bgimgsGithubTotal":15,"articlesImgsTotal":28,"articlesImgsGithubTotal":28,"successGithubMap":{"myreaderx8":1,"myreaderx14":1,"myreaderx15":1,"myreaderx7":1,"myreaderx6":1,"myreaderx16":1,"myreaderx4":1,"myreaderx10":1,"myreaderx32":1,"myreaderx3":1,"myreaderx33":1,"myreaderx11":1,"myreaderx12":1,"myreaderx2":1,"myreaderx13":1,"myreaderx1":1,"myreaderx30":1,"myreaderx31":1,"myreaderx18":1,"myreaderx19":1,"myreaderx":1,"myreaderx25":1,"myreaderx27":1,"myreaderx21":1,"myreaderx22":1,"myreaderx24":1,"myreaderx5oss":1,"myreaderx29":1},"failGithubMap":{}},"feed":{"createdTime":"2020-08-25 04:34:43","updatedTime":"2020-08-25 04:34:43","id":8914,"name":"The n-Category Café","url":"http://golem.ph.utexas.edu/category/atom10.xml","subscriber":null,"website":null,"icon":"https://golem.ph.utexas.edu/category/images/favicon.ico","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx65/cdn64@2020_3/2020/08/25/00-09-38-527_230f766ab1a82d3d.ico","description":"A group blog on math, physics and philosophy","weekly":null,"link":"https://golem.ph.utexas.edu"},"noPictureArticleList":[],"tmpCommonImgCdnBytes":1426,"tmpBodyImgCdnBytes":1894328,"tmpBgImgCdnBytes":0,"extra4":{"start":1598314176658,"total":0,"statList":[{"spend":1138,"msg":"获取xml内容"},{"spend":1815,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":3,"msg":"修正封面图上传失败重新上传"},{"spend":4068,"msg":"正文链接上传到cdn"}]},"extra5":28,"extra6":28,"extra7ImgCdnFailResultVector":[],"extra10_invalidATagHrefValue":{"https://golem.ph.utexas.edu/category/2020/07/selfreferential_algebraic_stru.html_(https://en.wikipedia.org/wiki/Racks_and_quandles":"https://golem.ph.utexas.edu/category/2020/07/(https://en.wikipedia.org/wiki/Racks_and_quandles"},"extra111_proxyServerAndStatMap":{"http://us-039.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-53.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://europe65.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-002.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://europe61.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-015.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-022.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-011.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-006.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://europe69.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://europe-23.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-031.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-019.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://europe-57.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-010.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-027.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://golem.ph.utexas.edu/~distler/blog/images/MathML.png","sourceStatusCode":200,"destWidth":65,"destHeight":36,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn27@2020_2/2020/08/25/00-09-56-839_3e27bbc676e8d5d2.webp","sourceBytes":3238,"destBytes":1426,"targetWebpQuality":75,"feedId":8914,"totalSpendMs":1909,"convertSpendMs":3,"createdTime":"2020-08-25 08:09:55","host":"europe61*","referer":"https://golem.ph.utexas.edu/category/2020/08/pseudocommutative_2monads.html","linkMd5ListStr":"640905b7b29c4b88755437bd6d0ba4de,640905b7b29c4b88755437bd6d0ba4de,d827c13f3c587d017c33329f63496f20,d827c13f3c587d017c33329f63496f20,656622f887cc74d036ed171b1a24a875,656622f887cc74d036ed171b1a24a875,727a5d74f9f31719415d8a3f9490963e,727a5d74f9f31719415d8a3f9490963e,e6aa05b6eca02ce6407aff68f5854a0e,e6aa05b6eca02ce6407aff68f5854a0e,9b371e7ad1ad68768c35526347d1084b,9b371e7ad1ad68768c35526347d1084b,d344606c7abc090e0d478d90d714108b,d344606c7abc090e0d478d90d714108b,5c061b9729ceb2e7e2a64fcbf335400d,d8c3b728a264aa57d332425d688c9855,d8c3b728a264aa57d332425d688c9855,19eb521d9304d6371c3baf654500a1fd,19eb521d9304d6371c3baf654500a1fd,349dc521827aade68f881a68ac1a739c,349dc521827aade68f881a68ac1a739c,26dc30ea3ec7b38d13093ad65b10ca4c,26dc30ea3ec7b38d13093ad65b10ca4c,097fb03f22531a9b08287545ddd151b4,097fb03f22531a9b08287545ddd151b4,e42f8188d8c543f540fa0619a5a454fb,e42f8188d8c543f540fa0619a5a454fb,d04e9ecaf00fb44f7184e2999c3670ee,d04e9ecaf00fb44f7184e2999c3670ee,640905b7b29c4b88755437bd6d0ba4de,d827c13f3c587d017c33329f63496f20,656622f887cc74d036ed171b1a24a875,727a5d74f9f31719415d8a3f9490963e,e6aa05b6eca02ce6407aff68f5854a0e,9b371e7ad1ad68768c35526347d1084b,d344606c7abc090e0d478d90d714108b,5c061b9729ceb2e7e2a64fcbf335400d,d8c3b728a264aa57d332425d688c9855,19eb521d9304d6371c3baf654500a1fd,349dc521827aade68f881a68ac1a739c,26dc30ea3ec7b38d13093ad65b10ca4c,097fb03f22531a9b08287545ddd151b4,e42f8188d8c543f540fa0619a5a454fb,d04e9ecaf00fb44f7184e2999c3670ee","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"3.2 KB","destSize":"1.4 KB","compressRate":"44%"},{"code":1,"isDone":false,"source":"https://johncarlosbaez.files.wordpress.com/2020/08/span.png","sourceStatusCode":200,"destWidth":385,"destHeight":214,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn55@2020_6/2020/08/25/00-09-57-864_cdbf344309f93631.webp","sourceBytes":5146,"destBytes":6632,"targetWebpQuality":75,"feedId":8914,"totalSpendMs":833,"convertSpendMs":6,"createdTime":"2020-08-25 08:09:57","host":"us-031*","referer":"https://golem.ph.utexas.edu/category/2020/08/open_systems_in_classical_mech.html","linkMd5ListStr":"d8c3b728a264aa57d332425d688c9855","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"5 KB","destSize":"6.5 KB","compressRate":"128.9%"},{"code":1,"isDone":false,"source":"https://johncarlosbaez.files.wordpress.com/2020/08/composite_span.png","sourceStatusCode":200,"destWidth":765,"destHeight":388,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn4@2020_3/2020/08/25/00-09-57-941_c00276993e00e104.webp","sourceBytes":26098,"destBytes":13132,"targetWebpQuality":75,"feedId":8914,"totalSpendMs":789,"convertSpendMs":12,"createdTime":"2020-08-25 08:09:57","host":"us-015*","referer":"https://golem.ph.utexas.edu/category/2020/08/open_systems_in_classical_mech.html","linkMd5ListStr":"d8c3b728a264aa57d332425d688c9855","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"25.5 KB","destSize":"12.8 KB","compressRate":"50.3%"},{"code":1,"isDone":false,"source":"https://johncarlosbaez.files.wordpress.com/2020/08/two_spans.png","sourceStatusCode":200,"destWidth":717,"destHeight":391,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn31@2020_5/2020/08/25/00-09-57-904_1076c9ef59773266.webp","sourceBytes":16370,"destBytes":21360,"targetWebpQuality":75,"feedId":8914,"totalSpendMs":940,"convertSpendMs":62,"createdTime":"2020-08-25 08:09:57","host":"us-039*","referer":"https://golem.ph.utexas.edu/category/2020/08/open_systems_in_classical_mech.html","linkMd5ListStr":"d8c3b728a264aa57d332425d688c9855","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"16 KB","destSize":"20.9 KB","compressRate":"130.5%"},{"code":1,"isDone":false,"source":"https://johncarlosbaez.files.wordpress.com/2020/08/span_2.png","sourceStatusCode":200,"destWidth":421,"destHeight":227,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn78@2020_3/2020/08/25/00-09-57-988_a68796a2e041c3fa.webp","sourceBytes":12957,"destBytes":8164,"targetWebpQuality":75,"feedId":8914,"totalSpendMs":915,"convertSpendMs":93,"createdTime":"2020-08-25 08:09:57","host":"us-022*","referer":"https://golem.ph.utexas.edu/category/2020/08/open_systems_in_classical_mech.html","linkMd5ListStr":"d8c3b728a264aa57d332425d688c9855","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"12.7 KB","destSize":"8 KB","compressRate":"63%"},{"code":1,"isDone":false,"source":"http://math.ucr.edu/home/baez/mathematical/ACT2020/DiLavore-Li/negation.png","sourceStatusCode":200,"destWidth":840,"destHeight":275,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn36@2020_1/2020/08/25/00-09-58-057_acc61791dfda340f.webp","sourceBytes":17605,"destBytes":7830,"targetWebpQuality":75,"feedId":8914,"totalSpendMs":1074,"convertSpendMs":51,"createdTime":"2020-08-25 08:09:57","host":"us-027*","referer":"https://golem.ph.utexas.edu/category/2020/07/linear_logic_flavoured_composi.html","linkMd5ListStr":"9b371e7ad1ad68768c35526347d1084b","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"17.2 KB","destSize":"7.6 KB","compressRate":"44.5%"},{"code":1,"isDone":false,"source":"https://johncarlosbaez.files.wordpress.com/2020/08/spring.png","sourceStatusCode":200,"destWidth":333,"destHeight":67,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn47@2020_3/2020/08/25/00-09-58-044_e671e2e6696ffaac.webp","sourceBytes":3497,"destBytes":3876,"targetWebpQuality":75,"feedId":8914,"totalSpendMs":1051,"convertSpendMs":17,"createdTime":"2020-08-25 08:09:57","host":"europe65*","referer":"https://golem.ph.utexas.edu/category/2020/08/open_systems_in_classical_mech.html","linkMd5ListStr":"d8c3b728a264aa57d332425d688c9855","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"3.4 KB","destSize":"3.8 KB","compressRate":"110.8%"},{"code":1,"isDone":false,"source":"http://math.ucr.edu/home/baez/networks/coarse/coarse-graining_open_markov_processes.png","sourceStatusCode":200,"destWidth":1076,"destHeight":637,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn96@2020_2/2020/08/25/00-09-58-130_05558a3dc32024fc.webp","sourceBytes":49636,"destBytes":39866,"targetWebpQuality":75,"feedId":8914,"totalSpendMs":1225,"convertSpendMs":55,"createdTime":"2020-08-25 08:09:57","host":"us-039*","referer":"https://golem.ph.utexas.edu/category/2020/08/open_systems_a_double_categori.html","linkMd5ListStr":"d344606c7abc090e0d478d90d714108b","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"48.5 KB","destSize":"38.9 KB","compressRate":"80.3%"},{"code":1,"isDone":false,"source":"https://johncarlosbaez.files.wordpress.com/2020/08/two_spans_2.png","sourceStatusCode":200,"destWidth":765,"destHeight":388,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn67@2020_6/2020/08/25/00-09-58-052_0a798a4df04cb5ac.webp","sourceBytes":34689,"destBytes":20944,"targetWebpQuality":75,"feedId":8914,"totalSpendMs":1213,"convertSpendMs":18,"createdTime":"2020-08-25 08:09:57","host":"europe69*","referer":"https://golem.ph.utexas.edu/category/2020/08/open_systems_in_classical_mech.html","linkMd5ListStr":"d8c3b728a264aa57d332425d688c9855","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"33.9 KB","destSize":"20.5 KB","compressRate":"60.4%"},{"code":1,"isDone":false,"source":"http://math.ucr.edu/home/baez/mathematical/ACT2020/DiLavore-Li/product.png","sourceStatusCode":200,"destWidth":2892,"destHeight":711,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn75@2020_3/2020/08/25/00-09-58-283_fd0184ea926f96fc.webp","sourceBytes":175948,"destBytes":71544,"targetWebpQuality":75,"feedId":8914,"totalSpendMs":1371,"convertSpendMs":135,"createdTime":"2020-08-25 08:09:57","host":"us-011*","referer":"https://golem.ph.utexas.edu/category/2020/07/linear_logic_flavoured_composi.html","linkMd5ListStr":"9b371e7ad1ad68768c35526347d1084b","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"171.8 KB","destSize":"69.9 KB","compressRate":"40.7%"},{"code":1,"isDone":false,"source":"https://johncarlosbaez.files.wordpress.com/2020/06/classical_and_quantum_mechanics.png","sourceStatusCode":200,"destWidth":1045,"destHeight":395,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn20@2020_1/2020/08/25/00-09-58-339_1be008d02b91be35.webp","sourceBytes":57703,"destBytes":51318,"targetWebpQuality":75,"feedId":8914,"totalSpendMs":963,"convertSpendMs":23,"createdTime":"2020-08-25 08:09:58","host":"us-031*","referer":"https://golem.ph.utexas.edu/category/2020/06/getting_to_the_bottom_of_noeth.html","linkMd5ListStr":"640905b7b29c4b88755437bd6d0ba4de","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"56.4 KB","destSize":"50.1 KB","compressRate":"88.9%"},{"code":1,"isDone":false,"source":"http://math.ucr.edu/home/baez/mathematical/ACT2020/DiLavore-Li/coproduct.png","sourceStatusCode":200,"destWidth":3368,"destHeight":716,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn63@2020_1/2020/08/25/00-09-58-418_d657813c2baca3c1.webp","sourceBytes":182518,"destBytes":73254,"targetWebpQuality":75,"feedId":8914,"totalSpendMs":1529,"convertSpendMs":140,"createdTime":"2020-08-25 08:09:57","host":"us-006*","referer":"https://golem.ph.utexas.edu/category/2020/07/linear_logic_flavoured_composi.html","linkMd5ListStr":"9b371e7ad1ad68768c35526347d1084b","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"178.2 KB","destSize":"71.5 KB","compressRate":"40.1%"},{"code":1,"isDone":false,"source":"http://math.ucr.edu/home/baez/mathematical/ACT2020/DiLavore-Li/exponential.png","sourceStatusCode":200,"destWidth":2862,"destHeight":502,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn82@2020_5/2020/08/25/00-09-58-427_12b9746598014e09.webp","sourceBytes":118868,"destBytes":44140,"targetWebpQuality":75,"feedId":8914,"totalSpendMs":1564,"convertSpendMs":95,"createdTime":"2020-08-25 08:09:57","host":"us-010*","referer":"https://golem.ph.utexas.edu/category/2020/07/linear_logic_flavoured_composi.html","linkMd5ListStr":"9b371e7ad1ad68768c35526347d1084b","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"116.1 KB","destSize":"43.1 KB","compressRate":"37.1%"},{"code":1,"isDone":false,"source":"http://math.ucr.edu/home/baez/mathematical/ACT2020/DiLavore-Li/N-N1.png","sourceStatusCode":200,"destWidth":2442,"destHeight":478,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn43@2020_2/2020/08/25/00-09-58-119_f2f3d4b885710554.webp","sourceBytes":98579,"destBytes":40048,"targetWebpQuality":75,"feedId":8914,"totalSpendMs":1598,"convertSpendMs":64,"createdTime":"2020-08-25 08:09:57","host":"us-002*","referer":"https://golem.ph.utexas.edu/category/2020/07/linear_logic_flavoured_composi.html","linkMd5ListStr":"9b371e7ad1ad68768c35526347d1084b","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"96.3 KB","destSize":"39.1 KB","compressRate":"40.6%"},{"code":1,"isDone":false,"source":"http://math.ucr.edu/home/baez/mathematical/ACT2020/DiLavore-Li/morphism.png","sourceStatusCode":200,"destWidth":898,"destHeight":595,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn7@2020_3/2020/08/25/00-09-58-298_883675974fcae9cd.webp","sourceBytes":61486,"destBytes":26040,"targetWebpQuality":75,"feedId":8914,"totalSpendMs":1503,"convertSpendMs":22,"createdTime":"2020-08-25 08:09:57","host":"us-002*","referer":"https://golem.ph.utexas.edu/category/2020/07/linear_logic_flavoured_composi.html","linkMd5ListStr":"9b371e7ad1ad68768c35526347d1084b","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"60 KB","destSize":"25.4 KB","compressRate":"42.4%"},{"code":1,"isDone":false,"source":"http://math.ucr.edu/home/baez/mathematical/ACT2020/DiLavore-Li/nets.png","sourceStatusCode":200,"destWidth":2341,"destHeight":749,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn39@2020_4/2020/08/25/00-09-58-429_3f673ab392917a26.webp","sourceBytes":178640,"destBytes":78056,"targetWebpQuality":75,"feedId":8914,"totalSpendMs":1579,"convertSpendMs":295,"createdTime":"2020-08-25 08:09:57","host":"us-015*","referer":"https://golem.ph.utexas.edu/category/2020/07/linear_logic_flavoured_composi.html","linkMd5ListStr":"9b371e7ad1ad68768c35526347d1084b","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"174.5 KB","destSize":"76.2 KB","compressRate":"43.7%"},{"code":1,"isDone":false,"source":"http://math.ucr.edu/home/baez/mathematical/ACT2020/DiLavore-Li/units.png","sourceStatusCode":200,"destWidth":2238,"destHeight":274,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn100@2020_3/2020/08/25/00-09-58-596_b8f212c34be964c4.webp","sourceBytes":43861,"destBytes":21156,"targetWebpQuality":75,"feedId":8914,"totalSpendMs":1311,"convertSpendMs":184,"createdTime":"2020-08-25 08:09:58","host":"us-027*","referer":"https://golem.ph.utexas.edu/category/2020/07/linear_logic_flavoured_composi.html","linkMd5ListStr":"9b371e7ad1ad68768c35526347d1084b","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"42.8 KB","destSize":"20.7 KB","compressRate":"48.2%"},{"code":1,"isDone":false,"source":"http://math.ucr.edu/home/baez/mathematical/ACT2020/DiLavore-Li/firing.png","sourceStatusCode":200,"destWidth":2659,"destHeight":595,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn16@2020_5/2020/08/25/00-09-58-666_3ccfcf1458c1ddca.webp","sourceBytes":169742,"destBytes":63408,"targetWebpQuality":75,"feedId":8914,"totalSpendMs":1282,"convertSpendMs":62,"createdTime":"2020-08-25 08:09:58","host":"us-53*","referer":"https://golem.ph.utexas.edu/category/2020/07/linear_logic_flavoured_composi.html","linkMd5ListStr":"9b371e7ad1ad68768c35526347d1084b","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"165.8 KB","destSize":"61.9 KB","compressRate":"37.4%"},{"code":1,"isDone":false,"source":"http://math.ucr.edu/home/baez/mathematical/ACT2020/DiLavore-Li/N.png","sourceStatusCode":200,"destWidth":1113,"destHeight":478,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn28@2020_2/2020/08/25/00-09-58-776_f3489461d8e7cdc2.webp","sourceBytes":57121,"destBytes":22936,"targetWebpQuality":75,"feedId":8914,"totalSpendMs":1109,"convertSpendMs":42,"createdTime":"2020-08-25 08:09:58","host":"us-006*","referer":"https://golem.ph.utexas.edu/category/2020/07/linear_logic_flavoured_composi.html","linkMd5ListStr":"9b371e7ad1ad68768c35526347d1084b","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"55.8 KB","destSize":"22.4 KB","compressRate":"40.2%"},{"code":1,"isDone":false,"source":"http://math.ucr.edu/home/baez/ACT2020/ACT2020-Schedule.jpg","sourceStatusCode":200,"destWidth":3400,"destHeight":2200,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn51@2020_3/2020/08/25/00-09-58-590_de9da12244332446.webp","sourceBytes":553722,"destBytes":533708,"targetWebpQuality":75,"feedId":8914,"totalSpendMs":1969,"convertSpendMs":324,"createdTime":"2020-08-25 08:09:57","host":"us-53*","referer":"https://golem.ph.utexas.edu/category/2020/06/act2020_program.html","linkMd5ListStr":"d827c13f3c587d017c33329f63496f20","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"540.7 KB","destSize":"521.2 KB","compressRate":"96.4%"},{"code":1,"isDone":false,"source":"http://math.ucr.edu/home/baez/networks/coarse/composing_open_markov_processes.png","sourceStatusCode":200,"destWidth":1037,"destHeight":847,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn88@2020_3/2020/08/25/00-09-58-667_21c178bb9362456f.webp","sourceBytes":62456,"destBytes":41798,"targetWebpQuality":75,"feedId":8914,"totalSpendMs":2044,"convertSpendMs":56,"createdTime":"2020-08-25 08:09:57","host":"europe-23*","referer":"https://golem.ph.utexas.edu/category/2020/08/open_systems_a_double_categori.html","linkMd5ListStr":"d344606c7abc090e0d478d90d714108b","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"61 KB","destSize":"40.8 KB","compressRate":"66.9%"},{"code":1,"isDone":false,"source":"http://math.ucr.edu/home/baez/networks/coarse/tensoring_open_markov_processes.png","sourceStatusCode":200,"destWidth":1165,"destHeight":807,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn71@2020_5/2020/08/25/00-09-58-717_071216491079d762.webp","sourceBytes":62967,"destBytes":45122,"targetWebpQuality":75,"feedId":8914,"totalSpendMs":2102,"convertSpendMs":45,"createdTime":"2020-08-25 08:09:57","host":"europe-57*","referer":"https://golem.ph.utexas.edu/category/2020/08/open_systems_a_double_categori.html","linkMd5ListStr":"d344606c7abc090e0d478d90d714108b","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"61.5 KB","destSize":"44.1 KB","compressRate":"71.7%"},{"code":1,"isDone":false,"source":"http://math.ucr.edu/home/baez/mathematical/ACT2020/DiLavore-Li/negation-example.png","sourceStatusCode":200,"destWidth":3296,"destHeight":605,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn92@2020_4/2020/08/25/00-09-58-846_ab6f2474bcdc2091.webp","sourceBytes":160439,"destBytes":57206,"targetWebpQuality":75,"feedId":8914,"totalSpendMs":2224,"convertSpendMs":69,"createdTime":"2020-08-25 08:09:57","host":"europe61*","referer":"https://golem.ph.utexas.edu/category/2020/07/linear_logic_flavoured_composi.html","linkMd5ListStr":"9b371e7ad1ad68768c35526347d1084b","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"156.7 KB","destSize":"55.9 KB","compressRate":"35.7%"},{"code":1,"isDone":false,"source":"http://math.ucr.edu/home/baez/mathematical/ACT2020/DiLavore-Li/tensor.png","sourceStatusCode":200,"destWidth":3244,"destHeight":1354,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn60@2020_5/2020/08/25/00-09-59-033_432563df0ac5f6e5.webp","sourceBytes":328549,"destBytes":129782,"targetWebpQuality":75,"feedId":8914,"totalSpendMs":2303,"convertSpendMs":820,"createdTime":"2020-08-25 08:09:57","host":"us-019*","referer":"https://golem.ph.utexas.edu/category/2020/07/linear_logic_flavoured_composi.html","linkMd5ListStr":"9b371e7ad1ad68768c35526347d1084b","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"320.8 KB","destSize":"126.7 KB","compressRate":"39.5%"},{"code":1,"isDone":false,"source":"https://johncarlosbaez.files.wordpress.com/2020/08/standard_model_particles.png","sourceStatusCode":200,"destWidth":1000,"destHeight":957,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn32@2020_4/2020/08/25/00-09-58-804_ae110edaefe18e7c.webp","sourceBytes":230167,"destBytes":198534,"targetWebpQuality":75,"feedId":8914,"totalSpendMs":1825,"convertSpendMs":71,"createdTime":"2020-08-25 08:09:58","host":"europe69*","referer":"https://golem.ph.utexas.edu/category/2020/08/octonions_and_the_standard_mod_3.html","linkMd5ListStr":"e6aa05b6eca02ce6407aff68f5854a0e,097fb03f22531a9b08287545ddd151b4","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"224.8 KB","destSize":"193.9 KB","compressRate":"86.3%"},{"code":1,"isDone":false,"source":"https://www.maths.ed.ac.uk/~tl/images/squirrel.jpg","sourceStatusCode":200,"destWidth":600,"destHeight":450,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn24@2020_6/2020/08/25/00-09-59-647_61e71ee86660997a.webp","sourceBytes":73924,"destBytes":34394,"targetWebpQuality":75,"feedId":8914,"totalSpendMs":2161,"convertSpendMs":63,"createdTime":"2020-08-25 08:09:58","host":"us-019*","referer":"https://golem.ph.utexas.edu/category/2020/07/congratulations_john.html","linkMd5ListStr":"349dc521827aade68f881a68ac1a739c","githubUser":"myreaderx14","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"72.2 KB","destSize":"33.6 KB","compressRate":"46.5%"},{"code":1,"isDone":false,"source":"http://math.ucr.edu/home/baez/mathematical/ACT2020/DiLavore-Li/par.png","sourceStatusCode":200,"destWidth":3297,"destHeight":490,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn35@2020_4/2020/08/25/00-09-59-541_828a48c0b9995d6f.webp","sourceBytes":134821,"destBytes":55170,"targetWebpQuality":75,"feedId":8914,"totalSpendMs":2066,"convertSpendMs":77,"createdTime":"2020-08-25 08:09:58","host":"europe-57*","referer":"https://golem.ph.utexas.edu/category/2020/07/linear_logic_flavoured_composi.html","linkMd5ListStr":"9b371e7ad1ad68768c35526347d1084b","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"131.7 KB","destSize":"53.9 KB","compressRate":"40.9%"},{"code":1,"isDone":false,"source":"http://math.ucr.edu/home/baez/mathematical/ACT2020/DiLavore-Li/asynchrony.png","sourceStatusCode":200,"destWidth":4050,"destHeight":2145,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn11@2020_3/2020/08/25/00-09-59-955_0948f208d806b2df.webp","sourceBytes":493829,"destBytes":184910,"targetWebpQuality":75,"feedId":8914,"totalSpendMs":3670,"convertSpendMs":603,"createdTime":"2020-08-25 08:09:58","host":"europe65*","referer":"https://golem.ph.utexas.edu/category/2020/07/linear_logic_flavoured_composi.html","linkMd5ListStr":"9b371e7ad1ad68768c35526347d1084b","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"482.3 KB","destSize":"180.6 KB","compressRate":"37.4%"}],"successGithubMap":{"myreaderx8":1,"myreaderx14":1,"myreaderx15":1,"myreaderx7":1,"myreaderx6":1,"myreaderx16":1,"myreaderx4":1,"myreaderx10":1,"myreaderx32":1,"myreaderx3":1,"myreaderx33":1,"myreaderx11":1,"myreaderx12":1,"myreaderx2":1,"myreaderx13":1,"myreaderx1":1,"myreaderx30":1,"myreaderx31":1,"myreaderx18":1,"myreaderx19":1,"myreaderx":1,"myreaderx25":1,"myreaderx27":1,"myreaderx21":1,"myreaderx22":1,"myreaderx24":1,"myreaderx5oss":1,"myreaderx29":1},"failGithubMap":{}}