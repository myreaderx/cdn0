{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2021-05-27 23:33:38","updatedTime":"2021-05-27 23:33:38","title":"The Problem of Distributed Consensus","link":"https://writings.internal.stephenwolfram.com/?p=30155","description":"<span class=\"thumbnail\"><img width=\"128\" height=\"108\" src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/icon-distCons.png\" class=\"attachment-thumbnail wp-post-image\" alt=\"icon-distCons\" title=\"icon-distCons\" /></span>\n<style> a.twitch10 { display: inline-block; width: 200px; height: 168px; background: url(https://writings.stephenwolfram.com/data/uploads/2021/05/sw-livestream-dist-con.png) no-repeat; background-size: 200px; float: right; margin-left: 10px; } a.twitch10:hover { background-position: 0px -168px; background-color: inherit; cursor: pointer; } </style> \n<p style=\"font-size:15px;line-height:1.6;\"><a href=\"https://www.wolfram.com/events/distributed-consensus/\" target=\"_blank\" class=\"twitch10\"></a><i>In preparation for a conference entitled “<a href=\"https://www.wolfram.com/events/distributed-consensus/\">Distributed Consensus with Cellular Automata and Related Systems</a>” that we’re organizing with <a href=\"https://nkn.org/\" target=\"_blank\" rel=\"noopener\">NKN</a> (= “New Kind of Network”) I decided to explore the problem of distributed consensus using methods from <a href=\"https://www.wolframscience.com/nks/\">A New Kind of Science</a> (yes, NKN “rhymes” with NKS) as well as from the <a href=\"https://www.wolframphysics.org/\" target=\"_blank\" rel=\"noopener\">Wolfram Physics Project</a>.</i></p> \n<h2 id=\"a-simple-example\">A Simple Example</h2> \n<table class=\"InCell\"> \n <tbody> \n  <tr> \n   <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n    <div> \n     <img style=\"margin-bottom: 10px; margin-top: 5px\" class=\"\" src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514img1.png\" alt=\"\" title=\"\" width=\"548\" height=\"259\" /> \n    </div> \n    <div class=\"IFL\"> \n     <span class=\"close\" id=\"1_out\">&amp;#10005</span> \n     <pre class=\"text\" id=\"1_out_text\">BlockRandom[SeedRandom[77]; \n Module[{pts = \n    RandomPointConfiguration[HardcorePointProcess[0.09, 2, 2], \n      Rectangle[{0, 0}, {40, 40}]][\"Points\"], clrs}, \n  clrs = Table[\n    RandomChoice[{.65, .35} -&gt; {Hue[0.15, 0.72, 1], Hue[\n       0.98, 1, 0.8200000000000001]}], Length[pts]]; \n  Graphics[{EdgeForm[Gray], \n    Table[Style[Disk[pts[[n]]], clrs[[n]]], {n, \n      Range[Length[pts]]}]}]]]</pre> \n    </div> </td> \n  </tr> \n </tbody> \n</table> \n<p>Consider a collection of “nodes”, each one of two possible colors. We want to determine the majority or “consensus” color of the nodes, i.e. which color is the more common among the nodes. </p> \n<p>One obvious method to find this “majority” color is just sequentially to visit each node, and tally up all the colors. But it’s potentially much more efficient if we can use a distributed algorithm, where we’re running computations in parallel across the various nodes.<span id=\"more-30155\"></span></p> \n<p class=\"Text\">One possible algorithm works as follows. First connect each node to some number of neighbors. For now, we’ll just pick the neighbors according to the spatial layout of the nodes:</p> \n<table class=\"InCell\"> \n <tbody> \n  <tr> \n   <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n    <div> \n     <img style=\"margin-left: 5px\" class=\"\" src=\"https://writings.internal.stephenwolfram.com/data/uploads/2021/05/sw0514img4.png\" alt=\"\" title=\"\" width=\"256\" height=\"254\" /> \n    </div> \n    <div class=\"IFL\"> \n     <span class=\"close\" id=\"2_out\">&amp;#10005</span> \n     <pre class=\"text\" id=\"2_out_text\">ConsensusState[points_, colors_, nn_ : 5] := \n NearestNeighborGraph[points, nn, DirectedEdges -&gt; True, \n  DistanceFunction -&gt; EuclideanDistance, \n  VertexStyle -&gt; MapThread[Rule, {points, colors}], \n  VertexSize -&gt; 0.75, EdgeStyle -&gt; \\!\\(\\*\nTagBox[\nStyleBox[\"Gray\",\nShowSpecialCharacters-&gt;False,\nShowStringCharacters-&gt;True,\nNumberMarks-&gt;True],\nFullForm]\\)];\n\nBlockRandom[SeedRandom[77]; \n Module[{pts = \n    RandomPointConfiguration[HardcorePointProcess[0.09, 2, 2], \n      Rectangle[{0, 0}, {40, 40}]][\"Points\"], clrs},\n  clrs = \n   Table[\n    RandomChoice[{.65, .35} -&gt; {Hue[0.15, 0.72, 1], Hue[\n       0.98, 1, 0.8200000000000001]}], Length[pts]]; \n  ConsensusState[pts, clrs]]]</pre> \n    </div> </td> \n  </tr> \n </tbody> \n</table> \n<p>The algorithm works in a sequence of steps, at each step updating the color of each node to be whatever the “majority color” of its neighbors is. In the case shown, this procedure converges after a few steps to make all nodes have the “majority color” (which here is yellow)—or in effect “agree” on what the majority color is:</p> \n<table class=\"InCell\"> \n <tbody> \n  <tr> \n   <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n    <div> \n     <img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Cimg9.png\" alt=\"\" title=\"\" width=\"625\" height=\"\" /> \n    </div> \n    <div class=\"IFL\"> \n     <span class=\"close\" id=\"222_out\">&amp;#10005</span> \n     <pre class=\"text\" id=\"222_out_text\">ConsensusState[points_, colors_, nn_:5] := NearestNeighborGraph[points,nn,DirectedEdges-&gt;True, DistanceFunction-&gt;EuclideanDistance,VertexStyle -&gt; MapThread[Rule, {points, colors}], VertexSize -&gt; 0.75, EdgeStyle -&gt; Gray]\nNodeDependencies[points_, nn_:5]:= Table[n-&gt; Flatten[Map[Position[points, #]&amp;,VertexOutComponent[NearestNeighborGraph[points,nn, DirectedEdges -&gt; True, DistanceFunction-&gt;EuclideanDistance], points[[n]], {1}]]], {n, Range[Length[points]]}]\nSynchronousStepNewColors[dependencies_, colors_]:= \nFlatten[Map[With[{neighbors = Sort[Counts[Part[colors, Last[#]]], Greater]},\nIf[DuplicateFreeQ[Values[neighbors]],\nFirst[Keys[neighbors]], \ncolors[[First[#]]]]]&amp;, dependencies]]\nGraphicsGrid[Partition[BlockRandom[SeedRandom[77];Module[{pts = RandomPointConfiguration[HardcorePointProcess[0.09, 2, 2], Rectangle[{0, 0}, {40, 40}]][\"Points\"],clrslist, highlights},\nclrslist=NestList[SynchronousStepNewColors[NodeDependencies[pts], #]&amp;, Table[RandomChoice[{.65,.35}-&gt;{Yellow,Red}], Length[pts]], 7];\nMapIndexed[With[{colors = #}, Graph[ConsensusState[pts, colors],ImageSize-&gt;150]] &amp;,clrslist]\n]],4],ImageSize-&gt; 600]\n\n</pre> \n    </div> </td> \n  </tr> \n </tbody> \n</table> \n<p>This is a simple example of a distributed consensus algorithm in action. The challenge we’ll discuss here is to find the most efficient and robust such algorithms. </p> \n<h2 id=\"the-background\">The Background</h2> \n<p>In any decentralized system with computers, people, databases, measuring devices or anything else one can end up with different values or results at different “nodes”. But for all sorts of reasons one often wants to agree on a single “consensus” value, that one can for example use to “make a decision and go on to the next step”.</p> \n<p>Blockchains are one example of systems that need this kind of consensus to “finish each block”. Traditional blockchains achieve consensus through what amounts to a centralized mechanism (even though there are multiple “decentralized” copies of the blockchain that is produced). </p> \n<p>But there are now starting to be distributed analogs of blockchains that need distributed consensus algorithms. And the main inspiration for the algorithms being developed are <a href=\"https://www.wolframscience.com/nks/p23--how-do-simple-programs-behave/\">cellular automata</a> (and to a lesser extent spin systems in statistical mechanics).</p> \n<p>One issue is to make the algorithm as efficient as possible. Another is to make it as robust as possible, for example with respect to random noise—or malicious errors—introduced at or between nodes.</p> \n<p>The amount of random noise can be thought of as something like a temperature. And at least in certain cases there can be a “phase transition” so that below a certain “temperature” there can be zero effect on the consensus output—implying robustness to a certain level of noise. </p> \n<p>Some of what happens can be studied using methods from standard equilibrium statistical physics. But in most cases one has to take account of the time dependence or evolution of the system, leading to something like a probabilistic cellular automaton (closely related to directed percolation, dynamic spin systems, etc.). </p> \n<p>As I’ll <a href=\"https://writings.stephenwolfram.com/the-problem-of-distributed-consensus/#some-historical-background\">discuss below</a>, in the early days of computing, there was great interest in synthesizing reliable systems out of unreliable components. And by the 1960s there was study first of neural nets and then of cellular automata with probabilistic elements. And some surprising results were obtained that showed that cellular automata could be set up that would be robust with respect to a certain nonzero level of noise.</p> \n<p>One feature of cellular automata is that their elements are all assumed to be arranged in a definite array, and to be updated in parallel “at the same time” in a sequence of steps. For many practical applications, however, one instead wants elements that are connected in some kind of graph (that may even be dynamic), and that are in general updated asynchronously, in no particular order.</p> \n<p>The simple example we gave above is a <a href=\"https://www.wolframscience.com/nks/notes-5-5--cellular-automata-on-networks/\">graph cellular automaton</a>: the connections between elements are defined by a graph, but the updates are all done synchronously at each step. In the past, it’s been difficult to analyze the more general setup where there is no rigid notion of either space or time. But this is exactly the setup in our new <a href=\"https://www.wolframphysics.org/\" target=\"_blank\" rel=\"noopener\">Physics Project</a>, and so there’s now the potential to use its formalism and results (as well as intuition imported from physics) to make further progress. </p> \n<h2 id=\"deterministic-cellular-automata\">Deterministic Cellular Automata</h2> \n<p>To start getting some intuition for the problem of distributed consensus, let’s consider the following very simple setup. We have a line of cells, each with one of two possible colors. Then we update the colors of these cells in a sequence of steps, based on a local rule which depends on neighboring cells. This system is a one-dimensional cellular automaton—of the kind that I <a href=\"https://www.wolframscience.com/nks/notes-2-3--my-work-on-cellular-automata/\">started studying more than 40 years ago</a>.</p> \n<p>We imagine that the initial condition involves a fraction <em>p</em> of red cells. We want all the cells to turn red if <em>p</em> &gt; <span class=\"InlineFormula\"><img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514img36.png\" style=\"margin-top: -3px;\" width=\"7\" height=\"17\" align=\"absmiddle\" /></span>, and all of them to turn yellow if <em>p</em> &lt; <span class=\"InlineFormula\"><img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514img36.png\" style=\"margin-top: -3px;\" width=\"7\" height=\"17\" align=\"absmiddle\" /></span>. The most obvious rule that might achieve this would just replace each cell by the majority color in its neighborhood (<a href=\"https://www.wolframscience.com/nks/p225--the-emergence-of-order/\">rule 232</a> in my numbering scheme):</p> \n<table class=\"InCell\"> \n <tbody> \n  <tr> \n   <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n    <div> \n     <p><img style=\"margin-top: 5px; margin-bottom: -20px\" src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg12.png\" alt=\"\" title=\"\" width=\"472\" height=\"\" /> </p>\n    </div> \n    <div class=\"IFL\"> \n     <span class=\"close\" id=\"333_out\">&amp;#10005</span> \n     <pre class=\"text\" id=\"333_out_text\">RulePlot[CellularAutomaton[232], \n ColorRules -&gt; {0 -&gt; Hue[0.15, 0.72, 1], \n   1 -&gt; Hue[0.98, 1, 0.8200000000000001]}, MeshStyle -&gt; Orange]\n</pre> \n    </div> </td> \n  </tr> \n </tbody> \n</table> \n<p>Here’s what rule 232 does starting with 70% red cells in a “random configuration”:</p> \n<table class=\"InCell\"> \n <tbody> \n  <tr> \n   <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n    <div> \n     <img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg13.png\" alt=\"\" title=\"\" width=\"579\" height=\"\" /> \n    </div> \n    <div class=\"IFL\"> \n     <span class=\"close\" id=\"13_out\">&amp;#10005</span> \n     <pre class=\"text\" id=\"13_out_text\">BlockRandom[SeedRandom[567]; \n ArrayPlot[\n  CellularAutomaton[232, RandomChoice[{.7, .3} -&gt; {1, 0}, 120], 20], \n  Mesh -&gt; True, \n  ColorRules -&gt; {0 -&gt; Hue[0.15, 0.72, 1], \n    1 -&gt; Hue[0.98, 1, 0.8200000000000001]}, MeshStyle -&gt; Orange]]</pre> \n    </div> </td> \n  </tr> \n </tbody> \n</table> \n<p>As we can see, it manages to achieve a little “local consensus”, but ultimately it’s not successful at reaching a “global consensus” in which all cells are the same color. </p> \n<p>And we might imagine that there’d be no rule for a 1D deterministic cellular automaton that would lead to global consensus (or be able to solve the “density classification problem” of deciding whether the density of initial red cells is above or below 50%). But it turns out that this isn’t true. And for example in 1978 the following <a href=\"https://www.wolframscience.com/nks/notes-7-7--1d-discrete-transitions-in-cellular-automata/\">“radius 3” rule (operating on size-7 neighborhoods) was constructed</a> (and we’ll call it the “GKL rule”): </p> \n<table class=\"InCell\"> \n <tbody> \n  <tr> \n   <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n    <div> \n     <img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg14.png\" alt=\"\" width=\"422\" height=\"\" /> \n    </div> \n    <div class=\"IFL\"> \n     <span class=\"close\" id=\"14_out\">&amp;#10005</span> \n     <pre class=\"text\" id=\"14_out_text\">{l3_, _, l1_, c_, r1_, _, r3_} :&gt; \n If[If[c == 0, r1 + r3, l1 + l3] + c &gt;= 2, 1, 0]</pre> \n    </div> </td> \n  </tr> \n </tbody> \n</table> \n<p>Here’s what this rule does with 60% red cells:</p> \n<table class=\"InCell\"> \n <tbody> \n  <tr> \n   <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n    <div> \n     <img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg15.png\" alt=\"\" title=\"\" width=\"578\" height=\"\" /> \n    </div> \n    <div class=\"IFL\"> \n     <span class=\"close\" id=\"15_out\">&amp;#10005</span> \n     <pre class=\"text\" id=\"15_out_text\">BlockRandom[SeedRandom[567]; \n ArrayPlot[\n  CellularAutomaton[{FromDigits[\n     Tuples[{1, 0}, 7] /. {l3_, _, l1_, c_, r1_, _, r3_} :&gt; \n       If[If[c == 0, r1 + r3, l1 + l3] + c &gt;= 2, 1, 0], 2], 2, 3}, \n   RandomChoice[{.6, .4} -&gt; {1, 0}, 300], 60], \n  ColorRules -&gt; {0 -&gt; Hue[0.15, 0.72, 1], \n    1 -&gt; Hue[0.98, 1, 0.8200000000000001]}, Frame -&gt; False]]</pre> \n    </div> </td> \n  </tr> \n </tbody> \n</table> \n<p>And here’s what it does with 40% red cells:</p> \n<table class=\"InCell\"> \n <tbody> \n  <tr> \n   <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n    <div> \n     <img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg16.png\" alt=\"\" title=\"\" width=\"577\" height=\"\" /> \n    </div> \n    <div class=\"IFL\"> \n     <span class=\"close\" id=\"16_out\">&amp;#10005</span> \n     <pre class=\"text\" id=\"16_out_text\">BlockRandom[SeedRandom[569]; \n ArrayPlot[\n  CellularAutomaton[{FromDigits[\n     Tuples[{1, 0}, 7] /. {l3_, _, l1_, c_, r1_, _, r3_} :&gt; \n       If[If[c == 0, r1 + r3, l1 + l3] + c &gt;= 2, 1, 0], 2], 2, 3}, \n   RandomChoice[{.4, .6} -&gt; {1, 0}, 300], 60], \n  ColorRules -&gt; {0 -&gt; Hue[0.15, 0.72, 1], \n    1 -&gt; Hue[0.98, 1, 0.8200000000000001]}, Frame -&gt; False]]</pre> \n    </div> </td> \n  </tr> \n </tbody> \n</table> \n<p>In both these cases, the rule successfully achieves “global consensus”. And in fact one can prove that this rule will always do this, at least after sufficiently many steps. Here’s a plot of how the density evolves as a function of time for different initial densities:</p> \n<table class=\"InCell\"> \n <tbody> \n  <tr> \n   <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n    <div> \n     <img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514XXimg19.png\" alt=\"\" title=\"\" width=\"490\" height=\"\" /> \n    </div> \n    <div class=\"IFL\"> \n     <span class=\"close\" id=\"‘444_out'\">&amp;#10005</span> \n     <pre class=\"text\" id=\"‘444_out_text'\">data=ParallelTable[If[p==.5,Nothing,MeanAround/@Transpose[Table[Mean/@CellularAutomaton[{FromDigits[Tuples[{1,0},7]/. {l3_,_,l1_,c_,r1_,_,r3_}:&gt;If[If[c==0,r1+r3,l1+l3]+c&gt;=2,1,0],2],2,3},RandomChoice[{p,1-p}-&gt;{1,0},5000],200],200]]],{p,.3,.7,.05}];\nListLinePlot[MapThread[Callout[#1, Row[{Style[\"p\",Italic],\"=\",#2}]]&amp;,{data, Cases[Range[.3, .7, .05], Except[0.5]]}]]</pre> \n    </div> </td> \n  </tr> \n </tbody> \n</table> \n<p>And what we see is that there’s what looks like a phase transition: for initial density <em>p </em><span style=\"font-weight:Regular\">&lt; 0.5</span>, the final density is exactly 0, while for initial density <em>p</em> &gt; 0.5, it’s instead exactly 1. </p> \n<p>What happens precisely at <em>p</em> = 0.5? In a sense the cellular automaton “can’t make up its mind” and on an infinite line it generates an infinite nested sequence of domains that alternate between 0 and 1:</p> \n<table class=\"InCell\"> \n <tbody> \n  <tr> \n   <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n    <div> \n     <img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg20.png\" alt=\"\" title=\"\" width=\"574\" height=\"\" /> \n    </div> \n    <div class=\"IFL\"> \n     <span class=\"close\" id=\"20_out\">&amp;#10005</span> \n     <pre class=\"text\" id=\"20_out_text\">BlockRandom[SeedRandom[24425]; \n ArrayPlot[\n  CellularAutomaton[{FromDigits[\n     Tuples[{1, 0}, 7] /. {l3_, _, l1_, c_, r1_, _, r3_} :&gt; \n       If[If[c == 0, r1 + r3, l1 + l3] + c &gt;= 2, 1, 0], 2], 2, 3}, \n   RandomChoice[{.5, .5} -&gt; {1, 0}, 1000], 500], \n  ColorRules -&gt; {0 -&gt; Hue[0.15, 0.72, 1], \n    1 -&gt; Hue[0.98, 1, 0.8200000000000001]}, Frame -&gt; False]]</pre> \n    </div> </td> \n  </tr> \n </tbody> \n</table> \n<p>This nested structure is typical of what’s <a href=\"https://www.wolframscience.com/nks/notes-7-9--nesting-in-phase-transitions/\">seen in critical phenomena</a> in statistical physics, and in fact cellular automata like this are the very simplest examples of “true” <a href=\"https://www.wolframscience.com/nks/notes-7-7--phase-transitions/\">phase transitions</a> that I know. (Like other phase transitions, these don’t become “sharp” except in infinite systems. In typical statistical mechanics one doesn’t get phase transitions in 1D, but that’s a consequence of the assumption of microscopic reversibility, which doesn’t apply to cellular automata like this.)</p> \n<p>So what other cellular automaton rules achieve consensus like this? There are no radius-1 rules that work. And if one searches all 2<sup>32</sup> radius-2 rules (as I did for <em><a href=\"https://www.wolframscience.com/nks/\">A New Kind of Science</a></em>), the best one finds are a handful of examples that achieve “approximate consensus” in the sense that most, though not all, of the cells go to the “majority value” (this is the <em>r</em> = 2 rule 4196304428, for <em>p </em>= 0.6):</p> \n<table class=\"InCell\"> \n <tbody> \n  <tr> \n   <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n    <div> \n     <img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg22.png\" alt=\"\" title=\"\" width=\"575\" height=\"\" /> \n    </div> \n    <div class=\"IFL\"> \n     <span class=\"close\" id=\"22_out\">&amp;#10005</span> \n     <pre class=\"text\" id=\"22_out_text\">BlockRandom[SeedRandom[567]; \n ArrayPlot[\n  CellularAutomaton[{4196304428, 2, 2}, \n   RandomChoice[{.6, .4} -&gt; {1, 0}, 500], 200], \n  ColorRules -&gt; {0 -&gt; Hue[0.15, 0.72, 1], \n    1 -&gt; Hue[0.98, 1, 0.8200000000000001]}, Frame -&gt; False]]</pre> \n    </div> </td> \n  </tr> \n </tbody> \n</table> \n<p>By the way, among radius-1 rules, there is <a href=\"https://www.wolframscience.com/nks/p272--special-initial-conditions/\">rule 184</a> (often used as a basic model of road traffic flow), which doesn’t achieve consensus on “overall density”, but does do so with respect to left- and right-moving stripes, here with the nested pattern generated when <em>p</em> = 0.5:</p> \n<table class=\"InCell\"> \n <tbody> \n  <tr> \n   <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n    <div> \n     <img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg23.png\" alt=\"\" title=\"\" width=\"575\" height=\"\" /> \n    </div> \n    <div class=\"IFL\"> \n     <span class=\"close\" id=\"23_out\">&amp;#10005</span> \n     <pre class=\"text\" id=\"23_out_text\">BlockRandom[SeedRandom[567]; \n ArrayPlot[CellularAutomaton[184, RandomChoice[{1, 0}, 400], 180], \n  ColorRules -&gt; {0 -&gt; Hue[0.15, 0.72, 1], \n    1 -&gt; Hue[0.98, 1, 0.8200000000000001]}, Frame -&gt; False]]</pre> \n    </div> </td> \n  </tr> \n </tbody> \n</table> \n<p>What about “achieving consensus faster”? Here’s a comparison of our original GKL rule with another radius-3 rule (discovered by genetic programming methods) whose average consensus time is shorter:</p> \n<table class=\"InCell\"> \n <tbody> \n  <tr> \n   <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n    <div> \n     <img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg25.png\" alt=\"\" title=\"\" width=\"579\" height=\"\" /> \n    </div> \n    <div class=\"IFL\"> \n     <span class=\"close\" id=\"25_out\">&amp;#10005</span> \n     <pre class=\"text\" id=\"25_out_text\">Column[BlockRandom[SeedRandom[24125]; \n    ArrayPlot[\n     CellularAutomaton[#, RandomChoice[{.48, .52} -&gt; {1, 0}, 800], \n      180], \n     ColorRules -&gt; {0 -&gt; Hue[0.15, 0.72, 1], \n       1 -&gt; Hue[0.98, 1, 0.8200000000000001]}, Frame -&gt; False, \n     ImageSize -&gt; {650, \n       Automatic}]] &amp; /@ {{339789091192587366278221041213531750560, 2,\n     3}, {339841014953466429132970652455676805280, 2, 3}}]</pre> \n    </div> </td> \n  </tr> \n </tbody> \n</table> \n<p>It’s not known in general what the “fastest” radius-3 rule is. The two rules above have the feature that they “do their job” in a fairly “simple-looking” way. But there are also rules like the following that do their job in a “more ornate” way:</p> \n<table class=\"InCell\"> \n <tbody> \n  <tr> \n   <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n    <div> \n     <img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg26.png\" alt=\"\" title=\"\" width=\"579\" height=\"\" /> \n    </div> \n    <div class=\"IFL\"> \n     <span class=\"close\" id=\"26_out\">&amp;#10005</span> \n     <pre class=\"text\" id=\"26_out_text\">Column[BlockRandom[SeedRandom[24125]; \n    ArrayPlot[\n     CellularAutomaton[#, RandomChoice[{.48, .52} -&gt; {1, 0}, 800], \n      240], ColorRules -&gt; {0 -&gt; Hue[0.15, 0.72, 1], \n       1 -&gt; Hue[0.98, 1, 0.8200000000000001]}, Frame -&gt; False, \n     ImageSize -&gt; {650, \n       Automatic}]] &amp; /@ {{337607298446901146542393000444934784552, 2,\n     3}, {338557163619953682141694933300561896488, 2, \n    3}, {313421633154342960352882914658469183496, 2, 3}}]</pre> \n    </div> </td> \n  </tr> \n </tbody> \n</table> \n<p>Human-engineered rules (like the first one above) almost inevitably work in simpler and more “understandable” ways. But experience elsewhere (such as with <a href=\"https://www.wolframscience.com/nks/notes-12-8--sorting-networks/\">optimal sorting networks</a>) suggests that optimal rules will often be ones that don’t look simple in their behavior, and that can’t realistically be constructed by standard engineering methods, and essentially just have to be found “experimentally” by searching the computational universe of possible rules. </p> \n<p>A notable feature of particularly the earlier rules we looked at is that they show a small number of types of very distinct “domains” with definite walls or boundaries between them. And in many ways such walls can be thought of as being like <a href=\"https://www.wolframscience.com/nks/p281--structures-in-class-4-systems/\">localized structures</a>, “defects” or “particles”. But for our purposes here what tends to be important is whether these particles move around, and whether they annihilate each other to leave a uniform “consensus” final state.</p> \n<p>In the simple majority rule it’s inevitable that there are static domain walls:</p> \n<table class=\"InCell\"> \n <tbody> \n  <tr> \n   <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n    <div> \n     <img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg27.png\" alt=\"\" title=\"\" width=\"561\" height=\"\" /> \n    </div> \n    <div class=\"IFL\"> \n     <span class=\"close\" id=\"27_out\">&amp;#10005</span> \n     <pre class=\"text\" id=\"27_out_text\">BlockRandom[SeedRandom[567]; \n ArrayPlot[\n  CellularAutomaton[232, RandomChoice[{.6, .4} -&gt; {1, 0}, 300], 60], \n  ColorRules -&gt; {0 -&gt; Hue[0.15, 0.72, 1], \n    1 -&gt; Hue[0.98, 1, 0.8200000000000001]}, MeshStyle -&gt; Orange]]</pre> \n    </div> </td> \n  </tr> \n </tbody> \n</table> \n<p>The reason is that as soon as a domain is larger than the cellular automaton neighborhood, a cell at the boundary of the domain will inevitably see a balanced number of cells of each color on the two sides of the boundary. So the cell itself will act as a “tie breaker”, and will always decide to stay its own color—thereby making the domain boundary stay as it is. </p> \n<p>So what if we have a longer-range rule, that samples more distant cells? With range-2 (i.e. a 5-cell neighborhood) “wrong domains” with widths below 4 disappear:</p> \n<table class=\"InCell\"> \n <tbody> \n  <tr> \n   <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n    <div> \n     <img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514cimg30.png\" alt=\"\" title=\"\" width=\"562\" height=\"\" /> \n    </div> \n    <div class=\"IFL\"> \n     <span class=\"close\" id=\"‘555_out'\">&amp;#10005</span> \n     <pre class=\"text\" id=\"‘555_out_text'\">majrn[n_] := \n FromDigits[If[Total[#] &gt; n/2, 1, 0] &amp; /@ Tuples[{1, 0}, n], 2]\n\nBlockRandom[SeedRandom[567]; \n ArrayPlot[\n  CellularAutomaton[{majrn[5], 2, {{-2}, {-1}, {0}, {1}, {2}}}, \n   RandomChoice[{.6, .4} -&gt; {1, 0}, 300], 60], \n  ColorRules -&gt; {0 -&gt; Hue[0.15, 0.72, 1], \n    1 -&gt; Hue[0.98, 1, 0.8200000000000001]}, MeshStyle -&gt; Orange]]</pre> \n    </div> </td> \n  </tr> \n </tbody> \n</table> \n<p>Things work a bit better if the cells being sampled aren’t adjacent, but are for example in the pattern <span class=\"InlineFormula\"><img style=\"margin-bottom: 4px\" src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Cimg177.png\" width=\"102\" height=\"\" align=\"absmiddle\" class=\"inline-img\">:</img></span></p> \n<table class=\"InCell\"> \n <tbody> \n  <tr> \n   <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n    <div> \n     <img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514cimg33.png\" alt=\"\" title=\"\" width=\"562\" height=\"\" /> \n    </div> \n    <div class=\"IFL\"> \n     <span class=\"close\" id=\"‘666_out'\">&amp;#10005</span> \n     <pre class=\"text\" id=\"‘666_out_text'\">majrn[n_] := \n FromDigits[If[Total[#] &gt; n/2, 1, 0] &amp; /@ Tuples[{1, 0}, n], 2]\n\nBlockRandom[SeedRandom[567]; \n ArrayPlot[\n  CellularAutomaton[{majrn[5], 2, {{-3}, {-1}, {0}, {2}, {4}}}, \n   RandomChoice[{.6, .4} -&gt; {1, 0}, 300], 60], \n  ColorRules -&gt; {0 -&gt; Hue[0.15, 0.72, 1], \n    1 -&gt; Hue[0.98, 1, 0.8200000000000001]}, MeshStyle -&gt; Orange]]</pre> \n    </div> </td> \n  </tr> \n </tbody> \n</table> \n<p>But no finite-size sampling with the pure majority rule will remove all domains. What about the GKL rule? This rule actually only samples 5 cells, but its “extremities” are at distance 3. So can we “improve” it by having it sample more distant cells?</p> \n<p>Here’s a comparison of a few cases (the first one is the original):</p> \n<table class=\"InCell\"> \n <tbody> \n  <tr> \n   <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n    <div> \n     <img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg34.png\" alt=\"\" title=\"\" width=\"575\" height=\"\" /> \n    </div> \n    <div class=\"IFL\"> \n     <span class=\"close\" id=\"34_out\">&amp;#10005</span> \n     <pre class=\"text\" id=\"34_out_text\">GraphicsGrid[\n Partition[\n  Labeled[BlockRandom[SeedRandom[567]; \n      ArrayPlot[\n       CellularAutomaton[{4177065992, 2, List /@ #}, \n        RandomChoice[{.6, .4} -&gt; {1, 0}, 300], 100], \n       ColorRules -&gt; {0 -&gt; Hue[0.15, 0.72, 1], \n         1 -&gt; Hue[0.98, 1, 0.8200000000000001]}, MeshStyle -&gt; Orange, \n       ImageSize -&gt; 300]], Style[#, 11]] &amp; /@ {{-3, -1, 0, 1, \n     3}, {-5, -1, 0, 1, 5}, {-3, -1, 0, 1, 5}, {-3, -1, 0, 2, 4}}, 2]]</pre> \n    </div> </td> \n  </tr> \n </tbody> \n</table> \n<p>Here we’ve only discussed cellular automata with two possible colors for each cell. We could also consider rules that involve other “helper” colors that either disappear before the final state is reached, or define additional consensus states.</p> \n<h2 id=\"but-does-it-always-work?\">But Does It Always Work?</h2> \n<p>We’ve seen that there are 1D cellular automata that—at least in the examples we’ve looked at—achieve “majority consensus”. But given a particular rule, will it always reach consensus, or are there exceptions? </p> \n<p>As a first way to get a well-defined version of that question, we can consider <a href=\"https://www.wolframscience.com/nks/p259--systems-of-limited-size-and-class-2-behavior/\">finite cellular automata</a>, say with a total of <em>n</em> cells, and cyclic boundary conditions. There are a total of 2<sup><i>n</i></sup> possible configurations in this case, and we can represent all possible paths of evolution of the cellular automaton using a <a href=\"https://www.wolframscience.com/nks/notes-6-7--state-networks-for-systems-of-limited-size/\">state transition graph</a>.</p> \n<p>Here’s the graph for the GKL rule we discussed above, for the case <em>n</em> = 5. Each node in the graph is colored according to whether its “red-cell fraction” is above or below <img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514img36.png\" style=\"margin-top: -3px;\" width=\"7\" height=\"17\" align=\"absmiddle\">. And what we see in this case is “perfect density classification” or “perfect consensus”, with all states correctly leading to all-red or all-yellow states:</img></p> \n<table class=\"InCell\"> \n <tbody> \n  <tr> \n   <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n    <div> \n     <img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg37.png\" alt=\"\" title=\"\" width=\"564\" height=\"\" /> \n    </div> \n    <div class=\"IFL\"> \n     <span class=\"close\" id=\"37_out\">&amp;#10005</span> \n     <pre class=\"text\" id=\"37_out_text\">With[{n = 5}, \n Graph[# -&gt; \n     CellularAutomaton[{339789091192587366278221041213531750560, 2, \n        3}][#] &amp; /@ Tuples[{1, 0}, n], \n  VertexStyle -&gt; (# -&gt; \n       If[Mean[#] &gt; 1/2, Hue[0.98, 1, 0.8200000000000001], Hue[\n        0.15, 0.72, 1]] &amp; /@ Tuples[{1, 0}, n]), \n  GraphLayout -&gt; {\"VertexLayout\" -&gt; \"LayeredDigraphEmbedding\", \n    \"PackingLayout\" -&gt; \"LayeredLeft\"}, EdgeStyle -&gt; \\!\\(\\*\nTagBox[\nStyleBox[\nInterpretationBox[\nRowBox[{\"CloudGet\", \"[\", \"\\\"\\&lt;http://wolfr.am/VtlQl86f\\&gt;\\\"\", \"]\"}],\nHue[0.75, 0, 0.35],\nEditable-&gt;False,\nSelectable-&gt;False],\nShowSpecialCharacters-&gt;False,\nShowStringCharacters-&gt;True,\nNumberMarks-&gt;True],\nFullForm]\\)]]</pre> \n    </div> </td> \n  </tr> \n </tbody> \n</table> \n<p>But as soon as we look, for example, at <em>n</em> = 7, we immediately see a problem: </p> \n<table class=\"InCell\"> \n <tbody> \n  <tr> \n   <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n    <div> \n     <img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg38.png\" alt=\"\" title=\"\" width=\"547\" height=\"\" /> \n    </div> \n    <div class=\"IFL\"> \n     <span class=\"close\" id=\"38_out\">&amp;#10005</span> \n     <pre class=\"text\" id=\"38_out_text\">With[{n = 7}, \n Graph[# -&gt; \n     CellularAutomaton[{339789091192587366278221041213531750560, 2, \n        3}][#] &amp; /@ Tuples[{1, 0}, n], \n  VertexStyle -&gt; (# -&gt; \n       If[Mean[#] &gt; 1/2, Hue[0.98, 1, 0.8200000000000001], Hue[\n        0.15, 0.72, 1]] &amp; /@ Tuples[{1, 0}, n]), VertexSize -&gt; .4, \n  GraphLayout -&gt; {\"VertexLayout\" -&gt; \"LayeredDigraphEmbedding\", \n    \"PackingLayout\" -&gt; \"Layered\"}, EdgeStyle -&gt; \\!\\(\\*\nTagBox[\nStyleBox[\nInterpretationBox[\nRowBox[{\"CloudGet\", \"[\", \"\\\"\\&lt;http://wolfr.am/VtlQl86f\\&gt;\\\"\", \"]\"}],\nHue[0.75, 0, 0.35],\nEditable-&gt;False,\nSelectable-&gt;False],\nShowSpecialCharacters-&gt;False,\nShowStringCharacters-&gt;True,\nNumberMarks-&gt;True],\nFullForm]\\)]]</pre> \n    </div> </td> \n  </tr> \n </tbody> \n</table> \n<p>The states</p> \n<table class=\"InCell\"> \n <tbody> \n  <tr> \n   <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n    <div> \n     <img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Cimg39.png\" alt=\"\" title=\"\" width=\"484\" height=\"\" /> \n    </div> \n    <div class=\"IFL\"> \n     <span class=\"close\" id=\"39_out\">&amp;#10005</span> \n     <pre class=\"text\" id=\"39_out_text\">ArrayPlot[\n   CellularAutomaton[{FromDigits[\n      Tuples[{1, 0}, 7] /. {l3_, _, l1_, c_, r1_, _, r3_} :&gt; \n        If[If[c == 0, r1 + r3, l1 + l3] + c &gt;= 2, 1, 0], 2], 2, 3}, #,\n     4], ColorRules -&gt; {0 -&gt; Hue[0.15, 0.72, 1], \n     1 -&gt; Hue[0.98, 1, 0.8200000000000001]}, Frame -&gt; False, \n   Mesh -&gt; True, MeshStyle -&gt; Orange, ImageSize -&gt; Tiny] &amp; /@ {{0, 0, \n   1, 0, 0, 1, 1}, {0, 0, 1, 1, 0, 1, 1}}</pre> \n    </div> </td> \n  </tr> \n </tbody> \n</table> \n<p>and their cyclic variations “get stuck” and do not achieve consensus. At size 11 there’s another issue: now a few states that should have achieved “consensus 1” actually go to “consensus 0”:</p> \n<table class=\"InCell\"> \n <tbody> \n  <tr> \n   <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n    <div> \n     <img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg40.png\" alt=\"\" title=\"\" width=\"564\" height=\"\" /> \n    </div> \n    <div class=\"IFL\"> \n     <span class=\"close\" id=\"40_out\">&amp;#10005</span> \n     <pre class=\"text\" id=\"40_out_text\">With[{size11 = \n   Graph[# -&gt; \n       CellularAutomaton[{339789091192587366278221041213531750560, 2, \n          3}][#] &amp; /@ Tuples[{1, 0}, 11], \n    VertexStyle -&gt; (# -&gt; \n         If[Mean[#] &gt; 1/2, Hue[0.98, 1, 0.8200000000000001], Hue[\n          0.15, 0.72, 1]] &amp; /@ Tuples[{1, 0}, 11]), VertexSize -&gt; .4, \n    EdgeStyle -&gt; \\!\\(\\*\nTagBox[\nStyleBox[\nInterpretationBox[\nRowBox[{\"CloudGet\", \"[\", \"\\\"\\&lt;http://wolfr.am/VtlQl86f\\&gt;\\\"\", \"]\"}],\nHue[0.75, 0, 0.35],\nEditable-&gt;False,\nSelectable-&gt;False],\nShowSpecialCharacters-&gt;False,\nShowStringCharacters-&gt;True,\nNumberMarks-&gt;True],\nFullForm]\\)]}, \n Grid[{{Show[Graph[# , AspectRatio -&gt; 1/3], \n       ImageSize -&gt; {300, Automatic}] &amp;[\n     WeaklyConnectedGraphComponents[size11][[1]]], \n    With[{stuck = \n       Catenate[\n        EdgeList /@ Drop[WeaklyConnectedGraphComponents[size11], 2]]},\n      Show[Graph[stuck, \n       VertexStyle -&gt; (# -&gt; \n            If[Mean[#] &gt; 1/2, Hue[0.98, 1, 0.8200000000000001], Hue[\n             0.15, 0.72, 1]] &amp; /@ (First /@ stuck)), \n       EdgeStyle -&gt; \\!\\(\\*\nTagBox[\nStyleBox[\nInterpretationBox[\nRowBox[{\"CloudGet\", \"[\", \"\\\"\\&lt;http://wolfr.am/VtlQl86f\\&gt;\\\"\", \"]\"}],\nHue[0.75, 0, 0.35],\nEditable-&gt;False,\nSelectable-&gt;False],\nShowSpecialCharacters-&gt;False,\nShowStringCharacters-&gt;True,\nNumberMarks-&gt;True],\nFullForm]\\), \n       GraphLayout -&gt; {\"VertexLayout\" -&gt; \"LayeredDigraphEmbedding\", \n         \"PackingLayout\" -&gt; \"NestedGrid\"}], \n      ImageSize -&gt; {Automatic, 200}]]}, {Show[\n       Graph[# , AspectRatio -&gt; 1/3], \n       ImageSize -&gt; {300, Automatic}] &amp;[\n     WeaklyConnectedGraphComponents[size11][[2]]], SpanFromAbove}}, \n  Alignment -&gt; {Center, Center}]]</pre> \n    </div> </td> \n  </tr> \n </tbody> \n</table> \n<p>The states that “get to the wrong consensus” here all turn out to be cyclic variations of the following</p> \n<table class=\"InCell\"> \n <tbody> \n  <tr> \n   <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n    <div> \n     <img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Cimg41.png\" alt=\"\" title=\"\" width=\"502\" height=\"\" /> \n    </div> \n    <div class=\"IFL\"> \n     <span class=\"close\" id=\"41_out\">&amp;#10005</span> \n     <pre class=\"text\" id=\"41_out_text\">ArrayPlot[\n   CellularAutomaton[{FromDigits[\n      Tuples[{1, 0}, 7] /. {l3_, _, l1_, c_, r1_, _, r3_} :&gt; \n        If[If[c == 0, r1 + r3, l1 + l3] + c &gt;= 2, 1, 0], 2], 2, 3}, #,\n     7], ColorRules -&gt; {0 -&gt; Hue[0.15, 0.72, 1], \n     1 -&gt; Hue[0.98, 1, 0.8200000000000001]}, Frame -&gt; False, \n   Mesh -&gt; True, MeshStyle -&gt; Orange, ImageSize -&gt; Tiny] &amp; /@ {{1, 0, \n   1, 1, 0, 0, 0, 1, 1, 0, 1}, {0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0}}</pre> \n    </div> </td> \n  </tr> \n </tbody> \n</table> \n<p>where in the first case there are 6 <span class=\"InlineFormula\"><img style=\"margin-bottom: 2px\" src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/swo514redbox2.png\" width=\"15\" height=\"\" align=\"absmiddle\" class=\"inline-img\" /></span> cells and 5 <span class=\"InlineFormula\"><img style=\"margin-bottom: 3px\" src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514yellowbox2.png\" width=\"15\" height=\"\" align=\"absmiddle\" class=\"inline-img\" /></span>, yet the final state is all <span class=\"InlineFormula\"><img style=\"margin-bottom: 3px\" src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514yellowbox2.png\" width=\"15\" height=\"\" align=\"absmiddle\" class=\"inline-img\" /></span>, and in the second case it’s the other way around.</p> \n<p>And it turns out that there’s actually a general problem: one can prove that there’s no rule that can perfectly achieve “majority consensus” on a finite array with cyclic boundary conditions. </p> \n<p>What about on an infinite array? Here it’s possible to achieve “perfect majority consensus” for all but a set of “special initial conditions” with measure 0. An example of such a “special initial condition” is an infinite repetition of either of the two blocks shown above. These initial conditions—instead of going to consensus—will just remain fixed with time.</p> \n<p>If initial conditions are generated “at random”, with the value of each cell being chosen according to certain fixed probabilities, then there’s effectively zero probability of getting one of the “exception” initial conditions. And even though the “tapers” might be arbitrarily long, there’s no chance of not eventually reaching a consensus state.</p> \n<p>But this conclusion depends on the idea that initial conditions are really generated “at random”. If, for example, they were generated by a definite program, then though the initial conditions might seem “statistically random” with respect to certain tests, it doesn’t mean that they won’t give special weight to the “exceptional” initial conditions. </p> \n<h2 id=\"beyond-one-dimension\">Beyond One Dimension</h2> \n<p>In one dimension one can explain the fact that certain configurations “get stuck” and don’t achieve consensus by saying that in 1D effects can’t “get around each other”. But in 2D there is no such constraint.</p> \n<p>So then what about the “pure 2D majority rule” (<a href=\"https://www.wolframscience.com/nks/p171--cellular-automata/\">totalistic code</a> 56):</p> \n<table class=\"InCell\"> \n <tbody> \n  <tr> \n   <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n    <div> \n     <img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg42.png\" alt=\"\" title=\"\" width=\"552\" height=\"\" /> \n    </div> \n    <div class=\"IFL\"> \n     <span class=\"close\" id=\"42_out\">&amp;#10005</span> \n     <pre class=\"text\" id=\"42_out_text\">RulePlot[CellularAutomaton[&lt;|\"Dimension\" -&gt; 2, \"Neighborhood\" -&gt; 5, \n   \"TotalisticCode\" -&gt; 56|&gt;], \n ColorFunction -&gt; (Blend[{RGBColor@Hue[0.15, 0.72, 1], \n      RGBColor@Hue[0.98, 1, 0.8200000000000001]}, #] &amp;), \n MeshStyle -&gt; Orange]</pre> \n    </div> </td> \n  </tr> \n </tbody> \n</table> \n<p>Starting say from 30% 1s we again see that things get stuck:</p> \n<table class=\"InCell\"> \n <tbody> \n  <tr> \n   <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n    <div> \n     <img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg43.png\" alt=\"\" title=\"\" width=\"583\" height=\"\" /> \n    </div> \n    <div class=\"IFL\"> \n     <span class=\"close\" id=\"43_out\">&amp;#10005</span> \n     <pre class=\"text\" id=\"43_out_text\">BlockRandom[SeedRandom[23424]; \n ArrayPlot[#, \n    ColorRules -&gt; {0 -&gt; Hue[0.15, 0.72, 1], \n      1 -&gt; Hue[0.98, 1, 0.8200000000000001]}, ImageSize -&gt; 120, \n    Frame -&gt; False, Mesh -&gt; True, MeshStyle -&gt; Orange] &amp; /@ \n  CellularAutomaton[&lt;|\"Dimension\" -&gt; 2, \"Neighborhood\" -&gt; 5, \n    \"TotalisticCode\" -&gt; 56|&gt;, \n   RandomChoice[{.3, .7} -&gt; {1, 0}, {30, 30}], {{0, 4}, All}]]</pre> \n    </div> </td> \n  </tr> \n </tbody> \n</table> \n<p>Here is the corresponding evolution shown in 3D, with time going down:</p> \n<table class=\"InCell\"> \n <tbody> \n  <tr> \n   <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n    <div> \n     <img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg44.png\" alt=\"\" title=\"\" width=\"513\" height=\"\" /> \n    </div> \n    <div class=\"IFL\"> \n     <span class=\"close\" id=\"44_out\">&amp;#10005</span> \n     <pre class=\"text\" id=\"44_out_text\">BlockRandom[SeedRandom[23424]; \n ArrayPlot3D[#, \n    ColorRules -&gt; {0 -&gt; Hue[0.15, 0.72, 1], \n      1 -&gt; Hue[0.98, 1, 0.8200000000000001]}, MeshStyle -&gt; Orange] &amp;@\n  CellularAutomaton[&lt;|\"Dimension\" -&gt; 2, \"Neighborhood\" -&gt; 5, \n    \"TotalisticCode\" -&gt; 56|&gt;, \n   RandomChoice[{.3, .7} -&gt; {1, 0}, {30, 30}], {{0, 10}, All}]]</pre> \n    </div> </td> \n  </tr> \n </tbody> \n</table> \n<p>But here is another rule (9-neighbor totalistic code 976):</p> \n<table class=\"InCell\"> \n <tbody> \n  <tr> \n   <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n    <div> \n     <img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg45.png\" alt=\"\" title=\"\" width=\"567\" height=\"\" /> \n    </div> \n    <div class=\"IFL\"> \n     <span class=\"close\" id=\"45_out\">&amp;#10005</span> \n     <pre class=\"text\" id=\"45_out_text\">GraphicsGrid[\n Partition[\n  BlockRandom[SeedRandom[23424]; \n   ArrayPlot[#, \n      ColorRules -&gt; {0 -&gt; Hue[0.15, 0.72, 1], \n        1 -&gt; Hue[0.98, 1, 0.8200000000000001]}, ImageSize -&gt; 80, \n      Frame -&gt; False] &amp; /@ (CellularAutomaton[&lt;|\"Dimension\" -&gt; 2, \n       \"Neighborhood\" -&gt; 9, \"TotalisticCode\" -&gt; 976|&gt;, \n      RandomChoice[{.45, .55} -&gt; {1, 0}, {30, 30}], {{0, 17}, All}])],\n   7]]</pre> \n    </div> </td> \n  </tr> \n </tbody> \n</table> \n<p>And now what we see is that in this case <a href=\"https://www.wolframscience.com/nks/notes-7-6--domains-in-code-976/\">blob-like domains</a> of the “minority color” get left over, but gradually get smaller. We can see the phenomenon in 3D:</p> \n<table class=\"InCell\"> \n <tbody> \n  <tr> \n   <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n    <div> \n     <img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg46.png\" alt=\"\" title=\"\" width=\"526\" height=\"\" /> \n    </div> \n    <div class=\"IFL\"> \n     <span class=\"close\" id=\"46_out\">&amp;#10005</span> \n     <pre class=\"text\" id=\"46_out_text\">BlockRandom[SeedRandom[23424]; \n ArrayPlot3D[#, \n    ColorRules -&gt; {0 -&gt; Hue[0.15, 0.72, 1], \n      1 -&gt; Hue[0.98, 1, 0.8200000000000001]}] &amp;@(CellularAutomaton[&lt;|\n     \"Dimension\" -&gt; 2, \"Neighborhood\" -&gt; 9, \"TotalisticCode\" -&gt; 976|&gt;,\n     RandomChoice[{.45, .55} -&gt; {1, 0}, {50, 50}], {{0, 40}, All}])]</pre> \n    </div> </td> \n  </tr> \n </tbody> \n</table> \n<p>Looking at a spacetime slice in the center, and letting more distant cells “recede into the fog”, we see what looks like “diffusive” behavior, with domain walls in effect executing <a href=\"https://www.wolframscience.com/nks/p360--origins-of-simple-behavior/\">random walks that eventually annihilate</a>:</p> \n<table class=\"InCell\"> \n <tbody> \n  <tr> \n   <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n    <div> \n     <img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg47.png\" alt=\"\" title=\"\" width=\"580\" height=\"\" /> \n    </div> \n    <div class=\"IFL\"> \n     <span class=\"close\" id=\"47_out\">&amp;#10005</span> \n     <pre class=\"text\" id=\"47_out_text\">BlockRandom[SeedRandom[23424]; \n ArrayPlot[\n  Mean /@ Transpose[\n    MapIndexed[#1*(1.6^-Last[#2]) &amp;, \n     CellularAutomaton[&lt;|\"Dimension\" -&gt; 2, \"TotalisticCode\" -&gt; 976, \n       \"Neighborhood\" -&gt; 9|&gt;, \n      RandomChoice[{.45, .55} -&gt; {1, 0}, {220, 40}], 80], {-1}], \n    2 &lt;-&gt; 3], \n  ColorFunction -&gt; (Blend[{RGBColor@Hue[0.15, 0.72, 1], \n       RGBColor@Hue[0.98, 1, 0.8200000000000001]}, #] &amp;), \n  Frame -&gt; False]]</pre> \n    </div> </td> \n  </tr> \n </tbody> \n</table> \n<p>The rule we just saw is close to the majority rule on a 9-cell 3×3 region, except for totals 4 and 5, which are taken to give 1 and 0 rather than 0 and 1. If we use the pure majority rule on the 3×3 region it gets stuck:</p> \n<table class=\"InCell\"> \n <tbody> \n  <tr> \n   <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n    <div> \n     <img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg48.png\" alt=\"\" title=\"\" width=\"579\" height=\"\" /> \n    </div> \n    <div class=\"IFL\"> \n     <span class=\"close\" id=\"48_out\">&amp;#10005</span> \n     <pre class=\"text\" id=\"48_out_text\">GraphicsGrid[\n Partition[\n  BlockRandom[SeedRandom[23424]; \n   ArrayPlot[#, \n      ColorRules -&gt; {0 -&gt; Hue[0.15, 0.72, 1], \n        1 -&gt; Hue[0.98, 1, 0.8200000000000001]}, ImageSize -&gt; 80, \n      Frame -&gt; False] &amp; /@ (CellularAutomaton[&lt;|\"Dimension\" -&gt; 2, \n       \"Neighborhood\" -&gt; 9, \"TotalisticCode\" -&gt; 992|&gt;, \n      RandomChoice[{.45, .55} -&gt; {1, 0}, {30, 30}], {{0, 8}, All}])], \n  7]]</pre> \n    </div> </td> \n  </tr> \n </tbody> \n</table> \n<p>But it turns out to be straightforward to find 2D majority rules that do not get stuck. In fact, basically any majority rule that samples cells in an asymmetric way will work.</p> \n<p>As an example, consider a rule that samples the following cells in each 3×3 neighborhood:</p> \n<table class=\"InCell\"> \n <tbody> \n  <tr> \n   <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n    <div> \n     <img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg51.png\" alt=\"\" title=\"\" width=\"46\" height=\"\" /> \n    </div> \n    <div class=\"IFL\"> \n     <span class=\"close\" id=\"‘777_out'\">&amp;#10005</span> \n     <pre class=\"text\" id=\"‘777_out_text'\">majplot[offsets_] := \n ArrayPlot[\n  Reverse[Transpose[SparseArray[(2 + offsets) -&gt; 1, {3, 3}]]], \n  Mesh -&gt; True, ImageSize -&gt; 40]\n\nmajplot[{{0, 1}, {1, 0}, {0, 0}}]</pre> \n    </div> </td> \n  </tr> \n </tbody> \n</table> \n<p>Here is the 3D evolution of this rule starting from 45% 1s:</p> \n<table class=\"InCell\"> \n <tbody> \n  <tr> \n   <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n    <div> \n     <img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg52.png\" alt=\"\" title=\"\" width=\"429\" height=\"\" /> \n    </div> \n    <div class=\"IFL\"> \n     <span class=\"close\" id=\"52_out\">&amp;#10005</span> \n     <pre class=\"text\" id=\"52_out_text\">BlockRandom[SeedRandom[23424]; \n ArrayPlot3D[#, \n    ColorRules -&gt; {0 -&gt; Hue[0.15, 0.72, 1], \n      1 -&gt; Hue[\n       0.98, 1, 0.8200000000000001]}] &amp;@(CellularAutomaton[{{{_, \n        a_, _}, {_, b_, c_}, {_, _, _}} :&gt; If[a + b + c &gt;= 2, 1, 0]}, \n    RandomChoice[{.45, .55} -&gt; {1, 0}, {50, 50}], {{0, 80}, All}])]</pre> \n    </div> </td> \n  </tr> \n </tbody> \n</table> \n<p>And here is what a spacetime slice looks like:</p> \n<table class=\"InCell\"> \n <tbody> \n  <tr> \n   <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n    <div> \n     <img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg53.png\" alt=\"\" title=\"\" width=\"580\" height=\"\" /> \n    </div> \n    <div class=\"IFL\"> \n     <span class=\"close\" id=\"53_out\">&amp;#10005</span> \n     <pre class=\"text\" id=\"53_out_text\">BlockRandom[SeedRandom[23424]; \n ArrayPlot[\n  Mean /@ Transpose[\n    MapIndexed[#1*(1.6^-Last[#2]) &amp;, \n     CellularAutomaton[{{{_, a_, _}, {_, b_, c_}, {_, _, _}} :&gt; \n        If[a + b + c &gt;= 2, 1, 0]}, \n      RandomChoice[{.45, .55} -&gt; {1, 0}, {220, 40}], 60], {-1}], \n    2 &lt;-&gt; 3], \n  ColorFunction -&gt; (Blend[{RGBColor@Hue[0.15, 0.72, 1], \n       RGBColor@Hue[0.98, 1, 0.8200000000000001]}, #] &amp;), \n  Frame -&gt; False]]</pre> \n    </div> </td> \n  </tr> \n </tbody> \n</table> \n<p>The behavior as a function of the initial density shows a clear transition at 50%:</p> \n<table class=\"InCell\"> \n <tbody> \n  <tr> \n   <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n    <div> \n     <img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg54.png\" alt=\"\" title=\"\" width=\"579\" height=\"\" /> \n    </div> \n    <div class=\"IFL\"> \n     <span class=\"close\" id=\"54_out\">&amp;#10005</span> \n     <pre class=\"text\" id=\"54_out_text\">Row[ParallelTable[\n  BlockRandom[SeedRandom[23424]; \n   Labeled[ArrayPlot[\n     Mean /@ Transpose[\n       MapIndexed[#1*(1.6^-Last[#2]) &amp;, \n        CellularAutomaton[{{{_, a_, _}, {_, b_, c_}, {_, _, _}} :&gt; \n           If[a + b + c &gt;= 2, 1, 0]}, \n         RandomChoice[{p, 1 - p} -&gt; {1, 0}, {60, 40}], 60], {-1}], \n       2 &lt;-&gt; 3], ImageSize -&gt; 72, \n     ColorFunction -&gt; (Blend[{RGBColor@Hue[0.15, 0.72, 1], \n          RGBColor@Hue[0.98, 1, 0.8200000000000001]}, #] &amp;), \n     Frame -&gt; False], Style[PercentForm[p], 11]]], {p, .3, .7, .05}]]</pre> \n    </div> </td> \n  </tr> \n </tbody> \n</table> \n<p>Here are results for different samplings of cells in the 3×3 neighborhood; all successfully achieve consensus:</p> \n<table class=\"InCell\"> \n <tbody> \n  <tr> \n   <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n    <div> \n     <img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg57.png\" alt=\"\" title=\"\" width=\"573\" height=\"\" /> \n    </div> \n    <div class=\"IFL\"> \n     <span class=\"close\" id=\"‘888_out'\">&amp;#10005</span> \n     <pre class=\"text\" id=\"‘888_out_text'\">MajorityRule[offsets_] := \n With[{n = Length[offsets]}, {FromDigits[\n    If[# &gt; n/2, 1, 0] &amp; /@ Reverse[Range[0, n]], 2], {2, 1}, offsets}]\n\nmajrow[oo_] := \n Row[BlockRandom[\n   SeedRandom[23424]; {majplot[oo], \n    ArrayPlot3D[#, \n       ColorRules -&gt; {0 -&gt; Hue[0.15, 0.72, 1], \n         1 -&gt; Hue[0.98, 1, 0.8200000000000001]}, \n       ImageSize -&gt; 220] &amp;@(CellularAutomaton[MajorityRule[oo], \n       RandomChoice[{.45, .55} -&gt; {1, 0}, {50, 50}], {{0, 60}, All}]),\n     ArrayPlot[\n     Mean /@ \n      Transpose[\n       MapIndexed[#1*(1.6^-Last[#2]) &amp;, \n        CellularAutomaton[MajorityRule[oo], \n         RandomChoice[{.45, .55} -&gt; {1, 0}, {100, 60}], 60], {-1}], \n       2 &lt;-&gt; 3], \n     ColorFunction -&gt; (Blend[{RGBColor@Hue[0.15, 0.72, 1], \n          RGBColor@Hue[0.98, 1, 0.8200000000000001]}, #] &amp;), \n     Frame -&gt; False, ImageSize -&gt; 300]}], Spacer[25]]\n\nmajrow[{{1, -1}, {1, 1}, {0, 0}}]</pre> \n    </div> </td> \n  </tr> \n </tbody> \n</table> \n<table class=\"InCell\"> \n <tbody> \n  <tr> \n   <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n    <div> \n     <img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg58.png\" alt=\"\" title=\"\" width=\"575\" height=\"\" /> \n    </div> \n    <div class=\"IFL\"> \n     <span class=\"close\" id=\"58_out\">&amp;#10005</span> \n     <pre class=\"text\" id=\"58_out_text\">majrow[{{0, -1}, {1, 1}, {0, 0}}]</pre> \n    </div> </td> \n  </tr> \n </tbody> \n</table> \n<table class=\"InCell\"> \n <tbody> \n  <tr> \n   <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n    <div> \n     <img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg59.png\" alt=\"\" title=\"\" width=\"575\" height=\"205\" /> \n    </div> \n    <div class=\"IFL\"> \n     <span class=\"close\" id=\"59_out\">&amp;#10005</span> \n     <pre class=\"text\" id=\"59_out_text\">majrow[{{0, -1}, {1, 1}, {-1, 0}}]</pre> \n    </div> </td> \n  </tr> \n </tbody> \n</table> \n<table class=\"InCell\"> \n <tbody> \n  <tr> \n   <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n    <div> \n     <img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg60.png\" alt=\"\" title=\"\" width=\"575\" height=\"\" /> \n    </div> \n    <div class=\"IFL\"> \n     <span class=\"close\" id=\"60_out\">&amp;#10005</span> \n     <pre class=\"text\" id=\"60_out_text\">majrow[{{0, 1}, {-1, 0}, {1, 1}, {1, 0}, {0, -1}}]</pre> \n    </div> </td> \n  </tr> \n </tbody> \n</table> \n<p>With our original 5-cell “symmetrical” neighborhood <span class=\"InlineFormula\"><img style=\"margin-bottom: 2px\" src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514plusgrid4.png\" width=\"35\" height=\"\" align=\"absmiddle\" class=\"inline-img\" /></span> we can get very similar behavior by setting things up like the 1D GKL rule:</p> \n<table class=\"InCell\"> \n <tbody> \n  <tr> \n   <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n    <div> \n     <img style=\"margin-left: 5px\" class=\"\" src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514img63.png\" alt=\"\" title=\"\" width=\"471\" height=\"21\" /> \n    </div> \n    <div class=\"IFL\"> \n     <span class=\"close\" id=\"63_out\">&amp;#10005</span> \n     <pre class=\"text\" id=\"63_out_text\">{{{_, a_, _}, {b_, c_, d_}, { _, e_, _}} :&gt; \n  If[If[c == 0, a + b, d + e] + c &gt;= 2, 1, 0]}</pre> \n    </div> </td> \n  </tr> \n </tbody> \n</table> \n<table class=\"InCell\"> \n <tbody> \n  <tr> \n   <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n    <div> \n     <img style=\"margin-top: 5px\" src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514XXimg64.png\" alt=\"\" title=\"\" width=\"572\" height=\"\" /> \n    </div> \n    <div class=\"IFL\"> \n     <span class=\"close\" id=\"64_out\">&amp;#10005</span> \n     <pre class=\"text\" id=\"64_out_text\">{BlockRandom[SeedRandom[23424]; \n  ArrayPlot3D[#, \n     ColorRules -&gt; {0 -&gt; Hue[0.15, 0.72, 1], \n       1 -&gt; Hue[\n        0.98, 1, 0.8200000000000001]}] &amp;@(CellularAutomaton[{{{_, \n         a_, _}, {b_, c_, d_}, { _, e_, _}} :&gt; \n       If[If[c == 0, a + b, d + e] + c &gt;= 2, 1, 0]}, \n     RandomChoice[{.45, .55} -&gt; {1, 0}, {50, 50}], {{0, 80}, All}])], \n BlockRandom[SeedRandom[23424]; \n  ArrayPlot[\n   Mean /@ Transpose[\n     MapIndexed[#1*(1.6^-Last[#2]) &amp;, \n      CellularAutomaton[{{{_, a_, _}, {b_, c_, d_}, { _, e_, _}} :&gt; \n         If[If[c == 0, a + b, d + e] + c &gt;= 2, 1, 0]}, \n       RandomChoice[{.45, .55} -&gt; {1, 0}, {100, 40}], 60], {-1}], \n     2 &lt;-&gt; 3], \n   ColorFunction -&gt; (Blend[{RGBColor@Hue[0.15, 0.72, 1], \n        RGBColor@Hue[0.98, 1, 0.8200000000000001]}, #] &amp;), \n   Frame -&gt; False]]}</pre> \n    </div> </td> \n  </tr> \n </tbody> \n</table> \n<h2 id=\"cellular-automata-with-noise\">Cellular Automata with Noise</h2> \n<p>So far we’ve assumed that once it’s started, the evolution of the cellular automaton is entirely deterministic. But what if there’s some “noise” in the evolution—say if the values of cells are <a href=\"https://www.wolframscience.com/nks/p591--statistical-analysis/\">randomly flipped with some probability</a>? Here’s what happens with the simple majority rule in 1D in this case:</p> \n<table class=\"InCell\"> \n <tbody> \n  <tr> \n   <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n    <div> \n     <img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg65.png\" alt=\"\" title=\"\" width=\"577\" height=\"\" /> \n    </div> \n    <div class=\"IFL\"> \n     <span class=\"close\" id=\"383_out\">&amp;#10005</span> \n     <pre class=\"text\" id=\"383_out_text\">BlockRandom[SeedRandom[34646]; \n ArrayPlot[\n  NestList[MapAt[1 - # &amp;, CellularAutomaton[232][#], \n     List /@ RandomInteger[{1, 400}, 5]] &amp;, \n   RandomChoice[{.4, .6} -&gt; {1, 0}, 400], 100], \n  ColorRules -&gt; {0 -&gt; Hue[0.15, 0.72, 1], \n    1 -&gt; Hue[0.98, 1, 0.8200000000000001]}, Frame -&gt; False]]</pre> \n    </div> </td> \n  </tr> \n </tbody> \n</table> \n<p>What about the GKL rule? At low levels of noise the rule will typically “fight it off” and still achieve consensus:</p> \n<table class=\"InCell\"> \n <tbody> \n  <tr> \n   <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n    <div> \n     <img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg66.png\" alt=\"\" title=\"\" width=\"580\" height=\"\" /> \n    </div> \n    <div class=\"IFL\"> \n     <span class=\"close\" id=\"66_out\">&amp;#10005</span> \n     <pre class=\"text\" id=\"66_out_text\">BlockRandom[SeedRandom[32546]; \n ArrayPlot[\n  NestList[MapAt[1 - # &amp;, \n     CellularAutomaton[{FromDigits[\n         Tuples[{1, 0}, 7] /. {l3_, _, l1_, c_, r1_, _, r3_} :&gt; \n           If[If[c == 0, r1 + r3, l1 + l3] + c &gt;= 2, 1, 0], 2], 2, \n        3}][#], List /@ RandomInteger[{1, 400}, 5]] &amp;, \n   RandomChoice[{.4, .6} -&gt; {1, 0}, 400], 120], \n  ColorRules -&gt; {0 -&gt; Hue[0.15, 0.72, 1], \n    1 -&gt; Hue[0.98, 1, 0.8200000000000001]}, Frame -&gt; False]]</pre> \n    </div> </td> \n  </tr> \n </tbody> \n</table> \n<p>But eventually the level of noise becomes too great, and consensus is typically lost: </p> \n<table class=\"InCell\"> \n <tbody> \n  <tr> \n   <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n    <div> \n     <img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg67.png\" alt=\"\" title=\"\" width=\"576\" height=\"\" /> \n    </div> \n    <div class=\"IFL\"> \n     <span class=\"close\" id=\"67_out\">&amp;#10005</span> \n     <pre class=\"text\" id=\"67_out_text\">BlockRandom[SeedRandom[32546]; \n ArrayPlot[\n  NestList[MapAt[1 - # &amp;, \n     CellularAutomaton[{FromDigits[\n         Tuples[{1, 0}, 7] /. {l3_, _, l1_, c_, r1_, _, r3_} :&gt; \n           If[If[c == 0, r1 + r3, l1 + l3] + c &gt;= 2, 1, 0], 2], 2, \n        3}][#], List /@ RandomInteger[{1, 400}, 30]] &amp;, \n   RandomChoice[{.4, .6} -&gt; {1, 0}, 400], 150], \n  ColorRules -&gt; {0 -&gt; Hue[0.15, 0.72, 1], \n    1 -&gt; Hue[0.98, 1, 0.8200000000000001]}, Frame -&gt; False]]</pre> \n    </div> </td> \n  </tr> \n </tbody> \n</table> \n<p>In general, the presence of “noise” turns our system from an ordinary cellular automaton into a probabilistic cellular automaton. (And this, in turn, is equivalent to what’s sometimes called directed percolation, or to a spin system that’s taken to evolve in time with random updates according to rules with certain weightings. It’s also related to what’s sometimes been called an “interacting particle system”—in which for example boundaries of regions follow something like an array of random walks, that annihilate when they meet. )</p> \n<p>Let’s talk in a bit more detail about the overall behavior of the GKL rule. When there’s no noise, it shows a sharp transition from final state 0 to final state 1 when the initial density goes from below 0.5 to above 0.5. But what happens when we add noise? We can summarize the result by a classic physics-style phase diagram:</p> \n<table class=\"InCell\"> \n <tbody> \n  <tr> \n   <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n    <div> \n     <img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg71.png\" alt=\"\" title=\"\" width=\"462\" height=\"\" /> \n    </div> \n    <div class=\"IFL\"> \n     <span class=\"close\" id=\"‘999_out'\">&amp;#10005</span> \n     <pre class=\"text\" id=\"‘999_out_text'\">(*res2=With[{length=500,steps=1000},\nBlockRandom[SeedRandom[625];\nParallelTable[Mean[Nest[MapAt[1-#&amp;,CellularAutomaton[{\\\n339789091192587366278221041213531750560,2,3}][#],List/@RandomInteger[{\\\n1,length},Floor[length*\\[Epsilon]]]]&amp;,RandomChoice[{p,1-p}\\[Rule]{1,0}\\\n,length],steps]],{p, 0, 1,.001}, {\\[Epsilon], 0, 0.15,.001}]]];*)\n\n\nres2 = Import[\n   \"https://www.wolframcloud.com/obj/sw-writings/DistributedConsensus/\\\nData/gklnoise-01.wxf\"];\n\nListDensityPlot[res2, DataRange -&gt; {{ 0, 0.15}, { 0, 1}}, \n ColorFunction -&gt; (Blend[{RGBColor[1., 0.9279999999999999, 0.28], \n      RGBColor[0.8200000000000001, 0., 0.0984000000000001]}, #] &amp;), \n AspectRatio -&gt; .7, FrameLabel -&gt; {\"noise level\", \"initial density\"}]</pre> \n    </div> </td> \n  </tr> \n </tbody> \n</table> \n<p>This diagram shows the final density produced by the rule as a function of the initial density and the noise level. At zero noise level, there’s a fairly sharp transition as a function of initial density. (It’s not perfectly sharp because this diagram was generated by sampling a finite number of initial conditions in a finite region.) And as the noise level increases, the sharp transition seems to survive for a while—until eventually a critical noise level is reached at which it disappears. </p> \n<p>Is there a rigorous way to analyze what’s going on? Well, not yet. And in fact for a long time <a href=\"https://writings.stephenwolfram.com/the-problem-of-distributed-consensus/#some-historical-background\">it was thought that</a> in the presence of noise any 1D system like this would necessarily be ergodic, in the sense that it would eventually visit all possible states, and certainly not evolve from different initial densities to different final states.</p> \n<p>But in the 1980s a <a href=\"https://writings.stephenwolfram.com/the-problem-of-distributed-consensus/#some-historical-background\">complicated cellular automaton was constructed</a> that it was possible to prove would not show such behavior. The system was put together for the purpose of “doing reliable computation even in the presence of noise” and was set up using rather elaborate software-engineering-like methodology. But ultimately it was just a 1D cellular automaton, albeit with an astronomically complicated rule. And the crucial point was that up to some nonzero level of noise, the system could reliably perform a computation—such as achieving majority consensus.</p> \n<p>But does one really need a system with such complicated underlying rules to do this? Undoubtedly not. And the situation reminds me of what happened with the problem of ordinary <a href=\"https://www.wolframscience.com/nks/notes-2-3--history-of-cellular-automata/\">computation universality in cellular automata</a>. Back in the 1950s it seemed one could achieve this with a very complicated setup, constructed in an engineering-like way. But now we know that actually even one of the very simplest conceivable 1D cellular automata—<a href=\"https://www.wolframscience.com/nks/p675--the-rule-110-cellular-automaton/\">rule 110—is already computation universal</a>. And in fact the <a href=\"https://www.wolframscience.com/nks/chap-12--the-principle-of-computational-equivalence/\">Principle of Computational Equivalence</a> implies that whenever we see behavior that is not obviously simple, we can expect computation universality.</p> \n<p>Of course, it doesn’t seem like we should need to have computation universality to get distributed consensus—though the Principle of Computational Equivalence suggests that computation universality is “cheap” so might in effect “come along for free” with rules that have other necessary properties. (And by the way, this isn’t a trivial issue, because when systems are capable of universal computation there’s the potential for them to “do something one couldn’t predict”, including, for example, break out of some computer security constraint one thinks one’s defined.)</p> \n<p>But knowing that there’s a very complicated cellular automaton that achieves distributed consensus even in the presence of noise makes one wonder what the simplest cellular automaton which can do this might be. And based on my previous experience, I would expect it’ll be very simple—like the GKL rule—though it may be very difficult to prove this.</p> \n<p>It might be useful to make a few remarks about the whole issue of “noise”. In a sense when one says there’s “noise” in a system one’s saying that the system is “open”, and there’s something coming from “outside” it that one can’t predict. But as an “approximation” one can imagine just having some pseudorandom generator of noise—like the <a href=\"https://www.wolframscience.com/nks/p27--how-do-simple-programs-behave/\">rule 30 cellular automaton</a>. And then one once again has a “closed” system, to which one can immediately apply thinking based for example on the Principle of Computational Equivalence.</p> \n<p>But what about “truly unpredictable noise”? To say that this is present is to say that there are different paths of history that the system could follow, and one doesn’t know which one will be followed in any particular case. Informed by our <a href=\"https://www.wolframphysics.org/\" target=\"_blank\" rel=\"noopener\">Physics Project</a>, we can represent these possibilities by defining a <a href=\"https://www.wolframphysics.org/technical-introduction/the-updating-process-for-string-substitution-systems/\" target=\"_blank\" rel=\"noopener\">multiway graph</a>, in which there’s a branch whenever two different states are generated, depending on the noise.</p> \n<p>But in addition to branches, there can also be merges in the multiway graph. And in the rather trivial case of a cellular automaton with the identity rule, allowing every possible individual cell to be flipped by noise, we get the multiway graph:</p> \n<table class=\"InCell\"> \n <tbody> \n  <tr> \n   <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n    <div> \n     <img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg76.png\" alt=\"\" title=\"\" width=\"320\" height=\"\" /> \n    </div> \n    <div class=\"IFL\"> \n     <span class=\"close\" id=\"‘123_out'\">&amp;#10005</span> \n     <pre class=\"text\" id=\"‘123_out_text'\">getStateGraphics[state_] := \n  Framed[\n   Style[\n    ArrayPlot[{state}, \n     ColorRules -&gt; {0 -&gt; Hue[0.15, 0.72, 1], \n       1 -&gt; Hue[0.98, 1, 0.8200000000000001]}, Mesh -&gt; True, \n     MeshStyle -&gt; Orange], Hue[0.62, 1, 0.48]], \n   Background -&gt; Directive[Opacity[0.2], Hue[0.62, 0.45, 0.87]], \n   FrameMargins -&gt; {{2, 2}, {0, 0}}, RoundingRadius -&gt; 0, \n   FrameStyle -&gt; Directive[Opacity[0.5], Hue[0.62, 0.52, 0.82]]];\n\ngetStateRenderingFunction[] := \n  Inset[getStateGraphics[ToExpression[#2]], #1, \n    Center, {First[#3], Automatic}] &amp;;\n\nflipbits[list_] := \n  Table[list -&gt; MapAt[1 - # &amp;, list, i], {i, Length[list]}];\n\nSimpleGraph[\n Flatten[\n  NestList[Flatten[flipbits /@ (Last /@ #)] &amp;, flipbits[{0, 0, 0}], \n   5]], VertexShapeFunction -&gt; getStateRenderingFunction[], \n VertexSize -&gt; 1, EdgeStyle -&gt; Hue[0.75, 0, 0.35], \n PerformanceGoal -&gt; \"Quality\"]</pre> \n    </div> </td> \n  </tr> \n </tbody> \n</table> \n<p>Here’s what happens if we apply the majority cellular automata rule (rule 232) after each “noise flip” (and go a total of just 2 steps):</p> \n<table class=\"InCell\"> \n <tbody> \n  <tr> \n   <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n    <div> \n     <img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg81.png\" alt=\"\" title=\"\" width=\"580\" height=\"\" /> \n    </div> \n    <div class=\"IFL\"> \n     <span class=\"close\" id=\"‘234_out'\">&amp;#10005</span> \n     <pre class=\"text\" id=\"‘234_out_text'\">getStateGraphics[state_] := \n  Framed[\n   Style[\n    ArrayPlot[{state}, \n     ColorRules -&gt; {0 -&gt; Hue[0.15, 0.72, 1], \n       1 -&gt; Hue[0.98, 1, 0.8200000000000001]}, Mesh -&gt; True, \n     MeshStyle -&gt; Orange], Hue[0.62, 1, 0.48]], \n   Background -&gt; Directive[Opacity[0.2], Hue[0.62, 0.45, 0.87]], \n   FrameMargins -&gt; {{2, 2}, {0, 0}}, RoundingRadius -&gt; 0, \n   FrameStyle -&gt; Directive[Opacity[0.5], Hue[0.62, 0.52, 0.82]]];\n\ngetStateRenderingFunction[] := \n  Inset[getStateGraphics[ToExpression[#2]], #1, \n    Center, {First[#3], Automatic}] &amp;;\n\nflipbitsCA[ru_, list_] := \n Table[list -&gt; ru[MapAt[1 - # &amp;, list, i]], {i, Length[list]}]\n\nSimpleGraph[\n With[{g = \n    Graph[\n     Flatten[\n      NestList[\n       Flatten[\n         flipbitsCA[CellularAutomaton[232], #] &amp; /@ (Last /@ #)] &amp;, \n       flipbitsCA[CellularAutomaton[232], {0, 1, 1, 1, 0}], 3]]]}, \n  Graph[g, VertexShapeFunction -&gt; getStateRenderingFunction[], \n   AspectRatio -&gt; 1/2, VertexSize -&gt; 1.6, \n   EdgeStyle -&gt; Hue[0.75, 0, 0.35], PerformanceGoal -&gt; \"Quality\"]]]</pre> \n    </div> </td> \n  </tr> \n </tbody> \n</table> \n<p>Going more steps, with thicker edges representing more updating events connecting the same states, we get:</p> \n<table class=\"InCell\"> \n <tbody> \n  <tr> \n   <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n    <div> \n     <p><img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg91.png\" alt=\"\" title=\"\" width=\"360\" height=\"\" /> </p>\n    </div> \n    <div class=\"IFL\"> \n     <span class=\"close\" id=\"‘501_out'\">&amp;#10005</span> \n     <pre class=\"text\" id=\"‘501_out_text'\">getStateGraphics[state_] := \n  Framed[\n   Style[\n    ArrayPlot[{state}, \n     ColorRules -&gt; {0 -&gt; Hue[0.15, 0.72, 1], \n       1 -&gt; Hue[0.98, 1, 0.8200000000000001]}, Mesh -&gt; True, \n     MeshStyle -&gt; Orange], Hue[0.62, 1, 0.48]], \n   Background -&gt; Directive[Opacity[0.2], Hue[0.62, 0.45, 0.87]], \n   FrameMargins -&gt; {{2, 2}, {0, 0}}, RoundingRadius -&gt; 0, \n   FrameStyle -&gt; Directive[Opacity[0.5], Hue[0.62, 0.52, 0.82]]];\n\ngetStateRenderingFunction[] := \n  Inset[getStateGraphics[ToExpression[#2]], #1, \n    Center, {First[#3], Automatic}] &amp;;\n\nflipbitsCA[ru_, list_] := \n Table[list -&gt; ru[MapAt[1 - # &amp;, list, i]], {i, Length[list]}]\n\nWith[{g = \n   Graph[\n    Flatten[\n     NestList[\n      Flatten[\n        flipbitsCA[CellularAutomaton[232], #] &amp; /@ (Last /@ #)] &amp;, \n      flipbitsCA[CellularAutomaton[232], {0, 1, 1, 1, 0}], 4]]]}, \n SimpleGraph[g, VertexShapeFunction -&gt; getStateRenderingFunction[], \n  VertexSize -&gt; 1.25, PerformanceGoal -&gt; \"Quality\", \n  EdgeStyle -&gt; \n   Thread[\n    EdgeList[\n      SimpleGraph[\n       g]] -&gt; (Directive[Hue[0.75, 0, 0.35], \n         Thickness[1.5*Counts[EdgeList[g]][#]/Length[EdgeList[g]]], \n         Arrowheads[\n          7.5*Counts[EdgeList[g]][#]/Length[EdgeList[g]]]] &amp; /@ \n       EdgeList[SimpleGraph[g]])]]]</pre> \n    </div> </td> \n  </tr> \n </tbody> \n</table> \n<p>There are several subtle limits to be taken. The size of the cellular automaton is being taken to infinity. The number of steps is also being taken to infinity (though slower). And by saying that there is only a certain “density of noise” we’re effectively taking limits on the relative weightings of edges.</p> \n<p>To have a system which achieves consensus even in the presence of noise, only particular <a href=\"https://www.wolframscience.com/nks/p275--the-notion-of-attractors/\">attractors</a> must survive in these limits. But quite what kind of underlying rule is necessary for this we don’t know—though my guess is that it will ultimately be surprisingly simple. </p> \n<p>Will computation universality “come along for the ride”? I don’t know, but I wouldn’t be surprised if it did. Though it’s worth understanding that the definition of computation universality in a multiway system like this is somewhat subtle. (I recently discussed it in the context of <a href=\"https://www.wolframphysics.org/bulletins/2021/02/multiway-turing-machines/\" target=\"_blank\" rel=\"noopener\">multiway Turing machines</a>, but there are still more issues when one’s interested in probabilities and “probabilistic weightings” of different paths.)</p> \n<h2 id=\"purposeful-attacks-on-a-cellular-automaton\">“Purposeful Attacks” on a Cellular Automaton</h2> \n<p>We’ve just talked about the effects of “random noise” on consensus in a cellular automaton. But what about “noise” (or “errors”) that are “purposefully introduced”? Is there a pattern of some potentially small number of errors that will, for example, flip the consensus result? </p> \n<p>One version of this question—reminiscent of adversarial examples in neural networks—is just to ask what changes need to be made to an initial condition to “flip its result”. Or, put another way: let’s say one has a system (like the GKL rule) that basically achieves correct consensus for almost all randomly chosen initial conditions. Now we ask the question of whether there is a systematic way to tweak a given randomly chosen initial condition to make it “lead to the wrong answer”. (One can think of this as a bit like asking whether one can find a nonce that will make a <a href=\"https://reference.wolfram.com/language/ref/Hash.html\">cryptographic hash</a> come out in a particular way.) </p> \n<p>Needless to say, there are many subtleties to this question. What do we mean by “random initial conditions”? Presumably a periodic state wouldn’t qualify. What kinds of “tweaks” can we make?</p> \n<p>Something that might conceivably happen is that there’s a certain behavior with “ordinary” initial conditions, but there’s some special “seed” that—if it occurs—will produce unbounded (“tumor-style”) growth that eventually takes over the system, as in this simple example from rule 122:</p> \n<table class=\"InCell\"> \n <tbody> \n  <tr> \n   <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n    <div> \n     <img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg92.png\" alt=\"\" title=\"\" width=\"561\" height=\"\" /> \n    </div> \n    <div class=\"IFL\"> \n     <span class=\"close\" id=\"92_out\">&amp;#10005</span> \n     <pre class=\"text\" id=\"92_out_text\">BlockRandom[SeedRandom[244234]; \n ArrayPlot[\n  CellularAutomaton[122, \n   ReplacePart[Append[Riffle[RandomInteger[1, 101], 0], 0], 140 -&gt; 1],\n    40], Frame -&gt; False]]</pre> \n    </div> </td> \n  </tr> \n </tbody> \n</table> \n<p>If instead of just “attacking” the initial conditions one allows the possibility of, say, changing the value of a particular cell on every step, it’s easy to end up, for example, with “immovable lumps” that in effect prevent “full consensus”:</p> \n<table class=\"InCell\"> \n <tbody> \n  <tr> \n   <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n    <div> \n     <img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg93.png\" alt=\"\" title=\"\" width=\"568\" height=\"\" /> \n    </div> \n    <div class=\"IFL\"> \n     <span class=\"close\" id=\"93_out\">&amp;#10005</span> \n     <pre class=\"text\" id=\"93_out_text\">BlockRandom[SeedRandom[3257]; \n ArrayPlot[\n  NestList[MapAt[RandomChoice[{0, 1} -&gt; {# &amp;, 1 - # &amp;}], \n     CellularAutomaton[{339789091192587366278221041213531750560, 2, \n        3}][#], List /@ Range[195, 205]] &amp;, \n   RandomChoice[{.4, .6} -&gt; {1, 0}, 400], 120], \n  ColorRules -&gt; {0 -&gt; Hue[0.15, 0.72, 1], \n    1 -&gt; Hue[0.98, 1, 0.8200000000000001]}, Frame -&gt; False]]</pre> \n    </div> </td> \n  </tr> \n </tbody> \n</table> \n<p>But what if one considers making changes at a small number of places in the ongoing evolution—say in effect adding a little “intelligent noise” at locations carefully computed from the actual pattern of evolution? Will the system always be able to “heal itself” from such “Byzantine tampering”, in effect “correcting few-bit errors”? Or is there some particular “vulnerability” that can be exploited to “corrupt” the final results with just a few carefully chosen changes?</p> \n<p>One can think of the two consensus final states as being attractors, whose basins of attraction include all initial conditions above or below density <img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514img36.png\" style=\"margin-top: -3px;\" width=\"7\" height=\"17\" align=\"absmiddle\">. Alternatively, one can think of the cellular automaton as “solving the classification problem” of “recognizing the initial density”. And perhaps there is some way to extend the cellular automaton to a neural net with continuous weights, and then use machine learning methods to iteratively find minimal places where weights can be changed. </img></p> \n<h2 id=\"graph-cellular-automata\">Graph Cellular Automata</h2> \n<p>In an ordinary cellular automaton, values are assigned to cells laid out in a definite grid. But as a generalization one can allow the cells to lie at the nodes of a graph—and then to take the neighbors on the graph to define the neighbors to be used in the rule: </p> \n<table class=\"InCell\"> \n <tbody> \n  <tr> \n   <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n    <div> \n     <img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg95.png\" alt=\"\" title=\"\" width=\"486\" height=\"\" /> \n    </div> \n    <div class=\"IFL\"> \n     <span class=\"close\" id=\"95_out\">&amp;#10005</span> \n     <pre class=\"text\" id=\"95_out_text\">RandomGraph[{20, 40}, EdgeStyle -&gt; Gray, \n VertexStyle -&gt; \n  Table[i -&gt; (RandomInteger[] /. {0 -&gt; Hue[0.15, 0.72, 1], \n       1 -&gt; Hue[0.98, 1, 0.8200000000000001]}), {i, 20}], \n VertexSize -&gt; .5]</pre> \n    </div> </td> \n  </tr> \n </tbody> \n</table> \n<p>There is one immediate issue here. In the basic definition of a standard cellular automaton, the rule “takes its arguments” in a definite order. But if one’s dealing with an ordinary graph (as opposed to, for example, an <a href=\"https://www.wolframphysics.org/technical-introduction/basic-form-of-models/\" target=\"_blank\" rel=\"noopener\">ordered hypergraph</a>), all one knows is what nodes are connected to a given node—with no immediate ordering defined. </p> \n<p>And this implies constraints on the type of cellular automaton rule we can use. One can think of setting up a “geodesic ball” around each node in the graph. Successive “shells” contain nodes that are successive graph distances away from a given node. But the cellular automaton rule can’t distinguish which “position” a given cell is at within a particular shell; all it can do is count the total number of cells in each shell that have a given value.</p> \n<p>If the graph is vertex transitive, so that the graph structure around every node in the graph is the same (as for a Cayley graph), then the cellular automaton rule can basically contain a fixed table of results that depend only on the number of cells of each value in each shell. But for a general graph the rule for the cellular automaton must allow for arbitrary numbers of cells in each shell.</p> \n<p>And one case where this happens to be straightforward to do is for the simple majority rule. So here’s an example of this rule applied to “geodesic shells of radius 1” in the graph above: </p> \n<table class=\"InCell\"> \n <tbody> \n  <tr> \n   <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n    <div> \n     <p><img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg99.png\" alt=\"\" title=\"\" width=\"563\" height=\"\" /> </p>\n    </div> \n    <div class=\"IFL\"> \n     <span class=\"close\" id=\"‘667_out'\">&amp;#10005</span> \n     <pre class=\"text\" id=\"‘667_out_text'\">SynchronousStepNewColors[dependencies_, colors_] := \n Flatten[\n  Map[With[{neighbors = \n       Sort[Counts[Part[colors, Last[#]]], Greater]},\n     If[DuplicateFreeQ[Values[neighbors]],\n      First[Keys[neighbors]], \n      colors[[First[#]]]]] &amp;, dependencies]]\n\nGraphMajorityCA[graph0_, p_, steps_, radius_ : 1] := \n BlockRandom[SeedRandom[14];\n  With[{graph = IndexGraph[graph0]}, \n   With[{init = \n      Association[# -&gt; RandomChoice[{1 - p, p} -&gt; {1, 0}] &amp; /@ \n        VertexList[graph]]}, \n    Module[{dependencies},\n     dependencies = \n      Table[\n       n -&gt; \n        VertexOutComponent[graph, VertexList[graph][[n]], \n         radius], {n, VertexCount[graph]}];\n     Graph[EdgeList[graph], \n        VertexStyle -&gt; \n         MapThread[\n          Rule[#1, \n            Switch[#2, 0, Hue[0.15, 0.72, 1], 1, Hue[\n             0.98, 1, 0.8200000000000001]]] &amp;, {Keys[init], #}],  \n        EdgeStyle -&gt; Gray, VertexSize -&gt; .5] &amp; /@ \n      NestList[SynchronousStepNewColors[dependencies, #] &amp;, \n       Values[init], steps]\n     ]]]]\n\nRotate[#, 90 Degree] &amp; /@ (Graph[#, ImageSize -&gt; 190] &amp; /@ \n   GraphMajorityCA[\\!\\(\\*\nGraphicsBox[\nNamespaceBox[\"NetworkGraphics\",\nDynamicModuleBox[{Typeset`graph = HoldComplete[\nGraph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, \n           19, 20}, {Null, \nSparseArray[\n            Automatic, {20, 20}, 0, {\n             1, {{0, 2, 5, 7, 9, 13, 20, 25, 29, 33, 36, 41, 43, 46, \n               48, 54, 59, 63, 68, 72, 80}, {{5}, {7}, {11}, {16}, {\n               18}, {11}, {13}, {16}, {18}, {1}, {6}, {9}, {20}, {\n               5}, {13}, {15}, {16}, {17}, {19}, {20}, {1}, {9}, {\n               13}, {15}, {16}, {10}, {15}, {19}, {20}, {5}, {7}, {\n               12}, {20}, {8}, {15}, {20}, {2}, {3}, {16}, {17}, {\n               20}, {9}, {19}, {3}, {6}, {7}, {17}, {18}, {6}, {7}, {\n               8}, {10}, {18}, {20}, {2}, {4}, {6}, {7}, {11}, {6}, {\n               11}, {14}, {18}, {2}, {4}, {14}, {15}, {17}, {6}, {\n               8}, {12}, {20}, {5}, {6}, {8}, {9}, {10}, {11}, {15}, {\n               19}}}, Pattern}]}, {EdgeStyle -&gt; {\nGrayLevel[0.5]}, VertexSize -&gt; {0.5}, \n            VertexStyle -&gt; {\n             18 -&gt; Hue[0.98, 1, 0.8200000000000001], 6 -&gt; \n              Hue[0.98, 1, 0.8200000000000001], 15 -&gt; \n              Hue[0.15, 0.72, 1], 1 -&gt; Hue[0.15, 0.72, 1], 20 -&gt; \n              Hue[0.15, 0.72, 1], 9 -&gt; \n              Hue[0.98, 1, 0.8200000000000001], 13 -&gt; \n              Hue[0.98, 1, 0.8200000000000001], 2 -&gt; \n              Hue[0.98, 1, 0.8200000000000001], 8 -&gt; \n              Hue[0.15, 0.72, 1], 3 -&gt; \n              Hue[0.98, 1, 0.8200000000000001], 4 -&gt; \n              Hue[0.98, 1, 0.8200000000000001], 11 -&gt; \n              Hue[0.98, 1, 0.8200000000000001], 10 -&gt; \n              Hue[0.15, 0.72, 1], 19 -&gt; \n              Hue[0.98, 1, 0.8200000000000001], 7 -&gt; \n              Hue[0.15, 0.72, 1], 16 -&gt; Hue[0.15, 0.72, 1], 17 -&gt; \n              Hue[0.98, 1, 0.8200000000000001], 14 -&gt; \n              Hue[0.15, 0.72, 1], 12 -&gt; Hue[0.15, 0.72, 1], 5 -&gt; \n              Hue[0.15, 0.72, 1]}}]]}, \nTagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData[\"\n1:eJxTTMoPSmViYGAQAWIQ/f6kR7GgOLuDhRP7AqlYDgefsPSGL9fv2f8Lnlkc\nmvfBvlZItHLWuS/2DGgg/9jtrhs7ftvvM+ptrezlcCgy9vQT9GBy2Ll97u7Y\nOCaHo7IP/Cbs+mnfZbVWik2F2SGqOd7o0ar/9t8kP65/vJjL4Wi3ZX5Y6VP7\nNZUzj4qe5nFo3Jj1qfrrf/v3vhsYxNawO3AEfFuR0nfZ/tTMg6XzfL7Z82q9\ndLwv+cG+ZsK3ia8MhBxkHH6bp6f8sQ9p/u2R+eGffUTSNr4jU1/Ym2z+VXtG\n8ZJ9ztZLRw4cZnFg2NDoE27D5JBj4p33avNHe1n24FmPsj7bvxN+fM7e86d9\nixWjlEzhJ/tz3z/kCdxkcEiQU3+SM+u5fcT+3BNHM37bP2tYmmyryOug/He9\n3TWdr/a919meTv/D5rCNS/Ajo/gXewA1KJH+\n\"], {\n{GrayLevel[0.5], Opacity[0.7], Arrowheads[0.], \n              ArrowBox[{{1, 5}, {1, 7}, {2, 11}, {2, 16}, {2, 18}, {3,\n                11}, {3, 13}, {4, 16}, {4, 18}, {5, 6}, {5, 9}, {5, \n               20}, {6, 13}, {6, 15}, {6, 16}, {6, 17}, {6, 19}, {6, \n               20}, {7, 9}, {7, 13}, {7, 15}, {7, 16}, {8, 10}, {8, \n               15}, {8, 19}, {8, 20}, {9, 12}, {9, 20}, {10, 15}, {10,\n                20}, {11, 16}, {11, 17}, {11, 20}, {12, 19}, {14, \n               17}, {14, 18}, {15, 18}, {15, 20}, {17, 18}, {19, 20}},\n                0.09587857253283466]}, \n{Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], \n{Hue[0.15, 0.72, 1], DiskBox[1, 0.09587857253283466]}, \n{Hue[0.98, 1, 0.8200000000000001], DiskBox[2, 0.09587857253283466]}, \n{Hue[0.98, 1, 0.8200000000000001], DiskBox[3, 0.09587857253283466]}, \n{Hue[0.98, 1, 0.8200000000000001], DiskBox[4, 0.09587857253283466]}, \n{Hue[0.15, 0.72, 1], DiskBox[5, 0.09587857253283466]}, \n{Hue[0.98, 1, 0.8200000000000001], DiskBox[6, 0.09587857253283466]}, \n{Hue[0.15, 0.72, 1], DiskBox[7, 0.09587857253283466]}, \n{Hue[0.15, 0.72, 1], DiskBox[8, 0.09587857253283466]}, \n{Hue[0.98, 1, 0.8200000000000001], DiskBox[9, 0.09587857253283466]}, \n{Hue[0.15, 0.72, 1], DiskBox[10, 0.09587857253283466]}, \n{Hue[0.98, 1, 0.8200000000000001], \n               DiskBox[11, 0.09587857253283466]}, \n{Hue[0.15, 0.72, 1], DiskBox[12, 0.09587857253283466]}, \n{Hue[0.98, 1, 0.8200000000000001], \n               DiskBox[13, 0.09587857253283466]}, \n{Hue[0.15, 0.72, 1], DiskBox[14, 0.09587857253283466]}, \n{Hue[0.15, 0.72, 1], DiskBox[15, 0.09587857253283466]}, \n{Hue[0.15, 0.72, 1], DiskBox[16, 0.09587857253283466]}, \n{Hue[0.98, 1, 0.8200000000000001], \n               DiskBox[17, 0.09587857253283466]}, \n{Hue[0.98, 1, 0.8200000000000001], \n               DiskBox[18, 0.09587857253283466]}, \n{Hue[0.98, 1, 0.8200000000000001], \n               DiskBox[19, 0.09587857253283466]}, \n{Hue[0.15, 0.72, 1], DiskBox[20, 0.09587857253283466]}}}]],\nMouseAppearanceTag[\"NetworkGraphics\"]],\nAllowKernelInitialization-&gt;False]],\nDefaultBaseStyle-&gt;{\n        \"NetworkGraphics\", FrontEnd`GraphicsHighlightColor -&gt; \n         Hue[0.8, 1., 0.6]},\nFormatType-&gt;TraditionalForm,\nFrameTicks-&gt;None]\\), .3, 3])</pre> \n    </div> </td> \n  </tr> \n </tbody> \n</table> \n<p>So what globally happens with this rule? For the graph</p> \n<table class=\"InCell\"> \n <tbody> \n  <tr> \n   <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n    <div> \n     <img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg100.png\" alt=\"\" title=\"\" width=\"475\" height=\"\" /> \n    </div> \n    <div class=\"IFL\"> \n     <span class=\"close\" id=\"100_out\">&amp;#10005</span> \n     <pre class=\"text\" id=\"100_out_text\">Graph[ResourceFunction[\"TorusGraph\"][{3, 3}], VertexStyle -&gt; White, \n VertexSize -&gt; .2, EdgeStyle -&gt; \\!\\(\\*\nTagBox[\nStyleBox[\nInterpretationBox[\nRowBox[{\"CloudGet\", \"[\", \"\\\"\\&lt;http://wolfr.am/VtlQl86f\\&gt;\\\"\", \"]\"}],\nHue[0.75, 0, 0.35],\nEditable-&gt;False,\nSelectable-&gt;False],\nShowSpecialCharacters-&gt;False,\nShowStringCharacters-&gt;True,\nNumberMarks-&gt;True],\nFullForm]\\)]</pre> \n    </div> </td> \n  </tr> \n </tbody> \n</table> \n<p>here’s what the state transition graph looks like when the rule is applied, whereas above nodes are colored according to which value is in the majority:</p> \n<table class=\"InCell\"> \n <tbody> \n  <tr> \n   <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n    <div> \n     <p><img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg104.png\" alt=\"\" title=\"\" width=\"436\" height=\"\" /> </p>\n    </div> \n    <div class=\"IFL\"> \n     <span class=\"close\" id=\"‘669_out'\">&amp;#10005</span> \n     <pre class=\"text\" id=\"‘669_out_text'\">SynchronousStepNewColors[dependencies_, colors_] := \n Flatten[\n  Map[With[{neighbors = \n       Sort[Counts[Part[colors, Last[#]]], Greater]},\n     If[DuplicateFreeQ[Values[neighbors]],\n      First[Keys[neighbors]], \n      colors[[First[#]]]]] &amp;, dependencies]]\n\nGraphMajorityCASTG[graph0_, radius_ : 1] :=\n \n With[{graph = IndexGraph[graph0]},\n  Module[{dependencies},\n   dependencies = \n    Table[\n     n -&gt; \n      VertexOutComponent[graph, VertexList[graph][[n]], radius], {n, \n      VertexCount[graph]}];\n   # -&gt; SynchronousStepNewColors[dependencies, #] &amp; /@ \n    Tuples[{1, 0}, VertexCount[graph]]\n   ]]\n\nWith[{g = \n   GraphMajorityCASTG[ResourceFunction[\"TorusGraph\"][{3, 3}], 1]}, \n Graph[g, \n  VertexStyle -&gt; (# -&gt; \n       If[Mean[#] &gt; 1/2, Hue[0.98, 1, 0.8200000000000001], Hue[\n        0.15, 0.72, 1]] &amp; /@ VertexList[g]), EdgeStyle -&gt; \\!\\(\\*\nTagBox[\nStyleBox[\nInterpretationBox[\nButtonBox[\nTooltipBox[\nGraphicsBox[{\n{GrayLevel[0], RectangleBox[{0, 0}]}, \n{GrayLevel[0], RectangleBox[{1, -1}]}, \n{Hue[0.75, 0, 0.35], RectangleBox[{0, -1}, {2, 1}]}},\nAspectRatio-&gt;1,\nDefaultBaseStyle-&gt;\"ColorSwatchGraphics\",\nFrame-&gt;True,\nFrameStyle-&gt;Hue[0., 0., 0.23333333333333334`],\nFrameTicks-&gt;None,\nImageSize-&gt;{Automatic, 12.879},\nPlotRangePadding-&gt;None],\nStyleBox[\nRowBox[{\"Hue\", \"[\", \nRowBox[{\"0.75`\", \",\", \"0\", \",\", \"0.35`\"}], \"]\"}], NumberMarks -&gt; \n           False]],\nAppearance-&gt;None,\nBaseStyle-&gt;{},\nBaselinePosition-&gt;Baseline,\nButtonFunction:&gt;With[{Typeset`box$ = EvaluationBox[]}, \nIf[\nNot[\nAbsoluteCurrentValue[\"Deployed\"]], \n            SelectionMove[Typeset`box$, All, Expression]; \n            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; \n            FrontEnd`Private`$ColorSelectorInitialColor = \n             Hue[0.75, 0, 0.35]; \n            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; \n            MathLink`CallFrontEnd[\nFrontEnd`AttachCell[Typeset`box$, \nFrontEndResource[\"HueColorValueSelector\"], {0, {Left, Bottom}}, {\n               Left, Top}, \n               \"ClosingActions\" -&gt; {\n                \"SelectionDeparture\", \"ParentChanged\", \n                 \"EvaluatorQuit\"}]]]],\nDefaultBaseStyle-&gt;{},\nEvaluator-&gt;Automatic,\nMethod-&gt;\"Preemptive\"],\nHue[0.75, 0, 0.35],\nEditable-&gt;False,\nSelectable-&gt;False],\nShowSpecialCharacters-&gt;False,\nShowStringCharacters-&gt;True,\nNumberMarks-&gt;True],\nFullForm]\\)]]</pre> \n    </div> </td> \n  </tr> \n </tbody> \n</table> \n<p>No doubt there are general results that can be proved about the “success rate” for the majority cellular automaton rule on graphs. But experiments tend to suggest that the rule does much better on graphs than it does on regular arrays.</p> \n<p>Presumably there are graph-theoretic features of the underlying graph that affect the performance. Higher connectivity presumably helps, not least because it tends to avoid “bridges” where colors can be balanced on “all sides” of a particular node. Lack of symmetry also probably tends to inhibit the appearance of cycles. And in general one can think of the “spreading of consensus” as being at least <a href=\"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC122850/\" target=\"_blank\" rel=\"noopener\">somewhat like a percolation process</a>.</p> \n<p>For ordinary cellular automata, it’s clear what it means to ask about the “infinite-size limit”. But for graphs it’s only immediately clear when one’s dealing with some readily extensible family of graphs (like grids or torus graphs or various Cayley graphs). And for arbitrary “<a href=\"https://reference.wolfram.com/language/guide/RandomGraphs.html\">random graphs</a>” the results will probably depend significantly on the graph distribution used. <p>In our Physics Project we have been concerned with large graphs that can be “grown” according to local rules. We expect such graphs often to show certain “statistical regularities” in the “continuum limit”. In our project, we characterize the structure of these graphs by looking for example at the <a href=\"https://www.wolframphysics.org/technical-introduction/limiting-behavior-and-emergent-geometry/\" target=\"_blank\" rel=\"noopener\">growth rates of volumes of geodesic balls</a>, and identifying things like dimension and curvature from them. So what will happen if we run a majority rule cellular automaton on a large graph that has certain “geometrical” properties? <p>Essentially we need to ask what the “continuum limit” of the majority rule cellular automaton is. The grids used in ordinary cellular automata are too special for them to achieve any kind of generic such limit. But on “geometrizable” graphs, it’s more reasonable to expect such a continuum limit.</p> <p>We can try considering a 1D example. The initial values are then just given by a continuous function of position:</p> \n  <table class=\"InCell\"> \n   <tbody> \n    <tr> \n     <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n      <div> \n       <img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg105.png\" alt=\"\" title=\"\" width=\"556\" height=\"\" /> \n      </div> \n      <div class=\"IFL\"> \n       <span class=\"close\" id=\"105_out\">&amp;#10005</span>\n      </div></td>\n    </tr>\n   </tbody>\n  </table></p> <pre class=\"text\" id=\"105_out_text\">With[{if = (SeedRandom[69774]; \n    Interpolation[RandomReal[{-10, 10}, 10], \n     InterpolationOrder -&gt; 6])}, \n Plot[if[x], {x, 1, 10}, Filling -&gt; Axis, \n  ColorFunctionScaling -&gt; False, \n  ColorFunction -&gt; (If[#2 &gt; 0, Hue[0.98, 1, 0.8200000000000001], Hue[\n      0.15, 0.72, 1]] &amp;), Frame -&gt; True, AspectRatio -&gt; 1/3, \n  FrameTicks -&gt; None]]</pre> </p>     \n<p>The “consensus result” in this case should be a constant function whose value is effectively the sign of the integral of this function. But what kind of integro-differential-algebraic equation can reproduce the time evolution isn’t clear.</p> \n<p>Going back to majority cellular automata on graphs, it’s worth noting that if the edges of the graph can be assigned both positive and negative weights, then the system is effectively like a synchronous version of a neural net. The analog of this on a regular grid (which is structurally like a <a href=\"https://www.wolframscience.com/nks/notes-12-6--history-of-computational-irreducibility/\">spin glass</a>) is then known to show various features of computational irreducibility.</p> \n<p>Instead of thinking about underlying graphs with weighted edges, we can consider cellular automaton rules that don’t just involve pure nearest-neighbor majority. For example, we could consider rules that have different weights for geodesic shells of different radii (much like the <a href=\"https://www.wolframscience.com/nks/p428--biological-pigmentation-patterns/\">activation-inhibition cellular automata</a> used to model things like biological pigmentation patterns). </p> \n<p>But is it really true that only totalistic rules based on geodesic shells can be used for graph cellular automata? To do more than this requires in effect defining “directions” in the graph. But our Physics Project has provided a variety of mechanisms for doing just this—and this in principle for setting up non-totalistic graph cellular automata.</p> \n<h2 id=\"asynchronous-updating\">Asynchronous Updating</h2> \n<p>An important feature of cellular automata is the assumption that all cell values are updated “simultaneously” or “synchronously” in a definite series of steps. But in practical examples of distributed consensus one’s often dealing with values that are instead updated asynchronously. In effect, what one wants is to “break down” the synchronous updating of an ordinary cellular automaton into a sequence of updates of individual cells, with the order of these updates not being specified by any particular rule.</p> \n<p>So an obvious first question is: “Does it actually matter in what order these individual updates are done?” And sometimes it doesn’t. Here’s an example. Instead of an ordinary cellular automaton, consider a block cellular automaton in which at each step pairs of values adjacent cells are replaced by new values:</p> \n<table class=\"InCell\"> \n <tbody> \n  <tr> \n   <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n    <div> \n     <img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg106.png\" alt=\"\" title=\"\" width=\"530\" height=\"\" /> \n    </div> \n    <div class=\"IFL\"> \n     <span class=\"close\" id=\"106_out\">&amp;#10005</span> \n     <pre class=\"text\" id=\"106_out_text\">RulePlot[SubstitutionSystem[{{0, 0} -&gt; {0, 0}, {1, 0} -&gt; {0, 1}, {0, \n     1} -&gt; {0, 1}, {1, 1} -&gt; {1, 1}}], \n ColorRules -&gt; {0 -&gt; Hue[0.15, 0.72, 1], \n   1 -&gt; Hue[0.98, 1, 0.8200000000000001]}, MeshStyle -&gt; Orange]</pre> \n    </div> </td> \n  </tr> \n </tbody> \n</table> \n<p>For synchronous updating, we might apply these rules in a systematic “brick-like” pattern. But to study asynchronous updating, let’s just apply these rules in random positions at each step. Here are a few examples of what can happen:</p> \n<table class=\"InCell\"> \n <tbody> \n  <tr> \n   <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n    <div> \n     <img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg107.png\" alt=\"\" title=\"\" width=\"577\" height=\"\" /> \n    </div> \n    <div class=\"IFL\"> \n     <span class=\"close\" id=\"‘770_out'\">&amp;#10005</span> \n     <pre class=\"text\" id=\"‘770_out_text'\">BlockRandom[SeedRandom[235234]; \n With[{i = RandomInteger[1, 30]}, \n  Table[ArrayPlot[\n    NestList[\n     First[\n       Sort[{Flatten[\n          MapAt[Sort, Partition[#, 2], \n           Union[List /@ RandomInteger[{1, Length[#]/2}, 20]]]], \n         RotateRight[\n          Flatten[\n           MapAt[Sort, Partition[RotateLeft[#], 2], \n            Union[\n             List /@ RandomInteger[{1, Length[#]/2}, 20]]]]]}]] &amp;, i, \n     63], ImageSize -&gt; {150, Automatic}, \n    ColorRules -&gt; {0 -&gt; Hue[0.15, 0.72, 1], \n      1 -&gt; Hue[0.98, 1, 0.8200000000000001]}, Mesh -&gt; True, \n    MeshStyle -&gt; Orange], 4]]]</pre> \n    </div> </td> \n  </tr> \n </tbody> \n</table> \n<p>And the notable feature is that even though the specific evolution in each case is different, the final result is always the same—in this case just corresponding to having all <span class=\"InlineFormula\"><img style=\"margin-bottom: 3px\" src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514yellowbox2.png\" width=\"15\" height=\"\" align=\"absmiddle\" class=\"inline-img\" /></span> sorted before \n <nobr>\n  <span class=\"InlineFormula\"><img style=\"margin-bottom: 2px\" src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/swo514redbox2.png\" width=\"15\" height=\"\" align=\"absmiddle\" class=\"inline-img\" /></span>.\n </nobr></p> \n<p>It doesn’t work this way for all rules, but for this rule, regardless of the intermediate states that are produced, there is always eventual consistency in the final result.</p> \n<p>As it turns out, this kind of phenomenon is crucial in our Physics Project. And indeed the generalization that we call “<a href=\"https://www.wolframphysics.org/technical-introduction/the-updating-process-for-string-substitution-systems/the-phenomenon-of-causal-invariance/\" target=\"_blank\" rel=\"noopener\">causal invariance</a>” is what leads, for example, to relativistic invariance. But from the formalism of the Physics Project we also get a general approach to asynchronous evolution: trace all possible “update histories” using a multiway graph.</p> \n<p>Here is the multiway graph for the simple sorting rule above:</p> \n<table class=\"InCell\"> \n <tbody> \n  <tr> \n   <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n    <div> \n     <img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514XXimg111.png\" alt=\"\" title=\"\" width=\"192\" height=\"\" />\n    </div> \n    <div class=\"IFL\"> \n     <span class=\"close\" id=\"‘771_out'\">&amp;#10005</span> \n     <pre class=\"text\" id=\"‘771_out_text'\">getStateGraphics[state_] := \n  Framed[\n   Style[\n    ArrayPlot[{state}, \n     ColorRules -&gt; {0 -&gt; Hue[0.15, 0.72, 1], \n       1 -&gt; Hue[0.98, 1, 0.8200000000000001]}, Mesh -&gt; True, \n     MeshStyle -&gt; Orange], Hue[0.62, 1, 0.48]], \n   Background -&gt; Directive[Opacity[0.2], Hue[0.62, 0.45, 0.87]], \n   FrameMargins -&gt; {{2, 2}, {0, 0}}, RoundingRadius -&gt; 0, \n   FrameStyle -&gt; Directive[Opacity[0.5], Hue[0.62, 0.52, 0.82]]];\n\ngetStateRenderingFunction[] := \n  Inset[getStateGraphics[ToExpression[#2]], #1, \n    Center, {First[#3], Automatic}] &amp;;\n\nResourceFunction[\n  \"MultiwaySystem\"][{{1, 0} -&gt; {0, 1}}, {{1, 0, 1, 1, 0, 0, \n   1}}, 8, \"StatesGraph\", \n \"StateRenderingFunction\" -&gt; getStateRenderingFunction[], \n VertexSize -&gt; 1.75, PerformanceGoal -&gt; \"Quality\"]</pre> \n    </div> </td> \n  </tr> \n </tbody> \n</table> \n<p>As expected, all possible update histories eventually converge to the same final state.</p> \n<p>So what about the majority rule cellular automaton? It doesn’t always show eventual consistency, as this example shows:</p> \n<table class=\"InCell\"> \n <tbody> \n  <tr> \n   <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n    <div> \n     <img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514XXimg115.png\" alt=\"\" title=\"\" width=\"527\" height=\"\" /> \n    </div> \n    <div class=\"IFL\"> \n     <span class=\"close\" id=\"‘772_out'\">&amp;#10005</span> \n     <pre class=\"text\" id=\"‘772_out_text'\">randomOrderCAFunc[ruleRadius_, ruleNumber_, init_, eventCount_, func_] :=\n  func[evaluateSingleEvent[ruleRadius, ruleNumber, #] &amp;, init, eventCount];\n\nRandomOrderCA[args___] := randomOrderCAFunc[args, Nest];\n\nRandomOrderCAList[args___] := randomOrderCAFunc[args, NestList];\n\nfindLastEvent[eventNumber_, position_, eventsIndex_] := Module[{},\n  Max[Select[Lookup[eventsIndex, position, {-Infinity}], # &lt; eventNumber &amp;]]\n];\n\ngetCausalLinks[eventNumber_, position_, eventsIndex_, size_, ruleRadius_] := Module[{},\n  DeleteCases[\n    findLastEvent[eventNumber, #, eventsIndex] -&gt; eventNumber &amp; /@\n      Mod[Range[position - ruleRadius, position + ruleRadius], size, 1],\n    -Infinity -&gt; _]\n];\n\nRandomOrderCACausalGraph[ruleRadius_, ruleNumber_, init_, eventCount_, opts___] := Module[{eventsIndex, eventPositions},\n  eventsIndex = KeySort @ Map[\n    Last,\n    GroupBy[\n      Thread[\n        (eventPositions = Reap[RandomOrderCA[ruleRadius, ruleNumber, init, eventCount]][[2, 1]]) -&gt;\n          Range[eventCount]],\n      First],\n    {2}];\n  Graph[\n    Range[eventCount],\n    Catenate[getCausalLinks[#, eventPositions[[#]], eventsIndex, Length[init], ruleRadius] &amp; /@ Range[eventCount]],\n    EdgeStyle -&gt; ResourceFunction[\"WolframPhysicsProjectStyleData\"][\"CausalGraph\", \"EdgeStyle\"],\n    VertexStyle -&gt; ResourceFunction[\"WolframPhysicsProjectStyleData\"][\"CausalGraph\", \"VertexStyle\"],\n    opts]\n]\n\nrandomInit[size_, onesFraction_] := RandomChoice[{1 - onesFraction, onesFraction} -&gt; {0, 1}, size];\n\nevaluateSingleEvent[ruleRadius_, ruleNumber_, init_] :=\n  evaluateEventAtPlace[ruleRadius, ruleNumber, init, Sow[RandomInteger[{1, Length[init]}]]];\n\nevaluateEventAtPlace[ruleRadius_, ruleNumber_, init_, center_] := Module[{input, newCenterValue},\n  input = cyclicTake[init, Range[center - ruleRadius, center + ruleRadius]];\n  newCenterValue = CellularAutomaton[{ruleNumber, 2, ruleRadius}, input][[ruleRadius + 1]];\n  ReplacePart[init, center -&gt; newCenterValue]\n];\n\ncyclicTake[list_, indices_] := cyclicPart[list, #] &amp; /@ indices;\n\ncyclicPart[list_, index_] := list[[Mod[index, Length[list], 1]]];\n\ngetStateGraphics[state_] := \n  Framed[\n   Style[\n    ArrayPlot[{state}, \n     ColorRules -&gt; {0 -&gt; Hue[0.15, 0.72, 1], \n       1 -&gt; Hue[0.98, 1, 0.8200000000000001]}, Mesh -&gt; True, \n     MeshStyle -&gt; Orange], Hue[0.62, 1, 0.48]], \n   Background -&gt; Directive[Opacity[0.2], Hue[0.62, 0.45, 0.87]], \n   FrameMargins -&gt; {{2, 2}, {0, 0}}, RoundingRadius -&gt; 0, \n   FrameStyle -&gt; Directive[Opacity[0.5], Hue[0.62, 0.52, 0.82]]];\n\ngetStateRenderingFunction[] := \n  Inset[getStateGraphics[List @@ #2], #1, \n    Center, {First[#3], Automatic}] &amp;;\n\nSeedRandom[643767 + 5]; SimpleGraph[\n NestGraph[\n  Table[state @@ evaluateEventAtPlace[1, 232, List @@ #, c], {c, 1, \n     Length[#]}] &amp;, state @@ randomInit[9, 0.7], 20, \n  VertexShapeFunction -&gt; getStateRenderingFunction[],  \n  PerformanceGoal -&gt; \"Quality\", VertexSize -&gt; 1, \n  ResourceFunction[\"WolframPhysicsProjectStyleData\"][\"StatesGraph\", \n   \"Options\"]]]</pre> \n    </div> </td> \n  </tr> \n </tbody> \n</table> \n<p>So this means that in general it matters in what order asynchronous updates are done, or, in effect, what “path of history” is taken. But to get a sense of typical behavior, we can consider random sequences of updates. Here’s an example of what one gets, doing one update per step:</p> \n<table class=\"InCell\"> \n <tbody> \n  <tr> \n   <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n    <div> \n     <img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg120.png\" alt=\"\" title=\"\" width=\"570\" height=\"\" />\n    </div> \n    <div class=\"IFL\"> \n     <span class=\"close\" id=\"‘773_out'\">&amp;#10005</span> \n     <pre class=\"text\" id=\"‘773_out_text'\">caEvaluateCompiled = \n  FunctionCompile[\n   Function[{Typed[rule, TypeSpecifier[\"PackedArray\"][\"MachineInteger\", 1]], \n     Typed[rad, \"MachineInteger\"], \n     Typed[init, TypeSpecifier[\"PackedArray\"][\"MachineInteger\", 1]], \n     Typed[eventCount, \"Integer64\"]}, \n    Module[{state, position, substate, rulePart, newCellValue},\n     \n     state = init;\n     Do[\n      position = RandomInteger[{1, Length[state]}];\n      substate = \n       state[[\n        Mod[#, Length[state], 1] &amp; /@ \n         Range[position - rad, position + rad]]];\n      rulePart = Fold[2 #1 + #2 &amp;, 0, substate] + 1;\n      newCellValue = rule[[rulePart]];\n      state[[position]] = newCellValue;\n      , eventCount];\n     state\n     ]]];\n\nShould be compiled for all machine targets:\n\ncaEvaluateCompiled = CompiledCodeFunction[\nAssociation[\"Signature\" -&gt; TypeSpecifier[{\n\"PackedArray\"[\"Integer64\", \nTypeFramework`TypeLiteral[1, \"Integer64\"]], \"Integer64\", \n\"PackedArray\"[\"Integer64\", \nTypeFramework`TypeLiteral[1, \"Integer64\"]], \"Integer64\"} -&gt; \n      \"PackedArray\"[\"Integer64\", \nTypeFramework`TypeLiteral[1, \"Integer64\"]]], \"Input\" -&gt; Compile`Program[{}, \nFunction[{\nTyped[rule, \nTypeSpecifier[\"PackedArray\"][\"MachineInteger\", 1]], \nTyped[rad, \"MachineInteger\"], \nTyped[init, \nTypeSpecifier[\"PackedArray\"][\"MachineInteger\", 1]], \nTyped[eventCount, \"Integer64\"]}, \nModule[{state, position, substate, rulePart, newCellValue}, state = init; \n        Do[position = RandomInteger[{1, \nLength[state]}]; substate = Part[state, \nMap[Mod[#, \nLength[state], 1]&amp; , \nRange[position - rad, position + rad]]]; \n          rulePart = Fold[2 # + #2&amp; , 0, substate] + 1; \n          newCellValue = Part[rule, rulePart]; \n          Part[state, position] = newCellValue; Null, eventCount]; state]]], \n    \"ErrorFunction\" -&gt; Automatic, \"InitializationName\" -&gt; \n    \"Initialization_667648a7_ecf6_4a9d_97c7_f8cc07f5743e\", \"ExpressionName\" -&gt; \n    \"Main_ExprInvocation\", \"CName\" -&gt; \"Main_CInvocation\", \"FunctionName\" -&gt; \n    \"Main\", \"SystemID\" -&gt; \"MacOSX-x86-64\", \"VersionData\" -&gt; {12.3, 0, 0}, \n    \"CompiledIR\" -&gt; Association[\"MacOSX-x86-64\" -&gt; ByteArray[CompressedData[\"\n1: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\n\"]], \"Linux-x86-64\" -&gt; \n      ByteArray[CompressedData[\"\n1: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\njHZ0I2GDKAO6wzJm5c3CO9CEgTgTCgm6C3nCnOOQjlyEprMncs1EQIQxOM89\n6UCEsKdShGF4hQhX/sDxDdXzMzETBOJuL6tPh2w8NJ1ldnsFmmenHXzQIEHG\n+CbG6tC5eRtWZB+h3cZ41acLsIDGPcHROYbzjwICLIjYlzk9Hkl43z3BvBwj\nvaNGekG1XnVzM2uO0GB9kkCy4NUKnumSmHkgynIoYjvifkG95aPbwV/Z2mhg\neXCMesmb7pWp+BGCcCFebMlf2EAnl1Kg6/hSUFm0YxeGlYA2rlj8521QYcDF\nnEegiq450ayK1McnldnjV1VF4Fax4l9qsOkWWIEUvuZUHoj6Vm9c0ZD8vTp+\njtVdS75VXC2v+MBZxJvKVZVx7LTSm15o5/1hKVzEc0NX3VYvyfvhuzNg3o7v\nqWK7FQSB9yLKdopVquu8HQ+pbl7z8l1BuPGbp4xjSViFN5eserPgOrmHqSmx\nIxIE9YsoG2761VLqLTGOSAWyaENFNP8s4GAY5eCdkgOzRZgrDTbZQieQz2gk\nk6csztsYQgFYJ0HWCRy9K6Ml58C6B+g6kZpiXfwidmGDzWm3JbJ1z1mc0aeN\n2rmgIotgLihCqGQtUFJ5UUnl8Krur66T/xbLqCQtodCqayWW7CVxtX75K68g\niftXNWXi5vwS9JWe978EWD17WGAP8zYKEnJfAB/aSMTOOuGca8bJ3CgIAicI\nl+PChNm0S97dDMM38NywEGw6VkyLJCWpkEP1OiWGAioOC2z6jXfo8W7Dl5qk\n9Nc8FnAPSCNUr5thBEohsgo1OS/jcsi6jHrgD+LZwB8aYMQfA9cr/TFX9VnI\n8UCjvxm5BAyLco24KSl0/+qDYC2eugcuyrXO2CjYk3eQxayfTQLLC3nQkiBe\nasZWxL/FKgr/DtyixHda9V3I8R6jtwzHX7ZwyhkbVGxzQ5ozU0gXnEDF9oYv\njntx0qye+Jb0DBvLD8RhyahDPVRRONTbE1BwqN5HibGskkvJU7my48lPpoTI\nrW8ygBPytiqdsFO5xuSUGKyZZMxFWMbnpMLM3/pxrjjsCbM3mXw115fEBcZW\nIl1A/WOUef42BbE/F6t+G3qcPdfbBBU/RhW7im6ba0ZS3YnDSrq3wWCvJCEP\nCtNQK5iVztIA3OaZKpWlp4rdRV+b5whnb8R+T7sEp+fwJnqwKYApgSZK4Ccl\n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\nZDS1t/0sIuq/915sXAwCDKkvyvjy8JM8GazsaxKSPSNOVQ+eap2qXK6NLLy0\n62bhLuep4U8XrD5szA7HzXVvm+Pl92rTEDDU1YtZJ5GoLG1KpreOVlcltiBV\nwc9DZxzeYy4Axu7HG18efXKW+PP0FGR8Of5J/X8AtX+YQbb5LXtPrGr4l9ip\n+vuVf4gPiOo+Ij6X37nG19KQntHvu42v7UF7ZYnG1/5Aj15MNnYqCVeYxOmm\nKaDSXp68Ghgv7Z8qjbKBUbbpQ9z2F1NPChc5wmREgSf7+k/2DZ8cGqq4OFrx\n+3gF4PDxSKxC3aP6V4eXXATFxO5dq4DN9J8dDW+RdwboX+q04c99/SPkS4px\n0/uJ31MKOqPG5wKDfRj/6QPV2Om00mDHX6dtre6abrB7913du2xqV4fLXUjG\nA72P29459eRCljUs1xX39OOpikLfeOA5otaBdq8ji8W/gULE8aJeturuk3uG\nhro+5LRoNKOe92JvxevwW693Vb2OGr86PEmR5UhuZyl329SuiYm58lDWxJ2s\njjd2OiMjzBlsWZV2pvoOpBAjF4ix4sLh2Bmx8O+UAqwsUT2PnpaompFEMxEp\ndQl6g172KgS9IgR2K7LXJWYlGTn/b02YHH3Xj57L+g8kBAwkfe4qyzpWBtXt\nz7xr9WFcY1FvS1yrQdPqls0R5V+leD9Aq3iHFGnitqmJ1AuYx8j40fjW1vEz\nreMdU++5AZ6y06zDIx/O9FV30J+KkWtKvXHgnMEDOY/ouFU1LvqTYCkrzxef\n7QqTXWpK6JQ6Hpkq6dj8Csqw+3Lyu67LJYaP0UavVCRH9Tl+7qrMOq2qONMu\nK5z6mLJed/rJfWXL8temO+hi9eXfrZglmZjqs6xZZD8rkJJzZCrIlkqg9n/8\nx/AcVuBK3qSDaVPA38s747UZPiHImUDMZs3ML2cCyaZo6R9b+YF63TBvegWx\ns91rtd0Xr/x9qLo0+aYuMnn3zVFwhoL2toxSnc2Ap/6x63RZD480zc0OVNdB\nuxAt/723ddetql23hqYqqoaiFPicq8enXqQ86zRAa9WoT2UgDAdia6JOz28d\nglB7dB7i7u2a+lT1B08kT5yxZyajjK3XIRdwbjWF01Fahqo+5EhFikxZNTBZ\nvcsNKcl/S96zvAviIgTsrLo4cLZuwKh1YNvvU5uuLvpaEZra66ZAUf4dubxt\n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\n95quYlkc+H/bqQ28\n\"]]], \"orcInstance\" -&gt; 140373448223744, \"orcModuleId\" -&gt; 1, \n    \"targetMachineId\" -&gt; 140373447970304], 5481287872, 5481287664, 5481287744,\n    5481283584, \n   \"{\\\"PackedArray\\\"[\\\"Integer64\\\", TypeFramework`TypeLiteral[1, \\\n\\\"Integer64\\\"]], \\\"Integer64\\\", \\\"PackedArray\\\"[\\\"Integer64\\\", \\\nTypeFramework`TypeLiteral[1, \\\"Integer64\\\"]], \\\"Integer64\\\"} -&gt; \\\"PackedArray\\\n\\\"[\\\"Integer64\\\", TypeFramework`TypeLiteral[1, \\\"Integer64\\\"]]\"];\n\nRandomAsynchronousCellularAutomaton[{rn_, 2, r_}, init_, {t_, ct_}] := \n NestList[\n  caEvaluateCompiled[Reverse[IntegerDigits[rn, 2, 2^(2 r + 1)]], r, #, ct] &amp;, \n  init, t]\n\nBlockRandom[SeedRandom[567]; \n ArrayPlot[\n  RandomAsynchronousCellularAutomaton[{232, 2, 1}, \n   RandomChoice[{.7, .3} -&gt; {1, 0}, 400], {100, 1}], \n  ColorRules -&gt; {0 -&gt; Hue[0.15, 0.72, 1], \n    1 -&gt; Hue[0.98, 1, 0.8200000000000001]}, MeshStyle -&gt; Orange, \n  Frame -&gt; None]]</pre> \n    </div> </td> \n  </tr> \n </tbody> \n</table> \n<p>And here’s the corresponding result if we do 20 updates per step:</p> \n<table class=\"InCell\"> \n <tbody> \n  <tr> \n   <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n    <div> \n     <img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg125.png\" alt=\"\" title=\"\" width=\"570\" height=\"\" /> \n    </div> \n    <div class=\"IFL\"> \n     <span class=\"close\" id=\"‘774_out'\">&amp;#10005</span> \n     <pre class=\"text\" id=\"‘774_out_text'\">caEvaluateCompiled = \n  FunctionCompile[\n   Function[{Typed[rule, TypeSpecifier[\"PackedArray\"][\"MachineInteger\", 1]], \n     Typed[rad, \"MachineInteger\"], \n     Typed[init, TypeSpecifier[\"PackedArray\"][\"MachineInteger\", 1]], \n     Typed[eventCount, \"Integer64\"]}, \n    Module[{state, position, substate, rulePart, newCellValue},\n     \n     state = init;\n     Do[\n      position = RandomInteger[{1, Length[state]}];\n      substate = \n       state[[\n        Mod[#, Length[state], 1] &amp; /@ \n         Range[position - rad, position + rad]]];\n      rulePart = Fold[2 #1 + #2 &amp;, 0, substate] + 1;\n      newCellValue = rule[[rulePart]];\n      state[[position]] = newCellValue;\n      , eventCount];\n     state\n     ]]];\n\nShould be compiled for all machine targets:\n\ncaEvaluateCompiled = CompiledCodeFunction[\nAssociation[\"Signature\" -&gt; TypeSpecifier[{\n\"PackedArray\"[\"Integer64\", \nTypeFramework`TypeLiteral[1, \"Integer64\"]], \"Integer64\", \n\"PackedArray\"[\"Integer64\", \nTypeFramework`TypeLiteral[1, \"Integer64\"]], \"Integer64\"} -&gt; \n      \"PackedArray\"[\"Integer64\", \nTypeFramework`TypeLiteral[1, \"Integer64\"]]], \"Input\" -&gt; Compile`Program[{}, \nFunction[{\nTyped[rule, \nTypeSpecifier[\"PackedArray\"][\"MachineInteger\", 1]], \nTyped[rad, \"MachineInteger\"], \nTyped[init, \nTypeSpecifier[\"PackedArray\"][\"MachineInteger\", 1]], \nTyped[eventCount, \"Integer64\"]}, \nModule[{state, position, substate, rulePart, newCellValue}, state = init; \n        Do[position = RandomInteger[{1, \nLength[state]}]; substate = Part[state, \nMap[Mod[#, \nLength[state], 1]&amp; , \nRange[position - rad, position + rad]]]; \n          rulePart = Fold[2 # + #2&amp; , 0, substate] + 1; \n          newCellValue = Part[rule, rulePart]; \n          Part[state, position] = newCellValue; Null, eventCount]; state]]], \n    \"ErrorFunction\" -&gt; Automatic, \"InitializationName\" -&gt; \n    \"Initialization_667648a7_ecf6_4a9d_97c7_f8cc07f5743e\", \"ExpressionName\" -&gt; \n    \"Main_ExprInvocation\", \"CName\" -&gt; \"Main_CInvocation\", \"FunctionName\" -&gt; \n    \"Main\", \"SystemID\" -&gt; \"MacOSX-x86-64\", \"VersionData\" -&gt; {12.3, 0, 0}, \n    \"CompiledIR\" -&gt; Association[\"MacOSX-x86-64\" -&gt; ByteArray[CompressedData[\"\n1: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\n\"]], \"Linux-x86-64\" -&gt; \n      ByteArray[CompressedData[\"\n1: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\njHZ0I2GDKAO6wzJm5c3CO9CEgTgTCgm6C3nCnOOQjlyEprMncs1EQIQxOM89\n6UCEsKdShGF4hQhX/sDxDdXzMzETBOJuL6tPh2w8NJ1ldnsFmmenHXzQIEHG\n+CbG6tC5eRtWZB+h3cZ41acLsIDGPcHROYbzjwICLIjYlzk9Hkl43z3BvBwj\nvaNGekG1XnVzM2uO0GB9kkCy4NUKnumSmHkgynIoYjvifkG95aPbwV/Z2mhg\neXCMesmb7pWp+BGCcCFebMlf2EAnl1Kg6/hSUFm0YxeGlYA2rlj8521QYcDF\nnEegiq450ayK1McnldnjV1VF4Fax4l9qsOkWWIEUvuZUHoj6Vm9c0ZD8vTp+\njtVdS75VXC2v+MBZxJvKVZVx7LTSm15o5/1hKVzEc0NX3VYvyfvhuzNg3o7v\nqWK7FQSB9yLKdopVquu8HQ+pbl7z8l1BuPGbp4xjSViFN5eserPgOrmHqSmx\nIxIE9YsoG2761VLqLTGOSAWyaENFNP8s4GAY5eCdkgOzRZgrDTbZQieQz2gk\nk6csztsYQgFYJ0HWCRy9K6Ml58C6B+g6kZpiXfwidmGDzWm3JbJ1z1mc0aeN\n2rmgIotgLihCqGQtUFJ5UUnl8Krur66T/xbLqCQtodCqayWW7CVxtX75K68g\niftXNWXi5vwS9JWe978EWD17WGAP8zYKEnJfAB/aSMTOOuGca8bJ3CgIAicI\nl+PChNm0S97dDMM38NywEGw6VkyLJCWpkEP1OiWGAioOC2z6jXfo8W7Dl5qk\n9Nc8FnAPSCNUr5thBEohsgo1OS/jcsi6jHrgD+LZwB8aYMQfA9cr/TFX9VnI\n8UCjvxm5BAyLco24KSl0/+qDYC2eugcuyrXO2CjYk3eQxayfTQLLC3nQkiBe\nasZWxL/FKgr/DtyixHda9V3I8R6jtwzHX7ZwyhkbVGxzQ5ozU0gXnEDF9oYv\njntx0qye+Jb0DBvLD8RhyahDPVRRONTbE1BwqN5HibGskkvJU7my48lPpoTI\nrW8ygBPytiqdsFO5xuSUGKyZZMxFWMbnpMLM3/pxrjjsCbM3mXw115fEBcZW\nIl1A/WOUef42BbE/F6t+G3qcPdfbBBU/RhW7im6ba0ZS3YnDSrq3wWCvJCEP\nCtNQK5iVztIA3OaZKpWlp4rdRV+b5whnb8R+T7sEp+fwJnqwKYApgSZK4Ccl\n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\nZDS1t/0sIuq/915sXAwCDKkvyvjy8JM8GazsaxKSPSNOVQ+eap2qXK6NLLy0\n62bhLuep4U8XrD5szA7HzXVvm+Pl92rTEDDU1YtZJ5GoLG1KpreOVlcltiBV\nwc9DZxzeYy4Axu7HG18efXKW+PP0FGR8Of5J/X8AtX+YQbb5LXtPrGr4l9ip\n+vuVf4gPiOo+Ij6X37nG19KQntHvu42v7UF7ZYnG1/5Aj15MNnYqCVeYxOmm\nKaDSXp68Ghgv7Z8qjbKBUbbpQ9z2F1NPChc5wmREgSf7+k/2DZ8cGqq4OFrx\n+3gF4PDxSKxC3aP6V4eXXATFxO5dq4DN9J8dDW+RdwboX+q04c99/SPkS4px\n0/uJ31MKOqPG5wKDfRj/6QPV2Om00mDHX6dtre6abrB7913du2xqV4fLXUjG\nA72P29459eRCljUs1xX39OOpikLfeOA5otaBdq8ji8W/gULE8aJeturuk3uG\nhro+5LRoNKOe92JvxevwW693Vb2OGr86PEmR5UhuZyl329SuiYm58lDWxJ2s\njjd2OiMjzBlsWZV2pvoOpBAjF4ix4sLh2Bmx8O+UAqwsUT2PnpaompFEMxEp\ndQl6g172KgS9IgR2K7LXJWYlGTn/b02YHH3Xj57L+g8kBAwkfe4qyzpWBtXt\nz7xr9WFcY1FvS1yrQdPqls0R5V+leD9Aq3iHFGnitqmJ1AuYx8j40fjW1vEz\nreMdU++5AZ6y06zDIx/O9FV30J+KkWtKvXHgnMEDOY/ouFU1LvqTYCkrzxef\n7QqTXWpK6JQ6Hpkq6dj8Csqw+3Lyu67LJYaP0UavVCRH9Tl+7qrMOq2qONMu\nK5z6mLJed/rJfWXL8temO+hi9eXfrZglmZjqs6xZZD8rkJJzZCrIlkqg9n/8\nx/AcVuBK3qSDaVPA38s747UZPiHImUDMZs3ML2cCyaZo6R9b+YF63TBvegWx\ns91rtd0Xr/x9qLo0+aYuMnn3zVFwhoL2toxSnc2Ap/6x63RZD480zc0OVNdB\nuxAt/723ddetql23hqYqqoaiFPicq8enXqQ86zRAa9WoT2UgDAdia6JOz28d\nglB7dB7i7u2a+lT1B08kT5yxZyajjK3XIRdwbjWF01Fahqo+5EhFikxZNTBZ\nvcsNKcl/S96zvAviIgTsrLo4cLZuwKh1YNvvU5uuLvpaEZra66ZAUf4dubxt\nB/uCRjYlcLMB+9qAwdRAhcM3sk3e92pQhGh1OVZ5NXmycKyzcO+mq3tPFY7T\npwbaXcp2IPhfPXmRdvNDzl7Br7iNoka9Iv2u99X3fUGWFvUN6HfdXyVj+QWX\nPjRaPZrzXRKIa7sqZcmTmYLGmD4QwJPRXutuY6fbEFopROmXjUgnh594Heq/\nxKvvHJIWqCCpnD6UUmuliqS7jtcpz9bgTBAB1u3qqIufuBrVEaNCe+pqLgkn\nVO++ICUr43v1++rSWDcNjmzrHP2LXOSMqb4z6vO3yqIj8dP9fpwyhz8enHqc\nZaNUv/P9ceD8vQeRiLXpYv+m6rFzo9Rf5iKpZNep0Rw3DVmxUjfQXvd+/OrQ\nRIF+OPb83abEiavh43a4AjQ4DJ4uG3ae2kUva0DS7bKr8SDd4nRB9Hoa9flD\nuLH1CBrpy2JBDO+wR8uWic6U2qdIRnllWHbYBVAsuhg+uUEZaoZuTo48OURE\nj7f6yhL++04vq7kKiY+XDk11+qrJstMNfdSOhjeV7T41+f6JHSrDz8AGXXDP\nuh1U6w4UTZ07UJ/MzzCZ1KHoBDWfJ4kV71tfTXnqemHP71kRKOLxC1HOFweq\n61JqbxNzAZWVF1IKHg/2KkJzbGfTyGQZAI05ky9lnLtTcIAz2YU/GxBhfhs2\nMZy6E2pCNnk4vFwFn0ErtsAWKeAD/wGy61x59t1XCPtJFRcGZewPSM+jkulo\nSnl2yXFIW7TD9XSomfmCnZPSAIM+hlXwW+o44pkVY2dGc65Pq/EmyuLd0PPQ\nUfpozqahRV8N0zPL0/W7VskuV9JeT7tcmfDTOlb66Njh8XoVFnpVUOoYJb3x\nWTqqvIh4uHfqyOZc5NrEqIMSmDKQ1nlqPnLdZJu0Mqt9/VMHzd2qizul79Di\nu6s8a4P8Yn9Z1pZINEw+Ktnauvf+1OJtm8+jN0KkNxcidfdwcQf9KnIppLF3\n4oBZai/lX359736Qd97nyzulKbKbPo2ngkFQzikcquxybHkgP/jxirwzuthD\nxsItbtfnz6OjPXL4jQfqyKWT8kr00slPBDD4s+TI+GHbsXoNwlzZnIl85WVv\n6URWn4O2/EJg3Fbpx6wWXR3FKVHKyFj1yA5aNnIryvXM6Hp9CiIS+7Mt9oUt\naSmtjx2b0Uunrx2anplm0mEFlsrR8YDed+/lBFVYo6y/49KrESlljZRl5Xaj\nvd7KrC3ytGIP0srqqZJKYw4LlW581al9qOS6KjHINaO/9lVJh1DJ9ZWqyACd\nUpko+97dWfGYb5meyFh7pXc0asAl5iJmNnJ9bahs61DZtiHHz62jKccxynso\nN85OAY3NlyCilZZlfRSpyvClnlv55R7B6PJO6Q30Nou0JIs2jt58a/3sXy9J\nw85aQ52qxjZ2M6vbfNLZ7ksm5Rf65cPXs3RtTsgWSEu2oqzbbZPKAeXx6DW6\nsY5x0TVZL3VcdAK5SvaXc8DmQUQq50aLs9rbv9x0GapuHBfNR0l0PncKvbJW\nOTJ6bYVcgWdaPgWMugRdxq5Sca/oHErt9Xm8vAi5aZEy6NAUdw1zoMux1uzR\n3tRiee9mqoasnrD/LC0J0QbW0T+egliHKB69yvYekNY4G2xW+Zfs/uJW+iR6\nL6W1jCG7/RK5OYK1FkPtbC0ZNF2ceuotqqa+j/HuaG3SkhLQ+g7UJhhk8l8T\n26Ty4+MP3BXX4Xvjpwbe/RX46jrcQvAWFS08ktf2/siUw6Cpvez8/NNr0wT0\nHt5QceoZjI6ipljyuctlzVBph8f0E+2S+QT36ePSb2aOy7gzx+UZM8c3emaO\nK4ZnjsclK2QXzDdc6X0X1ecSVId5MP2iQpQ3kLvD1y0lr01f6HVTdG1UV9u+\nutHleNRMdtXXly6/cfsuhOCOqqy38nDXhwBp2ULZBO65P59txQ6Dk/5fa909\nGtPGRbsNATwhlb4duUR6pPVGMjo+K20Fw8i+pchLp9YQ5A3azfufw8KFOGG2\n5LjEqZ5zD2IEF4Vka9q02fiR9CL01jy1EC4UroRDikI4B34kl5Kt+MckxzHm\nR8CEevwawub9m3J+Xoir8H58vCekYNe9bltv/Qg98Qtv4UK3Nji8KIRGn6tR\nSg4TFkiOM7jZdm02uZrfg1Uf2A859964IJOfEVeAyVPeT473pBVw70GuCNCV\nBIBCdQbAwGMgGJalAww9mQiGQzm1XL02ZALOAJlwyfSy1KaNCtASlroCtNle\nCIaP3m9LyanIKvYxZNWx1nwwYcT1EZiwLRNM6FT3Bxj2MXYCfhfNB6yNZFyS\nHOdXzbVus+nWPQ8mzzpah74Ci7wD9x55nwjvh74Di0ffgeMLLCgmh6BHLFVk\njg5R9fsDQfO9s4/QCDjkEQ1H5cM3msgjMDzk0VdNwc7jDArynAWJzRS/gE6Y\nUZYEMY/vx2IlHORJmiASKc90f+0BCwuKGim4nCESc44HwugTYdTzzW85+jI8\nzCLhKn1fkmAjoZf0QoOwmQRtIj3Dqu/XEJmjDxVhkSdCwA6X3BmwcCNhrir6\nHMkRV/WMSDsMxlNLwHkHh60mvTQSZNKxTJaQTtKLZAqY9TyYRoOZHRSDO7KX\ngtLZ8zdI0EclLFYhzwYzSASa5SGJJdtmB8UHfXJiVX7lbf1D5mSxfAH/q3I2\nE30cw2cW+qSCXYa9ehQriAXrFiNvHQWjz0Y3E9BnnAG6b6zwe5n3upciDyxn\nwDTODTHhOv5+2G1MBPIQw7+AXL2i0XTBbbVP6bKvbLFvHEhL1XygiMOOAVMJ\nqURjJFK32m0d/RzZ8oHbkhjZcpPbsnRq1DMOpJaRfWlgO/QuRcdofNeAPVdq\nn9JrX9lq3zi0POorDxX3pCgvL3DutLV1P5hf27U4VZ2GxIsWp6iWCoCH21I5\nKS1eATyof2yb9Pu1mJyzvWUB7qs97YjR3rMovmlcG+RJh8q+TIrybvTQeEDL\nnBKwe18FSGzBa8GEPVV99gg9faOR69Bh74UYsN3Izchv0OFAaDxy1DlNS3Gv\ntvfWZ2lFB2t6KJHfNTszal/VO5WCa0PlUOwrfceVFndK7c5NfbQOlofQqJY9\nkS37uC2fJ6WlyH34fqfCU41IEB65MR8dptKb0OHNEHRYfeoxSAtnRyoD0WEW\nHcQKapp0Qnm75PDQRECrLqR4qOHw0GjUKXROV/Fn5C7aspTNKMLR4jF0eIZ+\ndC3Gv7NFJquL2ehC376bvgMlvkOVvqNjAaOEBITllEg7RIAdQx/iEfmPpqjk\nJKrW2jJWX9eeNXvxVORSysPp9wbRjNJ1yn/6fdN1m9fPuI0agPNEKqjFvtLi\nQqldlDTu/tQHrgeiZd9RAqqFBC1I6dtnUN9eifq2iuz9VhMLobY+xoIIHPwY\nSwPA7IiqD01rXOfqULyzyIfz/VhwjYYbj3Cd7EpBDZ0kNCf6ZJFzbvtlw4bW\ncw+5Y/hbxMoHjB0VBv+nEb7DEucve16Z5UXOSvcHvuGtfLBWB3kcl0USsGer\nSWgNNjQvud9tsPC7jvfwIjf8CebTOBTZgrjaN2GbCQ9/ymMtYZOYaqRndlr7\nNUhWMLSS9EwAuiL0WT4GGX2Wz5VCXrCe1M05jlmBRCB1EIG2MMihqkechCCw\nWBRR8LiG2b9tFAQfjgYyWQ94fhEL9DFQHslC1HNkZA6inoF9aVh1xN8Gyie7\niEWIA5Qc6U3jOoEclhjQAmqHHZDyanjv5/un/gApp6Nl1HCpotjoe9eFGCIA\nlrOBqXVUHkYMEQxvqoDh8J5t9AfAjK4OvVNhyq5UJE1KPVFKyiI9EUqqpOsV\nbpBwZGAqFTfdXNIivdA5fXXoEqc0VYU79TlNtpaoIsa976q0BdlRWjp7ZiGw\nYsawdD7b2/TL0BNlf1kk4sy3Olsfp69jxY0uTjPGKOusI33Vkcubp6X2Foa7\nor7uG/vcWmyGMFixGgd9sT30myl4N9T2sLK8QkWOFRO+Y96jkCSapgQ8RcCJ\nVmsuwgwTMJhDNApiHgtYNYRaOrCtCFa5RBtalY7DyL7NMI+nIzahVp8JEFt7\n6AxLP2IMyDy76pTN36Xb1adD6t9jZj21O9NCUe4/F92fje6P0IWnYWBXVR02\n8v55uN+/sCr5MPsT2/sQ+qQfsPrPsN0KwqOfWGwL7+xUiok5rn+NH/LMnAiD\nBQnALrV5rkf2D0GZGiIWzLtymw+pAzzmBSSe3edZHyjlmNms4IlRDA3QtJxr\np0LRW851BL9p3KXgF3nN/N/S5W7BBz7paoH452eY5vGFBp25chq8l5OavsfE\nz/ejqGkXGOPv3mVV6OiQkCcKeYjrHTa2W0F9J4xeoYewpWcPYwWQnQHyTRHk\nn7AOyhnuJXKY0MOJkgc6gMySHuS3dBj5dVDS1YHS9Q1Kl6pMXzY0DBIwMrFk\n+DaJparjqqHDnq/jpncM1+iJrismAl3CePmrtq8ket7NBNl7ts3EHZTFUj/r\nLb9osE38kZjCxoGYUkuRRQGJUZEET6A3uL/EigkFzSVu8Ior5gb+hPKfuj1D\nTbR5Gt75u4i9v9nkvS7CUMl4ZhAvCSYR0pjE2v0a18meVNmj/RKjNgwtXUJY\nN9f7F9XmHzCR88tzTpCwHNyal096MDgrXL8mnSJhQU4GCbXQMItCduVrqdmI\nhCBSOAlkz5a24fz8hLZteX+mv7oHlem01/u4Y4sw8+MGeT/xacGsjkCcCY3E\nka2ezNMR2fsJA4+zVyhXr8vGObXxDuLDF7PJDTCufU20qS0VL+OJVo8xCIZl\nKGD0tQ8jYOAW5a6BxB9B6cFcJX/Ucy+svo+jBoQxF6Jnu7Zq7uARY7Mx8cDU\nODDvhMgRauPprNGocI5g4bFIrSGwooCyZBh5cQy7sEigT3bAxyGv0h2e1ZwD\nA/Ejby+olVLiamEedj7yOseE8r1ogQVPYlmDUzG0LsDMz0NeR5VYKGN5LhYE\nZvc1indQF1lcxwPfxKirYhq0HeWvko250hu0vQ2tIy6J1ZD3wi4qX/fMU+Mw\n7zH9FW9oPX3TqO2nnoHDIJaSGe1D9ZhYnKLihbHUHh66iA5LUojocPR32dFU\njd91/GsD+vaXLaUOo3fw0rRQyJDnRTmkxcNgrTs1rYNuPOJei8auxSmq3giS\n1vcLYZUi79qArj40TqRdOcdD4kQvkY8OG435yHBA5gcf9GgAz/Ioj/RF/vxv\n5mNh36n0ZencHQch75blgVo5XbVojHm/AsUZ1fLYlKFhwxALgsXpjr59drX+\nMrj0uO70h0zef0ucPtx4bkYib9WNRigBxQ3KdZ/iMzS7YZmf2mhSTNJx/UTv\nvCUClXwzR0yEQKfbfENgkmDOr/Pkc0PIEDQAWm3cMQ5RHlfHwM8i0PpAsg/u\nbJDPRVrkYzV58qBsgZN948IBtMh5ElE+T3Ecks9H/mD5uYCiRT54gQSuWDAX\nCeJIDNNSwB0hKB3AN4Mx8r2qjdPgh0BfE/rSInCSJQSdhGR4FC0KB0h/Af3Z\n0JdWAReDPvL1IEWrgD+Sjx/9A/4S9OnQl1axL5JLkLGiVcCNwFgf+tIq8Dhi\nZN/mVLQK+Gr5+tX/wBMuH4f/A56OkX33RNEq4MiXQ5A8qWgV+G9iZLJUtAr5\nv8bIPlalaBXwLiD/WWA8ifkiT0T+WlgZXNEq5ptgZfMUrWJfW/nY9h9wd6xM\n34pWAV8rH6/9BzwIK9OfolXAE+V4E/+BXwTGSD5VtAr4UTndR6fRj8AvyNdf\n+AeeMqzMDhStQs73wJgGfWkV8F6sTK+KVgGHpvkHUSE3iqw//V8BR2xbG/rS\nKuDI31bgs4hjAp99i6xJCIyxd7CxR7+9wrQLjwyPCw+MCN8TGBceFekeFRni\nGxgeifwHeMZHbkeAc7988mVtXExIINcrJG51SFKce2BcYIBfQADSrgkJDJYd\nDPgvfKFE2UO/4xKSFB2yPc4q3NozJiTEd3U8NyQmfDu6PC4sJipR/k0hj6Tt\nIdEIOQEBO5KSAqJDYmKjIgORr88EJDC3h4Vs38UOioqJWx8Ytz1sHbIOxR0b\nGx9klRgeF2YVlRASExoRlWgVLt82NjA4+D8eWhMfGRfODQlwA7zEhUwnZgZl\nATtC4vwCY+JiUVTx/59duPER/+YQN4S7PTrZKpoZ7ij7mbb9N5HhoVEx3DWB\nkcFRXF+5vGJXzFBWgL29g72dY6BDQMj2UPsAu0Cn4AAnh+0OAaGO27czHUIX\nO9jZotoMcFsRmRC1HV2EjtfHBEYDAQa4BUZEoACPpOiYL3NWhyQGKL7g5BET\nExUTGxKnFP/auOSIkHUhsXHACgJ814VExkbFKIZyOrcjOlAu8AY8AEQygcoX\nIPuh2pYNgTC/KE82H4A84kJigIblcxQiA7QopSX7DFB4aAgiM6vYOKAQ9NhM\neEhkMAq1trZiWjFhawd7GzunoGB7B1ubQOABdsF2ix2YTjYhwU62Ng72jg42\ndoH2oUz7JEf7AHu7hdHbF0aER8YnrfdVftTqv/dJK6vECCuffziUlc//mkvJ\n95quYlkc+H/bqQ28\n\"]]], \"orcInstance\" -&gt; 140373448223744, \"orcModuleId\" -&gt; 1, \n    \"targetMachineId\" -&gt; 140373447970304], 5481287872, 5481287664, 5481287744,\n    5481283584, \n   \"{\\\"PackedArray\\\"[\\\"Integer64\\\", TypeFramework`TypeLiteral[1, \\\n\\\"Integer64\\\"]], \\\"Integer64\\\", \\\"PackedArray\\\"[\\\"Integer64\\\", \\\nTypeFramework`TypeLiteral[1, \\\"Integer64\\\"]], \\\"Integer64\\\"} -&gt; \\\"PackedArray\\\n\\\"[\\\"Integer64\\\", TypeFramework`TypeLiteral[1, \\\"Integer64\\\"]]\"];\n\nRandomAsynchronousCellularAutomaton[{rn_, 2, r_}, init_, {t_, ct_}] := \n NestList[\n  caEvaluateCompiled[Reverse[IntegerDigits[rn, 2, 2^(2 r + 1)]], r, #, ct] &amp;, \n  init, t]\n\nBlockRandom[SeedRandom[567]; \n ArrayPlot[\n  RandomAsynchronousCellularAutomaton[{232, 2, 1}, \n   RandomChoice[{.7, .3} -&gt; {1, 0}, 400], {100, 20}], \n  ColorRules -&gt; {0 -&gt; Hue[0.15, 0.72, 1], \n    1 -&gt; Hue[0.98, 1, 0.8200000000000001]}, MeshStyle -&gt; Orange, \n  Frame -&gt; None]]</pre> \n    </div> </td> \n  </tr> \n </tbody> \n</table> \n<p>We might have thought that asynchronous updating would add enough randomness to “break ties” and prevent things getting stuck. But in fact it’s not hard to see that the results are in this case in the end no different from synchronous updating.</p> \n<p>What about for something like the GKL rule? Here are asynchronous results for it, now with 50 updates per step (with initially 60% <span class=\"InlineFormula\"><img style=\"margin-bottom: 2px\" src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/swo514redbox2.png\" width=\"15\" height=\"\" align=\"absmiddle\" class=\"inline-img\" /></span>).<br /> \n <table class=\"InCell\"> \n  <tbody> \n   <tr> \n    <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n     <div> \n      <img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg130.png\" alt=\"\" title=\"\" width=\"570\" height=\"\" /> \n     </div> \n     <div class=\"IFL\"> \n      <span class=\"close\" id=\"‘775_out'\">&amp;#10005</span>\n     </div></td>\n   </tr>\n  </tbody>\n </table></p> \n<pre class=\"text\" id=\"‘775_out_text'\">caEvaluateCompiled = \n  FunctionCompile[\n   Function[{Typed[rule, TypeSpecifier[\"PackedArray\"][\"MachineInteger\", 1]], \n     Typed[rad, \"MachineInteger\"], \n     Typed[init, TypeSpecifier[\"PackedArray\"][\"MachineInteger\", 1]], \n     Typed[eventCount, \"Integer64\"]}, \n    Module[{state, position, substate, rulePart, newCellValue},\n     \n     state = init;\n     Do[\n      position = RandomInteger[{1, Length[state]}];\n      substate = \n       state[[\n        Mod[#, Length[state], 1] &amp; /@ \n         Range[position - rad, position + rad]]];\n      rulePart = Fold[2 #1 + #2 &amp;, 0, substate] + 1;\n      newCellValue = rule[[rulePart]];\n      state[[position]] = newCellValue;\n      , eventCount];\n     state\n     ]]];\n\nShould be compiled for all machine targets:\n\ncaEvaluateCompiled = CompiledCodeFunction[\nAssociation[\"Signature\" -&gt; TypeSpecifier[{\n\"PackedArray\"[\"Integer64\", \nTypeFramework`TypeLiteral[1, \"Integer64\"]], \"Integer64\", \n\"PackedArray\"[\"Integer64\", \nTypeFramework`TypeLiteral[1, \"Integer64\"]], \"Integer64\"} -&gt; \n      \"PackedArray\"[\"Integer64\", \nTypeFramework`TypeLiteral[1, \"Integer64\"]]], \"Input\" -&gt; Compile`Program[{}, \nFunction[{\nTyped[rule, \nTypeSpecifier[\"PackedArray\"][\"MachineInteger\", 1]], \nTyped[rad, \"MachineInteger\"], \nTyped[init, \nTypeSpecifier[\"PackedArray\"][\"MachineInteger\", 1]], \nTyped[eventCount, \"Integer64\"]}, \nModule[{state, position, substate, rulePart, newCellValue}, state = init; \n        Do[position = RandomInteger[{1, \nLength[state]}]; substate = Part[state, \nMap[Mod[#, \nLength[state], 1]&amp; , \nRange[position - rad, position + rad]]]; \n          rulePart = Fold[2 # + #2&amp; , 0, substate] + 1; \n          newCellValue = Part[rule, rulePart]; \n          Part[state, position] = newCellValue; Null, eventCount]; state]]], \n    \"ErrorFunction\" -&gt; Automatic, \"InitializationName\" -&gt; \n    \"Initialization_667648a7_ecf6_4a9d_97c7_f8cc07f5743e\", \"ExpressionName\" -&gt; \n    \"Main_ExprInvocation\", \"CName\" -&gt; \"Main_CInvocation\", \"FunctionName\" -&gt; \n    \"Main\", \"SystemID\" -&gt; \"MacOSX-x86-64\", \"VersionData\" -&gt; {12.3, 0, 0}, \n    \"CompiledIR\" -&gt; Association[\"MacOSX-x86-64\" -&gt; ByteArray[CompressedData[\"\n1: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\n\"]], \"Linux-x86-64\" -&gt; \n      ByteArray[CompressedData[\"\n1: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\njHZ0I2GDKAO6wzJm5c3CO9CEgTgTCgm6C3nCnOOQjlyEprMncs1EQIQxOM89\n6UCEsKdShGF4hQhX/sDxDdXzMzETBOJuL6tPh2w8NJ1ldnsFmmenHXzQIEHG\n+CbG6tC5eRtWZB+h3cZ41acLsIDGPcHROYbzjwICLIjYlzk9Hkl43z3BvBwj\nvaNGekG1XnVzM2uO0GB9kkCy4NUKnumSmHkgynIoYjvifkG95aPbwV/Z2mhg\neXCMesmb7pWp+BGCcCFebMlf2EAnl1Kg6/hSUFm0YxeGlYA2rlj8521QYcDF\nnEegiq450ayK1McnldnjV1VF4Fax4l9qsOkWWIEUvuZUHoj6Vm9c0ZD8vTp+\njtVdS75VXC2v+MBZxJvKVZVx7LTSm15o5/1hKVzEc0NX3VYvyfvhuzNg3o7v\nqWK7FQSB9yLKdopVquu8HQ+pbl7z8l1BuPGbp4xjSViFN5eserPgOrmHqSmx\nIxIE9YsoG2761VLqLTGOSAWyaENFNP8s4GAY5eCdkgOzRZgrDTbZQieQz2gk\nk6csztsYQgFYJ0HWCRy9K6Ml58C6B+g6kZpiXfwidmGDzWm3JbJ1z1mc0aeN\n2rmgIotgLihCqGQtUFJ5UUnl8Krur66T/xbLqCQtodCqayWW7CVxtX75K68g\niftXNWXi5vwS9JWe978EWD17WGAP8zYKEnJfAB/aSMTOOuGca8bJ3CgIAicI\nl+PChNm0S97dDMM38NywEGw6VkyLJCWpkEP1OiWGAioOC2z6jXfo8W7Dl5qk\n9Nc8FnAPSCNUr5thBEohsgo1OS/jcsi6jHrgD+LZwB8aYMQfA9cr/TFX9VnI\n8UCjvxm5BAyLco24KSl0/+qDYC2eugcuyrXO2CjYk3eQxayfTQLLC3nQkiBe\nasZWxL/FKgr/DtyixHda9V3I8R6jtwzHX7ZwyhkbVGxzQ5ozU0gXnEDF9oYv\njntx0qye+Jb0DBvLD8RhyahDPVRRONTbE1BwqN5HibGskkvJU7my48lPpoTI\nrW8ygBPytiqdsFO5xuSUGKyZZMxFWMbnpMLM3/pxrjjsCbM3mXw115fEBcZW\nIl1A/WOUef42BbE/F6t+G3qcPdfbBBU/RhW7im6ba0ZS3YnDSrq3wWCvJCEP\nCtNQK5iVztIA3OaZKpWlp4rdRV+b5whnb8R+T7sEp+fwJnqwKYApgSZK4Ccl\n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\nZDS1t/0sIuq/915sXAwCDKkvyvjy8JM8GazsaxKSPSNOVQ+eap2qXK6NLLy0\n62bhLuep4U8XrD5szA7HzXVvm+Pl92rTEDDU1YtZJ5GoLG1KpreOVlcltiBV\nwc9DZxzeYy4Axu7HG18efXKW+PP0FGR8Of5J/X8AtX+YQbb5LXtPrGr4l9ip\n+vuVf4gPiOo+Ij6X37nG19KQntHvu42v7UF7ZYnG1/5Aj15MNnYqCVeYxOmm\nKaDSXp68Ghgv7Z8qjbKBUbbpQ9z2F1NPChc5wmREgSf7+k/2DZ8cGqq4OFrx\n+3gF4PDxSKxC3aP6V4eXXATFxO5dq4DN9J8dDW+RdwboX+q04c99/SPkS4px\n0/uJ31MKOqPG5wKDfRj/6QPV2Om00mDHX6dtre6abrB7913du2xqV4fLXUjG\nA72P29459eRCljUs1xX39OOpikLfeOA5otaBdq8ji8W/gULE8aJeturuk3uG\nhro+5LRoNKOe92JvxevwW693Vb2OGr86PEmR5UhuZyl329SuiYm58lDWxJ2s\njjd2OiMjzBlsWZV2pvoOpBAjF4ix4sLh2Bmx8O+UAqwsUT2PnpaompFEMxEp\ndQl6g172KgS9IgR2K7LXJWYlGTn/b02YHH3Xj57L+g8kBAwkfe4qyzpWBtXt\nz7xr9WFcY1FvS1yrQdPqls0R5V+leD9Aq3iHFGnitqmJ1AuYx8j40fjW1vEz\nreMdU++5AZ6y06zDIx/O9FV30J+KkWtKvXHgnMEDOY/ouFU1LvqTYCkrzxef\n7QqTXWpK6JQ6Hpkq6dj8Csqw+3Lyu67LJYaP0UavVCRH9Tl+7qrMOq2qONMu\nK5z6mLJed/rJfWXL8temO+hi9eXfrZglmZjqs6xZZD8rkJJzZCrIlkqg9n/8\nx/AcVuBK3qSDaVPA38s747UZPiHImUDMZs3ML2cCyaZo6R9b+YF63TBvegWx\ns91rtd0Xr/x9qLo0+aYuMnn3zVFwhoL2toxSnc2Ap/6x63RZD480zc0OVNdB\nuxAt/723ddetql23hqYqqoaiFPicq8enXqQ86zRAa9WoT2UgDAdia6JOz28d\nglB7dB7i7u2a+lT1B08kT5yxZyajjK3XIRdwbjWF01Fahqo+5EhFikxZNTBZ\nvcsNKcl/S96zvAviIgTsrLo4cLZuwKh1YNvvU5uuLvpaEZra66ZAUf4dubxt\n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\n95quYlkc+H/bqQ28\n\"]]], \"orcInstance\" -&gt; 140373448223744, \"orcModuleId\" -&gt; 1, \n    \"targetMachineId\" -&gt; 140373447970304], 5481287872, 5481287664, 5481287744,\n    5481283584, \n   \"{\\\"PackedArray\\\"[\\\"Integer64\\\", TypeFramework`TypeLiteral[1, \\\n\\\"Integer64\\\"]], \\\"Integer64\\\", \\\"PackedArray\\\"[\\\"Integer64\\\", \\\nTypeFramework`TypeLiteral[1, \\\"Integer64\\\"]], \\\"Integer64\\\"} -&gt; \\\"PackedArray\\\n\\\"[\\\"Integer64\\\", TypeFramework`TypeLiteral[1, \\\"Integer64\\\"]]\"];\n\nRandomAsynchronousCellularAutomaton[{rn_, 2, r_}, init_, {t_, ct_}] := \n NestList[\n  caEvaluateCompiled[Reverse[IntegerDigits[rn, 2, 2^(2 r + 1)]], r, #, ct] &amp;, \n  init, t]\n\nBlockRandom[SeedRandom[567]; \n ArrayPlot[\n  RandomAsynchronousCellularAutomaton[{\\\n339789091192587366278221041213531750560, 2, 3}, \n   RandomChoice[{.6, .4} -&gt; {1, 0}, 400], {150, 50}], \n  ColorRules -&gt; {0 -&gt; Hue[0.15, 0.72, 1], \n    1 -&gt; Hue[0.98, 1, 0.8200000000000001]}, MeshStyle -&gt; Orange, \n  Frame -&gt; None]]</pre>      \n<p> And unlike what we saw above for synchronous updating when we added noise, the change to asynchronous updating seems to completely destroy “majority consensus” for this rule. Note that using more updatings per step does not improve the result (which should in the end be <span class=\"InlineFormula\"><img style=\"margin-bottom: 2px\" src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/swo514redbox2.png\" width=\"15\" height=\"\" align=\"absmiddle\" class=\"inline-img\" /></span> not <span class=\"InlineFormula\"><img style=\"margin-bottom: 3px\" src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514yellowbox2.png\" width=\"15\" height=\"\" align=\"absmiddle\" class=\"inline-img\" /></span>):</p> \n<table class=\"InCell\"> \n <tbody> \n  <tr> \n   <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n    <div> \n     <p><img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg135.png\" alt=\"\" title=\"\" width=\"572\" height=\"\" /></p>\n    </div> \n    <div class=\"IFL\"> \n     <span class=\"close\" id=\"‘776_out'\">&amp;#10005</span> \n     <pre class=\"text\" id=\"‘776_out_text'\">caEvaluateCompiled = \n  FunctionCompile[\n   Function[{Typed[rule, TypeSpecifier[\"PackedArray\"][\"MachineInteger\", 1]], \n     Typed[rad, \"MachineInteger\"], \n     Typed[init, TypeSpecifier[\"PackedArray\"][\"MachineInteger\", 1]], \n     Typed[eventCount, \"Integer64\"]}, \n    Module[{state, position, substate, rulePart, newCellValue},\n     \n     state = init;\n     Do[\n      position = RandomInteger[{1, Length[state]}];\n      substate = \n       state[[\n        Mod[#, Length[state], 1] &amp; /@ \n         Range[position - rad, position + rad]]];\n      rulePart = Fold[2 #1 + #2 &amp;, 0, substate] + 1;\n      newCellValue = rule[[rulePart]];\n      state[[position]] = newCellValue;\n      , eventCount];\n     state\n     ]]];\n\nShould be compiled for all machine targets:\n\ncaEvaluateCompiled = CompiledCodeFunction[\nAssociation[\"Signature\" -&gt; TypeSpecifier[{\n\"PackedArray\"[\"Integer64\", \nTypeFramework`TypeLiteral[1, \"Integer64\"]], \"Integer64\", \n\"PackedArray\"[\"Integer64\", \nTypeFramework`TypeLiteral[1, \"Integer64\"]], \"Integer64\"} -&gt; \n      \"PackedArray\"[\"Integer64\", \nTypeFramework`TypeLiteral[1, \"Integer64\"]]], \"Input\" -&gt; Compile`Program[{}, \nFunction[{\nTyped[rule, \nTypeSpecifier[\"PackedArray\"][\"MachineInteger\", 1]], \nTyped[rad, \"MachineInteger\"], \nTyped[init, \nTypeSpecifier[\"PackedArray\"][\"MachineInteger\", 1]], \nTyped[eventCount, \"Integer64\"]}, \nModule[{state, position, substate, rulePart, newCellValue}, state = init; \n        Do[position = RandomInteger[{1, \nLength[state]}]; substate = Part[state, \nMap[Mod[#, \nLength[state], 1]&amp; , \nRange[position - rad, position + rad]]]; \n          rulePart = Fold[2 # + #2&amp; , 0, substate] + 1; \n          newCellValue = Part[rule, rulePart]; \n          Part[state, position] = newCellValue; Null, eventCount]; state]]], \n    \"ErrorFunction\" -&gt; Automatic, \"InitializationName\" -&gt; \n    \"Initialization_ebf3942d_117d_4dd2_a02b_59c5c41b2c75\", \"ExpressionName\" -&gt; \n    \"Main_ExprInvocation\", \"CName\" -&gt; \"Main_CInvocation\", \"FunctionName\" -&gt; \n    \"Main\", \"SystemID\" -&gt; \"MacOSX-x86-64\", \"VersionData\" -&gt; {12.3, 0, 0}, \n    \"CompiledIR\" -&gt; Association[\"MacOSX-x86-64\" -&gt; ByteArray[CompressedData[\"\n1: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\n73j/yfF4/+x5PHnK4eE5h/fvSUdR//1/gIavxg==\n\"]]], \"orcInstance\" -&gt; \n    140546848939520, \"orcModuleId\" -&gt; 1, \"targetMachineId\" -&gt; \n    140546849609216], 5154796080, 5154795872, 5154795952, 5154791424, \n   \"{\\\"PackedArray\\\"[\\\"Integer64\\\", TypeFramework`TypeLiteral[1, \\\n\\\"Integer64\\\"]], \\\"Integer64\\\", \\\"PackedArray\\\"[\\\"Integer64\\\", \\\nTypeFramework`TypeLiteral[1, \\\"Integer64\\\"]], \\\"Integer64\\\"} -&gt; \\\"PackedArray\\\n\\\"[\\\"Integer64\\\", TypeFramework`TypeLiteral[1, \\\"Integer64\\\"]]\"];\n\nRandomAsynchronousCellularAutomaton[{rn_, 2, r_}, init_, {t_, ct_}] := \n NestList[\n  caEvaluateCompiled[Reverse[IntegerDigits[rn, 2, 2^(2 r + 1)]], r, #, ct] &amp;, \n  init, t]\n\nGrid[Partition[\n  Labeled[\n     BlockRandom[SeedRandom[567]; \n      ArrayPlot[\n       RandomAsynchronousCellularAutomaton[{\\\n339789091192587366278221041213531750560, 2, 3}, \n        RandomChoice[{.6, .4} -&gt; {1, 0}, 400], {150, #}], \n       ColorRules -&gt; {0 -&gt; Hue[0.15, 0.72, 1], \n         1 -&gt; Hue[0.98, 1, 0.8200000000000001]}, MeshStyle -&gt; Orange, \n       Frame -&gt; None, ImageSize -&gt; {300, 150}]], Style[#, 11], \n     Spacings -&gt; {0, -0.5}] &amp; /@ {100, 1000, 10000, 10^5}, 2], \n Spacings -&gt; {0, 0}]</pre> \n    </div> </td> \n  </tr> \n </tbody> \n</table> \n<p>So what happens if we search for rules that achieve consensus asynchronously? In the nearest-neighbor case, the simple majority rule does best, although it’s basically no good. </p> \n<p>Here are results for a few rules found by searching a million range-2 rules:</p> \n<table class=\"InCell\"> \n <tbody> \n  <tr> \n   <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n    <div> \n     <img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg142.png\" alt=\"\" title=\"\" width=\"564\" height=\"\" /> \n    </div> \n    <div class=\"IFL\"> \n     <span class=\"close\" id=\"‘780_out'\">&amp;#10005</span> \n     <pre class=\"text\" id=\"‘780_out_text'\">caEvaluateCompiled = \n  FunctionCompile[\n   Function[{Typed[rule, TypeSpecifier[\"PackedArray\"][\"MachineInteger\", 1]], \n     Typed[rad, \"MachineInteger\"], \n     Typed[init, TypeSpecifier[\"PackedArray\"][\"MachineInteger\", 1]], \n     Typed[eventCount, \"Integer64\"]}, \n    Module[{state, position, substate, rulePart, newCellValue},\n     \n     state = init;\n     Do[\n      position = RandomInteger[{1, Length[state]}];\n      substate = \n       state[[\n        Mod[#, Length[state], 1] &amp; /@ \n         Range[position - rad, position + rad]]];\n      rulePart = Fold[2 #1 + #2 &amp;, 0, substate] + 1;\n      newCellValue = rule[[rulePart]];\n      state[[position]] = newCellValue;\n      , eventCount];\n     state\n     ]]];\n\nShould be compiled for all machine targets:\n\ncaEvaluateCompiled = CompiledCodeFunction[\nAssociation[\"Signature\" -&gt; TypeSpecifier[{\n\"PackedArray\"[\"Integer64\", \nTypeFramework`TypeLiteral[1, \"Integer64\"]], \"Integer64\", \n\"PackedArray\"[\"Integer64\", \nTypeFramework`TypeLiteral[1, \"Integer64\"]], \"Integer64\"} -&gt; \n      \"PackedArray\"[\"Integer64\", \nTypeFramework`TypeLiteral[1, \"Integer64\"]]], \"Input\" -&gt; Compile`Program[{}, \nFunction[{\nTyped[rule, \nTypeSpecifier[\"PackedArray\"][\"MachineInteger\", 1]], \nTyped[rad, \"MachineInteger\"], \nTyped[init, \nTypeSpecifier[\"PackedArray\"][\"MachineInteger\", 1]], \nTyped[eventCount, \"Integer64\"]}, \nModule[{state, position, substate, rulePart, newCellValue}, state = init; \n        Do[position = RandomInteger[{1, \nLength[state]}]; substate = Part[state, \nMap[Mod[#, \nLength[state], 1]&amp; , \nRange[position - rad, position + rad]]]; \n          rulePart = Fold[2 # + #2&amp; , 0, substate] + 1; \n          newCellValue = Part[rule, rulePart]; \n          Part[state, position] = newCellValue; Null, eventCount]; state]]], \n    \"ErrorFunction\" -&gt; Automatic, \"InitializationName\" -&gt; \n    \"Initialization_667648a7_ecf6_4a9d_97c7_f8cc07f5743e\", \"ExpressionName\" -&gt; \n    \"Main_ExprInvocation\", \"CName\" -&gt; \"Main_CInvocation\", \"FunctionName\" -&gt; \n    \"Main\", \"SystemID\" -&gt; \"MacOSX-x86-64\", \"VersionData\" -&gt; {12.3, 0, 0}, \n    \"CompiledIR\" -&gt; Association[\"MacOSX-x86-64\" -&gt; ByteArray[CompressedData[\"\n1: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\n\"]], \"Linux-x86-64\" -&gt; \n      ByteArray[CompressedData[\"\n1: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\njHZ0I2GDKAO6wzJm5c3CO9CEgTgTCgm6C3nCnOOQjlyEprMncs1EQIQxOM89\n6UCEsKdShGF4hQhX/sDxDdXzMzETBOJuL6tPh2w8NJ1ldnsFmmenHXzQIEHG\n+CbG6tC5eRtWZB+h3cZ41acLsIDGPcHROYbzjwICLIjYlzk9Hkl43z3BvBwj\nvaNGekG1XnVzM2uO0GB9kkCy4NUKnumSmHkgynIoYjvifkG95aPbwV/Z2mhg\neXCMesmb7pWp+BGCcCFebMlf2EAnl1Kg6/hSUFm0YxeGlYA2rlj8521QYcDF\nnEegiq450ayK1McnldnjV1VF4Fax4l9qsOkWWIEUvuZUHoj6Vm9c0ZD8vTp+\njtVdS75VXC2v+MBZxJvKVZVx7LTSm15o5/1hKVzEc0NX3VYvyfvhuzNg3o7v\nqWK7FQSB9yLKdopVquu8HQ+pbl7z8l1BuPGbp4xjSViFN5eserPgOrmHqSmx\nIxIE9YsoG2761VLqLTGOSAWyaENFNP8s4GAY5eCdkgOzRZgrDTbZQieQz2gk\nk6csztsYQgFYJ0HWCRy9K6Ml58C6B+g6kZpiXfwidmGDzWm3JbJ1z1mc0aeN\n2rmgIotgLihCqGQtUFJ5UUnl8Krur66T/xbLqCQtodCqayWW7CVxtX75K68g\niftXNWXi5vwS9JWe978EWD17WGAP8zYKEnJfAB/aSMTOOuGca8bJ3CgIAicI\nl+PChNm0S97dDMM38NywEGw6VkyLJCWpkEP1OiWGAioOC2z6jXfo8W7Dl5qk\n9Nc8FnAPSCNUr5thBEohsgo1OS/jcsi6jHrgD+LZwB8aYMQfA9cr/TFX9VnI\n8UCjvxm5BAyLco24KSl0/+qDYC2eugcuyrXO2CjYk3eQxayfTQLLC3nQkiBe\nasZWxL/FKgr/DtyixHda9V3I8R6jtwzHX7ZwyhkbVGxzQ5ozU0gXnEDF9oYv\njntx0qye+Jb0DBvLD8RhyahDPVRRONTbE1BwqN5HibGskkvJU7my48lPpoTI\nrW8ygBPytiqdsFO5xuSUGKyZZMxFWMbnpMLM3/pxrjjsCbM3mXw115fEBcZW\nIl1A/WOUef42BbE/F6t+G3qcPdfbBBU/RhW7im6ba0ZS3YnDSrq3wWCvJCEP\nCtNQK5iVztIA3OaZKpWlp4rdRV+b5whnb8R+T7sEp+fwJnqwKYApgSZK4Ccl\n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\nZDS1t/0sIuq/915sXAwCDKkvyvjy8JM8GazsaxKSPSNOVQ+eap2qXK6NLLy0\n62bhLuep4U8XrD5szA7HzXVvm+Pl92rTEDDU1YtZJ5GoLG1KpreOVlcltiBV\nwc9DZxzeYy4Axu7HG18efXKW+PP0FGR8Of5J/X8AtX+YQbb5LXtPrGr4l9ip\n+vuVf4gPiOo+Ij6X37nG19KQntHvu42v7UF7ZYnG1/5Aj15MNnYqCVeYxOmm\nKaDSXp68Ghgv7Z8qjbKBUbbpQ9z2F1NPChc5wmREgSf7+k/2DZ8cGqq4OFrx\n+3gF4PDxSKxC3aP6V4eXXATFxO5dq4DN9J8dDW+RdwboX+q04c99/SPkS4px\n0/uJ31MKOqPG5wKDfRj/6QPV2Om00mDHX6dtre6abrB7913du2xqV4fLXUjG\nA72P29459eRCljUs1xX39OOpikLfeOA5otaBdq8ji8W/gULE8aJeturuk3uG\nhro+5LRoNKOe92JvxevwW693Vb2OGr86PEmR5UhuZyl329SuiYm58lDWxJ2s\njjd2OiMjzBlsWZV2pvoOpBAjF4ix4sLh2Bmx8O+UAqwsUT2PnpaompFEMxEp\ndQl6g172KgS9IgR2K7LXJWYlGTn/b02YHH3Xj57L+g8kBAwkfe4qyzpWBtXt\nz7xr9WFcY1FvS1yrQdPqls0R5V+leD9Aq3iHFGnitqmJ1AuYx8j40fjW1vEz\nreMdU++5AZ6y06zDIx/O9FV30J+KkWtKvXHgnMEDOY/ouFU1LvqTYCkrzxef\n7QqTXWpK6JQ6Hpkq6dj8Csqw+3Lyu67LJYaP0UavVCRH9Tl+7qrMOq2qONMu\nK5z6mLJed/rJfWXL8temO+hi9eXfrZglmZjqs6xZZD8rkJJzZCrIlkqg9n/8\nx/AcVuBK3qSDaVPA38s747UZPiHImUDMZs3ML2cCyaZo6R9b+YF63TBvegWx\ns91rtd0Xr/x9qLo0+aYuMnn3zVFwhoL2toxSnc2Ap/6x63RZD480zc0OVNdB\nuxAt/723ddetql23hqYqqoaiFPicq8enXqQ86zRAa9WoT2UgDAdia6JOz28d\nglB7dB7i7u2a+lT1B08kT5yxZyajjK3XIRdwbjWF01Fahqo+5EhFikxZNTBZ\nvcsNKcl/S96zvAviIgTsrLo4cLZuwKh1YNvvU5uuLvpaEZra66ZAUf4dubxt\n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\n95quYlkc+H/bqQ28\n\"]]], \"orcInstance\" -&gt; 140373448223744, \"orcModuleId\" -&gt; 1, \n    \"targetMachineId\" -&gt; 140373447970304], 5481287872, 5481287664, 5481287744,\n    5481283584, \n   \"{\\\"PackedArray\\\"[\\\"Integer64\\\", TypeFramework`TypeLiteral[1, \\\n\\\"Integer64\\\"]], \\\"Integer64\\\", \\\"PackedArray\\\"[\\\"Integer64\\\", \\\nTypeFramework`TypeLiteral[1, \\\"Integer64\\\"]], \\\"Integer64\\\"} -&gt; \\\"PackedArray\\\n\\\"[\\\"Integer64\\\", TypeFramework`TypeLiteral[1, \\\"Integer64\\\"]]\"];\n\nRandomAsynchronousCellularAutomaton[{rn_, 2, r_}, init_, {t_, ct_}] := \n NestList[\n  caEvaluateCompiled[Reverse[IntegerDigits[rn, 2, 2^(2 r + 1)]], r, #, ct] &amp;, \n  init, t]\n\nGraphicsGrid[\n ParallelTable[\n    BlockRandom[SeedRandom[567]; \n     ArrayPlot[\n      RandomAsynchronousCellularAutomaton[{#, 2, 2}, \n       RandomChoice[{p, 1 - p} -&gt; {1, 0}, 300], {200, 400}], \n      ColorRules -&gt; {0 -&gt; Hue[0.15, 0.72, 1], \n        1 -&gt; Hue[0.98, 1, 0.8200000000000001]}, \n      Frame -&gt; None]], {p, .3, .7, .1}] &amp; /@ {4272826020, 4242057736, \n   4265795970, 3663321792, 3953790018, 4020250803}]</pre> \n    </div> </td> \n  </tr> \n </tbody> \n</table> \n<p>These rules were the top performers in terms of having “closest-to-majority-consensus” average behavior. In the pictures here, an average of 2 updates per cell is being done between successive rows. </p> \n<p>If we plot the final density as shown in these pictures against initial density, here are the results for the first 3 rules (with rule numbers 4272826020, 4242057736, and 4265795970):</p> \n<table class=\"InCell\"> \n <tbody> \n  <tr> \n   <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n    <div> \n     <p><img style=\"margin-left: -5px; margin-bottom: -20px\" class=\"\" src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Aimg147.png\" alt=\"\" title=\"\" width=\"569\" height=\"93\" /> </p>\n    </div> \n    <div class=\"IFL\"> \n     <span class=\"close\" id=\"‘781_out'\">&amp;#10005</span> \n     <pre class=\"text\" id=\"‘781_out_text'\">caEvaluateCompiled = \n  FunctionCompile[\n   Function[{Typed[rule, TypeSpecifier[\"PackedArray\"][\"MachineInteger\", 1]], \n     Typed[rad, \"MachineInteger\"], \n     Typed[init, TypeSpecifier[\"PackedArray\"][\"MachineInteger\", 1]], \n     Typed[eventCount, \"Integer64\"]}, \n    Module[{state, position, substate, rulePart, newCellValue},\n     \n     state = init;\n     Do[\n      position = RandomInteger[{1, Length[state]}];\n      substate = \n       state[[\n        Mod[#, Length[state], 1] &amp; /@ \n         Range[position - rad, position + rad]]];\n      rulePart = Fold[2 #1 + #2 &amp;, 0, substate] + 1;\n      newCellValue = rule[[rulePart]];\n      state[[position]] = newCellValue;\n      , eventCount];\n     state\n     ]]];\n\nShould be compiled for all machine targets:\n\ncaEvaluateCompiled = CompiledCodeFunction[\nAssociation[\"Signature\" -&gt; TypeSpecifier[{\n\"PackedArray\"[\"Integer64\", \nTypeFramework`TypeLiteral[1, \"Integer64\"]], \"Integer64\", \n\"PackedArray\"[\"Integer64\", \nTypeFramework`TypeLiteral[1, \"Integer64\"]], \"Integer64\"} -&gt; \n      \"PackedArray\"[\"Integer64\", \nTypeFramework`TypeLiteral[1, \"Integer64\"]]], \"Input\" -&gt; Compile`Program[{}, \nFunction[{\nTyped[rule, \nTypeSpecifier[\"PackedArray\"][\"MachineInteger\", 1]], \nTyped[rad, \"MachineInteger\"], \nTyped[init, \nTypeSpecifier[\"PackedArray\"][\"MachineInteger\", 1]], \nTyped[eventCount, \"Integer64\"]}, \nModule[{state, position, substate, rulePart, newCellValue}, state = init; \n        Do[position = RandomInteger[{1, \nLength[state]}]; substate = Part[state, \nMap[Mod[#, \nLength[state], 1]&amp; , \nRange[position - rad, position + rad]]]; \n          rulePart = Fold[2 # + #2&amp; , 0, substate] + 1; \n          newCellValue = Part[rule, rulePart]; \n          Part[state, position] = newCellValue; Null, eventCount]; state]]], \n    \"ErrorFunction\" -&gt; Automatic, \"InitializationName\" -&gt; \n    \"Initialization_667648a7_ecf6_4a9d_97c7_f8cc07f5743e\", \"ExpressionName\" -&gt; \n    \"Main_ExprInvocation\", \"CName\" -&gt; \"Main_CInvocation\", \"FunctionName\" -&gt; \n    \"Main\", \"SystemID\" -&gt; \"MacOSX-x86-64\", \"VersionData\" -&gt; {12.3, 0, 0}, \n    \"CompiledIR\" -&gt; Association[\"MacOSX-x86-64\" -&gt; ByteArray[CompressedData[\"\n1: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\n\"]], \"Linux-x86-64\" -&gt; \n      ByteArray[CompressedData[\"\n1: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\njHZ0I2GDKAO6wzJm5c3CO9CEgTgTCgm6C3nCnOOQjlyEprMncs1EQIQxOM89\n6UCEsKdShGF4hQhX/sDxDdXzMzETBOJuL6tPh2w8NJ1ldnsFmmenHXzQIEHG\n+CbG6tC5eRtWZB+h3cZ41acLsIDGPcHROYbzjwICLIjYlzk9Hkl43z3BvBwj\nvaNGekG1XnVzM2uO0GB9kkCy4NUKnumSmHkgynIoYjvifkG95aPbwV/Z2mhg\neXCMesmb7pWp+BGCcCFebMlf2EAnl1Kg6/hSUFm0YxeGlYA2rlj8521QYcDF\nnEegiq450ayK1McnldnjV1VF4Fax4l9qsOkWWIEUvuZUHoj6Vm9c0ZD8vTp+\njtVdS75VXC2v+MBZxJvKVZVx7LTSm15o5/1hKVzEc0NX3VYvyfvhuzNg3o7v\nqWK7FQSB9yLKdopVquu8HQ+pbl7z8l1BuPGbp4xjSViFN5eserPgOrmHqSmx\nIxIE9YsoG2761VLqLTGOSAWyaENFNP8s4GAY5eCdkgOzRZgrDTbZQieQz2gk\nk6csztsYQgFYJ0HWCRy9K6Ml58C6B+g6kZpiXfwidmGDzWm3JbJ1z1mc0aeN\n2rmgIotgLihCqGQtUFJ5UUnl8Krur66T/xbLqCQtodCqayWW7CVxtX75K68g\niftXNWXi5vwS9JWe978EWD17WGAP8zYKEnJfAB/aSMTOOuGca8bJ3CgIAicI\nl+PChNm0S97dDMM38NywEGw6VkyLJCWpkEP1OiWGAioOC2z6jXfo8W7Dl5qk\n9Nc8FnAPSCNUr5thBEohsgo1OS/jcsi6jHrgD+LZwB8aYMQfA9cr/TFX9VnI\n8UCjvxm5BAyLco24KSl0/+qDYC2eugcuyrXO2CjYk3eQxayfTQLLC3nQkiBe\nasZWxL/FKgr/DtyixHda9V3I8R6jtwzHX7ZwyhkbVGxzQ5ozU0gXnEDF9oYv\njntx0qye+Jb0DBvLD8RhyahDPVRRONTbE1BwqN5HibGskkvJU7my48lPpoTI\nrW8ygBPytiqdsFO5xuSUGKyZZMxFWMbnpMLM3/pxrjjsCbM3mXw115fEBcZW\nIl1A/WOUef42BbE/F6t+G3qcPdfbBBU/RhW7im6ba0ZS3YnDSrq3wWCvJCEP\nCtNQK5iVztIA3OaZKpWlp4rdRV+b5whnb8R+T7sEp+fwJnqwKYApgSZK4Ccl\n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\nZDS1t/0sIuq/915sXAwCDKkvyvjy8JM8GazsaxKSPSNOVQ+eap2qXK6NLLy0\n62bhLuep4U8XrD5szA7HzXVvm+Pl92rTEDDU1YtZJ5GoLG1KpreOVlcltiBV\nwc9DZxzeYy4Axu7HG18efXKW+PP0FGR8Of5J/X8AtX+YQbb5LXtPrGr4l9ip\n+vuVf4gPiOo+Ij6X37nG19KQntHvu42v7UF7ZYnG1/5Aj15MNnYqCVeYxOmm\nKaDSXp68Ghgv7Z8qjbKBUbbpQ9z2F1NPChc5wmREgSf7+k/2DZ8cGqq4OFrx\n+3gF4PDxSKxC3aP6V4eXXATFxO5dq4DN9J8dDW+RdwboX+q04c99/SPkS4px\n0/uJ31MKOqPG5wKDfRj/6QPV2Om00mDHX6dtre6abrB7913du2xqV4fLXUjG\nA72P29459eRCljUs1xX39OOpikLfeOA5otaBdq8ji8W/gULE8aJeturuk3uG\nhro+5LRoNKOe92JvxevwW693Vb2OGr86PEmR5UhuZyl329SuiYm58lDWxJ2s\njjd2OiMjzBlsWZV2pvoOpBAjF4ix4sLh2Bmx8O+UAqwsUT2PnpaompFEMxEp\ndQl6g172KgS9IgR2K7LXJWYlGTn/b02YHH3Xj57L+g8kBAwkfe4qyzpWBtXt\nz7xr9WFcY1FvS1yrQdPqls0R5V+leD9Aq3iHFGnitqmJ1AuYx8j40fjW1vEz\nreMdU++5AZ6y06zDIx/O9FV30J+KkWtKvXHgnMEDOY/ouFU1LvqTYCkrzxef\n7QqTXWpK6JQ6Hpkq6dj8Csqw+3Lyu67LJYaP0UavVCRH9Tl+7qrMOq2qONMu\nK5z6mLJed/rJfWXL8temO+hi9eXfrZglmZjqs6xZZD8rkJJzZCrIlkqg9n/8\nx/AcVuBK3qSDaVPA38s747UZPiHImUDMZs3ML2cCyaZo6R9b+YF63TBvegWx\ns91rtd0Xr/x9qLo0+aYuMnn3zVFwhoL2toxSnc2Ap/6x63RZD480zc0OVNdB\nuxAt/723ddetql23hqYqqoaiFPicq8enXqQ86zRAa9WoT2UgDAdia6JOz28d\nglB7dB7i7u2a+lT1B08kT5yxZyajjK3XIRdwbjWF01Fahqo+5EhFikxZNTBZ\nvcsNKcl/S96zvAviIgTsrLo4cLZuwKh1YNvvU5uuLvpaEZra66ZAUf4dubxt\n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\n95quYlkc+H/bqQ28\n\"]]], \"orcInstance\" -&gt; 140373448223744, \"orcModuleId\" -&gt; 1, \n    \"targetMachineId\" -&gt; 140373447970304], 5481287872, 5481287664, 5481287744,\n    5481283584, \n   \"{\\\"PackedArray\\\"[\\\"Integer64\\\", TypeFramework`TypeLiteral[1, \\\n\\\"Integer64\\\"]], \\\"Integer64\\\", \\\"PackedArray\\\"[\\\"Integer64\\\", \\\nTypeFramework`TypeLiteral[1, \\\"Integer64\\\"]], \\\"Integer64\\\"} -&gt; \\\"PackedArray\\\n\\\"[\\\"Integer64\\\", TypeFramework`TypeLiteral[1, \\\"Integer64\\\"]]\"];\n\nRandomAsynchronousCellularAutomaton[{rn_, 2, r_}, init_, {t_, ct_}] := \n NestList[\n  caEvaluateCompiled[Reverse[IntegerDigits[rn, 2, 2^(2 r + 1)]], r, #, ct] &amp;, \n  init, t]\n\nGraphicsRow[\n ListLinePlot[\n    ParallelTable[\n     Mean[\n      Table[\n       Mean[\n        Last[\n         RandomAsynchronousCellularAutomaton[{#, 2, 2}, \n          RandomChoice[{p, 1 - p} -&gt; {1, 0}, 300], {200, 400}]]], 20]], {p, 0,\n       1, .05}], Filling -&gt; Axis, FillingStyle -&gt; LightOrange, Frame -&gt; True, \n    PlotTheme -&gt; \"Minimal\", ImageSize -&gt; 140] &amp; /@ {4272826020, 4242057736, \n   4265795970}]</pre> \n    </div> </td> \n  </tr> \n </tbody> \n</table> \n<p>In a perfect consensus rule, these would be step functions at <img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514img36.png\" style=\"margin-top: -3px;\" width=\"7\" height=\"17\" align=\"absmiddle\">—and one can expect that these results may get closer to that with larger numbers of cells and steps.</img></p> \n<p>In an ordinary, synchronous cellular automaton, every cell is in effect updated at every step, and the graph of “causal relationships” between “updating events” forms a trivial grid. But in an asynchronous cellular automaton the graph is sparser—with a particular updating event being causally connected to the previous event that happened to update that cell.</p> \n<p>But with the setup we have so far, this causal graph depends only on which cells are updated, not on what their colors might be. And with random updates, the causal graph will basically be like a “random meshing” of the spacetime structure of a system—so that for example for a cellular automaton with cyclic boundaries it becomes an approximation to a tube:</p> \n<table class=\"InCell\"> \n <tbody> \n  <tr> \n   <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n    <div> \n     <img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg149.png\" alt=\"\" title=\"\" width=\"565\" height=\"\" /> \n    </div> \n    <div class=\"IFL\"> \n     <span class=\"close\" id=\"‘782_out'\">&amp;#10005</span> \n     <pre class=\"text\" id=\"‘782_out_text'\">randomOrderCAFunc[ruleRadius_, ruleNumber_, init_, eventCount_, func_] :=\n  func[evaluateSingleEvent[ruleRadius, ruleNumber, #] &amp;, init, eventCount];\n\nRandomOrderCA[args___] := randomOrderCAFunc[args, Nest];\n\nRandomOrderCAList[args___] := randomOrderCAFunc[args, NestList];\n\nfindLastEvent[eventNumber_, position_, eventsIndex_] := Module[{},\n  Max[Select[Lookup[eventsIndex, position, {-Infinity}], # &lt; eventNumber &amp;]]\n];\n\ngetCausalLinks[eventNumber_, position_, eventsIndex_, size_, ruleRadius_] := Module[{},\n  DeleteCases[\n    findLastEvent[eventNumber, #, eventsIndex] -&gt; eventNumber &amp; /@\n      Mod[Range[position - ruleRadius, position + ruleRadius], size, 1],\n    -Infinity -&gt; _]\n];\n\nRandomOrderCACausalGraph[ruleRadius_, ruleNumber_, init_, eventCount_, opts___] := Module[{eventsIndex, eventPositions},\n  eventsIndex = KeySort @ Map[\n    Last,\n    GroupBy[\n      Thread[\n        (eventPositions = Reap[RandomOrderCA[ruleRadius, ruleNumber, init, eventCount]][[2, 1]]) -&gt;\n          Range[eventCount]],\n      First],\n    {2}];\n  Graph[\n    Range[eventCount],\n    Catenate[getCausalLinks[#, eventPositions[[#]], eventsIndex, Length[init], ruleRadius] &amp; /@ Range[eventCount]],\n    EdgeStyle -&gt; ResourceFunction[\"WolframPhysicsProjectStyleData\"][\"CausalGraph\", \"EdgeStyle\"],\n    VertexStyle -&gt; ResourceFunction[\"WolframPhysicsProjectStyleData\"][\"CausalGraph\", \"VertexStyle\"],\n    opts]\n]\n\nrandomInit[size_, onesFraction_] := RandomChoice[{1 - onesFraction, onesFraction} -&gt; {0, 1}, size];\n\nevaluateSingleEvent[ruleRadius_, ruleNumber_, init_] :=\n  evaluateEventAtPlace[ruleRadius, ruleNumber, init, Sow[RandomInteger[{1, Length[init]}]]];\n\nevaluateEventAtPlace[ruleRadius_, ruleNumber_, init_, center_] := Module[{input, newCenterValue},\n  input = cyclicTake[init, Range[center - ruleRadius, center + ruleRadius]];\n  newCenterValue = CellularAutomaton[{ruleNumber, 2, ruleRadius}, input][[ruleRadius + 1]];\n  ReplacePart[init, center -&gt; newCenterValue]\n];\n\ncyclicTake[list_, indices_] := cyclicPart[list, #] &amp; /@ indices;\n\ncyclicPart[list_, index_] := list[[Mod[index, Length[list], 1]]];\n\nSeedRandom[0]; RandomOrderCACausalGraph[1, 51, \n randomInit[10, 0.5], 200]</pre> \n    </div> </td> \n  </tr> \n </tbody> \n</table> \n<p>Note that this is just a causal graph for a “single thread of history”, associated with a particular sequence of updating events. We can also imagine constructing a multiway causal graph that records the causal relationships both within and between different possible threads of history.</p> \n<h2 id=\"dynamic-connectivity\">Dynamic Connectivity</h2> \n<p>Just as we can consider asynchronous updates in ordinary cellular automata, we can also consider them for graph cellular automata. But once we’re considering asynchronous updates on graphs, we can go still further, and consider not just updating “values at nodes” of a graph, but also the graph itself. And in this case, we’re basically dealing with the so-called <a href=\"https://www.wolframphysics.org/technical-introduction/\" target=\"_blank\" rel=\"noopener\">Wolfram models of our Physics Project</a>.</p> \n<p>As a kind of bridge to such models, let’s consider using them to represent a majority graph cellular automaton. We imagine setting up a hypergraph where all that exists is connectivity of the hypergraph, so “values” in the cellular automata have to be represented by connectivity structures—say with a 0 corresponding to a unary hyperedge, and a 1 corresponding to a ternary one (binary hyperedges are used to make “spatial” connections in the hypergraph).</p> \n<p>With this setup, the majority rule becomes a hypergraph transformation rule:</p> \n<table class=\"InCell\"> \n <tbody> \n  <tr> \n   <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n    <div> \n     <p><img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514XXimg152.png\" alt=\"\" title=\"\" width=\"574\" height=\"\" /> </p>\n    </div> \n    <div class=\"IFL\"> \n     <span class=\"close\" id=\"‘783_out'\">&amp;#10005</span> \n     <pre class=\"text\" id=\"‘783_out_text'\">hypergraphConsensusRule = {{{c, n1}, {c, n2}, {c, \n      n3}, {n1}, {n2}, {n3, n3, n3}} -&gt; {{c, n1}, {c, n2}, {c, \n      n3}, {n1}, {n2}, {n3}}, {{c, n1}, {c, n2}, {c, n3}, {n1, n1, \n      n1}, {n2, n2, n2}, {n3}} -&gt; {{c, n1}, {c, n2}, {c, n3}, {n1, n1,\n       n1}, {n2, n2, n2}, {n3, n3, n3}}};\n\nRulePlot[ResourceFunction[\"WolframModel\"][hypergraphConsensusRule]]</pre> \n    </div> </td> \n  </tr> \n </tbody> \n</table> \n<p>Running this from a particular initial hypergraph, we see consensus achieved in a few steps:</p> \n<table class=\"InCell\"> \n <tbody> \n  <tr> \n   <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n    <div> \n     <img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg156.png\" alt=\"\" title=\"\" width=\"574\" height=\"\" />\n    </div> \n    <div class=\"IFL\"> \n     <span class=\"close\" id=\"‘784_out'\">&amp;#10005</span> \n     <pre class=\"text\" id=\"‘784_out_text'\">exampleColoredState = {{-1, 2}, {-1, 5}, {-1, 3}, {-2, 1}, {-2, \n    5}, {-2, 3}, {-3, 1}, {-3, 4}, {-3, 3}, {-4, 5}, {-4, 2}, {-4, \n    1}, {-5, 5}, {-5, 3}, {-5, 2}, {-6, 4}, {-6, 1}, {-6, 2}, {1, 1, \n    1}, {2}, {3}, {4, 4, 4}, {5}};\n\nhypergraphConsensusRule = {{{c, n1}, {c, n2}, {c, \n      n3}, {n1}, {n2}, {n3, n3, n3}} -&gt; {{c, n1}, {c, n2}, {c, \n      n3}, {n1}, {n2}, {n3}}, {{c, n1}, {c, n2}, {c, n3}, {n1, n1, \n      n1}, {n2, n2, n2}, {n3}} -&gt; {{c, n1}, {c, n2}, {c, n3}, {n1, n1,\n       n1}, {n2, n2, n2}, {n3, n3, n3}}};\n\nSeedRandom[35363]; \nResourceFunction[\"WolframModelPlot\"][#, ImageSize -&gt; 150] &amp; /@ \n ResourceFunction[\"WolframModel\"][hypergraphConsensusRule, \n   exampleColoredState, &lt;|\"MaxEvents\" -&gt; 20|&gt;, \n   \"EventOrderingFunction\" -&gt; \"Random\"][\"StatesList\"]</pre> \n    </div> </td> \n  </tr> \n </tbody> \n</table> \n<p>Here is a slightly larger example, that again succeeds in achieving consensus:</p> \n<table class=\"InCell\"> \n <tbody> \n  <tr> \n   <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n    <div> \n     <img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg161.png\" alt=\"\" title=\"\" width=\"574\" height=\"\" />\n    </div> \n    <div class=\"IFL\"> \n     <span class=\"close\" id=\"‘787_out'\">&amp;#10005</span> \n     <pre class=\"text\" id=\"‘787_out_text'\">randomThreeNetwork[nodeCount_, connectionCount_, whiteDensity_] := \n Module[{\n       nodes, connectedTriples, connectivityEdges, whiteCount, \n   colors, colorEdges},\n    nodes = Range @ nodeCount;\n    connectedTriples = \n   Table[RandomSample[nodes, 3], connectionCount];\n    connectivityEdges = \n   Catenate @ MapIndexed[Thread[{-#2[[1]], #}] &amp;, connectedTriples];\n    whiteCount = Round[whiteDensity nodeCount];\n    colors = \n   RandomSample @ \n    Join[Table[0, nodeCount - whiteCount], Table[1, whiteCount]];\n    colorEdges = \n   MapIndexed[If[# == 0, {#2[[1]]}, {#2[[1]], #2[[1]], #2[[1]]}] &amp;, \n    colors];\n    Join[connectivityEdges, colorEdges]\n  ]\n\nhypergraphConsensusRule = {{{c, n1}, {c, n2}, {c, \n      n3}, {n1}, {n2}, {n3, n3, n3}} -&gt; {{c, n1}, {c, n2}, {c, \n      n3}, {n1}, {n2}, {n3}}, {{c, n1}, {c, n2}, {c, n3}, {n1, n1, \n      n1}, {n2, n2, n2}, {n3}} -&gt; {{c, n1}, {c, n2}, {c, n3}, {n1, n1,\n       n1}, {n2, n2, n2}, {n3, n3, n3}}};\n\ninet = BlockRandom[SeedRandom[455454]; \n   randomThreeNetwork[25, 50, 0.4]];\n\nBlockRandom[SeedRandom[223152]; \n ResourceFunction[\"WolframModelPlot\"][#, ImageSize -&gt; 150] &amp; /@ \n  ResourceFunction[\"WolframModel\"][hypergraphConsensusRule, \n    inet, &lt;|\"MaxEvents\" -&gt; 20|&gt;, \"EventOrderingFunction\" -&gt; \"Random\"][\n   \"StatesList\"]]</pre> \n    </div> </td> \n  </tr> \n </tbody> \n</table> \n<p>The particular rules we’re using here move around the unary and ternary self-loop hyperedges, but do not affect the “backbone” of the hypergraph. And just as for our earlier examples with ordinary graphs, the simple majority rule doesn’t always succeed in achieving consensus.</p> \n<p>But now that we have formulated everything in terms of hypergraphs, it’s straightforward to have rules that not only change “colors” but also change the underlying structure. As a very simple example, consider adding a “structural rearrangement” case to our rule:</p> \n<table class=\"InCell\"> \n <tbody> \n  <tr> \n   <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n    <div> \n     <p><img class=\"\" src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514XXimg164.png\" alt=\"\" title=\"\" width=\"540\" height=\"\" /> </p>\n    </div> \n    <div class=\"IFL\"> \n     <span class=\"close\" id=\"‘972_out'\">&amp;#10005</span> \n     <pre class=\"text\" id=\"‘972_out_text'\">hypergraphConsensusRule2 = {{{c, n1}, {c, n2}, {c, \n      n3}, {n1}, {n2}, {n3, n3, n3}} -&gt; {{c, n1}, {c, n2}, {c, \n      n3}, {n1}, {n2}, {n3}}, {{c, n1}, {c, n2}, {c, n3}, {n1, n1, \n      n1}, {n2, n2, n2}, {n3}} -&gt; {{c, n1}, {c, n2}, {c, n3}, {n1, n1,\n       n1}, {n2, n2, n2}, {n3, n3, n3}}, {{c1, n11}, {c1, n12}, {c1, \n      n13}, {c2, n11}, {c2, n22}, {c2, n23}} -&gt; {{c1, n11}, {c1, \n      n22}, {c1, n13}, {c2, n11}, {c2, n12}, {c2, n23}}};\n\nRulePlot[ResourceFunction[\"WolframModel\"][hypergraphConsensusRule2]]</pre> \n    </div> </td> \n  </tr> \n </tbody> \n</table> \n<p>Now in addition to moving around “colors”, the rule continually restructures the whole hypergraph:</p> \n<table class=\"InCell\"> \n <tbody> \n  <tr> \n   <td colspan=\"1\" rowspan=\"1\" class=\"Input\"> \n    <div> \n     <img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg170.png\" alt=\"\" title=\"\" width=\"574\" height=\"\" /> \n    </div> \n    <div class=\"IFL\"> \n     <span class=\"close\" id=\"‘532'\">&amp;#10005</span> \n     <pre class=\"text\" id=\"‘532_out_text'\">(*randomThreeNetwork[nodeCount_, connectionCount_, whiteDensity_] := \\\nModule[{\n    nodes, connectedTriples, connectivityEdges, whiteCount, colors, \\\ncolorEdges},\n  nodes = Range @ nodeCount;\n  connectedTriples = Table[RandomSample[nodes, 3], connectionCount];\n  connectivityEdges = Catenate @ MapIndexed[Thread[{-#2\\\n\\[LeftDoubleBracket]1\\[RightDoubleBracket], #}] &amp;, connectedTriples];\n  whiteCount = Round[whiteDensity nodeCount];\n  colors = RandomSample @ Join[Table[0, nodeCount - whiteCount], \\\nTable[1, whiteCount]];\n  colorEdges = MapIndexed[If[# \\[Equal] 0, {#2\\[LeftDoubleBracket]1\\\n\\[RightDoubleBracket]}, {#2[[1]], #2[[1]], #2[[1]]}] &amp;, colors];\n  Join[connectivityEdges, colorEdges]\n]*)\n\n(*hypergraphConsensusRule2={{{c,n1},{c,n2},{c,n3},{n1},{n2},{n3,n3,n3}\\\n}-&gt;{{c,n1},{c,n2},{c,n3},{n1},{n2},{n3}},{{c,n1},{c,n2},{c,n3},{n1,n1,\\\nn1},{n2,n2,n2},{n3}}-&gt;{{c,n1},{c,n2},{c,n3},{n1,n1,n1},{n2,n2,n2},{n3,\\\nn3,n3}},{{c1,n11},{c1,n12},{c1,n13},{c2,n11},{c2,n22},{c2,n23}}-&gt;{{c1,\\\nn11},{c1,n22},{c1,n13},{c2,n11},{c2,n12},{c2,n23}}};*)\n\n(*inet=BlockRandom[SeedRandom[455454];randomThreeNetwork[25,50,0.4]];*)\n\n(*BlockRandom[SeedRandom[223152]; \\\nResourceFunction[\"WolframModel\"][hypergraphConsensusRule2, inet, \\\n&lt;|\"MaxEvents\" -&gt; 50|&gt;, \"EventOrderingFunction\" -&gt; \\\n\"Random\"][\"StatesPlotsList\",ImageSize\\[Rule]120]];*)\n\nSetReplace`WolframModelEvolutionObject[\nAssociation[\n  \"Version\" -&gt; 2, \n   \"Rules\" -&gt; {{{c, n1}, {c, n2}, {c, n3}, {n1}, {n2}, {\n       n3, n3, n3}} -&gt; {{c, n1}, {c, n2}, {c, n3}, {n1}, {n2}, {\n       n3}}, {{c, n1}, {c, n2}, {c, n3}, {n1, n1, n1}, {n2, n2, n2}, {\n       n3}} -&gt; {{c, n1}, {c, n2}, {c, n3}, {n1, n1, n1}, {\n       n2, n2, n2}, {n3, n3, n3}}, {{c1, n11}, {c1, n12}, {c1, n13}, {\n       c2, n11}, {c2, n22}, {c2, n23}} -&gt; {{c1, n11}, {c1, n22}, {\n       c1, n13}, {c2, n11}, {c2, n12}, {c2, n23}}}, \n   \"MaxCompleteGeneration\" -&gt; 0, \"TerminationReason\" -&gt; \"MaxEvents\", \n   \"AtomLists\" -&gt; {{-1, 16}, {-1, 21}, {-1, 15}, {-2, 2}, {-2, \n     8}, {-2, 15}, {-3, 8}, {-3, 16}, {-3, 15}, {-4, 20}, {-4, \n     12}, {-4, 18}, {-5, 10}, {-5, 18}, {-5, 20}, {-6, 23}, {-6, \n     4}, {-6, 15}, {-7, 24}, {-7, 6}, {-7, 10}, {-8, 18}, {-8, \n     5}, {-8, 1}, {-9, 13}, {-9, 25}, {-9, 6}, {-10, 19}, {-10, \n     8}, {-10, 15}, {-11, 10}, {-11, 3}, {-11, 6}, {-12, 10}, {-12, \n     13}, {-12, 1}, {-13, 13}, {-13, 1}, {-13, 17}, {-14, 7}, {-14, \n     13}, {-14, 12}, {-15, 23}, {-15, 7}, {-15, 22}, {-16, 7}, {-16, \n     9}, {-16, 23}, {-17, 19}, {-17, 5}, {-17, 11}, {-18, 5}, {-18, \n     18}, {-18, 1}, {-19, 11}, {-19, 5}, {-19, 14}, {-20, 21}, {-20, \n     10}, {-20, 23}, {-21, 25}, {-21, 17}, {-21, 5}, {-22, 12}, {-22, \n     4}, {-22, 25}, {-23, 2}, {-23, 24}, {-23, 17}, {-24, 9}, {-24, \n     20}, {-24, 12}, {-25, 18}, {-25, 22}, {-25, 17}, {-26, 25}, {-26,\n      19}, {-26, 22}, {-27, 2}, {-27, 17}, {-27, 21}, {-28, 22}, {-28,\n      5}, {-28, 23}, {-29, 12}, {-29, 18}, {-29, 22}, {-30, 24}, {-30,\n      22}, {-30, 4}, {-31, 25}, {-31, 11}, {-31, 24}, {-32, 23}, {-32,\n      4}, {-32, 13}, {-33, 25}, {-33, 22}, {-33, 16}, {-34, 13}, {-34,\n      1}, {-34, 23}, {-35, 23}, {-35, 11}, {-35, 24}, {-36, 4}, {-36, \n     6}, {-36, 13}, {-37, 13}, {-37, 15}, {-37, 10}, {-38, 20}, {-38, \n     19}, {-38, 3}, {-39, 11}, {-39, 9}, {-39, 25}, {-40, 25}, {-40, \n     16}, {-40, 1}, {-41, 8}, {-41, 6}, {-41, 17}, {-42, 14}, {-42, \n     7}, {-42, 20}, {-43, 8}, {-43, 6}, {-43, 2}, {-44, 18}, {-44, \n     13}, {-44, 3}, {-45, 10}, {-45, 13}, {-45, 7}, {-46, 22}, {-46, \n     10}, {-46, 4}, {-47, 8}, {-47, 23}, {-47, 1}, {-48, 4}, {-48, \n     25}, {-48, 8}, {-49, 18}, {-49, 13}, {-49, 23}, {-50, 25}, {-50, \n     18}, {-50, 6}, {1, 1, 1}, {2, 2, 2}, {3}, {4}, {5}, {6, 6, 6}, {\n     7, 7, 7}, {8}, {9}, {10, 10, 10}, {11}, {12}, {13, 13, 13}, {14, \n     14, 14}, {15}, {16}, {17}, {18}, {19}, {20}, {21}, {22, 22, \n     22}, {23, 23, 23}, {24, 24, 24}, {25}, {-29, 22}, {-29, \n     23}, {-29, 18}, {-15, 22}, {-15, 12}, {-15, 7}, {-12, 13}, {-12, \n     17}, {-12, 10}, {-13, 13}, {-13, 1}, {-13, 1}, {-18, 5}, {-18, \n     1}, {-18, 1}, {-8, 5}, {-8, 18}, {-8, 18}, {-50, 6}, {-50, \n     13}, {-50, 25}, {-36, 6}, {-36, 18}, {-36, 4}, {-9, 25}, {-9, \n     11}, {-9, 6}, {-39, 25}, {-39, 13}, {-39, 9}, {-26, 25}, {-26, \n     22}, {-26, 22}, {-33, 25}, {-33, 19}, {-33, 16}, {-40, 25}, {-40,\n      6}, {-40, 1}, {-9, 25}, {-9, 16}, {-9, 11}, {-5, 18}, {-5, \n     23}, {-5, 20}, {-29, 18}, {-29, 10}, {-29, 22}, {-45, 13}, {-45, \n     4}, {-45, 7}, {-32, 13}, {-32, 10}, {-32, 23}, {-50, 25}, {-50, \n     4}, {-50, 6}, {-48, 25}, {-48, 13}, {-48, 8}, {-6, 15}, {-6, \n     13}, {-6, 23}, {-37, 15}, {-37, 4}, {-37, 10}, {-17, 19}, {-17, \n     25}, {-17, 5}, {-33, 19}, {-33, 11}, {-33, 16}, {-40, 25}, {-40, \n     11}, {-40, 1}, {-31, 25}, {-31, 6}, {-31, 24}, {-35, 23}, {-35, \n     9}, {-35, 24}, {-16, 23}, {-16, 11}, {-16, 7}, {-10, 15}, {-10, \n     23}, {-10, 19}, {-6, 15}, {-6, 8}, {-6, 13}, {-37, 15}, {-37, \n     8}, {-37, 4}, {-6, 15}, {-6, 10}, {-6, 13}, {-3, 8}, {-3, \n     6}, {-3, 16}, {-41, 8}, {-41, 15}, {-41, 17}, {-22, 4}, {-22, \n     18}, {-22, 12}, {-36, 4}, {-36, 25}, {-36, 6}, {-49, 18}, {-49, \n     20}, {-49, 23}, {-5, 18}, {-5, 13}, {-5, 23}, {-21, 17}, {-21, \n     22}, {-21, 25}, {-25, 17}, {-25, 5}, {-25, 18}, {-1, 21}, {-1, \n     10}, {-1, 16}, {-20, 21}, {-20, 15}, {-20, 23}, {-36, 6}, {-36, \n     8}, {-36, 4}, {-43, 6}, {-43, 25}, {-43, 2}, {-47, 23}, {-47, \n     15}, {-47, 1}, {-20, 23}, {-20, 8}, {-20, 21}, {-30, 4}, {-30, \n     7}, {-30, 24}, {-45, 4}, {-45, 22}, {-45, 13}, {-39, 13}, {-39, \n     23}, {-39, 9}, {-5, 13}, {-5, 25}, {-5, 18}, {-49, 18}, {-49, \n     20}, {-49, 20}, {-4, 18}, {-4, 23}, {-4, 12}, {-21, 22}, {-21, \n     10}, {-21, 17}, {-46, 22}, {-46, 25}, {-46, 4}, {-21, 10}, {-21, \n     24}, {-21, 22}, {-7, 10}, {-7, 17}, {-7, 6}, {-47, 23}, {-47, \n     12}, {-47, 1}, {-4, 23}, {-4, 15}, {-4, 18}, {-39, 13}, {-39, \n     22}, {-39, 23}, {-45, 13}, {-45, 9}, {-45, 4}, {-2, 2}, {-2, \n     17}, {-2, 8}, {-23, 2}, {-23, 15}, {-23, 24}, {-32, 13}, {-32, \n     25}, {-32, 10}, {-5, 13}, {-5, 23}, {-5, 18}, {-21, 24}, {-21, \n     7}, {-21, 10}, {-30, 24}, {-30, 22}, {-30, 4}, {-20, 8}, {-20, \n     13}, {-20, 23}, {-48, 8}, {-48, 21}, {-48, 25}, {-22, 18}, {-22, \n     17}, {-22, 4}, {-25, 18}, {-25, 12}, {-25, 5}, {-39, 22}, {-39, \n     4}, {-39, 23}, {-46, 22}, {-46, 13}, {-46, 25}, {-8, 18}, {-8, \n     23}, {-8, 5}, {-4, 18}, {-4, 18}, {-4, 15}, {-16, 23}, {-16, \n     1}, {-16, 11}, {-34, 23}, {-34, 7}, {-34, 13}, {-31, 6}, {-31, \n     10}, {-31, 25}, {-11, 6}, {-11, 24}, {-11, 3}, {-24, 20}, {-24, \n     14}, {-24, 9}, {-42, 20}, {-42, 12}, {-42, 7}, {-21, 10}, {-21, \n     18}, {-21, 7}, {-29, 10}, {-29, 24}, {-29, 22}, {-7, 6}, {-7, \n     16}, {-7, 10}, {-3, 6}, {-3, 17}, {-3, 8}, {-8, 23}, {-8, \n     11}, {-8, 5}, {-16, 23}, {-16, 18}, {-16, 1}, {-21, 10}, {-21, \n     6}, {-21, 18}, {-31, 10}, {-31, 7}, {-31, 25}, {-9, 25}, {-9, \n     5}, {-9, 11}, {-17, 25}, {-17, 16}, {-17, 19}, {-20, 23}, {-20, \n     11}, {-20, 8}, {-8, 23}, {-8, 13}, {-8, 5}, {-3, 8}, {-3, \n     4}, {-3, 17}, {-37, 8}, {-37, 6}, {-37, 15}, {-29, 10}, {-29, \n     7}, {-29, 24}, {-31, 10}, {-31, 22}, {-31, 25}, {-46, 13}, {-46, \n     23}, {-46, 22}, {-8, 13}, {-8, 25}, {-8, 5}, {-17, 16}, {-17, \n     10}, {-17, 25}, {-1, 16}, {-1, 19}, {-1, 21}}, \n   \"EventRuleIDs\" -&gt; {0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, \n    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, \n    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3}, \n   \"EventInputs\" -&gt; {{}, {87, 85, 86, 45, 43, 44}, {35, 36, 34, 37, \n     39, 38}, {52, 53, 54, 23, 24, 22}, {150, 149, 148, 107, 108, \n     106}, {26, 25, 27, 117, 115, 116}, {76, 77, 78, 97, 98, 99}, {\n     118, 119, 120, 200, 202, 201}, {14, 13, 15, 178, 177, 176}, {134,\n      133, 135, 96, 95, 94}, {196, 195, 194, 143, 142, 144}, {18, 17, \n     16, 110, 109, 111}, {49, 51, 50, 210, 209, 211}, {212, 213, 214, \n     91, 92, 93}, {103, 104, 105, 48, 47, 46}, {30, 29, 28, 236, 238, \n     237}, {239, 241, 240, 263, 264, 265}, {7, 9, 8, 121, 122, 123}, {\n     65, 66, 64, 199, 198, 197}, {145, 146, 147, 218, 220, 219}, {62, \n     63, 61, 75, 74, 73}, {2, 3, 1, 58, 59, 60}, {283, 282, 281, 128, \n     127, 129}, {140, 139, 141, 301, 300, 299}, {90, 89, 88, 225, 226,\n      224}, {204, 203, 205, 288, 289, 287}, {284, 286, 285, 12, 10, \n     11}, {291, 292, 290, 136, 137, 138}, {333, 334, 332, 21, 19, \n     20}, {308, 309, 310, 330, 331, 329}, {320, 322, 321, 319, 318, \n     317}, {4, 6, 5, 67, 69, 68}, {227, 229, 228, 323, 324, 325}, {\n     339, 340, 338, 316, 315, 314}, {312, 313, 311, 235, 234, 233}, {\n     279, 280, 278, 295, 293, 294}, {351, 350, 352, 335, 337, 336}, {\n     193, 192, 191, 349, 347, 348}, {257, 259, 258, 102, 101, 100}, {\n     252, 253, 251, 33, 31, 32}, {71, 72, 70, 126, 124, 125}, {370, \n     368, 369, 222, 221, 223}, {343, 342, 341, 273, 274, 272}, {393, \n     392, 394, 398, 400, 399}, {416, 418, 417, 405, 404, 406}, {215, \n     216, 217, 243, 244, 242}, {376, 375, 374, 428, 429, 430}, {427, \n     425, 426, 267, 268, 266}, {419, 421, 420, 437, 438, 439}, {390, \n     391, 389, 450, 449, 451}, {444, 445, 443, 298, 297, 296}}, \n   \"EventOutputs\" -&gt; {{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, \n     15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, \n     31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, \n     47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, \n     63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, \n     79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, \n     95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, \n     109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, \n     122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, \n     135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, \n     148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, \n     161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, \n     174, 175}, {176, 177, 178, 179, 180, 181}, {182, 183, 184, 185, \n     186, 187}, {188, 189, 190, 191, 192, 193}, {194, 195, 196, 197, \n     198, 199}, {200, 201, 202, 203, 204, 205}, {206, 207, 208, 209, \n     210, 211}, {212, 213, 214, 215, 216, 217}, {218, 219, 220, 221, \n     222, 223}, {224, 225, 226, 227, 228, 229}, {230, 231, 232, 233, \n     234, 235}, {236, 237, 238, 239, 240, 241}, {242, 243, 244, 245, \n     246, 247}, {248, 249, 250, 251, 252, 253}, {254, 255, 256, 257, \n     258, 259}, {260, 261, 262, 263, 264, 265}, {266, 267, 268, 269, \n     270, 271}, {272, 273, 274, 275, 276, 277}, {278, 279, 280, 281, \n     282, 283}, {284, 285, 286, 287, 288, 289}, {290, 291, 292, 293, \n     294, 295}, {296, 297, 298, 299, 300, 301}, {302, 303, 304, 305, \n     306, 307}, {308, 309, 310, 311, 312, 313}, {314, 315, 316, 317, \n     318, 319}, {320, 321, 322, 323, 324, 325}, {326, 327, 328, 329, \n     330, 331}, {332, 333, 334, 335, 336, 337}, {338, 339, 340, 341, \n     342, 343}, {344, 345, 346, 347, 348, 349}, {350, 351, 352, 353, \n     354, 355}, {356, 357, 358, 359, 360, 361}, {362, 363, 364, 365, \n     366, 367}, {368, 369, 370, 371, 372, 373}, {374, 375, 376, 377, \n     378, 379}, {380, 381, 382, 383, 384, 385}, {386, 387, 388, 389, \n     390, 391}, {392, 393, 394, 395, 396, 397}, {398, 399, 400, 401, \n     402, 403}, {404, 405, 406, 407, 408, 409}, {410, 411, 412, 413, \n     414, 415}, {416, 417, 418, 419, 420, 421}, {422, 423, 424, 425, \n     426, 427}, {428, 429, 430, 431, 432, 433}, {434, 435, 436, 437, \n     438, 439}, {440, 441, 442, 443, 444, 445}, {446, 447, 448, 449, \n     450, 451}, {452, 453, 454, 455, 456, 457}, {458, 459, 460, 461, \n     462, 463}, {464, 465, 466, 467, 468, 469}, {470, 471, 472, 473, \n     474, 475}}, \n   \"EventGenerations\" -&gt; {0, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 3, 1,\n     2, 3, 1, 2, 3, 1, 1, 3, 2, 2, 4, 4, 2, 3, 5, 5, 1, 5, 4, 3, 3, 6,\n     6, 2, 4, 1, 5, 4, 7, 6, 3, 8, 5, 7, 9, 4}]][\"StatesPlotsList\", \n ImageSize -&gt; 120]</pre> \n    </div> </td> \n  </tr> \n </tbody> \n</table> \n<p>Ultimately this is something very close to our Physics Project. We can imagine encoding values in certain localized structures in our hypergraph—just as we imagine that particles (like photons or quarks) in physics correspond to something like “topological obstructions” in the hypergraph that represents physical space. And in these terms one can imagine formulating questions about consensus in terms of some kind of generalization of conservation laws for particles.</p> \n<h2 id=\"what\" s-left-to-figure-out'=\"\">What’s Left to Figure Out</h2> \n<p>The problem of distributed consensus is in many ways a tantalizing one. The most obvious approach to it—with the simple majority rule—gets a fair distance, but has definite limitations. And as we’ve seen here, in specific, well-controlled situations there are much better rules—and setups—that can be used. But we don’t yet know robust, general, efficient solutions.</p> \n<p>One might imagine that to find one would just take “inventing the right algorithm” or “writing the right program”. But I think it’s unlikely that this kind of traditional “engineering” approach will bear fruit. Instead, I think the most promising path forward is to try to “mine the computational universe” for appropriate rules, in the style suggested by <em><a href=\"https://www.wolframscience.com/nks/\">A New Kind of Science</a></em>. And I expect that the best rules will be ones that don’t have “readily human understandable” behavior, but instead “do their job” in <a href=\"https://www.wolframscience.com/nks/p833--intelligence-in-the-universe/\">surprising and perhaps elaborate ways</a> that we would never anticipate.</p> \n<p>How can we search for these rules? The most important challenge is to have a good definition of our objective with them. There’ll always be tradeoffs. How important is an occasional failure of consensus? How important are different features of the distribution of times to reach consensus? How much do we care about the complexity of the rules? And so on.</p> \n<p>So given an objective, what’s the best way to actually conduct the search? My consistent experience in mining the computational universe has been that the best results come from the most straightforward strategies. More elaborate strategies tend to make implicit assumptions, that prevent the discovery of truly surprising or unexpected results.</p> \n<p>A good start is just to do an exhaustive search. It’s important to be very careful in pruning it, lest one miss the “unexpected way” that a system can achieve some particular objective. Is it likely to be possible to “incrementally improve” rules, say with genetic algorithms? I’m not especially hopeful. Because to make serious use of what the computational universe has to offer, our rules are likely to need to show computational irreducibility—and this makes it essentially inevitable that the “landscape” of “nearby” rules will be irreducibly “rough”, making any computationally bounded incremental improvement unlikely to be successful. </p> \n<p>Could we perhaps train a machine learning system to suggest useful rules? It may be possible to do some pruning of candidate rules this way, although inevitably there is some risk of missing the “unexpected rule”. And in general the presence of computational irreducibility makes it implausible that an incrementally trained machine learning system will be extremely successful.</p> \n<p>One might have thought that something like exhaustive search could never find useful results, because the space of rules is in some sense just too big. But a key discovery from my explorations of the computational universe is that in fact there are surprisingly simple rules that can show rich and sophisticated behavior. And this makes it plausible that one could discover a good solution to the problem of distributed consensus just by appropriately searching the computational universe—and “mining” some rule that can then be used quite generally as a basis for all sorts of practical distributed consensus.</p> \n<h2 id=\"some-historical-background\">Some Historical Background</h2> \n<p>Investigations of what amounts to distributed consensus have a fairly long, if seemingly scattered history. As soon as even somewhat complex electromechanical and electronic systems were being built, the question arose of how to make the whole system behave in a reliable way even if some of its components were unreliable. The simplest answer was to have redundancy, and somehow to “take a vote”, and go with the “majority” decision. In the earliest computers (and later particularly in aerospace systems) such a vote was typically between copies of more-or-less complete systems.</p> \n<p>But by the beginning of the 1950s there was increasing interest in moving the voting down to the level of smaller components. And in 1952 <a href=\"https://writings.stephenwolfram.com/2003/12/john-von-neumanns-100th-birthday/\">John von Neumann</a>, in his “<a href=\"https://doi.org/10.1515/9781400882618\" target=\"_blank\" rel=\"noopener\">Probabilistic Logics and the Synthesis of Reliable Organisms from Unreliable Components</a>”, began to give a mathematical structure for analyzing this. Central to his discussion was what he called the “majority organ”, which is essentially a component for computing the <a href=\"https://reference.wolfram.com/language/ref/Majority.html\">Boolean majority function</a>:</p> \n<p class=\"Picture\"><img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Bimg171.png\" alt=\"The Majority Organ\" title=\"The Majority Organ\" width=\"549\" height=\"\" /></p> \n<p> <p>von Neumann imagined building up everything (including the majority organ) from what he called “Sheffer organs”—or what we would now call <a href=\"https://www.wolframscience.com/nks/p807--implications-for-mathematics-and-its-foundations/\">Nand gates</a>. And as an example of the need for redundancy he says “Consider a computing machine with 2500 vacuum tubes, each actuated on average every 5 microseconds. Assume a mean free path of 8 hours between errors is desired.” Somewhat mysteriously he then assumes the very high (even for the time) error rate \n  <nobr>\n   ϵ = 0.005\n  </nobr> and concludes that to operate reliably “the system should be multiplexed 14,000 times”. (von Neumann goes on to talk about errors in brains, as modeled by neural nets. Rather implausibly he states that in brains “errors are not ordinarily observed”, and concludes from this that the multiplexing factor must be about 20,000—which he viewed as being consistent with what was then known about actual brains.)</p> <p>Fortunately for the history of computing von Neumann’s example error rate turned out to be very wide of the mark—and once vacuum tubes were replaced by solid-state devices the problem of component failures in computers more or less disappeared (though it reappears in modern thinking about molecular-scale computing). In communications systems (and, to a lesser extent, storage devices) errors were always still important, and this led by the 1960s to increasing work on error-correcting codes.</p> <p>But perhaps because the transition to solid-state electronics happened more slowly in the Soviet Union interest in the problem of getting reliable results from unreliable components lasted much longer there. And while in the West, such issues tended to be thought of as matters of applied engineering, in the Soviet Union they were much more considered a matter of pure mathematics. (In the West, there was also in the 1950s the rather amorphous idea of “cybernetics”, which was initially considered ideologically inappropriate in the Soviet Union, but was later adopted there, and turned in a much more mathematical direction.)</p> <p>But in addition to questions coming essentially from the construction of machines (or brains), there was an initially quite separate strand of questions coming from physics. A very basic observation in physics is that materials undergo so-called <a href=\"https://www.wolframscience.com/nks/notes-7-7--phase-transitions/\">phase transitions</a>. For example, as one heats up water, there is a definite temperature at which all the molecules “together decide” to make the transition from liquid to gas.</p> <p>A somewhat more subtle version of the same kind of thing occurs in magnetic materials like iron. Below a certain temperature, electron spins associated with all the atoms in the material tend to line up. But in what direction? Somehow a “consensus direction” is selected—that defines the macroscopic direction of the magnetic field produced by the material. And in the 1920s the Ising model was suggested as a simple model for this.</p> <p>But before getting to phase transitions, there was a more basic physics question of how microscopic discrete elements like atoms could in general lead to macroscopic phenomena. And a key part of this question had to do with understanding the motion of molecules and how this could lead to “thermodynamic equilibrium”. The whole story of the foundations of “statistical mechanics” got quite muddled (and I think it’s only quite recently, with computation-based ideas, that we’ve finally been able to <a href=\"https://www.wolframscience.com/nks/p441--irreversibility-and-the-second-law-of-thermodynamics/\">properly sort it out</a>). But particularly in the first few decades of the 1900s the key idea was <a href=\"https://www.wolframscience.com/nks/notes-9-3--current-thinking-on-the-second-law/\">thought to be ergodicity</a>: essentially the notion that the equations of motion of molecules will lead them eventually to visit all possible states of a system, thereby, it was argued, making their behavior seem random.</p> <p>It was difficult to establish ergodicity mathematically. But beginning around the 1930s this was a major emphasis of the field of dynamical systems theory. Meanwhile, there were also difficulties in understanding mathematically how phase transitions could occur. And one point of contact was that when there’s a phase transition, ergodicity effectively has to be broken: the spins in a magnet end up in a particular direction, and don’t visit all directions.</p> <p>At the beginning of the 1960s there was a convergence in Moscow of a considerable number of top Soviet mathematicians (notably including <a href=\"https://www.wolframalpha.com/input/?i=Andrey+Nikolaevich+Kolmogorov\">Andrei Kolmogorov</a>) who were variously working on statistical mechanics, ergodic theory, dynamical systems—and some of the mathematical sequelae of cybernetics. And one of the pieces of work that emerged was a paper in 1968 by a then-young math-competition-winning mathematician named <a href=\"http://www.toomandre.com/\" target=\"_blank\" rel=\"noopener\">Andrei Toom</a>.</p> <p>The (translated) title of the paper is “<a href=\"https://toomandre.com/my-articles/engmat/FAMILY-E.PDF\" target=\"_blank\" rel=\"noopener\">A Family of Uniform Nets of Formal Neurons</a>”. The paper is cast in terms of formal probability theory and the study of Markov chains. But basically it’s a construction of what amounts to a probabilistic cellular automaton, and a proof that even though it’s probabilistic, certain aspects of its behavior are “non-ergodic” and effectively deterministic. (It’s notable that in 1963 Toom had done another construction: of what’s now called the <a href=\"https://en.wikipedia.org/wiki/Toom%E2%80%93Cook_multiplication\" target=\"_blank\" rel=\"noopener\">Toom–Cook algorithm</a> for <a href=\"https://www.wolframscience.com/nks/notes-12-8--classes-of-fast-algorithms/\">fast multiplication of integers</a> with many digits.)</p> <p>In traditional statistical mechanics (which was somewhat distinct from ergodic theory) the original focus was on studying “equilibrium” systems, in which different possible configurations (say of the <a href=\"https://www.wolframscience.com/nks/notes-7-7--the-ising-model/\">Ising model</a>) occurred with particular weightings. But by the 1950s—especially in work at Los Alamos—the idea arose of sequentially “Monte Carlo” sampling these configurations on a computer. And in 1963 <a href=\"https://en.wikipedia.org/wiki/Roy_J._Glauber\" target=\"_blank\" rel=\"noopener\">Roy Glauber</a> suggested thinking of the actual dynamics of the Ising model in terms of sequential probabilistic updating of spins.</p> <p>Meanwhile, somewhat separately, there was increasing study—particularly by American mathematicians such as <a href=\"https://en.wikipedia.org/wiki/Frank_Spitzer\" target=\"_blank\" rel=\"noopener\">Frank Spitzer</a>—of the probability theory of collections of random walks, often referred to as “interacting particle systems”. And one of the main results was that as soon as nonzero probabilities were involved, ergodicity was typically found.</p> <p>Apparently independent of these developments the Moscow group in 1969 produced a paper entitled “Modeling of Voting with Random Error”. It featured a calculation done on an “electronic computing machine” (“ЭВМ” in Russian) of the probabilistic evolution of a majority model (and quite likely the machine used was a base-3 <a href=\"https://en.wikipedia.org/wiki/Setun\" target=\"_blank\" rel=\"noopener\">Setun computer</a> developed by the mathematician <a href=\"https://en.wikipedia.org/wiki/Sergei_Sobolev\" target=\"_blank\" rel=\"noopener\">Sergei Sobolev</a>):</p> <p class=\"Picture\"><img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Bimg172.png\" alt=\"Modeling of voting with random error\" title=\"Modeling of voting with random error\" width=\"632\" height=\"\" /></p> <p>The paper concluded that in 1D, the model was probably always ergodic, but in 2D, for sufficiently small noise level, it might not be.</p> <p>In 1971 <a href=\"https://en.wikipedia.org/wiki/Roland_Dobrushin\" target=\"_blank\" rel=\"noopener\">Roland Dobrushin</a> (a student of Kolmogorov’s) connected the investigation of ergodicity in these networks with phase transitions in Ising models—which helped define the program of research at his “Laboratory of Multi-component Random Systems” at the “<a href=\"http://iitp.ru/en/about\" target=\"_blank\" rel=\"noopener\">Institute for Problems of Information Transmission</a>” that brought together the Soviet cybernetics tradition (with its work on things like neural nets, Markov chains and formal computability theory) with international work on mathematical physics and ergodic theory.</p> <p>A typical product of this was the 1976 conference organized by Dobrushin (along with Toom and others) nominally entitled “Locally Interacting Systems and Their Application in Biology”—but actually with very little biology in sight, and steeped in sophisticated mathematics, about things like Markov fields, Gibbs measures and algorithmic unsolvability.</p> <p>A key question that had emerged was whether a homogeneous array of probabilistic elements (i.e. a probabilistic cellular automaton) could consistently and deterministically store information, or whether inevitably there would be ergodicity that would destroy it.</p> <p>In 1974 Toom showed that a multidimensional probabilistic cellular automaton could do this—essentially just using a majority rule on a non-symmetric neighborhood to generate a “global consensus state”, as we showed above. But the question still remained of whether anything similar was possible in 1D.</p> <p>Phase transitions in traditional statistical physics don’t happen in 1D if microscopic reversibility is assumed—making it seem like it might be impossible to maintain multiple distinct global states. But in 1976 <a href=\"https://en.wikipedia.org/wiki/Boris_Tsirelson\" target=\"_blank\" rel=\"noopener\">Boris Tsirelson</a> pointed out that at least with a hierarchical arrangement of interactions one could in fact achieve long-range order in a probabilistic 1D system:</p> <p class=\"Picture\"><img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Bimg173.png\" alt=\"Probabilistic 1D system\" title=\"Probabilistic 1D system\" width=\"634\" height=\"\" /></p> <p>Soon thereafter <a href=\"https://web.archive.org/web/20080208211441/http://userweb.tsr.ru/~georg/per/p2.htm\" target=\"_blank\" rel=\"noopener\">Georgii Kurdyumov</a>—having at first discussed the undecidability of ergodicity in the 1D case—then argued that there should be a pure cellular automaton that would work.</p> <p>And in 1978, <a href=\"https://www.cs.bu.edu/fac/gacs/\" target=\"_blank\" rel=\"noopener\">Peter Gacs</a>, Georgii Kurdyumov and <a href=\"https://www.cs.bu.edu/fac/lnd/\" target=\"_blank\" rel=\"noopener\">Leonid Levin</a> (all of whom had been in the Kolmogorov orbit) wrote a short paper entitled “One-Dimensional Uniform Arrays That Wash Out Finite Islands” that introduced the “GKL rule” we discussed above. They didn’t show any actual pictures of the behavior of the system, but they gave a proof that in the deterministic case the rule leads to two distinct phases, corresponding to the two distinct consensus states. And then they showed the result of a simulation that suggested that even when a certain amount of noise was added the two consensus states would still be reached:</p> <p class=\"Picture\"><img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Bimg174.png\" alt=\"Two consensus states still reached\" title=\"Two consensus states still reached\" width=\"380\" height=\"\" /></p> <p>However, what had become known as the “positive probability conjecture” implied that there couldn’t in the end actually be non-ergodicity in the 1D case. But in 1983 Peter Gacs came up with what he claimed was a counterexample based on an elaborate construction described in many pages of pseudocode:</p> <p class=\"Picture\"><img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Bimg175.png\" alt=\"Reliable computations\" title=\"Reliable computations\" width=\"465\" height=\"\" /></p> <p>It took many years for the proof of this to clarify, with Gacs publishing a final version only in 2001. </p> <p>Meanwhile, there’d been several other developments. Starting in 1982 <a href=\"https://www.stephenwolfram.com/publications/academic/cellular-automata/\">my own discoveries about deterministic cellular automata</a> had made 1D cellular automata much more prominent—and had made physicists aware of them. (As it happens, Gacs announced his 1983 result at a <a href=\"https://content.wolfram.com/uploads/sites/34/2020/07/cellular-automata.pdf\" target=\"_blank\" rel=\"noopener\">conference at Los Alamos I had organized</a>, that I believe was the first ever to be devoted to cellular automata.)</p> <p>Around the end of the 1980s there was then a burst of activity by several leading mathematical physicists devoted to applying methods from statistical mechanics (and especially from areas like directed percolation theory) to the analysis of probabilistic cellular automata. There was awareness of Toom’s work, and for example connections were made between PDEs (like the <a href=\"https://www.wolframscience.com/nks/notes-4-9--other-pdes/\">KPZ equation</a>) and things like the <a href=\"https://www.wolframscience.com/nks/notes-7-6--domains-in-code-976/\">average behavior of “domain walls”</a> in the probabilistic Toom rule.</p> <p>One can view the process of coming to consensus in a 1D cellular automaton as being like a “density classification” problem: if the initial density of 1s is above <img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514img36.png\" style=\"margin-top: -3px;\" width=\"7\" height=\"17\" align=\"absmiddle\">, classify as 1, otherwise classify as 0. And starting in the 1990s density classification in 1D (deterministic) cellular automata was used as a prime example of a place where algorithms might be discovered by genetic or other search techniques.</img></p> <p>In a quite different direction, work on cryptographic protocols in the 1980s had highlighted various models for achieving consensus between agents, even in the presence of adversarial efforts. Meanwhile, there was increasing interest in formal models of parallel computation, their computational complexity, and their fault tolerance. And by the early 2000s there was work being done (notably by <a href=\"https://www.hmc.edu/mathematics/people/faculty/nicholas-pippenger/\" target=\"_blank\" rel=\"noopener\">Nick Pippenger</a>) on connections between these things and what was known about probabilistic cellular automata, and the possibility of deterministic computation in them.</p> <p>And this pretty much takes us to the current time—and the new applications of distributed consensus in blockchain-like systems. And here it’s interesting to see the rather different intellectual lineages of two different efforts: <a href=\"https://escholarship.org/uc/item/1mc7154s#article_main\" target=\"_blank\" rel=\"noopener\">Yilun Zhang</a> at <a href=\"https://nkn.org/\" target=\"_blank\" rel=\"noopener\">NKN</a> coming from a statistical physics/computational neuroscience/information theory tradition, and <a href=\"https://www.ime.unicamp.br/~popov/\" target=\"_blank\" rel=\"noopener\">Serguei Popov</a> at <a href=\"https://www.iota.org/\" target=\"_blank\" rel=\"noopener\">Iota</a> coming from probability theory and stochastic processes—as a <a href=\"https://www.genealogy.math.ndsu.nodak.edu/id.php?id=69818\" target=\"_blank\" rel=\"noopener\">great-grand-student</a> of Kolmogorov.</p> <h2 id=\"some-personal-notes\">Some Personal Notes</h2> <p>Of all the <a href=\"https://www.wolframscience.com/nks/p17--the-personal-story-of-the-science-in-this-book/\">work I’ve done on cellular automata and related systems</a> over the past more than forty years rather little has been devoted to the topics I’ve been discussing here. There are a couple of reasons for this. The most important is that my main interest has been in studying the <a href=\"https://www.wolframscience.com/nks/chap-2--the-crucial-experiment/\">remarkable richness and complexity that cellular automata and other very simple programs can generate</a>—and in <a href=\"https://www.wolframscience.com/nks/\">building a paradigm</a> for thinking about this. Yet something like distributed consensus is at some level about getting rid of complexity rather than generating it. It’s about taking whatever complicated initial state there may be, and somehow reducing it to a “simple consensus”, where there’s none of that complexity.</p> <p>Another point is that at least some of what we’ve discussed here has concerned probabilistic systems, which I’ve tended to ignore on the grounds that they obscure the fundamental phenomena of the computational universe. If one didn’t know that simple, deterministic rules could do complex things, one might imagine that would have to inject <a href=\"https://www.wolframscience.com/nks/p301--randomness-from-the-environment/\">randomness from the outside to make this happen</a>. But the fact is that even very simple, deterministic rules can produce highly complex behavior, that in fact often makes its own apparent randomness.</p> <p>So that means there’s no need to “go outside the system”—and to introduce external randomness or probabilities. And in fact such probabilities tend to have the effect of hiding whatever complexity is intrinsically produced—even if they do “smooth out average behavior” to make things more accessible to traditional mathematical methods.</p> <p>There are actually some new perspectives on this from our <a href=\"https://www.wolframphysics.org/\" target=\"_blank\" rel=\"noopener\">Physics Project</a>. First, the project makes clear the <a href=\"https://writings.stephenwolfram.com/2021/04/the-wolfram-physics-project-a-one-year-update/\">crucial interplay</a> between underlying <a href=\"https://www.wolframscience.com/nks/p737--computational-irreducibility/\">computational irreducibility</a>, and effectively probabilistic large-scale behavior that can be treated in computationally reducible ways. And second, the project suggests that instead of thinking about probabilities for different behavior, one should think about the whole <a href=\"https://www.wolframscience.com/nks/p204--multiway-systems/\">multiway system</a> of possible behaviors, and its overall properties.</p> <p>It so happens that when I first became interested in the origins of complexity the first two kinds of models I thought about were spin systems (like the Ising model) and neural nets. But as I tried to simplify things I ended up inventing for myself what <a href=\"https://www.wolframscience.com/nks/notes-2-3--my-work-on-cellular-automata/\">I soon found out were one-dimensional cellular automata</a>. Much of my effort was then concentrated in doing experiments on these systems, and in developing theories and principles around the results I found.</p> <p>But I also tried to do my homework on earlier work. Cellular automata had gone by many names. But leafing through the (then on paper) Science Citation Index I slowly began to piece together some of their history, and soon found things like the paper introducing the GKL rule. In my first long paper on cellular automata (entitled “<a href=\"https://files.wolframcdn.com/pub/www.stephenwolfram.com/pdf/statistical-mechanics-cellular-automata.pdf\" target=\"_blank\" rel=\"noopener\">Statistical Mechanics of Cellular Automata</a>” and published in 1983) I have just a few paragraphs about “probabilistic rules”, discussing ergodicity and phase transitions, and referencing the GKL paper.</p> <p>Over the years I accumulated five thick folders of copies of papers that I labeled as being about “Stochastic Cellular Automata”. And I also purchased books. And in writing this piece I was able to just pull off my shelf things like <a href=\"https://doi.org/10.1007/BFb0070079\" target=\"_blank\" rel=\"noopener\">Dobrushin’s 1976 book</a>. And in one of those manifestations of the smallness of the scientific world, when I looked in the front of my (apparently used) copy of this book yesterday, what should I see there but the signature of Frank Spitzer—who I had just been writing about!</p> <p>When I was writing <em><a href=\"https://www.wolframscience.com/nks/\">A New Kind of Science</a></em>, both probabilistic cellular automata and what amounts to the problem of consensus did come up, and there are several mentions of such things in the book, notably in connection with my discussion of the “<a href=\"https://www.wolframscience.com/nks/p337--origins-of-discreteness/\">Origins of Discreteness</a>”:</p> <p><a href=\"https://www.wolframscience.com/nks/p338--origins-of-discreteness/\"> <p class=\"Picture\"><img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Bimg176.png\" alt=\"A New Kind of Science\" title=\"A New Kind of Science\" width=\"641\" height=\"\" /></p></a></p> <p>But these things were never a big emphasis of my work, and so it’s been interesting here to trace just how the methods I’ve developed can be applied to them, and to realize that—despite its slightly different presentation—the problem of distributed consensus is in many ways actually a quintessential question that can be addressed by the kind of science that’s derived from studying the computational universe.</p> <h2 id=\"bibliography-of-distributed-consensus\"><img src=\"https://writings.stephenwolfram.com/data/uploads/2021/05/biblio-icon.png\" width=\"164\" style=\"float:left; margin-right:5px; margin-top:-7px; margin-bottom:30px;\"><a href=\"https://www.wolframcloud.com/obj/sw-writings/DistributedConsensus/bibliography.pdf\">Bibliography of Distributed Consensus with <br />Cellular Automata &amp; Related Systems »</a></img></h2> </p>","descriptionType":"html","publishedDate":"Mon, 17 May 2021 19:16:51 +0000","feedId":2198,"bgimg":"","linkMd5":"89bb5ae43fc3f929f6e0f8786b906c5c","bgimgJsdelivr":"","metaImg":"","author":"Stephen Wolfram","articleImgCdnMap":{"https://writings.stephenwolfram.com/data/uploads/2021/05/icon-distCons.png":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn81@2020_3/2021/05/27/15-35-39-066_b836f3774589aa5b.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514img1.png":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn74@2020_3/2021/05/27/15-35-39-260_85214d60acef3de4.webp","https://writings.internal.stephenwolfram.com/data/uploads/2021/05/sw0514img4.png":null,"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Cimg9.png":null,"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514img36.png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn69@2020_1/2021/05/27/15-35-39-073_57b1ccb8d195bc69.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg12.png":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn97@2020_3/2021/05/27/15-35-39-617_b0ad317164c3651b.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg13.png":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn16@2020_3/2021/05/27/15-35-39-898_0d280bc4164cdeaa.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg14.png":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn59@2020_5/2021/05/27/15-35-39-984_9d45f41adf0abf57.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg15.png":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn7@2020_5/2021/05/27/15-35-40-532_1006f04fb28f797c.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg16.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn37@2020_5/2021/05/27/15-35-39-184_08ed0c677e1e7925.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514XXimg19.png":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn41@2020_3/2021/05/27/15-35-41-563_bd0946f7ade68bdb.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg20.png":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn9@2020_2/2021/05/27/15-35-40-015_7f22b4a3dacf4812.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg22.png":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn44@2020_2/2021/05/27/15-35-40-120_3277158a51121d22.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg23.png":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn20@2020_4/2021/05/27/15-35-42-245_6e07ec646d8f2886.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg25.png":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn37@2020_4/2021/05/27/15-35-40-948_4c221b3385b59cdb.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg26.png":null,"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg27.png":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn45@2020_6/2021/05/27/15-35-39-078_db7c9a6ca8ccf311.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514cimg30.png":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn27@2020_3/2021/05/27/15-35-39-649_8a49d08b446a9285.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Cimg177.png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn83@2020_4/2021/05/27/15-35-40-139_d417c74e4a33bf7a.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514cimg33.png":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn29@2020_5/2021/05/27/15-35-40-652_c9e9344352e37bf9.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg34.png":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn78@2020_6/2021/05/27/15-35-40-186_542d6999152e277d.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg37.png":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn94@2020_2/2021/05/27/15-35-39-196_ab3de571292fbddb.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg38.png":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn11@2020_5/2021/05/27/15-35-40-579_e9b2614880769dcf.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Cimg39.png":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn73@2020_3/2021/05/27/15-35-39-076_69ef95d58733ed3c.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg40.png":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn23@2020_3/2021/05/27/15-35-40-881_efceaac490ccc2c5.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Cimg41.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn32@2020_6/2021/05/27/15-35-40-413_f31417f8aca79738.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/swo514redbox2.png":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn53@2020_2/2021/05/27/15-35-39-113_755777349f7121f0.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514yellowbox2.png":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn19@2020_4/2021/05/27/15-35-39-703_1299f3c1f8ec989d.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg42.png":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn9@2020_6/2021/05/27/15-35-39-053_f48e35852d70ccf7.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg43.png":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn33@2020_4/2021/05/27/15-35-40-091_613a43fe80851f7a.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg44.png":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn62@2020_2/2021/05/27/15-35-39-328_acef4bbeaf300ab6.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg45.png":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn90@2020_3/2021/05/27/15-35-39-255_cb2e88fc590eebb0.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg46.png":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn41@2020_2/2021/05/27/15-35-40-345_883b6a21c4bd15eb.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg47.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn18@2020_5/2021/05/27/15-35-40-202_5bd676a00c92ca0b.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg48.png":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn90@2020_3/2021/05/27/15-35-39-688_d328c273b289ab3e.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg51.png":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn85@2020_4/2021/05/27/15-35-39-081_7a9f7c345840c563.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg52.png":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn65@2020_4/2021/05/27/15-35-39-186_d83d14e30b84f5c7.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg53.png":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn34@2020_4/2021/05/27/15-35-40-686_c323e9b89a375484.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg54.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn50@2020_6/2021/05/27/15-35-40-778_a94fb53a4999438d.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg57.png":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn55@2020_6/2021/05/27/15-35-40-124_ebba8c6ef6b83078.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg58.png":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn4@2020_5/2021/05/27/15-35-40-564_d229c5375acdbc1e.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg59.png":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn2@2020_6/2021/05/27/15-35-39-841_d6789e54107d4fd0.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg60.png":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn85@2020_5/2021/05/27/15-35-40-412_6b2d2cd9af645f4d.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514plusgrid4.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn51@2020_3/2021/05/27/15-35-40-440_dfbf50bdd8115873.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514img63.png":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn30@2020_2/2021/05/27/15-35-39-080_640ce1e9c13e9508.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514XXimg64.png":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn71@2020_2/2021/05/27/15-35-41-161_21eba0dfa8439ead.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg65.png":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn48@2020_4/2021/05/27/15-35-40-734_2098b06e468a3874.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg66.png":null,"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg67.png":null,"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg71.png":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn26@2020_3/2021/05/27/15-35-39-407_d5eb58099c761fce.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg76.png":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn75@2020_3/2021/05/27/15-35-39-151_9edd806ac98d832d.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg81.png":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn62@2020_5/2021/05/27/15-35-41-771_e23f9e3fc6f68855.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg91.png":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn5@2020_1/2021/05/27/15-35-40-664_4b29d3fa9f02bdb5.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg92.png":null,"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg93.png":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn76@2020_5/2021/05/27/15-35-40-178_949c279329e88094.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg95.png":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn16@2020_3/2021/05/27/15-35-40-619_2e13c875e60d6160.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg99.png":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn70@2020_4/2021/05/27/15-35-39-234_8165be1d85da6616.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg100.png":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn67@2020_5/2021/05/27/15-35-40-065_3710b65d44b6f0eb.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg104.png":null,"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg105.png":null,"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg106.png":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn31@2020_3/2021/05/27/15-35-39-683_c11ddf88cd2a0e0d.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg107.png":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn5@2020_6/2021/05/27/15-35-39-345_6015246f1e470121.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514XXimg111.png":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn2@2020_5/2021/05/27/15-35-39-993_bc8552fa860a849d.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514XXimg115.png":null,"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg120.png":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn97@2020_6/2021/05/27/15-35-39-790_0d8f28a52910ccc6.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg125.png":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn58@2020_2/2021/05/27/15-35-40-715_c7f762ac67a19160.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg130.png":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn50@2020_5/2021/05/27/15-35-39-100_6f94bdb3fb653101.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg135.png":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn40@2020_6/2021/05/27/15-35-39-924_a8a214454438f370.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg142.png":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn100@2020_6/2021/05/27/15-35-41-721_5b6661a98777b82b.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Aimg147.png":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn93@2020_3/2021/05/27/15-35-39-626_42a9df1af2539c17.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg149.png":null,"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514XXimg152.png":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn93@2020_4/2021/05/27/15-35-41-175_2215572bfa7c23fa.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg156.png":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn63@2020_2/2021/05/27/15-35-40-184_a72d5d04a73a8d8f.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg161.png":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn23@2020_3/2021/05/27/15-35-41-052_b883eb43bcd443e5.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514XXimg164.png":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn34@2020_3/2021/05/27/15-35-39-151_2c1d2f20034604bf.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg170.png":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn88@2020_4/2021/05/27/15-35-40-567_26aac1308905ab19.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Bimg171.png":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn57@2020_3/2021/05/27/15-35-40-478_34d54fe950a6eb70.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Bimg172.png":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn47@2020_4/2021/05/27/15-35-39-261_dc228bf0684c8d39.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Bimg173.png":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn60@2020_2/2021/05/27/15-35-40-509_091729c0acd65a39.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Bimg174.png":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn82@2020_6/2021/05/27/15-35-40-228_13e52842d79f64b3.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Bimg175.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn25@2020_5/2021/05/27/15-35-39-381_691645ed09e054ac.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Bimg176.png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn57@2020_2/2021/05/27/15-35-40-691_7fced912444027b2.webp","https://writings.stephenwolfram.com/data/uploads/2021/05/biblio-icon.png":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn41@2020_6/2021/05/27/15-35-39-143_b3639991b9936fec.webp"},"publishedOrCreatedDate":1622129618566}],"record":{"createdTime":"2021-05-27 23:33:38","updatedTime":"2021-05-27 23:33:38","feedId":2198,"fetchDate":"Thu, 27 May 2021 15:33:38 +0000","fetchMs":615,"handleMs":112,"totalMs":241531,"newArticles":0,"totalArticles":10,"status":1,"type":0,"ip":"79b59b7ab14b8d981e3d8a220e20848a","hostName":"us-033*","requestId":"3fe3dee4c52e4d699f4f579e02b9f646_2198","contentType":"text/html","totalBytes":2634608,"bgimgsTotal":0,"bgimgsGithubTotal":0,"articlesImgsTotal":83,"articlesImgsGithubTotal":73,"successGithubMap":{"myreaderx8":3,"myreaderx7":3,"myreaderx15":3,"myreaderx6":3,"myreaderx16":2,"myreaderx4":2,"myreaderx32":3,"myreaderx10":3,"myreaderx3":3,"myreaderx11":3,"myreaderx33":2,"myreaderx2":3,"myreaderx12":3,"myreaderx13":3,"myreaderx1":3,"myreaderx30":3,"myreaderx18":3,"myreaderx19":3,"myreaderx":3,"myreaderx25":2,"myreaderx27":3,"myreaderx21":3,"myreaderx22":3,"myreaderx24":3,"myreaderx5oss":3,"myreaderx29":2},"failGithubMap":{"myreaderx14":3,"myreaderx23":3,"myreaderx31":3}},"feed":{"createdTime":"2020-08-24 21:31:37","updatedTime":"2020-09-06 22:44:28","id":2198,"name":"Stephen Wolfram Blog","url":"http://blog.stephenwolfram.com/feed/","subscriber":null,"website":null,"icon":"https://writings.stephenwolfram.com/favicon.ico","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx62/cdn85@2020_5/2020/09/06/14-44-24-020_af5ff1652ce9083d.ico","description":"Stephen Wolfram's Personal Blog","weekly":null,"link":null},"noPictureArticleList":[{"createdTime":"2021-05-27 23:37:38","updatedTime":"2021-05-27 23:37:38","id":null,"feedId":2198,"linkMd5":"89bb5ae43fc3f929f6e0f8786b906c5c"}],"tmpCommonImgCdnBytes":0,"tmpBodyImgCdnBytes":2634608,"tmpBgImgCdnBytes":0,"extra4":{"start":1622129617467,"total":0,"statList":[{"spend":987,"msg":"获取xml内容"},{"spend":112,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":120236,"msg":"正文链接上传到cdn"}]},"extra5":83,"extra6":82,"extra7ImgCdnFailResultVector":[{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Cimg9.png","sourceStatusCode":200,"destWidth":1250,"destHeight":606,"sourceBytes":704076,"destBytes":145576,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":640,"convertSpendMs":53,"createdTime":"2021-05-27 23:35:38","host":"us-011*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn13/contents/2021/05/27/15-35-39-382_125bdb46d0ed6f67.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Thu, 27 May 2021 15:35:39 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["CCEE:2C5A:1CD48:385DB:60AFBC4B"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1622132921"],"x-ratelimit-resource":["core"],"x-ratelimit-used":["61"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn13/contents/2021/05/27/15-35-39-382_125bdb46d0ed6f67.webp","historyStatusCode":[],"spendMs":36},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"687.6 KB","destSize":"142.2 KB","compressRate":"20.7%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg66.png","sourceStatusCode":200,"destWidth":1160,"destHeight":380,"sourceBytes":131770,"destBytes":39484,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":490,"convertSpendMs":20,"createdTime":"2021-05-27 23:35:39","host":"us-037*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn35/contents/2021/05/27/15-35-39-932_4e444df0c27b2cd8.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Thu, 27 May 2021 15:35:39 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["CF2E:1E9E:1A78E:33DB7:60AFBC4B"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1622132918"],"x-ratelimit-resource":["core"],"x-ratelimit-used":["62"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn35/contents/2021/05/27/15-35-39-932_4e444df0c27b2cd8.webp","historyStatusCode":[],"spendMs":33},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"128.7 KB","destSize":"38.6 KB","compressRate":"30%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg105.png","sourceStatusCode":200,"destWidth":1112,"destHeight":232,"sourceBytes":15688,"destBytes":5206,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":1083,"convertSpendMs":10,"createdTime":"2021-05-27 23:35:38","host":"europe-24*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx31/cdn54/contents/2021/05/27/15-35-39-874_1f4d906bc6c5615a.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69855631.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Thu, 27 May 2021 15:35:39 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["E7E2:42C2:C75B:DAA9:60AFBC4B"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1622132930"],"x-ratelimit-resource":["core"],"x-ratelimit-used":["61"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx31/cdn54/contents/2021/05/27/15-35-39-874_1f4d906bc6c5615a.webp","historyStatusCode":[],"spendMs":133},"base64UserPassword":null,"token":"da243******************************d9e47"},"githubUser":"myreaderx31","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"15.3 KB","destSize":"5.1 KB","compressRate":"33.2%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Cimg9.png","sourceStatusCode":200,"destWidth":1250,"destHeight":606,"sourceBytes":704076,"destBytes":145576,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":631,"convertSpendMs":44,"createdTime":"2021-05-27 23:35:39","host":"us-027*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn13/contents/2021/05/27/15-35-40-023_125bdb46d0ed6f67.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Thu, 27 May 2021 15:35:40 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["BD7C:1C78:1F46F:3B323:60AFBC4C"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1622132921"],"x-ratelimit-resource":["core"],"x-ratelimit-used":["61"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn13/contents/2021/05/27/15-35-40-023_125bdb46d0ed6f67.webp","historyStatusCode":[],"spendMs":31},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"687.6 KB","destSize":"142.2 KB","compressRate":"20.7%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg105.png","sourceStatusCode":200,"destWidth":1112,"destHeight":232,"sourceBytes":15688,"destBytes":5206,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":305,"convertSpendMs":8,"createdTime":"2021-05-27 23:35:40","host":"us-007*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx31/cdn54/contents/2021/05/27/15-35-40-316_1f4d906bc6c5615a.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69855631.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Thu, 27 May 2021 15:35:40 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["CC2C:3159:16E5E:4247E:60AFBC4C"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1622132930"],"x-ratelimit-resource":["core"],"x-ratelimit-used":["61"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx31/cdn54/contents/2021/05/27/15-35-40-316_1f4d906bc6c5615a.webp","historyStatusCode":[],"spendMs":34},"base64UserPassword":null,"token":"da243******************************d9e47"},"githubUser":"myreaderx31","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"15.3 KB","destSize":"5.1 KB","compressRate":"33.2%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg92.png","sourceStatusCode":200,"destWidth":1122,"destHeight":262,"sourceBytes":164889,"destBytes":87726,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":453,"convertSpendMs":22,"createdTime":"2021-05-27 23:35:39","host":"us-032*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx31/cdn80/contents/2021/05/27/15-35-40-314_855e2f1c0e224307.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69855631.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Thu, 27 May 2021 15:35:40 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["87D6:6689:1AE25:47CD1:60AFBC4C"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1622132930"],"x-ratelimit-resource":["core"],"x-ratelimit-used":["61"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx31/cdn80/contents/2021/05/27/15-35-40-314_855e2f1c0e224307.webp","historyStatusCode":[],"spendMs":46},"base64UserPassword":null,"token":"da243******************************d9e47"},"githubUser":"myreaderx31","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"161 KB","destSize":"85.7 KB","compressRate":"53.2%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg66.png","sourceStatusCode":200,"destWidth":1160,"destHeight":380,"sourceBytes":131770,"destBytes":39484,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":405,"convertSpendMs":19,"createdTime":"2021-05-27 23:35:39","host":"us-037*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn35/contents/2021/05/27/15-35-40-343_4e444df0c27b2cd8.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Thu, 27 May 2021 15:35:40 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["CF2E:1E9E:1A7AE:33DEB:60AFBC4C"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1622132918"],"x-ratelimit-resource":["core"],"x-ratelimit-used":["62"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn35/contents/2021/05/27/15-35-40-343_4e444df0c27b2cd8.webp","historyStatusCode":[],"spendMs":33},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"128.7 KB","destSize":"38.6 KB","compressRate":"30%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg104.png","sourceStatusCode":200,"destWidth":876,"destHeight":834,"sourceBytes":372136,"destBytes":70980,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":1869,"convertSpendMs":42,"createdTime":"2021-05-27 23:35:38","host":"europe-58*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx31/cdn66/contents/2021/05/27/15-35-40-372_93e0397ad761634b.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69855631.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Thu, 27 May 2021 15:35:40 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["DB04:B997:7D14C:7F355:60AFBC4C"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1622132930"],"x-ratelimit-resource":["core"],"x-ratelimit-used":["61"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx31/cdn66/contents/2021/05/27/15-35-40-372_93e0397ad761634b.webp","historyStatusCode":[],"spendMs":379},"base64UserPassword":null,"token":"da243******************************d9e47"},"githubUser":"myreaderx31","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"363.4 KB","destSize":"69.3 KB","compressRate":"19.1%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg149.png","sourceStatusCode":200,"destWidth":1130,"destHeight":368,"sourceBytes":314192,"destBytes":77022,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":1852,"convertSpendMs":26,"createdTime":"2021-05-27 23:35:38","host":"europe62*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn21/contents/2021/05/27/15-35-40-291_d0190ca9c52f6da4.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Thu, 27 May 2021 15:35:40 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["81A2:6D28:4159C:43113:60AFBC4C"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1622132918"],"x-ratelimit-resource":["core"],"x-ratelimit-used":["62"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn21/contents/2021/05/27/15-35-40-291_d0190ca9c52f6da4.webp","historyStatusCode":[],"spendMs":480},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"306.8 KB","destSize":"75.2 KB","compressRate":"24.5%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg92.png","sourceStatusCode":200,"destWidth":1122,"destHeight":262,"sourceBytes":164889,"destBytes":87726,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":468,"convertSpendMs":22,"createdTime":"2021-05-27 23:35:40","host":"us-007*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx31/cdn80/contents/2021/05/27/15-35-40-784_855e2f1c0e224307.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69855631.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Thu, 27 May 2021 15:35:40 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["CC2C:3159:16E7C:42505:60AFBC4C"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1622132930"],"x-ratelimit-resource":["core"],"x-ratelimit-used":["61"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx31/cdn80/contents/2021/05/27/15-35-40-784_855e2f1c0e224307.webp","historyStatusCode":[],"spendMs":49},"base64UserPassword":null,"token":"da243******************************d9e47"},"githubUser":"myreaderx31","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"161 KB","destSize":"85.7 KB","compressRate":"53.2%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg26.png","sourceStatusCode":200,"destWidth":1158,"destHeight":1164,"sourceBytes":1172035,"destBytes":262074,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":723,"convertSpendMs":72,"createdTime":"2021-05-27 23:35:40","host":"us-023*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn53/contents/2021/05/27/15-35-41-131_3231a6b90c492051.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Thu, 27 May 2021 15:35:41 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["DE9E:3445:172F5:33B73:60AFBC4D"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1622132918"],"x-ratelimit-resource":["core"],"x-ratelimit-used":["62"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn53/contents/2021/05/27/15-35-41-131_3231a6b90c492051.webp","historyStatusCode":[],"spendMs":43},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.1 MB","destSize":"255.9 KB","compressRate":"22.4%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg149.png","sourceStatusCode":200,"destWidth":1130,"destHeight":368,"sourceBytes":314192,"destBytes":77022,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":601,"convertSpendMs":25,"createdTime":"2021-05-27 23:35:40","host":"us-007*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn21/contents/2021/05/27/15-35-41-369_d0190ca9c52f6da4.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Thu, 27 May 2021 15:35:41 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["CC2C:3159:16EB4:425A7:60AFBC4D"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1622132918"],"x-ratelimit-resource":["core"],"x-ratelimit-used":["62"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn21/contents/2021/05/27/15-35-41-369_d0190ca9c52f6da4.webp","historyStatusCode":[],"spendMs":44},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"306.8 KB","destSize":"75.2 KB","compressRate":"24.5%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514XXimg115.png","sourceStatusCode":200,"destWidth":1054,"destHeight":604,"sourceBytes":75838,"destBytes":25600,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":1116,"convertSpendMs":23,"createdTime":"2021-05-27 23:35:40","host":"europe-58*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn45/contents/2021/05/27/15-35-41-491_1074ccd5755b05b5.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Thu, 27 May 2021 15:35:41 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["DAA2:42C2:C7BD:DB10:60AFBC4D"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1622132921"],"x-ratelimit-resource":["core"],"x-ratelimit-used":["61"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn45/contents/2021/05/27/15-35-41-491_1074ccd5755b05b5.webp","historyStatusCode":[],"spendMs":156},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"74.1 KB","destSize":"25 KB","compressRate":"33.8%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg67.png","sourceStatusCode":200,"destWidth":1152,"destHeight":462,"sourceBytes":445943,"destBytes":126692,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":2193,"convertSpendMs":37,"createdTime":"2021-05-27 23:35:39","host":"europe70*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn25/contents/2021/05/27/15-35-41-098_e6368215d01216e1.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Thu, 27 May 2021 15:35:41 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["9632:6D28:41652:431C3:60AFBC4D"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1622132921"],"x-ratelimit-resource":["core"],"x-ratelimit-used":["61"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn25/contents/2021/05/27/15-35-41-098_e6368215d01216e1.webp","historyStatusCode":[],"spendMs":634},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"435.5 KB","destSize":"123.7 KB","compressRate":"28.4%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg26.png","sourceStatusCode":200,"destWidth":1158,"destHeight":1164,"sourceBytes":1172035,"destBytes":262074,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":770,"convertSpendMs":71,"createdTime":"2021-05-27 23:35:41","host":"us-039*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn53/contents/2021/05/27/15-35-41-905_3231a6b90c492051.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Thu, 27 May 2021 15:35:41 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["986E:3A92:3681:1025C:60AFBC4D"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1622132918"],"x-ratelimit-resource":["core"],"x-ratelimit-used":["62"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn53/contents/2021/05/27/15-35-41-905_3231a6b90c492051.webp","historyStatusCode":[],"spendMs":49},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.1 MB","destSize":"255.9 KB","compressRate":"22.4%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg67.png","sourceStatusCode":200,"destWidth":1152,"destHeight":462,"sourceBytes":445943,"destBytes":126692,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":634,"convertSpendMs":36,"createdTime":"2021-05-27 23:35:41","host":"us-031*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn25/contents/2021/05/27/15-35-42-373_e6368215d01216e1.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Thu, 27 May 2021 15:35:42 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["E8BE:30CA:1AD03:486B9:60AFBC4E"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1622132921"],"x-ratelimit-resource":["core"],"x-ratelimit-used":["61"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn25/contents/2021/05/27/15-35-42-373_e6368215d01216e1.webp","historyStatusCode":[],"spendMs":36},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"435.5 KB","destSize":"123.7 KB","compressRate":"28.4%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg104.png","sourceStatusCode":200,"destWidth":876,"destHeight":834,"sourceBytes":372136,"destBytes":70980,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":1755,"convertSpendMs":59,"createdTime":"2021-05-27 23:35:40","host":"europe-57*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx31/cdn66/contents/2021/05/27/15-35-42-271_93e0397ad761634b.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69855631.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Thu, 27 May 2021 15:35:42 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["8276:6D29:68F0E:6B016:60AFBC4E"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1622132930"],"x-ratelimit-resource":["core"],"x-ratelimit-used":["61"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx31/cdn66/contents/2021/05/27/15-35-42-271_93e0397ad761634b.webp","historyStatusCode":[],"spendMs":378},"base64UserPassword":null,"token":"da243******************************d9e47"},"githubUser":"myreaderx31","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"363.4 KB","destSize":"69.3 KB","compressRate":"19.1%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514XXimg115.png","sourceStatusCode":200,"destWidth":1054,"destHeight":604,"sourceBytes":75838,"destBytes":25600,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":1206,"convertSpendMs":23,"createdTime":"2021-05-27 23:35:41","host":"europe-25*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn45/contents/2021/05/27/15-35-42-676_1074ccd5755b05b5.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Thu, 27 May 2021 15:35:42 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["E5DC:4D66:5E96:76E7:60AFBC4E"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1622132921"],"x-ratelimit-resource":["core"],"x-ratelimit-used":["61"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn45/contents/2021/05/27/15-35-42-676_1074ccd5755b05b5.webp","historyStatusCode":[],"spendMs":250},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"74.1 KB","destSize":"25 KB","compressRate":"33.8%"},null,null],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://europe-56.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-032.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-037.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-53.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-007.herokuapp.com/":{"failCount":0,"successCount":5,"resultList":[200,200,200,200,200]},"http://us-002.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe63.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-028.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-015.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://us-024.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe70.herokuapp.com/":{"failCount":0,"successCount":4,"resultList":[200,200,200,200]},"http://us-011.herokuapp.com/":{"failCount":0,"successCount":4,"resultList":[200,200,200,200]},"http://us-020.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-54.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://europe69.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe21.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-004.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-57.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-003.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://us-008.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-22.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-016.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-012.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-24.herokuapp.com/":{"failCount":0,"successCount":4,"resultList":[200,200,200,200]},"http://us-039.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-55.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe65.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-58.herokuapp.com/":{"failCount":0,"successCount":4,"resultList":[200,200,200,200]},"http://europe61.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe66.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://us-030.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]},"http://us-026.herokuapp.com/":{"failCount":1,"successCount":1,"resultList":[200,null]},"http://us-006.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-25.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-031.herokuapp.com/":{"failCount":0,"successCount":4,"resultList":[200,200,200,200]},"http://us-036.herokuapp.com/":{"failCount":0,"successCount":4,"resultList":[200,200,200,200]},"http://europe62.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://us-019.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://us-010.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-59.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-51.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe67.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-023.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://us-014.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-040.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://us-027.herokuapp.com/":{"failCount":0,"successCount":4,"resultList":[200,200,200,200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Cimg39.png","sourceStatusCode":200,"destWidth":968,"destHeight":150,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn73@2020_3/2021/05/27/15-35-39-076_69ef95d58733ed3c.webp","sourceBytes":9006,"destBytes":5560,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":559,"convertSpendMs":6,"createdTime":"2021-05-27 23:35:38","host":"us-003*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"8.8 KB","destSize":"5.4 KB","compressRate":"61.7%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg27.png","sourceStatusCode":200,"destWidth":1122,"destHeight":262,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn45@2020_6/2021/05/27/15-35-39-078_db7c9a6ca8ccf311.webp","sourceBytes":14835,"destBytes":8018,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":562,"convertSpendMs":10,"createdTime":"2021-05-27 23:35:38","host":"us-023*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"14.5 KB","destSize":"7.8 KB","compressRate":"54%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg42.png","sourceStatusCode":200,"destWidth":1104,"destHeight":100,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn9@2020_6/2021/05/27/15-35-39-053_f48e35852d70ccf7.webp","sourceBytes":9473,"destBytes":6782,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":583,"convertSpendMs":6,"createdTime":"2021-05-27 23:35:38","host":"us-023*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"9.3 KB","destSize":"6.6 KB","compressRate":"71.6%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514img63.png","sourceStatusCode":200,"destWidth":942,"destHeight":42,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn30@2020_2/2021/05/27/15-35-39-080_640ce1e9c13e9508.webp","sourceBytes":20031,"destBytes":8368,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":598,"convertSpendMs":4,"createdTime":"2021-05-27 23:35:38","host":"us-027*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"19.6 KB","destSize":"8.2 KB","compressRate":"41.8%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg130.png","sourceStatusCode":200,"destWidth":1140,"destHeight":444,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn50@2020_5/2021/05/27/15-35-39-100_6f94bdb3fb653101.webp","sourceBytes":54114,"destBytes":21234,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":603,"convertSpendMs":21,"createdTime":"2021-05-27 23:35:38","host":"us-011*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"52.8 KB","destSize":"20.7 KB","compressRate":"39.2%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514XXimg164.png","sourceStatusCode":200,"destWidth":1080,"destHeight":172,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn34@2020_3/2021/05/27/15-35-39-151_2c1d2f20034604bf.webp","sourceBytes":62303,"destBytes":11866,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":613,"convertSpendMs":11,"createdTime":"2021-05-27 23:35:38","host":"us-015*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"60.8 KB","destSize":"11.6 KB","compressRate":"19%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/biblio-icon.png","sourceStatusCode":200,"destWidth":328,"destHeight":154,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn41@2020_6/2021/05/27/15-35-39-143_b3639991b9936fec.webp","sourceBytes":34551,"destBytes":4854,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":640,"convertSpendMs":5,"createdTime":"2021-05-27 23:35:38","host":"us-036*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"33.7 KB","destSize":"4.7 KB","compressRate":"14%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg51.png","sourceStatusCode":200,"destWidth":92,"destHeight":82,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn85@2020_4/2021/05/27/15-35-39-081_7a9f7c345840c563.webp","sourceBytes":2516,"destBytes":744,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":649,"convertSpendMs":2,"createdTime":"2021-05-27 23:35:38","host":"us-031*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"2.5 KB","destSize":"744 B","compressRate":"29.6%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg76.png","sourceStatusCode":200,"destWidth":640,"destHeight":486,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn75@2020_3/2021/05/27/15-35-39-151_9edd806ac98d832d.webp","sourceBytes":81958,"destBytes":20658,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":605,"convertSpendMs":12,"createdTime":"2021-05-27 23:35:38","host":"us-011*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"80 KB","destSize":"20.2 KB","compressRate":"25.2%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/icon-distCons.png","sourceStatusCode":200,"destWidth":128,"destHeight":108,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn81@2020_3/2021/05/27/15-35-39-066_b836f3774589aa5b.webp","sourceBytes":23037,"destBytes":4722,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":660,"convertSpendMs":4,"createdTime":"2021-05-27 23:35:38","host":"us-54*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"22.5 KB","destSize":"4.6 KB","compressRate":"20.5%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg16.png","sourceStatusCode":200,"destWidth":1154,"destHeight":270,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn37@2020_5/2021/05/27/15-35-39-184_08ed0c677e1e7925.webp","sourceBytes":88306,"destBytes":21598,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":653,"convertSpendMs":13,"createdTime":"2021-05-27 23:35:38","host":"us-003*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"86.2 KB","destSize":"21.1 KB","compressRate":"24.5%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg52.png","sourceStatusCode":200,"destWidth":858,"destHeight":522,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn65@2020_4/2021/05/27/15-35-39-186_d83d14e30b84f5c7.webp","sourceBytes":89701,"destBytes":18820,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":670,"convertSpendMs":16,"createdTime":"2021-05-27 23:35:38","host":"us-027*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"87.6 KB","destSize":"18.4 KB","compressRate":"21%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/swo514redbox2.png","sourceStatusCode":200,"destWidth":50,"destHeight":50,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn53@2020_2/2021/05/27/15-35-39-113_755777349f7121f0.webp","sourceBytes":3104,"destBytes":238,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":641,"convertSpendMs":2,"createdTime":"2021-05-27 23:35:38","host":"us-019*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c,89bb5ae43fc3f929f6e0f8786b906c5c,89bb5ae43fc3f929f6e0f8786b906c5c,89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"3 KB","destSize":"238 B","compressRate":"7.7%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg99.png","sourceStatusCode":200,"destWidth":1126,"destHeight":394,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn70@2020_4/2021/05/27/15-35-39-234_8165be1d85da6616.webp","sourceBytes":173979,"destBytes":34802,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":702,"convertSpendMs":22,"createdTime":"2021-05-27 23:35:38","host":"us-015*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"169.9 KB","destSize":"34 KB","compressRate":"20%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514img1.png","sourceStatusCode":200,"destWidth":1096,"destHeight":518,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn74@2020_3/2021/05/27/15-35-39-260_85214d60acef3de4.webp","sourceBytes":101298,"destBytes":21210,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":714,"convertSpendMs":19,"createdTime":"2021-05-27 23:35:38","host":"us-010*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"98.9 KB","destSize":"20.7 KB","compressRate":"20.9%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg45.png","sourceStatusCode":200,"destWidth":1134,"destHeight":312,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn90@2020_3/2021/05/27/15-35-39-255_cb2e88fc590eebb0.webp","sourceBytes":131340,"destBytes":62192,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":729,"convertSpendMs":23,"createdTime":"2021-05-27 23:35:38","host":"us-019*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"128.3 KB","destSize":"60.7 KB","compressRate":"47.4%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg44.png","sourceStatusCode":200,"destWidth":1026,"destHeight":488,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn62@2020_2/2021/05/27/15-35-39-328_acef4bbeaf300ab6.webp","sourceBytes":278862,"destBytes":61318,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":790,"convertSpendMs":27,"createdTime":"2021-05-27 23:35:38","host":"us-040*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"272.3 KB","destSize":"59.9 KB","compressRate":"22%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Bimg172.png","sourceStatusCode":200,"destWidth":1264,"destHeight":402,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn47@2020_4/2021/05/27/15-35-39-261_dc228bf0684c8d39.webp","sourceBytes":151931,"destBytes":39260,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":768,"convertSpendMs":21,"createdTime":"2021-05-27 23:35:38","host":"us-031*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"148.4 KB","destSize":"38.3 KB","compressRate":"25.8%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg37.png","sourceStatusCode":200,"destWidth":1128,"destHeight":286,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn94@2020_2/2021/05/27/15-35-39-196_ab3de571292fbddb.webp","sourceBytes":34138,"destBytes":10428,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":823,"convertSpendMs":10,"createdTime":"2021-05-27 23:35:38","host":"us-007*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"33.3 KB","destSize":"10.2 KB","compressRate":"30.5%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514img36.png","sourceStatusCode":200,"destWidth":14,"destHeight":38,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn69@2020_1/2021/05/27/15-35-39-073_57b1ccb8d195bc69.webp","sourceBytes":958,"destBytes":292,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":890,"convertSpendMs":3,"createdTime":"2021-05-27 23:35:38","host":"us-036*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c,89bb5ae43fc3f929f6e0f8786b906c5c,89bb5ae43fc3f929f6e0f8786b906c5c,89bb5ae43fc3f929f6e0f8786b906c5c,89bb5ae43fc3f929f6e0f8786b906c5c,89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"958 B","destSize":"292 B","compressRate":"30.5%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Bimg175.png","sourceStatusCode":200,"destWidth":930,"destHeight":1222,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn25@2020_5/2021/05/27/15-35-39-381_691645ed09e054ac.webp","sourceBytes":285953,"destBytes":68848,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":954,"convertSpendMs":39,"createdTime":"2021-05-27 23:35:38","host":"us-006*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"279.3 KB","destSize":"67.2 KB","compressRate":"24.1%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg71.png","sourceStatusCode":200,"destWidth":924,"destHeight":668,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn26@2020_3/2021/05/27/15-35-39-407_d5eb58099c761fce.webp","sourceBytes":522724,"destBytes":58440,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":965,"convertSpendMs":34,"createdTime":"2021-05-27 23:35:38","host":"us-040*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"510.5 KB","destSize":"57.1 KB","compressRate":"11.2%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg107.png","sourceStatusCode":200,"destWidth":1154,"destHeight":608,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn5@2020_6/2021/05/27/15-35-39-345_6015246f1e470121.webp","sourceBytes":323008,"destBytes":159006,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":1011,"convertSpendMs":47,"createdTime":"2021-05-27 23:35:38","host":"us-036*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"315.4 KB","destSize":"155.3 KB","compressRate":"49.2%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg12.png","sourceStatusCode":200,"destWidth":944,"destHeight":88,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn97@2020_3/2021/05/27/15-35-39-617_b0ad317164c3651b.webp","sourceBytes":6182,"destBytes":5872,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":510,"convertSpendMs":4,"createdTime":"2021-05-27 23:35:39","host":"us-015*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"6 KB","destSize":"5.7 KB","compressRate":"95%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Aimg147.png","sourceStatusCode":200,"destWidth":834,"destHeight":182,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn93@2020_3/2021/05/27/15-35-39-626_42a9df1af2539c17.webp","sourceBytes":16753,"destBytes":5640,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":537,"convertSpendMs":6,"createdTime":"2021-05-27 23:35:39","host":"us-027*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"16.4 KB","destSize":"5.5 KB","compressRate":"33.7%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514yellowbox2.png","sourceStatusCode":200,"destWidth":50,"destHeight":50,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn19@2020_4/2021/05/27/15-35-39-703_1299f3c1f8ec989d.webp","sourceBytes":3360,"destBytes":336,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":504,"convertSpendMs":3,"createdTime":"2021-05-27 23:35:39","host":"us-020*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c,89bb5ae43fc3f929f6e0f8786b906c5c,89bb5ae43fc3f929f6e0f8786b906c5c,89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"3.3 KB","destSize":"336 B","compressRate":"10%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg48.png","sourceStatusCode":200,"destWidth":1158,"destHeight":180,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn90@2020_3/2021/05/27/15-35-39-688_d328c273b289ab3e.webp","sourceBytes":72207,"destBytes":33318,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":624,"convertSpendMs":13,"createdTime":"2021-05-27 23:35:39","host":"us-040*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"70.5 KB","destSize":"32.5 KB","compressRate":"46.1%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg59.png","sourceStatusCode":200,"destWidth":1150,"destHeight":412,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn2@2020_6/2021/05/27/15-35-39-841_d6789e54107d4fd0.webp","sourceBytes":234948,"destBytes":43616,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":724,"convertSpendMs":29,"createdTime":"2021-05-27 23:35:39","host":"us-003*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"229.4 KB","destSize":"42.6 KB","compressRate":"18.6%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg106.png","sourceStatusCode":200,"destWidth":1060,"destHeight":106,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn31@2020_3/2021/05/27/15-35-39-683_c11ddf88cd2a0e0d.webp","sourceBytes":4522,"destBytes":3682,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":1165,"convertSpendMs":5,"createdTime":"2021-05-27 23:35:38","host":"europe-57*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"4.4 KB","destSize":"3.6 KB","compressRate":"81.4%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg13.png","sourceStatusCode":200,"destWidth":1158,"destHeight":238,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn16@2020_3/2021/05/27/15-35-39-898_0d280bc4164cdeaa.webp","sourceBytes":140360,"destBytes":64270,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":761,"convertSpendMs":20,"createdTime":"2021-05-27 23:35:39","host":"us-032*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"137.1 KB","destSize":"62.8 KB","compressRate":"45.8%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg120.png","sourceStatusCode":200,"destWidth":1140,"destHeight":310,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn97@2020_6/2021/05/27/15-35-39-790_0d8f28a52910ccc6.webp","sourceBytes":21766,"destBytes":12954,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":1239,"convertSpendMs":15,"createdTime":"2021-05-27 23:35:38","host":"europe70*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"21.3 KB","destSize":"12.7 KB","compressRate":"59.5%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg135.png","sourceStatusCode":200,"destWidth":1144,"destHeight":572,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn40@2020_6/2021/05/27/15-35-39-924_a8a214454438f370.webp","sourceBytes":103271,"destBytes":30008,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":760,"convertSpendMs":26,"createdTime":"2021-05-27 23:35:39","host":"us-024*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"100.9 KB","destSize":"29.3 KB","compressRate":"29.1%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg14.png","sourceStatusCode":200,"destWidth":844,"destHeight":38,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn59@2020_5/2021/05/27/15-35-39-984_9d45f41adf0abf57.webp","sourceBytes":17547,"destBytes":6434,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":707,"convertSpendMs":4,"createdTime":"2021-05-27 23:35:39","host":"us-028*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"17.1 KB","destSize":"6.3 KB","compressRate":"36.7%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Cimg177.png","sourceStatusCode":200,"destWidth":206,"destHeight":36,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn83@2020_4/2021/05/27/15-35-40-139_d417c74e4a33bf7a.webp","sourceBytes":1625,"destBytes":1044,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":466,"convertSpendMs":2,"createdTime":"2021-05-27 23:35:39","host":"us-020*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.6 KB","destSize":"1 KB","compressRate":"64.2%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg22.png","sourceStatusCode":200,"destWidth":1150,"destHeight":488,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn44@2020_2/2021/05/27/15-35-40-120_3277158a51121d22.webp","sourceBytes":373422,"destBytes":98076,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":858,"convertSpendMs":30,"createdTime":"2021-05-27 23:35:39","host":"us-012*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"364.7 KB","destSize":"95.8 KB","compressRate":"26.3%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg93.png","sourceStatusCode":200,"destWidth":1136,"destHeight":372,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn76@2020_5/2021/05/27/15-35-40-178_949c279329e88094.webp","sourceBytes":50159,"destBytes":14956,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":606,"convertSpendMs":17,"createdTime":"2021-05-27 23:35:39","host":"us-55*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"49 KB","destSize":"14.6 KB","compressRate":"29.8%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg156.png","sourceStatusCode":200,"destWidth":1148,"destHeight":332,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn63@2020_2/2021/05/27/15-35-40-184_a72d5d04a73a8d8f.webp","sourceBytes":215347,"destBytes":36832,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":753,"convertSpendMs":19,"createdTime":"2021-05-27 23:35:39","host":"us-016*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"210.3 KB","destSize":"36 KB","compressRate":"17.1%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg100.png","sourceStatusCode":200,"destWidth":950,"destHeight":230,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn67@2020_5/2021/05/27/15-35-40-065_3710b65d44b6f0eb.webp","sourceBytes":31938,"destBytes":7122,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":702,"convertSpendMs":8,"createdTime":"2021-05-27 23:35:39","host":"us-004*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"31.2 KB","destSize":"7 KB","compressRate":"22.3%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514cimg30.png","sourceStatusCode":200,"destWidth":1124,"destHeight":264,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn27@2020_3/2021/05/27/15-35-39-649_8a49d08b446a9285.webp","sourceBytes":14385,"destBytes":7542,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":1534,"convertSpendMs":14,"createdTime":"2021-05-27 23:35:38","host":"europe-56*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"14 KB","destSize":"7.4 KB","compressRate":"52.4%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg20.png","sourceStatusCode":200,"destWidth":1148,"destHeight":596,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn9@2020_2/2021/05/27/15-35-40-015_7f22b4a3dacf4812.webp","sourceBytes":607995,"destBytes":75434,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":1061,"convertSpendMs":33,"createdTime":"2021-05-27 23:35:39","host":"us-54*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"593.7 KB","destSize":"73.7 KB","compressRate":"12.4%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514XXimg111.png","sourceStatusCode":200,"destWidth":384,"destHeight":926,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn2@2020_5/2021/05/27/15-35-39-993_bc8552fa860a849d.webp","sourceBytes":71559,"destBytes":22594,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":1630,"convertSpendMs":14,"createdTime":"2021-05-27 23:35:38","host":"europe-58*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"69.9 KB","destSize":"22.1 KB","compressRate":"31.6%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg57.png","sourceStatusCode":200,"destWidth":1146,"destHeight":408,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn55@2020_6/2021/05/27/15-35-40-124_ebba8c6ef6b83078.webp","sourceBytes":206920,"destBytes":33058,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":974,"convertSpendMs":23,"createdTime":"2021-05-27 23:35:39","host":"us-51*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"202.1 KB","destSize":"32.3 KB","compressRate":"16%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg34.png","sourceStatusCode":200,"destWidth":1150,"destHeight":506,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn78@2020_6/2021/05/27/15-35-40-186_542d6999152e277d.webp","sourceBytes":128517,"destBytes":35598,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":1718,"convertSpendMs":20,"createdTime":"2021-05-27 23:35:38","host":"europe66*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"125.5 KB","destSize":"34.8 KB","compressRate":"27.7%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg43.png","sourceStatusCode":200,"destWidth":1166,"destHeight":242,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn33@2020_4/2021/05/27/15-35-40-091_613a43fe80851f7a.webp","sourceBytes":162752,"destBytes":75344,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":1735,"convertSpendMs":21,"createdTime":"2021-05-27 23:35:38","host":"europe-58*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"158.9 KB","destSize":"73.6 KB","compressRate":"46.3%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg47.png","sourceStatusCode":200,"destWidth":1160,"destHeight":454,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn18@2020_5/2021/05/27/15-35-40-202_5bd676a00c92ca0b.webp","sourceBytes":93758,"destBytes":26670,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":1713,"convertSpendMs":21,"createdTime":"2021-05-27 23:35:38","host":"europe-24*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"91.6 KB","destSize":"26 KB","compressRate":"28.4%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg46.png","sourceStatusCode":200,"destWidth":1052,"destHeight":648,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn41@2020_2/2021/05/27/15-35-40-345_883b6a21c4bd15eb.webp","sourceBytes":269411,"destBytes":51644,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":1936,"convertSpendMs":42,"createdTime":"2021-05-27 23:35:38","host":"europe66*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"263.1 KB","destSize":"50.4 KB","compressRate":"19.2%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg15.png","sourceStatusCode":200,"destWidth":1156,"destHeight":270,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn7@2020_5/2021/05/27/15-35-40-532_1006f04fb28f797c.webp","sourceBytes":69380,"destBytes":17494,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":696,"convertSpendMs":13,"createdTime":"2021-05-27 23:35:40","host":"us-026*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"67.8 KB","destSize":"17.1 KB","compressRate":"25.2%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Bimg174.png","sourceStatusCode":200,"destWidth":760,"destHeight":744,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn82@2020_6/2021/05/27/15-35-40-228_13e52842d79f64b3.webp","sourceBytes":122460,"destBytes":27694,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":1927,"convertSpendMs":19,"createdTime":"2021-05-27 23:35:38","host":"europe-24*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"119.6 KB","destSize":"27 KB","compressRate":"22.6%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Cimg41.png","sourceStatusCode":200,"destWidth":1004,"destHeight":152,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn32@2020_6/2021/05/27/15-35-40-413_f31417f8aca79738.webp","sourceBytes":16635,"destBytes":8592,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":1243,"convertSpendMs":7,"createdTime":"2021-05-27 23:35:39","host":"europe-59*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"16.2 KB","destSize":"8.4 KB","compressRate":"51.7%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg58.png","sourceStatusCode":200,"destWidth":1150,"destHeight":412,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn4@2020_5/2021/05/27/15-35-40-564_d229c5375acdbc1e.webp","sourceBytes":137019,"destBytes":28570,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":710,"convertSpendMs":18,"createdTime":"2021-05-27 23:35:40","host":"us-039*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"133.8 KB","destSize":"27.9 KB","compressRate":"20.9%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg170.png","sourceStatusCode":200,"destWidth":1148,"destHeight":349,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn88@2020_4/2021/05/27/15-35-40-567_26aac1308905ab19.webp","sourceBytes":452759,"destBytes":74370,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":899,"convertSpendMs":32,"createdTime":"2021-05-27 23:35:39","host":"us-008*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"442.1 KB","destSize":"72.6 KB","compressRate":"16.4%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg95.png","sourceStatusCode":200,"destWidth":972,"destHeight":520,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn16@2020_3/2021/05/27/15-35-40-619_2e13c875e60d6160.webp","sourceBytes":88601,"destBytes":19590,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":679,"convertSpendMs":16,"createdTime":"2021-05-27 23:35:40","host":"us-002*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"86.5 KB","destSize":"19.1 KB","compressRate":"22.1%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514plusgrid4.png","sourceStatusCode":200,"destWidth":70,"destHeight":70,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn51@2020_3/2021/05/27/15-35-40-440_dfbf50bdd8115873.webp","sourceBytes":6977,"destBytes":612,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":1176,"convertSpendMs":3,"createdTime":"2021-05-27 23:35:39","host":"europe63*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"6.8 KB","destSize":"612 B","compressRate":"8.8%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg60.png","sourceStatusCode":200,"destWidth":1150,"destHeight":412,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn85@2020_5/2021/05/27/15-35-40-412_6b2d2cd9af645f4d.webp","sourceBytes":91798,"destBytes":19494,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":1403,"convertSpendMs":21,"createdTime":"2021-05-27 23:35:39","host":"europe62*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"89.6 KB","destSize":"19 KB","compressRate":"21.2%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg38.png","sourceStatusCode":200,"destWidth":1094,"destHeight":520,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn11@2020_5/2021/05/27/15-35-40-579_e9b2614880769dcf.webp","sourceBytes":98316,"destBytes":23690,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":736,"convertSpendMs":18,"createdTime":"2021-05-27 23:35:40","host":"us-014*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"96 KB","destSize":"23.1 KB","compressRate":"24.1%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg125.png","sourceStatusCode":200,"destWidth":1140,"destHeight":302,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn58@2020_2/2021/05/27/15-35-40-715_c7f762ac67a19160.webp","sourceBytes":24791,"destBytes":11738,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":506,"convertSpendMs":13,"createdTime":"2021-05-27 23:35:40","host":"us-011*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"24.2 KB","destSize":"11.5 KB","compressRate":"47.3%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg53.png","sourceStatusCode":200,"destWidth":1160,"destHeight":354,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn34@2020_4/2021/05/27/15-35-40-686_c323e9b89a375484.webp","sourceBytes":52214,"destBytes":16760,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":580,"convertSpendMs":21,"createdTime":"2021-05-27 23:35:40","host":"us-019*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"51 KB","destSize":"16.4 KB","compressRate":"32.1%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514cimg33.png","sourceStatusCode":200,"destWidth":1124,"destHeight":264,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn29@2020_5/2021/05/27/15-35-40-652_c9e9344352e37bf9.webp","sourceBytes":20997,"destBytes":8324,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":598,"convertSpendMs":10,"createdTime":"2021-05-27 23:35:40","host":"us-031*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"20.5 KB","destSize":"8.1 KB","compressRate":"39.6%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Bimg173.png","sourceStatusCode":200,"destWidth":1264,"destHeight":904,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn60@2020_2/2021/05/27/15-35-40-509_091729c0acd65a39.webp","sourceBytes":454269,"destBytes":84786,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":2118,"convertSpendMs":44,"createdTime":"2021-05-27 23:35:38","host":"europe70*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"443.6 KB","destSize":"82.8 KB","compressRate":"18.7%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Bimg171.png","sourceStatusCode":200,"destWidth":1098,"destHeight":724,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn57@2020_3/2021/05/27/15-35-40-478_34d54fe950a6eb70.webp","sourceBytes":288192,"destBytes":66032,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":2163,"convertSpendMs":33,"createdTime":"2021-05-27 23:35:38","host":"europe69*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"281.4 KB","destSize":"64.5 KB","compressRate":"22.9%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg54.png","sourceStatusCode":200,"destWidth":1158,"destHeight":176,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn50@2020_6/2021/05/27/15-35-40-778_a94fb53a4999438d.webp","sourceBytes":68141,"destBytes":18372,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":688,"convertSpendMs":10,"createdTime":"2021-05-27 23:35:40","host":"us-036*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"66.5 KB","destSize":"17.9 KB","compressRate":"27%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg91.png","sourceStatusCode":200,"destWidth":720,"destHeight":638,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn5@2020_1/2021/05/27/15-35-40-664_4b29d3fa9f02bdb5.webp","sourceBytes":199274,"destBytes":49210,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":1629,"convertSpendMs":22,"createdTime":"2021-05-27 23:35:39","host":"europe66*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"194.6 KB","destSize":"48.1 KB","compressRate":"24.7%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg40.png","sourceStatusCode":200,"destWidth":1128,"destHeight":512,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn23@2020_3/2021/05/27/15-35-40-881_efceaac490ccc2c5.webp","sourceBytes":272344,"destBytes":55824,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":803,"convertSpendMs":27,"createdTime":"2021-05-27 23:35:40","host":"us-53*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"266 KB","destSize":"54.5 KB","compressRate":"20.5%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg25.png","sourceStatusCode":200,"destWidth":1158,"destHeight":606,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn37@2020_4/2021/05/27/15-35-40-948_4c221b3385b59cdb.webp","sourceBytes":474763,"destBytes":87240,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":821,"convertSpendMs":30,"createdTime":"2021-05-27 23:35:40","host":"us-007*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"463.6 KB","destSize":"85.2 KB","compressRate":"18.4%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg65.png","sourceStatusCode":200,"destWidth":1154,"destHeight":324,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn48@2020_4/2021/05/27/15-35-40-734_2098b06e468a3874.webp","sourceBytes":67184,"destBytes":29828,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":1723,"convertSpendMs":17,"createdTime":"2021-05-27 23:35:39","host":"europe-25*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"65.6 KB","destSize":"29.1 KB","compressRate":"44.4%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Bimg176.png","sourceStatusCode":200,"destWidth":1282,"destHeight":774,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn57@2020_2/2021/05/27/15-35-40-691_7fced912444027b2.webp","sourceBytes":569548,"destBytes":113690,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":2697,"convertSpendMs":61,"createdTime":"2021-05-27 23:35:38","host":"europe62*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"556.2 KB","destSize":"111 KB","compressRate":"20%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514XXimg152.png","sourceStatusCode":200,"destWidth":1148,"destHeight":274,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn93@2020_4/2021/05/27/15-35-41-175_2215572bfa7c23fa.webp","sourceBytes":74202,"destBytes":14458,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":1507,"convertSpendMs":14,"createdTime":"2021-05-27 23:35:40","host":"europe-22*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"72.5 KB","destSize":"14.1 KB","compressRate":"19.5%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514XXimg64.png","sourceStatusCode":200,"destWidth":1078,"destHeight":450,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn71@2020_2/2021/05/27/15-35-41-161_21eba0dfa8439ead.webp","sourceBytes":185765,"destBytes":30686,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":1770,"convertSpendMs":26,"createdTime":"2021-05-27 23:35:39","host":"europe67*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"181.4 KB","destSize":"30 KB","compressRate":"16.5%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514XXimg19.png","sourceStatusCode":200,"destWidth":980,"destHeight":502,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn41@2020_3/2021/05/27/15-35-41-563_bd0946f7ade68bdb.webp","sourceBytes":143576,"destBytes":28804,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":1425,"convertSpendMs":20,"createdTime":"2021-05-27 23:35:40","host":"europe70*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"140.2 KB","destSize":"28.1 KB","compressRate":"20.1%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg161.png","sourceStatusCode":200,"destWidth":1148,"destHeight":374,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn23@2020_3/2021/05/27/15-35-41-052_b883eb43bcd443e5.webp","sourceBytes":467582,"destBytes":75102,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":2459,"convertSpendMs":29,"createdTime":"2021-05-27 23:35:39","host":"europe21*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"456.6 KB","destSize":"73.3 KB","compressRate":"16.1%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg142.png","sourceStatusCode":200,"destWidth":1128,"destHeight":860,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn100@2020_6/2021/05/27/15-35-41-721_5b6661a98777b82b.webp","sourceBytes":490800,"destBytes":102778,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":2038,"convertSpendMs":48,"createdTime":"2021-05-27 23:35:40","host":"europe61*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"479.3 KB","destSize":"100.4 KB","compressRate":"20.9%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg81.png","sourceStatusCode":200,"destWidth":1160,"destHeight":578,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn62@2020_5/2021/05/27/15-35-41-771_e23f9e3fc6f68855.webp","sourceBytes":159453,"destBytes":38538,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":1719,"convertSpendMs":25,"createdTime":"2021-05-27 23:35:40","host":"europe-24*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"155.7 KB","destSize":"37.6 KB","compressRate":"24.2%"},{"code":1,"isDone":false,"source":"https://writings.stephenwolfram.com/data/uploads/2021/05/sw0514Ximg23.png","sourceStatusCode":200,"destWidth":1150,"destHeight":544,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn20@2020_4/2021/05/27/15-35-42-245_6e07ec646d8f2886.webp","sourceBytes":812532,"destBytes":241030,"targetWebpQuality":75,"feedId":2198,"totalSpendMs":2518,"convertSpendMs":52,"createdTime":"2021-05-27 23:35:40","host":"europe65*","referer":"https://writings.internal.stephenwolfram.com/?p=30155","linkMd5ListStr":"89bb5ae43fc3f929f6e0f8786b906c5c","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"793.5 KB","destSize":"235.4 KB","compressRate":"29.7%"}],"successGithubMap":{"myreaderx8":3,"myreaderx7":3,"myreaderx15":3,"myreaderx6":3,"myreaderx16":2,"myreaderx4":2,"myreaderx32":3,"myreaderx10":3,"myreaderx3":3,"myreaderx11":3,"myreaderx33":2,"myreaderx2":3,"myreaderx12":3,"myreaderx13":3,"myreaderx1":3,"myreaderx30":3,"myreaderx18":3,"myreaderx19":3,"myreaderx":3,"myreaderx25":2,"myreaderx27":3,"myreaderx21":3,"myreaderx22":3,"myreaderx24":3,"myreaderx5oss":3,"myreaderx29":2},"failGithubMap":{"myreaderx14":3,"myreaderx23":3,"myreaderx31":3}}