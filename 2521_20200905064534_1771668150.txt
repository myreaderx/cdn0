{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-09-05 14:41:44","updatedTime":"2020-09-05 14:41:44","title":"给女同事讲完代理后，女同事说：你好棒哦","link":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E7%BB%99%E5%A5%B3%E5%90%8C%E4%BA%8B%E8%AE%B2%E5%AE%8C%E4%BB%A3%E7%90%86%E5%90%8E%EF%BC%8C%E5%A5%B3%E5%90%8C%E4%BA%8B%E8%AF%B4%EF%BC%9A%E4%BD%A0%E5%A5%BD%E6%A3%92%E5%93%A6","description":"<div><div><div id=\"media\" class=\"rich_media_thumb_wrp\">\n\n            <img class=\"rich_media_thumb\" src=\"http://img.100weidu.com/mmbiz_jpg/eZzl4LXykQy6Uwm3SGUMYic8R3o8yalAkUda3dAyN0a0K9NKdEp1mvgmt2AeE0LdIeCRibicOpZ2GMetD4iaMvwo4g?imageView2/1/w/600\">\n        </div>\n    \n\n    \n\n    <div class=\"rich_media_content\" id=\"js_content\">\n                    \n\n                    \n\n                    \n                    \n                    <section style=\"display: none;\" data-tools=\"新媒体管家\" data-label=\"powered by xmt.cn\"><br></section><p style=\"text-align: center;\"><span style=\"font-size: 14px;letter-spacing: 0.5440000295639038px;text-align: center;max-width: 100%;color: rgb(255, 41, 65);line-height: 22.4px;\">（给</span><span style=\"font-size: 14px;letter-spacing: 0.5440000295639038px;text-align: center;max-width: 100%;line-height: 22.4px;color: rgb(0, 128, 255);\">ImportNew</span><span style=\"font-size: 14px;letter-spacing: 0.5440000295639038px;text-align: center;max-width: 100%;color: rgb(255, 41, 65);line-height: 22.4px;\">加星标，提高Java技能）</span></p><blockquote><p style=\"letter-spacing: 0.5440000295639038px;white-space: normal;background-color: rgb(255, 255, 255);max-width: 100%;min-height: 1em;text-align: left;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-size: 14px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">转自：Java建设者</span></p></blockquote><p><span style=\"font-family: Arial, Helvetica, sans-serif;background-color: rgb(255, 255, 255);color: rgb(43, 43, 43);letter-spacing: 2px;text-align: left;word-spacing: 2px;font-size: 15px;\">说在前面：今天我们来聊一聊 Java 中的代理，先来聊聊故事背景</span><span style=\"font-family: Arial, Helvetica, sans-serif;background-color: rgb(255, 255, 255);color: rgb(43, 43, 43);font-size: 16px;letter-spacing: 2px;text-align: left;word-spacing: 2px;\">：</span><br></p><blockquote data-tool=\"mdnice编辑器\" style=\"margin-top: 20px;margin-bottom: 20px;padding: 10px 10px 10px 20px;border-width: 1px;border-top-style: solid;border-right-style: solid;border-bottom-style: solid;border-color: rgb(27, 144, 13);color: rgb(89, 89, 89);font-size: 0.9em;max-width: 100%;box-sizing: inherit;font-family: Optima-Regular, PingFangTC-light;letter-spacing: 1.5px;text-align: left;white-space: normal;overflow: auto;text-size-adjust: 100%;line-height: 1.55em;border-radius: 6px;background: rgb(255, 255, 255);overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(116, 181, 109);font-size: 34px;line-height: 1;font-weight: 700;font-family: Arial, Helvetica, sans-serif;box-sizing: border-box !important;overflow-wrap: break-word !important;\">❝</span><p style=\"padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;letter-spacing: 2px;font-size: 16px;word-spacing: 2px;color: black;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">小明想购买法国某个牌子的香水送给女朋友，但是在国内没有货源售卖，亲自去法国又大费周章了，而小红现在正在法国玩耍，她和小明是好朋友，可以帮小明买到这个牌子的香水，于是小明就找到小红，答应给她多加 5% 的辛苦费，小红答应了，小明成功在中国买到了法国的香水。之后小红开启了疯狂的代购模式，赚到了很多手续费。</span></p><span style=\"max-width: 100%;float: right;color: rgb(116, 181, 109);font-family: Arial, Helvetica, sans-serif;box-sizing: border-box !important;overflow-wrap: break-word !important;\">❞</span></blockquote><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">在故事中，<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「小明是一个客户」</strong>，它让小红帮忙购买香水，<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「小红就成了一个代理对象」</strong>，而<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「香水提供商是一个真实的对象」</strong>，可以售卖香水，小明通过代理商小红，购买到法国的香水，这就是一个代购的例子。我画了一幅图帮助理解这个故事的整个结构。</span></p><figure data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;max-width: 100%;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;letter-spacing: 1.5px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);display: flex;flex-direction: column;justify-content: center;align-items: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><img data-ratio=\"0.23216444981862153\" data-type=\"png\" data-w=\"827\" style=\"margin: 20px auto; border-radius: 6px; display: block; object-fit: contain; box-shadow: rgb(153, 153, 153) 2px 4px 7px; box-sizing: border-box !important; overflow-wrap: break-word !important; width: 677px !important; visibility: visible !important; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/libYRuvULTdWACbPmP3IthmrrO6mkE1Ytib584dicNPGrOHIkL7ZH64MpcQdlyfZnXYH83PnHS7B2V4osQel98icYw/640?wx_fmt=png\"></figure><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">这个故事是最典型的代理模式，代购从供应商购买货物后返回给调用者，也就是需要代理的小明。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">代理可以分为</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">静态代理</span></code><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">和</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">动态代理</span></code><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">两大类：</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「静态代理」</strong></span></p><ul data-tool=\"mdnice编辑器\" class=\"list-paddingleft-2\" style=\"margin-top: 8px;margin-bottom: 8px;padding-left: 25px;max-width: 100%;font-family: Optima-Regular, PingFangTC-light;letter-spacing: 1.5px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);font-size: 15px;color: rgb(89, 89, 89);list-style-type: circle;overflow-wrap: break-word !important;\"><li style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">优点：代码结构简单，较容易实现</span></section></li><li style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">缺点：无法适配所有代理场景，如果有新的需求，需要修改代理类，<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「不符合软件工程的开闭原则」</strong></span></section></li></ul><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">小红现在只是代理香水，如果小明需要找小红买法国红酒，那小红就需要代理法国红酒了，但是静态代理去扩展代理功能<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「必须修改小红内部的逻辑，这会让小红内部代码越来越臃肿」</strong>，后面会详细分析。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「动态代理」</strong></span></p><ul data-tool=\"mdnice编辑器\" class=\"list-paddingleft-2\" style=\"margin-top: 8px;margin-bottom: 8px;padding-left: 25px;max-width: 100%;font-family: Optima-Regular, PingFangTC-light;letter-spacing: 1.5px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);font-size: 15px;color: rgb(89, 89, 89);list-style-type: circle;overflow-wrap: break-word !important;\"><li style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">优点：能够动态适配特定的代理场景，扩展性较好，<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「符合软件工程的开闭原则」</strong></span></section></li><li style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">缺点：动态代理需要利用到反射机制和动态生成字节码，导致其性能会比静态代理稍差一些，<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「但是相比于优点，这些劣势几乎可以忽略不计」</strong></span></section></li></ul><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">如果小明需要找小红代理红酒，我们<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「无需修改代理类小红的内部逻辑」</strong>，只需要关注扩展的功能点：<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「代理红酒」</strong>，实例化新的类，通过一些转换即可让小红<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「既能够代理香水也能够代理红酒」</strong>了。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">本文将会通过以下几点，尽可能让你理解 Java 代理中所有重要的知识点：</span></p><ol data-tool=\"mdnice编辑器\" class=\"list-paddingleft-2\" style=\"margin-top: 8px;margin-bottom: 8px;padding-left: 25px;max-width: 100%;font-family: Optima-Regular, PingFangTC-light;letter-spacing: 1.5px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);font-size: 15px;color: rgb(89, 89, 89);overflow-wrap: break-word !important;\"><li style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">学习代理模式（实现故事的代码，解释代理模式的类结构特点）</span></section></li><li style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">比较静态代理与动态代理二者的异同</span></section></li><li style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">Java 中常见的两种动态代理实现（JDK Proxy 和 Cglib）</span></section></li><li style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">动态代理的应用（Spring AOP）</span></section></li></ol><h2 data-tool=\"mdnice编辑器\"><span style=\"font-size: 15px;color: rgb(123, 12, 0);\"><strong>代理模式</strong></span></h2><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">（1）我们定义好一个<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「售卖香水」</strong>的接口，定义好售卖香水的方法并传入该香水的价格。</span></p><pre data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;max-width: 100%;font-size: 16px;letter-spacing: 1.5px;text-align: left;background-color: rgb(255, 255, 255);border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><code style=\"padding: 15px 16px 16px;max-width: 100%;overflow-x: auto;color: rgb(221, 221, 221);display: -webkit-box;font-family: \" operator mono consolas monaco menlo monospace rgb border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">public</span> <span style=\"max-width: 100%;line-height: 26px;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">interface</span> <span style=\"max-width: 100%;font-weight: bold;color: white;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">SellPerfume</span> </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;line-height: 26px;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">void</span> <span style=\"max-width: 100%;color: rgb(166, 226, 46);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">sellPerfume</span><span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">(<span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">double</span> price)</span></span>;<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">}<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></span></code></pre><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">（2）定义香奈儿（Chanel）香水提供商，实现接口。</span></p><pre data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;max-width: 100%;font-size: 16px;letter-spacing: 1.5px;text-align: left;background-color: rgb(255, 255, 255);border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><code style=\"padding: 15px 16px 16px;max-width: 100%;overflow-x: auto;color: rgb(221, 221, 221);display: -webkit-box;font-family: \" operator mono consolas monaco menlo monospace rgb border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">public</span> <span style=\"max-width: 100%;line-height: 26px;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">class</span> <span style=\"max-width: 100%;font-weight: bold;color: white;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">ChanelFactory</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">implements</span> <span style=\"max-width: 100%;font-weight: bold;color: white;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">SellPerfume</span> </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;color: rgb(117, 113, 94);line-height: 26px;\">@Override</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;line-height: 26px;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">public</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">void</span> <span style=\"max-width: 100%;color: rgb(166, 226, 46);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">sellPerfume</span><span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">(<span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">double</span> price)</span> </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        System.out.println(<span style=\"max-width: 100%;color: rgb(166, 226, 46);line-height: 26px;\">\"成功购买香奈儿品牌的香水，价格是：\"</span> + price + <span style=\"max-width: 100%;color: rgb(166, 226, 46);line-height: 26px;\">\"元\"</span>);<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">}<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></span></code></pre><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">（3）定义<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「小红」</strong>代理类，她需要代购去售卖香奈儿香水，所以她是香奈儿香水提供商的代理对象，同样实现接口，并在内部保存对目标对象（香奈儿提供商）的引用，控制其它对象对目标对象的访问。</span></p><pre data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;max-width: 100%;font-size: 16px;letter-spacing: 1.5px;text-align: left;background-color: rgb(255, 255, 255);border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><code style=\"padding: 15px 16px 16px;max-width: 100%;overflow-x: auto;color: rgb(221, 221, 221);display: -webkit-box;font-family: \" operator mono consolas monaco menlo monospace rgb border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">public</span> <span style=\"max-width: 100%;line-height: 26px;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">class</span> <span style=\"max-width: 100%;font-weight: bold;color: white;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">XiaoHongSellProxy</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">implements</span> <span style=\"max-width: 100%;font-weight: bold;color: white;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">SellPerfume</span> </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">private</span> SellPerfume sellPerfumeFactory;<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;line-height: 26px;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">public</span> <span style=\"max-width: 100%;color: rgb(166, 226, 46);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">XiaoHongSellProxy</span><span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">(SellPerfume sellPerfumeFactory)</span> </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">this</span>.sellPerfumeFactory = sellPerfumeFactory;<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;color: rgb(117, 113, 94);line-height: 26px;\">@Override</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;line-height: 26px;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">public</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">void</span> <span style=\"max-width: 100%;color: rgb(166, 226, 46);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">sellPerfume</span><span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">(<span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">double</span> price)</span> </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        doSomethingBeforeSell(); <span style=\"max-width: 100%;color: rgb(117, 113, 94);line-height: 26px;\">// 前置增强</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        sellPerfumeFactory.sellPerfume(price);<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        doSomethingAfterSell(); <span style=\"max-width: 100%;color: rgb(117, 113, 94);line-height: 26px;\">// 后置增强</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;line-height: 26px;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">private</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">void</span> <span style=\"max-width: 100%;color: rgb(166, 226, 46);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">doSomethingBeforeSell</span><span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">()</span> </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        System.out.println(<span style=\"max-width: 100%;color: rgb(166, 226, 46);line-height: 26px;\">\"小红代理购买香水前的额外操作...\"</span>);<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;line-height: 26px;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">private</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">void</span> <span style=\"max-width: 100%;color: rgb(166, 226, 46);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">doSomethingAfterSell</span><span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">()</span> </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        System.out.println(<span style=\"max-width: 100%;color: rgb(166, 226, 46);line-height: 26px;\">\"小红代理购买香水后的额外操作...\"</span>);<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">}<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></span></code></pre><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">（4）小明是一个需求者，他需要去购买香水，只能通过小红去购买，所以他去找小红购买</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">1999.99</span></code><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">的香水。</span></p><pre data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;max-width: 100%;font-size: 16px;letter-spacing: 1.5px;text-align: left;background-color: rgb(255, 255, 255);border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><code style=\"padding: 15px 16px 16px;max-width: 100%;overflow-x: auto;color: rgb(221, 221, 221);display: -webkit-box;font-family: \" operator mono consolas monaco menlo monospace rgb border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">public</span> <span style=\"max-width: 100%;line-height: 26px;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">class</span> <span style=\"max-width: 100%;font-weight: bold;color: white;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">XiaoMing</span> </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;line-height: 26px;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">public</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">static</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">void</span> <span style=\"max-width: 100%;color: rgb(166, 226, 46);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">main</span><span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">(String[] args)</span> </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        ChanelFactory factory = <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">new</span> ChanelFactory();<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        XiaoHongSellProxy proxy = <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">new</span> XiaoHongSellProxy(factory);<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        proxy.sellPerfume(<span style=\"max-width: 100%;line-height: 26px;\">1999.99</span>);<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">}<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></span></code></pre><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">我们来看看运行结果，小红在向小明售卖香水前可以执行额外的其它操作，如果良心点的代购就会<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「打折、包邮···」</strong>，如果黑心点的代购就会<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「加手续费、售出不退还···」</strong>，是不是很刺激。</span></p><figure data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;max-width: 100%;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;letter-spacing: 1.5px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);display: flex;flex-direction: column;justify-content: center;align-items: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><img data-ratio=\"0.32409972299168976\" data-type=\"png\" data-w=\"722\" style=\"margin: 20px auto; border-radius: 6px; display: block; object-fit: contain; box-shadow: rgb(153, 153, 153) 2px 4px 7px; box-sizing: border-box !important; overflow-wrap: break-word !important; width: 677px !important; visibility: visible !important; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/libYRuvULTdWACbPmP3IthmrrO6mkE1YtHaTWmE77Sq3HVRRhq8R9bicK4ApO1ILVnNTlfhv7L3ByazpBpgkUKtA/640?wx_fmt=png\"></figure><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">我们来看看上面 4 个类组成的类图关系结构，可以发现<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「小红」</strong>和<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「香奈儿提供商」</strong>都实现了<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「售卖香水」</strong>这一接口，而小红内部增加了对提供商的引用，用于调用提供商的售卖香水功能。</span></p><figure data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;max-width: 100%;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;letter-spacing: 1.5px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);display: flex;flex-direction: column;justify-content: center;align-items: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><img data-ratio=\"0.4904580152671756\" data-type=\"png\" data-w=\"1048\" style=\"margin: 20px auto; border-radius: 6px; display: block; object-fit: contain; box-shadow: rgb(153, 153, 153) 2px 4px 7px; box-sizing: border-box !important; overflow-wrap: break-word !important; width: 677px !important; visibility: visible !important; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/libYRuvULTdWACbPmP3IthmrrO6mkE1YtM5QRqrSHz8WjdkFeDaLjvsYzbgOy7ZPrrDev557y2us6GVchAGeWdg/640?wx_fmt=png\"></figure><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">实现代理模式，需要走以下几个步骤：</span></p><ul data-tool=\"mdnice编辑器\" class=\"list-paddingleft-2\" style=\"margin-top: 8px;margin-bottom: 8px;padding-left: 25px;max-width: 100%;font-family: Optima-Regular, PingFangTC-light;letter-spacing: 1.5px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);font-size: 15px;color: rgb(89, 89, 89);list-style-type: circle;overflow-wrap: break-word !important;\"><li style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;box-sizing: border-box !important;overflow-wrap: break-word !important;font-size: 15px;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「定义真实对象和代理对象的公共接口」</strong>（售卖香水接口）</span></section></li><li style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;box-sizing: border-box !important;overflow-wrap: break-word !important;font-size: 15px;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「代理对象内部保存对真实目标对象的引用」</strong>（小红引用提供商）</span></section></li><li style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;box-sizing: border-box !important;overflow-wrap: break-word !important;font-size: 15px;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">访问者仅能通过代理对象访问真实目标对象，<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「不可直接访问目标对象」</strong>（小明只能通过小红去购买香水，不能直接到香奈儿提供商购买）</span></section></li></ul><blockquote data-tool=\"mdnice编辑器\" style=\"margin-top: 20px;margin-bottom: 20px;padding: 10px 10px 10px 20px;border-width: 1px;border-top-style: solid;border-right-style: solid;border-bottom-style: solid;border-color: rgb(27, 144, 13);color: rgb(89, 89, 89);font-size: 0.9em;max-width: 100%;box-sizing: inherit;font-family: Optima-Regular, PingFangTC-light;letter-spacing: 1.5px;text-align: left;white-space: normal;overflow: auto;text-size-adjust: 100%;line-height: 1.55em;border-radius: 6px;background: rgb(255, 255, 255);overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(116, 181, 109);line-height: 1;font-weight: 700;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">❝</span><p style=\"padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;letter-spacing: 2px;font-size: 16px;word-spacing: 2px;color: black;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">代理模式很容易产生错误思维的一个地方：代理对象并不是真正提供服务的一个对象，它只是替访问者访问目标对象的一个<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「中间人」</strong>，真正提供服务的还是目标对象，而代理对象的作用就是在目标对象提供服务之前和之后能够执行额外的逻辑。</span></p><p style=\"padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;letter-spacing: 2px;font-size: 16px;word-spacing: 2px;color: black;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">从故事来说，小红并不是真正卖香水的，卖香水的还是香奈儿提供商，而小红只不过是在让香奈儿卖香水之前和之后执行了一些自己额外加上去的操作。</span></p><span style=\"max-width: 100%;float: right;color: rgb(116, 181, 109);font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">❞</span></blockquote><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">讲完这个代理模式的代码实现，我们来系统地学习它究竟是如何定义的，以及实现它需要注意什么规范。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">代理模式的定义：<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「给目标对象提供一个代理对象，代理对象包含该目标对象，并控制对该目标对象的访问。」</strong></span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">代理模式的目的：</span></p><ul data-tool=\"mdnice编辑器\" class=\"list-paddingleft-2\" style=\"margin-top: 8px;margin-bottom: 8px;padding-left: 25px;max-width: 100%;font-family: Optima-Regular, PingFangTC-light;letter-spacing: 1.5px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);font-size: 15px;color: rgb(89, 89, 89);list-style-type: circle;overflow-wrap: break-word !important;\"><li style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;box-sizing: border-box !important;overflow-wrap: break-word !important;font-size: 15px;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">通过代理对象的隔离，可以在对目标对象访问前后<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「增加额外的业务逻辑，实现功能增强。」</strong></span></section></li><li style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;box-sizing: border-box !important;overflow-wrap: break-word !important;font-size: 15px;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">通过代理对象访问目标对象，可以<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「防止系统大量地直接对目标对象进行不正确地访问」</strong>，出现不可预测的后果</span></section></li></ul><h2 data-tool=\"mdnice编辑器\"><span style=\"font-size: 15px;color: rgb(123, 12, 0);\"><strong>静态代理与动态代理</strong></span></h2><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">你是否会有我一样的疑惑：代理为什么还要分静态和动态的？它们两个有啥不同吗？</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">很明显，所有人都会有这样的疑惑，我们先来看看它们的相同点：</span></p><ul data-tool=\"mdnice编辑器\" class=\"list-paddingleft-2\" style=\"margin-top: 8px;margin-bottom: 8px;padding-left: 25px;max-width: 100%;font-family: Optima-Regular, PingFangTC-light;letter-spacing: 1.5px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);font-size: 15px;color: rgb(89, 89, 89);list-style-type: circle;overflow-wrap: break-word !important;\"><li style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;box-sizing: border-box !important;overflow-wrap: break-word !important;font-size: 15px;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">都能够实现代理模式（这不废话吗...）</span></section></li><li style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;box-sizing: border-box !important;overflow-wrap: break-word !important;font-size: 15px;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">无论是静态代理还是动态代理，代理对象和目标对象都需要实现一个<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「公共接口」</strong></span></section></li></ul><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">重点当然是它们的不同之处，动态代理在静态代理的基础上做了改进，极大地提高了程序的<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「可维护性」</strong>和<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「可扩展性」</strong>。我先列出它们俩的不同之处，再详细解释为何静态代理不具备这两个特性：</span></p><ul data-tool=\"mdnice编辑器\" class=\"list-paddingleft-2\" style=\"margin-top: 8px;margin-bottom: 8px;padding-left: 25px;max-width: 100%;font-family: Optima-Regular, PingFangTC-light;letter-spacing: 1.5px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);font-size: 15px;color: rgb(89, 89, 89);list-style-type: circle;overflow-wrap: break-word !important;\"><li style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;box-sizing: border-box !important;overflow-wrap: break-word !important;font-size: 15px;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">动态代理产生代理对象的时机是<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「运行时动态生成」</strong>，它没有 Java 源文件，<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「直接生成字节码文件实例化代理对象」</strong>；而静态代理的代理对象，在<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「程序编译时」</strong>已经写好 Java 文件了，直接 new 一个代理对象即可。</span></section></li><li style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;box-sizing: border-box !important;overflow-wrap: break-word !important;font-size: 15px;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">动态代理比静态代理更加稳健，对程序的可维护性和可扩展性更加友好</span></section></li></ul><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">目前来看，代理对象小红已经能够代理购买香水了，但有一天，小红的另外一个朋友小何来了，<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「他想购买最纯正的法国红酒」</strong>，国内没有这样的购买渠道，小红刚巧也在法国，于是小何就想找小红帮他买红酒啦，这和小明找小红是一个道理的，都是想让小红做代理。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">但问题是：在程序中，小红只能代理购买香水，<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「如果要代理购买红酒」</strong>，要怎么做呢？</span></p><ul data-tool=\"mdnice编辑器\" class=\"list-paddingleft-2\" style=\"margin-top: 8px;margin-bottom: 8px;padding-left: 25px;max-width: 100%;font-family: Optima-Regular, PingFangTC-light;letter-spacing: 1.5px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);font-size: 15px;color: rgb(89, 89, 89);list-style-type: circle;overflow-wrap: break-word !important;\"><li style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;box-sizing: border-box !important;overflow-wrap: break-word !important;font-size: 15px;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><p style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">创建售卖红酒的接口</span></p></section></li><li style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;box-sizing: border-box !important;overflow-wrap: break-word !important;font-size: 15px;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><p style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">售卖红酒提供商和代理对象小红都需要实现该接口</span></p></section></li><li style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;box-sizing: border-box !important;overflow-wrap: break-word !important;font-size: 15px;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><p style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">小何访问小红，让小红卖给他红酒</span></p></section></li></ul><figure data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;max-width: 100%;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;letter-spacing: 1.5px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);display: flex;flex-direction: column;justify-content: center;align-items: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><img data-ratio=\"0.5425764192139738\" data-type=\"png\" data-w=\"916\" style=\"margin: 20px auto; border-radius: 6px; display: block; object-fit: contain; box-shadow: rgb(153, 153, 153) 2px 4px 7px; box-sizing: border-box !important; overflow-wrap: break-word !important; width: 677px !important; visibility: visible !important; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/libYRuvULTdWACbPmP3IthmrrO6mkE1YtAQ6XCSL9wCEXH2jSAgAhlMjsnhL7YBHbBuf2n4Avmh5wXhuM9xmjhw/640?wx_fmt=png\"></figure><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">OK，事已至此，代码就不重复写了，我们来探讨一下，面对这种新增的场景，上面的这种实现方法有没有什么缺陷呢？</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">我们不得不提的是软件工程中的<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「开闭原则」</strong></span></p><blockquote data-tool=\"mdnice编辑器\" style=\"margin-top: 20px;margin-bottom: 20px;padding: 10px 10px 10px 20px;border-width: 1px;border-top-style: solid;border-right-style: solid;border-bottom-style: solid;border-color: rgb(27, 144, 13);color: rgb(89, 89, 89);font-size: 0.9em;max-width: 100%;box-sizing: inherit;font-family: Optima-Regular, PingFangTC-light;letter-spacing: 1.5px;text-align: left;white-space: normal;overflow: auto;text-size-adjust: 100%;line-height: 1.55em;border-radius: 6px;background: rgb(255, 255, 255);overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(116, 181, 109);line-height: 1;font-weight: 700;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">❝</span><p style=\"padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;letter-spacing: 2px;font-size: 16px;word-spacing: 2px;color: black;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">开闭原则：在编写程序的过程中，软件的所有对象应该是对扩展是开放的，而对修改是关闭的</span></p><span style=\"max-width: 100%;float: right;color: rgb(116, 181, 109);font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">❞</span></blockquote><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">静态代理违反了开闭原则，原因是：面对新的需求时，需要修改代理类，增加实现新的接口和方法，导致代理类越来越庞大，变得难以维护。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">虽然说目前代理类只是实现了2个接口，**如果日后小红不只是代理售卖红酒，还需要代理售卖电影票、代购日本寿司······**实现的接口会变得越来越多，内部的结构变得越来越复杂，<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「整个类显得愈发臃肿」</strong>，变得不可维护，之后的扩展也会成问题，只要任意一个接口有改动，就会牵扯到这个代理类，维护的代价很高。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「所以，为了提高类的可扩展性和可维护性，满足开闭原则，Java 提供了动态代理机制。」</strong></span></p><h2 data-tool=\"mdnice编辑器\"><span style=\"font-size: 15px;color: rgb(123, 12, 0);\"><strong>常见的动态代理实现</strong></span></h2><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">动态代理最重要的当然是<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「动态」</strong>两个字，学习动态代理的过程，最重要的就是理解何为动态，话不多说，马上开整。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">我们来明确一点：<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「动态代理解决的问题是面对新的需求时，不需要修改代理对象的代码，只需要新增接口和真实对象，在客户端调用即可完成新的代理。」</strong></span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">这样做的目的：满足软件工程的开闭原则，提高类的可维护性和可扩展性。</span></p><h3 data-tool=\"mdnice编辑器\" style=\"margin-top: 20px;margin-bottom: 20px;font-weight: bold;font-size: 17px;max-width: 100%;font-family: Optima-Regular, PingFangTC-light;letter-spacing: 1.5px;white-space: normal;background-color: rgb(255, 255, 255);color: black;text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-family: Arial, Helvetica, sans-serif;padding-bottom: 2px;max-width: 100%;color: rgb(43, 43, 43);font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">JDK Proxy</span></h3><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">JDK Proxy 是 JDK 提供的一个动态代理机制，它涉及到两个核心类，分别是</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">Proxy</span></code><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">和</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">InvocationHandler</span></code><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">，我们先来了解如何使用它们。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">以小红代理卖香水的故事为例，香奈儿香水提供商依旧是真实对象，实现了</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">SellPerfume</span></code><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">接口，这里不再重新写了，重点是<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「小红代理」</strong>，这里的代理对象不再是小红一个人，而是一个<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「代理工厂」</strong>，里面会有许多的代理对象。我画了一幅图，你看了之后会很好理解：</span></p><figure data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;max-width: 100%;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;letter-spacing: 1.5px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);display: flex;flex-direction: column;justify-content: center;align-items: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><img data-ratio=\"0.4396551724137931\" data-type=\"png\" data-w=\"1044\" style=\"margin: 20px auto; border-radius: 6px; display: block; object-fit: contain; box-shadow: rgb(153, 153, 153) 2px 4px 7px; box-sizing: border-box !important; overflow-wrap: break-word !important; width: 677px !important; visibility: visible !important; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/libYRuvULTdWACbPmP3IthmrrO6mkE1YtZExiaicsjj4mDt60S7HDonzs6NjDBULA7D4wVtVssQnpBWdVFmBIrCtA/640?wx_fmt=png\"></figure><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">小明来到代理工厂，需要购买一款法国在售的香奈儿香水，那么工厂就会**找一个可以实际的代理对象（动态实例化）**分配给小明，例如小红或者小花，让该代理对象完成小明的需求。<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「该代理工厂含有无穷无尽的代理对象可以分配，且每个对象可以代理的事情可以根据程序的变化而动态变化，无需修改代理工厂。」</strong></span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">如果有一天小明需要招待一个可以<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「代购红酒」</strong>的代理对象，该代理工厂依旧可以满足他的需求，无论日后需要什么代理，都可以满足，是不是觉得很神奇？我们来学习如何使用它。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">我们看一下动态代理的 UML 类图结构长什么样子。</span></p><figure data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;max-width: 100%;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;letter-spacing: 1.5px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);display: flex;flex-direction: column;justify-content: center;align-items: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><img data-ratio=\"0.48512173128944996\" data-type=\"png\" data-w=\"1109\" style=\"margin: 20px auto; border-radius: 6px; display: block; object-fit: contain; box-shadow: rgb(153, 153, 153) 2px 4px 7px; box-sizing: border-box !important; overflow-wrap: break-word !important; width: 677px !important; visibility: visible !important; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/libYRuvULTdWACbPmP3IthmrrO6mkE1Yt8tTDuq7wgibbYD7J3nqmgroIympNzGNXxichiaPj1Y66PmP98FIfT78Kw/640?wx_fmt=png\"></figure><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">可以看到和静态代理区别不大，唯一的变动是代理对象，我做了标注：<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「由代理工厂生产」</strong>。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">这句话的意思是：<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「代理对象是在程序运行过程中，由代理工厂动态生成，代理对象本身不存在 Java 源文件」</strong>。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">那么，我们的关注点有</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">2</span></code><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">个：</span></p><ul data-tool=\"mdnice编辑器\" class=\"list-paddingleft-2\" style=\"margin-top: 8px;margin-bottom: 8px;padding-left: 25px;max-width: 100%;font-family: Optima-Regular, PingFangTC-light;letter-spacing: 1.5px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);font-size: 15px;color: rgb(89, 89, 89);list-style-type: circle;overflow-wrap: break-word !important;\"><li style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;box-sizing: border-box !important;overflow-wrap: break-word !important;font-size: 15px;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">如何实现一个代理工厂</span></section></li><li style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;box-sizing: border-box !important;overflow-wrap: break-word !important;font-size: 15px;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">如何通过代理工厂动态生成代理对象</span></section></li></ul><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">首先，代理工厂需要实现</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">InvocationHanlder</span></code><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">接口并实现其</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">invoke()</span></code><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">方法。</span></p><pre data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;max-width: 100%;font-size: 16px;letter-spacing: 1.5px;text-align: left;background-color: rgb(255, 255, 255);border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><code style=\"padding: 15px 16px 16px;max-width: 100%;overflow-x: auto;color: rgb(221, 221, 221);display: -webkit-box;font-family: \" operator mono consolas monaco menlo monospace rgb border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">public</span> <span style=\"max-width: 100%;line-height: 26px;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">class</span> <span style=\"max-width: 100%;font-weight: bold;color: white;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">SellProxyFactory</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">implements</span> <span style=\"max-width: 100%;font-weight: bold;color: white;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">InvocationHandler</span> </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"> <span style=\"max-width: 100%;color: rgb(117, 113, 94);line-height: 26px;\">/** 代理的真实对象 */</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">private</span> Object realObject;<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;line-height: 26px;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">public</span> <span style=\"max-width: 100%;color: rgb(166, 226, 46);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">SellProxyFactory</span><span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">(Object realObject)</span> </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">this</span>.realObject = realObject;<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;color: rgb(117, 113, 94);line-height: 26px;\">@Override</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;line-height: 26px;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">public</span> Object <span style=\"max-width: 100%;color: rgb(166, 226, 46);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">invoke</span><span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">(Object proxy, Method method, Object[] args)</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">throws</span> Throwable </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        doSomethingBefore();<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        Object obj = method.invoke(realObject, args);<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        doSomethingAfter();<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">return</span> obj;<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;line-height: 26px;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">private</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">void</span> <span style=\"max-width: 100%;color: rgb(166, 226, 46);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">doSomethingAfter</span><span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">()</span> </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        System.out.println(<span style=\"max-width: 100%;color: rgb(166, 226, 46);line-height: 26px;\">\"执行代理后的额外操作...\"</span>);<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;line-height: 26px;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">private</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">void</span> <span style=\"max-width: 100%;color: rgb(166, 226, 46);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">doSomethingBefore</span><span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">()</span> </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        System.out.println(<span style=\"max-width: 100%;color: rgb(166, 226, 46);line-height: 26px;\">\"执行代理前的额外操作...\"</span>);<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">}<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></span></code></pre><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">invoke() 方法有</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">3</span></code><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">个参数：</span></p><ul data-tool=\"mdnice编辑器\" class=\"list-paddingleft-2\" style=\"margin-top: 8px;margin-bottom: 8px;padding-left: 25px;max-width: 100%;font-family: Optima-Regular, PingFangTC-light;letter-spacing: 1.5px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);font-size: 15px;color: rgb(89, 89, 89);list-style-type: circle;overflow-wrap: break-word !important;\"><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">Object proxy</span></code><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">：代理对象</span></section></li><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">Method method</span></code><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">：真正执行的方法</span></section></li><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">Object[] agrs</span></code><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">：调用第二个参数 method 时传入的参数列表值</span></section></li></ul><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">invoke() 方法是一个代理方法，也就是说最后客户端请求代理时，执行的就是该方法。代理工厂类到这里为止已经结束了，我们接下来看第二点：<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「如何通过代理工厂动态生成代理对象」</strong>。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">生成代理对象需要用到</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">Proxy</span></code><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">类，它可以帮助我们生成任意一个代理对象，里面提供一个静态方法</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">newProxyInstance</span></code><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">。</span></p><pre data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;max-width: 100%;font-size: 16px;letter-spacing: 1.5px;text-align: left;background-color: rgb(255, 255, 255);border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><code style=\"padding: 15px 16px 16px;max-width: 100%;overflow-x: auto;color: rgb(221, 221, 221);display: -webkit-box;font-family: \" operator mono consolas monaco menlo monospace rgb border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;box-sizing: border-box !important;overflow-wrap: break-word !important;\"> Proxy.newProxyInstance(ClassLoader loader, Class&gt;[] interfaces, InvocationHandler h);<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></span></code></pre><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">实例化代理对象时，需要传入</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">3</span></code><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">个参数：</span></p><ul data-tool=\"mdnice编辑器\" class=\"list-paddingleft-2\" style=\"margin-top: 8px;margin-bottom: 8px;padding-left: 25px;max-width: 100%;font-family: Optima-Regular, PingFangTC-light;letter-spacing: 1.5px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);font-size: 15px;color: rgb(89, 89, 89);list-style-type: circle;overflow-wrap: break-word !important;\"><li style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;box-sizing: border-box !important;overflow-wrap: break-word !important;font-size: 15px;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">ClassLoader loader：加载动态代理类的类加载器</span></section></li><li style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;box-sizing: border-box !important;overflow-wrap: break-word !important;font-size: 15px;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">Class&gt;[] interfaces：代理类实现的接口，可以传入多个接口</span></section></li><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">InvocationHandler h：指定代理类的<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「调用处理程序」</strong>，即调用接口中的方法时，会找到该代理工厂</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">h</span></code><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">，执行</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">invoke()</span></code><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">方法</span></section></li></ul><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">我们在客户端请求代理时，就需要用到上面这个方法。</span></p><pre data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;max-width: 100%;font-size: 16px;letter-spacing: 1.5px;text-align: left;background-color: rgb(255, 255, 255);border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><code style=\"padding: 15px 16px 16px;max-width: 100%;overflow-x: auto;color: rgb(221, 221, 221);display: -webkit-box;font-family: \" operator mono consolas monaco menlo monospace rgb border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">public</span> <span style=\"max-width: 100%;line-height: 26px;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">class</span> <span style=\"max-width: 100%;font-weight: bold;color: white;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">XiaoMing</span> </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;line-height: 26px;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">public</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">static</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">void</span> <span style=\"max-width: 100%;color: rgb(166, 226, 46);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">main</span><span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">(String[] args)</span> </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        ChanelFactory chanelFactory = <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">new</span> ChanelFactory();<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        SellProxyFactory sellProxyFactory = <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">new</span> SellProxyFactory(chanelFactory);<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        SellPerfume sellPerfume = (SellPerfume) Proxy.newProxyInstance(chanelFactory.getClass().getClassLoader(),<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">                chanelFactory.getClass().getInterfaces(),<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">                sellProxyFactory);<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        sellPerfume.sellPerfume(<span style=\"max-width: 100%;line-height: 26px;\">1999.99</span>);<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">}<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></span></code></pre><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">执行结果和静态代理的结果相同，但二者的思想是不一样的，一个是静态，一个是动态。那又如何体现出动态代理的优势呢？别急，往下看就知道了。</span></p><blockquote data-tool=\"mdnice编辑器\" style=\"margin-top: 20px;margin-bottom: 20px;padding: 10px 10px 10px 20px;border-width: 1px;border-top-style: solid;border-right-style: solid;border-bottom-style: solid;border-color: rgb(27, 144, 13);color: rgb(89, 89, 89);font-size: 0.9em;max-width: 100%;box-sizing: inherit;font-family: Optima-Regular, PingFangTC-light;letter-spacing: 1.5px;text-align: left;white-space: normal;overflow: auto;text-size-adjust: 100%;line-height: 1.55em;border-radius: 6px;background: rgb(255, 255, 255);overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(116, 181, 109);line-height: 1;font-weight: 700;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">❝</span><p style=\"padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;letter-spacing: 2px;font-size: 16px;word-spacing: 2px;color: black;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">注意看下图，相比</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">静态代理</span></code><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">的前置增强和后置增强，少了<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「小红」</strong>二字，实际上代理工厂分配的代理对象是随机的，不会针对某一个具体的代理对象，所以每次生成的代理对象都不一样，也就不确定是不是小红了，但是能够唯一确定的是，<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「这个代理对象能和小红一样帮小明买到香水！」</strong></span></p><span style=\"max-width: 100%;float: right;color: rgb(116, 181, 109);font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">❞</span></blockquote><figure data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;max-width: 100%;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;letter-spacing: 1.5px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);display: flex;flex-direction: column;justify-content: center;align-items: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><img data-ratio=\"0.37367021276595747\" data-type=\"png\" data-w=\"752\" style=\"margin: 20px auto; border-radius: 6px; display: block; object-fit: contain; box-shadow: rgb(153, 153, 153) 2px 4px 7px; box-sizing: border-box !important; overflow-wrap: break-word !important; width: 677px !important; visibility: visible !important; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/libYRuvULTdWACbPmP3IthmrrO6mkE1YtfDAz5kTVr6ADQdriam6LhzD4Bttvg2vGzc69gpvYiclzfegVibqCntkHA/640?wx_fmt=png\"></figure><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">按照之前的故事线发展，小红去代理红酒，而<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「小明又想买法国的名牌红酒」</strong>，所以去找代理工厂，让它再分配一个人帮小明买红酒，代理工厂说：“当然没问题！我们是专业的！等着！”</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">我们需要实现两个类：红酒提供商类 和 售卖红酒接口。</span></p><pre data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;max-width: 100%;font-size: 16px;letter-spacing: 1.5px;text-align: left;background-color: rgb(255, 255, 255);border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><code style=\"padding: 15px 16px 16px;max-width: 100%;overflow-x: auto;color: rgb(221, 221, 221);display: -webkit-box;font-family: \" operator mono consolas monaco menlo monospace rgb border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(117, 113, 94);line-height: 26px;\">/** 售卖红酒接口 */</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">public</span> <span style=\"max-width: 100%;line-height: 26px;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">interface</span> <span style=\"max-width: 100%;font-weight: bold;color: white;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">SellWine</span> </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;line-height: 26px;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">void</span> <span style=\"max-width: 100%;color: rgb(166, 226, 46);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">sellWine</span><span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">(<span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">double</span> price)</span></span>;<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">}<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(117, 113, 94);line-height: 26px;\">/** 红酒供应商 */</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">public</span> <span style=\"max-width: 100%;line-height: 26px;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">class</span> <span style=\"max-width: 100%;font-weight: bold;color: white;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">RedWineFactory</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">implements</span> <span style=\"max-width: 100%;font-weight: bold;color: white;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">SellWine</span> </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;color: rgb(117, 113, 94);line-height: 26px;\">@Override</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;line-height: 26px;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">public</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">void</span> <span style=\"max-width: 100%;color: rgb(166, 226, 46);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">sellWine</span><span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">(<span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">double</span> price)</span> </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        System.out.println(<span style=\"max-width: 100%;color: rgb(166, 226, 46);line-height: 26px;\">\"成功售卖一瓶红酒，价格：\"</span> + price + <span style=\"max-width: 100%;color: rgb(166, 226, 46);line-height: 26px;\">\"元\"</span>);    <br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">}<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></span></code></pre><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">然后我们的小明在请求代理工厂时，就可以<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「实例化一个可以售卖红酒的代理」</strong>了。</span></p><pre data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;max-width: 100%;font-size: 16px;letter-spacing: 1.5px;text-align: left;background-color: rgb(255, 255, 255);border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><code style=\"padding: 15px 16px 16px;max-width: 100%;overflow-x: auto;color: rgb(221, 221, 221);display: -webkit-box;font-family: \" operator mono consolas monaco menlo monospace rgb border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">public</span> <span style=\"max-width: 100%;line-height: 26px;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">class</span> <span style=\"max-width: 100%;font-weight: bold;color: white;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">XiaoMing</span> </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;line-height: 26px;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">public</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">static</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">void</span> <span style=\"max-width: 100%;color: rgb(166, 226, 46);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">main</span><span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">(String[] args)</span> </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        <span style=\"max-width: 100%;color: rgb(117, 113, 94);line-height: 26px;\">// 实例化一个红酒销售商</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        RedWineFactory redWineFactory = <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">new</span> RedWineFactory();<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        <span style=\"max-width: 100%;color: rgb(117, 113, 94);line-height: 26px;\">// 实例化代理工厂，传入红酒销售商引用控制对其的访问</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        SellProxyFactory sellProxyFactory = <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">new</span> SellProxyFactory(redWineFactory);<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        <span style=\"max-width: 100%;color: rgb(117, 113, 94);line-height: 26px;\">// 实例化代理对象，该对象可以代理售卖红酒</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        SellWine sellWineProxy = (SellWine) Proxy.newProxyInstance(redWineFactory.getClass().getClassLoader(),<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">                redWineFactory.getClass().getInterfaces(),<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">                sellProxyFactory);<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        <span style=\"max-width: 100%;color: rgb(117, 113, 94);line-height: 26px;\">// 代理售卖红酒</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        sellWineProxy.sellWine(<span style=\"max-width: 100%;line-height: 26px;\">1999.99</span>);<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">}<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></span></code></pre><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">期待一下执行结果，你会很惊喜地发现，居然也能够代理售卖红酒了，但是我们<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「没有修改代理工厂」</strong>。</span></p><figure data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;max-width: 100%;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;letter-spacing: 1.5px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);display: flex;flex-direction: column;justify-content: center;align-items: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><img data-ratio=\"0.36486486486486486\" data-type=\"png\" data-w=\"666\" style=\"margin: 20px auto; border-radius: 6px; display: block; object-fit: contain; box-shadow: rgb(153, 153, 153) 2px 4px 7px; box-sizing: border-box !important; overflow-wrap: break-word !important; width: 666px !important; visibility: visible !important; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/libYRuvULTdWACbPmP3IthmrrO6mkE1YtQichr1EH18BVNtTRXSrAYnjKmyIUnUVuDQPxcF1E1PdZTR9w0d8icS4Q/640?wx_fmt=png\"></figure><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">回顾一下我们新增红酒代理功能时，需要</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">2</span></code><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">个步骤：</span></p><ul data-tool=\"mdnice编辑器\" class=\"list-paddingleft-2\" style=\"margin-top: 8px;margin-bottom: 8px;padding-left: 25px;max-width: 100%;font-family: Optima-Regular, PingFangTC-light;letter-spacing: 1.5px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);font-size: 15px;color: rgb(89, 89, 89);list-style-type: circle;overflow-wrap: break-word !important;\"><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">创建新的红酒提供商</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">SellWineFactory</span></code><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">和售卖红酒接口</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">SellWine</span></code></section></li><li style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;box-sizing: border-box !important;overflow-wrap: break-word !important;font-size: 15px;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">在客户端实例化一个代理对象，然后向该代理对象购买红酒</span></section></li></ul><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">再回想<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「开闭原则：面向扩展开放，面向修改关闭」</strong>。动态代理正是满足了这一重要原则，在面对功能需求扩展时，只需要关注扩展的部分，不需要修改系统中原有的代码。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">如果感兴趣想深究的朋友，把注意力放在</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">Proxy.newProxyInstance()</span></code><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">这个方法上，这是整个 JDK 动态代理起飞的一个方法。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">讲到这里，JDK 提供的动态代理已经到尾声了，我们来总结一下 JDK 的动态代理：</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">（1）JDK 动态代理的使用方法</span></p><ul data-tool=\"mdnice编辑器\" class=\"list-paddingleft-2\" style=\"margin-top: 8px;margin-bottom: 8px;padding-left: 25px;max-width: 100%;font-family: Optima-Regular, PingFangTC-light;letter-spacing: 1.5px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);font-size: 15px;color: rgb(89, 89, 89);list-style-type: circle;overflow-wrap: break-word !important;\"><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">代理工厂需要实现 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">InvocationHandler</span></code><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">接口，调用代理方法时会转向执行</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">invoke()</span></code><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">方法</span></section></li><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">生成代理对象需要使用</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">Proxy</span></code><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">对象中的</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">newProxyInstance()</span></code><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">方法，返回对象可强转成传入的其中一个接口，然后调用接口方法即可实现代理</span></section></li></ul><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">（2）JDK 动态代理的特点</span></p><ul data-tool=\"mdnice编辑器\" class=\"list-paddingleft-2\" style=\"margin-top: 8px;margin-bottom: 8px;padding-left: 25px;max-width: 100%;font-family: Optima-Regular, PingFangTC-light;letter-spacing: 1.5px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);font-size: 15px;color: rgb(89, 89, 89);list-style-type: circle;overflow-wrap: break-word !important;\"><li style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;box-sizing: border-box !important;overflow-wrap: break-word !important;font-size: 15px;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">目标对象强制需要实现一个接口，否则无法使用 JDK 动态代理</span></section></li></ul><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「（以下为扩展内容，如果不想看可跳过）」</strong></span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">Proxy.newProxyInstance() 是生成动态代理对象的关键，我们可来看看它里面到底干了些什么，我把重要的代码提取出来，一些对分析无用的代码就省略掉了。</span></p><pre data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;max-width: 100%;font-size: 16px;letter-spacing: 1.5px;text-align: left;background-color: rgb(255, 255, 255);border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><code style=\"padding: 15px 16px 16px;max-width: 100%;overflow-x: auto;color: rgb(221, 221, 221);display: -webkit-box;font-family: \" operator mono consolas monaco menlo monospace rgb border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">private</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">static</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">final</span> Class&gt;[] constructorParams ={ InvocationHandler.class };<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;line-height: 26px;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">public</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">static</span> Object <span style=\"max-width: 100%;color: rgb(166, 226, 46);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">newProxyInstance</span><span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">(ClassLoader loader,<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">                                          Class&gt;[] interfaces,<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">                                          InvocationHandler h)</span> </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;color: rgb(117, 113, 94);line-height: 26px;\">// 获取代理类的 Class 对象</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    Class&gt; cl = getProxyClass0(loader, intfs);<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;color: rgb(117, 113, 94);line-height: 26px;\">// 获取代理对象的显示构造器，参数类型是 InvocationHandler</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">final</span> Constructor&gt; cons = cl.getConstructor(constructorParams);<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;color: rgb(117, 113, 94);line-height: 26px;\">// 反射，通过构造器实例化动态代理对象</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">return</span> cons.newInstance(<span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">new</span> Object[]{h});<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">}<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></span></code></pre><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">我们看到第 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">6</span></code><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"> 行获取了一个动态代理对象，那么是如何生成的呢？接着往下看。</span></p><pre data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;max-width: 100%;font-size: 16px;letter-spacing: 1.5px;text-align: left;background-color: rgb(255, 255, 255);border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><code style=\"padding: 15px 16px 16px;max-width: 100%;overflow-x: auto;color: rgb(221, 221, 221);display: -webkit-box;font-family: \" operator mono consolas monaco menlo monospace rgb border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">private</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">static</span> Class&gt; getProxyClass0(ClassLoader loader,<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">                                       Class&gt;... interfaces) {<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;color: rgb(117, 113, 94);line-height: 26px;\">// 去代理类对象缓存中获取代理类的 Class 对象</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">return</span> proxyClassCache.get(loader, interfaces);<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">}<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></span></code></pre><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">发现里面用到一个缓存 <strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「proxyClassCache」</strong>，从结构来看类似于是一个 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">map</span></code><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">结构，根据类加载器</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">loader</span></code><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">和真实对象实现的接口</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">interfaces</span></code><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">查找是否有对应的 Class 对象，我们接着往下看 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">get()</span></code><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"> 方法。</span></p><pre data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;max-width: 100%;font-size: 16px;letter-spacing: 1.5px;text-align: left;background-color: rgb(255, 255, 255);border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><code style=\"padding: 15px 16px 16px;max-width: 100%;overflow-x: auto;color: rgb(221, 221, 221);display: -webkit-box;font-family: \" operator mono consolas monaco menlo monospace rgb border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;box-sizing: border-box !important;overflow-wrap: break-word !important;\"> <span style=\"max-width: 100%;line-height: 26px;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">public</span> V <span style=\"max-width: 100%;color: rgb(166, 226, 46);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">get</span><span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">(K key, P parameter)</span> </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">     <span style=\"max-width: 100%;color: rgb(117, 113, 94);line-height: 26px;\">// 先从缓存中查询是否能根据 key 和 parameter 查询到 Class 对象</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">     <span style=\"max-width: 100%;color: rgb(117, 113, 94);line-height: 26px;\">// ...</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">     <span style=\"max-width: 100%;color: rgb(117, 113, 94);line-height: 26px;\">// 生成一个代理类</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">     Object subKey = Objects.requireNonNull(subKeyFactory.apply(key, parameter));<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"> }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></span></code></pre><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">在 get() 方法中，如果没有从缓存中获取到 Class 对象，则需要利用<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「subKeyFactory」</strong> 去实例化一个动态代理对象，而在 <strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「Proxy」</strong> 类中包含一个 <strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「ProxyClassFactory」</strong> 内部类，由它来创建一个动态代理类，所以我们接着去看 ProxyClassFactory 中的 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">apply()</span></code><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"> 方法。</span></p><pre data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;max-width: 100%;font-size: 16px;letter-spacing: 1.5px;text-align: left;background-color: rgb(255, 255, 255);border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><code style=\"padding: 15px 16px 16px;max-width: 100%;overflow-x: auto;color: rgb(221, 221, 221);display: -webkit-box;font-family: \" operator mono consolas monaco menlo monospace rgb border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">private</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">static</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">final</span> <span style=\"max-width: 100%;line-height: 26px;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">class</span> <span style=\"max-width: 100%;font-weight: bold;color: white;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">ProxyClassFactory</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">implements</span> <span style=\"max-width: 100%;font-weight: bold;color: white;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">BiFunction</span>&lt;<span style=\"max-width: 100%;font-weight: bold;color: white;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">ClassLoader</span>, <span style=\"max-width: 100%;font-weight: bold;color: white;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">Class</span>&gt;[], <span style=\"max-width: 100%;font-weight: bold;color: white;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">Class</span>&gt;&gt; </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;color: rgb(117, 113, 94);line-height: 26px;\">// 非常重要，这就是我们看到的动态代理的对象名前缀！</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">private</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">static</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">final</span> String proxyClassNamePrefix = <span style=\"max-width: 100%;color: rgb(166, 226, 46);line-height: 26px;\">\"$Proxy\"</span>;<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;color: rgb(117, 113, 94);line-height: 26px;\">@Override</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">public</span> Class&gt; apply(ClassLoader loader, Class&gt;[] interfaces) {<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        Map<class>, Boolean&gt; interfaceSet = <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">new</span> IdentityHashMap&lt;&gt;(interfaces.length);<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        <span style=\"max-width: 100%;color: rgb(117, 113, 94);line-height: 26px;\">// 一些状态校验</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">  <br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        <span style=\"max-width: 100%;color: rgb(117, 113, 94);line-height: 26px;\">// 计数器，该计数器记录了当前已经实例化多少个代理对象</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">long</span> num = nextUniqueNumber.getAndIncrement();<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        <span style=\"max-width: 100%;color: rgb(117, 113, 94);line-height: 26px;\">// 动态代理对象名拼接！包名 + \"$Proxy\" + 数字</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        String proxyName = proxyPkg + proxyClassNamePrefix + num;<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        <span style=\"max-width: 100%;color: rgb(117, 113, 94);line-height: 26px;\">// 生成字节码文件，返回一个字节数组</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">byte</span>[] proxyClassFile = ProxyGenerator.generateProxyClass(<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">            proxyName, interfaces, accessFlags);<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">try</span> {<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">            <span style=\"max-width: 100%;color: rgb(117, 113, 94);line-height: 26px;\">// 利用字节码文件创建该字节码的 Class 类对象</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">            <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">return</span> defineClass0(loader, proxyName,<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">                                proxyClassFile, <span style=\"max-width: 100%;line-height: 26px;\">0</span>, proxyClassFile.length);<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        } <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">catch</span> (ClassFormatError e) {<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">            <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">throw</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">new</span> IllegalArgumentException(e.toString());<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">}<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></class></span></code></pre><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">apply() 方法中注意有<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「两个非常重要的方法」</strong>：</span></p><ul data-tool=\"mdnice编辑器\" class=\"list-paddingleft-2\" style=\"margin-top: 8px;margin-bottom: 8px;padding-left: 25px;max-width: 100%;font-family: Optima-Regular, PingFangTC-light;letter-spacing: 1.5px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);font-size: 15px;color: rgb(89, 89, 89);list-style-type: circle;overflow-wrap: break-word !important;\"><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「ProxyGenerator.generateProxyClass()」</strong>：它是生成字节码文件的方法，它返回了一个字节数组，字节码文件本质上就是一个字节数组，所以 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">proxyClassFile</span></code><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">数组就是一个字节码文件</span></section></li><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「defineClass0()」</strong>：生成字节码文件的 Class 对象，它是一个 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">native</span></code><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"> 本地方法，调用操作系统底层的方法创建类对象</span></section></li></ul><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">而 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">proxyName</span></code><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"> 是代理对象的名字，我们可以看到它利用了<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「proxyClassNamePrefix + 计数器」</strong> 拼接成一个新的名字。所以在 DEBUG 时，停留在代理对象变量上，你会发现变量名是</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">$Proxy0</span></code><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">。</span></p><figure data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;max-width: 100%;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;letter-spacing: 1.5px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);display: flex;flex-direction: column;justify-content: center;align-items: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><img data-ratio=\"0.3632404181184669\" data-type=\"png\" data-w=\"1148\" style=\"margin: 20px auto; border-radius: 6px; display: block; object-fit: contain; box-shadow: rgb(153, 153, 153) 2px 4px 7px; box-sizing: border-box !important; overflow-wrap: break-word !important; width: 677px !important; visibility: visible !important; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/libYRuvULTdWACbPmP3IthmrrO6mkE1YtHRibqJr848icNKwVmBKSgw8CxNibMSibtL7cOwHRTDNDDGcphp9KSiaTDiaQ/640?wx_fmt=png\"></figure><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">到了这里，源码分析完了，是不是感觉被掏空了？哈哈哈哈，其实我当时也有这种感觉，不过现在你也感觉到，JDK 的动态代理其实并不是特别复杂吧（只要你有毅力）</span></p><h3 data-tool=\"mdnice编辑器\" style=\"margin-top: 20px;margin-bottom: 20px;font-weight: bold;font-size: 17px;max-width: 100%;font-family: Optima-Regular, PingFangTC-light;letter-spacing: 1.5px;white-space: normal;background-color: rgb(255, 255, 255);color: black;text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-family: Arial, Helvetica, sans-serif;padding-bottom: 2px;max-width: 100%;color: rgb(43, 43, 43);font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">CGLIB</span></h3><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">CGLIB（Code generation Library） 不是 JDK 自带的动态代理，它需要导入第三方依赖，它是一个字节码生成类库，能够在运行时动态生成代理类对 <strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「Java类 和 Java接口」</strong> 扩展。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">CGLIB不仅能够为 Java接口 做代理，而且<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「能够为普通的 Java类 做代理」</strong>，而 JDK Proxy <strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「只能为实现了接口」</strong>的 Java类 做代理，所以 CGLIB 为 Java 的代理做了很好的扩展。<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「如果需要代理的类没有实现接口，可以选择 Cglib 作为实现动态代理的工具。」</strong></span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">废话太多，一句话概括：<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「CGLIB 可以代理没有实现接口的 Java 类」</strong></span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">下面我们来学习它的使用方法，以<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「小明找代理工厂买法国香水」</strong>这个故事背景为例子。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">（1）导入依赖</span></p><pre data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;max-width: 100%;font-size: 16px;letter-spacing: 1.5px;text-align: left;background-color: rgb(255, 255, 255);border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><code style=\"padding: 15px 16px 16px;max-width: 100%;overflow-x: auto;color: rgb(221, 221, 221);display: -webkit-box;font-family: \" operator mono consolas monaco menlo monospace rgb border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><dependency><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <groupid>cglib</groupid><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <artifactid>cglib-nodep</artifactid><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <version><span style=\"max-width: 100%;line-height: 26px;\">3.3</span>.0</version><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <scope>test</scope><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></dependency><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></span></code></pre><blockquote data-tool=\"mdnice编辑器\" style=\"margin-top: 20px;margin-bottom: 20px;padding: 10px 10px 10px 20px;border-width: 1px;border-top-style: solid;border-right-style: solid;border-bottom-style: solid;border-color: rgb(27, 144, 13);color: rgb(89, 89, 89);font-size: 0.9em;max-width: 100%;box-sizing: inherit;font-family: Optima-Regular, PingFangTC-light;letter-spacing: 1.5px;text-align: left;white-space: normal;overflow: auto;text-size-adjust: 100%;line-height: 1.55em;border-radius: 6px;background: rgb(255, 255, 255);overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(116, 181, 109);line-height: 1;font-weight: 700;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">❝</span><p style=\"padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;letter-spacing: 2px;font-size: 16px;word-spacing: 2px;color: black;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">还有另外一个 CGLIB 包，二者的区别是带有</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">-nodep</span></code><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">的依赖内部已经包括了</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">ASM</span></code><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">字节码框架的相关代码，无需额外依赖</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">ASM</span></code></p><span style=\"max-width: 100%;float: right;color: rgb(116, 181, 109);font-family: Arial, Helvetica, sans-serif;box-sizing: border-box !important;overflow-wrap: break-word !important;\">❞</span></blockquote><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">（2）CGLIB 代理中有两个核心的类：</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">MethodInterceptor</span></code><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">接口 和 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">Enhancer</span></code><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">类，前者是实现一个代理工厂的根接口，后者是创建动态代理对象的类，在这里我再贴一次故事的结构图，帮助你们理解。</span></p><figure data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;max-width: 100%;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;letter-spacing: 1.5px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);display: flex;flex-direction: column;justify-content: center;align-items: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><img data-ratio=\"0.48512173128944996\" data-type=\"png\" data-w=\"1109\" style=\"margin: 20px auto; border-radius: 6px; display: block; object-fit: contain; box-shadow: rgb(153, 153, 153) 2px 4px 7px; box-sizing: border-box !important; overflow-wrap: break-word !important; width: 677px !important; visibility: visible !important; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/libYRuvULTdWACbPmP3IthmrrO6mkE1Yt8tTDuq7wgibbYD7J3nqmgroIympNzGNXxichiaPj1Y66PmP98FIfT78Kw/640?wx_fmt=png\"></figure><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">首先我们来定义代理工厂</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">SellProxyFactory</span></code><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">。</span></p><pre data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;max-width: 100%;font-size: 16px;letter-spacing: 1.5px;text-align: left;background-color: rgb(255, 255, 255);border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><code style=\"padding: 15px 16px 16px;max-width: 100%;overflow-x: auto;color: rgb(221, 221, 221);display: -webkit-box;font-family: \" operator mono consolas monaco menlo monospace rgb border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">public</span> <span style=\"max-width: 100%;line-height: 26px;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">class</span> <span style=\"max-width: 100%;font-weight: bold;color: white;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">SellProxyFactory</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">implements</span> <span style=\"max-width: 100%;font-weight: bold;color: white;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">MethodInterceptor</span> </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;color: rgb(117, 113, 94);line-height: 26px;\">// 关联真实对象，控制对真实对象的访问</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">private</span> Object realObject;<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;color: rgb(117, 113, 94);line-height: 26px;\">/** 从代理工厂中获取一个代理对象实例，等价于创建小红代理 */</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;line-height: 26px;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">public</span> Object <span style=\"max-width: 100%;color: rgb(166, 226, 46);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">getProxyInstance</span><span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">(Object realObject)</span> </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">this</span>.realObject = realObject;<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        Enhancer enhancer = <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">new</span> Enhancer();<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        <span style=\"max-width: 100%;color: rgb(117, 113, 94);line-height: 26px;\">// 设置需要增强类的类加载器</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        enhancer.setClassLoader(realObject.getClass().getClassLoader());<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        <span style=\"max-width: 100%;color: rgb(117, 113, 94);line-height: 26px;\">// 设置被代理类，真实对象</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        enhancer.setSuperclass(realObject.getClass());<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        <span style=\"max-width: 100%;color: rgb(117, 113, 94);line-height: 26px;\">// 设置方法拦截器，代理工厂</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        enhancer.setCallback(<span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">this</span>);<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        <span style=\"max-width: 100%;color: rgb(117, 113, 94);line-height: 26px;\">// 创建代理类</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">return</span> enhancer.create();<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;color: rgb(117, 113, 94);line-height: 26px;\">@Override</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;line-height: 26px;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">public</span> Object <span style=\"max-width: 100%;color: rgb(166, 226, 46);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">intercept</span><span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">(Object o, Method method, Object[] objects, MethodProxy methodProxy)</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">throws</span> Throwable </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        doSomethingBefore(); <span style=\"max-width: 100%;color: rgb(117, 113, 94);line-height: 26px;\">// 前置增强</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        Object object = methodProxy.invokeSuper(o, objects);<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        doSomethingAfter(); <span style=\"max-width: 100%;color: rgb(117, 113, 94);line-height: 26px;\">// 后置增强</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">return</span> object;<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;line-height: 26px;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">private</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">void</span> <span style=\"max-width: 100%;color: rgb(166, 226, 46);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">doSomethingBefore</span><span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">()</span> </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        System.out.println(<span style=\"max-width: 100%;color: rgb(166, 226, 46);line-height: 26px;\">\"执行方法前额外的操作...\"</span>);<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;line-height: 26px;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">private</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">void</span> <span style=\"max-width: 100%;color: rgb(166, 226, 46);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">doSomethingAfter</span><span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">()</span> </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        System.out.println(<span style=\"max-width: 100%;color: rgb(166, 226, 46);line-height: 26px;\">\"执行方法后额外的操作...\"</span>);<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">}<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></span></code></pre><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">intercept() 方法涉及到 4 个参数：</span></p><ul data-tool=\"mdnice编辑器\" class=\"list-paddingleft-2\" style=\"margin-top: 8px;margin-bottom: 8px;padding-left: 25px;max-width: 100%;font-family: Optima-Regular, PingFangTC-light;letter-spacing: 1.5px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);font-size: 15px;color: rgb(89, 89, 89);list-style-type: circle;overflow-wrap: break-word !important;\"><li style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;box-sizing: border-box !important;overflow-wrap: break-word !important;font-size: 15px;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">Object o：被代理对象</span></section></li><li style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;box-sizing: border-box !important;overflow-wrap: break-word !important;font-size: 15px;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">Method method：被拦截的方法</span></section></li><li style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;box-sizing: border-box !important;overflow-wrap: break-word !important;font-size: 15px;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">Object[] objects：被拦截方法的所有入参值</span></section></li><li style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;box-sizing: border-box !important;overflow-wrap: break-word !important;font-size: 15px;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">MethodProxy methodProxy：方法代理，用于调用原始的方法</span></section></li></ul><blockquote data-tool=\"mdnice编辑器\" style=\"margin-top: 20px;margin-bottom: 20px;padding: 10px 10px 10px 20px;border-width: 1px;border-top-style: solid;border-right-style: solid;border-bottom-style: solid;border-color: rgb(27, 144, 13);color: rgb(89, 89, 89);font-size: 0.9em;max-width: 100%;box-sizing: inherit;font-family: Optima-Regular, PingFangTC-light;letter-spacing: 1.5px;text-align: left;white-space: normal;overflow: auto;text-size-adjust: 100%;line-height: 1.55em;border-radius: 6px;background: rgb(255, 255, 255);overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(116, 181, 109);line-height: 1;font-weight: 700;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">❝</span><p style=\"padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;letter-spacing: 2px;font-size: 16px;word-spacing: 2px;color: black;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">对于 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">methodProxy</span></code><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"> 参数调用的方法，在其内部有两种选择：</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">invoke()</span></code><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"> 和 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">invokeSuper()</span></code><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"> ，二者的区别不在本文展开说明，感兴趣的读者可以参考本篇文章：Cglib源码分析 invoke和invokeSuper的差别</span></p><span style=\"max-width: 100%;float: right;color: rgb(116, 181, 109);font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">❞</span></blockquote><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">在 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">getInstance()</span></code><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"> 方法中，利用 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">Enhancer</span></code><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"> 类实例化代理对象（可以看作是小红）返回给调用者小明，即可完成代理操作。</span></p><pre data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;max-width: 100%;font-size: 16px;letter-spacing: 1.5px;text-align: left;background-color: rgb(255, 255, 255);border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><code style=\"padding: 15px 16px 16px;max-width: 100%;overflow-x: auto;color: rgb(221, 221, 221);display: -webkit-box;font-family: \" operator mono consolas monaco menlo monospace rgb border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">public</span> <span style=\"max-width: 100%;line-height: 26px;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">class</span> <span style=\"max-width: 100%;font-weight: bold;color: white;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">XiaoMing</span> </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;line-height: 26px;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">public</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">static</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">void</span> <span style=\"max-width: 100%;color: rgb(166, 226, 46);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">main</span><span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">(String[] args)</span> </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        SellProxyFactory sellProxyFactory = <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">new</span> SellProxyFactory();<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        <span style=\"max-width: 100%;color: rgb(117, 113, 94);line-height: 26px;\">// 获取一个代理实例</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        SellPerfumeFactory proxyInstance =<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">                (SellPerfumeFactory) sellProxyFactory.getProxyInstance(<span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">new</span> SellPerfumeFactory());<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        <span style=\"max-width: 100%;color: rgb(117, 113, 94);line-height: 26px;\">// 创建代理类</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        proxyInstance.sellPerfume(<span style=\"max-width: 100%;line-height: 26px;\">1999.99</span>);<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">}<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></span></code></pre><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">我们关注点依旧放在可扩展性和可维护性上，Cglib 依旧符合<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「开闭原则」</strong>，如果小明需要小红代理购买红酒，该如何做呢？这里碍于篇幅原因，我不再将完整的代码贴出来了，可以自己试着手动实现一下，或者在心里有一个大概的实现思路即可。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">我们来总结一下 CGLIB 动态代理：</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">（1）CGLIB 的使用方法：</span></p><ul data-tool=\"mdnice编辑器\" class=\"list-paddingleft-2\" style=\"margin-top: 8px;margin-bottom: 8px;padding-left: 25px;max-width: 100%;font-family: Optima-Regular, PingFangTC-light;letter-spacing: 1.5px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);font-size: 15px;color: rgb(89, 89, 89);list-style-type: circle;overflow-wrap: break-word !important;\"><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">代理工厂需要<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「实现 MethodInterceptor 接口」</strong>，并重写方法，<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「内部关联真实对象」</strong>，控制第三者对真实对象的访问；代理工厂内部暴露 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">getInstance(Object realObject)</span></code><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"> 方法，<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「用于从代理工厂中获取一个代理对象实例」</strong>。</span></section></li><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">Enhancer</span></code><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"> 类用于从代理工厂中实例化一个代理对象，给调用者提供代理服务。</span></section></li></ul><h3 data-tool=\"mdnice编辑器\" style=\"margin-top: 20px;margin-bottom: 20px;font-weight: bold;font-size: 17px;max-width: 100%;font-family: Optima-Regular, PingFangTC-light;letter-spacing: 1.5px;white-space: normal;background-color: rgb(255, 255, 255);color: black;text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-family: Arial, Helvetica, sans-serif;padding-bottom: 2px;max-width: 100%;color: rgb(43, 43, 43);font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">JDK Proxy 和 CGLIB 的对比</span></h3><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">（2）仔细对比一下，JDK Proxy 和 CGLIB 具有相似之处：</span></p><section data-tool=\"mdnice编辑器\" style=\"max-width: 100%;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;letter-spacing: 1.5px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);overflow-x: auto;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><table width=\"657\"><thead style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><tr style=\"max-width: 100%;border-width: 1px 0px 0px;border-right-style: initial;border-bottom-style: initial;border-left-style: initial;border-right-color: initial;border-bottom-color: initial;border-left-color: initial;border-top-style: solid;border-top-color: rgb(204, 204, 204);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><th style=\"word-break: break-all;border-top-width: 1px;border-color: rgb(204, 204, 204);background-color: rgb(240, 240, 240);max-width: 100%;color: rgb(89, 89, 89);min-width: 85px;text-align: center;overflow-wrap: break-word !important;box-sizing: border-box !important;\"><br></th><th style=\"word-break: break-all;border-top-width: 1px;border-color: rgb(204, 204, 204);background-color: rgb(240, 240, 240);max-width: 100%;color: rgb(89, 89, 89);min-width: 85px;text-align: center;overflow-wrap: break-word !important;box-sizing: border-box !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">JDK Proxy</span></th><th style=\"word-break: break-all;border-top-width: 1px;border-color: rgb(204, 204, 204);background-color: rgb(240, 240, 240);max-width: 100%;color: rgb(89, 89, 89);min-width: 85px;text-align: center;overflow-wrap: break-word !important;box-sizing: border-box !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">CGLIB</span></th></tr></thead><tbody style=\"max-width: 100%;border-width: 0px;border-style: initial;border-color: initial;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><tr style=\"max-width: 100%;border-width: 1px 0px 0px;border-right-style: initial;border-bottom-style: initial;border-left-style: initial;border-right-color: initial;border-bottom-color: initial;border-left-color: initial;border-top-style: solid;border-top-color: rgb(204, 204, 204);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><td style=\"word-break: break-all;border-color: rgb(204, 204, 204);max-width: 100%;color: rgb(89, 89, 89);min-width: 85px;text-align: center;overflow-wrap: break-word !important;box-sizing: border-box !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">代理工厂实现接口</span></td><td style=\"word-break: break-all;border-color: rgb(204, 204, 204);max-width: 100%;color: rgb(89, 89, 89);min-width: 85px;text-align: center;overflow-wrap: break-word !important;box-sizing: border-box !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">InvocationHandler</span></td><td style=\"word-break: break-all;border-color: rgb(204, 204, 204);max-width: 100%;color: rgb(89, 89, 89);min-width: 85px;text-align: center;overflow-wrap: break-word !important;box-sizing: border-box !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">MethodInterceptor</span></td></tr><tr style=\"max-width: 100%;border-width: 1px 0px 0px;border-right-style: initial;border-bottom-style: initial;border-left-style: initial;border-right-color: initial;border-bottom-color: initial;border-left-color: initial;border-top-style: solid;border-top-color: rgb(204, 204, 204);background-color: rgb(248, 248, 248);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><td style=\"word-break: break-all;border-color: rgb(204, 204, 204);max-width: 100%;color: rgb(89, 89, 89);min-width: 85px;text-align: center;overflow-wrap: break-word !important;box-sizing: border-box !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">构造代理对象给 Client 服务</span></td><td style=\"word-break: break-all;border-color: rgb(204, 204, 204);max-width: 100%;color: rgb(89, 89, 89);min-width: 85px;text-align: center;overflow-wrap: break-word !important;box-sizing: border-box !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">Proxy</span></td><td style=\"word-break: break-all;border-color: rgb(204, 204, 204);max-width: 100%;color: rgb(89, 89, 89);min-width: 85px;text-align: center;overflow-wrap: break-word !important;box-sizing: border-box !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">Enhancer</span></td></tr></tbody></table></section><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">二者都是用到了两个核心的类，它们也有不同：</span></p><ul data-tool=\"mdnice编辑器\" class=\"list-paddingleft-2\" style=\"margin-top: 8px;margin-bottom: 8px;padding-left: 25px;max-width: 100%;font-family: Optima-Regular, PingFangTC-light;letter-spacing: 1.5px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);font-size: 15px;color: rgb(89, 89, 89);list-style-type: circle;overflow-wrap: break-word !important;\"><li style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;box-sizing: border-box !important;overflow-wrap: break-word !important;font-size: 15px;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><p style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">最明显的不同：CGLIB 可以代理<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「大部分类」</strong>（第二点说到）；而 JDK Proxy <strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「仅能够代理实现了接口的类」</strong></span></p></section></li><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><p style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">CGLIB 采用动态创建被代理类的子类实现方法拦截，子类内部重写被拦截的方法，所以 CGLIB 不能代理被 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">final</span></code><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"> 关键字修饰的类和方法</span></p></section></li></ul><blockquote data-tool=\"mdnice编辑器\" style=\"margin-top: 20px;margin-bottom: 20px;padding: 10px 10px 10px 20px;border-width: 1px;border-top-style: solid;border-right-style: solid;border-bottom-style: solid;border-color: rgb(27, 144, 13);color: rgb(89, 89, 89);font-size: 0.9em;max-width: 100%;box-sizing: inherit;font-family: Optima-Regular, PingFangTC-light;letter-spacing: 1.5px;text-align: left;white-space: normal;overflow: auto;text-size-adjust: 100%;line-height: 1.55em;border-radius: 6px;background: rgb(255, 255, 255);overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(116, 181, 109);line-height: 1;font-weight: 700;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">❝</span><p style=\"padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;letter-spacing: 2px;font-size: 16px;word-spacing: 2px;color: black;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">细心的读者会发现，讲的东西都是<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「浅尝辄止」</strong><span style=\"font-family: Arial, Helvetica, sans-serif;max-width: 100%;text-decoration: line-through;\">（你都没有给我讲源码，水文实锤）</span>，动态代理的精髓在于<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「程序在运行时动态生成代理类对象，拦截调用方法，在调用方法前后扩展额外的功能」</strong>，而生成动态代理对象的原理就是<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「反射机制」</strong>，在上一篇文章中，我详细讲到了如何利用反射实例化对象，调用方法······在代理中运用得淋漓尽致，所以反射和代理也是天生的一对，谈到其中一个，必然会涉及另外一个。</span></p><span style=\"max-width: 100%;float: right;color: rgb(116, 181, 109);font-family: Arial, Helvetica, sans-serif;box-sizing: border-box !important;overflow-wrap: break-word !important;\">❞</span></blockquote><h2 data-tool=\"mdnice编辑器\"><span style=\"font-size: 15px;color: rgb(123, 12, 0);\"><strong>动态代理的实际应用</strong></span></h2><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">传统的 OOP 编程符合从上往下的编码关系，却不符合从左往右的编码关系，如果你看不懂，可以参考下面的动图，OOP 满足我们一个方法一个方法从上往下地执行，但是却不能<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「从左往右嵌入代码」</strong>，而 AOP 的出现很好地弥补了这一点，它<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「允许我们将重复的代码逻辑抽取出来形成一个单独的覆盖层」</strong>，在执行代码时可以将该覆盖层毫无知觉的嵌入到原代码逻辑里面去。</span></p><h3 data-tool=\"mdnice编辑器\" style=\"margin-top: 20px;margin-bottom: 20px;font-weight: bold;font-size: 17px;max-width: 100%;font-family: Optima-Regular, PingFangTC-light;letter-spacing: 1.5px;white-space: normal;background-color: rgb(255, 255, 255);color: black;text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-family: Arial, Helvetica, sans-serif;padding-bottom: 2px;max-width: 100%;color: rgb(43, 43, 43);font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">Spring AOP</span></h3><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">如下图所示，method1 和 method2 都需要在方法执行前后<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「记录日志」</strong>，实际上会有更多的方法需要记录日志，传统的 OOP 只能够让我们在每个方法前后手动记录日志，大量的</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">Log.info</span></code><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">存在于方法内部，导致代码阅读性下降，方法内部无法专注于自己的逻辑。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「AOP 可以将这些重复性的代码包装到额外的一层，监听方法的执行，当方法被调用时，通用的日志记录层会拦截掉该方法，在该方法调用前后记录日志，这样可以让方法专注于自己的业务逻辑而无需关注其它不必要的信息。」</strong></span></p><figure data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;max-width: 100%;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;letter-spacing: 1.5px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);display: flex;flex-direction: column;justify-content: center;align-items: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><img class=\"__bg_gif\" data-ratio=\"0.7046413502109705\" data-type=\"gif\" data-w=\"1422\" style=\"margin: 20px auto; border-radius: 6px; display: block; object-fit: contain; box-shadow: rgb(153, 153, 153) 2px 4px 7px; box-sizing: border-box !important; overflow-wrap: break-word !important; width: 677px !important; visibility: visible !important; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_gif/libYRuvULTdWACbPmP3IthmrrO6mkE1YtPpC51RzVtTGyS2nCjrMfRSoU8qrnNicFfFjeQZOGQvJibdibmiciahRMOXA/640?wx_fmt=gif\"><figcaption style=\"margin-top: 5px;max-width: 100%;text-align: center;font-size: 13px;color: rgb(43, 43, 43);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">2</span></figcaption></figure><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">Spring AOP 有许多功能：提供缓存、提供日志环绕、事务处理······在这里，我会以<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「事务」</strong>作为例子向你讲解 Spring 底层是如何使用动态代理的。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">Spring 的事务涉及到一个核心注解</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">@Transactional</span></code><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">，相信很多人在项目中都用到过，加上这个注解之后，在执行方法时如果发生异常，该方法内所有的事务都回滚，否则全部提交生效，这是最宏观的表现，它内部是如何实现的呢？今天就来简单分析一下。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">每个有关数据库的操作都要保证一个事务内的所有操作，要么全部执行成功，要么全部执行失败，传统的事务失败回滚和成功提交是使用</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">try...catch</span></code><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">代码块完成的</span></p><pre data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;max-width: 100%;font-size: 16px;letter-spacing: 1.5px;text-align: left;background-color: rgb(255, 255, 255);border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><code style=\"padding: 15px 16px 16px;max-width: 100%;overflow-x: auto;color: rgb(221, 221, 221);display: -webkit-box;font-family: \" operator mono consolas monaco menlo monospace rgb border-box break-word><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;box-sizing: border-box !important;overflow-wrap: break-word !important;\">SqlSession session = <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">null</span>;<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">try</span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    session = getSqlSessionFactory().openSession(<span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">false</span>);<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    session.update(<span style=\"max-width: 100%;color: rgb(166, 226, 46);line-height: 26px;\">\"...\"</span>, <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">new</span> Object());<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;color: rgb(117, 113, 94);line-height: 26px;\">// 事务提交</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    session.commit();<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">}<span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">catch</span>(Exception e){<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;color: rgb(117, 113, 94);line-height: 26px;\">// 事务回滚</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    session.rollback();<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">throw</span> e;<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">}<span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">finally</span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;color: rgb(117, 113, 94);line-height: 26px;\">// 关闭事务</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    session.close();<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">}<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></span></code></pre><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-family: Optima-Regular, PingFangTC-light;font-size: 16px;text-align: left;white-space: normal;background-color: rgb(255, 255, 255);line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Arial, Helvetica, sans-serif;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">如果多个方法都需要写这一段逻辑非常冗余，所以 Spring 给我们封装了一个注解 @Transactional，使用它后，调用方法时会监视方法，如果方法上含有该注解，就会自动帮我们把数据库相关操作的代码包裹起来，最终形成类似于上面的一段代码原理，当然这里并不准确，只是给你们一个大概的总览，了解Spring AOP 的本质在干什么，这篇文章讲解到这里，知识量应该也非常多了，好好消化上面的知识点，为后面的 Spring AOP 专题学习打下坚实的基础。</span></p><section donone=\"shifuMouseDownCard('shifu_c_030')\" label=\"Copyright Reserved by PLAYHUDONG.\" style=\"text-align: start;white-space: normal;margin-top: 1em;margin-bottom: 1em;caret-color: rgb(0, 0, 0);color: rgb(0, 0, 0);border-width: 0px;border-style: initial;border-color: initial;\"><section style=\"margin-left: 1em;line-height: 1.4;\"><span style=\"padding: 3px 8px;border-top-left-radius: 4px;border-top-right-radius: 4px;border-bottom-right-radius: 4px;border-bottom-left-radius: 4px;color: rgb(255, 255, 255);background-color: rgb(255, 105, 31);font-family: inherit;text-align: inherit;text-decoration: inherit;font-size: 16px;\">推荐阅读</span>  <span style=\"margin-left: 4px;padding: 3px 8px;border-top-left-radius: 1.2em;border-top-right-radius: 1.2em;border-bottom-right-radius: 1.2em;border-bottom-left-radius: 1.2em;color: rgb(255, 255, 255);line-height: 1.2;background-color: rgb(204, 204, 204);font-family: inherit;text-align: inherit;text-decoration: inherit;border-color: rgb(249, 110, 87);font-size: 12px;\">点击标题可跳转</span></section><section style=\"margin-top: -11px;padding: 22px 16px 16px;border-width: 1px;border-style: solid;border-color: rgb(255, 105, 31);color: rgb(51, 51, 51);font-size: 1em;font-family: inherit;text-align: inherit;text-decoration: inherit;\"><p><span style=\"font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif rgb><a target=\"_blank\" href=\"http://mp.weixin.qq.com/s?__biz=MjM5NzMyMjAwMA==&amp;mid=2651484648&amp;idx=1&amp;sn=ea1133f6a4e255d8d4650f2ba982f553&amp;chksm=bd251d978a52948166f11f2cef22937c8b640a0ec3525cce10393986799ad5bfaf95777a8c22&amp;scene=21#wechat_redirect\" data-itemshowtype=\"11\" tab=\"innerlink\" data-linktype=\"2\">学完 Aop，连动态代理的原理都不懂？</a><br></span></p><a target=\"_blank\" href=\"http://mp.weixin.qq.com/s?__biz=MjM5NzMyMjAwMA==&amp;mid=2651486890&amp;idx=1&amp;sn=c1db3dd11de37af9bfdb2e5b4004535b&amp;chksm=bd2516d58a529fc32c68385995c2e86cbfb8534bebe7f724cc95b385c9d275c4869c08c7730a&amp;scene=21#wechat_redirect\" data-itemshowtype=\"11\" tab=\"innerlink\" style=\"font-size: 12px;\" data-linktype=\"2\"><span style=\"font-size: 12px;\">动态代理的实际应用</span></a><br><p><span style=\"font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif rgb><a target=\"_blank\" href=\"http://mp.weixin.qq.com/s?__biz=MjM5NzMyMjAwMA==&amp;mid=2651483803&amp;idx=1&amp;sn=a589a96fb26148efe1c2bb2e58b72ed4&amp;chksm=bd2502e48a528bf2bae6de4492d51533eb1d4c52a67fed41aff5a24f5619e991b48c9868db1b&amp;scene=21#wechat_redirect\" data-itemshowtype=\"0\" tab=\"innerlink\" data-linktype=\"2\">分析动态代理给 Spring 事务埋下的坑</a></span><span style=\"font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif rgb><br></span></p></section></section><p style=\"caret-color: rgb(0, 0, 0);color: rgb(0, 0, 0);text-align: start;white-space: normal;\"><br></p><p style=\"white-space: normal;max-width: 100%;min-height: 1em;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-size: 14px;color: rgb(255, 169, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\">看完本文有收获？请转发分享给更多人</span></p><p style=\"white-space: normal;max-width: 100%;min-height: 1em;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;color: rgb(255, 169, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\">关注「ImportNew」，提升Java技能</strong></p><p style=\"white-space: normal;max-width: 100%;min-height: 1em;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><img data-ratio=\"0.9166666666666666\" data-s=\"300,640\" data-type=\"jpeg\" data-w=\"600\" style=\"box-sizing: border-box !important; overflow-wrap: break-word !important; visibility: visible !important; width: 600px !important; max-width: 600px\" width=\"auto\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/2A8tXicCG8ylbWIGfdoDED35IRRySQZTXUkJ1eop9MHApzFibKnOo0diboXpl0rmS5mH78YJhsWQv0dhv718A6kUA/640?wx_fmt=jpeg\"></p><p style=\"text-align: right;\"><span style=\"font-size: 14px;text-align: right;\">好文章，我</span><span style=\"font-size: 14px;text-align: right;color: rgb(255, 41, 65);\">在看</span><span style=\"font-size: 14px;text-align: right;\">❤️</span></p><p><br></p>\n                </div>\n\n    \n    <br>\n\n    \n        <a target=\"_blank\" href=\"http://mp.weixin.qq.com/s?__biz=MjM5NzMyMjAwMA==&amp;mid=2651489731&amp;idx=2&amp;sn=dfb71b6f0cec5f6a41f5db0388ca0a76&amp;chksm=bd25e9bc8a5260aa57d4f6e1710890a91133c718a9463d712721955c9ec27e484b3076f8a8e4&amp;scene=0#rd\" style=\"color: blue\" class=\"media_tool_meta meta_primary\">原文</a>\n        <br>\n    \n\n    \n\n    <img alt=\"\" width=\"1px\" height=\"1px\" class=\"\" style=\"width:1px;height:1px;display:none\" src=\"http://www.jintiankansha.me/rss_static/11757/v56gr3E2Eu\"></div></div>","descriptionType":"html","publishedDate":"Wed, 02 Sep 2020 03:30:00 +0000","feedId":2521,"bgimg":"http://img.100weidu.com/mmbiz_jpg/eZzl4LXykQy6Uwm3SGUMYic8R3o8yalAkUda3dAyN0a0K9NKdEp1mvgmt2AeE0LdIeCRibicOpZ2GMetD4iaMvwo4g?imageView2/1/w/600","linkMd5":"5497d1aebd41da8f15406ca3cc375cda","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn29@2020_6/2020/09/05/06-41-44-925_c8aece0881eaf3f9.webp","destWidth":600,"destHeight":446,"sourceBytes":31795,"destBytes":19620,"author":"","articleImgCdnMap":{"http://img.100weidu.com/mmbiz_jpg/eZzl4LXykQy6Uwm3SGUMYic8R3o8yalAkUda3dAyN0a0K9NKdEp1mvgmt2AeE0LdIeCRibicOpZ2GMetD4iaMvwo4g?imageView2/1/w/600":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn29@2020_6/2020/09/05/06-41-44-925_c8aece0881eaf3f9.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/libYRuvULTdWACbPmP3IthmrrO6mkE1Ytib584dicNPGrOHIkL7ZH64MpcQdlyfZnXYH83PnHS7B2V4osQel98icYw/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn20@2020_5/2020/09/05/06-42-54-131_1d6c591c47219609.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/libYRuvULTdWACbPmP3IthmrrO6mkE1YtHaTWmE77Sq3HVRRhq8R9bicK4ApO1ILVnNTlfhv7L3ByazpBpgkUKtA/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn38@2020_2/2020/09/05/06-43-00-565_9360797c2a51f57e.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/libYRuvULTdWACbPmP3IthmrrO6mkE1YtM5QRqrSHz8WjdkFeDaLjvsYzbgOy7ZPrrDev557y2us6GVchAGeWdg/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn69@2020_5/2020/09/05/06-42-31-298_f52709e2a87894c7.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/libYRuvULTdWACbPmP3IthmrrO6mkE1YtAQ6XCSL9wCEXH2jSAgAhlMjsnhL7YBHbBuf2n4Avmh5wXhuM9xmjhw/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn82@2020_6/2020/09/05/06-42-15-309_ee9d3a4ef76cd17a.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/libYRuvULTdWACbPmP3IthmrrO6mkE1YtZExiaicsjj4mDt60S7HDonzs6NjDBULA7D4wVtVssQnpBWdVFmBIrCtA/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn58@2020_3/2020/09/05/06-43-06-747_ec360f60dadb1fe4.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/libYRuvULTdWACbPmP3IthmrrO6mkE1Yt8tTDuq7wgibbYD7J3nqmgroIympNzGNXxichiaPj1Y66PmP98FIfT78Kw/640?wx_fmt=png":null,"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/libYRuvULTdWACbPmP3IthmrrO6mkE1YtfDAz5kTVr6ADQdriam6LhzD4Bttvg2vGzc69gpvYiclzfegVibqCntkHA/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn28@2020_6/2020/09/05/06-44-07-079_99f154dbda40cf12.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/libYRuvULTdWACbPmP3IthmrrO6mkE1YtQichr1EH18BVNtTRXSrAYnjKmyIUnUVuDQPxcF1E1PdZTR9w0d8icS4Q/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn49@2020_6/2020/09/05/06-42-06-513_2b4d5629455105ef.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/libYRuvULTdWACbPmP3IthmrrO6mkE1YtHRibqJr848icNKwVmBKSgw8CxNibMSibtL7cOwHRTDNDDGcphp9KSiaTDiaQ/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn89@2020_1/2020/09/05/06-43-11-541_9e7958e17587237a.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_gif/libYRuvULTdWACbPmP3IthmrrO6mkE1YtPpC51RzVtTGyS2nCjrMfRSoU8qrnNicFfFjeQZOGQvJibdibmiciahRMOXA/640?wx_fmt=gif":null,"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/2A8tXicCG8ylbWIGfdoDED35IRRySQZTXUkJ1eop9MHApzFibKnOo0diboXpl0rmS5mH78YJhsWQv0dhv718A6kUA/640?wx_fmt=jpeg":"https://cdn.jsdelivr.net/gh/myreaderx/cdn61@2020_1/2020/09/05/06-42-03-580_f93d0239d4369c75.webp","http://www.jintiankansha.me/rss_static/11757/v56gr3E2Eu":null},"publishedOrCreatedDate":1599288104744},{"createdTime":"2020-09-05 14:41:44","updatedTime":"2020-09-05 14:41:44","title":"2020，后端跳槽怂了吗?","link":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+2020%EF%BC%8C%E5%90%8E%E7%AB%AF%E8%B7%B3%E6%A7%BD%E6%80%82%E4%BA%86%E5%90%97%3F","description":"<div><div><div id=\"media\" class=\"rich_media_thumb_wrp\">\n\n            <img class=\"rich_media_thumb\" src=\"http://img.100weidu.com/mmbiz_jpg/eZzl4LXykQzHY4nRl5eF5qjEKWumNas13Zibs8EiaLpykrmoLpLGymBtgQNhgnsfsys5bpVAHHNmCxnQQovPlibxQ?imageView2/1/w/600\">\n        </div>\n    \n\n    \n\n    <div class=\"rich_media_content\" id=\"js_content\">\n                    \n\n                    \n\n                    \n                    \n                    <section style=\"display: none;\" data-tools=\"新媒体管家\" data-label=\"powered by xmt.cn\"><br></section><p style=\"margin-right: 8px;margin-bottom: 10px;margin-left: 8px;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb data-mpa-powered-by=\"yiban.io\"><span style=\"font-size: 15px;\">虽然 2020 开局很魔幻，但生活工作还是要往前看的。今年在互联网行业内，阿里、腾讯、快手、字节跳动以及各家在线教育公司对人才的抢夺愈演愈烈。如何在后疫情时代，快速提升自身实力，尽快达到心仪企业的用人要求，成为当下技术人找工作或跳槽时必须考虑的问题。</span></p><p style=\"margin-right: 8px;margin-bottom: 10px;margin-left: 8px;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb><span style=\"font-size: 15px;\">然而，很多朋友在准备时，往往不成体系，一会学会儿 Spring Cloud，一会看下 Redis，过后几天就忘。<br></span></p><p style=\"margin-right: 8px;margin-bottom: 10px;margin-left: 8px;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb><span style=\"font-size: 15px;\">这里贴上一张<strong><span style=\"color: rgb(64, 133, 222);\">进阶学习Xmind</span></strong>图，图中将近几年搜集来的大厂需求归纳为五项能力：硬核编码能力、分布式技术栈、必备中间件、微服务主流架构、高并发实战能力。每一项能力具体学习哪些技术分项，图中都有所罗列，供大家查漏补缺。</span></p><p style=\"margin-right: 8px;margin-bottom: 10px;margin-left: 8px;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb center><span style=\"font-size: 15px;\">点击查看大图<br></span></p><p style=\"margin-right: 8px;margin-left: 8px;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb center><img class=\"rich_pages\" data-ratio=\"0.288272157564906\" data-s=\"300,640\" data-type=\"png\" data-w=\"1117\" style=\"border-color: rgb(68, 153, 231); border-style: solid; border-width: 1px; border-radius: 12px; box-sizing: border-box !important; visibility: visible !important; width: 505.625px !important; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/hObz0jenxicASdS5GkHbY93pDYlSmjTL0eNaa4Ky7w2kDJIdP1c1Zibm2Sc4XTq1XGA8xC6jCLqkBaG2icr5tXkPg/640?wx_fmt=png\"></p><p style=\"margin-right: 8px;margin-left: 8px;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb><br></p><p style=\"margin-right: 8px;margin-left: 8px;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb><span style=\"font-size: 15px;\">学习这些技术分项有没有高效的方法呢？除了需要一个人的悟性和耐心外，前人经验的指导也是必不可少的助力。</span></p><p style=\"margin-right: 8px;margin-left: 8px;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb><span style=\"letter-spacing: 0.544px;\"></span></p><p style=\"margin-right: 8px;margin-left: 8px;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb><span style=\"font-size: 15px;\">为了能帮助更多的技术人在特殊时期尽快缩短与大厂的差距，开课吧作为泛互联网人的在线职业教育平台，联合了廖雪峰等一线大厂的技术负责人/面试官，重磅推出了专门为 1-5 年处于<span style=\"font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif rgb>求职涨薪期的</span>程序员，量身定制的“Java 高级架构课程”。课程对标阿里 P7 水平，该课程已经开设 17 期，已经超过 3600 名学员参与报名学习。据不完全统计，其中有 83% 的学员涨薪超过 5K / 月。</span></p><p style=\"margin-right: 8px;margin-left: 8px;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb><br></p><p style=\"margin-right: 8px;margin-left: 8px;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb><span style=\"font-size: 15px;\">疫情期间，开课吧决定将原价 ￥2980 的 Java 进阶资料包，限时免费回馈给大家！进阶资料内容包含：</span></p><p style=\"margin-right: 8px;margin-left: 8px;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb><br></p><section style=\"margin-right: 8px;margin-left: 8px;padding-right: 0.5em;padding-left: 0.5em;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb center><img class=\"rich_pages\" data-ratio=\"0.2891156462585034\" data-s=\"300,640\" data-type=\"png\" data-w=\"588\" style=\"background-color: rgb(238, 237, 235); border-width: 1px; border-style: solid; border-color: rgb(68, 153, 231); background-size: 22px; background-position: center center; background-repeat: no-repeat; border-radius: 9px; box-shadow: rgb(210, 210, 210) 0em 0em 0.5em 0px; box-sizing: border-box !important; visibility: visible !important; width: 588px !important; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/hObz0jenxicASdS5GkHbY93pDYlSmjTL0YQI64DXs9AhkicAJuFic02sdeMaJh71DoFXy2MF1DacRRYfsOpOmicdUw/640?wx_fmt=png\"></section><section style=\"margin-right: 8px;margin-left: 8px;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb><br></section><section style=\"margin-right: 8px;margin-left: 8px;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb center><span style=\"font-size: 15px;\"><strong style=\"color: rgb(120, 172, 254);font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif>适合谁学？</strong></span></section><section style=\"margin-right: 8px;margin-left: 8px;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb><br></section><section style=\"margin-right: 8px;margin-left: 8px;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb><span style=\"letter-spacing: 1px;font-size: 15px;\"><strong>如果你：</strong></span></section><section style=\"margin-right: 8px;margin-left: 8px;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb><span style=\"letter-spacing: 1px;font-size: 15px;\">1.有一定开发经验，但对技术进阶感到迷茫</span></section><section style=\"margin-right: 8px;margin-left: 8px;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb><span style=\"letter-spacing: 1px;font-size: 15px;\">2.停留在使用框架/工具层面，对底层原理知识欠缺</span></section><section style=\"margin-right: 8px;margin-left: 8px;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb><span style=\"letter-spacing: 1px;font-size: 15px;\">3.不满足于 CRUD 现状，希望解决更多生产环境（比如：高并发）的问题</span></section><section style=\"margin-right: 8px;margin-left: 8px;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb><span style=\"font-size: 15px;\"><span style=\"letter-spacing: 1px;\">4.目前在小厂打拼，想</span><span style=\"font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif>跳槽进入 BAT 等大厂</span></span></section><section style=\"margin-right: 8px;margin-left: 8px;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb><br></section><section style=\"margin-right: 8px;margin-left: 8px;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb><span style=\"font-size: 15px;\"><span style=\"letter-spacing: 1px;\">那么这套资料包将非常适合你。</span><span style=\"color: rgb(64, 133, 222);\"><strong><span style=\"text-indent: 0em;letter-spacing: 1px;\">原价 2980 元</span></strong></span><span style=\"text-indent: 0em;letter-spacing: 1px;\">，此次对本公众号免费开放，仅限</span><span style=\"text-indent: 0em;letter-spacing: 1px;color: rgb(64, 133, 222);\"><strong> 300 </strong></span><span style=\"text-indent: 0em;letter-spacing: 1px;\">个名额</span><span style=\"text-indent: 0em;letter-spacing: 1px;color: rgb(0, 0, 0);\">。需要的朋友请</span><span style=\"text-indent: 0em;letter-spacing: 1px;\">快快扫码预约！另外，现在预约报名的话，还能赶得上开课吧的</span></span><span style=\"font-size: 15px;\"><span style=\"color: rgb(64, 133, 222);\"><strong><span style=\"text-indent: 0em;letter-spacing: 1px;\">“战疫培优计划”</span></strong></span></span><span style=\"font-size: 15px;text-indent: 0em;letter-spacing: 1px;\">和</span><span style=\"font-size: 15px;\"><span style=\"color: rgb(64, 133, 222);\"><strong><span style=\"text-indent: 0em;letter-spacing: 1px;\">“超值VIP减免活动”</span></strong></span></span><span style=\"font-size: 15px;\"><span style=\"text-indent: 0em;letter-spacing: 1px;\">。</span></span></section><section style=\"margin-right: 8px;margin-left: 8px;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb center bold><br></section><section style=\"margin-right: 8px;margin-left: 8px;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb center><span style=\"font-size: 15px;\"><span style=\"color: rgb(64, 133, 222);\"><strong><span style=\"font-size: 15px;color: rgb(64, 133, 222);text-indent: 0em;letter-spacing: 1px;\">5 大分项</span></strong></span></span></section><section style=\"margin-right: 8px;margin-left: 8px;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb center><span style=\"font-size: 15px;\"><span style=\"color: rgb(64, 133, 222);\"><strong><span style=\"font-size: 15px;color: rgb(64, 133, 222);text-indent: 0em;letter-spacing: 1px;\">扫清进阶迷茫</span></strong></span></span></section><section style=\"margin-right: 8px;margin-left: 8px;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb center><span style=\"font-size: 15px;\"><span style=\"color: rgb(64, 133, 222);\"><strong><span style=\"font-size: 15px;color: rgb(64, 133, 222);text-indent: 0em;letter-spacing: 1px;\">仅限 7 天免费</span></strong></span></span></section><p style=\"text-align: center;\"><img class=\"rich_pages js_insertlocalimg\" data-ratio=\"1\" data-s=\"300,640\" data-type=\"png\" data-w=\"161\" style=\"width:30%; height:auto; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQzHY4nRl5eF5qjEKWumNas1JnGA35dEicpTGq8MXrkxcAoxsM96DoELwRAVxNReXvcGotDoOZX79sg/640?wx_fmt=png\"></p><section style=\"margin-right: 8px;margin-left: 8px;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb center><span style=\"font-size: 15px;\"><span style=\"color: rgb(64, 133, 222);\"><strong><span style=\"font-size: 15px;color: rgb(64, 133, 222);text-indent: 0em;letter-spacing: 1px;\"> 300 个优惠名额 先到先得</span></strong></span></span><br></section><section style=\"margin-right: 8px;margin-left: 8px;padding-right: 0.5em;padding-left: 0.5em;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb><br></section><section style=\"margin-right: 8px;margin-left: 8px;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb><em><span style=\"font-size: 15px;color: rgb(64, 133, 222);\"><strong style=\"color: rgb(120, 172, 254);font-size: 16px;letter-spacing: 1px;text-align: center;\"><strong style=\"color: rgb(64, 133, 222);font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif center normal rgb><span style=\"font-size: 15px;color: rgb(64, 133, 222);text-indent: 0em;letter-spacing: 1px;\">PS:预约成功后，助理老师会发给你听课地址和配套讲义。另外，还可以跟助理咨询文中的进阶Xmind全图和Java技能水平测试题等资料。</span></strong></strong></span></em></section><section style=\"margin-right: 8px;margin-left: 8px;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb><br></section><p style=\"font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb><span style=\"font-size: 15px;\">最后祝大家工作顺利，身体健康！</span></p>\n                </div>\n\n    \n        <br>\n        <div id=\"js_toobar3\" class=\"rich_media_tool\">\n            <a target=\"_blank\" href=\"https://wx.kaikeba.com/vip_course/00z2uwxmjw/n1k0jaks99?tenant=wx5046bc7413796142\" id=\"js_view_source\" class=\"media_tool_meta meta_primary\">阅读原文</a>\n        </div>\n    \n    <br>\n\n    \n        <a target=\"_blank\" href=\"http://mp.weixin.qq.com/s?__biz=MjM5NzMyMjAwMA==&amp;mid=2651489731&amp;idx=1&amp;sn=d854a6f99040f9db7ee50cc4abd0b82b&amp;chksm=bd25e9bc8a5260aaaf93920eada0e2606c5fd54842a2a18c5b54ad901de94be4ee2bbd9c9889&amp;scene=0#rd\" style=\"color: blue\" class=\"media_tool_meta meta_primary\">原文</a>\n        <br>\n    \n\n    \n\n    <img alt=\"\" width=\"1px\" height=\"1px\" class=\"\" style=\"width:1px;height:1px;display:none\" src=\"http://www.jintiankansha.me/rss_static/11757/q4KsCRohdR\"></div></div>","descriptionType":"html","publishedDate":"Wed, 02 Sep 2020 03:30:00 +0000","feedId":2521,"bgimg":"http://img.100weidu.com/mmbiz_jpg/eZzl4LXykQzHY4nRl5eF5qjEKWumNas13Zibs8EiaLpykrmoLpLGymBtgQNhgnsfsys5bpVAHHNmCxnQQovPlibxQ?imageView2/1/w/600","linkMd5":"46a214c22fa582009d96cf716d99afc8","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn18@2020_2/2020/09/05/06-41-45-317_ef6e3e40aea5c4d3.webp","destWidth":600,"destHeight":298,"sourceBytes":17192,"destBytes":12030,"author":"","articleImgCdnMap":{"http://img.100weidu.com/mmbiz_jpg/eZzl4LXykQzHY4nRl5eF5qjEKWumNas13Zibs8EiaLpykrmoLpLGymBtgQNhgnsfsys5bpVAHHNmCxnQQovPlibxQ?imageView2/1/w/600":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn18@2020_2/2020/09/05/06-41-45-317_ef6e3e40aea5c4d3.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/hObz0jenxicASdS5GkHbY93pDYlSmjTL0eNaa4Ky7w2kDJIdP1c1Zibm2Sc4XTq1XGA8xC6jCLqkBaG2icr5tXkPg/640?wx_fmt=png":null,"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/hObz0jenxicASdS5GkHbY93pDYlSmjTL0YQI64DXs9AhkicAJuFic02sdeMaJh71DoFXy2MF1DacRRYfsOpOmicdUw/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn11@2020_4/2020/09/05/06-41-59-080_ab53110dfc95f556.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQzHY4nRl5eF5qjEKWumNas1JnGA35dEicpTGq8MXrkxcAoxsM96DoELwRAVxNReXvcGotDoOZX79sg/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn68@2020_5/2020/09/05/06-42-59-970_6f01e482968bb65d.webp","http://www.jintiankansha.me/rss_static/11757/q4KsCRohdR":null},"publishedOrCreatedDate":1599288104741},{"createdTime":"2020-09-05 14:41:44","updatedTime":"2020-09-05 14:41:44","title":"监控系统选型，这篇不可不读！","link":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F%E9%80%89%E5%9E%8B%EF%BC%8C%E8%BF%99%E7%AF%87%E4%B8%8D%E5%8F%AF%E4%B8%8D%E8%AF%BB%EF%BC%81","description":"<div><div><div id=\"media\" class=\"rich_media_thumb_wrp\">\n\n            <img class=\"rich_media_thumb\" src=\"http://img.100weidu.com/mmbiz_jpg/eZzl4LXykQy6Uwm3SGUMYic8R3o8yalAkTic5GPwR7jkY01P2ugFCFjn7gxm7eLYLfzIibibDINiaP7Xgh5Vy6APrzg?imageView2/1/w/600\">\n        </div>\n    \n\n    \n\n    <div class=\"rich_media_content\" id=\"js_content\">\n                    \n\n                    \n\n                    \n                    \n                    <p style=\"text-align: center;\"><span style=\"font-size: 14px;letter-spacing: 0.5440000295639038px;text-align: center;max-width: 100%;color: rgb(255, 41, 65);line-height: 22.4px;\">（给</span><span style=\"font-size: 14px;letter-spacing: 0.5440000295639038px;text-align: center;max-width: 100%;line-height: 22.4px;color: rgb(0, 128, 255);\">ImportNew</span><span style=\"font-size: 14px;letter-spacing: 0.5440000295639038px;text-align: center;max-width: 100%;color: rgb(255, 41, 65);line-height: 22.4px;\">加星标，提高Java技能）</span></p><blockquote><p style=\"letter-spacing: 0.5440000295639038px;white-space: normal;background-color: rgb(255, 255, 255);max-width: 100%;min-height: 1em;text-align: left;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-size: 14px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">转自：骆俊武</span></p></blockquote><p><br></p><section data-mpa-powered-by=\"yiban.io\" style=\"max-width: 100%;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb border-box break-word><p style=\"max-width: 100%;min-height: 1em;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><img data-ratio=\"0.5098039507865906\" data-type=\"jpeg\" data-w=\"408\" data-backw=\"578\" data-backh=\"299\" style=\"width: 677px; box-sizing: border-box !important; overflow-wrap: break-word !important; visibility: visible !important; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/AaabKZjib2kYKQe10R8d4NKJHfFdBsjDKXUwxzia0pDgMtBVNN2dAJ7iaBYyA2Y8r6dUuD2hwBupgxyLicIYTmNmicg/640?wx_fmt=jpeg\"><span style=\"max-width: 100%;color: rgb(154, 154, 154);font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></span></p><p style=\"margin-top: 20px;padding-right: 4px;padding-left: 4px;max-width: 100%;min-height: 1em;letter-spacing: 1px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;font-size: 16px;white-space: pre-line;line-height: 27px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-size: 15px;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">之前，我写过几篇有关「线上问题排查」的文章，文中附带了一些监控图，有些读者对此很感兴趣，问我监控系统选型上有没有好的建议？</span></p><p style=\"margin-top: 20px;padding-right: 4px;padding-left: 4px;max-width: 100%;min-height: 1em;letter-spacing: 0.544px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;font-size: 16px;white-space: pre-line;line-height: 27px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-size: 15px;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">目前我所经历的几家公司，监控系统都是自研的。其实业界有很多优秀的开源产品可供选择，能满足绝大部分的监控需求，如果能从中选择一款满足企业当下的诉求，显然最省时省力。</span></p><p style=\"margin-top: 20px;margin-bottom: 10px;padding-right: 4px;padding-left: 4px;max-width: 100%;min-height: 1em;letter-spacing: 0.544px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;font-size: 16px;white-space: pre-line;line-height: 27px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-size: 15px;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">这篇文章，我将对监控体系的基础知识、原理和架构做一次系统性整理，同时还会对几款最常用的开源监控产品做下介绍，以便大家选型时参考。内容包括3部分</span><span style=\"max-width: 100%;font-size: 15px;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">：</span><span style=\"max-width: 100%;font-size: 15px;letter-spacing: 0.51px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></span></p><ul class=\"list-paddingleft-2\" style=\"padding-left: 1.5em;max-width: 100%;letter-spacing: 0.544px;width: 577.417px;list-style-type: square;overflow-wrap: break-word !important;\"><li style=\"max-width: 100%;text-align: left;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 5px;max-width: 100%;text-align: justify;white-space: pre-line;line-height: 30px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\">必知必会的监控基础知识</section></li><li style=\"max-width: 100%;text-align: left;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 5px;max-width: 100%;text-align: justify;white-space: pre-line;line-height: 30px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\">主流监控系统介绍</section></li><li style=\"max-width: 100%;text-align: left;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 5px;max-width: 100%;text-align: justify;white-space: pre-line;line-height: 30px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">监控系统的选型建议</span></section></li></ul></section><section style=\"margin-top: 5px;max-width: 100%;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif rgb pre-line border-box break-word><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></section><section style=\"max-width: 100%;letter-spacing: 0.544px;white-space: normal;background-color: rgb(255, 255, 255);color: rgb(63, 63, 63);font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;text-align: center;background-position: center 20px;background-size: 112px;background-repeat: no-repeat;background-attachment: initial;background-origin: initial;background-clip: initial;font-size: 19px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"margin-bottom: 10px;max-width: 100%;line-height: 48px;color: rgb(234, 84, 41);border-bottom: 2px solid rgb(234, 84, 41);display: inline-block;font-size: 17px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">01 必知必会的监控基础知识</span></section><p style=\"padding-top: 20px;padding-right: 4px;padding-left: 4px;max-width: 100%;min-height: 1em;letter-spacing: 0.544px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;background-color: rgb(255, 255, 255);white-space: pre-line;line-height: 27px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">监控系统</span>俗称<span style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">「</span>第三只眼<span style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">」</span>，几乎是我们每天都会打交道的系统，下面 4 项基础知识我认为是必须要了解的。</span><span style=\"max-width: 100%;letter-spacing: 0.544px;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></span></p><section style=\"margin-bottom: 10px;padding-top: 20px;padding-right: 4px;padding-left: 4px;max-width: 100%;letter-spacing: 0.544px;min-height: 1em;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;background-color: rgb(255, 255, 255);font-size: 16px;white-space: pre-line;line-height: 27px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-weight: 700;letter-spacing: 0.51px;color: rgb(123, 12, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\">1. 监控系统的7大作用</span></section><section style=\"margin-bottom: 5px;padding-right: 4px;padding-left: 4px;max-width: 100%;letter-spacing: 0.544px;min-height: 1em;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;background-color: rgb(255, 255, 255);font-size: 16px;white-space: pre-line;line-height: 27px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">正所谓「无监控，不运维」，监控系统的地位不言而喻。不管你是监控系统的开发者还是使用者，首先肯定要清楚：监控系统的目标是什么？它能发挥什么作用？</span></span></section><p style=\"margin-top: 10px;margin-bottom: 15px;max-width: 100%;min-height: 1em;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb center border-box break-word><img class=\"rich_pages\" data-backh=\"358\" data-backw=\"578\" data-ratio=\"0.6197975253093363\" data-s=\"300,640\" data-type=\"png\" data-w=\"889\" style=\"box-shadow: none; width: 677px; box-sizing: border-box !important; overflow-wrap: break-word !important; visibility: visible !important; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/AaabKZjib2ka9iaZLtmsuQ0d0IQe2qg9NSaic5iaoVQiaQd5zlpySuJ1CQdFHbOMg27JtamGQiblRckofib4OAZ6mhVhA/640?wx_fmt=png\"></p><ul class=\"list-paddingleft-2\" style=\"padding-left: 1.2em;max-width: 100%;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb square break-word><li style=\"max-width: 100%;text-align: left;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 5px;max-width: 100%;text-align: justify;white-space: pre-line;line-height: 28px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">实时采集监控数据</strong></span>：包括<span style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">硬件、操作系统、中间件、应用程序等各个维度的数据。</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></section></li><li style=\"max-width: 100%;text-align: left;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 15px;max-width: 100%;text-align: justify;white-space: pre-line;line-height: 28px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">实时反馈监控状态</strong></span>：通过对采集的数据进行多维度统计和可视化展示，能实时体现监控对象的状态是正常还是异常。</section></li><li style=\"max-width: 100%;text-align: left;font-size: 15px;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 15px;max-width: 100%;text-align: justify;white-space: pre-line;line-height: 27px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\">预知故障和告警：</span></strong><span style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">能够提前预知故障风险，并及时发出告警信息。</span></section></li><li style=\"max-width: 100%;text-align: left;font-size: 15px;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 15px;max-width: 100%;text-align: justify;white-space: pre-line;line-height: 28px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\">辅助定位故障：</span></strong><span style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">提供故障发生时的各项指标数据，辅助故障分析和定位。</span></span><span style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></span></section></li><li style=\"max-width: 100%;text-align: left;font-size: 15px;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><p style=\"margin-top: 15px;max-width: 100%;min-height: 1em;text-align: justify;line-height: 28px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;color: rgb(74, 74, 74);letter-spacing: 0.544px;white-space: pre-line;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\">辅助性能调优：</span></strong><span style=\"max-width: 100%;color: rgb(74, 74, 74);letter-spacing: 0.544px;white-space: pre-line;box-sizing: border-box !important;overflow-wrap: break-word !important;\">为性能调优提供数据支持，比如慢SQL，接口响应时间等。</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></p></li><li style=\"max-width: 100%;text-align: left;font-size: 15px;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 15px;max-width: 100%;text-align: justify;line-height: 28px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;color: rgb(74, 74, 74);letter-spacing: 0.544px;white-space: pre-line;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\">辅助容量规划：</span></strong><span style=\"max-width: 100%;color: rgb(74, 74, 74);letter-spacing: 0.544px;white-space: pre-line;box-sizing: border-box !important;overflow-wrap: break-word !important;\">为服务器、中间件以及应用集群的容量规划提供数据支撑。</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></section></li><li style=\"max-width: 100%;text-align: left;font-size: 15px;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 15px;max-width: 100%;text-align: justify;white-space: pre-line;line-height: 28px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\">辅助自动化运维：</span></strong><span style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">为自动扩容或者根据配置的SLA进行服务降级等智能运维提供数据支撑。</span><span style=\"max-width: 100%;letter-spacing: 0.544px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></span></section></li></ul><section style=\"margin-top: 15px;margin-bottom: 10px;padding-top: 20px;padding-right: 4px;padding-left: 4px;max-width: 100%;letter-spacing: 0.544px;min-height: 1em;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;background-color: rgb(255, 255, 255);font-size: 16px;white-space: pre-line;line-height: 27px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-weight: 700;letter-spacing: 0.51px;color: rgb(123, 12, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\">2. 使用监控系统的正确姿势</span></section><blockquote data-tool=\"mdnice编辑器\" style=\"margin-top: 20px;margin-bottom: 20px;padding-top: 10px;padding-right: 10px;padding-bottom: 10px;border-width: initial;border-style: none;border-color: initial;color: rgb(136, 136, 136);font-size: 0.9em;max-width: 100%;letter-spacing: 0.544px;white-space: normal;line-height: 1.8;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, \" pingfang sc cambria cochin georgia times new roman serif auto rgba border-box break-word><span style=\"max-width: 100%;color: rgb(85, 85, 85);font-size: 3em;font-family: Arial, serif;line-height: 1em;font-weight: 700;box-sizing: border-box !important;overflow-wrap: break-word !important;\">“</span><p style=\"padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;font-size: 16px;color: black;line-height: 26px;display: inline;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(74, 74, 74);font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">出任何线上事故，先不说其他地方有问题，监控部分一定是有问题的。</span></p></blockquote><p style=\"margin-bottom: 20px;padding-right: 4px;padding-left: 4px;max-width: 100%;min-height: 1em;letter-spacing: 0.544px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;background-color: rgb(255, 255, 255);white-space: pre-line;line-height: 27px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;letter-spacing: 0.544px;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">听着很甩锅的一句话，仔细思考好像有一定道理。我们在事故复盘时，通常会思考这3个和监控有关的问题：有没有做监控？监控是否及时？监控信息是否有助于快速定位问题？</span></p><p style=\"margin-bottom: 5px;padding-right: 4px;padding-left: 4px;max-width: 100%;min-height: 1em;letter-spacing: 0.544px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;background-color: rgb(255, 255, 255);white-space: pre-line;line-height: 27px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;letter-spacing: 0.544px;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">可见光有一套好的监控系统还不够，还必须知道</span><span style=\"max-width: 100%;letter-spacing: 0.544px;font-size: 15px;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">「</span></strong><strong style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">如何</span></strong><strong style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">用好它<span style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">」</span></strong></span><span style=\"max-width: 100%;letter-spacing: 0.544px;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">。一个成熟的研发团队通常会定一个监控规范，用来统一监控系统的使用方法。</span></p><p style=\"margin-top: 10px;margin-bottom: 15px;max-width: 100%;min-height: 1em;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb center border-box break-word><img class=\"rich_pages\" data-backh=\"216\" data-backw=\"578\" data-ratio=\"0.3739910313901345\" data-s=\"300,640\" data-type=\"png\" data-w=\"1115\" style=\"box-shadow: none; width: 677px; box-sizing: border-box !important; overflow-wrap: break-word !important; visibility: visible !important; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/AaabKZjib2ka9iaZLtmsuQ0d0IQe2qg9NS7f4mPicXtHdjaoMnWezpjOaE8HcF9RI1Ham0F4lGpTdj9cHP5qhjD8A/640?wx_fmt=png\"></p><ul class=\"list-paddingleft-2\" style=\"padding-left: 1.2em;max-width: 100%;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb square break-word><li style=\"max-width: 100%;text-align: left;font-size: 15px;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 5px;max-width: 100%;text-align: justify;white-space: pre-line;line-height: 28px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\">了解监控对象的工作原理：</span></strong>要做到对监控对象有基本的了解，清楚它的工作原理。比如想对JVM进行监控，你必须清楚JVM的堆内存结构和垃圾回收机制。</section></li><li style=\"max-width: 100%;text-align: left;font-size: 15px;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 15px;max-width: 100%;text-align: justify;white-space: pre-line;line-height: 28px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\">确定监控对象的指标：</span></strong><span style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">清楚使用哪些指标来刻画监控对象的状态？比如想对某个接口进行监控，可以采用请求量、耗时、超时量、异常量等指标来衡量。</span><span style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></span></section></li><li style=\"max-width: 100%;text-align: left;font-size: 15px;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><p style=\"margin-top: 15px;max-width: 100%;min-height: 1em;line-height: 28px;text-align: justify;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;color: rgb(74, 74, 74);letter-spacing: 0.544px;white-space: pre-line;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\">定义合理的报警阈值和等级：</span></strong><span style=\"max-width: 100%;color: rgb(74, 74, 74);letter-spacing: 0.544px;white-space: pre-line;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;letter-spacing: 0.544px;text-align: left;box-sizing: border-box !important;overflow-wrap: break-word !important;\">达</span>到什么阈值需要告警？对应的故障等级是多少？<span style=\"max-width: 100%;letter-spacing: 0.544px;text-align: left;box-sizing: border-box !important;overflow-wrap: break-word !important;\">不需要处理的告警不是好告警，</span>可见定义合理的阈值有多重要，<span style=\"max-width: 100%;letter-spacing: 0.544px;text-align: left;box-sizing: border-box !important;overflow-wrap: break-word !important;\">否则只会降低运维效率或者让监控系统失去它的作用</span>。</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></p></li><li style=\"max-width: 100%;text-align: left;font-size: 15px;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 15px;max-width: 100%;text-align: justify;white-space: pre-line;line-height: 28px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\">建立完善的故障处理流程：</span></strong>收到故障告警后，一定要有相应的处理流程和oncall机制，让故障及时被跟进处理。</section></li></ul><section style=\"margin-top: 15px;margin-bottom: 10px;padding-top: 20px;padding-right: 4px;padding-left: 4px;max-width: 100%;letter-spacing: 0.544px;min-height: 1em;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;background-color: rgb(255, 255, 255);font-size: 16px;white-space: pre-line;line-height: 27px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-weight: 700;letter-spacing: 0.51px;color: rgb(123, 12, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\">3. 监控的对象和指标都有哪些？</span></section><section style=\"margin-bottom: 20px;padding-right: 4px;padding-left: 4px;max-width: 100%;letter-spacing: 0.544px;min-height: 1em;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;background-color: rgb(255, 255, 255);font-size: 16px;white-space: pre-line;line-height: 27px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">监控已然成为了整个产品生命周期非常重要的一环，运维关注硬件和基础监控，研发关注各类中间件和应用层的监控，产品关注核心业务指标的监控。</span></span><span style=\"max-width: 100%;font-size: 15px;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">可见，监控的对象已经越来越立体化。</span></section><section style=\"padding-right: 4px;padding-left: 4px;max-width: 100%;letter-spacing: 0.544px;min-height: 1em;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;background-color: rgb(255, 255, 255);font-size: 16px;white-space: pre-line;line-height: 27px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-size: 15px;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">这里，我对常用的监控对象以及监控指标做了分类整理，供大家参考。</span></section><p style=\"max-width: 100%;min-height: 1em;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb center border-box break-word><img class=\"rich_pages\" data-ratio=\"0.46926536731634183\" data-s=\"300,640\" data-type=\"png\" data-w=\"667\" style=\"box-sizing: border-box !important; overflow-wrap: break-word !important; width: 667px !important; visibility: visible !important; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/AaabKZjib2ka9iaZLtmsuQ0d0IQe2qg9NSRe9gDr03L6hVfP4ueibC2ibTGwCwARulzH4IZia76Sw1zCLSq0xajlHKQ/640?wx_fmt=png\"></p><p style=\"margin-bottom: 10px;max-width: 100%;min-height: 1em;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb left border-box break-word><span style=\"max-width: 100%;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;white-space: pre-line;font-size: 15px;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">3.1 硬件监控</span></strong></span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></p><p style=\"max-width: 100%;min-height: 1em;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb left border-box break-word><span style=\"max-width: 100%;color: rgb(74, 74, 74);font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;letter-spacing: 0.544px;white-space: pre-line;font-size: 14px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">包括：电源状态、CPU状态、机器温度、风扇状态、物理磁盘、raid状态、内存状态、网卡状态</span></p><section style=\"margin-top: 25px;margin-bottom: 10px;max-width: 100%;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb left border-box break-word><span style=\"max-width: 100%;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;font-size: 15px;letter-spacing: 0.544px;white-space: pre-line;box-sizing: border-box !important;overflow-wrap: break-word !important;\">3.2 服务器基础监控</span></strong></span></section><ul class=\"list-paddingleft-2\" style=\"padding-left: 1.2em;max-width: 100%;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb square break-word><li style=\"max-width: 100%;text-align: left;font-size: 14px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 5px;max-width: 100%;text-align: justify;white-space: pre-line;line-height: 27px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">CPU：<span style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">单个CPU以及整体的</span>使用情况</span></section></li><li style=\"max-width: 100%;text-align: left;font-size: 14px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 5px;max-width: 100%;text-align: justify;white-space: pre-line;line-height: 27px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">内存：<strong style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></strong><span style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">已用内存、可用内存</span></span></section></li><li style=\"max-width: 100%;text-align: left;font-size: 14px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><p style=\"margin-top: 5px;max-width: 100%;min-height: 1em;line-height: 27px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">磁盘：<strong style=\"max-width: 100%;letter-spacing: 0.544px;white-space: pre-line;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></strong><span style=\"max-width: 100%;letter-spacing: 0.544px;white-space: pre-line;box-sizing: border-box !important;overflow-wrap: break-word !important;\">磁盘使用率、磁盘读写的吞吐量</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></span></p></li><li style=\"max-width: 100%;text-align: left;font-size: 14px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 5px;max-width: 100%;text-align: justify;white-space: pre-line;line-height: 27px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">网络：出口流量、入口流量、TCP连接状态</span><strong style=\"max-width: 100%;color: rgb(0, 0, 0);text-align: left;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif border-box break-word></strong></section></li></ul><section style=\"margin-top: 25px;margin-bottom: 10px;max-width: 100%;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb left border-box break-word><span style=\"max-width: 100%;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;white-space: pre-line;font-size: 15px;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">3.3 数据库监控</span></strong></span></section><p style=\"max-width: 100%;min-height: 1em;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb left border-box break-word><span style=\"max-width: 100%;color: rgb(74, 74, 74);font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;letter-spacing: 0.544px;white-space: pre-line;font-size: 14px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">包括：数据库连接数、QPS、TPS、并行处理的会话数、缓存命中率、主从延时、锁状态、慢查询</span></p><section style=\"margin-top: 25px;margin-bottom: 10px;max-width: 100%;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb left border-box break-word><span style=\"max-width: 100%;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;font-size: 15px;letter-spacing: 0.544px;white-space: pre-line;box-sizing: border-box !important;overflow-wrap: break-word !important;\">3.4 中间件监控</span></strong></span></section><ul class=\"list-paddingleft-2\" style=\"padding-left: 1.2em;max-width: 100%;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb square break-word><li style=\"max-width: 100%;text-align: left;font-size: 14px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 5px;max-width: 100%;text-align: justify;white-space: pre-line;line-height: 27px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">Nginx：活跃连接数、<span style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">等待连接数、丢弃连接数、</span>请求量、耗时、5XX错误率</span></section></li><li style=\"max-width: 100%;text-align: left;font-size: 14px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 5px;max-width: 100%;text-align: justify;white-space: pre-line;line-height: 27px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">Tomcat：<span style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">最大线程数、当前线程数、请求量、耗时、错误量、堆内存使用情况、GC次数和耗时</span></span></section></li><li style=\"max-width: 100%;text-align: left;font-size: 14px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><p style=\"margin-top: 5px;max-width: 100%;min-height: 1em;line-height: 27px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">缓存 ：成功<span style=\"max-width: 100%;letter-spacing: 0.544px;white-space: pre-line;box-sizing: border-box !important;overflow-wrap: break-word !important;\">连接数、阻塞连接数、<span style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">已使用内存、<span style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">内存碎片率</span><span style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></span>、</span>请求量、耗时、缓存命中率</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></span></p></li><li style=\"max-width: 100%;text-align: left;font-size: 14px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 5px;max-width: 100%;text-align: justify;white-space: pre-line;line-height: 27px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">消息队列：连接数、队列数、生产速率、消费速率、消息堆积量</span></section></li></ul><section style=\"margin-top: 25px;margin-bottom: 10px;max-width: 100%;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb left border-box break-word><span style=\"max-width: 100%;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;font-size: 15px;letter-spacing: 0.544px;white-space: pre-line;box-sizing: border-box !important;overflow-wrap: break-word !important;\">3.5 应用监控</span></strong></span></section><ul class=\"list-paddingleft-2\" style=\"padding-left: 1.2em;max-width: 100%;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb square break-word><li style=\"max-width: 100%;text-align: left;font-size: 14px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 5px;max-width: 100%;text-align: justify;white-space: pre-line;line-height: 27px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">HTTP接口：URL存活、请求量、耗时、异常量</span></section></li><li style=\"max-width: 100%;text-align: left;font-size: 14px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 5px;max-width: 100%;text-align: justify;white-space: pre-line;line-height: 27px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">RPC接口：<span style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">请求量、耗时、超时量、拒绝量</span></span></section></li><li style=\"max-width: 100%;text-align: left;font-size: 14px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><p style=\"margin-top: 5px;max-width: 100%;min-height: 1em;line-height: 27px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">JVM ：<span style=\"max-width: 100%;letter-spacing: 0.544px;white-space: pre-line;box-sizing: border-box !important;overflow-wrap: break-word !important;\">GC次数、GC耗时、各个内存区域的大小、当前线程数、死锁线程数</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></span></p></li><li style=\"max-width: 100%;text-align: left;font-size: 14px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 5px;max-width: 100%;text-align: justify;white-space: pre-line;line-height: 27px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">线程池：活跃线程数、任务队列大小、任务执行耗时、拒绝任务数</span></section></li><li style=\"max-width: 100%;text-align: left;font-size: 14px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 5px;max-width: 100%;text-align: justify;white-space: pre-line;line-height: 27px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">连接池：总连接数、活跃连接数</span></section></li><li style=\"max-width: 100%;text-align: left;font-size: 14px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 5px;max-width: 100%;text-align: justify;white-space: pre-line;line-height: 27px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">日志监控：访问日志、错误日志</span></section></li><li style=\"max-width: 100%;text-align: left;font-size: 14px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 5px;max-width: 100%;text-align: justify;white-space: pre-line;line-height: 27px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">业务指标：<span style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">视业务来定</span>，比如PV、订单量等</span></section></li></ul><section style=\"margin-top: 15px;margin-bottom: 10px;padding-top: 20px;padding-right: 4px;padding-left: 4px;max-width: 100%;letter-spacing: 0.544px;min-height: 1em;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;background-color: rgb(255, 255, 255);font-size: 16px;white-space: pre-line;line-height: 27px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-weight: 700;letter-spacing: 0.51px;color: rgb(123, 12, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\">4. 监控系统的基本流程</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></section><section style=\"padding-right: 4px;padding-left: 4px;max-width: 100%;letter-spacing: 0.544px;min-height: 1em;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;background-color: rgb(255, 255, 255);font-size: 16px;white-space: pre-line;line-height: 27px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">无论是开源的监控系统还是自研的监控系统，监控的整个流程大同小异，一般都包括以下模块：</span><span style=\"max-width: 100%;text-align: center;color: rgb(51, 51, 51);font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif border-box break-word></span></section><p style=\"margin-top: 10px;margin-bottom: 10px;max-width: 100%;min-height: 1em;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb center border-box break-word><img class=\"rich_pages\" data-backh=\"246\" data-backw=\"578\" data-ratio=\"0.42554991539763115\" data-s=\"300,640\" data-type=\"png\" data-w=\"1182\" style=\"width: 677px; box-sizing: border-box !important; overflow-wrap: break-word !important; visibility: visible !important; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/AaabKZjib2kbP23ApP3flYOGcibWAN9beXEPYBTtUc0EibyZmkvQFEBCcyngySBhS0TL6UBZep9R2zVaibV2x8KbZA/640?wx_fmt=png\"></p><ul class=\"list-paddingleft-2\" style=\"padding-left: 1.2em;max-width: 100%;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb square break-word><li style=\"max-width: 100%;text-align: left;font-size: 15px;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 5px;max-width: 100%;text-align: justify;white-space: pre-line;line-height: 28px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\">数据采集：</span></strong>采集的方式有很多种，包括<span style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">日志埋点进行采集（通过Logstash、Filebeat等进行上报和解析）</span>，<span style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">JMX标准接口输出监控指标，</span>被监控对象提供REST API进行数据<span style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">采集</span>（如Hadoop、ES），系统命令行，统一的SDK进行侵入式的埋点和上报等。</section></li><li style=\"max-width: 100%;text-align: left;font-size: 15px;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><p style=\"margin-top: 15px;max-width: 100%;min-height: 1em;text-align: justify;white-space: pre-line;line-height: 28px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\">数据传输：</span></strong><span style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">将采集的数据以TCP、UDP或者HTTP协议的形式上报给监控系统，有主动Push模式，也有被动Pull模式。</span><span style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></span></p></li><li style=\"max-width: 100%;text-align: left;font-size: 15px;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 15px;max-width: 100%;line-height: 28px;text-align: justify;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;color: rgb(74, 74, 74);letter-spacing: 0.544px;white-space: pre-line;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\">数据存储：</span></strong><span style=\"max-width: 100%;color: rgb(74, 74, 74);letter-spacing: 0.544px;white-space: pre-line;box-sizing: border-box !important;overflow-wrap: break-word !important;\">有使用MySQL、Oracle等RDBMS存储的，也有使用时序数据库RRDTool、OpentTSDB、InfluxDB存储的，还有使用HBase存储的。</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></section></li><li style=\"max-width: 100%;text-align: left;font-size: 15px;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><p style=\"margin-top: 15px;max-width: 100%;min-height: 1em;text-align: justify;white-space: pre-line;line-height: 28px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\">数据展示：</span></strong>数据指标的图形化展示。</p></li><li style=\"max-width: 100%;text-align: left;font-size: 15px;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><p style=\"margin-top: 15px;max-width: 100%;min-height: 1em;text-align: justify;white-space: pre-line;line-height: 28px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\">监控告警：</span></strong><span style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">灵活的告警设置，以及支持邮件、短信、IM等多种通知通道。</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></p></li></ul><section style=\"padding-right: 4px;padding-left: 4px;max-width: 100%;letter-spacing: 0.544px;min-height: 1em;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;background-color: rgb(255, 255, 255);font-size: 16px;white-space: pre-line;line-height: 27px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></section><p style=\"max-width: 100%;min-height: 1em;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb center border-box break-word><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></p><section style=\"max-width: 100%;letter-spacing: 0.544px;white-space: normal;background-color: rgb(255, 255, 255);color: rgb(63, 63, 63);font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;text-align: center;background-position: center 20px;background-size: 112px;background-repeat: no-repeat;background-attachment: initial;background-origin: initial;background-clip: initial;font-size: 19px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"margin-bottom: 10px;max-width: 100%;line-height: 48px;color: rgb(234, 84, 41);border-bottom: 2px solid rgb(234, 84, 41);display: inline-block;font-size: 17px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">02 主流监控系统介绍</span></section><section style=\"margin-bottom: 15px;padding-top: 20px;padding-right: 4px;padding-left: 4px;max-width: 100%;letter-spacing: 0.544px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;background-color: rgb(255, 255, 255);font-size: 16px;white-space: pre-line;line-height: 27px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">下面再来认识下主流的开源监控系统，由于篇幅有限，我挑选了3款<span style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">使用最广泛的监控系统</span>：Zabbix、Open-Falcon、Prometheus，<span style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">会对它们的架构进行介绍</span>，同时总结下各自的优劣势<span style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">。</span></span></section><p style=\"margin-top: 10px;margin-bottom: 10px;max-width: 100%;min-height: 1em;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb center border-box break-word><img class=\"rich_pages\" data-backh=\"273\" data-backw=\"578\" data-ratio=\"0.47150259067357514\" data-s=\"300,640\" data-type=\"png\" data-w=\"1158\" style=\"width: 677px; box-sizing: border-box !important; overflow-wrap: break-word !important; visibility: visible !important; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/AaabKZjib2kbP23ApP3flYOGcibWAN9beXic4pTPKNCibhadZBicADkiaZ3JW5SpFUE2IOMTVv4L4jZ4iaZrSdTSiamAtA/640?wx_fmt=png\"></p><p style=\"padding-top: 20px;padding-right: 4px;padding-left: 4px;max-width: 100%;min-height: 1em;letter-spacing: 0.544px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;background-color: rgb(255, 255, 255);font-size: 16px;white-space: pre-line;line-height: 27px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-weight: 700;letter-spacing: 0.51px;color: rgb(123, 12, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\">1. Zabbix（老牌监控的优秀代表）</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></p><section style=\"margin-top: 15px;max-width: 100%;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb center border-box break-word><img class=\"rich_pages\" data-ratio=\"0.4964871194379391\" data-s=\"300,640\" data-type=\"png\" data-w=\"1281\" style=\"box-shadow: none; border-width: 0px; border-style: solid; border-color: rgb(68, 68, 68); box-sizing: border-box !important; overflow-wrap: break-word !important; width: 677px !important; visibility: visible !important; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/AaabKZjib2kbP23ApP3flYOGcibWAN9beXpypqVKYdIdNhGaIl7aU6icwalExD01ESAsjU62ia9tup3Iw4tbuTjYBw/640?wx_fmt=png\"></section><p style=\"padding-top: 20px;padding-right: 4px;padding-left: 4px;max-width: 100%;min-height: 1em;letter-spacing: 0.544px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;background-color: rgb(255, 255, 255);font-size: 16px;white-space: pre-line;line-height: 27px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">Zabbix 1998年诞生，核心组件<span style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">采用C语言开发，Web端采用PHP开发</span>。它</span></span><span style=\"max-width: 100%;letter-spacing: 0.544px;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">属于老牌监控系统中的优秀代表，</span><span style=\"max-width: 100%;letter-spacing: 0.544px;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">监控功能很全面，</span><span style=\"max-width: 100%;letter-spacing: 0.544px;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">使用也很广泛，差不多有70%左右的互联网公司都曾使用过 Zabbix 作为监控解决方案。</span></p><p style=\"margin-bottom: 10px;padding-top: 20px;padding-right: 4px;padding-left: 4px;max-width: 100%;min-height: 1em;letter-spacing: 0.544px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;background-color: rgb(255, 255, 255);font-size: 16px;white-space: pre-line;line-height: 27px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">先来了解下Zabbix的架构设计：</span></span></span></p><p style=\"max-width: 100%;min-height: 1em;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb center border-box break-word><img class=\"rich_pages\" data-backh=\"375\" data-backw=\"578\" data-ratio=\"0.6481481481481481\" data-s=\"300,640\" data-type=\"png\" data-w=\"918\" style=\"width: 677px; box-sizing: border-box !important; overflow-wrap: break-word !important; visibility: visible !important; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/AaabKZjib2kbP23ApP3flYOGcibWAN9beXOD99tqb2ChqoJFhXbeSHEcO2r2neXXIbs5KTNWicaRoFKY1vYg0ic8Uw/640?wx_fmt=png\"></p><p style=\"margin-bottom: 15px;max-width: 100%;min-height: 1em;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb center border-box break-word><span style=\"max-width: 100%;color: rgb(136, 136, 136);font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;font-size: 13px;letter-spacing: 0.544px;white-space: pre-line;box-sizing: border-box !important;overflow-wrap: break-word !important;\">Zabbix架构图</span><span style=\"max-width: 100%;letter-spacing: 0.544px;font-size: 15px;color: rgb(74, 74, 74);font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;white-space: pre-line;text-align: justify;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></span></p><ul class=\"list-paddingleft-2\" style=\"padding-left: 1.2em;max-width: 100%;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb square break-word><li style=\"max-width: 100%;text-align: left;font-size: 15px;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 5px;max-width: 100%;text-align: justify;white-space: pre-line;line-height: 28px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\">Zabbix Server：</span></strong>核心组件，C语言编写，负责接收Agent、Proxy发送的监控数据，也支持JMX、SNMP等多种协议直接采集数据。同时，它还负责数据的汇总存储以及告警触发等。</section></li><li style=\"max-width: 100%;text-align: left;font-size: 15px;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><p style=\"margin-top: 10px;max-width: 100%;min-height: 1em;text-align: justify;white-space: pre-line;line-height: 28px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\">Zabbix Proxy：</span></strong><span style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">可选组件，对于被监控机器较多的情况下，可使用Proxy进行分布式监控，它能代理Server收集部分监控数据，以减轻Server的压力。</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></p></li><li style=\"max-width: 100%;text-align: left;font-size: 15px;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 15px;max-width: 100%;text-align: justify;white-space: pre-line;line-height: 28px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\">Zabbix Agentd：</span></strong><span style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">部署在被监控主机上，用于采集本机的数据并发送给Proxy或者Server，它的<span style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">插件机制支持用户自定义数据采集脚本</span>。Agent可在Server端手动配置，也可以通过自动发现机制被识别。数据收集方式同时支持主动Push和被动Pull 两种模式。</span><span style=\"max-width: 100%;letter-spacing: 0.544px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif border-box break-word></span></section></li><li style=\"max-width: 100%;text-align: left;font-size: 15px;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><p style=\"margin-top: 15px;max-width: 100%;min-height: 1em;line-height: 28px;text-align: justify;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(74, 74, 74);letter-spacing: 0.544px;white-space: pre-line;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\">Database：</span></strong><span style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">用于存储配置信息以及采集到的数据，支持MySQL、Oracle等关系型数据库。同时，最新版本的Zabbix已经开始支持时序数据库，不过成熟度还不高。</span></span></p></li><li style=\"max-width: 100%;text-align: left;font-size: 15px;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><p style=\"margin-top: 15px;max-width: 100%;min-height: 1em;line-height: 28px;text-align: justify;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(74, 74, 74);letter-spacing: 0.544px;white-space: pre-line;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\">Web Server：</span></strong><span style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">Zabbix的GUI组件，PHP编写，提供监控数据的展现和告警配置。</span></span><span style=\"max-width: 100%;color: rgb(74, 74, 74);letter-spacing: 0.544px;white-space: pre-line;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></span></p></li></ul><p style=\"padding-top: 25px;padding-right: 4px;padding-left: 4px;max-width: 100%;min-height: 1em;letter-spacing: 0.544px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;background-color: rgb(255, 255, 255);font-size: 16px;white-space: pre-line;line-height: 27px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;letter-spacing: 0.544px;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">下面是 Zabbix 的优势：</span></p><ul class=\"list-paddingleft-2\" style=\"padding-left: 1.2em;max-width: 100%;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb square break-word><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><p style=\"padding-top: 15px;padding-right: 4px;max-width: 100%;min-height: 1em;letter-spacing: 0.544px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;font-size: 16px;white-space: pre-line;line-height: 28px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;letter-spacing: 0.544px;font-size: 15px;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">产品成熟</strong></span><span style=\"max-width: 100%;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif border-box break-word><strong style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">：</strong>由于诞生时间长且使用广泛，拥有丰富的文档资料以及各种开源的数据采集插件，能覆盖绝大部分监控场景。</span></p></li><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 10px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;letter-spacing: 0.544px;white-space: pre-line;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(0, 0, 0);font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;box-sizing: border-box !important;overflow-wrap: break-word !important;\">采集方式丰富</span><span style=\"max-width: 100%;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\">：</span></strong><span style=\"max-width: 100%;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\">支持Agent、SNMP、JMX、SSH等多种采集方式，以及主动和被动的数据传输方式。</span></span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></section></li><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 10px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(74, 74, 74);letter-spacing: 0.544px;white-space: pre-line;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;font-size: 16px;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;letter-spacing: 0.544px;font-size: 15px;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\">较强的扩展性</span></strong><span style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">：支持Proxy分布式监控，有agent自动发现功能，插件式架构支持用户自定义数据采集脚本。</span></span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></section></li><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 15px;padding-right: 4px;max-width: 100%;letter-spacing: 0.544px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;font-size: 16px;white-space: pre-line;line-height: 28px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;letter-spacing: 0.544px;font-size: 15px;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\">配置管理方便</span></strong><span style=\"max-width: 100%;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif border-box break-word>：能通过Web界面进行监控和告警配置，操作方便，上手简单。</span></section></li></ul><section style=\"margin-top: 15px;padding-right: 4px;padding-left: 4px;max-width: 100%;letter-spacing: 0.544px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;background-color: rgb(255, 255, 255);font-size: 16px;white-space: pre-line;line-height: 27px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><p style=\"padding-top: 20px;padding-right: 4px;padding-left: 4px;max-width: 100%;min-height: 1em;letter-spacing: 0.544px;line-height: 27px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;letter-spacing: 0.544px;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">下面是 Zabbix 的劣势：</span></p><ul class=\"list-paddingleft-2\" style=\"padding-left: 1.2em;max-width: 100%;width: 577.599px;white-space: normal;list-style-type: square;overflow-wrap: break-word !important;\"><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><p style=\"padding-top: 15px;padding-right: 4px;max-width: 100%;min-height: 1em;letter-spacing: 0.544px;white-space: pre-line;line-height: 28px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;letter-spacing: 0.544px;font-size: 15px;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">性能瓶颈</strong></span><span style=\"max-width: 100%;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif border-box break-word><strong style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">：</strong>机器量或者业务量大了后，关系型数据库的写入一定是瓶颈，官方给出的单机上限是5000台，个人感觉达不到，尤其现在应用层的指标越来越多。虽然最新版已经开始支持时序数据库，不过成熟度还不高。</span></p></li><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 10px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;letter-spacing: 0.544px;white-space: pre-line;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\">应用层监控支持有限</span><span style=\"max-width: 100%;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif border-box break-word>：</span></strong><span style=\"max-width: 100%;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif border-box break-word>如果想对应用程序做侵入式的埋点和采集（比如监控线程池或者接口性能），zabbix没有提供对应的sdk，通过插件式的脚本也能曲线实现此功能，个人感觉zabbix就不是做这个事的。</span></span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></section></li><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 10px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;letter-spacing: 0.544px;white-space: pre-line;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif border-box break-word><strong style=\"max-width: 100%;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;font-size: 16px;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;letter-spacing: 0.544px;font-size: 15px;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\">数据模型不强大</span></strong><span style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">：不支持tag，因此没法按多维度进行聚合统计和告警配置，使用起来不灵活。</span></span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></section></li><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 15px;padding-right: 4px;max-width: 100%;letter-spacing: 0.544px;white-space: pre-line;line-height: 28px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;letter-spacing: 0.544px;font-size: 15px;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\">方便二次开发难度大</span></strong><span style=\"max-width: 100%;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif border-box break-word>：Zabbix采用的是C语言，二次开发往往需要熟悉它的数据表结构，基于它提供的API更多只能做展示层的定制。</span></section></li></ul><p style=\"max-width: 100%;min-height: 1em;font-weight: 700;letter-spacing: 0.51px;color: rgb(123, 12, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></p><span style=\"max-width: 100%;font-weight: 700;letter-spacing: 0.51px;color: rgb(123, 12, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\">2. Open-Falcon（小米出品，国内流行）</span></section><section style=\"margin-top: 10px;max-width: 100%;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb center border-box break-word><img class=\"rich_pages\" data-backh=\"344\" data-backw=\"578\" data-ratio=\"0.594392523364486\" data-s=\"300,640\" data-type=\"png\" data-w=\"1070\" style=\"width: 677px; box-sizing: border-box !important; overflow-wrap: break-word !important; visibility: visible !important; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/AaabKZjib2kbP23ApP3flYOGcibWAN9beXqbcV2EDic0WzAmHaKnvnj1q09JgzEPMENhlevPibODXcRYaDLxJj6bgA/640?wx_fmt=png\"></section><p style=\"padding-top: 5px;padding-right: 4px;padding-left: 4px;max-width: 100%;min-height: 1em;letter-spacing: 0.544px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;background-color: rgb(255, 255, 255);font-size: 16px;white-space: pre-line;line-height: 27px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-size: 15px;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">O</span><span style=\"max-width: 100%;font-size: 15px;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">pen-falcon 是小米2015年开源的企业级监控工具，采用Go和Python语言开发，</span><span style=\"max-width: 100%;font-size: 15px;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">这是一款灵活、高性能且易扩展的新一代监控方案，<span style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">目前小米、美团、滴滴等超过200家公司在使用它。</span></span></p><p style=\"padding-top: 20px;padding-right: 4px;padding-left: 4px;max-width: 100%;min-height: 1em;letter-spacing: 0.544px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;background-color: rgb(255, 255, 255);font-size: 16px;white-space: pre-line;line-height: 27px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-size: 15px;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">小米初期也使用的Zabbix进行监控，但是机器量和业务量上来后，Zabbix就有些力不从心了。因此，后来自主研发了Open-Falcon，在架构设计上吸取了Zabbix的经验，同时很好地解决了Zabbix的诸多痛点。<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></span></span></p><p style=\"margin-bottom: 10px;padding-top: 20px;padding-right: 4px;padding-left: 4px;max-width: 100%;min-height: 1em;letter-spacing: 0.544px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;background-color: rgb(255, 255, 255);font-size: 16px;white-space: pre-line;line-height: 27px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-size: 15px;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">先来了解下Open-Falcon的架构设计：</span></span></p><section style=\"padding-top: 20px;padding-right: 4px;padding-left: 4px;max-width: 100%;letter-spacing: 0.544px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;background-color: rgb(255, 255, 255);font-size: 16px;white-space: pre-line;line-height: 27px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><img data-backh=\"378\" data-backw=\"570\" data-ratio=\"0.6632548618219037\" data-type=\"png\" data-w=\"977\" style=\"width: 669px; box-sizing: border-box !important; overflow-wrap: break-word !important; visibility: visible !important; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/AaabKZjib2ka9iaZLtmsuQ0d0IQe2qg9NSulv2WYP5Ve7xKZtQTD3AEoCZ6Xesr4qCkKibS84vI57Is6UcoBzMlng/640?wx_fmt=png\"></section><p style=\"margin-bottom: 20px;padding-right: 4px;padding-left: 4px;max-width: 100%;min-height: 1em;letter-spacing: 0.544px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;background-color: rgb(255, 255, 255);font-size: 16px;white-space: pre-line;line-height: 27px;color: rgb(74, 74, 74);text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(136, 136, 136);font-size: 13px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">Open-Falcon架构图，来自网络</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></p><ul class=\"list-paddingleft-2\" style=\"padding-left: 1.2em;max-width: 100%;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb square break-word><li style=\"max-width: 100%;text-align: left;font-size: 15px;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 5px;max-width: 100%;text-align: justify;white-space: pre-line;line-height: 28px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\">Falcon-agent：</span></strong>数据采集器和收集器，Go开发，部署在被监控的机器上，支持3种数据采集方式。首先它能自动采集单机200多个基础监控指标，无需做任何配置；同时支持用户自定义的plugin获取监控数据；此外，用户可通过http接口，自主push数据到本机的proxy-gateway，由gateway转发到server.</section></li><li style=\"max-width: 100%;text-align: left;font-size: 15px;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 15px;max-width: 100%;text-align: justify;white-space: pre-line;line-height: 28px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\">Transfer：</span></strong><span style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">数据分发组件，接收客户端发送的数据，分别发送给数据存储组件Graph和告警判定组件Judge，Graph和Judge均采用一致性hash做数据分片，以提高横向扩展能力。同时Transfer还支持将数据分发到OpenTSDB，用于历史归档。</span><span style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></span></section></li><li style=\"max-width: 100%;text-align: left;font-size: 15px;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><p style=\"margin-top: 15px;max-width: 100%;min-height: 1em;line-height: 28px;text-align: justify;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;color: rgb(74, 74, 74);letter-spacing: 0.544px;white-space: pre-line;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\">Graph：</span></strong><span style=\"max-width: 100%;color: rgb(74, 74, 74);letter-spacing: 0.544px;white-space: pre-line;box-sizing: border-box !important;overflow-wrap: break-word !important;\">数据存储组件，底层使用RRDTool（时序数据库）做单个指标的存储，并通过缓存、分批写入磁盘等方式进行了优化。据说一个graph实例能够处理8W+每秒的写入速率。</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></p></li><li style=\"max-width: 100%;text-align: left;font-size: 15px;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 15px;max-width: 100%;text-align: justify;white-space: pre-line;line-height: 28px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\">Judge和Alarm：</span></strong>告警组件，Judge对Transfer组件上报的数据进行实时计算，判断是否要产生告警事件，Alarm组件对告警事件进行收敛处理后，将告警消息推送给各个消息通道。</section></li><li style=\"max-width: 100%;text-align: left;font-size: 15px;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 15px;max-width: 100%;white-space: pre-line;line-height: 28px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\">API：</span></strong><span style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">面向终端用户，收到查询请求后会去Graph中查询指标数据，<span style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">汇总结果后统一返回给用户</span>，屏蔽了存储集群的分片细节。</span></section></li></ul><p style=\"padding-top: 25px;padding-right: 4px;padding-left: 4px;max-width: 100%;min-height: 1em;letter-spacing: 0.544px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;background-color: rgb(255, 255, 255);font-size: 16px;white-space: pre-line;line-height: 27px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;letter-spacing: 0.544px;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">下面是Open-Falcon的优势：</span></p><ul class=\"list-paddingleft-2\" style=\"padding-left: 1.2em;max-width: 100%;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb square break-word><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><p style=\"padding-top: 15px;padding-right: 4px;max-width: 100%;min-height: 1em;letter-spacing: 0.544px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;font-size: 16px;white-space: pre-line;line-height: 28px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;letter-spacing: 0.544px;font-size: 15px;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">自动采集能力</strong></span><span style=\"max-width: 100%;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif border-box break-word><strong style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">：</strong>Falcon-agent 能自动采集服务器的200多个基础指标（比如CPU、内存等）<span style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">，</span>无需在server上做任何配置，这一点可以秒杀Zabbix.</span></p></li><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 15px;padding-right: 4px;max-width: 100%;letter-spacing: 0.544px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;font-size: 16px;white-space: pre-line;line-height: 28px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;letter-spacing: 0.544px;font-size: 15px;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\">强大的存储能力</span></strong><span style=\"max-width: 100%;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif border-box break-word>：底层采用RRDTool，并且通过一致性hash进行数据分片，构建了一个分布式的时序数据存储系统，可扩展性强。</span></section></li><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><p style=\"padding-top: 15px;padding-right: 4px;max-width: 100%;min-height: 1em;letter-spacing: 0.544px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;font-size: 16px;white-space: pre-line;line-height: 28px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;letter-spacing: 0.544px;font-size: 15px;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">灵活的数据模型：</strong></span><span style=\"max-width: 100%;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif border-box break-word>借鉴OpenTSDB，数据模型中引入了tag，这样能支持多维度的聚合统计以及告警规则设置，大大提高了使用效率。</span></p></li><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><p style=\"padding-top: 15px;padding-right: 4px;max-width: 100%;min-height: 1em;letter-spacing: 0.544px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;font-size: 16px;white-space: pre-line;line-height: 28px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;letter-spacing: 0.544px;font-size: 15px;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\">插件统一管理：</span></strong><span style=\"max-width: 100%;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif border-box break-word>Open-Falcon的插件机制实现了对用户自定义脚本的统一化管理，可通过HeartBeat Server分发给agent，减轻了使用者自主维护脚本的成本。</span></p></li><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><p style=\"margin-bottom: 10px;padding-top: 15px;padding-right: 4px;max-width: 100%;min-height: 1em;letter-spacing: 0.544px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;font-size: 16px;white-space: pre-line;line-height: 28px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;letter-spacing: 0.544px;font-size: 15px;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\">个性化监控支持</span></strong><span style=\"max-width: 100%;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif border-box break-word>：基于Proxy-gateway，很容易通过自主埋点实现应用层的监控（比如监控接口的访问量和耗时）和其他个性化监控需求，集成方便。</span></p></li></ul><p style=\"padding-top: 23px;padding-right: 4px;padding-left: 4px;max-width: 100%;min-height: 1em;letter-spacing: 0.544px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;background-color: rgb(255, 255, 255);font-size: 16px;white-space: pre-line;line-height: 27px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;letter-spacing: 0.544px;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">下面是Open-Falcon的劣势：</span></p><ul class=\"list-paddingleft-2\" style=\"padding-left: 1.2em;max-width: 100%;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb square break-word><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><p style=\"padding-top: 15px;padding-right: 4px;max-width: 100%;min-height: 1em;letter-spacing: 0.544px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;font-size: 16px;white-space: pre-line;line-height: 28px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;letter-spacing: 0.544px;font-size: 15px;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">整体发展一般</strong></span><span style=\"max-width: 100%;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif border-box break-word><strong style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">：</strong>社区活跃度不算高，同时版本更新慢，有些大厂是基于它的稳定版本直接做二次开发的，关于以后的前景其实有点担忧。</span></p></li><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 15px;padding-right: 4px;max-width: 100%;letter-spacing: 0.544px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;font-size: 16px;white-space: pre-line;line-height: 28px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;letter-spacing: 0.544px;font-size: 15px;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\">UI不够友好</span></strong><span style=\"max-width: 100%;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif border-box break-word>：对于业务线的研发来说，可能只想便捷地完成告警配置和业务监控，但是它把机器分组、策略模板、模板继承等概念全部暴露在UI上，感觉在围绕这几个概念设计UI，理解有点费劲。</span></section></li><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><p style=\"padding-top: 15px;padding-right: 4px;max-width: 100%;min-height: 1em;letter-spacing: 0.544px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;font-size: 16px;white-space: pre-line;line-height: 28px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;letter-spacing: 0.544px;font-size: 15px;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">安装比较复杂：</strong></span><span style=\"max-width: 100%;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif border-box break-word>个人的亲身感受，由于它是从小米内部衍生出来的，虽然去掉了对小米内部系统的依赖，但是组件还是比较多，如果对整个架构不熟悉，安装很难一蹴而就。</span></p></li></ul><p style=\"margin-top: 25px;margin-bottom: 10px;padding-right: 4px;padding-left: 4px;max-width: 100%;min-height: 1em;letter-spacing: 0.544px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;background-color: rgb(255, 255, 255);font-size: 16px;white-space: pre-line;line-height: 27px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-weight: 700;letter-spacing: 0.51px;color: rgb(123, 12, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\">3. Prometheus（号称下一代监控系统）</span></p><p style=\"margin-top: 15px;margin-bottom: 15px;max-width: 100%;min-height: 1em;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb border-box break-word><span style=\"max-width: 100%;color: rgb(74, 74, 74);font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;font-size: 15px;letter-spacing: 0.544px;text-align: left;white-space: pre-line;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><img data-backh=\"235\" data-backw=\"578\" data-ratio=\"0.4054644808743169\" data-type=\"png\" data-w=\"1830\" height=\"236\" title=\"点击查看源网页\" width=\"582.04851752022\" style=\"top: 57px; left: 0px; cursor: pointer; width: 677px; box-sizing: border-box !important; overflow-wrap: break-word !important; visibility: visible !important; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/AaabKZjib2kbP23ApP3flYOGcibWAN9beXvkzRqLN0cy4gNux398fDwcomzSRUZodsI66JGm3sCibsKQ0FeA3SQgA/640?wx_fmt=png\"></span></p><p style=\"margin-top: 15px;margin-bottom: 15px;max-width: 100%;min-height: 1em;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb border-box break-word><span style=\"max-width: 100%;color: rgb(74, 74, 74);font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;font-size: 15px;letter-spacing: 0.544px;text-align: left;white-space: pre-line;box-sizing: border-box !important;overflow-wrap: break-word !important;\">Prometheus（普罗米修斯）是由前google员工2015年正式发布的开源监控系统，采用Go语言开发。它不仅有一个很酷的名字，同时它有Google与k8s的强力支持，开源社区异常火爆。</span></p><p style=\"margin-top: 15px;margin-bottom: 15px;max-width: 100%;min-height: 1em;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb border-box break-word><span style=\"max-width: 100%;color: rgb(74, 74, 74);font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;font-size: 15px;letter-spacing: 0.544px;text-align: left;white-space: pre-line;box-sizing: border-box !important;overflow-wrap: break-word !important;\">Prometheus 2016年加入云原生基金会，是继k8s后托管的第二个项目，未来前景被相当看好。它和Open-Falcon最大不同在于：数据采集是基于Pull模式的，而不是Push模式，并且架构非常简单。</span></p><p style=\"margin-top: 15px;margin-bottom: 15px;max-width: 100%;min-height: 1em;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb left border-box break-word><span style=\"max-width: 100%;color: rgb(74, 74, 74);font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;font-size: 15px;letter-spacing: 0.544px;white-space: pre-line;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">先来了解下Prometheus的架构设计：</span></span></p><p style=\"max-width: 100%;min-height: 1em;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb center border-box break-word><img data-backh=\"406\" data-backw=\"578\" data-ratio=\"0.7025\" data-type=\"png\" data-w=\"1200\" style=\"cursor: zoom-in; width: 677px; box-sizing: border-box !important; overflow-wrap: break-word !important; visibility: visible !important; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/AaabKZjib2kbP23ApP3flYOGcibWAN9beX0d2xSXvQWP720RgfcvBTb9TibibIaEu3726EpD9oBR5qVOJpVYpjRG0w/640?wx_fmt=png\"></p><section style=\"margin-bottom: 20px;max-width: 100%;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb center border-box break-word><span style=\"max-width: 100%;color: rgb(136, 136, 136);font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;font-size: 13px;letter-spacing: 0.544px;white-space: pre-line;box-sizing: border-box !important;overflow-wrap: break-word !important;\">Prometheus架构图，来自网络</span></section><ul class=\"list-paddingleft-2\" style=\"padding-left: 1.2em;max-width: 100%;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb square break-word><li style=\"max-width: 100%;text-align: left;font-size: 15px;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 5px;max-width: 100%;text-align: justify;white-space: pre-line;line-height: 28px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\">Prometheus Server：</span></strong>核心组件，用于收集、存储监控数据。它同时支持静态配置和通过Service Discovery动态发现来管理监控目标，并从监控目标中获取数据。此外，Prometheus Server 也是一个时序数据库，它将监控数据保存在本地磁盘中，并对外提供自定义的 PromQL 语言实现对数据的查询和分析。</section></li><li style=\"max-width: 100%;text-align: left;font-size: 15px;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><p style=\"margin-top: 15px;max-width: 100%;min-height: 1em;text-align: justify;white-space: pre-line;line-height: 28px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\">Exporter：</span></strong><span style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">用来采集数据，作用类似于agent，区别在于Prometheus是基于Pull方式拉取采集数据的，因此，Exporter通过HTTP服务的形式将监控数据按照标准格式暴露给Prometheus Server，<span style=\"max-width: 100%;letter-spacing: 0.544px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;box-sizing: border-box !important;overflow-wrap: break-word !important;\">社区中已经有大量现成的Exporter可以直接使用，用户也可以使用各种语言的client library自定义实现</span><span style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">。</span></span></p></li><li style=\"max-width: 100%;text-align: left;font-size: 15px;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 15px;max-width: 100%;text-align: justify;white-space: pre-line;line-height: 28px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\">Push gateway：</span></strong><span style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">主要用于瞬时任务的场景，防止Prometheus Server来pull数据之前此类Short-lived jobs就已经执行完毕了，因此job可以采用push的方式将监控数据主动汇报给Push gateway缓存起来进行中转。</span></span></section></li><li style=\"max-width: 100%;text-align: left;font-size: 15px;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 15px;max-width: 100%;text-align: justify;white-space: pre-line;line-height: 28px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">当告警产生时，Prometheus Server将告警信息推送给Alert Manager，由它发送告警信息给接收方。</span></section></li><li style=\"max-width: 100%;text-align: left;font-size: 15px;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 15px;max-width: 100%;text-align: justify;white-space: pre-line;line-height: 28px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">Prometheus内置了一个简单的web控制台，可以查询配置信息和指标等，而实际应用中我们通常会将Prometheus作为Grafana的数据源，创建仪表盘以及查看指标。</span></section></li></ul><p style=\"padding-top: 25px;padding-right: 4px;padding-left: 4px;max-width: 100%;min-height: 1em;letter-spacing: 0.544px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;background-color: rgb(255, 255, 255);font-size: 16px;white-space: pre-line;line-height: 27px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;letter-spacing: 0.544px;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">下面是Prometheus的优势：</span></p><ul class=\"list-paddingleft-2\" style=\"padding-left: 1.3em;max-width: 100%;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb square break-word><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><p style=\"padding-top: 15px;padding-right: 4px;max-width: 100%;min-height: 1em;letter-spacing: 0.544px;font-size: 16px;white-space: pre-line;line-height: 28px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-size: 15px;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(0, 0, 0);font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;box-sizing: border-box !important;overflow-wrap: break-word !important;\">轻量管理</span><span style=\"max-width: 100%;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\">：</span></strong><span style=\"max-width: 100%;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\">架构简单，不依赖外部存储，单个服务器节点可直接工作，二进制文件启动即可，属于轻量级的Server，便于迁移和维护。</span></span></p></li><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><p style=\"padding-top: 15px;padding-right: 4px;max-width: 100%;min-height: 1em;letter-spacing: 0.544px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;font-size: 16px;white-space: pre-line;line-height: 28px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;letter-spacing: 0.544px;font-size: 15px;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\">较强的处理能力</span></strong><span style=\"max-width: 100%;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif border-box break-word>：监控数据直接存储在Prometheus Server本地的时序数据库中，单个实例可以处理数百万的metrics。</span></p></li><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><p style=\"padding-top: 15px;padding-right: 4px;max-width: 100%;min-height: 1em;letter-spacing: 0.544px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;font-size: 16px;white-space: pre-line;line-height: 28px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif border-box break-word><span style=\"max-width: 100%;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;letter-spacing: 0.544px;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">灵活的数据模型：</strong></span><span style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">同Open-Falcon，引入了tag，属于多维数据模型，聚合统计更方便</span><span style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">。</span></span></p></li><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><p style=\"padding-top: 15px;padding-right: 4px;max-width: 100%;min-height: 1em;letter-spacing: 0.544px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;font-size: 16px;white-space: pre-line;line-height: 28px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif border-box break-word><span style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;letter-spacing: 0.544px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">强大的查询语句：</strong></span><span style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">PromQL允许在同一个查询语句中，对多个metrics进行加法、连接和取分位值等操作</span><span style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">。</span></span></span></p></li><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><p style=\"padding-top: 15px;padding-right: 4px;max-width: 100%;min-height: 1em;letter-spacing: 0.544px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;font-size: 16px;white-space: pre-line;line-height: 28px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif border-box break-word><strong style=\"max-width: 100%;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;font-size: 16px;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;letter-spacing: 0.544px;font-size: 15px;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\">很好地支持云环境</span></strong><span style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">：能自动发现容器，同时k8s和etcd等项目都提供了对Prometheus的原生支持，是目前容器监控最流行的方案。</span></span></p></li></ul><p style=\"padding-top: 20px;padding-right: 4px;padding-left: 4px;max-width: 100%;min-height: 1em;letter-spacing: 0.544px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;background-color: rgb(255, 255, 255);font-size: 16px;white-space: pre-line;line-height: 27px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif border-box break-word></span><span style=\"max-width: 100%;font-size: 15px;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">下面是Prometheus的劣势：</span></p><ul class=\"list-paddingleft-2\" style=\"padding-left: 1.3em;max-width: 100%;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb square break-word><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><p style=\"padding-top: 15px;padding-right: 4px;max-width: 100%;min-height: 1em;letter-spacing: 0.544px;font-size: 16px;white-space: pre-line;line-height: 28px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-size: 15px;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(0, 0, 0);font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;box-sizing: border-box !important;overflow-wrap: break-word !important;\">功能不够完善</span><span style=\"max-width: 100%;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\">：</span></strong><span style=\"max-width: 100%;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\">Prometheus从一开始的架构设计就是要做到简单，不提供集群化方案，<span style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">长期的持久化存储</span>和用户管理，而这些是企业变大后所必须的特性，目前要做到这些只能在Prometheus之上进行扩展。</span></span></p></li><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><p style=\"padding-top: 15px;padding-right: 4px;max-width: 100%;min-height: 1em;letter-spacing: 0.544px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;font-size: 16px;white-space: pre-line;line-height: 28px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;letter-spacing: 0.544px;font-size: 15px;color: rgb(0, 0, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\">网络规划变复杂</span></strong><span style=\"max-width: 100%;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif border-box break-word>：由于Prometheus采用的是Pull模型拉取数据，意味着所有被监控的endpoint必须是可达的，需要合理规划网络的安全配置。</span></p></li></ul><p style=\"padding-top: 15px;padding-right: 4px;max-width: 100%;min-height: 1em;letter-spacing: 0.544px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;background-color: rgb(255, 255, 255);font-size: 16px;white-space: pre-line;line-height: 28px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br></p><p style=\"margin-top: 20px;max-width: 100%;min-height: 1em;letter-spacing: 0.544px;white-space: normal;background-color: rgb(255, 255, 255);color: rgb(63, 63, 63);font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;text-align: center;background-position: center 20px;background-size: 112px;background-repeat: no-repeat;background-attachment: initial;background-origin: initial;background-clip: initial;font-size: 19px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"margin-bottom: 10px;max-width: 100%;line-height: 48px;color: rgb(234, 84, 41);border-bottom: 2px solid rgb(234, 84, 41);display: inline-block;font-size: 17px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">03 监控系统的选型建议</span></p><p style=\"padding-top: 20px;padding-right: 4px;padding-left: 4px;max-width: 100%;min-height: 1em;letter-spacing: 0.544px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;background-color: rgb(255, 255, 255);font-size: 16px;white-space: pre-line;line-height: 27px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">通过上面的介绍，大家对主流的监控系统应该有了一定的认识。面对选型问题，我的建议是：</span></span></p><p style=\"padding-top: 20px;padding-right: 4px;padding-left: 4px;max-width: 100%;min-height: 1em;letter-spacing: 0.544px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;background-color: rgb(255, 255, 255);font-size: 16px;white-space: pre-line;line-height: 27px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">1、先明确清楚你的监控需求：要监控的对象有哪些？机器数量和监控指标有多少？需要具备什么样的告警功能？</span></span></p><p style=\"padding-top: 20px;padding-right: 4px;padding-left: 4px;max-width: 100%;min-height: 1em;letter-spacing: 0.544px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;background-color: rgb(255, 255, 255);font-size: 16px;white-space: pre-line;line-height: 27px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;letter-spacing: 0.544px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">2、监控是一项长期建设的事情，一开始就想做一个 All In One 的监控解决方案，我觉得没有必要。从成本角度考虑，在初期直接使用开源的监控方案即可，先解决有无问题</span></span><span style=\"max-width: 100%;letter-spacing: 0.544px;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">。</span></p><p style=\"padding-top: 20px;padding-right: 4px;padding-left: 4px;max-width: 100%;min-height: 1em;letter-spacing: 0.544px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;background-color: rgb(255, 255, 255);font-size: 16px;white-space: pre-line;line-height: 27px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;letter-spacing: 0.544px;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">3、从系统成熟度上看，Zabbix属于老牌的监控系统，资料多，功能全面且稳定，如果机器数量在几百台以内，不用太担心性能问题，另外，采用数据库分区、SSD硬盘、Proxy架构、Push采集模式都可以提高监控性能。</span></p><p style=\"padding-top: 20px;padding-right: 4px;padding-left: 4px;max-width: 100%;min-height: 1em;letter-spacing: 0.544px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;background-color: rgb(255, 255, 255);font-size: 16px;white-space: pre-line;line-height: 27px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;letter-spacing: 0.544px;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">4、Zabbix在服务器监控方面占绝对优势，可以满足90%以上的监控场景，但是应用层的监控似乎并不擅长，比如要监控线程池的状态、某个内部接口的执行时间等，这种通常都要做侵入式埋点。相反，新一代的监控系统Open-Falcon和Prometheus在这一点做得很好。</span></p><p style=\"padding-top: 20px;padding-right: 4px;padding-left: 4px;max-width: 100%;min-height: 1em;letter-spacing: 0.544px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;background-color: rgb(255, 255, 255);font-size: 16px;white-space: pre-line;line-height: 27px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;letter-spacing: 0.544px;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">5、从整体表现上来看，新一代监控系统也有明显的优势，比如：灵活的数据模型、更成熟的时序数据库、强大的告警功能，如果之前对zabbix这种传统监控没有技术积累，建议使用Open-Falcon或者Prometheus.</span></p><p style=\"padding-top: 20px;padding-right: 4px;padding-left: 4px;max-width: 100%;min-height: 1em;letter-spacing: 0.544px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;background-color: rgb(255, 255, 255);font-size: 16px;white-space: pre-line;line-height: 27px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;letter-spacing: 0.544px;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">6、Open-Falcon的核心优势在于数据分片功能，能支撑更多的机器和监控项；Prometheus则是容器监控方面的标配，有Google和k8s加持。</span></p><p style=\"padding-top: 20px;padding-right: 4px;padding-left: 4px;max-width: 100%;min-height: 1em;letter-spacing: 0.544px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;background-color: rgb(255, 255, 255);font-size: 16px;white-space: pre-line;line-height: 27px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;letter-spacing: 0.544px;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">7、Zabbix、Open-Falcon和Prometheus都支持和Grafana做快速集成，想要美观且强大的可视化体验，可以和Grafana进行组合。</span></p><p style=\"padding-top: 20px;padding-right: 4px;padding-left: 4px;max-width: 100%;min-height: 1em;letter-spacing: 0.544px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;background-color: rgb(255, 255, 255);font-size: 16px;white-space: pre-line;line-height: 27px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;letter-spacing: 0.544px;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">8、用合适的监控系统解决相应的问题即可，可以多套监控同时使用，这种在企业初期很常见。</span></p><p style=\"padding-top: 20px;padding-right: 4px;padding-left: 4px;max-width: 100%;min-height: 1em;letter-spacing: 0.544px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;background-color: rgb(255, 255, 255);font-size: 16px;white-space: pre-line;line-height: 27px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;letter-spacing: 0.544px;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">9、到中后期，随着机器数据增加和个性化需求增多（比如希望统一监控平台、打通公司的CMDB和组织架构关系），往往需要二次开发或者通过监控系统提供的API做集成，从这点来看，Open-Falcon或者Prometheus更合适。</span></p><p style=\"padding-top: 20px;padding-right: 4px;padding-left: 4px;max-width: 100%;min-height: 1em;letter-spacing: 0.544px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;background-color: rgb(255, 255, 255);font-size: 16px;white-space: pre-line;line-height: 27px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;letter-spacing: 0.544px;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">10、如果非要自研，可以多研究下主流监控系统的架构方案，借鉴它们的优势。</span><span style=\"max-width: 100%;letter-spacing: 0.544px;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></span></p><section style=\"margin-bottom: 5px;padding-top: 20px;padding-right: 4px;padding-left: 4px;max-width: 100%;letter-spacing: 0.544px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;background-color: rgb(255, 255, 255);font-size: 16px;white-space: pre-line;line-height: 27px;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br></section><section style=\"max-width: 100%;letter-spacing: 0.544px;white-space: normal;background-color: rgb(255, 255, 255);color: rgb(63, 63, 63);font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;text-align: center;background-position: center 20px;background-size: 112px;background-repeat: no-repeat;background-attachment: initial;background-origin: initial;background-clip: initial;font-size: 19px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"margin-bottom: 10px;max-width: 100%;line-height: 48px;color: rgb(234, 84, 41);border-bottom: 2px solid rgb(234, 84, 41);display: inline-block;font-size: 17px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">最后的话</span></section><section style=\"margin-top: 15px;max-width: 100%;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb border-box break-word><span style=\"max-width: 100%;text-align: left;font-size: 15px;letter-spacing: 0.544px;white-space: pre-line;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\">本文对监控体系的基础知识、原理和主流架构做了详细梳理，希望有助于大家对监控系统的认识，以及在技术选型时做出更合适的选择。</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></section><section style=\"margin-top: 15px;max-width: 100%;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb border-box break-word><span style=\"max-width: 100%;text-align: left;font-size: 15px;letter-spacing: 0.544px;white-space: pre-line;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;color: rgb(74, 74, 74);box-sizing: border-box !important;overflow-wrap: break-word !important;\"><img class=\"rich_pages\" data-backh=\"254\" data-backw=\"578\" data-ratio=\"0.43828125\" data-s=\"300,640\" data-type=\"png\" data-w=\"1280\" style=\"text-align: center; white-space: normal; width: 677px; box-sizing: border-box !important; overflow-wrap: break-word !important; visibility: visible !important; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/AaabKZjib2kbP23ApP3flYOGcibWAN9beXQ1iaMVgOCdrRnc8kC2SEO4g7lX4zhZickOedncKicNLYFTMS5laZSlNYQ/640?wx_fmt=png\"></span></section><section style=\"margin-top: 15px;max-width: 100%;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb border-box break-word><span style=\"max-width: 100%;color: rgb(74, 74, 74);font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;font-size: 15px;letter-spacing: 0.544px;text-align: left;white-space: pre-line;box-sizing: border-box !important;overflow-wrap: break-word !important;\">由于篇幅问题，本文的内容并未涉及到全链路监控、日志监控、以及Web前端和客户端的监控，可见监控真的是一个庞大且复杂的体系，如果想理解透彻，必须理论结合实践再做深入。</span></section><section style=\"margin-top: 15px;max-width: 100%;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb border-box break-word><span style=\"max-width: 100%;color: rgb(74, 74, 74);font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;font-size: 15px;letter-spacing: 0.544px;text-align: left;white-space: pre-line;box-sizing: border-box !important;overflow-wrap: break-word !important;\">对于运维监控体系，如果你们也有自己的经验和体会，欢迎留言讨论。</span></section><p><span style=\"font-size: 15px;text-align: left;\"><br></span></p><section donone=\"shifuMouseDownCard('shifu_c_030')\" label=\"Copyright Reserved by PLAYHUDONG.\" style=\"text-align: start;white-space: normal;margin-top: 1em;margin-bottom: 1em;caret-color: rgb(0, 0, 0);color: rgb(0, 0, 0);border-width: 0px;border-style: initial;border-color: initial;\"><section style=\"margin-left: 1em;line-height: 1.4;\"><span style=\"padding: 3px 8px;border-top-left-radius: 4px;border-top-right-radius: 4px;border-bottom-right-radius: 4px;border-bottom-left-radius: 4px;color: rgb(255, 255, 255);background-color: rgb(255, 105, 31);font-family: inherit;text-align: inherit;text-decoration: inherit;font-size: 16px;\">推荐阅读</span>  <span style=\"margin-left: 4px;padding: 3px 8px;border-top-left-radius: 1.2em;border-top-right-radius: 1.2em;border-bottom-right-radius: 1.2em;border-bottom-left-radius: 1.2em;color: rgb(255, 255, 255);line-height: 1.2;background-color: rgb(204, 204, 204);font-family: inherit;text-align: inherit;text-decoration: inherit;border-color: rgb(249, 110, 87);font-size: 12px;\">点击标题可跳转</span></section><section style=\"margin-top: -11px;padding: 22px 16px 16px;border-width: 1px;border-style: solid;border-color: rgb(255, 105, 31);color: rgb(51, 51, 51);font-size: 1em;font-family: inherit;text-align: inherit;text-decoration: inherit;\"><p><span style=\"font-size: 12px;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif rgb><a target=\"_blank\" href=\"http://mp.weixin.qq.com/s?__biz=MjM5NzMyMjAwMA==&amp;mid=2651485913&amp;idx=1&amp;sn=c40e03e94a7eb1f62baaa09173afc860&amp;chksm=bd251aa68a5293b00dd0228451e19eef1e98684e5d596bbed2d647b8530e02eac2042580870e&amp;scene=21#wechat_redirect\" data-itemshowtype=\"0\" tab=\"innerlink\" data-linktype=\"2\">JVM 性能调优监控工具 jps、jstack、jmap、jhat、jstat、hprof 使用详解</a><br></span></p><a target=\"_blank\" href=\"http://mp.weixin.qq.com/s?__biz=MjM5NzMyMjAwMA==&amp;mid=2651489139&amp;idx=2&amp;sn=6d5e8f4c6e33e49fbceb4b136d307145&amp;chksm=bd25ef0c8a52661a001f0b67cfe09e028237b7c6d4f82015f4e7eb88243b0714276932c28a50&amp;scene=21#wechat_redirect\" data-itemshowtype=\"11\" tab=\"innerlink\" style=\"font-size: 12px;\" data-linktype=\"2\"><span style=\"font-size: 12px;\">YGC问题排查，又让我涨姿势了！</span></a><br><p><span style=\"font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif rgb><a target=\"_blank\" href=\"http://mp.weixin.qq.com/s?__biz=MjM5NzMyMjAwMA==&amp;mid=2651488277&amp;idx=1&amp;sn=6e89707c75856739e8eb6b5bd9230bfb&amp;chksm=bd25ec6a8a52657c7a6ffff6edefe609ddb3cc6cfa144ced43b0c3d80f6ad7aa6a8c75ad5cb5&amp;scene=21#wechat_redirect\" data-itemshowtype=\"0\" tab=\"innerlink\" data-linktype=\"2\">假设服务器经常宕机，你从哪些方面去排查问题？</a><br></span></p></section></section><p style=\"caret-color: rgb(0, 0, 0);color: rgb(0, 0, 0);text-align: start;white-space: normal;\"><br></p><p style=\"white-space: normal;max-width: 100%;min-height: 1em;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-size: 14px;color: rgb(255, 169, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\">看完本文有收获？请转发分享给更多人</span></p><p style=\"white-space: normal;max-width: 100%;min-height: 1em;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;color: rgb(255, 169, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\">关注「ImportNew」，提升Java技能</strong></p><p style=\"white-space: normal;max-width: 100%;min-height: 1em;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><img data-ratio=\"0.9166666666666666\" data-s=\"300,640\" data-type=\"jpeg\" data-w=\"600\" width=\"auto\" style=\"box-sizing: border-box !important; overflow-wrap: break-word !important; visibility: visible !important; width: 600px !important; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/2A8tXicCG8ylbWIGfdoDED35IRRySQZTXUkJ1eop9MHApzFibKnOo0diboXpl0rmS5mH78YJhsWQv0dhv718A6kUA/640?wx_fmt=jpeg\"></p><p style=\"text-align: right;\"><span style=\"font-size: 14px;text-align: right;\">好文章，我</span><span style=\"font-size: 14px;text-align: right;color: rgb(255, 41, 65);\">在看</span><span style=\"font-size: 14px;text-align: right;\">❤️</span></p><p><br></p>\n                </div>\n\n    \n    <br>\n\n    \n        <a target=\"_blank\" href=\"http://mp.weixin.qq.com/s?__biz=MjM5NzMyMjAwMA==&amp;mid=2651489487&amp;idx=1&amp;sn=e2afd12858de8fa38bf056f25158ebf5&amp;chksm=bd25e8b08a5261a6970fef4f39223391378c7a48f42cf3ecafc1e3bdee5158d0dfefc29e4e41&amp;scene=0#rd\" style=\"color: blue\" class=\"media_tool_meta meta_primary\">原文</a>\n        <br>\n    \n\n    \n\n    <img alt=\"\" width=\"1px\" height=\"1px\" class=\"\" style=\"width:1px;height:1px;display:none\" src=\"http://www.jintiankansha.me/rss_static/11757/Q9wfeSwT9q\"></div></div>","descriptionType":"html","publishedDate":"Tue, 01 Sep 2020 03:30:00 +0000","feedId":2521,"bgimg":"http://img.100weidu.com/mmbiz_jpg/eZzl4LXykQy6Uwm3SGUMYic8R3o8yalAkTic5GPwR7jkY01P2ugFCFjn7gxm7eLYLfzIibibDINiaP7Xgh5Vy6APrzg?imageView2/1/w/600","linkMd5":"6a42342f60ebb0da2b1b08b2839c245f","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn34@2020_1/2020/09/05/06-41-44-922_936a6d18c9646dae.webp","destWidth":600,"destHeight":438,"sourceBytes":26413,"destBytes":21876,"author":"","articleImgCdnMap":{"http://img.100weidu.com/mmbiz_jpg/eZzl4LXykQy6Uwm3SGUMYic8R3o8yalAkTic5GPwR7jkY01P2ugFCFjn7gxm7eLYLfzIibibDINiaP7Xgh5Vy6APrzg?imageView2/1/w/600":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn34@2020_1/2020/09/05/06-41-44-922_936a6d18c9646dae.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/AaabKZjib2kYKQe10R8d4NKJHfFdBsjDKXUwxzia0pDgMtBVNN2dAJ7iaBYyA2Y8r6dUuD2hwBupgxyLicIYTmNmicg/640?wx_fmt=jpeg":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn12@2020_1/2020/09/05/06-44-15-152_06b6cd2b6377cb69.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/AaabKZjib2ka9iaZLtmsuQ0d0IQe2qg9NSaic5iaoVQiaQd5zlpySuJ1CQdFHbOMg27JtamGQiblRckofib4OAZ6mhVhA/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn8@2020_2/2020/09/05/06-44-14-387_b46cd09768a519d7.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/AaabKZjib2ka9iaZLtmsuQ0d0IQe2qg9NS7f4mPicXtHdjaoMnWezpjOaE8HcF9RI1Ham0F4lGpTdj9cHP5qhjD8A/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn42@2020_1/2020/09/05/06-44-01-722_fe8203a1d8b679fc.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/AaabKZjib2ka9iaZLtmsuQ0d0IQe2qg9NSRe9gDr03L6hVfP4ueibC2ibTGwCwARulzH4IZia76Sw1zCLSq0xajlHKQ/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn20@2020_2/2020/09/05/06-42-59-253_491c60308c465af5.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/AaabKZjib2kbP23ApP3flYOGcibWAN9beXEPYBTtUc0EibyZmkvQFEBCcyngySBhS0TL6UBZep9R2zVaibV2x8KbZA/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn86@2020_1/2020/09/05/06-43-19-847_b6f41cc243df7e24.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/AaabKZjib2kbP23ApP3flYOGcibWAN9beXic4pTPKNCibhadZBicADkiaZ3JW5SpFUE2IOMTVv4L4jZ4iaZrSdTSiamAtA/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn5@2020_4/2020/09/05/06-43-11-613_db8d84b7900e549b.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/AaabKZjib2kbP23ApP3flYOGcibWAN9beXpypqVKYdIdNhGaIl7aU6icwalExD01ESAsjU62ia9tup3Iw4tbuTjYBw/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn37@2020_5/2020/09/05/06-42-11-334_6e026278fabe73eb.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/AaabKZjib2kbP23ApP3flYOGcibWAN9beXOD99tqb2ChqoJFhXbeSHEcO2r2neXXIbs5KTNWicaRoFKY1vYg0ic8Uw/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn66@2020_6/2020/09/05/06-43-20-431_64bd1fcde5f9a2cf.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/AaabKZjib2kbP23ApP3flYOGcibWAN9beXqbcV2EDic0WzAmHaKnvnj1q09JgzEPMENhlevPibODXcRYaDLxJj6bgA/640?wx_fmt=png":null,"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/AaabKZjib2ka9iaZLtmsuQ0d0IQe2qg9NSulv2WYP5Ve7xKZtQTD3AEoCZ6Xesr4qCkKibS84vI57Is6UcoBzMlng/640?wx_fmt=png":null,"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/AaabKZjib2kbP23ApP3flYOGcibWAN9beXvkzRqLN0cy4gNux398fDwcomzSRUZodsI66JGm3sCibsKQ0FeA3SQgA/640?wx_fmt=png":null,"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/AaabKZjib2kbP23ApP3flYOGcibWAN9beX0d2xSXvQWP720RgfcvBTb9TibibIaEu3726EpD9oBR5qVOJpVYpjRG0w/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn98@2020_5/2020/09/05/06-42-03-184_962d926f4b5b9ffa.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/AaabKZjib2kbP23ApP3flYOGcibWAN9beXQ1iaMVgOCdrRnc8kC2SEO4g7lX4zhZickOedncKicNLYFTMS5laZSlNYQ/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn96@2020_5/2020/09/05/06-44-18-997_91599a6ef51f9d88.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/2A8tXicCG8ylbWIGfdoDED35IRRySQZTXUkJ1eop9MHApzFibKnOo0diboXpl0rmS5mH78YJhsWQv0dhv718A6kUA/640?wx_fmt=jpeg":"https://cdn.jsdelivr.net/gh/myreaderx/cdn61@2020_1/2020/09/05/06-42-03-580_f93d0239d4369c75.webp","http://www.jintiankansha.me/rss_static/11757/Q9wfeSwT9q":null},"publishedOrCreatedDate":1599288104743},{"createdTime":"2020-09-05 14:41:44","updatedTime":"2020-09-05 14:41:44","title":"Kafka和RocketMQ底层存储之那些你不知道的事","link":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+Kafka%E5%92%8CRocketMQ%E5%BA%95%E5%B1%82%E5%AD%98%E5%82%A8%E4%B9%8B%E9%82%A3%E4%BA%9B%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E4%BA%8B","description":"<div><div><div id=\"media\" class=\"rich_media_thumb_wrp\">\n\n            <img class=\"rich_media_thumb\" src=\"http://img.100weidu.com/mmbiz_jpg/eZzl4LXykQyWUPN1VNmQFtIuJ0Qh3xCf4x7ct9OzFicm1JVDib0MA7D47aGfvZknO0giccjJ4iaMHqyOHTquo4zcLQ?imageView2/1/w/600\">\n        </div>\n    \n\n    \n\n    <div class=\"rich_media_content\" id=\"js_content\">\n                    \n\n                    \n\n                    \n                    \n                    <p style=\"white-space: normal;text-align: center;\"><span style=\"font-size: 14px;letter-spacing: 0.5440000295639038px;max-width: 100%;color: rgb(255, 41, 65);line-height: 22.4px;\">（给</span><span style=\"font-size: 14px;letter-spacing: 0.5440000295639038px;max-width: 100%;line-height: 22.4px;color: rgb(0, 128, 255);\">ImportNew</span><span style=\"font-size: 14px;letter-spacing: 0.5440000295639038px;max-width: 100%;color: rgb(255, 41, 65);line-height: 22.4px;\">加星标，提高Java技能）</span></p><blockquote style=\"white-space: normal;\"><p style=\"letter-spacing: 0.5440000295639038px;background-color: rgb(255, 255, 255);max-width: 100%;min-height: 1em;text-align: left;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-size: 14px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">转自：yes的练级攻略/<span style=\"color: rgb(154, 154, 154);font-size: 14px;letter-spacing: 0.544px;text-align: left;background-color: rgb(255, 255, 255);\">Yes呀</span></span></p></blockquote><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\">大家好，我是yes。</span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\"><br></span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\">我们都知道 RocketMQ 和 Kafka 消息都是存在磁盘中的，那为什么消息存磁盘读写还可以这么快？有没有做了什么优化？都是存磁盘它们两者的实现之间有什么区别么？各自有什么优缺点?</span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\"><br></span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\">今天我们就来一探究竟。</span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\"><br></span></p><h1 data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\"><strong style=\"color: rgb(171, 25, 66);white-space: normal;\"><span style=\"font-size: 15px;text-align: left;\">1. 存储介质-磁盘</span></strong></span></h1><p><span style=\"font-size: 15px;\"><br></span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\">一般而言消息中间件的消息都存储在本地文件中，因为从效率来看直接放本地文件是最快的，并且稳定性最高。毕竟要是放类似数据库等第三方存储中的话，就多一个依赖少一份安全，并且还有网络的开销。</span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\"><br></span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\">那对于将消息存入磁盘文件来说一个流程的瓶颈就是磁盘的写入和读取。我们知道磁盘相对而言读写速度较慢，那通过磁盘作为存储介质如何实现高吞吐呢？</span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\"><br></span></p><h2 data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\"><strong style=\"color: rgb(171, 25, 66);white-space: normal;\"><span style=\"font-size: 15px;text-align: left;\">2. 顺序读写</span></strong></span></h2><p><span style=\"font-size: 15px;\"><br></span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\">答案就是顺序读写。</span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\"><br></span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\">首先了解一下页缓存，页缓存是操作系统用来作为磁盘的一种缓存，减少磁盘的I/O操作。</span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\"><br></span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\">在写入磁盘的时候其实是写入页缓存中，使得对磁盘的写入变成对内存的写入。写入的页变成脏页，然后操作系统会在合适的时候将脏页写入磁盘中。</span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\"><br></span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\">在读取的时候如果页缓存命中则直接返回，如果页缓存 miss 则产生缺页中断，从磁盘加载数据至页缓存中，然后返回数据。</span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\"><br></span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\">并且在读的时候会<strong>预读</strong>，根据局部性原理当读取的时候会把相邻的磁盘块读入页缓存中。在写入的时候会<strong>后写</strong>，写入的也是页缓存，这样存着可以将一些小的写入操作合并成大的写入，然后再刷盘。</span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\"><br></span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\">而且根据磁盘的构造，顺序 I/O 的时候，磁头几乎不用换道，或者换道的时间很短。</span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\">根据网上的一些测试结果，顺序写盘的速度比随机写内存还要快。</span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\"><br></span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\">当然这样的写入存在数据丢失的风险，例如机器突然断电，那些还未刷盘的脏页就丢失了。不过可以调用 fsync 强制刷盘，但是这样对于性能的损耗较大。</span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\"><br></span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\">因此<strong>一般建议通过多副本机制来保证消息的可靠，而不是同步刷盘</strong>。</span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\"><br></span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\">可以看到顺序 I/O 适应磁盘的构造，并且还有预读和后写。RocketMQ 和 Kafka 都是顺序写入和近似顺序读取。它们都采用文件追加的方式来写入消息，只能在日志文件尾部写入新的消息，老的消息无法更改。</span></p><p style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><br></p><h2 data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\"><strong style=\"color: rgb(171, 25, 66);white-space: normal;\"><span style=\"font-size: 15px;text-align: left;\">3. mmap-文件内存映射</span></strong></span></h2><p><span style=\"font-size: 15px;\"><br></span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\">从上面可知访问磁盘文件会将数据加载到页缓存中，但是页缓存属于内核空间，用户空间访问不了，因此数据还需要拷贝到用户空间缓冲区。</span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\"><br></span></p><p style=\"text-align: center;\"><img class=\"rich_pages js_insertlocalimg\" data-ratio=\"0.8090452261306532\" data-s=\"300,640\" data-type=\"png\" data-w=\"995\" style=\"max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQxwz7UiaI2ib3d4D1CWXCibLukeSsuS7xYFgWKSd6BAsn3JtDFdXxatcsr5Jo0rOAWG8t51FMeCRVicfA/640?wx_fmt=png\"></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\"></span><br></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\">可以看到数据需要从页缓存再经过一次拷贝程序才能访问的到，因此还可以通过mmap来做一波优化，利用内存映射文件来避免拷贝。</span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\"><br></span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\">简单的说<strong>文件映射就是将程序虚拟页面直接映射到页缓存上</strong><strong>，这样就无需有内核态再往用户态的拷贝，而且也避免了重复数据的产生</strong>。并且也不必再通过调用read或write方法对文件进行读写，<strong>可以通过映射地址加偏移量的方式直接操作</strong>。</span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\"><br></span></p><p style=\"text-align: center;\"><img class=\"rich_pages js_insertlocalimg\" data-ratio=\"0.8073022312373225\" data-s=\"300,640\" data-type=\"png\" data-w=\"986\" style=\"max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQxwz7UiaI2ib3d4D1CWXCibLukR91lICNa4ScNCqiaic7ovU3mSwQsxhicgKq3FX8zzHPRQaZpNyfibxyFWA/640?wx_fmt=png\"></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\"></span><br></p><h2 data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\"><strong style=\"color: rgb(171, 25, 66);white-space: normal;\"><span style=\"font-size: 15px;text-align: left;\">4. sendfile-零拷贝</span></strong></span></h2><p><span style=\"font-size: 15px;\"><br></span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\">既然消息是存在磁盘中的，那消费者来拉消息的时候就得从磁盘拿。我们先来看看一般发送文件的流程是如何的。</span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\"><br></span></p><p style=\"text-align: center;\"><img class=\"rich_pages js_insertlocalimg\" data-ratio=\"0.6559485530546624\" data-s=\"300,640\" data-type=\"png\" data-w=\"1244\" style=\"max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQxwz7UiaI2ib3d4D1CWXCibLuk5ibgdeSBHSWT9oFP4LTsMnLY3SsuZibE71T2FRmFSpmsqveyrGibjuTRg/640?wx_fmt=png\"></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\"></span><br></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\">简单说下DMA是什么，全称 Direct Memory Access ，它可以独立地直接读写系统内存，不需要 CPU 介入，像显卡、网卡之类都会用DMA。</span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\"><br></span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\">可以看到数据其实是冗余的，那我们来看看mmap之后的发送文件流程是怎样的。</span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\"><br></span></p><p style=\"text-align: center;\"><img class=\"rich_pages js_insertlocalimg\" data-ratio=\"0.6417322834645669\" data-s=\"300,640\" data-type=\"png\" data-w=\"1270\" style=\"max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQxwz7UiaI2ib3d4D1CWXCibLukeOB9oHRfQU70UwsDE25J3dA6YcRgrdFbxVLQTxXDPvfdUFu0CISszg/640?wx_fmt=png\"></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\"><br></span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\">可以看到上下文切换的次数没有变化，但是数据少拷贝一份，这和我们上文提到的 </span><span style=\"font-size: 15px;\">mmap </span><span style=\"font-size: 15px;\">能达到的效果是一样的。</span><br></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\"><br></span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\">但是数据还是冗余了一份，这不是可以直接把数据从页缓存拷贝到网卡不就好了嘛？sendfile 就有这个功效。我们先来看看 Linux 2.1版本中的 sendfile。</span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\"><br></span></p><p style=\"text-align: center;\"><img class=\"rich_pages js_insertlocalimg\" data-ratio=\"0.6494845360824743\" data-s=\"300,640\" data-type=\"png\" data-w=\"1261\" style=\"max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQxwz7UiaI2ib3d4D1CWXCibLukAicj1a0Pe1lYpBAyYoOGOkKsknfDkdVTTiat8CibAVrjEo6uxPFEXls6A/640?wx_fmt=png\"></p><p style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><br></p><p style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\">因为就一个系统调用就满足了发送的需求，相比 read + write 或者 mmap + write 上下文切换肯定是少了的，但是好像数据还是有冗余啊。是的，因此 Linux2.4 版本的 sendfile  + 带 「分散-收集（Scatter-gather）」的DMA。实现了真正的无冗余。</span></p><p style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\"><br></span></p><p style=\"text-align: center;\"><img class=\"rich_pages js_insertlocalimg\" data-ratio=\"0.6628664495114006\" data-s=\"300,640\" data-type=\"png\" data-w=\"1228\" style=\"max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQxwz7UiaI2ib3d4D1CWXCibLukzYPWpQoWbE0Tf3Yzia6uicNeBuzAMRhpibwBzDlJWTUQdGEtvUaw0kpog/640?wx_fmt=png\"></p><p style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\"></span><br></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\">这就是我们常说的零拷贝，在 Java 中FileChannal.transferTo()底层用的就是 sendfile。</span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\"><br></span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\">接下来我们看看以上说的几点在 RocketMQ 和 Kafka 中是如何应用的。</span></p><p style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><br></p><h1 data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\"><strong style=\"color: rgb(171, 25, 66);white-space: normal;\"><span style=\"font-size: 15px;text-align: left;\">5. RocketMQ 和 Kafka 的应用</span></strong></span></h1><p><span style=\"font-size: 15px;\"><br></span></p><h2 data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\"><strong style=\"color: rgb(171, 25, 66);white-space: normal;\"><span style=\"font-size: 15px;text-align: left;\">5.1 RocketMQ</span></strong></span><span style=\"font-size: 15px;\"></span></h2><p><span style=\"font-size: 15px;\"><br></span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\">采用 Topic 混合追加方式，即一个 CommitLog 文件中会包含分给此 Broker 的所有消息，不论消息属于哪个 Topic 的哪个 Queue 。</span></p><p style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><br></p><p style=\"text-align: center;\"><img class=\"rich_pages js_insertlocalimg\" data-ratio=\"0.6595570139458573\" data-s=\"300,640\" data-type=\"png\" data-w=\"1219\" style=\"max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQxwz7UiaI2ib3d4D1CWXCibLuk5S1ibjFrBPLEbBxHkzxY2KvbXPpeZg2BGlkib1ZC7g1uHVauKUDMpdRA/640?wx_fmt=png\"></p><p style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><br></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\">所以所有的消息过来都是<strong>顺序追加写入到 CommitLog 中</strong>，并且建立消息对应的 CosumerQueue ，然后消费者是通过 CosumerQueue 得到消息的真实物理地址再去 CommitLog 获取消息的。可以将 CosumerQueue 理解为消息的索引。</span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\"><br></span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\">在 RocketMQ 中不论是 CommitLog 还是 CosumerQueue 都采用了 mmap。</span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\"><br></span></p><p style=\"text-align: center;\"><img class=\"rich_pages js_insertlocalimg\" data-ratio=\"0.1958762886597938\" data-s=\"300,640\" data-type=\"png\" data-w=\"873\" style=\"max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQxwz7UiaI2ib3d4D1CWXCibLukBNVGxffibdIkbbnWiaUR2Vv7Av9VUNYCZWoFiavXRP9CPz2OpM8tlxmcQ/640?wx_fmt=png\"></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\"></span><br></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\">在发消息的时候默认用的是<strong>将数据拷贝到堆内存中，然后再发送</strong>。我们来看下代码。</span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\"><br></span></p><p style=\"text-align: center;\"><img class=\"rich_pages js_insertlocalimg\" data-ratio=\"0.2786697247706422\" data-s=\"300,640\" data-type=\"png\" data-w=\"872\" style=\"max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQxwz7UiaI2ib3d4D1CWXCibLuk60X72D3eKJacUHgMqldQXD8CicTGeaejnQiaO6wC1h4bxl8WdXOKxfOg/640?wx_fmt=png\"></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><br></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\">可以看到这个配置 transferMsgByHeap 默认是 true ，那我们再看消费者拉消息时候的代码。</span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\"><br></span></p><p style=\"text-align: center;\"><img class=\"rich_pages js_insertlocalimg\" data-ratio=\"0.5984375\" data-s=\"300,640\" data-type=\"png\" data-w=\"1280\" style=\"max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQxwz7UiaI2ib3d4D1CWXCibLukXs4dGIx4EzTgXCCw7upia7lZGLE8a74NFHRYXUV8sReiaJNibIic4FJ2eQ/640?wx_fmt=png\"></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><br></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\">可以看到 RocketMQ 默认把消息拷贝到堆内 Buffer 中，再塞到响应体里面发送。但是可以通过参数配置不经过堆，不过也并没有用到真正的零拷贝，而是通过 mapedBuffer 发送到 SocketBuffer 。</span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\"><br></span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\">所以 RocketMQ 用了顺序写盘、mmap。并没有用到 sendfile ，还有一步页缓存到 SocketBuffer 的拷贝。</span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\"><br></span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\">然后拉消息的时候严格的说对于 CommitLog 来说读取是随机的，因为 CommitLog 的消息是混合的存储的，但是<strong>从整体上看，消息还是从 CommitLog 顺序读的，都是从旧数据到新数据有序的读取</strong>。并且一般而言消息存进去马上就会被消费，因此消息这时候应该还在页缓存中，所以不需要读盘。</span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><br></p><p style=\"text-align: center;\"><img class=\"rich_pages js_insertlocalimg\" data-ratio=\"0.7962347729789591\" data-s=\"300,640\" data-type=\"png\" data-w=\"903\" style=\"max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQxwz7UiaI2ib3d4D1CWXCibLukgXrwI6KnDUXLJtce0TcXdY7yb2Kh2xJIApwv3YYGY9zWkvqtia5hGlw/640?wx_fmt=png\"></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\"><br></span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\">而且我们在上面提到，<strong>页缓存会定时刷盘，这刷盘不可控，并且内存是有限的，会有 swap 等情况</strong>。</span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\"><br></span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\">而且 <strong>mmap 其实只是做了映射，当真正读取页面的时候产生缺页中断，才会将数据真正加载到内存中</strong>，这对于消息队列来说可能会产生监控上的毛刺。</span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\"><br></span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\">因此 RocketMQ 做了一些优化，有：<strong>文件预分配和文件预热</strong>。</span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\"><br></span></p><h4 data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><strong><span style=\"font-size: 15px;\">文件预分配</span></strong><span style=\"font-size: 15px;\"></span></h4><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><br></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\">CommitLog 的大小默认是1G，当超过大小限制的时候需要准备新的文件，而 RocketMQ 就起了一个后台线程 AllocateMappedFileService，不断的处理 AllocateRequest，AllocateRequest其实就是预分配的请求，会提前准备好下一个文件的分配，防止在消息写入的过程中分配文件，产生抖动。</span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\"><br></span></p><h3 data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><strong><span style=\"font-size: 15px;\">文件预热</span></strong><span style=\"font-size: 15px;\"></span></h3><p><strong><span style=\"font-size: 15px;\"><br></span></strong></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\">有一个 warmMappedFile 方法，它会把当前映射的文件，每一页遍历多去，写入一个0字节，然后再调用 mlock 和 madvise(MADV_WILLNEED)。</span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\"><br></span></p><p style=\"text-align: center;\"><img class=\"rich_pages js_insertlocalimg\" data-ratio=\"0.8303571428571429\" data-s=\"300,640\" data-type=\"png\" data-w=\"896\" style=\"max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQxwz7UiaI2ib3d4D1CWXCibLukSbvrkJVNZpUicF8nIPCqYSQ1ZZWfc4ibB8jialqv4nfg1OrMU6EL4jPBA/640?wx_fmt=png\"></p><p style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><br></p><p style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;text-align: justify;\"><span style=\"font-size: 15px;\">我们再来看下 this.mlock，内部其实就是调用了 mlock 和 madvise(MADV_WILLNEED)。</span></p><p style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\"><br></span></p><p style=\"text-align: center;\"><img class=\"rich_pages js_insertlocalimg\" data-ratio=\"0.3578485181119649\" data-s=\"300,640\" data-type=\"png\" data-w=\"911\" style=\"max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQxwz7UiaI2ib3d4D1CWXCibLuk8b8Yb4VzzibQ4HFhDewee1icBxrqDZ4bhlvJa9t9HvSAy4e7XKZFtJGg/640?wx_fmt=png\"></p><p style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><br></p><ul class=\"list-paddingleft-2\" style=\"list-style-type: disc;\"><li><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><strong><span style=\"font-size: 15px;\">mlock</span></strong><span style=\"font-size: 15px;\">：可以将进程使用的部分或者全部的地址空间锁定在物理内存中，防止其被交换到 swap 空间。</span></p></li><li><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><strong><span style=\"font-size: 15px;\">madvise</span></strong><span style=\"font-size: 15px;\">：给操作系统建议，说这文件在不久的将来要访问的，因此，提前读几页可能是个好主意。</span></p></li></ul><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\"><br></span></p><h3 data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><strong><span style=\"font-size: 15px;\">RocketMQ 小结</span></strong><span style=\"font-size: 15px;\"></span></h3><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><br></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\">顺序写盘，整体来看是顺序读盘，并且使用了 mmap，不是真正的零拷贝。又因为页缓存的不确定性和 mmap 惰性加载(访问时缺页中断才会真正加载数据)，用了文件预先分配和文件预热即每页写入一个0字节，然后再调用mlock 和 madvise(MADV_WILLNEED)。</span></p><p style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\"><br></span></p><h2 data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\"><strong style=\"color: rgb(171, 25, 66);white-space: normal;\"><span style=\"font-size: 15px;text-align: left;\">5.2 Kafka</span></strong></span></h2><h2 data-tool=\"mdnice编辑器\"></h2><p data-tool=\"mdnice编辑器\" style=\"font-size: 17px;\"><br></p><p data-tool=\"mdnice编辑器\" style=\"font-size: 17px;\"><span style=\"font-size: 15px;\">Kafka 的日志存储和 RocketMQ 不一样，它是一个分区一个文件。</span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><br></p><p style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\"><br></span></p><p style=\"text-align: center;\"><img class=\"rich_pages js_insertlocalimg\" data-ratio=\"0.4359375\" data-s=\"300,640\" data-type=\"png\" data-w=\"1280\" style=\"max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQxwz7UiaI2ib3d4D1CWXCibLukTSWSKtGv4uBaV1tpY7BsX8SSTm7lNK4qKaOVgMBLqshXjhHsQEUL8Q/640?wx_fmt=png\"></p><p style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><br></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\">Kafka 的消息写入对于单分区来说也是顺序写，如果分区不多的话从整体上看也算顺序写，它的日志文件并没有用到 mmap，而索引文件用了 mmap。但发消息 Kafka 用到了零拷贝。</span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\"><br></span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\">对于消息的写入来说 mmap 其实没什么用，因为消息是从网络中来。而对于发消息来说 sendfile 对比 mmap+write 我觉得效率更高，因为少了一次页缓存到 SocketBuffer 中的拷贝。</span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\"><br></span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\">来看下Kafka发消息的源码，最终调用的是 FileChannel.transferTo，底层就是 sendfile。</span></p><p style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><br></p><p style=\"text-align: center;\"><img class=\"rich_pages js_insertlocalimg\" data-ratio=\"0.3997821350762527\" data-s=\"300,640\" data-type=\"png\" data-w=\"918\" style=\"max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQxwz7UiaI2ib3d4D1CWXCibLukHlywVY4iazyiaubY5XYEYBWIO4cccEqZBDUQcQyAQz9Ztb85K3OMGFiaA/640?wx_fmt=png\"></p><p style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\"></span><br></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\">从 Kafka 源码中我没看到有类似于 RocketMQ的 mlock 等操作，我觉得原因是首先日志也没用到 mmap，然后 swap 其实可以通过 Linux 系统参数 vm.swappiness 来调节，这里建议设置为1，而不是0。</span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\"><br></span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\">假设内存真的不足，设置为 0 的话，在内存耗尽的情况下，又不能 swap，则会突然中止某些进程。设置个 1，起码还能拖一下，如果有良好的监控手段，还能给个机会发现一下，不至于突然中止。</span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\"><br></span></p><h2 data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\"><strong style=\"color: rgb(171, 25, 66);white-space: normal;\"><span style=\"font-size: 15px;text-align: left;\">5.3 RocketMQ &amp; Kafka 对比</span></strong></span></h2><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><br></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\">首先<strong>都是顺序写入</strong>，不过<strong> RocketMQ 是把消息都存一个文件中</strong>，而 <strong>Kafka 是一个分区一个文件</strong>。</span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\"><br></span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\">每个分区一个文件在<strong>迁移或者数据复制层面上来说更加灵活</strong>。</span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\"><br></span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\">但是<strong>分区多了的话，写入需要频繁的在多个文件之间来回切换，对于每个文件来说是顺序写入的，但是从全局看其实算随机写入，并且读取的时候也是一样，算随机读</strong>。而就一个文件的 RocketMQ 就没这个问题。</span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\"><br></span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\">从发送消息来说 RocketMQ 用到了 mmap + write 的方式，并且通过预热来减少大文件 mmap 因为缺页中断产生的性能问题。而 Kafka 则用了 sendfile，相对而言我觉得 kafka 发送的效率更高，因为少了一次页缓存到 SocketBuffer 中的拷贝。</span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\"><br></span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\">并且 swap 问题也可以通过系统参数来设置。</span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><br></p><h1 data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\"><strong style=\"color: rgb(171, 25, 66);white-space: normal;\"><span style=\"font-size: 15px;text-align: left;\">最后</span></strong></span></h1><p><span style=\"font-size: 15px;\"><br></span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\">这篇文章中间写 RocketMQ 卡壳了，源码还是不太熟，有点绕。多亏丁威大佬的点拨。不然我就陷入了死胡同出不来了。</span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\"><br></span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\">最后再推荐下丁威大佬和周继锋大佬的《RocketMQ技术内幕：RocketMQ架构设计与实现原理》。对 RocketMQ 有兴趣的同学可以看看。</span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\"><br></span></p><p data-tool=\"mdnice编辑器\" style=\"white-space: normal;font-variant-ligatures: normal;orphans: 2;widows: 2;\"><span style=\"font-size: 15px;\">文章如果哪里有纰漏请抓紧联系我，感谢！</span></p><section donone=\"shifuMouseDownCard('shifu_c_030')\" label=\"Copyright Reserved by PLAYHUDONG.\" style=\"text-align: start;white-space: normal;margin-top: 1em;margin-bottom: 1em;caret-color: rgb(0, 0, 0);color: rgb(0, 0, 0);border-width: 0px;border-style: initial;border-color: initial;\"><section style=\"margin-left: 1em;line-height: 1.4;\"><span style=\"padding: 3px 8px;border-top-left-radius: 4px;border-top-right-radius: 4px;border-bottom-right-radius: 4px;border-bottom-left-radius: 4px;color: rgb(255, 255, 255);background-color: rgb(255, 105, 31);font-family: inherit;text-align: inherit;text-decoration: inherit;font-size: 16px;\">推荐阅读</span>  <span style=\"margin-left: 4px;padding: 3px 8px;border-top-left-radius: 1.2em;border-top-right-radius: 1.2em;border-bottom-right-radius: 1.2em;border-bottom-left-radius: 1.2em;color: rgb(255, 255, 255);line-height: 1.2;background-color: rgb(204, 204, 204);font-family: inherit;text-align: inherit;text-decoration: inherit;border-color: rgb(249, 110, 87);font-size: 12px;\">点击标题可跳转</span></section><section style=\"margin-top: -11px;padding: 22px 16px 16px;border-width: 1px;border-style: solid;border-color: rgb(255, 105, 31);color: rgb(51, 51, 51);font-size: 1em;font-family: inherit;text-align: inherit;text-decoration: inherit;\"><p><a target=\"_blank\" href=\"http://mp.weixin.qq.com/s?__biz=MjM5NzMyMjAwMA==&amp;mid=2651483112&amp;idx=1&amp;sn=3173b656bbbeb6d28f65ac5035147a18&amp;chksm=bd2507978a528e81e07dc03f9b4f68033084f7f00ddb3ed16b7247fb704d93f84f8d9a62e86d&amp;scene=21#wechat_redirect\" data-itemshowtype=\"0\" tab=\"innerlink\" data-linktype=\"2\"></a><a target=\"_blank\" href=\"http://mp.weixin.qq.com/s?__biz=MjM5NzMyMjAwMA==&amp;mid=2651478650&amp;idx=2&amp;sn=b61ff06807460836a676f053276601af&amp;chksm=bd2536058a52bf13d4d7814d83f72c910547013ec252dfe26dff37559a633a83dc3123bfa728&amp;scene=21#wechat_redirect\" data-itemshowtype=\"0\" tab=\"innerlink\" style=\"text-align: start;white-space: normal;caret-color: rgb(0, 0, 0);font-size: 12px;\" data-linktype=\"2\"><span style=\"font-size: 12px;\">kafka 数据可靠性深度解读</span></a></p><p><a target=\"_blank\" href=\"http://mp.weixin.qq.com/s?__biz=MjM5NzMyMjAwMA==&amp;mid=2651483112&amp;idx=1&amp;sn=3173b656bbbeb6d28f65ac5035147a18&amp;chksm=bd2507978a528e81e07dc03f9b4f68033084f7f00ddb3ed16b7247fb704d93f84f8d9a62e86d&amp;scene=21#wechat_redirect\" data-itemshowtype=\"0\" tab=\"innerlink\" style=\"font-size: 12px;\" data-linktype=\"2\"><span style=\"font-size: 12px;\">RabbitMQ 如何实现对同一个应用的多个节点进行广播</span></a></p><p><span style=\"font-size: 12px;\"><a target=\"_blank\" href=\"http://mp.weixin.qq.com/s?__biz=MjM5NzMyMjAwMA==&amp;mid=2651489365&amp;idx=1&amp;sn=d1a8bd439fbee22d7be047839e11ee77&amp;chksm=bd25e82a8a52613c203e62cb1e6cd58c367add5f6999ac90799ad1b1bbb0ac0eb417dd7af81b&amp;scene=21#wechat_redirect\" data-itemshowtype=\"11\" tab=\"innerlink\" data-linktype=\"2\">消息队列面试连环问：如何保证消息不丢失？处理重复消息？消息有序性？消息堆积处理？</a></span></p></section></section><p style=\"caret-color: rgb(0, 0, 0);color: rgb(0, 0, 0);text-align: start;white-space: normal;\"><br></p><p style=\"white-space: normal;max-width: 100%;min-height: 1em;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-size: 14px;color: rgb(255, 169, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\">看完本文有收获？请转发分享给更多人</span></p><p style=\"white-space: normal;max-width: 100%;min-height: 1em;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;color: rgb(255, 169, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\">关注「ImportNew」，提升Java技能</strong></p><p style=\"white-space: normal;max-width: 100%;min-height: 1em;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><img data-ratio=\"0.9166666666666666\" data-s=\"300,640\" data-type=\"jpeg\" data-w=\"600\" width=\"auto\" style=\"box-sizing: border-box !important; overflow-wrap: break-word !important; visibility: visible !important; width: 600px !important; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/2A8tXicCG8ylbWIGfdoDED35IRRySQZTXUkJ1eop9MHApzFibKnOo0diboXpl0rmS5mH78YJhsWQv0dhv718A6kUA/640?wx_fmt=jpeg\"></p><p style=\"white-space: normal;max-width: 100%;min-height: 1em;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);text-align: right;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 14px;text-align: right;\">好文章，我</span><span style=\"font-size: 14px;text-align: right;color: rgb(255, 41, 65);\">在看</span><span style=\"font-size: 14px;text-align: right;\">❤️</span></p><p><br></p>\n                </div>\n\n    \n    <br>\n\n    \n        <a target=\"_blank\" href=\"http://mp.weixin.qq.com/s?__biz=MjM5NzMyMjAwMA==&amp;mid=2651489469&amp;idx=2&amp;sn=a8e696040b6a51d989b9b02d68cf055c&amp;chksm=bd25e8c28a5261d4ad63b7d902bedf4ac630e325914a95964765363ae57b8a39f44b10a1ded5&amp;scene=0#rd\" style=\"color: blue\" class=\"media_tool_meta meta_primary\">原文</a>\n        <br>\n    \n\n    \n\n    <img alt=\"\" width=\"1px\" height=\"1px\" class=\"\" style=\"width:1px;height:1px;display:none\" src=\"http://www.jintiankansha.me/rss_static/11757/ldsRuLoiNC\"></div></div>","descriptionType":"html","publishedDate":"Mon, 31 Aug 2020 03:30:00 +0000","feedId":2521,"bgimg":"http://img.100weidu.com/mmbiz_jpg/eZzl4LXykQyWUPN1VNmQFtIuJ0Qh3xCf4x7ct9OzFicm1JVDib0MA7D47aGfvZknO0giccjJ4iaMHqyOHTquo4zcLQ?imageView2/1/w/600","linkMd5":"29acc60b96a03ee0bc8659115e702065","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn25@2020_1/2020/09/05/06-41-45-210_1f6dd317a40a3e75.webp","destWidth":287,"destHeight":288,"sourceBytes":10325,"destBytes":9560,"author":"","articleImgCdnMap":{"http://img.100weidu.com/mmbiz_jpg/eZzl4LXykQyWUPN1VNmQFtIuJ0Qh3xCf4x7ct9OzFicm1JVDib0MA7D47aGfvZknO0giccjJ4iaMHqyOHTquo4zcLQ?imageView2/1/w/600":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn25@2020_1/2020/09/05/06-41-45-210_1f6dd317a40a3e75.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQxwz7UiaI2ib3d4D1CWXCibLukeSsuS7xYFgWKSd6BAsn3JtDFdXxatcsr5Jo0rOAWG8t51FMeCRVicfA/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn62@2020_3/2020/09/05/06-45-33-768_f9cf218d51b1a39d.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQxwz7UiaI2ib3d4D1CWXCibLukR91lICNa4ScNCqiaic7ovU3mSwQsxhicgKq3FX8zzHPRQaZpNyfibxyFWA/640?wx_fmt=png":null,"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQxwz7UiaI2ib3d4D1CWXCibLuk5ibgdeSBHSWT9oFP4LTsMnLY3SsuZibE71T2FRmFSpmsqveyrGibjuTRg/640?wx_fmt=png":null,"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQxwz7UiaI2ib3d4D1CWXCibLukeOB9oHRfQU70UwsDE25J3dA6YcRgrdFbxVLQTxXDPvfdUFu0CISszg/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn50@2020_6/2020/09/05/06-43-13-524_1de79b1dc38a0afc.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQxwz7UiaI2ib3d4D1CWXCibLukAicj1a0Pe1lYpBAyYoOGOkKsknfDkdVTTiat8CibAVrjEo6uxPFEXls6A/640?wx_fmt=png":null,"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQxwz7UiaI2ib3d4D1CWXCibLukzYPWpQoWbE0Tf3Yzia6uicNeBuzAMRhpibwBzDlJWTUQdGEtvUaw0kpog/640?wx_fmt=png":null,"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQxwz7UiaI2ib3d4D1CWXCibLuk5S1ibjFrBPLEbBxHkzxY2KvbXPpeZg2BGlkib1ZC7g1uHVauKUDMpdRA/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn23@2020_5/2020/09/05/06-45-24-449_115d4785edad2e21.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQxwz7UiaI2ib3d4D1CWXCibLukBNVGxffibdIkbbnWiaUR2Vv7Av9VUNYCZWoFiavXRP9CPz2OpM8tlxmcQ/640?wx_fmt=png":null,"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQxwz7UiaI2ib3d4D1CWXCibLuk60X72D3eKJacUHgMqldQXD8CicTGeaejnQiaO6wC1h4bxl8WdXOKxfOg/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn54@2020_1/2020/09/05/06-43-15-546_3bac8b483518e201.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQxwz7UiaI2ib3d4D1CWXCibLukXs4dGIx4EzTgXCCw7upia7lZGLE8a74NFHRYXUV8sReiaJNibIic4FJ2eQ/640?wx_fmt=png":null,"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQxwz7UiaI2ib3d4D1CWXCibLukgXrwI6KnDUXLJtce0TcXdY7yb2Kh2xJIApwv3YYGY9zWkvqtia5hGlw/640?wx_fmt=png":null,"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQxwz7UiaI2ib3d4D1CWXCibLukSbvrkJVNZpUicF8nIPCqYSQ1ZZWfc4ibB8jialqv4nfg1OrMU6EL4jPBA/640?wx_fmt=png":null,"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQxwz7UiaI2ib3d4D1CWXCibLuk8b8Yb4VzzibQ4HFhDewee1icBxrqDZ4bhlvJa9t9HvSAy4e7XKZFtJGg/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn77@2020_4/2020/09/05/06-43-41-550_95e6062cf51b221f.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQxwz7UiaI2ib3d4D1CWXCibLukTSWSKtGv4uBaV1tpY7BsX8SSTm7lNK4qKaOVgMBLqshXjhHsQEUL8Q/640?wx_fmt=png":null,"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQxwz7UiaI2ib3d4D1CWXCibLukHlywVY4iazyiaubY5XYEYBWIO4cccEqZBDUQcQyAQz9Ztb85K3OMGFiaA/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn45@2020_2/2020/09/05/06-42-21-930_7d6fa64d178b4b65.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/2A8tXicCG8ylbWIGfdoDED35IRRySQZTXUkJ1eop9MHApzFibKnOo0diboXpl0rmS5mH78YJhsWQv0dhv718A6kUA/640?wx_fmt=jpeg":"https://cdn.jsdelivr.net/gh/myreaderx/cdn61@2020_1/2020/09/05/06-42-03-580_f93d0239d4369c75.webp","http://www.jintiankansha.me/rss_static/11757/ldsRuLoiNC":null},"publishedOrCreatedDate":1599288104742},{"createdTime":"2020-09-05 14:41:44","updatedTime":"2020-09-05 14:41:44","title":"2w字 + 40张图带你参透并发编程！","link":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+2w%E5%AD%97%C2%A0%2B%C2%A040%E5%BC%A0%E5%9B%BE%E5%B8%A6%E4%BD%A0%E5%8F%82%E9%80%8F%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%EF%BC%81","description":"<div><div><div id=\"media\" class=\"rich_media_thumb_wrp\">\n\n            <img class=\"rich_media_thumb\" src=\"http://img.100weidu.com/mmbiz_jpg/eZzl4LXykQy6Uwm3SGUMYic8R3o8yalAkB1Yc1mJKSqtUPibDZ2NHcP3T84HbrQrtJ7DVnD1iabVicA7zBAff0TBbg?imageView2/1/w/600\">\n        </div>\n    \n\n    \n\n    <div class=\"rich_media_content\" id=\"js_content\">\n                    \n\n                    \n\n                    \n                    \n                    <p><br></p><p style=\"text-align: center;\"><span style=\"font-size: 14px;letter-spacing: 0.5440000295639038px;text-align: center;max-width: 100%;color: rgb(255, 41, 65);line-height: 22.4px;\">（给</span><span style=\"font-size: 14px;letter-spacing: 0.5440000295639038px;text-align: center;max-width: 100%;line-height: 22.4px;color: rgb(0, 128, 255);\">ImportNew</span><span style=\"font-size: 14px;letter-spacing: 0.5440000295639038px;text-align: center;max-width: 100%;color: rgb(255, 41, 65);line-height: 22.4px;\">加星标，提高Java技能）</span></p><blockquote><p style=\"letter-spacing: 0.5440000295639038px;white-space: normal;background-color: rgb(255, 255, 255);max-width: 100%;min-height: 1em;text-align: left;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-size: 14px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">转自：cxuan</span></p></blockquote><p><br></p><section data-tool=\"mdnice编辑器\" data-website=\"https://www.mdnice.com\" data-mpa-powered-by=\"yiban.io\"><section data-mpa-template=\"t\" mpa-from-tpl=\"t\"><section data-mpa-template=\"t\" mpa-from-tpl=\"t\"><section data-id=\"6001\" data-type=\"lspecial06\" data-md5=\"41e97\" mpa-from-tpl=\"t\"><section data-md5=\"41e97\" mpa-from-tpl=\"t\"><section data-md5=\"41e97\" mpa-from-tpl=\"t\"><section data-md5=\"41e97\" mpa-from-tpl=\"t\"><section data-md5=\"41e97\" mpa-from-tpl=\"t\"><p data-md5=\"41e97\"><span style=\"color: rgb(123, 12, 0);font-size: 15px;\"><strong>1 并发历史 </strong></span></p></section></section></section></section></section><p style=\"max-width: 100%;min-height: 1em;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br></p><p style=\"max-width: 100%;min-height: 1em;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;\">在计算机最早期的时候，没有操作系统，执行程序只需要一种方式，那就是从头到尾依次执行。任何资源都会为这个程序服务，在计算机使用某些资源时，其他资源就会空闲，就会存在 </span><code style=\"letter-spacing: 2px;word-spacing: 2px;margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">浪费资源</span></code><span style=\"color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;font-size: 15px;\"> 的情况。</span></p></section></section><blockquote data-tool=\"mdnice编辑器\" style=\"margin-top: 20px;margin-bottom: 20px;padding: 10px 10px 10px 20px;border-width: 1px;border-top-style: solid;border-right-style: solid;border-bottom-style: solid;border-color: rgb(27, 144, 13);color: rgb(89, 89, 89);font-size: 0.9em;max-width: 100%;box-sizing: inherit;overflow: auto;text-size-adjust: 100%;line-height: 1.55em;border-radius: 6px;background-image: initial;background-position: initial;background-size: initial;background-repeat: initial;background-attachment: initial;background-origin: initial;background-clip: initial;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(116, 181, 109);line-height: 1;font-weight: 700;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">❝</span><p style=\"padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;letter-spacing: 2px;font-size: 16px;word-spacing: 2px;color: black;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">这里说的浪费资源指的是资源空闲，没有充分使用的情况。</span></p><span style=\"max-width: 100%;float: right;color: rgb(116, 181, 109);font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">❞</span></blockquote><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">操作系统的出现为我们的程序带来了 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">并发性</span></code><span style=\"font-size: 15px;\">，操作系统使我们的程序能够同时运行多个程序，一个程序就是一个进程，也就相当于同时运行多个进程。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">操作系统是一个</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">并发系统</span></code><span style=\"font-size: 15px;\">，并发性是操作系统非常重要的特征，操作系统具有同时处理和调度多个程序的能力，比如多个 I/O 设备同时在输入输出；设备 I/O 和 CPU 计算同时进行；内存中同时有多个系统和用户程序被启动交替、穿插地执行。操作系统在协调和分配进程的同时，操作系统也会为不同进程分配不同的资源。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">操作系统实现多个程序同时运行解决了单个程序无法做到的问题，主要有下面三点</span></p><ul data-tool=\"mdnice编辑器\" class=\"list-paddingleft-2\" style=\"margin-top: 8px;margin-bottom: 8px;padding-left: 25px;max-width: 100%;font-size: 15px;color: rgb(89, 89, 89);list-style-type: circle;overflow-wrap: break-word !important;\"><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">资源利用率</span></code><span style=\"font-size: 15px;\">，我们上面说到，单个进程存在资源浪费的情况，举个例子，当你在为某个文件夹赋予权限的时候，输入程序无法接受外部的输入字符，只有等到权限赋予完毕后才能接受外部输入。总的来讲，就是在等待程序时无法执行其他工作。如果在等待程序时可以运行另一个程序，那么将会大大提高资源的利用率。（资源并不会觉得累）因为它不会划水～</span></section></li><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">公平性</span></code><span style=\"font-size: 15px;\">，不同的用户和程序都能够使用计算机上的资源。一种高效的运行方式是为不同的程序划分时间片来使用资源，但是有一点需要注意，操作系统可以决定不同进程的优先级。虽然每个进程都有能够公平享有资源的权利，但是当有一个进程释放资源后的同时有一个优先级更高的进程抢夺资源，就会造成优先级低的进程无法获得资源，进而导致进程饥饿。</span></section></li><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">便利性</span></code><span style=\"font-size: 15px;\">，单个进程是是不用通信的，通信的本质就是</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">信息交换</span></code><span style=\"font-size: 15px;\">，及时进行信息交换能够避免</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">信息孤岛</span></code><span style=\"font-size: 15px;\">，做重复性的工作；任何并发能做的事情，单进程也能够实现，只不过这种方式效率很低，它是一种</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">顺序性</span></code><span style=\"font-size: 15px;\">的。</span></section></li></ul><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">但是，顺序编程（也称为</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">串行编程</span></code><span style=\"font-size: 15px;\">）也不是</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">一无是处</span></code><span style=\"font-size: 15px;\">的，串行编程的优势在于其<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「直观性和简单性」</strong>，客观来讲，串行编程更适合我们人脑的思考方式，但是我们并不会满足于顺序编程，<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「we want it more!!!」</strong> 。资源利用率、公平性和便利性促使着进程出现的同时，也促使着</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">线程</span></code><span style=\"font-size: 15px;\">的出现。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">如果你还不是很理解进程和线程的区别的话，那么我就以我多年操作系统的经验（吹牛逼，实则半年）来为你解释一下：<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「进程是一个应用程序，而线程是应用程序中的一条顺序流」</strong>。</span></p><p style=\"max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><img class=\"rich_pages\" data-ratio=\"0.6559322033898305\" data-s=\"300,640\" data-type=\"png\" data-w=\"1180\" style=\"box-sizing: border-box !important; overflow-wrap: break-word !important; width: 677px !important; visibility: visible !important; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63rHJT84HDiajX503qdwTRPXHSa467jxJyHic4umHwHH8WoI7G0ibTu4rKbA/640?wx_fmt=png\"></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">进程中会有多个线程来完成一些任务，这些任务有可能相同有可能不同。每个线程都有自己的执行顺序。<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></span></p></section><p style=\"max-width: 100%;min-height: 1em;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb center border-box break-word><img class=\"rich_pages\" data-ratio=\"0.686084142394822\" data-s=\"300,640\" data-type=\"png\" data-w=\"1236\" style=\"box-sizing: border-box !important; overflow-wrap: break-word !important; width: 677px !important; visibility: visible !important; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63rdTR6nicFv1UGib1lSF7YOgWzzKZFRrDdflEy3DQ1VOnFQjUd8VibsAnZw/640?wx_fmt=png\"></p><section data-tool=\"mdnice编辑器\" data-website=\"https://www.mdnice.com\" style=\"padding-right: 10px;padding-left: 10px;max-width: 100%;white-space: normal;background-color: rgb(255, 255, 255);font-size: 16px;word-break: break-word;text-align: left;line-height: 1.35;font-family: Optima-Regular, PingFangTC-light;letter-spacing: 1.5px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">每个线程都有自己的栈空间，这是线程私有的，还有一些其他线程内部的和线程共享的资源，如下所示。</span></p><blockquote data-tool=\"mdnice编辑器\" style=\"margin-top: 20px;margin-bottom: 20px;padding: 10px 10px 10px 20px;border-width: 1px;border-top-style: solid;border-right-style: solid;border-bottom-style: solid;border-color: rgb(27, 144, 13);color: rgb(89, 89, 89);font-size: 0.9em;max-width: 100%;box-sizing: inherit;overflow: auto;text-size-adjust: 100%;line-height: 1.55em;border-radius: 6px;background-image: initial;background-position: initial;background-size: initial;background-repeat: initial;background-attachment: initial;background-origin: initial;background-clip: initial;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(116, 181, 109);line-height: 1;font-weight: 700;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">❝</span><p style=\"padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;letter-spacing: 2px;font-size: 16px;word-spacing: 2px;color: black;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">在计算机中，一般堆栈指的就是栈，而堆指的才是堆</span></p><span style=\"max-width: 100%;float: right;color: rgb(116, 181, 109);font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">❞</span></blockquote><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">线程会共享进程范围内的资源，例如内存和文件句柄，但是每个线程也有自己私有的内容，比如程序计数器、栈以及局部变量。下面汇总了进程和线程共享资源的区别</span></p></section><p style=\"max-width: 100%;min-height: 1em;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb center border-box break-word><img class=\"rich_pages\" data-ratio=\"0.5\" data-s=\"300,640\" data-type=\"png\" data-w=\"1208\" style=\"box-sizing: border-box !important; overflow-wrap: break-word !important; width: 677px !important; visibility: visible !important; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63rYZKuqrxyJxXhA7fcrnriadnQe783YAicN9iblrVWbibULJnTtoqW4zHWibQ/640?wx_fmt=png\"></p><section data-tool=\"mdnice编辑器\" data-website=\"https://www.mdnice.com\" style=\"padding-right: 10px;padding-left: 10px;max-width: 100%;white-space: normal;background-color: rgb(255, 255, 255);font-size: 16px;word-break: break-word;text-align: left;line-height: 1.35;font-family: Optima-Regular, PingFangTC-light;letter-spacing: 1.5px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">线程是一种</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">轻量级</span></code><span style=\"font-size: 15px;\">的进程，轻量级体现在线程的创建和销毁要比进程的开销小很多。</span></p><blockquote data-tool=\"mdnice编辑器\" style=\"margin-top: 20px;margin-bottom: 20px;padding: 10px 10px 10px 20px;border-width: 1px;border-top-style: solid;border-right-style: solid;border-bottom-style: solid;border-color: rgb(27, 144, 13);color: rgb(89, 89, 89);font-size: 0.9em;max-width: 100%;box-sizing: inherit;overflow: auto;text-size-adjust: 100%;line-height: 1.55em;border-radius: 6px;background-image: initial;background-position: initial;background-size: initial;background-repeat: initial;background-attachment: initial;background-origin: initial;background-clip: initial;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(116, 181, 109);line-height: 1;font-weight: 700;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">❝</span><p style=\"padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;letter-spacing: 2px;font-size: 16px;word-spacing: 2px;color: black;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">注意：任何比较都是相对的。</span></p><span style=\"max-width: 100%;float: right;color: rgb(116, 181, 109);font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">❞</span></blockquote><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">在大多数现代操作系统中，都以线程为基本的调度单位，所以我们的视角着重放在对</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">线程</span></code><span style=\"font-size: 15px;\">的探究。</span></p><section data-mpa-template=\"t\" mpa-from-tpl=\"t\"><section data-mpa-template=\"t\" mpa-from-tpl=\"t\" style=\"max-width: 100%;text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br></section><section data-mpa-template=\"t\" mpa-from-tpl=\"t\"><section data-id=\"6001\" data-type=\"lspecial06\" data-md5=\"41e97\" mpa-from-tpl=\"t\"><section data-md5=\"41e97\" mpa-from-tpl=\"t\"><section data-md5=\"41e97\" mpa-from-tpl=\"t\"><section data-md5=\"41e97\" mpa-from-tpl=\"t\"><section data-md5=\"41e97\" mpa-from-tpl=\"t\"><p data-md5=\"41e97\"><span style=\"font-size: 15px;color: rgb(123, 12, 0);\"><strong>2 线程</strong></span> </p></section></section></section></section></section><p style=\"max-width: 100%;min-height: 1em;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></p></section></section><section data-tool=\"mdnice编辑器\" data-website=\"https://www.mdnice.com\" style=\"padding-right: 10px;padding-left: 10px;max-width: 100%;word-break: break-word;line-height: 1.35;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><h3 data-tool=\"mdnice编辑器\" style=\"margin-top: 20px;margin-bottom: 20px;font-weight: bold;font-size: 17px;max-width: 100%;color: black;text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"padding-bottom: 2px;max-width: 100%;color: rgb(43, 43, 43);font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">什么是多线程</span></h3></section><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">多线程意味着你能够在同一个应用程序中运行多个线程，我们知道，指令是在 CPU 中执行的，多线程应用程序就像是具有多个 CPU 在同时执行应用程序的代码。<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></span></p></section><p style=\"max-width: 100%;min-height: 1em;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb center border-box break-word><img class=\"rich_pages\" data-ratio=\"0.7425968109339408\" data-s=\"300,640\" data-type=\"png\" data-w=\"878\" style=\"box-sizing: border-box !important; overflow-wrap: break-word !important; width: 413px !important; visibility: visible !important; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63rsocicUklTX7zeIC9enlcApYqjeoCNxPEtGuAFsDeWibnAvxVMYp93tXg/640?wx_fmt=png\"></p><section data-tool=\"mdnice编辑器\" data-website=\"https://www.mdnice.com\" style=\"padding-right: 10px;padding-left: 10px;max-width: 100%;white-space: normal;background-color: rgb(255, 255, 255);font-size: 16px;word-break: break-word;text-align: left;line-height: 1.35;font-family: Optima-Regular, PingFangTC-light;letter-spacing: 1.5px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">其实这是一种假象，线程数量并不等于 CPU 数量，单个 CPU 将在多个线程之间共享 CPU 的时间片，在给定的时间片内执行每个线程之间的切换，每个线程也可以由不同的 CPU 执行，如下图所示</span></p></section><p style=\"max-width: 100%;min-height: 1em;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb center border-box break-word><img class=\"rich_pages\" data-ratio=\"0.5932678821879382\" data-s=\"300,640\" data-type=\"png\" data-w=\"1426\" style=\"box-sizing: border-box !important; overflow-wrap: break-word !important; width: 677px !important; visibility: visible !important; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63rrozSIicLcxyQ8SRTMFCicrQUxflkgicSUz7FCjIwarwBSfma7nItplNAg/640?wx_fmt=png\"></p><section data-tool=\"mdnice编辑器\" data-website=\"https://www.mdnice.com\" style=\"padding-right: 10px;padding-left: 10px;max-width: 100%;white-space: normal;background-color: rgb(255, 255, 255);font-size: 16px;word-break: break-word;text-align: left;line-height: 1.35;font-family: Optima-Regular, PingFangTC-light;letter-spacing: 1.5px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><h3 data-tool=\"mdnice编辑器\" style=\"margin-top: 20px;margin-bottom: 20px;font-weight: bold;font-size: 17px;max-width: 100%;color: black;text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"padding-bottom: 2px;max-width: 100%;color: rgb(43, 43, 43);font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">并发和并行的关系</span></h3><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">并发</span></code><span style=\"font-size: 15px;\">意味着应用程序会执行多个的任务，但是如果计算机只有一个 CPU 的话，那么应用程序无法同时执行多个的任务，但是应用程序又需要执行多个任务，所以计算机在开始执行下一个任务之前，它并没有完成当前的任务，只是把状态暂存，进行任务切换，CPU 在多个任务之间进行切换，直到任务完成。如下图所示</span></p><p style=\"max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><img class=\"rich_pages\" data-ratio=\"0.4900662251655629\" data-s=\"300,640\" data-type=\"png\" data-w=\"1510\" style=\"background-color: rgb(238, 237, 235); border-width: 1px; border-style: solid; border-color: rgb(238, 237, 235); background-size: 22px; background-position: center center; background-repeat: no-repeat; box-sizing: border-box !important; overflow-wrap: break-word !important; height: 322.993px !important; width: 657px !important; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63rj7I1AvWV8giaQSrd7ibamb4xzKPqCToTUXOCdXNmV4tGt9eSFukNbSRg/640?wx_fmt=png\"></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">并行</span></code><span style=\"font-size: 15px;\">是指应用程序将其任务分解为较小的子任务，这些子任务可以并行处理，例如在多个CPU上同时进行。</span></p><p style=\"max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><img class=\"rich_pages\" data-ratio=\"0.3452229299363057\" data-s=\"300,640\" data-type=\"png\" data-w=\"1570\" style=\"box-sizing: border-box !important; overflow-wrap: break-word !important; width: 677px !important; visibility: visible !important; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63riaUXhPBL1u6PXibBtMTP2cr8BibM9KrD2FwWk37ibMUzgHToW5vBZpSMfg/640?wx_fmt=png\"></p><h3 data-tool=\"mdnice编辑器\" style=\"margin-top: 20px;margin-bottom: 20px;font-weight: bold;font-size: 17px;max-width: 100%;color: black;text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"padding-bottom: 2px;max-width: 100%;color: rgb(43, 43, 43);font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">优势和劣势</span></h3><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">合理使用线程是一门艺术，合理编写一道准确无误的多线程程序更是一门艺术，如果线程使用得当，能够有效的降低程序的开发和维护成本。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">Java 很好的在用户空间实现了开发工具包，并在内核空间提供系统调用来支持多线程编程，Java 支持了丰富的类库 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">java.util.concurrent</span></code><span style=\"font-size: 15px;\"> 和跨平台的</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">内存模型</span></code><span style=\"font-size: 15px;\">，同时也提高了开发人员的门槛，并发一直以来是一个高阶的主题，但是现在，并发也成为了主流开发人员的必备素质。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">虽然线程带来的好处很多，但是编写正确的多线程（并发）程序是一件极困难的事情，并发程序的 Bug 往往会诡异地出现又诡异的消失，在当你认为没有问题的时候它就出现了，</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">难以定位</span></code><span style=\"font-size: 15px;\"> 是并发程序的一个特征，所以在此基础上你需要有扎实的并发基本功。那么，并发为什么会出现呢？</span></p><h3 data-tool=\"mdnice编辑器\" style=\"margin-top: 20px;margin-bottom: 20px;font-weight: bold;font-size: 17px;max-width: 100%;color: black;text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"padding-bottom: 2px;max-width: 100%;color: rgb(43, 43, 43);font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">并发为什么会出现</span></h3><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">计算机世界的快速发展离不开 CPU、内存和 I/O 设备的高速发展，但是这三者一直存在速度差异性问题，我们可以从存储器的层次结构可以看出</span></p><p style=\"max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><img class=\"rich_pages\" data-ratio=\"0.45178335535006603\" data-s=\"300,640\" data-type=\"png\" data-w=\"1514\" style=\"box-sizing: border-box !important; overflow-wrap: break-word !important; width: 677px !important; visibility: visible !important; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63rM7fCIxLw4UWhslfZQnicXFR5hFDLl9zAiaNMPt4ACEFRib3G5Cvy4RR5A/640?wx_fmt=png\"></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">CPU 内部是寄存器的构造，寄存器的访问速度要高于</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">高速缓存</span></code><span style=\"font-size: 15px;\">，高速缓存的访问速度要高于内存，最慢的是磁盘访问。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">程序是在内存中执行的，程序里大部分语句都要访问内存，有些还需要访问 I/O 设备，根据漏桶理论来说，程序整体的性能取决于最慢的操作也就是磁盘访问速度。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">因为 CPU 速度太快了，所以为了发挥 CPU 的速度优势，平衡这三者的速度差异，计算机体系机构、操作系统、编译程序都做出了贡献，主要体现为：</span></p><ul data-tool=\"mdnice编辑器\" class=\"list-paddingleft-2\" style=\"margin-top: 8px;margin-bottom: 8px;padding-left: 25px;max-width: 100%;font-size: 15px;color: rgb(89, 89, 89);list-style-type: circle;overflow-wrap: break-word !important;\"><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;font-size: 15px;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">CPU 使用缓存来中和和内存的访问速度差异</span></section></li><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">操作系统提供进程和线程调度，让 CPU 在执行指令的同时分时复用线程，让内存和磁盘不断交互，不同的 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">CPU 时间片</span></code><span style=\"font-size: 15px;\"> 能够执行不同的任务，从而均衡这三者的差异</span></section></li><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;font-size: 15px;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">编译程序提供优化指令的执行顺序，让缓存能够合理的使用</span></section></li></ul><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">我们在享受这些便利的同时，多线程也为我们带来了挑战，下面我们就来探讨一下并发问题为什么会出现以及多线程的源头是什么</span></p><h3 data-tool=\"mdnice编辑器\" style=\"margin-top: 20px;margin-bottom: 20px;font-weight: bold;font-size: 17px;max-width: 100%;color: black;text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"padding-bottom: 2px;max-width: 100%;color: rgb(43, 43, 43);font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">线程带来的安全性问题</span></h3><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">线程安全性是非常复杂的，在没有采用</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">同步机制</span></code><span style=\"font-size: 15px;\">的情况下，多个线程中的执行操作往往是不可预测的，这也是多线程带来的挑战之一，下面我们给出一段代码，来看看安全性问题体现在哪</span></p><pre data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;max-width: 100%;border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><code style=\"padding: 15px 16px 16px;max-width: 100%;overflow-x: auto;color: rgb(221, 221, 221);display: -webkit-box;font-family: \" operator mono consolas monaco menlo monospace rgb border-box break-word><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">public</span> <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">class</span> <span style=\"max-width: 100%;font-weight: bold;color: white;line-height: 26px;\">TSynchronized</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">implements</span> <span style=\"max-width: 100%;font-weight: bold;color: white;line-height: 26px;\">Runnable</span></span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">static</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">int</span> i = <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">0</span>;<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">public</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">void</span> <span style=\"max-width: 100%;color: rgb(166, 226, 46);font-weight: bold;line-height: 26px;\">increase</span><span style=\"max-width: 100%;line-height: 26px;\">()</span></span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        i++;<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;color: rgb(117, 113, 94);line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">@Override</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">public</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">void</span> <span style=\"max-width: 100%;color: rgb(166, 226, 46);font-weight: bold;line-height: 26px;\">run</span><span style=\"max-width: 100%;line-height: 26px;\">()</span> </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">for</span>(<span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">int</span> i = <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">0</span>;i 1000;i++) {<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">            increase();<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">public</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">static</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">void</span> <span style=\"max-width: 100%;color: rgb(166, 226, 46);font-weight: bold;line-height: 26px;\">main</span><span style=\"max-width: 100%;line-height: 26px;\">(String[] args)</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">throws</span> InterruptedException </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        TSynchronized tSynchronized = <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">new</span> TSynchronized();<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        Thread aThread = <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">new</span> Thread(tSynchronized);<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        Thread bThread = <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">new</span> Thread(tSynchronized);<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        aThread.start();<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        bThread.start();<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        System.out.println(<span style=\"max-width: 100%;color: rgb(166, 226, 46);line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">\"i = \"</span> + i);<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">}<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></code></pre><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">这段程序输出后会发现，i 的值每次都不一样，这不符合我们的预测，那么为什么会出现这种情况呢？我们先来分析一下程序的运行过程。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">TSynchronized</span></code><span style=\"font-size: 15px;\"> 实现了 Runnable 接口，并定义了一个静态变量 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">i</span></code><span style=\"font-size: 15px;\">，然后在 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">increase</span></code><span style=\"font-size: 15px;\"> 方法中每次都增加 i 的值，在其实现的 run 方法中进行循环调用，共执行 1000 次。</span></p><h4 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px;margin-bottom: 15px;font-weight: bold;font-size: 18px;max-width: 100%;color: black;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;height: 16px;line-height: 16px;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">可见性问题</span></h4><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">在单核 CPU 时代，所有的线程共用一个 CPU，CPU 缓存和内存的一致性问题容易解决，CPU 和 内存之间</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">如果用图来表示的话我想会是下面这样</span></p></section><p style=\"max-width: 100%;min-height: 1em;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb center border-box break-word><img class=\"rich_pages\" data-ratio=\"0.6986301369863014\" data-s=\"300,640\" data-type=\"png\" data-w=\"1460\" style=\"background-color: rgb(238, 237, 235); border-width: 1px; border-style: solid; border-color: rgb(238, 237, 235); background-size: 22px; background-position: center center; background-repeat: no-repeat; box-sizing: border-box !important; overflow-wrap: break-word !important; height: 473.575px !important; width: 677px !important; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63rCqvg7gbm90hbf7d2ROIQb2WThUfiaPiaBFENZrGVDAHQ8aHO0mHbe92w/640?wx_fmt=png\"></p><section data-tool=\"mdnice编辑器\" data-website=\"https://www.mdnice.com\" style=\"padding-right: 10px;padding-left: 10px;max-width: 100%;white-space: normal;background-color: rgb(255, 255, 255);font-size: 16px;word-break: break-word;text-align: left;line-height: 1.35;font-family: Optima-Regular, PingFangTC-light;letter-spacing: 1.5px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">在多核时代，因为有多核的存在，每个核都能够独立的运行一个线程，每颗 CPU 都有自己的缓存，这时 CPU 缓存与内存的数据一致性就没那么容易解决了，当多个线程在不同的 CPU 上执行时，这些线程操作的是不同的 CPU 缓存</span></p></section><p style=\"max-width: 100%;min-height: 1em;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb center border-box break-word><img class=\"rich_pages\" data-ratio=\"0.5572327044025157\" data-s=\"300,640\" data-type=\"png\" data-w=\"1590\" style=\"box-sizing: border-box !important; overflow-wrap: break-word !important; width: 677px !important; visibility: visible !important; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63r8XZQUYN6J3T3uXxKaM3dp1s3QgibxwF6cwx8ylHzezrxEuWTBQia43Yw/640?wx_fmt=png\"></p><section data-tool=\"mdnice编辑器\" data-website=\"https://www.mdnice.com\" style=\"padding-right: 10px;padding-left: 10px;max-width: 100%;white-space: normal;background-color: rgb(255, 255, 255);font-size: 16px;word-break: break-word;text-align: left;line-height: 1.35;font-family: Optima-Regular, PingFangTC-light;letter-spacing: 1.5px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">因为 i 是静态变量，没有经过任何线程安全措施的保护，多个线程会并发修改 i 的值，所以我们认为 i 不是线程安全的，导致这种结果的出现是由于 aThread 和 bThread 中读取的 i 值彼此不可见，所以这是由于 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">可见性</span></code><span style=\"font-size: 15px;\"> 导致的线程安全问题。</span></p><h4 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px;margin-bottom: 15px;font-weight: bold;font-size: 18px;max-width: 100%;color: black;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;height: 16px;line-height: 16px;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">原子性问题</span></h4><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">看起来很普通的一段程序却因为两个线程 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">aThread</span></code><span style=\"font-size: 15px;\"> 和 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">bThread</span></code><span style=\"font-size: 15px;\"> 交替执行产生了不同的结果。但是根源不是因为创建了两个线程导致的，多线程只是产生线程安全性的必要条件，最终的根源出现在 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">i++</span></code><span style=\"font-size: 15px;\"> 这个操作上。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">这个操作怎么了？这不就是一个给 i 递增的操作吗？也就是 <strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「i++ =&gt; i = i + 1」</strong>，这怎么就会产生问题了？</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">因为 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">i++</span></code><span style=\"font-size: 15px;\"> 不是一个 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">原子性</span></code><span style=\"font-size: 15px;\"> 操作，仔细想一下，i++ 其实有三个步骤，读取 i 的值，执行 i + 1 操作，然后把 i + 1 得出的值重新赋给 i（将结果写入内存）。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">当两个线程开始运行后，每个线程都会把 i 的值读入到 CPU 缓存中，然后执行 + 1 操作，再把 + 1 之后的值写入内存。因为线程间都有各自的虚拟机栈和程序计数器，他们彼此之间没有数据交换，所以当 aThread 执行 + 1 操作后，会把数据写入到内存，同时 bThread 执行 + 1 操作后，也会把数据写入到内存，因为 CPU 时间片的执行周期是不确定的，所以会出现当 aThread 还没有把数据写入内存时，bThread 就会读取内存中的数据，然后执行 + 1操作，再写回内存，从而覆盖 i 的值，导致 aThread 所做的努力白费。</span></p><p style=\"max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><img class=\"rich_pages\" data-ratio=\"0.5738125802310655\" data-s=\"300,640\" data-type=\"png\" data-w=\"1558\" style=\"box-sizing: border-box !important; overflow-wrap: break-word !important; width: 677px !important; visibility: visible !important; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63r7ZU6j931L8PYSSG9efR2fzxD5Iia8krNdyUpXGBWKFhGoyJfIojZVwQ/640?wx_fmt=png\"></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">为什么上面的线程切换会出现问题呢？</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">我们先来考虑一下正常情况下（即不会出现线程安全性问题的情况下）两条线程的执行顺序</span></p></section><p style=\"max-width: 100%;min-height: 1em;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb center border-box break-word><img class=\"rich_pages\" data-ratio=\"0.8151408450704225\" data-s=\"300,640\" data-type=\"png\" data-w=\"1136\" style=\"box-sizing: border-box !important; overflow-wrap: break-word !important; width: 677px !important; visibility: visible !important; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63rAKyUGdToPOo7jdhXf2fVqeHObNib3yoDnG4N5hgEA5poodcibKrsQeLg/640?wx_fmt=png\"></p><section data-tool=\"mdnice编辑器\" data-website=\"https://www.mdnice.com\" style=\"padding-right: 10px;padding-left: 10px;max-width: 100%;white-space: normal;background-color: rgb(255, 255, 255);font-size: 16px;word-break: break-word;text-align: left;line-height: 1.35;font-family: Optima-Regular, PingFangTC-light;letter-spacing: 1.5px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">可以看到，当 aThread 在执行完整个 i++ 的操作后，操作系统对线程进行切换，由 aThread -&gt; bThread，这是最理想的操作，一旦操作系统在任意 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">读取/增加/写入</span></code><span style=\"font-size: 15px;\"> 阶段产生线程切换，都会产生线程安全问题。例如如下图所示</span></p></section><p style=\"max-width: 100%;min-height: 1em;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb center border-box break-word><img class=\"rich_pages\" data-ratio=\"0.6266829865361077\" data-s=\"300,640\" data-type=\"png\" data-w=\"1634\" style=\"box-sizing: border-box !important; overflow-wrap: break-word !important; width: 677px !important; visibility: visible !important; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63rhs7YAVOfiao4jIajToyRkSy2AD6McNHkZiaA2baCnwNAKrOOC2knkeOA/640?wx_fmt=png\"></p><section data-tool=\"mdnice编辑器\" data-website=\"https://www.mdnice.com\" style=\"padding-right: 10px;padding-left: 10px;max-width: 100%;white-space: normal;background-color: rgb(255, 255, 255);font-size: 16px;word-break: break-word;text-align: left;line-height: 1.35;font-family: Optima-Regular, PingFangTC-light;letter-spacing: 1.5px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">最开始的时候，内存中 i = 0，aThread 读取内存中的值并把它读取到自己的寄存器中，执行 +1 操作，此时发生线程切换，bThread 开始执行，读取内存中的值并把它读取到自己的寄存器中，此时发生线程切换，线程切换至 aThread 开始运行，aThread 把自己寄存器的值写回到内存中，此时又发生线程切换，由 aThread -&gt; bThread，线程 bThread 把自己寄存器的值 +1 然后写回内存，写完后内存中的值不是 2 ，而是 1， 内存中的 i 值被覆盖了。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">我们上面提到 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">原子性</span></code><span style=\"font-size: 15px;\"> 这个概念，那么什么是原子性呢？</span></p><blockquote data-tool=\"mdnice编辑器\" style=\"margin-top: 20px;margin-bottom: 20px;padding: 10px 10px 10px 20px;border-width: 1px;border-top-style: solid;border-right-style: solid;border-bottom-style: solid;border-color: rgb(27, 144, 13);color: rgb(89, 89, 89);font-size: 0.9em;max-width: 100%;box-sizing: inherit;overflow: auto;text-size-adjust: 100%;line-height: 1.55em;border-radius: 6px;background-image: initial;background-position: initial;background-size: initial;background-repeat: initial;background-attachment: initial;background-origin: initial;background-clip: initial;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(116, 181, 109);line-height: 1;font-weight: 700;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">❝</span><p style=\"padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;letter-spacing: 2px;font-size: 16px;word-spacing: 2px;color: black;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">并发编程的原子性操作是完全独立于任何其他进程运行的操作，原子操作多用于现代操作系统和并行处理系统中。</span></p><p style=\"padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;letter-spacing: 2px;font-size: 16px;word-spacing: 2px;color: black;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">原子操作通常在内核中使用，因为内核是操作系统的主要组件。但是，大多数计算机硬件，编译器和库也提供原子性操作。</span></p><p style=\"padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;letter-spacing: 2px;font-size: 16px;word-spacing: 2px;color: black;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">在加载和存储中，计算机硬件对存储器字进行读取和写入。为了对值进行匹配、增加或者减小操作，一般通过原子操作进行。在原子操作期间，处理器可以在同一数据传输期间完成读取和写入。这样，其他输入/输出机制或处理器无法执行存储器读取或写入任务，直到原子操作完成为止。</span></p><span style=\"max-width: 100%;float: right;color: rgb(116, 181, 109);font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">❞</span></blockquote><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">简单来讲，就是<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「原子操作要么全部执行，要么全部不执行」</strong>。数据库事务的原子性也是基于这个概念演进的。</span></p><h4 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px;margin-bottom: 15px;font-weight: bold;font-size: 18px;max-width: 100%;color: black;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;height: 16px;line-height: 16px;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">有序性问题</span></h4><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">在并发编程中还有带来让人非常头疼的 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">有序性</span></code><span style=\"font-size: 15px;\"> 问题，有序性顾名思义就是顺序性，在计算机中指的就是指令的先后执行顺序。一个非常显而易见的例子就是 JVM 中的</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">类加载</span></code></p><p style=\"max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><img class=\"rich_pages\" data-ratio=\"0.34782608695652173\" data-s=\"300,640\" data-type=\"png\" data-w=\"1610\" style=\"box-sizing: border-box !important; overflow-wrap: break-word !important; width: 677px !important; visibility: visible !important; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63rNscVGllMQ8mNBDkgHrqBfy2dib05ms41CG6oFz3ZWKibNxWZE2Mvl43A/640?wx_fmt=png\"></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">这是一个 JVM 加载类的过程图，也称为类的生命周期，类从加载到 JVM 到卸载一共会经历五个阶段 <strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「加载、连接、初始化、使用、卸载」</strong>。这五个过程的执行顺序是一定的，但是在连接阶段，也会分为三个过程，即 <strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「验证、准备、解析」</strong>阶段，这三个阶段的执行顺序不是确定的，通常交叉进行，在一个阶段的执行过程中会激活另一个阶段。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">有序性问题一般是编译器带来的，编译器有的时候确实是 <strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「好心办坏事」</strong>，它为了优化系统性能，往往更换指令的执行顺序。</span></p><h4 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px;margin-bottom: 15px;font-weight: bold;font-size: 18px;max-width: 100%;color: black;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;height: 16px;line-height: 16px;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">活跃性问题</span></h4><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">多线程还会带来</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">活跃性</span></code><span style=\"font-size: 15px;\">问题，如何定义活跃性问题呢？活跃性问题关注的是 <strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「某件事情是否会发生」</strong>。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\"><strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「如果一组线程中的每个线程都在等待一个事件的发生，而这个事件只能由该组中正在等待的线程触发，这种情况会导致死锁」</strong>。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">简单一点来表述一下，就是每个线程都在等待其他线程释放资源，而其他资源也在等待每个线程释放资源，这样没有线程抢先释放自己的资源，这种情况会产生死锁，所有线程都会无限的等待下去。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\"><strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「死锁的必要条件」</strong></span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">造成死锁的原因有四个，破坏其中一个即可破坏死锁</span></p><ul data-tool=\"mdnice编辑器\" class=\"list-paddingleft-2\" style=\"margin-top: 8px;margin-bottom: 8px;padding-left: 25px;max-width: 100%;font-size: 15px;color: rgb(89, 89, 89);list-style-type: circle;overflow-wrap: break-word !important;\"><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;font-size: 15px;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">互斥条件：指进程对所分配到的资源进行排它性使用，即在一段时间内某资源只由一个进程占用。如果此时还有其它进程请求资源，则请求者只能等待，直至占有资源的进程释放。</span></section></li><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;font-size: 15px;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">请求和保持条件：指进程已经保持至少一个资源，但又提出了新的资源请求，而该资源已被其它进程占有，此时请求进程阻塞，但又对自己已获得的其它资源保持占有。</span></section></li><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;font-size: 15px;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">不剥夺条件：指进程已获得的资源，在未使用完之前，不能被剥夺，只能在使用完时由自己释放。</span></section></li><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;font-size: 15px;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">循环等待：指在发生死锁时，必然存在一个进程对应的环形链。</span></section></li></ul><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">换句话说，死锁线程集合中的每个线程都在等待另一个死锁线程占有的资源。但是由于所有线程都不能运行，它们之中任何一个资源都无法释放资源，所以没有一个线程可以被唤醒。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">如果说死锁很</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">痴情</span></code><span style=\"font-size: 15px;\">的话，那么</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">活锁</span></code><span style=\"font-size: 15px;\">用一则成语来表示就是 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">弄巧成拙</span></code><span style=\"font-size: 15px;\">。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">某些情况下，当线程意识到它不能获取所需要的下一个锁时，就会尝试礼貌的释放已经获得的锁，然后等待非常短的时间再次尝试获取。可以想像一下这个场景：当两个人在狭路相逢的时候，都想给对方让路，相同的步调会导致双方都无法前进。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">现在假想有一对并行的线程用到了两个资源。它们分别尝试获取另一个锁失败后，两个线程都会释放自己持有的锁，再次进行尝试，这个过程会一直进行重复。很明显，这个过程中没有线程阻塞，但是线程仍然不会向下执行，这种状况我们称之为</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">活锁(livelock)</span></code><span style=\"font-size: 15px;\">。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">如果我们期望的事情一直不会发生，就会产生活跃性问题，比如单线程中的无限循环</span></p><pre data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;max-width: 100%;border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><code style=\"padding: 15px 16px 16px;max-width: 100%;overflow-x: auto;color: rgb(221, 221, 221);display: -webkit-box;font-family: \" operator mono consolas monaco menlo monospace rgb border-box break-word><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">while</span>(<span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">true</span>){...}<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">for</span>(;;){}<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></code></pre><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">在多线程中，比如 aThread 和 bThread 都需要某种资源，aThread 一直占用资源不释放，bThread 一直得不到执行，就会造成活跃性问题，bThread 线程会产生</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">饥饿</span></code><span style=\"font-size: 15px;\">，我们后面会说。</span></p><h4 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px;margin-bottom: 15px;font-weight: bold;font-size: 18px;max-width: 100%;color: black;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;height: 16px;line-height: 16px;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">性能问题</span></h4><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">与活跃性问题密切相关的是 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">性能</span></code><span style=\"font-size: 15px;\"> 问题，如果说活跃性问题关注的是最终的结果，那么性能问题关注的就是造成结果的过程，性能问题有很多方面：比如<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「服务时间过长，吞吐率过低，资源消耗过高」</strong>，在多线程中这样的问题同样存在。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">在多线程中，有一个非常重要的性能因素那就是我们上面提到的 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">线程切换</span></code><span style=\"font-size: 15px;\">，也称为 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">上下文切换(Context Switch)</span></code><span style=\"font-size: 15px;\">，这种操作开销很大。</span></p><blockquote data-tool=\"mdnice编辑器\" style=\"margin-top: 20px;margin-bottom: 20px;padding: 10px 10px 10px 20px;border-width: 1px;border-top-style: solid;border-right-style: solid;border-bottom-style: solid;border-color: rgb(27, 144, 13);color: rgb(89, 89, 89);font-size: 0.9em;max-width: 100%;box-sizing: inherit;overflow: auto;text-size-adjust: 100%;line-height: 1.55em;border-radius: 6px;background-image: initial;background-position: initial;background-size: initial;background-repeat: initial;background-attachment: initial;background-origin: initial;background-clip: initial;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(116, 181, 109);line-height: 1;font-weight: 700;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">❝</span><p style=\"padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;letter-spacing: 2px;font-size: 16px;word-spacing: 2px;color: black;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">在计算机世界中，老外都喜欢用 context 上下文这个词，这个词涵盖的内容很多，包括上下文切换的资源，寄存器的状态、程序计数器等。context switch 一般指的就是这些上下文切换的资源、寄存器状态、程序计数器的变化等。</span></p><span style=\"max-width: 100%;float: right;color: rgb(116, 181, 109);font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">❞</span></blockquote><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">在上下文切换中，会保存和恢复上下文，丢失局部性，把大量的时间消耗在线程切换上而不是线程运行上。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">为什么线程切换会开销如此之大呢？线程间的切换会涉及到以下几个步骤</span></p><p style=\"max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><img class=\"rich_pages\" data-ratio=\"0.46375\" data-s=\"300,640\" data-type=\"png\" data-w=\"1600\" style=\"box-sizing: border-box !important; overflow-wrap: break-word !important; width: 677px !important; visibility: visible !important; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63rFicibbC26Rse7UCClrbXnLVh5F1Vkf6Bmr8GaKBbQeAExAul6pNGnOyA/640?wx_fmt=png\"></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">将 CPU 从一个线程切换到另一线程涉及挂起当前线程，保存其状态，例如寄存器，然后恢复到要切换的线程的状态，加载新的程序计数器，此时线程切换实际上就已经完成了；此时，CPU 不在执行线程切换代码，进而执行新的和线程关联的代码。</span></p><h3 data-tool=\"mdnice编辑器\" style=\"margin-top: 20px;margin-bottom: 20px;font-weight: bold;font-size: 17px;max-width: 100%;color: black;text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"padding-bottom: 2px;max-width: 100%;color: rgb(43, 43, 43);font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">引起线程切换的几种方式</span></h3><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">线程间的切换一般是操作系统层面需要考虑的问题，那么引起线程上下文切换有哪几种方式呢？或者说线程切换有哪几种诱因呢？主要有下面几种引起上下文切换的方式</span></p><ul data-tool=\"mdnice编辑器\" class=\"list-paddingleft-2\" style=\"margin-top: 8px;margin-bottom: 8px;padding-left: 25px;max-width: 100%;font-size: 15px;color: rgb(89, 89, 89);list-style-type: circle;overflow-wrap: break-word !important;\"><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;font-size: 15px;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">当前正在执行的任务完成，系统的 CPU 正常调度下一个需要运行的线程</span></section></li><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;font-size: 15px;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">当前正在执行的任务遇到 I/O 等阻塞操作，线程调度器挂起此任务，继续调度下一个任务。</span></section></li><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;font-size: 15px;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">多个任务并发抢占锁资源，当前任务没有获得锁资源，被线程调度器挂起，继续调度下一个任务。</span></section></li><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;font-size: 15px;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">用户的代码挂起当前任务，比如线程执行 sleep 方法，让出CPU。</span></section></li><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;font-size: 15px;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">使用硬件中断的方式引起上下文切换</span></section></li></ul><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br mpa-from-tpl=\"t\" style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></section><section data-mpa-template=\"t\" mpa-from-tpl=\"t\"><section data-mpa-template=\"t\" mpa-from-tpl=\"t\" style=\"max-width: 100%;text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br></section><section data-mpa-template=\"t\" mpa-from-tpl=\"t\"><section data-id=\"6001\" data-type=\"lspecial06\" data-md5=\"41e97\" mpa-from-tpl=\"t\"><section data-md5=\"41e97\" mpa-from-tpl=\"t\"><section data-md5=\"41e97\" mpa-from-tpl=\"t\"><section data-md5=\"41e97\" mpa-from-tpl=\"t\"><section data-md5=\"41e97\" mpa-from-tpl=\"t\"><p data-md5=\"41e97\"><span style=\"color: rgb(123, 12, 0);font-size: 15px;\"><strong>3 线程安全性</strong></span></p></section></section></section></section></section><p style=\"max-width: 100%;min-height: 1em;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></p></section></section><p style=\"max-width: 100%;min-height: 1em;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;\">在 Java 中，要实现线程安全性，必须要正确的使用线程和锁，但是这些只是满足线程安全的一种方式，要编写正确无误的线程安全的代码，其核心就是对状态访问操作进行管理。最重要的就是最 </span><code style=\"letter-spacing: 2px;word-spacing: 2px;margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">共享(Shared)</span></code><span style=\"color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;font-size: 15px;\">的 和 </span><code style=\"letter-spacing: 2px;word-spacing: 2px;margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">可变(Mutable)</span></code><span style=\"font-size: 15px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;\">的状态。只有共享和可变的变量才会出现问题，私有变量不会出现问题，参考</span><code style=\"letter-spacing: 2px;word-spacing: 2px;margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">程序计数器</span></code><span style=\"color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;font-size: 15px;\">。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">对象的状态可以理解为存储在实例变量或者静态变量中的数据，共享意味着某个变量可以被多个线程同时访问、可变意味着变量在生命周期内会发生变化。一个变量是否是线程安全的，取决于它是否被多个线程访问。要使变量能够被安全访问，必须通过同步机制来对变量进行修饰。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">如果不采用同步机制的话，那么就要避免多线程对共享变量的访问，主要有下面两种方式</span></p><ul data-tool=\"mdnice编辑器\" class=\"list-paddingleft-2\" style=\"margin-top: 8px;margin-bottom: 8px;padding-left: 25px;max-width: 100%;font-size: 15px;color: rgb(89, 89, 89);list-style-type: circle;overflow-wrap: break-word !important;\"><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;font-size: 15px;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">不要在多线程之间共享变量</span></section></li><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;font-size: 15px;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">将共享变量置为不可变的</span></section></li></ul><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">我们说了这么多次线程安全性，那么什么是线程安全性呢？</span></p><h3 data-tool=\"mdnice编辑器\" style=\"margin-top: 20px;margin-bottom: 20px;font-weight: bold;font-size: 17px;max-width: 100%;color: black;text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"padding-bottom: 2px;max-width: 100%;color: rgb(43, 43, 43);font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">什么是线程安全性</span></h3><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">多个线程可以同时安全调用的代码称为线程安全的，如果一段代码是安全的，那么这段代码就不存在 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">竞态条件</span></code><span style=\"font-size: 15px;\">。仅仅当多个线程共享资源时，才会出现竞态条件。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">根据上面的探讨，我们可以得出一个简单的结论：<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「当多个线程访问某个类时，这个类始终都能表现出正确的行为，那么就称这个类是线程安全的」</strong>。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">单线程就是一个线程数量为 1 的多线程，单线程一定是线程安全的。读取某个变量的值不会产生安全性问题，因为不管读取多少次，这个变量的值都不会被修改。</span></p><h3 data-tool=\"mdnice编辑器\" style=\"margin-top: 20px;margin-bottom: 20px;font-weight: bold;font-size: 17px;max-width: 100%;color: black;text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"padding-bottom: 2px;max-width: 100%;color: rgb(43, 43, 43);font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">原子性</span></h3><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">我们上面提到了原子性的概念，你可以把</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">原子性</span></code><span style=\"font-size: 15px;\">操作想象成为一个</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">不可分割</span></code><span style=\"font-size: 15px;\"> 的整体，它的结果只有两种，要么全部执行，要么全部回滚。你可以把原子性认为是 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">婚姻关系</span></code><span style=\"font-size: 15px;\"> 的一种，男人和女人只会产生两种结果，</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">好好的</span></code><span style=\"font-size: 15px;\"> 和 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">说散就散</span></code><span style=\"font-size: 15px;\">，一般男人的一生都可以把他看成是原子性的一种，当然我们不排除</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">时间管理(线程切换)</span></code><span style=\"font-size: 15px;\">的个例，我们知道线程切换必然会伴随着安全性问题，男人要出去浪也会造成两种结果，这两种结果分别对应安全性的两个结果：线程安全（好好的）和线程不安全（说散就散）。</span></p><h3 data-tool=\"mdnice编辑器\" style=\"margin-top: 20px;margin-bottom: 20px;font-weight: bold;font-size: 17px;max-width: 100%;color: black;text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"padding-bottom: 2px;max-width: 100%;color: rgb(43, 43, 43);font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">竞态条件</span></h3><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">有了上面的线程切换的功底，那么竞态条件也就好定义了，它指的就是<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「两个或多个线程同时对一共享数据进行修改，从而影响程序运行的正确性时，这种就被称为竞态条件(race condition)」</strong> ，线程切换是导致竞态条件出现的诱导因素，我们通过一个示例来说明，来看一段代码</span></p><pre data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;max-width: 100%;border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><code style=\"padding: 15px 16px 16px;max-width: 100%;overflow-x: auto;color: rgb(221, 221, 221);display: -webkit-box;font-family: \" operator mono consolas monaco menlo monospace rgb border-box break-word><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">public</span> <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">class</span> <span style=\"max-width: 100%;font-weight: bold;color: white;line-height: 26px;\">RaceCondition</span> </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">  <br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">  <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">private</span> Signleton single = <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">null</span>;<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">  <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">public</span> Signleton <span style=\"max-width: 100%;color: rgb(166, 226, 46);font-weight: bold;line-height: 26px;\">newSingleton</span><span style=\"max-width: 100%;line-height: 26px;\">()</span></span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">if</span>(single == <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">null</span>){<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">      single = <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">new</span> Signleton();<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">return</span> single;<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">  }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">  <br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">}<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></code></pre><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">在上面的代码中，涉及到一个竞态条件，那就是判断 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">single</span></code><span style=\"font-size: 15px;\"> 的时候，如果 single 判断为空，此时发生了线程切换，另外一个线程执行，判断 single 的时候，也是空，执行 new 操作，然后线程切换回之前的线程，再执行 new 操作，那么内存中就会有两个 Singleton 对象。</span></p><h3 data-tool=\"mdnice编辑器\" style=\"margin-top: 20px;margin-bottom: 20px;font-weight: bold;font-size: 17px;max-width: 100%;color: black;text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"padding-bottom: 2px;max-width: 100%;color: rgb(43, 43, 43);font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">加锁机制</span></h3><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">在 Java 中，有很多种方式来对共享和可变的资源进行加锁和保护。Java 提供一种内置的机制对资源进行保护：</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">synchronized</span></code><span style=\"font-size: 15px;\"> 关键字，它有三种保护机制</span></p><ul data-tool=\"mdnice编辑器\" class=\"list-paddingleft-2\" style=\"margin-top: 8px;margin-bottom: 8px;padding-left: 25px;max-width: 100%;font-size: 15px;color: rgb(89, 89, 89);list-style-type: circle;overflow-wrap: break-word !important;\"><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;font-size: 15px;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">对方法进行加锁，确保多个线程中只有一个线程执行方法；</span></section></li><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;font-size: 15px;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">对某个对象实例（在我们上面的探讨中，变量可以使用对象来替换）进行加锁，确保多个线程中只有一个线程对对象实例进行访问；</span></section></li><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;font-size: 15px;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">对类对象进行加锁，确保多个线程只有一个线程能够访问类中的资源。</span></section></li></ul><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">synchronized 关键字对资源进行保护的代码块俗称 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">同步代码块(Synchronized Block)</span></code><span style=\"font-size: 15px;\">，例如</span></p><pre data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;max-width: 100%;border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><code style=\"padding: 15px 16px 16px;max-width: 100%;overflow-x: auto;color: rgb(221, 221, 221);display: -webkit-box;font-family: \" operator mono consolas monaco menlo monospace rgb border-box break-word><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">synchronized</span>(lock){<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">  <span style=\"max-width: 100%;color: rgb(117, 113, 94);line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">// 线程安全的代码</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">}<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></code></pre><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">每个 Java 对象都可以用做一个实现同步的锁，这些锁被称为 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">内置锁(Instrinsic Lock)</span></code><span style=\"font-size: 15px;\">或者 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">监视器锁(Monitor Lock)</span></code><span style=\"font-size: 15px;\">。线程在进入同步代码之前会自动获得锁，并且在退出同步代码时自动释放锁，而无论是通过正常执行路径退出还是通过异常路径退出，获得内置锁的唯一途径就是进入这个由锁保护的同步代码块或方法。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">synchronized 的另一种隐含的语义就是 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">互斥</span></code><span style=\"font-size: 15px;\">，互斥意味着</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">独占</span></code><span style=\"font-size: 15px;\">，最多只有一个线程持有锁，当线程 A 尝试获得一个由线程 B 持有的锁时，线程 A 必须等待或者阻塞，直到线程 B 释放这个锁，如果线程 B 不释放锁的话，那么线程 A 将会一直等待下去。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">线程 A 获得线程 B 持有的锁时，线程 A 必须等待或者阻塞，但是获取锁的线程 B 可以重入，重入的意思可以用一段代码表示</span></p><pre data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;max-width: 100%;border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><code style=\"padding: 15px 16px 16px;max-width: 100%;overflow-x: auto;color: rgb(221, 221, 221);display: -webkit-box;font-family: \" operator mono consolas monaco menlo monospace rgb border-box break-word><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">public</span> <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">class</span> <span style=\"max-width: 100%;font-weight: bold;color: white;line-height: 26px;\">Retreent</span> </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">  <br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">  <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">public</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">synchronized</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">void</span> <span style=\"max-width: 100%;color: rgb(166, 226, 46);font-weight: bold;line-height: 26px;\">doSomething</span><span style=\"max-width: 100%;line-height: 26px;\">()</span></span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    doSomethingElse();<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    System.out.println(<span style=\"max-width: 100%;color: rgb(166, 226, 46);line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">\"doSomething......\"</span>);<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">  }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">  <br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">  <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">public</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">synchronized</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">void</span> <span style=\"max-width: 100%;color: rgb(166, 226, 46);font-weight: bold;line-height: 26px;\">doSomethingElse</span><span style=\"max-width: 100%;line-height: 26px;\">()</span></span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    System.out.println(<span style=\"max-width: 100%;color: rgb(166, 226, 46);line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">\"doSomethingElse......\"</span>);<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">}<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></code></pre><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">获取 doSomething() 方法锁的线程可以执行 doSomethingElse() 方法，执行完毕后可以重新执行 doSomething() 方法中的内容。锁重入也支持子类和父类之间的重入，具体的我们后面会进行介绍。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">volatile</span></code><span style=\"font-size: 15px;\"> 是一种轻量级的 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">synchronized</span></code><span style=\"font-size: 15px;\">，也就是一种轻量级的加锁方式，volatile 通过保证共享变量的可见性来从侧面对对象进行加锁。可见性的意思就是当一个线程修改一个共享变量时，另外一个线程能够 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">看见</span></code><span style=\"font-size: 15px;\"> 这个修改的值。volatile 的执行成本要比 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">synchronized</span></code><span style=\"font-size: 15px;\"> 低很多，因为 volatile 不会引起线程的上下文切换。</span></p></section><p style=\"max-width: 100%;min-height: 1em;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb center border-box break-word><img class=\"rich_pages\" data-ratio=\"0.7581120943952803\" data-s=\"300,640\" data-type=\"png\" data-w=\"1356\" style=\"box-sizing: border-box !important; overflow-wrap: break-word !important; width: 677px !important; visibility: visible !important; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63r7M17d4QtgDEp8u8DIsJrqnQbtH9yEUXia63BhyKHVYAR0SZ58tJvaCA/640?wx_fmt=png\"></p><section data-tool=\"mdnice编辑器\" data-website=\"https://www.mdnice.com\" style=\"padding-right: 10px;padding-left: 10px;max-width: 100%;white-space: normal;background-color: rgb(255, 255, 255);font-size: 16px;word-break: break-word;text-align: left;line-height: 1.35;font-family: Optima-Regular, PingFangTC-light;letter-spacing: 1.5px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">我们还可以使用</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">原子类</span></code><span style=\"font-size: 15px;\"> 来保证线程安全，原子类其实就是 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">rt.jar</span></code><span style=\"font-size: 15px;\"> 下面以 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">atomic</span></code><span style=\"font-size: 15px;\"> 开头的类</span></p></section><p style=\"max-width: 100%;min-height: 1em;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb center border-box break-word><img class=\"rich_pages\" data-ratio=\"0.7230392156862745\" data-s=\"300,640\" data-type=\"png\" data-w=\"816\" style=\"box-sizing: border-box !important; overflow-wrap: break-word !important; width: 387px !important; visibility: visible !important; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63rlFAjmKBMPbXuEG9Kq5J6F2ChkiaMlwTSwf5qDjgTDcMzDicxvAdDFDibQ/640?wx_fmt=png\"></p><section data-tool=\"mdnice编辑器\" data-website=\"https://www.mdnice.com\" style=\"padding-right: 10px;padding-left: 10px;max-width: 100%;white-space: normal;background-color: rgb(255, 255, 255);font-size: 16px;word-break: break-word;text-align: left;line-height: 1.35;font-family: Optima-Regular, PingFangTC-light;letter-spacing: 1.5px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">除此之外，我们还可以使用 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">java.util.concurrent</span></code><span style=\"font-size: 15px;\"> 工具包下的线程安全的集合类来确保线程安全，具体的实现类和其原理我们后面会说。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">可以使用不同的并发模型来实现并发系统，并发模型说的是系统中的线程如何协作完成并发任务。不同的并发模型以不同的方式拆分任务，线程可以以不同的方式进行通信和协作。</span></p><section data-mpa-template=\"t\" mpa-from-tpl=\"t\"><section data-mpa-template=\"t\" mpa-from-tpl=\"t\" style=\"max-width: 100%;text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br></section><section data-mpa-template=\"t\" mpa-from-tpl=\"t\"><section data-id=\"6001\" data-type=\"lspecial06\" data-md5=\"41e97\" mpa-from-tpl=\"t\"><section data-md5=\"41e97\" mpa-from-tpl=\"t\"><section data-md5=\"41e97\" mpa-from-tpl=\"t\"><section data-md5=\"41e97\" mpa-from-tpl=\"t\"><section data-md5=\"41e97\" mpa-from-tpl=\"t\"><p data-md5=\"41e97\"><span style=\"font-size: 15px;color: rgb(123, 12, 0);\"><strong>4 竞态条件和关键区域</strong></span> </p></section></section></section></section></section><p style=\"max-width: 100%;min-height: 1em;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></p></section></section><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">竞态条件是在关键代码区域发生的一种特殊条件。关键区域是由多个线程同时执行的代码部分，关键区域中的代码执行顺序会对造成不一样的结果。如果多个线程执行一段关键代码，而这段关键代码会因为执行顺序不同而造成不同的结果时，那么这段代码就会包含竞争条件。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"color: rgb(123, 12, 0);font-size: 15px;letter-spacing: 1.5px;\">5 并发模型和分布式系统很相似</strong></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">并发模型其实和分布式系统模型非常相似，在并发模型中是</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">线程</span></code><span style=\"font-size: 15px;\">彼此进行通信，而在分布式系统模型中是 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">进程</span></code><span style=\"font-size: 15px;\"> 彼此进行通信。然而本质上，进程和线程也非常相似。这也就是为什么并发模型和分布式模型非常相似的原因。<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">分布式系统通常要比并发系统面临更多的挑战和问题比如进程通信、网络可能出现异常，或者远程机器挂掉等等。但是一个并发模型同样面临着比如 CPU 故障、网卡出现问题、硬盘出现问题等。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">因为并发模型和分布式模型很相似，因此他们可以相互借鉴，例如用于线程分配的模型就类似于分布式系统环境中的负载均衡模型。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">其实说白了，分布式模型的思想就是借鉴并发模型的基础上推演发展来的。</span></p><section data-mpa-template=\"t\" mpa-from-tpl=\"t\"><section data-mpa-template=\"t\" mpa-from-tpl=\"t\" style=\"max-width: 100%;text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br></section><section data-mpa-template=\"t\" mpa-from-tpl=\"t\"><section data-id=\"6001\" data-type=\"lspecial06\" data-md5=\"41e97\" mpa-from-tpl=\"t\"><section data-md5=\"41e97\" mpa-from-tpl=\"t\"><section data-md5=\"41e97\" mpa-from-tpl=\"t\"><section data-md5=\"41e97\" mpa-from-tpl=\"t\"><section data-md5=\"41e97\" mpa-from-tpl=\"t\"><p data-md5=\"41e97\"><strong><span style=\"color: rgb(123, 12, 0);font-size: 15px;\">6 认识两个状态 </span></strong></p></section></section></section></section></section><p style=\"max-width: 100%;min-height: 1em;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></p></section></section><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">并发模型的一个重要的方面是，线程是否应该</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">共享状态</span></code><span style=\"font-size: 15px;\">，是具有</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">共享状态</span></code><span style=\"font-size: 15px;\">还是</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">独立状态</span></code><span style=\"font-size: 15px;\">。共享状态也就意味着在不同线程之间共享某些状态<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">状态其实就是</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">数据</span></code><span style=\"font-size: 15px;\">，比如一个或者多个对象。当线程要共享数据时，就会造成 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">竞态条件</span></code><span style=\"font-size: 15px;\"> 或者 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">死锁</span></code><span style=\"font-size: 15px;\"> 等问题。当然，这些问题只是可能会出现，具体实现方式取决于你是否安全的使用和访问共享对象。</span></p></section><p style=\"max-width: 100%;min-height: 1em;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb center border-box break-word><img class=\"rich_pages\" data-ratio=\"0.4892086330935252\" data-s=\"300,640\" data-type=\"png\" data-w=\"1112\" style=\"box-sizing: border-box !important; overflow-wrap: break-word !important; width: 677px !important; visibility: visible !important; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63rHca13xT1oXSiagcmiayOuoh5gosMNcTzzxRHRvJfwbMYia5JDQUmfqmicA/640?wx_fmt=png\"></p><section data-tool=\"mdnice编辑器\" data-website=\"https://www.mdnice.com\" style=\"padding-right: 10px;padding-left: 10px;max-width: 100%;white-space: normal;background-color: rgb(255, 255, 255);font-size: 16px;word-break: break-word;text-align: left;line-height: 1.35;font-family: Optima-Regular, PingFangTC-light;letter-spacing: 1.5px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">独立的状态表明状态不会在多个线程之间共享，如果线程之间需要通信的话，他们可以访问不可变的对象来实现，这是最有效的避免并发问题的一种方式，如下图所示</span></p></section><p style=\"max-width: 100%;min-height: 1em;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb center border-box break-word><img class=\"rich_pages\" data-ratio=\"0.38387096774193546\" data-s=\"300,640\" data-type=\"png\" data-w=\"1240\" style=\"box-sizing: border-box !important; overflow-wrap: break-word !important; width: 677px !important; visibility: visible !important; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63rUJghn5RgfjibncqMMBddMQgwzougcQKJT3O7DJo1embiaVtyBNCsvckA/640?wx_fmt=png\"></p><section data-tool=\"mdnice编辑器\" data-website=\"https://www.mdnice.com\"><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">使用独立状态让我们的设计更加简单，因为只有一个线程能够访问对象，即使交换对象，也是不可变的对象。</span></p><section data-mpa-template=\"t\" mpa-from-tpl=\"t\"><section data-mpa-template=\"t\" mpa-from-tpl=\"t\" style=\"max-width: 100%;text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br></section><section data-mpa-template=\"t\" mpa-from-tpl=\"t\"><section data-id=\"6001\" data-type=\"lspecial06\" data-md5=\"41e97\" mpa-from-tpl=\"t\"><section data-md5=\"41e97\" mpa-from-tpl=\"t\"><section data-md5=\"41e97\" mpa-from-tpl=\"t\"><section data-md5=\"41e97\" mpa-from-tpl=\"t\"><section data-md5=\"41e97\" mpa-from-tpl=\"t\"><p data-md5=\"41e97\"><span style=\"font-size: 15px;color: rgb(123, 12, 0);\"><strong>7 并发模型 </strong></span></p></section></section></section></section></section></section></section><h3 data-tool=\"mdnice编辑器\" style=\"margin-top: 20px;margin-bottom: 20px;font-weight: bold;font-size: 17px;max-width: 100%;color: black;text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;padding-bottom: 2px;max-width: 100%;color: rgb(43, 43, 43);box-sizing: border-box !important;overflow-wrap: break-word !important;\">并行 Worker<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></span></h3><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">第一个并发模型是并行 worker 模型，客户端会把任务交给 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">代理人(Delegator)</span></code><span style=\"font-size: 15px;\">，然后由代理人把工作分配给不同的 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">工人(worker)</span></code><span style=\"font-size: 15px;\">。如下图所示</span></p><p style=\"max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><img class=\"rich_pages\" data-ratio=\"0.46780551905387646\" data-s=\"300,640\" data-type=\"png\" data-w=\"1522\" style=\"box-sizing: border-box !important; overflow-wrap: break-word !important; width: 677px !important; visibility: visible !important; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63rIF8giaq7AtPRqQpUcxR9uokRbIgTBWDiaFxK4FkQKOHOFWFc0wDZg5zQ/640?wx_fmt=png\"></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">并行 worker 的核心思想是，它主要有两个进程即代理人和工人，Delegator 负责接收来自客户端的任务并把任务下发，交给具体的 Worker 进行处理，Worker 处理完成后把结果返回给 Delegator，在 Delegator 接收到 Worker 处理的结果后对其进行汇总，然后交给客户端。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">并行 Worker 模型是 Java 并发模型中非常常见的一种模型。许多 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">java.util.concurrent</span></code><span style=\"font-size: 15px;\"> 包下的并发工具都使用了这种模型。</span></p><h4 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px;margin-bottom: 15px;font-weight: bold;font-size: 18px;max-width: 100%;color: black;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;height: 16px;line-height: 16px;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">并行 Worker 的优点</span></h4><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">并行 Worker 模型的一个非常明显的特点就是很容易理解，为了提高系统的并行度你可以增加多个 Worker 完成任务。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">并行 Worker 模型的另外一个好处就是，它会将一个任务拆分成多个小任务，并发执行，Delegator 在接受到 Worker 的处理结果后就会返回给 Client，整个 Worker -&gt; Delegator -&gt; Client 的过程是</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">异步</span></code><span style=\"font-size: 15px;\">的。</span></p><h4 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px;margin-bottom: 15px;font-weight: bold;font-size: 18px;max-width: 100%;color: black;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;height: 16px;line-height: 16px;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">并行 Worker 的缺点</span></h4><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">同样的，并行 Worker 模式同样会有一些隐藏的缺点</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\"><strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「共享状态会变得很复杂」</strong></span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">实际的并行 Worker 要比我们图中画出的更复杂，主要是并行 Worker 通常会访问内存或共享数据库中的某些共享数据。</span></p><p style=\"max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><img class=\"rich_pages\" data-ratio=\"0.39076154806491886\" data-s=\"300,640\" data-type=\"png\" data-w=\"1602\" style=\"box-sizing: border-box !important; overflow-wrap: break-word !important; width: 677px !important; visibility: visible !important; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63rkxMDIu6kRDWzaY9JxdOzHED7z8ibkvBxWiaCAlJHkZx5ibY3FRmM55yeg/640?wx_fmt=png\"></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">这些共享状态可能会使用一些工作队列来保存业务数据、数据缓存、数据库的连接池等。在线程通信中，线程需要确保共享状态是否能够让其他线程共享，而不是仅仅停留在 CPU 缓存中让自己可用，当然这些都是程序员在设计时就需要考虑的问题。线程需要避免 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">竞态条件</span></code><span style=\"font-size: 15px;\">，</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">死锁</span></code><span style=\"font-size: 15px;\"> 和许多其他共享状态造成的并发问题。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">多线程在访问共享数据时，会丢失并发性，因为操作系统要保证只有一个线程能够访问数据，这会导致共享数据的争用和抢占。未抢占到资源的线程会 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">阻塞</span></code><span style=\"font-size: 15px;\">。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">现代的非阻塞并发算法可以减少争用提高性能，但是非阻塞算法比较难以实现。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">可持久化的数据结构(Persistent data structures)</span></code><span style=\"font-size: 15px;\"> 是另外一个选择。可持久化的数据结构在修改后始终会保留先前版本。因此，如果多个线程同时修改一个可持久化的数据结构，并且一个线程对其进行了修改，则修改的线程会获得对新数据结构的引用。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">虽然可持久化的数据结构是一个新的解决方法，但是这种方法实行起来却有一些问题，比如，一个持久列表会将新元素添加到列表的开头，并返回所添加的新元素的引用，但是其他线程仍然只持有列表中先前的第一个元素的引用，他们看不到新添加的元素。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">持久化的数据结构比如 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">链表(LinkedList)</span></code><span style=\"font-size: 15px;\"> 在硬件性能上表现不佳。列表中的每个元素都是一个对象，这些对象散布在计算机内存中。现代 CPU 的顺序访问往往要快的多，因此使用数组等顺序访问的数据结构则能够获得更高的性能。CPU 高速缓存可以将一个大的矩阵块加载到高速缓存中，并让 CPU 在加载后直接访问 CPU 高速缓存中的数据。对于链表，将元素分散在整个 RAM 上，这实际上是不可能的。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\"><strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「无状态的 worker」</strong></span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">共享状态可以由其他线程所修改，因此，worker 必须在每次操作共享状态时重新读取，以确保在副本上能够正确工作。不在线程内部保持状态的 worker 成为无状态的 worker。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\"><strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「作业顺序是不确定的」</strong></span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">并行工作模型的另一个缺点是作业的顺序不确定，无法保证首先执行或最后执行哪些作业。任务 A 在任务 B 之前分配给 worker，但是任务 B 可能在任务 A 之前执行。</span></p><h3 data-tool=\"mdnice编辑器\" style=\"margin-top: 20px;margin-bottom: 20px;font-weight: bold;font-size: 17px;max-width: 100%;color: black;text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"padding-bottom: 2px;max-width: 100%;color: rgb(43, 43, 43);font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">流水线</span></h3><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">第二种并发模型就是我们经常在生产车间遇到的 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">流水线并发模型</span></code><span style=\"font-size: 15px;\">，下面是流水线设计模型的流程图</span></p><p style=\"max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><img class=\"rich_pages\" data-ratio=\"0.13506493506493505\" data-s=\"300,640\" data-type=\"png\" data-w=\"1540\" style=\"box-sizing: border-box !important; overflow-wrap: break-word !important; width: 677px !important; visibility: visible !important; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63r2BYIOAm2YSVic6kOko0DoJVTavaLQg2KHYiahsXjuL8vf5shPeoSUa6A/640?wx_fmt=png\"></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">这种组织架构就像是工厂中装配线中的 worker，每个 worker 只完成全部工作的一部分，完成一部分后，worker 会将工作转发给下一个 worker。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">每道程序都在自己的线程中运行，彼此之间不会共享状态，这种模型也被称为无共享并发模型。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">使用流水线并发模型通常被设计为</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">非阻塞I/O</span></code><span style=\"font-size: 15px;\">，也就是说，当没有给 worker 分配任务时，worker 会做其他工作。非阻塞I/O 意味着当 worker 开始 I/O 操作，例如从网络中读取文件，worker 不会等待 I/O 调用完成。因为 I/O 操作很慢，所以等待 I/O 非常耗费时间。在等待 I/O 的同时，CPU 可以做其他事情，I/O 操作完成后的结果将传递给下一个 worker。下面是非阻塞 I/O 的流程图</span></p><p style=\"max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><img class=\"rich_pages\" data-ratio=\"0.274251497005988\" data-s=\"300,640\" data-type=\"png\" data-w=\"1670\" style=\"box-sizing: border-box !important; overflow-wrap: break-word !important; width: 677px !important; visibility: visible !important; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63re1dticzx3qqzIlnPdD4a1ibtZqpcdW01VFGkV7UOvQfI1MvkIbFkKkIA/640?wx_fmt=png\"></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">在实际情况中，任务通常不会按着一条装配线流动，由于大多数程序需要做很多事情，因此需要根据完成的不同工作在不同的 worker 之间流动，如下图所示</span></p><p style=\"max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><img class=\"rich_pages\" data-ratio=\"0.3553299492385787\" data-s=\"300,640\" data-type=\"png\" data-w=\"1576\" style=\"box-sizing: border-box !important; overflow-wrap: break-word !important; width: 677px !important; visibility: visible !important; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63rxib6y0aoyxno19Gy9NKcsricuDjoSBQLswQz8rDaCoQ3zciabB9P0WHSg/640?wx_fmt=png\"></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">任务还可能需要多个 worker 共同参与完成</span></p><p style=\"max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><img class=\"rich_pages\" data-ratio=\"0.35861182519280205\" data-s=\"300,640\" data-type=\"png\" data-w=\"1556\" style=\"box-sizing: border-box !important; overflow-wrap: break-word !important; width: 677px !important; visibility: visible !important; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63r0mwyACU9tWXPdSK4g0D4op6gTJYdX7Avue89JTq1WfrRicI3PhQWx4A/640?wx_fmt=png\"></p><h4 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px;margin-bottom: 15px;font-weight: bold;font-size: 18px;max-width: 100%;color: black;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;height: 16px;line-height: 16px;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">响应式 - 事件驱动系统</span></h4><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">使用流水线模型的系统有时也被称为 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">响应式</span></code><span style=\"font-size: 15px;\"> 或者 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">事件驱动系统</span></code><span style=\"font-size: 15px;\">，这种模型会根据外部的事件作出响应，事件可能是某个 HTTP 请求或者某个文件完成加载到内存中。</span></p><h4 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px;margin-bottom: 15px;font-weight: bold;font-size: 18px;max-width: 100%;color: black;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;height: 16px;line-height: 16px;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">Actor 模型</span></h4><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">在 Actor 模型中，每一个 Actor 其实就是一个 Worker， 每一个 Actor 都能够处理任务。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">简单来说，Actor 模型是一个并发模型，它定义了一系列系统组件应该如何动作和交互的通用规则，最著名的使用这套规则的编程语言是 Erlang。一个参与者</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">Actor</span></code><span style=\"font-size: 15px;\">对接收到的消息做出响应，然后可以创建出更多的 Actor 或发送更多的消息，同时准备接收下一条消息。</span></p><p style=\"max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><img class=\"rich_pages\" data-ratio=\"0.3620253164556962\" data-s=\"300,640\" data-type=\"png\" data-w=\"1580\" style=\"box-sizing: border-box !important; overflow-wrap: break-word !important; width: 677px !important; visibility: visible !important; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63rAPe0l3PEHdNcnLWUCHRgKRaHeiceLzPSn43pZLW9jFDjPYfaPp2ZnCQ/640?wx_fmt=png\"></p><h4 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px;margin-bottom: 15px;font-weight: bold;font-size: 18px;max-width: 100%;color: black;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;height: 16px;line-height: 16px;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">Channels 模型</span></h4><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">在 Channel 模型中，worker 通常不会直接通信，与此相对的，他们通常将事件发送到不同的 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">通道(Channel)</span></code><span style=\"font-size: 15px;\">上，然后其他 worker 可以在这些通道上获取消息，下面是 Channel 的模型图</span></p><p style=\"max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><img class=\"rich_pages\" data-ratio=\"0.2846153846153846\" data-s=\"300,640\" data-type=\"png\" data-w=\"1560\" style=\"box-sizing: border-box !important; overflow-wrap: break-word !important; width: 677px !important; visibility: visible !important; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63ruogUQpLB3XRtneUBdtzMR5jMLS7Ob4J6Qt8HXO6kiaPdzeeGg1xHCAw/640?wx_fmt=png\"></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">有的时候 worker 不需要明确知道接下来的 worker 是谁，他们只需要将作者写入通道中，监听 Channel 的 worker 可以订阅或者取消订阅，这种方式降低了 worker 和 worker 之间的耦合性。</span></p><h4 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px;margin-bottom: 15px;font-weight: bold;font-size: 18px;max-width: 100%;color: black;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;height: 16px;line-height: 16px;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">流水线设计的优点</span></h4><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">与并行设计模型相比，流水线模型具有一些优势，具体优势如下</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\"><strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「不会存在共享状态」</strong></span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">因为流水线设计能够保证 worker 在处理完成后再传递给下一个 worker，所以 worker 与 worker 之间不需要共享任何状态，也就无需考虑并发问题。你甚至可以在实现上把每个 worker 看成是单线程的一种。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\"><strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「有状态 worker」</strong></span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">因为 worker 知道没有其他线程修改自身的数据，所以流水线设计中的 worker 是有状态的，有状态的意思是他们可以将需要操作的数据保留在内存中，有状态通常比无状态更快。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\"><strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「更好的硬件整合」</strong></span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">因为你可以把流水线看成是单线程的，而单线程的工作优势在于它能够和硬件的工作方式相同。因为有状态的 worker 通常在 CPU 中缓存数据，这样可以更快地访问缓存的数据。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\"><strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「使任务更加有效的进行」</strong></span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">可以对流水线并发模型中的任务进行排序，一般用来日志的写入和恢复。</span></p><h4 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px;margin-bottom: 15px;font-weight: bold;font-size: 18px;max-width: 100%;color: black;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;height: 16px;line-height: 16px;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">流水线设计的缺点</span></h4><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">流水线并发模型的缺点是任务会涉及多个 worker，因此可能会分散在项目代码的多个类中。因此很难确定每个 worker 都在执行哪个任务。流水线的代码编写也比较困难，设计许多嵌套回调处理程序的代码通常被称为 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">回调地狱</span></code><span style=\"font-size: 15px;\">。回调地狱很难追踪 debug。</span></p><section data-mpa-template=\"t\" mpa-from-tpl=\"t\"><section data-mpa-template=\"t\" mpa-from-tpl=\"t\" style=\"max-width: 100%;text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br></section><section data-mpa-template=\"t\" mpa-from-tpl=\"t\"><section data-id=\"6001\" data-type=\"lspecial06\" data-md5=\"41e97\" mpa-from-tpl=\"t\"><section data-md5=\"41e97\" mpa-from-tpl=\"t\"><section data-md5=\"41e97\" mpa-from-tpl=\"t\"><section data-md5=\"41e97\" mpa-from-tpl=\"t\"><section data-md5=\"41e97\" mpa-from-tpl=\"t\"><p data-md5=\"41e97\"><span style=\"font-size: 15px;color: rgb(123, 12, 0);\"><strong>8 函数性并行</strong></span></p></section></section></section></section></section></section></section><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">函数性并行模型是最近才提出的一种并发模型，它的基本思路是使用函数调用来实现。消息的传递就相当于是函数的调用。传递给函数的参数都会被拷贝，因此在函数之外的任何实体都无法操纵函数内的数据。这使得函数执行类似于</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">原子</span></code><span style=\"font-size: 15px;\">操作。每个函数调用都可以独立于任何其他函数调用执行。<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">当每个函数调用独立执行时，每个函数都可以在单独的 CPU 上执行。这也就是说，函数式并行并行相当于是各个 CPU 单独执行各自的任务。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">JDK 1.7 中的 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">ForkAndJoinPool</span></code><span style=\"font-size: 15px;\"> 类就实现了函数性并行的功能。Java 8 提出了 stream 的概念，使用并行流也能够实现大量集合的迭代。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">函数性并行的难点是要知道函数的调用流程以及哪些 CPU 执行了哪些函数，跨 CPU 函数调用会带来额外的开销。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">我们之前说过，线程就是进程中的一条</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">顺序流</span></code><span style=\"font-size: 15px;\">，在 Java 中，每一条 Java 线程就像是 JVM 的一条顺序流，就像是虚拟 CPU 一样来执行代码。Java 中的 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">main()</span></code><span style=\"font-size: 15px;\"> 方法是一条特殊的线程，JVM 创建的 main 线程是一条</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">主执行线程</span></code><span style=\"font-size: 15px;\">，在 Java 中，方法都是由 main 方法发起的。在 main 方法中，你照样可以创建其他的</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">线程</span></code><span style=\"font-size: 15px;\">(执行顺序流)，这些线程可以和 main 方法共同执行应用代码。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">Java 线程也是一种对象，它和其他对象一样。Java 中的 Thread 表示线程，Thread 是 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">java.lang.Thread</span></code><span style=\"font-size: 15px;\"> 类或其子类的实例。那么下面我们就来一起探讨一下在 Java 中如何创建和启动线程。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong><span style=\"color: rgb(123, 12, 0);font-size: 15px;\">9 创建并启动线程</span></strong><span style=\"color: rgb(51, 51, 51);\"> </span></p><section data-mpa-template=\"t\" mpa-from-tpl=\"t\"><section data-mpa-template=\"t\" mpa-from-tpl=\"t\"><p style=\"max-width: 100%;min-height: 1em;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;font-size: 15px;\">在 Java 中，创建线程的方式主要有三种</span></p></section></section><ul data-tool=\"mdnice编辑器\" class=\"list-paddingleft-2\" style=\"margin-top: 8px;margin-bottom: 8px;padding-left: 25px;max-width: 100%;font-size: 15px;color: rgb(89, 89, 89);list-style-type: circle;overflow-wrap: break-word !important;\"><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">通过继承 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">Thread</span></code><span style=\"font-size: 15px;\"> 类来创建线程</span></section></li><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">通过实现 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">Runnable</span></code><span style=\"font-size: 15px;\"> 接口来创建线程</span></section></li><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">通过 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">Callable</span></code><span style=\"font-size: 15px;\"> 和 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">Future</span></code><span style=\"font-size: 15px;\"> 来创建线程</span></section></li></ul><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">下面我们分别探讨一下这几种创建方式</span></p><h3 data-tool=\"mdnice编辑器\" style=\"margin-top: 20px;margin-bottom: 20px;font-weight: bold;font-size: 17px;max-width: 100%;color: black;text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"padding-bottom: 2px;max-width: 100%;color: rgb(43, 43, 43);font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">继承 Thread 类来创建线程</span></h3><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">第一种方式是继承 Thread 类来创建线程，如下示例</span></p><pre data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;max-width: 100%;border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><code style=\"padding: 15px 16px 16px;max-width: 100%;overflow-x: auto;color: rgb(221, 221, 221);display: -webkit-box;font-family: \" operator mono consolas monaco menlo monospace rgb border-box break-word><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">public</span> <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">class</span> <span style=\"max-width: 100%;font-weight: bold;color: white;line-height: 26px;\">TJavaThread</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">extends</span> <span style=\"max-width: 100%;font-weight: bold;color: white;line-height: 26px;\">Thread</span></span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">static</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">int</span> count;<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;color: rgb(117, 113, 94);line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">@Override</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">public</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">synchronized</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">void</span> <span style=\"max-width: 100%;color: rgb(166, 226, 46);font-weight: bold;line-height: 26px;\">run</span><span style=\"max-width: 100%;line-height: 26px;\">()</span> </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">for</span>(<span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">int</span> i = <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">0</span>;i 10000;i++){<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">            count++;<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">public</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">static</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">void</span> <span style=\"max-width: 100%;color: rgb(166, 226, 46);font-weight: bold;line-height: 26px;\">main</span><span style=\"max-width: 100%;line-height: 26px;\">(String[] args)</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">throws</span> InterruptedException </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        TJavaThread tJavaThread = <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">new</span> TJavaThread();<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        tJavaThread.start();<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        tJavaThread.join();<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        System.out.println(<span style=\"max-width: 100%;color: rgb(166, 226, 46);line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">\"count = \"</span> + count);<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">}<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></code></pre><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">线程的主要创建步骤如下</span></p><ul data-tool=\"mdnice编辑器\" class=\"list-paddingleft-2\" style=\"margin-top: 8px;margin-bottom: 8px;padding-left: 25px;max-width: 100%;font-size: 15px;color: rgb(89, 89, 89);list-style-type: circle;overflow-wrap: break-word !important;\"><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">定义一个线程类使其继承 Thread 类，并重写其中的 run 方法，run 方法内部就是线程要完成的任务，因此 run 方法也被称为 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">执行体</span></code></section></li><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">创建了 Thread 的子类，上面代码中的子类是 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">TJavaThread</span></code></section></li><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">启动方法需要注意，并不是直接调用 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">run</span></code><span style=\"font-size: 15px;\"> 方法来启动线程，而是使用 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">start</span></code><span style=\"font-size: 15px;\">方法来启动线程。当然 run 方法可以调用，这样的话就会变成普通方法调用，而不是新创建一个线程来调用了。</span></section></li></ul><pre data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;max-width: 100%;border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><code style=\"padding: 15px 16px 16px;max-width: 100%;overflow-x: auto;color: rgb(221, 221, 221);display: -webkit-box;font-family: \" operator mono consolas monaco menlo monospace rgb border-box break-word><span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">public</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">static</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">void</span> <span style=\"max-width: 100%;color: rgb(166, 226, 46);font-weight: bold;line-height: 26px;\">main</span><span style=\"max-width: 100%;line-height: 26px;\">(String[] args)</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">throws</span> InterruptedException </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">  TJavaThread tJavaThread = <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">new</span> TJavaThread();<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">  tJavaThread.run();<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">  System.out.println(<span style=\"max-width: 100%;color: rgb(166, 226, 46);line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">\"count = \"</span> + count);<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">}<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></code></pre><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">这样的话，整个 main 方法只有一条执行线程也就是 main 线程，由两条执行线程变为一条执行线程</span></p><p style=\"max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><img class=\"rich_pages\" data-ratio=\"0.3825\" data-s=\"300,640\" data-type=\"png\" data-w=\"1600\" style=\"box-sizing: border-box !important; overflow-wrap: break-word !important; width: 677px !important; visibility: visible !important; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63rpVpFuyqd9HsaYFgWSVq5d6kCDGRp0ECS7W8g7PcBKD1oBw5JxibLR3g/640?wx_fmt=png\"></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">Thread 构造器只需要一个 Runnable 对象，调用 Thread 对象的 start() 方法为该线程执行必须的初始化操作，然后调用 Runnable 的 run 方法，以便在这个线程中启动任务。我们上面使用了线程的 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">join</span></code><span style=\"font-size: 15px;\"> 方法，它用来等待线程的执行结束，如果我们不加 join 方法，它就不会等待 tJavaThread 的执行完毕，输出的结果可能就不是 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">10000</span></code></p><p style=\"max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><img class=\"rich_pages\" data-ratio=\"0.3762254901960784\" data-s=\"300,640\" data-type=\"png\" data-w=\"1632\" style=\"box-sizing: border-box !important; overflow-wrap: break-word !important; width: 677px !important; visibility: visible !important; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63rZKaMLD7aZjDUKAbF1RqKl7zqGA5LIWLKBmwzvT6ic0hwicicUlicaHRwtQ/640?wx_fmt=png\"></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">可以看到，在 run  方法还没有结束前，run 就被返回了。也就是说，程序不会等到 run 方法执行完毕就会执行下面的指令。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">使用继承方式创建线程的优势：编写比较简单；可以使用 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">this</span></code><span style=\"font-size: 15px;\"> 关键字直接指向当前线程，而无需使用 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">Thread.currentThread()</span></code><span style=\"font-size: 15px;\"> 来获取当前线程。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">使用继承方式创建线程的劣势：在 Java 中，只允许单继承（拒绝肛精说使用内部类可以实现多继承）的原则，所以使用继承的方式，子类就不能再继承其他类。</span></p><h3 data-tool=\"mdnice编辑器\" style=\"margin-top: 20px;margin-bottom: 20px;font-weight: bold;font-size: 17px;max-width: 100%;color: black;text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"padding-bottom: 2px;max-width: 100%;color: rgb(43, 43, 43);font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">使用 Runnable 接口来创建线程</span></h3><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">相对的，还可以使用 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">Runnable</span></code><span style=\"font-size: 15px;\"> 接口来创建线程，如下示例</span></p><pre data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;max-width: 100%;border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><code style=\"padding: 15px 16px 16px;max-width: 100%;overflow-x: auto;color: rgb(221, 221, 221);display: -webkit-box;font-family: \" operator mono consolas monaco menlo monospace rgb border-box break-word><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">public</span> <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">class</span> <span style=\"max-width: 100%;font-weight: bold;color: white;line-height: 26px;\">TJavaThreadUseImplements</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">implements</span> <span style=\"max-width: 100%;font-weight: bold;color: white;line-height: 26px;\">Runnable</span></span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">static</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">int</span> count;<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;color: rgb(117, 113, 94);line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">@Override</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">public</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">synchronized</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">void</span> <span style=\"max-width: 100%;color: rgb(166, 226, 46);font-weight: bold;line-height: 26px;\">run</span><span style=\"max-width: 100%;line-height: 26px;\">()</span> </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">for</span>(<span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">int</span> i = <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">0</span>;i 10000;i++){<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">            count++;<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">public</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">static</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">void</span> <span style=\"max-width: 100%;color: rgb(166, 226, 46);font-weight: bold;line-height: 26px;\">main</span><span style=\"max-width: 100%;line-height: 26px;\">(String[] args)</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">throws</span> InterruptedException </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">new</span> Thread(<span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">new</span> TJavaThreadUseImplements()).start();<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        System.out.println(<span style=\"max-width: 100%;color: rgb(166, 226, 46);line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">\"count = \"</span> + count);<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">}<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></code></pre><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">线程的主要创建步骤如下</span></p><ul data-tool=\"mdnice编辑器\" class=\"list-paddingleft-2\" style=\"margin-top: 8px;margin-bottom: 8px;padding-left: 25px;max-width: 100%;font-size: 15px;color: rgb(89, 89, 89);list-style-type: circle;overflow-wrap: break-word !important;\"><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;font-size: 15px;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">首先定义 Runnable 接口，并重写 Runnable 接口的 run 方法，run 方法的方法体同样是该线程的线程执行体。</span></section></li><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;font-size: 15px;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">创建线程实例，可以使用上面代码这种简单的方式创建，也可以通过 new 出线程的实例来创建，如下所示</span></section></li></ul><pre data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;max-width: 100%;border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><code style=\"padding: 15px 16px 16px;max-width: 100%;overflow-x: auto;color: rgb(221, 221, 221);display: -webkit-box;font-family: \" operator mono consolas monaco menlo monospace rgb border-box break-word>TJavaThreadUseImplements tJavaThreadUseImplements = <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">new</span> TJavaThreadUseImplements();<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">new</span> Thread(tJavaThreadUseImplements).start();<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></code></pre><ul data-tool=\"mdnice编辑器\" class=\"list-paddingleft-2\" style=\"margin-top: 8px;margin-bottom: 8px;padding-left: 25px;max-width: 100%;font-size: 15px;color: rgb(89, 89, 89);list-style-type: circle;overflow-wrap: break-word !important;\"><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;font-size: 15px;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">再调用线程对象的 start 方法来启动该线程。</span></section></li></ul><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">线程在使用实现 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">Runnable</span></code><span style=\"font-size: 15px;\"> 的同时也能实现其他接口，非常适合多个相同线程来处理同一份资源的情况，体现了面向对象的思想。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">使用 Runnable 实现的劣势是编程稍微繁琐，如果要访问当前线程，则必须使用 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">Thread.currentThread()</span></code><span style=\"font-size: 15px;\"> 方法。</span></p><h3 data-tool=\"mdnice编辑器\" style=\"margin-top: 20px;margin-bottom: 20px;font-weight: bold;font-size: 17px;max-width: 100%;color: black;text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"padding-bottom: 2px;max-width: 100%;color: rgb(43, 43, 43);font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">使用 Callable 接口来创建线程</span></h3><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">Runnable 接口执行的是独立的任务，Runnable 接口不会产生任何返回值，如果你希望在任务完成后能够返回一个值的话，那么你可以实现 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">Callable</span></code><span style=\"font-size: 15px;\"> 接口而不是 Runnable 接口。Java SE5 引入了 Callable 接口，它的示例如下</span></p><pre data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;max-width: 100%;border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><code style=\"padding: 15px 16px 16px;max-width: 100%;overflow-x: auto;color: rgb(221, 221, 221);display: -webkit-box;font-family: \" operator mono consolas monaco menlo monospace rgb border-box break-word><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">public</span> <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">class</span> <span style=\"max-width: 100%;font-weight: bold;color: white;line-height: 26px;\">CallableTask</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">implements</span> <span style=\"max-width: 100%;font-weight: bold;color: white;line-height: 26px;\">Callable</span> </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">static</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">int</span> count;<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">public</span> <span style=\"max-width: 100%;color: rgb(166, 226, 46);font-weight: bold;line-height: 26px;\">CallableTask</span><span style=\"max-width: 100%;line-height: 26px;\">(<span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">int</span> count)</span></span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">this</span>.count = count;<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;color: rgb(117, 113, 94);line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">@Override</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">public</span> Object <span style=\"max-width: 100%;color: rgb(166, 226, 46);font-weight: bold;line-height: 26px;\">call</span><span style=\"max-width: 100%;line-height: 26px;\">()</span> </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">return</span> count;<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">public</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">static</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">void</span> <span style=\"max-width: 100%;color: rgb(166, 226, 46);font-weight: bold;line-height: 26px;\">main</span><span style=\"max-width: 100%;line-height: 26px;\">(String[] args)</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">throws</span> ExecutionException, InterruptedException </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        FutureTask<integer> task = <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">new</span> FutureTask((Callable<integer>) () -&gt; {<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">            <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">for</span>(<span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">int</span> i = <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">0</span>;i 1000;i++){<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">                count++;<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">            }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">            <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">return</span> count;<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        });<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        Thread thread = <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">new</span> Thread(task);<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        thread.start();<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        Integer total = task.get();<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        System.out.println(<span style=\"max-width: 100%;color: rgb(166, 226, 46);line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">\"total = \"</span> + total);<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">}<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></integer></integer></code></pre><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">我想，使用 Callable 接口的好处你已经知道了吧，既能够实现多个接口，也能够得到执行结果的返回值。Callable 和 Runnable 接口还是有一些区别的，主要区别如下</span></p><ul data-tool=\"mdnice编辑器\" class=\"list-paddingleft-2\" style=\"margin-top: 8px;margin-bottom: 8px;padding-left: 25px;max-width: 100%;font-size: 15px;color: rgb(89, 89, 89);list-style-type: circle;overflow-wrap: break-word !important;\"><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;font-size: 15px;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">Callable 执行的任务有返回值，而 Runnable 执行的任务没有返回值</span></section></li><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;font-size: 15px;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">Callable（重写）的方法是 call 方法，而 Runnable（重写）的方法是 run 方法。</span></section></li><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;font-size: 15px;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">call 方法可以抛出异常，而 Runnable 方法不能抛出异常</span></section></li></ul><h3 data-tool=\"mdnice编辑器\" style=\"margin-top: 20px;margin-bottom: 20px;font-weight: bold;font-size: 17px;max-width: 100%;color: black;text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"padding-bottom: 2px;max-width: 100%;color: rgb(43, 43, 43);font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">使用线程池来创建线程</span></h3><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">首先先来认识一下顶级接口 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">Executor</span></code><span style=\"font-size: 15px;\">，Executor 虽然不是传统线程创建的方式之一，但是它却成为了创建线程的替代者，使用线程池的好处如下</span></p><ul data-tool=\"mdnice编辑器\" class=\"list-paddingleft-2\" style=\"margin-top: 8px;margin-bottom: 8px;padding-left: 25px;max-width: 100%;font-size: 15px;color: rgb(89, 89, 89);list-style-type: circle;overflow-wrap: break-word !important;\"><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;font-size: 15px;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">利用线程池能够复用线程、控制最大并发数。</span></section></li><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">实现任务线程队列</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">缓存策略</span></code><span style=\"font-size: 15px;\">和</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">拒绝机制</span></code><span style=\"font-size: 15px;\">。</span></section></li><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;font-size: 15px;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">实现某些与时间相关的功能，如定时执行、周期执行等。</span></section></li><li style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;font-size: 15px;\"><section style=\"margin-top: 5px;margin-bottom: 5px;max-width: 100%;line-height: 26px;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">隔离线程环境。比如，交易服务和搜索服务在同一台服务器上，分别开启两个线程池，交易线程的资源消耗明显要大；因此，通过配置独立的线程池，将较慢的交易服务与搜索服务隔开，避免服务线程互相影响。</span></section></li></ul><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">你可以使用如下操作来替换线程创建</span></p><pre data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;max-width: 100%;border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><code style=\"padding: 15px 16px 16px;max-width: 100%;overflow-x: auto;color: rgb(221, 221, 221);display: -webkit-box;font-family: \" operator mono consolas monaco menlo monospace rgb border-box break-word><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">new</span> Thread(<span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">new</span>(RunnableTask())).start()<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(117, 113, 94);line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">// 替换为</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">  <br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">Executor executor = <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">new</span> ExecutorSubClass() <span style=\"max-width: 100%;color: rgb(117, 113, 94);line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">// 线程池实现类;</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">executor.execute(<span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">new</span> RunnableTask1());<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">executor.execute(<span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">new</span> RunnableTask2());<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></code></pre><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">ExecutorService</span></code><span style=\"font-size: 15px;\"> 是 Executor 的默认实现，也是 Executor 的扩展接口，ThreadPoolExecutor 类提供了线程池的扩展实现。</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">Executors</span></code><span style=\"font-size: 15px;\"> 类为这些 Executor 提供了方便的工厂方法。下面是使用 ExecutorService 创建线程的几种方式</span></p><h4 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px;margin-bottom: 15px;font-weight: bold;font-size: 18px;max-width: 100%;color: black;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;height: 16px;line-height: 16px;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">CachedThreadPool</span></h4><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">从而简化了并发编程。Executor 在客户端和任务之间提供了一个间接层；与客户端直接执行任务不同，这个中介对象将执行任务。Executor 允许你管理</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">异步</span></code><span style=\"font-size: 15px;\">任务的执行，而无须显示地管理线程的生命周期。</span></p><pre data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;max-width: 100%;border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><code style=\"padding: 15px 16px 16px;max-width: 100%;overflow-x: auto;color: rgb(221, 221, 221);display: -webkit-box;font-family: \" operator mono consolas monaco menlo monospace rgb border-box break-word><span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">public</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">static</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">void</span> <span style=\"max-width: 100%;color: rgb(166, 226, 46);font-weight: bold;line-height: 26px;\">main</span><span style=\"max-width: 100%;line-height: 26px;\">(String[] args)</span> </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">  ExecutorService service = Executors.newCachedThreadPool();<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">  <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">for</span>(<span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">int</span> i = <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">0</span>;i 5;i++){<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    service.execute(<span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">new</span> TestThread());<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">  }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">  service.shutdown();<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">}<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></code></pre><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">CachedThreadPool</span></code><span style=\"font-size: 15px;\"> 会为每个任务都创建一个线程。</span></p><blockquote data-tool=\"mdnice编辑器\" style=\"margin-top: 20px;margin-bottom: 20px;padding: 10px 10px 10px 20px;border-width: 1px;border-top-style: solid;border-right-style: solid;border-bottom-style: solid;border-color: rgb(27, 144, 13);color: rgb(89, 89, 89);font-size: 0.9em;max-width: 100%;box-sizing: inherit;overflow: auto;text-size-adjust: 100%;line-height: 1.55em;border-radius: 6px;background-image: initial;background-position: initial;background-size: initial;background-repeat: initial;background-attachment: initial;background-origin: initial;background-clip: initial;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(116, 181, 109);line-height: 1;font-weight: 700;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">❝</span><p style=\"padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;letter-spacing: 2px;font-size: 16px;word-spacing: 2px;color: black;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">注意：ExecutorService 对象是使用静态的 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">Executors</span></code><span style=\"font-size: 15px;\"> 创建的，这个方法可以确定 Executor 类型。对 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">shutDown</span></code><span style=\"font-size: 15px;\"> 的调用可以防止新任务提交给 ExecutorService ，这个线程在 Executor 中所有任务完成后退出。</span></p><span style=\"max-width: 100%;float: right;color: rgb(116, 181, 109);font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">❞</span></blockquote><h4 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px;margin-bottom: 15px;font-weight: bold;font-size: 18px;max-width: 100%;color: black;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;height: 16px;line-height: 16px;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">FixedThreadPool</span></h4><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">FixedThreadPool 使你可以使用</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">有限</span></code><span style=\"font-size: 15px;\">的线程集来启动多线程</span></p><pre data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;max-width: 100%;border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><code style=\"padding: 15px 16px 16px;max-width: 100%;overflow-x: auto;color: rgb(221, 221, 221);display: -webkit-box;font-family: \" operator mono consolas monaco menlo monospace rgb border-box break-word><span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">public</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">static</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">void</span> <span style=\"max-width: 100%;color: rgb(166, 226, 46);font-weight: bold;line-height: 26px;\">main</span><span style=\"max-width: 100%;line-height: 26px;\">(String[] args)</span> </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">  ExecutorService service = Executors.newFixedThreadPool(<span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">5</span>);<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">  <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">for</span>(<span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">int</span> i = <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">0</span>;i 5;i++){<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    service.execute(<span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">new</span> TestThread());<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">  }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">  service.shutdown();<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">}<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></code></pre><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">有了 FixedThreadPool 使你可以一次性的预先执行高昂的线程分配，因此也就可以限制线程的数量。这可以节省时间，因为你不必为每个任务都固定的付出创建线程的开销。</span></p><h4 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px;margin-bottom: 15px;font-weight: bold;font-size: 18px;max-width: 100%;color: black;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;height: 16px;line-height: 16px;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">SingleThreadExecutor</span></h4><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">SingleThreadExecutor 就是</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">线程数量为 1</span></code><span style=\"font-size: 15px;\">的 FixedThreadPool，如果向 SingleThreadPool 一次性提交了多个任务，那么这些任务将会排队，每个任务都会在下一个任务开始前结束，所有的任务都将使用相同的线程。SingleThreadPool 会序列化所有提交给他的任务，并会维护它自己(隐藏)的悬挂队列。</span></p><pre data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;max-width: 100%;border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><code style=\"padding: 15px 16px 16px;max-width: 100%;overflow-x: auto;color: rgb(221, 221, 221);display: -webkit-box;font-family: \" operator mono consolas monaco menlo monospace rgb border-box break-word><span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">public</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">static</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">void</span> <span style=\"max-width: 100%;color: rgb(166, 226, 46);font-weight: bold;line-height: 26px;\">main</span><span style=\"max-width: 100%;line-height: 26px;\">(String[] args)</span> </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">  ExecutorService service = Executors.newSingleThreadExecutor();<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">  <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">for</span>(<span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">int</span> i = <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">0</span>;i 5;i++){<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    service.execute(<span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">new</span> TestThread());<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">  }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">  service.shutdown();<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">}<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></code></pre><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">从输出的结果就可以看到，任务都是挨着执行的。我为任务分配了五个线程，但是这五个线程不像是我们之前看到的有换进换出的效果，它每次都会先执行完自己的那个线程，然后余下的线程继续</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">走完</span></code><span style=\"font-size: 15px;\">这条线程的执行路径。你可以用 SingleThreadExecutor 来确保任意时刻都只有唯一一个任务在运行。</span></p><h3 data-tool=\"mdnice编辑器\" style=\"margin-top: 20px;margin-bottom: 20px;font-weight: bold;font-size: 17px;max-width: 100%;color: black;text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"padding-bottom: 2px;max-width: 100%;color: rgb(43, 43, 43);font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">休眠</span></h3><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">影响任务行为的一种简单方式就是使线程 休眠，选定给定的休眠时间，调用它的 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">sleep()</span></code><span style=\"font-size: 15px;\"> 方法， 一般使用的</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">TimeUnit</span></code><span style=\"font-size: 15px;\"> 这个时间类替换 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">Thread.sleep()</span></code><span style=\"font-size: 15px;\"> 方法，示例如下：</span></p><pre data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;max-width: 100%;border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><code style=\"padding: 15px 16px 16px;max-width: 100%;overflow-x: auto;color: rgb(221, 221, 221);display: -webkit-box;font-family: \" operator mono consolas monaco menlo monospace rgb border-box break-word><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">public</span> <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">class</span> <span style=\"max-width: 100%;font-weight: bold;color: white;line-height: 26px;\">SuperclassThread</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">extends</span> <span style=\"max-width: 100%;font-weight: bold;color: white;line-height: 26px;\">TestThread</span></span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;color: rgb(117, 113, 94);line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">@Override</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">public</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">void</span> <span style=\"max-width: 100%;color: rgb(166, 226, 46);font-weight: bold;line-height: 26px;\">run</span><span style=\"max-width: 100%;line-height: 26px;\">()</span> </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        System.out.println(Thread.currentThread() + <span style=\"max-width: 100%;color: rgb(166, 226, 46);line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">\"starting ...\"</span> );<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">try</span> {<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">            <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">for</span>(<span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">int</span> i = <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">0</span>;i 5;i++){<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">                <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">if</span>(i == <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">3</span>){<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">                    System.out.println(Thread.currentThread() + <span style=\"max-width: 100%;color: rgb(166, 226, 46);line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">\"sleeping ...\"</span>);<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">                    TimeUnit.MILLISECONDS.sleep(<span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">1000</span>);<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">                }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">            }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        } <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">catch</span> (InterruptedException e) {<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">            e.printStackTrace();<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        System.out.println(Thread.currentThread() + <span style=\"max-width: 100%;color: rgb(166, 226, 46);line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">\"wakeup and end ...\"</span>);<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">public</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">static</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">void</span> <span style=\"max-width: 100%;color: rgb(166, 226, 46);font-weight: bold;line-height: 26px;\">main</span><span style=\"max-width: 100%;line-height: 26px;\">(String[] args)</span> </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        ExecutorService executors = Executors.newCachedThreadPool();<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">for</span>(<span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">int</span> i = <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">0</span>;i 5;i++){<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">            executors.execute(<span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">new</span> SuperclassThread());<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        executors.shutdown();<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">}<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></code></pre><blockquote data-tool=\"mdnice编辑器\" style=\"margin-top: 20px;margin-bottom: 20px;padding: 10px 10px 10px 20px;border-width: 1px;border-top-style: solid;border-right-style: solid;border-bottom-style: solid;border-color: rgb(27, 144, 13);color: rgb(89, 89, 89);font-size: 0.9em;max-width: 100%;box-sizing: inherit;overflow: auto;text-size-adjust: 100%;line-height: 1.55em;border-radius: 6px;background-image: initial;background-position: initial;background-size: initial;background-repeat: initial;background-attachment: initial;background-origin: initial;background-clip: initial;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(116, 181, 109);font-size: 34px;line-height: 1;font-weight: 700;box-sizing: border-box !important;overflow-wrap: break-word !important;\">❝</span><p style=\"padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;letter-spacing: 2px;font-size: 16px;word-spacing: 2px;color: black;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">关于 TimeUnit 中的 sleep() 方法和 Thread.sleep() 方法的比较，请参考下面这篇博客</span></p><p style=\"padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;letter-spacing: 2px;font-size: 16px;word-spacing: 2px;color: black;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">(https://www.cnblogs.com/xiadongqing/p/9925567.html)</span></p><span style=\"max-width: 100%;float: right;color: rgb(116, 181, 109);font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">❞</span></blockquote><h3 data-tool=\"mdnice编辑器\" style=\"margin-top: 20px;margin-bottom: 20px;font-weight: bold;font-size: 17px;max-width: 100%;color: black;text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"padding-bottom: 2px;max-width: 100%;color: rgb(43, 43, 43);font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">优先级</span></h3><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">上面提到线程调度器对每个线程的执行都是不可预知的，随机执行的，那么有没有办法告诉线程调度器哪个任务想要优先被执行呢？你可以通过设置线程的优先级状态，告诉线程调度器哪个线程的执行优先级比较高，<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「请给这个骑手马上派单」</strong>，线程调度器倾向于让优先级较高的线程优先执行，然而，这并不意味着优先级低的线程得不到执行，也就是说，优先级不会导致死锁的问题。优先级较低的线程只是执行频率较低。</span></p><pre data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;max-width: 100%;border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><code style=\"padding: 15px 16px 16px;max-width: 100%;overflow-x: auto;color: rgb(221, 221, 221);display: -webkit-box;font-family: \" operator mono consolas monaco menlo monospace rgb border-box break-word><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">public</span> <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">class</span> <span style=\"max-width: 100%;font-weight: bold;color: white;line-height: 26px;\">SimplePriorities</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">implements</span> <span style=\"max-width: 100%;font-weight: bold;color: white;line-height: 26px;\">Runnable</span></span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">private</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">int</span> priority;<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">public</span> <span style=\"max-width: 100%;color: rgb(166, 226, 46);font-weight: bold;line-height: 26px;\">SimplePriorities</span><span style=\"max-width: 100%;line-height: 26px;\">(<span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">int</span> priority)</span> </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">this</span>.priority = priority;<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;color: rgb(117, 113, 94);line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">@Override</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">public</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">void</span> <span style=\"max-width: 100%;color: rgb(166, 226, 46);font-weight: bold;line-height: 26px;\">run</span><span style=\"max-width: 100%;line-height: 26px;\">()</span> </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        Thread.currentThread().setPriority(priority);<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">for</span>(<span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">int</span> i = <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">0</span>;i 100;i++){<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">            System.out.println(<span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">this</span>);<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">            <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">if</span>(i % <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">10</span> == <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">0</span>){<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">                Thread.yield();<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">            }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;color: rgb(117, 113, 94);line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">@Override</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">public</span> String <span style=\"max-width: 100%;color: rgb(166, 226, 46);font-weight: bold;line-height: 26px;\">toString</span><span style=\"max-width: 100%;line-height: 26px;\">()</span> </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">return</span> Thread.currentThread() + <span style=\"max-width: 100%;color: rgb(166, 226, 46);line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">\" \"</span> + priority;<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">public</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">static</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">void</span> <span style=\"max-width: 100%;color: rgb(166, 226, 46);font-weight: bold;line-height: 26px;\">main</span><span style=\"max-width: 100%;line-height: 26px;\">(String[] args)</span> </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        ExecutorService service = Executors.newCachedThreadPool();<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">for</span>(<span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">int</span> i = <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">0</span>;i 5;i++){<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">            service.execute(<span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">new</span> SimplePriorities(Thread.MAX_PRIORITY));<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        service.execute(<span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">new</span> SimplePriorities(Thread.MIN_PRIORITY));<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">}<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></code></pre><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">toString() 方法被覆盖，以便通过使用 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">Thread.toString()</span></code><span style=\"font-size: 15px;\"> 方法来打印线程的名称。你可以改写线程的默认输出，这里采用了 <strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「Thread[pool-1-thread-1,10,main]」</strong> 这种形式的输出。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">通过输出，你可以看到，最后一个线程的优先级最低，其余的线程优先级最高。注意，优先级是在 run 开头设置的，在构造器中设置它们不会有任何好处，因为这个时候线程还没有执行任务。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">尽管 JDK 有 10 个优先级，但是一般只有<strong style=\"max-width: 100%;color: rgb(57, 144, 3);box-sizing: border-box !important;overflow-wrap: break-word !important;\">「MAX_PRIORITY，NORM_PRIORITY，MIN_PRIORITY」</strong> 三种级别。</span></p><h3 data-tool=\"mdnice编辑器\" style=\"margin-top: 20px;margin-bottom: 20px;font-weight: bold;font-size: 17px;max-width: 100%;color: black;text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"padding-bottom: 2px;max-width: 100%;color: rgb(43, 43, 43);font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">作出让步</span></h3><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">我们上面提过，如果知道一个线程已经在 run() 方法中运行的差不多了，那么它就可以给线程调度器一个提示：我已经完成了任务中最重要的部分，可以让给别的线程使用 CPU 了。这个暗示将通过 yield() 方法作出。</span></p><blockquote data-tool=\"mdnice编辑器\" style=\"margin-top: 20px;margin-bottom: 20px;padding: 10px 10px 10px 20px;border-width: 1px;border-top-style: solid;border-right-style: solid;border-bottom-style: solid;border-color: rgb(27, 144, 13);color: rgb(89, 89, 89);font-size: 0.9em;max-width: 100%;box-sizing: inherit;overflow: auto;text-size-adjust: 100%;line-height: 1.55em;border-radius: 6px;background-image: initial;background-position: initial;background-size: initial;background-repeat: initial;background-attachment: initial;background-origin: initial;background-clip: initial;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(116, 181, 109);line-height: 1;font-weight: 700;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">❝</span><p style=\"padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;letter-spacing: 2px;font-size: 16px;word-spacing: 2px;color: black;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">有一个很重要的点就是，Thread.yield() 是建议执行切换CPU，而不是强制执行CPU切换。</span></p><span style=\"max-width: 100%;float: right;color: rgb(116, 181, 109);font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">❞</span></blockquote><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">对于任何重要的控制或者在调用应用时，都不能依赖于 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">yield()</span></code><span style=\"font-size: 15px;\">方法，实际上， yield() 方法经常被滥用。</span></p><h3 data-tool=\"mdnice编辑器\" style=\"margin-top: 20px;margin-bottom: 20px;font-weight: bold;font-size: 17px;max-width: 100%;color: black;text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"padding-bottom: 2px;max-width: 100%;color: rgb(43, 43, 43);font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">后台线程</span></h3><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">后台(daemon)</span></code><span style=\"font-size: 15px;\">线程，是指运行时在后台提供的一种服务线程，这种线程不是属于必须的。当所有非后台线程结束时，程序也就停止了，**同时会终止所有的后台线程。**反过来说，只要有任何非后台线程还在运行，程序就不会终止。</span></p><pre data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;max-width: 100%;border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><code style=\"padding: 15px 16px 16px;max-width: 100%;overflow-x: auto;color: rgb(221, 221, 221);display: -webkit-box;font-family: \" operator mono consolas monaco menlo monospace rgb border-box break-word><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">public</span> <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">class</span> <span style=\"max-width: 100%;font-weight: bold;color: white;line-height: 26px;\">SimpleDaemons</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">implements</span> <span style=\"max-width: 100%;font-weight: bold;color: white;line-height: 26px;\">Runnable</span></span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;color: rgb(117, 113, 94);line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">@Override</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">public</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">void</span> <span style=\"max-width: 100%;color: rgb(166, 226, 46);font-weight: bold;line-height: 26px;\">run</span><span style=\"max-width: 100%;line-height: 26px;\">()</span> </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">while</span> (<span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">true</span>){<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">            <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">try</span> {<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">                TimeUnit.MILLISECONDS.sleep(<span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">100</span>);<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">                System.out.println(Thread.currentThread() + <span style=\"max-width: 100%;color: rgb(166, 226, 46);line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">\" \"</span> + <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">this</span>);<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">            } <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">catch</span> (InterruptedException e) {<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">                System.out.println(<span style=\"max-width: 100%;color: rgb(166, 226, 46);line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">\"sleep() interrupted\"</span>);<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">            }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">public</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">static</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">void</span> <span style=\"max-width: 100%;color: rgb(166, 226, 46);font-weight: bold;line-height: 26px;\">main</span><span style=\"max-width: 100%;line-height: 26px;\">(String[] args)</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">throws</span> InterruptedException </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">for</span>(<span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">int</span> i = <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">0</span>;i 10;i++){<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">            Thread daemon = <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">new</span> Thread(<span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">new</span> SimpleDaemons());<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">            daemon.setDaemon(<span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">true</span>);<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">            daemon.start();<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        System.out.println(<span style=\"max-width: 100%;color: rgb(166, 226, 46);line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">\"All Daemons started\"</span>);<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        TimeUnit.MILLISECONDS.sleep(<span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">175</span>);<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">}<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></code></pre><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">在每次的循环中会创建 10 个线程，并把每个线程设置为后台线程，然后开始运行，for 循环会进行十次，然后输出信息，随后主线程睡眠一段时间后停止运行。在每次 run 循环中，都会打印当前线程的信息，主线程运行完毕，程序就执行完毕了。因为 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">daemon</span></code><span style=\"font-size: 15px;\"> 是后台线程，无法影响主线程的执行。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">但是当你把 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">daemon.setDaemon(true)</span></code><span style=\"font-size: 15px;\"> 去掉时，while(true) 会进行无限循环，那么主线程一直在执行最重要的任务，所以会一直循环下去无法停止。</span></p><h3 data-tool=\"mdnice编辑器\" style=\"margin-top: 20px;margin-bottom: 20px;font-weight: bold;font-size: 17px;max-width: 100%;color: black;text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"padding-bottom: 2px;max-width: 100%;color: rgb(43, 43, 43);font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">ThreadFactory</span></h3><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">按需要创建线程的对象。使用线程工厂替换了 Thread 或者 Runnable 接口的硬连接，使程序能够使用特殊的线程子类，优先级等。一般的创建方式为</span></p><pre data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;max-width: 100%;border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><code style=\"padding: 15px 16px 16px;max-width: 100%;overflow-x: auto;color: rgb(221, 221, 221);display: -webkit-box;font-family: \" operator mono consolas monaco menlo monospace rgb border-box break-word><span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">class</span> <span style=\"max-width: 100%;font-weight: bold;color: white;line-height: 26px;\">SimpleThreadFactory</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">implements</span> <span style=\"max-width: 100%;font-weight: bold;color: white;line-height: 26px;\">ThreadFactory</span> </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">  <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">public</span> Thread <span style=\"max-width: 100%;color: rgb(166, 226, 46);font-weight: bold;line-height: 26px;\">newThread</span><span style=\"max-width: 100%;line-height: 26px;\">(Runnable r)</span> </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">return</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">new</span> Thread(r);<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">  }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">}<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></code></pre><blockquote data-tool=\"mdnice编辑器\" style=\"margin-top: 20px;margin-bottom: 20px;padding: 10px 10px 10px 20px;border-width: 1px;border-top-style: solid;border-right-style: solid;border-bottom-style: solid;border-color: rgb(27, 144, 13);color: rgb(89, 89, 89);font-size: 0.9em;max-width: 100%;box-sizing: inherit;overflow: auto;text-size-adjust: 100%;line-height: 1.55em;border-radius: 6px;background-image: initial;background-position: initial;background-size: initial;background-repeat: initial;background-attachment: initial;background-origin: initial;background-clip: initial;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(116, 181, 109);font-size: 34px;line-height: 1;font-weight: 700;box-sizing: border-box !important;overflow-wrap: break-word !important;\">❝</span><p style=\"padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;letter-spacing: 2px;font-size: 16px;word-spacing: 2px;color: black;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">Executors.defaultThreadFactory 方法提供了一个更有用的简单实现，它在返回之前将创建的线程上下文设置为已知值</span></p><span style=\"max-width: 100%;float: right;color: rgb(116, 181, 109);font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">❞</span></blockquote><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">ThreadFactory</span></code><span style=\"font-size: 15px;\">是一个接口，它只有一个方法就是创建线程的方法</span></p><pre data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;max-width: 100%;border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><code style=\"padding: 15px 16px 16px;max-width: 100%;overflow-x: auto;color: rgb(221, 221, 221);display: -webkit-box;font-family: \" operator mono consolas monaco menlo monospace rgb border-box break-word><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">public</span> <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">interface</span> <span style=\"max-width: 100%;font-weight: bold;color: white;line-height: 26px;\">ThreadFactory</span> </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;color: rgb(117, 113, 94);line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">// 构建一个新的线程。实现类可能初始化优先级，名称，后台线程状态和 线程组等</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">Thread <span style=\"max-width: 100%;color: rgb(166, 226, 46);font-weight: bold;line-height: 26px;\">newThread</span><span style=\"max-width: 100%;line-height: 26px;\">(Runnable r)</span></span>;<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">}<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></code></pre><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">下面来看一个 ThreadFactory 的例子</span></p><pre data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;max-width: 100%;border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><code style=\"padding: 15px 16px 16px;max-width: 100%;overflow-x: auto;color: rgb(221, 221, 221);display: -webkit-box;font-family: \" operator mono consolas monaco menlo monospace rgb border-box break-word><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">public</span> <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">class</span> <span style=\"max-width: 100%;font-weight: bold;color: white;line-height: 26px;\">DaemonThreadFactory</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">implements</span> <span style=\"max-width: 100%;font-weight: bold;color: white;line-height: 26px;\">ThreadFactory</span> </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;color: rgb(117, 113, 94);line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">@Override</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">public</span> Thread <span style=\"max-width: 100%;color: rgb(166, 226, 46);font-weight: bold;line-height: 26px;\">newThread</span><span style=\"max-width: 100%;line-height: 26px;\">(Runnable r)</span> </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        Thread t = <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">new</span> Thread(r);<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        t.setDaemon(<span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">true</span>);<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">return</span> t;<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">}<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">public</span> <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">class</span> <span style=\"max-width: 100%;font-weight: bold;color: white;line-height: 26px;\">DaemonFromFactory</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">implements</span> <span style=\"max-width: 100%;font-weight: bold;color: white;line-height: 26px;\">Runnable</span></span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;color: rgb(117, 113, 94);line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">@Override</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">public</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">void</span> <span style=\"max-width: 100%;color: rgb(166, 226, 46);font-weight: bold;line-height: 26px;\">run</span><span style=\"max-width: 100%;line-height: 26px;\">()</span> </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">while</span> (<span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">true</span>){<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">            <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">try</span> {<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">                TimeUnit.MILLISECONDS.sleep(<span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">100</span>);<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">                System.out.println(Thread.currentThread() + <span style=\"max-width: 100%;color: rgb(166, 226, 46);line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">\" \"</span> + <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">this</span>);<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">            } <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">catch</span> (InterruptedException e) {<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">                System.out.println(<span style=\"max-width: 100%;color: rgb(166, 226, 46);line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">\"Interrupted\"</span>);<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">            }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">public</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">static</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">void</span> <span style=\"max-width: 100%;color: rgb(166, 226, 46);font-weight: bold;line-height: 26px;\">main</span><span style=\"max-width: 100%;line-height: 26px;\">(String[] args)</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">throws</span> InterruptedException </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        ExecutorService service = Executors.newCachedThreadPool(<span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">new</span> DaemonThreadFactory());<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">for</span>(<span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">int</span> i = <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">0</span>;i 10;i++){<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">            service.execute(<span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">new</span> DaemonFromFactory());<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        System.out.println(<span style=\"max-width: 100%;color: rgb(166, 226, 46);line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">\"All daemons started\"</span>);<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        TimeUnit.MILLISECONDS.sleep(<span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">500</span>);<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">}<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></code></pre><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">Executors.newCachedThreadPool</span></code><span style=\"font-size: 15px;\"> 可以接受一个线程池对象，创建一个根据需要创建新线程的线程池，但会在它们可用时重用先前构造的线程，并在需要时使用提供的 ThreadFactory 创建新线程。</span></p><pre data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;max-width: 100%;border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><code style=\"padding: 15px 16px 16px;max-width: 100%;overflow-x: auto;color: rgb(221, 221, 221);display: -webkit-box;font-family: \" operator mono consolas monaco menlo monospace rgb border-box break-word><span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">public</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">static</span> ExecutorService <span style=\"max-width: 100%;color: rgb(166, 226, 46);font-weight: bold;line-height: 26px;\">newCachedThreadPool</span><span style=\"max-width: 100%;line-height: 26px;\">(ThreadFactory threadFactory)</span> </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">  <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">return</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">new</span> ThreadPoolExecutor(<span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">0</span>, Integer.MAX_VALUE,<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">                                <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">60L</span>, TimeUnit.SECONDS,<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">                                <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">new</span> SynchronousQueue<runnable>(),<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">                                threadFactory);<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">}<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></runnable></code></pre><h3 data-tool=\"mdnice编辑器\" style=\"margin-top: 20px;margin-bottom: 20px;font-weight: bold;font-size: 17px;max-width: 100%;color: black;text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"padding-bottom: 2px;max-width: 100%;color: rgb(43, 43, 43);font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">加入一个线程</span></h3><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">一个线程可以在其他线程上调用 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">join()</span></code><span style=\"font-size: 15px;\"> 方法，其效果是等待一段时间直到第二个线程结束才正常执行。如果某个线程在另一个线程 t 上调用 t.join() 方法，此线程将被挂起，直到目标线程 t 结束才回复(可以用 t.isAlive() 返回为真假判断)。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">也可以在调用 join 时带上一个超时参数，来设置到期时间，时间到期，join方法自动返回。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">对 join 的调用也可以被中断，做法是在线程上调用 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">interrupted</span></code><span style=\"font-size: 15px;\"> 方法，这时需要用到 try...catch 子句</span></p><pre data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;max-width: 100%;border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><code style=\"padding: 15px 16px 16px;max-width: 100%;overflow-x: auto;color: rgb(221, 221, 221);display: -webkit-box;font-family: \" operator mono consolas monaco menlo monospace rgb border-box break-word><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">public</span> <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">class</span> <span style=\"max-width: 100%;font-weight: bold;color: white;line-height: 26px;\">TestJoinMethod</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">extends</span> <span style=\"max-width: 100%;font-weight: bold;color: white;line-height: 26px;\">Thread</span></span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;color: rgb(117, 113, 94);line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">@Override</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">public</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">void</span> <span style=\"max-width: 100%;color: rgb(166, 226, 46);font-weight: bold;line-height: 26px;\">run</span><span style=\"max-width: 100%;line-height: 26px;\">()</span> </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">for</span>(<span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">int</span> i = <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">0</span>;i 5;i++){<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">            <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">try</span> {<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">                TimeUnit.MILLISECONDS.sleep(<span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">1000</span>);<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">            } <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">catch</span> (InterruptedException e) {<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">                System.out.println(<span style=\"max-width: 100%;color: rgb(166, 226, 46);line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">\"Interrupted sleep\"</span>);<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">            }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">            System.out.println(Thread.currentThread() + <span style=\"max-width: 100%;color: rgb(166, 226, 46);line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">\" \"</span> + i);<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">public</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">static</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">void</span> <span style=\"max-width: 100%;color: rgb(166, 226, 46);font-weight: bold;line-height: 26px;\">main</span><span style=\"max-width: 100%;line-height: 26px;\">(String[] args)</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">throws</span> InterruptedException </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        TestJoinMethod join1 = <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">new</span> TestJoinMethod();<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        TestJoinMethod join2 = <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">new</span> TestJoinMethod();<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        TestJoinMethod join3 = <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">new</span> TestJoinMethod();<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        join1.start();<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(117, 113, 94);line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">//        join1.join();</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        join2.start();<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        join3.start();<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">}<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></code></pre><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">join() 方法等待线程死亡。换句话说，它会导致当前运行的线程停止执行，直到它加入的线程完成其任务。</span></p><h3 data-tool=\"mdnice编辑器\" style=\"margin-top: 20px;margin-bottom: 20px;font-weight: bold;font-size: 17px;max-width: 100%;color: black;text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"padding-bottom: 2px;max-width: 100%;color: rgb(43, 43, 43);font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">线程异常捕获</span></h3><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">由于线程的本质，使你不能捕获从线程中逃逸的异常，一旦异常逃出任务的 run 方法，它就会向外传播到控制台，除非你采取特殊的步骤捕获这种错误的异常，在 Java5 之前，你可以通过线程组来捕获，但是在 Java 5 之后，就需要用 Executor 来解决问题，因为线程组不是一次好的尝试。</span></p><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">下面的任务会在 run 方法的执行期间抛出一个异常，并且这个异常会抛到 run 方法的外面，而且 main 方法无法对它进行捕获</span></p><pre data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;max-width: 100%;border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><code style=\"padding: 15px 16px 16px;max-width: 100%;overflow-x: auto;color: rgb(221, 221, 221);display: -webkit-box;font-family: \" operator mono consolas monaco menlo monospace rgb border-box break-word><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">public</span> <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">class</span> <span style=\"max-width: 100%;font-weight: bold;color: white;line-height: 26px;\">ExceptionThread</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">implements</span> <span style=\"max-width: 100%;font-weight: bold;color: white;line-height: 26px;\">Runnable</span></span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;color: rgb(117, 113, 94);line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">@Override</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">public</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">void</span> <span style=\"max-width: 100%;color: rgb(166, 226, 46);font-weight: bold;line-height: 26px;\">run</span><span style=\"max-width: 100%;line-height: 26px;\">()</span> </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">throw</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">new</span> RuntimeException();<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">public</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">static</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">void</span> <span style=\"max-width: 100%;color: rgb(166, 226, 46);font-weight: bold;line-height: 26px;\">main</span><span style=\"max-width: 100%;line-height: 26px;\">(String[] args)</span> </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">try</span> {<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">            ExecutorService service = Executors.newCachedThreadPool();<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">            service.execute(<span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">new</span> ExceptionThread());<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        }<span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">catch</span> (Exception e){<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">            System.out.println(<span style=\"max-width: 100%;color: rgb(166, 226, 46);line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">\"eeeee\"</span>);<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">}<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></code></pre><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">为了解决这个问题，我们需要修改 Executor 产生线程的方式，Java5 提供了一个新的接口 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">Thread.UncaughtExceptionHandler</span></code><span style=\"font-size: 15px;\"> ，它允许你在每个 Thread 上都附着一个异常处理器。</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">Thread.UncaughtExceptionHandler.uncaughtException()</span></code><span style=\"font-size: 15px;\"> 会在线程因未捕获临近死亡时被调用。</span></p><pre data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;max-width: 100%;border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><code style=\"padding: 15px 16px 16px;max-width: 100%;overflow-x: auto;color: rgb(221, 221, 221);display: -webkit-box;font-family: \" operator mono consolas monaco menlo monospace rgb border-box break-word><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">public</span> <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">class</span> <span style=\"max-width: 100%;font-weight: bold;color: white;line-height: 26px;\">ExceptionThread2</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">implements</span> <span style=\"max-width: 100%;font-weight: bold;color: white;line-height: 26px;\">Runnable</span></span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;color: rgb(117, 113, 94);line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">@Override</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">public</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">void</span> <span style=\"max-width: 100%;color: rgb(166, 226, 46);font-weight: bold;line-height: 26px;\">run</span><span style=\"max-width: 100%;line-height: 26px;\">()</span> </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        Thread t = Thread.currentThread();<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        System.out.println(<span style=\"max-width: 100%;color: rgb(166, 226, 46);line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">\"run() by \"</span> + t);<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        System.out.println(<span style=\"max-width: 100%;color: rgb(166, 226, 46);line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">\"eh = \"</span> + t.getUncaughtExceptionHandler());<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">      <br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">       <span style=\"max-width: 100%;color: rgb(117, 113, 94);line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">// 手动抛出异常</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">throw</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">new</span> RuntimeException();<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">}<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(117, 113, 94);line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">// 实现Thread.UncaughtExceptionHandler 接口，创建异常处理器</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">public</span> <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">class</span> <span style=\"max-width: 100%;font-weight: bold;color: white;line-height: 26px;\">MyUncaughtExceptionHandler</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">implements</span> <span style=\"max-width: 100%;font-weight: bold;color: white;line-height: 26px;\">Thread</span>.<span style=\"max-width: 100%;font-weight: bold;color: white;line-height: 26px;\">UncaughtExceptionHandler</span></span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;color: rgb(117, 113, 94);line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">@Override</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">public</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">void</span> <span style=\"max-width: 100%;color: rgb(166, 226, 46);font-weight: bold;line-height: 26px;\">uncaughtException</span><span style=\"max-width: 100%;line-height: 26px;\">(Thread t, Throwable e)</span> </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        System.out.println(<span style=\"max-width: 100%;color: rgb(166, 226, 46);line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">\"caught \"</span> + e);<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">}<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">public</span> <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">class</span> <span style=\"max-width: 100%;font-weight: bold;color: white;line-height: 26px;\">HandlerThreadFactory</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">implements</span> <span style=\"max-width: 100%;font-weight: bold;color: white;line-height: 26px;\">ThreadFactory</span> </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;color: rgb(117, 113, 94);line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">@Override</span><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">public</span> Thread <span style=\"max-width: 100%;color: rgb(166, 226, 46);font-weight: bold;line-height: 26px;\">newThread</span><span style=\"max-width: 100%;line-height: 26px;\">(Runnable r)</span> </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        System.out.println(<span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">this</span> + <span style=\"max-width: 100%;color: rgb(166, 226, 46);line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">\" creating new Thread\"</span>);<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        Thread t = <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">new</span> Thread(r);<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        System.out.println(<span style=\"max-width: 100%;color: rgb(166, 226, 46);line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">\"created \"</span> + t);<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        t.setUncaughtExceptionHandler(<span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">new</span> MyUncaughtExceptionHandler());<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        System.out.println(<span style=\"max-width: 100%;color: rgb(166, 226, 46);line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">\"ex = \"</span> + t.getUncaughtExceptionHandler());<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">return</span> t;<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">}<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">public</span> <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">class</span> <span style=\"max-width: 100%;font-weight: bold;color: white;line-height: 26px;\">CaptureUncaughtException</span> </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    <span style=\"max-width: 100%;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">public</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">static</span> <span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;\">void</span> <span style=\"max-width: 100%;color: rgb(166, 226, 46);font-weight: bold;line-height: 26px;\">main</span><span style=\"max-width: 100%;line-height: 26px;\">(String[] args)</span> </span>{<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        ExecutorService service = Executors.newCachedThreadPool(<span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">new</span> HandlerThreadFactory());<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">        service.execute(<span style=\"max-width: 100%;color: rgb(249, 38, 114);font-weight: bold;line-height: 26px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">new</span> ExceptionThread2());<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">    }<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">}<br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></code></pre><p data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;padding-top: 8px;padding-bottom: 8px;max-width: 100%;min-height: 1em;line-height: 26px;color: rgb(43, 43, 43);letter-spacing: 2px;word-spacing: 2px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"font-size: 15px;\">在程序中添加了额外的追踪机制，用来验证工厂创建的线程会传递给</span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">UncaughtExceptionHandler</span></code><span style=\"font-size: 15px;\">，你可以看到，未捕获的异常是通过 </span><code style=\"margin-right: 2px;margin-left: 2px;padding-right: 2px;padding-left: 2px;max-width: 100%;font-size: 14px;font-family: \" operator mono consolas monaco menlo monospace break-all rgb rgba inline-block border-box break-word><span style=\"font-size: 15px;\">uncaughtException</span></code><span style=\"font-size: 15px;\"> 来捕获的。</span></p></section><section donone=\"shifuMouseDownCard('shifu_c_030')\" label=\"Copyright Reserved by PLAYHUDONG.\" style=\"text-align: start;white-space: normal;margin-top: 1em;margin-bottom: 1em;caret-color: rgb(0, 0, 0);color: rgb(0, 0, 0);border-width: 0px;border-style: initial;border-color: initial;\"><section style=\"margin-left: 1em;line-height: 1.4;\"><span style=\"padding: 3px 8px;border-top-left-radius: 4px;border-top-right-radius: 4px;border-bottom-right-radius: 4px;border-bottom-left-radius: 4px;color: rgb(255, 255, 255);background-color: rgb(255, 105, 31);font-family: inherit;text-align: inherit;text-decoration: inherit;font-size: 16px;\">推荐阅读</span>  <span style=\"margin-left: 4px;padding: 3px 8px;border-top-left-radius: 1.2em;border-top-right-radius: 1.2em;border-bottom-right-radius: 1.2em;border-bottom-left-radius: 1.2em;color: rgb(255, 255, 255);line-height: 1.2;background-color: rgb(204, 204, 204);font-family: inherit;text-align: inherit;text-decoration: inherit;border-color: rgb(249, 110, 87);font-size: 12px;\">点击标题可跳转</span></section><section style=\"margin-top: -11px;padding: 22px 16px 16px;border-width: 1px;border-style: solid;border-color: rgb(255, 105, 31);color: rgb(51, 51, 51);font-size: 1em;font-family: inherit;text-align: inherit;text-decoration: inherit;\"><p><span style=\"font-size: 12px;font-family: -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif rgb><a target=\"_blank\" href=\"http://mp.weixin.qq.com/s?__biz=MjM5NzMyMjAwMA==&amp;mid=2651484446&amp;idx=1&amp;sn=d98927babc32ec0676540edfdd12a8a4&amp;chksm=bd251d618a529477af77caaa5516ca79e17298c706e14fa47c03a5adb1e44a260ea1fa47cbfc&amp;scene=21#wechat_redirect\" data-itemshowtype=\"0\" tab=\"innerlink\" data-linktype=\"2\">Java 并发编程：Synchronized 及其实现原理</a><br></span></p><p><a target=\"_blank\" href=\"http://mp.weixin.qq.com/s?__biz=MjM5NzMyMjAwMA==&amp;mid=2651482572&amp;idx=1&amp;sn=c3f8a51e872f803880e59b7a44cd1b5d&amp;chksm=bd2505b38a528ca5d95a1404c986105570711ee47fd941ee192c462ef8b6824f012640587294&amp;scene=21#wechat_redirect\" data-itemshowtype=\"0\" tab=\"innerlink\" style=\"font-size: 12px;\" data-linktype=\"2\"><span style=\"font-size: 12px;\">Java并发编程73道面试题及答案 —— 面试稳了</span></a><br></p><a target=\"_blank\" href=\"http://mp.weixin.qq.com/s?__biz=MjM5NzMyMjAwMA==&amp;mid=2651483042&amp;idx=1&amp;sn=393073aaee0fb64874dbb1edeb74e6d2&amp;chksm=bd2507dd8a528ecbf400c9d53145bacd434ff373966643f009c4678693675cbb68c035c827fb&amp;scene=21#wechat_redirect\" data-itemshowtype=\"0\" tab=\"innerlink\" style=\"font-size: 12px;\" data-linktype=\"2\"><span style=\"font-size: 12px;\">Java并发编程：线程池的使用</span></a></section></section><p style=\"caret-color: rgb(0, 0, 0);color: rgb(0, 0, 0);text-align: start;white-space: normal;\"><br></p><p style=\"white-space: normal;max-width: 100%;min-height: 1em;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"max-width: 100%;font-size: 14px;color: rgb(255, 169, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\">看完本文有收获？请转发分享给更多人</span></p><p style=\"white-space: normal;max-width: 100%;min-height: 1em;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;color: rgb(255, 169, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\">关注「ImportNew」，提升Java技能</strong></p><p style=\"white-space: normal;max-width: 100%;min-height: 1em;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><img data-ratio=\"0.9166666666666666\" data-s=\"300,640\" data-type=\"jpeg\" data-w=\"600\" width=\"auto\" style=\"box-sizing: border-box !important; overflow-wrap: break-word !important; visibility: visible !important; width: 600px !important; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/2A8tXicCG8ylbWIGfdoDED35IRRySQZTXUkJ1eop9MHApzFibKnOo0diboXpl0rmS5mH78YJhsWQv0dhv718A6kUA/640?wx_fmt=jpeg\"></p><p style=\"text-align: right;\"><span style=\"font-size: 14px;text-align: right;\">好文章，我</span><span style=\"font-size: 14px;text-align: right;color: rgb(255, 41, 65);\">在看</span><span style=\"font-size: 14px;text-align: right;\">❤️</span></p>\n                </div>\n\n    \n    <br>\n\n    \n        <a target=\"_blank\" href=\"http://mp.weixin.qq.com/s?__biz=MjM5NzMyMjAwMA==&amp;mid=2651489732&amp;idx=1&amp;sn=624a8d8e978bd54aa7fc7d0ce4a71a97&amp;chksm=bd25e9bb8a5260ad3b1294c45b6e68c965fd4d64c3735afe7f072d1f308b8bc028d3c4586e38&amp;scene=0#rd\" style=\"color: blue\" class=\"media_tool_meta meta_primary\">原文</a>\n        <br>\n    \n\n    \n\n    <img alt=\"\" width=\"1px\" height=\"1px\" class=\"\" style=\"width:1px;height:1px;display:none\" src=\"http://www.jintiankansha.me/rss_static/11757/jwSZnOsCdW\"></div></div>","descriptionType":"html","publishedDate":"Thu, 03 Sep 2020 11:58:00 +0000","feedId":2521,"bgimg":"http://img.100weidu.com/mmbiz_jpg/eZzl4LXykQy6Uwm3SGUMYic8R3o8yalAkB1Yc1mJKSqtUPibDZ2NHcP3T84HbrQrtJ7DVnD1iabVicA7zBAff0TBbg?imageView2/1/w/600","linkMd5":"38aa4d626245d529fa80f57f64cc9662","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn21@2020_1/2020/09/05/06-41-45-935_dd2c260514abc71d.webp","destWidth":500,"destHeight":213,"sourceBytes":15485,"destBytes":13174,"author":"","articleImgCdnMap":{"http://img.100weidu.com/mmbiz_jpg/eZzl4LXykQy6Uwm3SGUMYic8R3o8yalAkB1Yc1mJKSqtUPibDZ2NHcP3T84HbrQrtJ7DVnD1iabVicA7zBAff0TBbg?imageView2/1/w/600":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn21@2020_1/2020/09/05/06-41-45-935_dd2c260514abc71d.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63rHJT84HDiajX503qdwTRPXHSa467jxJyHic4umHwHH8WoI7G0ibTu4rKbA/640?wx_fmt=png":null,"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63rdTR6nicFv1UGib1lSF7YOgWzzKZFRrDdflEy3DQ1VOnFQjUd8VibsAnZw/640?wx_fmt=png":null,"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63rYZKuqrxyJxXhA7fcrnriadnQe783YAicN9iblrVWbibULJnTtoqW4zHWibQ/640?wx_fmt=png":null,"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63rsocicUklTX7zeIC9enlcApYqjeoCNxPEtGuAFsDeWibnAvxVMYp93tXg/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn66@2020_5/2020/09/05/06-43-12-746_6193118b35a19035.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63rrozSIicLcxyQ8SRTMFCicrQUxflkgicSUz7FCjIwarwBSfma7nItplNAg/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn54@2020_4/2020/09/05/06-42-40-725_5d6ee56fb99e0f65.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63rj7I1AvWV8giaQSrd7ibamb4xzKPqCToTUXOCdXNmV4tGt9eSFukNbSRg/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn17@2020_4/2020/09/05/06-43-12-345_02e566a9c1da4f83.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63riaUXhPBL1u6PXibBtMTP2cr8BibM9KrD2FwWk37ibMUzgHToW5vBZpSMfg/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn71@2020_6/2020/09/05/06-43-10-528_c5474c113fbddf7e.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63rM7fCIxLw4UWhslfZQnicXFR5hFDLl9zAiaNMPt4ACEFRib3G5Cvy4RR5A/640?wx_fmt=png":null,"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63rCqvg7gbm90hbf7d2ROIQb2WThUfiaPiaBFENZrGVDAHQ8aHO0mHbe92w/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn38@2020_6/2020/09/05/06-42-55-902_09adbc3397fca18b.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63r8XZQUYN6J3T3uXxKaM3dp1s3QgibxwF6cwx8ylHzezrxEuWTBQia43Yw/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn92@2020_2/2020/09/05/06-43-43-738_7931f19e2682b17d.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63r7ZU6j931L8PYSSG9efR2fzxD5Iia8krNdyUpXGBWKFhGoyJfIojZVwQ/640?wx_fmt=png":null,"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63rAKyUGdToPOo7jdhXf2fVqeHObNib3yoDnG4N5hgEA5poodcibKrsQeLg/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn76@2020_2/2020/09/05/06-43-03-890_9255f714023126ea.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63rhs7YAVOfiao4jIajToyRkSy2AD6McNHkZiaA2baCnwNAKrOOC2knkeOA/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn89@2020_3/2020/09/05/06-42-32-707_63ac6ed825f312b2.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63rNscVGllMQ8mNBDkgHrqBfy2dib05ms41CG6oFz3ZWKibNxWZE2Mvl43A/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn77@2020_5/2020/09/05/06-42-15-831_a91038bd5b268ad2.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63rFicibbC26Rse7UCClrbXnLVh5F1Vkf6Bmr8GaKBbQeAExAul6pNGnOyA/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn73@2020_2/2020/09/05/06-42-23-832_83c07c6a469e57a8.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63r7M17d4QtgDEp8u8DIsJrqnQbtH9yEUXia63BhyKHVYAR0SZ58tJvaCA/640?wx_fmt=png":null,"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63rlFAjmKBMPbXuEG9Kq5J6F2ChkiaMlwTSwf5qDjgTDcMzDicxvAdDFDibQ/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn28@2020_4/2020/09/05/06-42-42-040_b77bf2f730b82fa5.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63rHca13xT1oXSiagcmiayOuoh5gosMNcTzzxRHRvJfwbMYia5JDQUmfqmicA/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn86@2020_5/2020/09/05/06-42-16-067_f5946c201688a8d5.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63rUJghn5RgfjibncqMMBddMQgwzougcQKJT3O7DJo1embiaVtyBNCsvckA/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn4@2020_3/2020/09/05/06-42-56-014_7f1d5aee96462e3d.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63rIF8giaq7AtPRqQpUcxR9uokRbIgTBWDiaFxK4FkQKOHOFWFc0wDZg5zQ/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn46@2020_2/2020/09/05/06-43-20-989_8e4aa58f7197e5a1.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63rkxMDIu6kRDWzaY9JxdOzHED7z8ibkvBxWiaCAlJHkZx5ibY3FRmM55yeg/640?wx_fmt=png":null,"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63r2BYIOAm2YSVic6kOko0DoJVTavaLQg2KHYiahsXjuL8vf5shPeoSUa6A/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn58@2020_5/2020/09/05/06-42-14-761_1a7a48eb2fd7c14f.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63re1dticzx3qqzIlnPdD4a1ibtZqpcdW01VFGkV7UOvQfI1MvkIbFkKkIA/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn73@2020_6/2020/09/05/06-42-27-764_7e2d2b6813f7ca03.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63rxib6y0aoyxno19Gy9NKcsricuDjoSBQLswQz8rDaCoQ3zciabB9P0WHSg/640?wx_fmt=png":null,"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63r0mwyACU9tWXPdSK4g0D4op6gTJYdX7Avue89JTq1WfrRicI3PhQWx4A/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn24@2020_6/2020/09/05/06-43-15-451_ce4fac683aa6b944.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63rAPe0l3PEHdNcnLWUCHRgKRaHeiceLzPSn43pZLW9jFDjPYfaPp2ZnCQ/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn66@2020_4/2020/09/05/06-42-42-406_969ab15d5ff90e5e.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63ruogUQpLB3XRtneUBdtzMR5jMLS7Ob4J6Qt8HXO6kiaPdzeeGg1xHCAw/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn46@2020_5/2020/09/05/06-42-04-431_90e7514c84828af3.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63rpVpFuyqd9HsaYFgWSVq5d6kCDGRp0ECS7W8g7PcBKD1oBw5JxibLR3g/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn99@2020_6/2020/09/05/06-43-51-468_47b6b07d31881368.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63rZKaMLD7aZjDUKAbF1RqKl7zqGA5LIWLKBmwzvT6ic0hwicicUlicaHRwtQ/640?wx_fmt=png":null,"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/2A8tXicCG8ylbWIGfdoDED35IRRySQZTXUkJ1eop9MHApzFibKnOo0diboXpl0rmS5mH78YJhsWQv0dhv718A6kUA/640?wx_fmt=jpeg":"https://cdn.jsdelivr.net/gh/myreaderx/cdn61@2020_1/2020/09/05/06-42-03-580_f93d0239d4369c75.webp","http://www.jintiankansha.me/rss_static/11757/jwSZnOsCdW":null},"publishedOrCreatedDate":1599288104750}],"record":{"createdTime":"2020-09-05 14:41:44","updatedTime":"2020-09-05 14:41:44","feedId":2521,"fetchDate":"Sat, 05 Sep 2020 06:41:44 +0000","fetchMs":1275,"handleMs":51,"totalMs":231432,"newArticles":0,"totalArticles":5,"status":1,"type":0,"ip":"049c79a7a57af8e7e2e0cb88e193d1b8","hostName":"us-001*","requestId":"68cacc6cb23f4f24a0c5f3229ed7045e_2521","contentType":"application/rss+xml","totalBytes":1245692,"bgimgsTotal":5,"bgimgsGithubTotal":5,"articlesImgsTotal":81,"articlesImgsGithubTotal":52,"successGithubMap":{"myreaderx8":2,"myreaderx7":1,"myreaderx15":1,"myreaderx16":3,"myreaderx6":1,"myreaderx32":2,"myreaderx4":2,"myreaderx10":1,"myreaderx3":2,"myreaderx33":1,"myreaderx11":2,"myreaderx12":1,"myreaderx2":1,"myreaderx13":2,"myreaderx1":1,"myreaderx30":3,"myreaderx31":2,"myreaderx18":2,"myreaderx19":1,"myreaderx":3,"myreaderx25":3,"myreaderx27":3,"myreaderx21":2,"myreaderx22":2,"myreaderx24":3,"myreaderx5oss":3,"myreaderx29":2},"failGithubMap":{"myreaderx14":2,"myreaderx23":3}},"feed":{"createdTime":"2020-08-24 21:31:41","updatedTime":"2020-09-01 10:09:47","id":2521,"name":"ImportNew","url":"http://feedmaker.kindle4rss.com/feeds/importnew.weixin.xml","subscriber":null,"website":null,"icon":"http://www.sogou.com/images/logo/new/favicon.ico?v=4","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx63/cdn9@2020_3/2020/09/01/02-08-31-388_d24121c9beed1de6.ico","description":"伯乐在线旗下账号，专注Java技术分享，包括Java基础技术、进阶技能、架构设计和Java技术领域动态等。","weekly":null,"link":null},"noPictureArticleList":[{"createdTime":"2020-09-05 14:45:34","updatedTime":"2020-09-05 14:45:34","id":null,"feedId":2521,"linkMd5":"5497d1aebd41da8f15406ca3cc375cda"},{"createdTime":"2020-09-05 14:45:34","updatedTime":"2020-09-05 14:45:34","id":null,"feedId":2521,"linkMd5":"46a214c22fa582009d96cf716d99afc8"},{"createdTime":"2020-09-05 14:45:34","updatedTime":"2020-09-05 14:45:34","id":null,"feedId":2521,"linkMd5":"6a42342f60ebb0da2b1b08b2839c245f"},{"createdTime":"2020-09-05 14:45:34","updatedTime":"2020-09-05 14:45:34","id":null,"feedId":2521,"linkMd5":"29acc60b96a03ee0bc8659115e702065"},{"createdTime":"2020-09-05 14:45:34","updatedTime":"2020-09-05 14:45:34","id":null,"feedId":2521,"linkMd5":"38aa4d626245d529fa80f57f64cc9662"}],"tmpCommonImgCdnBytes":76260,"tmpBodyImgCdnBytes":1169432,"tmpBgImgCdnBytes":0,"extra4":{"start":1599288103192,"total":0,"statList":[{"spend":1507,"msg":"获取xml内容"},{"spend":51,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":227828,"msg":"正文链接上传到cdn"}]},"extra5":81,"extra6":62,"extra7ImgCdnFailResultVector":[{"code":1,"isDone":false,"source":"http://www.jintiankansha.me/rss_static/11757/q4KsCRohdR","sourceStatusCode":405,"sourceBytes":0,"destBytes":0,"feedId":2521,"totalSpendMs":469,"convertSpendMs":0,"createdTime":"2020-09-05 14:41:46","host":"us-020*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+2020%EF%BC%8C%E5%90%8E%E7%AB%AF%E8%B7%B3%E6%A7%BD%E6%80%82%E4%BA%86%E5%90%97%3F","linkMd5ListStr":"46a214c22fa582009d96cf716d99afc8","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[405],"destSize":"0","sourceSize":"0"},{"code":1,"isDone":false,"source":"http://www.jintiankansha.me/rss_static/11757/jwSZnOsCdW","sourceStatusCode":405,"sourceBytes":0,"destBytes":0,"feedId":2521,"totalSpendMs":523,"convertSpendMs":0,"createdTime":"2020-09-05 14:41:46","host":"europe-58*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+2w%E5%AD%97%C2%A0%2B%C2%A040%E5%BC%A0%E5%9B%BE%E5%B8%A6%E4%BD%A0%E5%8F%82%E9%80%8F%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%EF%BC%81","linkMd5ListStr":"38aa4d626245d529fa80f57f64cc9662","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[405],"destSize":"0","sourceSize":"0"},{"code":1,"isDone":false,"source":"http://www.jintiankansha.me/rss_static/11757/Q9wfeSwT9q","sourceStatusCode":405,"sourceBytes":0,"destBytes":0,"feedId":2521,"totalSpendMs":549,"convertSpendMs":0,"createdTime":"2020-09-05 14:41:46","host":"europe65*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F%E9%80%89%E5%9E%8B%EF%BC%8C%E8%BF%99%E7%AF%87%E4%B8%8D%E5%8F%AF%E4%B8%8D%E8%AF%BB%EF%BC%81","linkMd5ListStr":"6a42342f60ebb0da2b1b08b2839c245f","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[405],"destSize":"0","sourceSize":"0"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/AaabKZjib2ka9iaZLtmsuQ0d0IQe2qg9NS7f4mPicXtHdjaoMnWezpjOaE8HcF9RI1Ham0F4lGpTdj9cHP5qhjD8A/640?wx_fmt=png","sourceStatusCode":403,"sourceBytes":0,"destBytes":0,"feedId":2521,"totalSpendMs":961,"convertSpendMs":0,"createdTime":"2020-09-05 14:41:46","host":"us-028*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F%E9%80%89%E5%9E%8B%EF%BC%8C%E8%BF%99%E7%AF%87%E4%B8%8D%E5%8F%AF%E4%B8%8D%E8%AF%BB%EF%BC%81","linkMd5ListStr":"6a42342f60ebb0da2b1b08b2839c245f","extra22GetBytesInfo":"2、Referer字段 ： http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F%E9%80%89%E5%9E%8B%EF%BC%8C%E8%BF%99%E7%AF%87%E4%B8%8D%E5%8F%AF%E4%B8%8D%E8%AF%BB%EF%BC%81","extra23historyStatusCode":[403,403],"destSize":"0","sourceSize":"0"},{"code":1,"isDone":false,"source":"http://www.jintiankansha.me/rss_static/11757/q4KsCRohdR","sourceStatusCode":405,"sourceBytes":0,"destBytes":0,"feedId":2521,"totalSpendMs":567,"convertSpendMs":0,"createdTime":"2020-09-05 14:41:47","host":"us-033*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+2020%EF%BC%8C%E5%90%8E%E7%AB%AF%E8%B7%B3%E6%A7%BD%E6%80%82%E4%BA%86%E5%90%97%3F","linkMd5ListStr":"46a214c22fa582009d96cf716d99afc8","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[405],"destSize":"0","sourceSize":"0"},{"code":1,"isDone":false,"source":"http://www.jintiankansha.me/rss_static/11757/jwSZnOsCdW","sourceStatusCode":405,"sourceBytes":0,"destBytes":0,"feedId":2521,"totalSpendMs":606,"convertSpendMs":0,"createdTime":"2020-09-05 14:41:47","host":"us-002*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+2w%E5%AD%97%C2%A0%2B%C2%A040%E5%BC%A0%E5%9B%BE%E5%B8%A6%E4%BD%A0%E5%8F%82%E9%80%8F%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%EF%BC%81","linkMd5ListStr":"38aa4d626245d529fa80f57f64cc9662","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[405],"destSize":"0","sourceSize":"0"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/AaabKZjib2kbP23ApP3flYOGcibWAN9beX0d2xSXvQWP720RgfcvBTb9TibibIaEu3726EpD9oBR5qVOJpVYpjRG0w/640?wx_fmt=png","sourceStatusCode":403,"sourceBytes":0,"destBytes":0,"feedId":2521,"totalSpendMs":1302,"convertSpendMs":0,"createdTime":"2020-09-05 14:41:46","host":"europe62*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F%E9%80%89%E5%9E%8B%EF%BC%8C%E8%BF%99%E7%AF%87%E4%B8%8D%E5%8F%AF%E4%B8%8D%E8%AF%BB%EF%BC%81","linkMd5ListStr":"6a42342f60ebb0da2b1b08b2839c245f","extra22GetBytesInfo":"2、Referer字段 ： http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F%E9%80%89%E5%9E%8B%EF%BC%8C%E8%BF%99%E7%AF%87%E4%B8%8D%E5%8F%AF%E4%B8%8D%E8%AF%BB%EF%BC%81","extra23historyStatusCode":[403,403],"destSize":"0","sourceSize":"0"},{"code":1,"isDone":false,"source":"http://www.jintiankansha.me/rss_static/11757/ldsRuLoiNC","sourceStatusCode":405,"sourceBytes":0,"destBytes":0,"feedId":2521,"totalSpendMs":1423,"convertSpendMs":0,"createdTime":"2020-09-05 14:41:46","host":"us-004*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+Kafka%E5%92%8CRocketMQ%E5%BA%95%E5%B1%82%E5%AD%98%E5%82%A8%E4%B9%8B%E9%82%A3%E4%BA%9B%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E4%BA%8B","linkMd5ListStr":"29acc60b96a03ee0bc8659115e702065","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[405],"destSize":"0","sourceSize":"0"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/2A8tXicCG8ylbWIGfdoDED35IRRySQZTXUkJ1eop9MHApzFibKnOo0diboXpl0rmS5mH78YJhsWQv0dhv718A6kUA/640?wx_fmt=jpeg","sourceStatusCode":403,"sourceBytes":0,"destBytes":0,"feedId":2521,"totalSpendMs":1815,"convertSpendMs":0,"createdTime":"2020-09-05 14:41:46","host":"europe62*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+2w%E5%AD%97%C2%A0%2B%C2%A040%E5%BC%A0%E5%9B%BE%E5%B8%A6%E4%BD%A0%E5%8F%82%E9%80%8F%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%EF%BC%81","linkMd5ListStr":"5497d1aebd41da8f15406ca3cc375cda,29acc60b96a03ee0bc8659115e702065,6a42342f60ebb0da2b1b08b2839c245f,38aa4d626245d529fa80f57f64cc9662","extra22GetBytesInfo":"2、Referer字段 ： http://weixin.sogou.com/weixin?type=2&query=ImportNew+2w%E5%AD%97%C2%A0%2B%C2%A040%E5%BC%A0%E5%9B%BE%E5%B8%A6%E4%BD%A0%E5%8F%82%E9%80%8F%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%EF%BC%81","extra23historyStatusCode":[403,403],"destSize":"0","sourceSize":"0"},{"code":1,"isDone":false,"source":"http://www.jintiankansha.me/rss_static/11757/ldsRuLoiNC","sourceStatusCode":405,"sourceBytes":0,"destBytes":0,"feedId":2521,"totalSpendMs":482,"convertSpendMs":0,"createdTime":"2020-09-05 14:41:48","host":"europe68*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+Kafka%E5%92%8CRocketMQ%E5%BA%95%E5%B1%82%E5%AD%98%E5%82%A8%E4%B9%8B%E9%82%A3%E4%BA%9B%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E4%BA%8B","linkMd5ListStr":"29acc60b96a03ee0bc8659115e702065","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[405],"destSize":"0","sourceSize":"0"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63rNscVGllMQ8mNBDkgHrqBfy2dib05ms41CG6oFz3ZWKibNxWZE2Mvl43A/640?wx_fmt=png","sourceStatusCode":403,"sourceBytes":0,"destBytes":0,"feedId":2521,"totalSpendMs":2017,"convertSpendMs":0,"createdTime":"2020-09-05 14:41:46","host":"europe-58*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+2w%E5%AD%97%C2%A0%2B%C2%A040%E5%BC%A0%E5%9B%BE%E5%B8%A6%E4%BD%A0%E5%8F%82%E9%80%8F%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%EF%BC%81","linkMd5ListStr":"38aa4d626245d529fa80f57f64cc9662","extra22GetBytesInfo":"2、Referer字段 ： http://weixin.sogou.com/weixin?type=2&query=ImportNew+2w%E5%AD%97%C2%A0%2B%C2%A040%E5%BC%A0%E5%9B%BE%E5%B8%A6%E4%BD%A0%E5%8F%82%E9%80%8F%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%EF%BC%81","extra23historyStatusCode":[403,403],"destSize":"0","sourceSize":"0"},{"code":1,"isDone":false,"source":"http://www.jintiankansha.me/rss_static/11757/Q9wfeSwT9q","sourceStatusCode":405,"sourceBytes":0,"destBytes":0,"feedId":2521,"totalSpendMs":1895,"convertSpendMs":0,"createdTime":"2020-09-05 14:41:47","host":"europe68*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F%E9%80%89%E5%9E%8B%EF%BC%8C%E8%BF%99%E7%AF%87%E4%B8%8D%E5%8F%AF%E4%B8%8D%E8%AF%BB%EF%BC%81","linkMd5ListStr":"6a42342f60ebb0da2b1b08b2839c245f","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[405],"destSize":"0","sourceSize":"0"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQxwz7UiaI2ib3d4D1CWXCibLukXs4dGIx4EzTgXCCw7upia7lZGLE8a74NFHRYXUV8sReiaJNibIic4FJ2eQ/640?wx_fmt=png","sourceStatusCode":403,"sourceBytes":0,"destBytes":0,"feedId":2521,"totalSpendMs":3127,"convertSpendMs":0,"createdTime":"2020-09-05 14:41:46","host":"us-028*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+Kafka%E5%92%8CRocketMQ%E5%BA%95%E5%B1%82%E5%AD%98%E5%82%A8%E4%B9%8B%E9%82%A3%E4%BA%9B%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E4%BA%8B","linkMd5ListStr":"29acc60b96a03ee0bc8659115e702065","extra22GetBytesInfo":"2、Referer字段 ： http://weixin.sogou.com/weixin?type=2&query=ImportNew+Kafka%E5%92%8CRocketMQ%E5%BA%95%E5%B1%82%E5%AD%98%E5%82%A8%E4%B9%8B%E9%82%A3%E4%BA%9B%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E4%BA%8B","extra23historyStatusCode":[403,403],"destSize":"0","sourceSize":"0"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/libYRuvULTdWACbPmP3IthmrrO6mkE1Ytib584dicNPGrOHIkL7ZH64MpcQdlyfZnXYH83PnHS7B2V4osQel98icYw/640?wx_fmt=png","sourceStatusCode":403,"sourceBytes":0,"destBytes":0,"feedId":2521,"totalSpendMs":4557,"convertSpendMs":0,"createdTime":"2020-09-05 14:41:46","host":"us-53*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E7%BB%99%E5%A5%B3%E5%90%8C%E4%BA%8B%E8%AE%B2%E5%AE%8C%E4%BB%A3%E7%90%86%E5%90%8E%EF%BC%8C%E5%A5%B3%E5%90%8C%E4%BA%8B%E8%AF%B4%EF%BC%9A%E4%BD%A0%E5%A5%BD%E6%A3%92%E5%93%A6","linkMd5ListStr":"5497d1aebd41da8f15406ca3cc375cda","extra22GetBytesInfo":"2、Referer字段 ： http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E7%BB%99%E5%A5%B3%E5%90%8C%E4%BA%8B%E8%AE%B2%E5%AE%8C%E4%BB%A3%E7%90%86%E5%90%8E%EF%BC%8C%E5%A5%B3%E5%90%8C%E4%BA%8B%E8%AF%B4%EF%BC%9A%E4%BD%A0%E5%A5%BD%E6%A3%92%E5%93%A6","extra23historyStatusCode":[403,403],"destSize":"0","sourceSize":"0"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63rFicibbC26Rse7UCClrbXnLVh5F1Vkf6Bmr8GaKBbQeAExAul6pNGnOyA/640?wx_fmt=png","sourceStatusCode":200,"destWidth":1080,"destHeight":501,"sourceBytes":113146,"destBytes":35438,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":23736,"convertSpendMs":27,"createdTime":"2020-09-05 14:41:46","host":"us-016*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+2w%E5%AD%97%C2%A0%2B%C2%A040%E5%BC%A0%E5%9B%BE%E5%B8%A6%E4%BD%A0%E5%8F%82%E9%80%8F%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%EF%BC%81","linkMd5ListStr":"38aa4d626245d529fa80f57f64cc9662","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx33/cdn73/contents/2020/09/05/06-42-09-687_83c07c6a469e57a8.webp","resp":{"code":409,"msg":"Conflict","body":"{\n  \"message\": \"is at 8d7b277dd1e99684857d94439e7b71dbbb23efe0 but expected adb370afa57f64980b429edfe31796e9a128a732\",\n  \"documentation_url\": \"https://docs.github.com/rest/reference/repos#create-or-update-file-contents\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-length":["222"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 06:42:10 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["409 Conflict"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":[""],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["E888:5C07:2D8F73:6A93CD:5F533341"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["5000"],"x-ratelimit-remaining":["3962"],"x-ratelimit-reset":["1599288348"],"x-ratelimit-used":["1038"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 409,url is : https://api.github.com/repos/myreaderx33/cdn73/contents/2020/09/05/06-42-09-687_83c07c6a469e57a8.webp","historyStatusCode":[],"spendMs":870},"base64UserPassword":null,"token":"79e46******************************077de"},"githubUser":"myreaderx33","githubHttpCode":409,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"34.6 KB","compressRate":"31.3%","sourceSize":"110.5 KB"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQxwz7UiaI2ib3d4D1CWXCibLukBNVGxffibdIkbbnWiaUR2Vv7Av9VUNYCZWoFiavXRP9CPz2OpM8tlxmcQ/640?wx_fmt=png","sourceStatusCode":200,"destWidth":873,"destHeight":171,"sourceBytes":21532,"destBytes":14624,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":22508,"convertSpendMs":20,"createdTime":"2020-09-05 14:41:49","host":"us-012*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+Kafka%E5%92%8CRocketMQ%E5%BA%95%E5%B1%82%E5%AD%98%E5%82%A8%E4%B9%8B%E9%82%A3%E4%BA%9B%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E4%BA%8B","linkMd5ListStr":"29acc60b96a03ee0bc8659115e702065","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn25/contents/2020/09/05/06-42-12-050_18aa219c8d26da7e.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 06:42:12 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["8598:4B6E:10DE8B9:1B4DAC3:5F533341"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599288348"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn25/contents/2020/09/05/06-42-12-050_18aa219c8d26da7e.webp","historyStatusCode":[],"spendMs":43},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"14.3 KB","compressRate":"67.9%","sourceSize":"21 KB"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQxwz7UiaI2ib3d4D1CWXCibLukBNVGxffibdIkbbnWiaUR2Vv7Av9VUNYCZWoFiavXRP9CPz2OpM8tlxmcQ/640?wx_fmt=png","sourceStatusCode":200,"destWidth":873,"destHeight":171,"sourceBytes":21532,"destBytes":14624,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":4338,"convertSpendMs":9,"createdTime":"2020-09-05 14:42:12","host":"us-003*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+Kafka%E5%92%8CRocketMQ%E5%BA%95%E5%B1%82%E5%AD%98%E5%82%A8%E4%B9%8B%E9%82%A3%E4%BA%9B%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E4%BA%8B","linkMd5ListStr":"29acc60b96a03ee0bc8659115e702065","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn25/contents/2020/09/05/06-42-16-435_18aa219c8d26da7e.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 06:42:16 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["CAD4:16FD:3E9029:A0C673:5F533348"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599288348"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn25/contents/2020/09/05/06-42-16-435_18aa219c8d26da7e.webp","historyStatusCode":[],"spendMs":41},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"14.3 KB","compressRate":"67.9%","sourceSize":"21 KB"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQxwz7UiaI2ib3d4D1CWXCibLukeSsuS7xYFgWKSd6BAsn3JtDFdXxatcsr5Jo0rOAWG8t51FMeCRVicfA/640?wx_fmt=png","sourceStatusCode":403,"sourceBytes":0,"destBytes":0,"feedId":2521,"totalSpendMs":1695,"convertSpendMs":0,"createdTime":"2020-09-05 14:42:15","host":"europe67*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+Kafka%E5%92%8CRocketMQ%E5%BA%95%E5%B1%82%E5%AD%98%E5%82%A8%E4%B9%8B%E9%82%A3%E4%BA%9B%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E4%BA%8B","linkMd5ListStr":"29acc60b96a03ee0bc8659115e702065","extra22GetBytesInfo":"2、Referer字段 ： http://weixin.sogou.com/weixin?type=2&query=ImportNew+Kafka%E5%92%8CRocketMQ%E5%BA%95%E5%B1%82%E5%AD%98%E5%82%A8%E4%B9%8B%E9%82%A3%E4%BA%9B%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E4%BA%8B","extra23historyStatusCode":[403,403],"destSize":"0","sourceSize":"0"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63rpVpFuyqd9HsaYFgWSVq5d6kCDGRp0ECS7W8g7PcBKD1oBw5JxibLR3g/640?wx_fmt=png","sourceStatusCode":403,"sourceBytes":0,"destBytes":0,"feedId":2521,"totalSpendMs":1947,"convertSpendMs":0,"createdTime":"2020-09-05 14:42:33","host":"us-017*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+2w%E5%AD%97%C2%A0%2B%C2%A040%E5%BC%A0%E5%9B%BE%E5%B8%A6%E4%BD%A0%E5%8F%82%E9%80%8F%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%EF%BC%81","linkMd5ListStr":"38aa4d626245d529fa80f57f64cc9662","extra22GetBytesInfo":"2、Referer字段 ： http://weixin.sogou.com/weixin?type=2&query=ImportNew+2w%E5%AD%97%C2%A0%2B%C2%A040%E5%BC%A0%E5%9B%BE%E5%B8%A6%E4%BD%A0%E5%8F%82%E9%80%8F%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%EF%BC%81","extra23historyStatusCode":[403,403],"destSize":"0","sourceSize":"0"},{"code":1,"isDone":false,"source":"http://www.jintiankansha.me/rss_static/11757/v56gr3E2Eu","sourceStatusCode":405,"sourceBytes":0,"destBytes":0,"feedId":2521,"totalSpendMs":625,"convertSpendMs":0,"createdTime":"2020-09-05 14:42:43","host":"us-036*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E7%BB%99%E5%A5%B3%E5%90%8C%E4%BA%8B%E8%AE%B2%E5%AE%8C%E4%BB%A3%E7%90%86%E5%90%8E%EF%BC%8C%E5%A5%B3%E5%90%8C%E4%BA%8B%E8%AF%B4%EF%BC%9A%E4%BD%A0%E5%A5%BD%E6%A3%92%E5%93%A6","linkMd5ListStr":"5497d1aebd41da8f15406ca3cc375cda","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[405],"destSize":"0","sourceSize":"0"},{"code":1,"isDone":false,"source":"http://www.jintiankansha.me/rss_static/11757/v56gr3E2Eu","sourceStatusCode":405,"sourceBytes":0,"destBytes":0,"feedId":2521,"totalSpendMs":518,"convertSpendMs":0,"createdTime":"2020-09-05 14:42:44","host":"europe-59*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E7%BB%99%E5%A5%B3%E5%90%8C%E4%BA%8B%E8%AE%B2%E5%AE%8C%E4%BB%A3%E7%90%86%E5%90%8E%EF%BC%8C%E5%A5%B3%E5%90%8C%E4%BA%8B%E8%AF%B4%EF%BC%9A%E4%BD%A0%E5%A5%BD%E6%A3%92%E5%93%A6","linkMd5ListStr":"5497d1aebd41da8f15406ca3cc375cda","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[405],"destSize":"0","sourceSize":"0"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/AaabKZjib2ka9iaZLtmsuQ0d0IQe2qg9NSRe9gDr03L6hVfP4ueibC2ibTGwCwARulzH4IZia76Sw1zCLSq0xajlHKQ/640?wx_fmt=png","sourceStatusCode":403,"sourceBytes":0,"destBytes":0,"feedId":2521,"totalSpendMs":1056,"convertSpendMs":0,"createdTime":"2020-09-05 14:42:44","host":"us-009*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F%E9%80%89%E5%9E%8B%EF%BC%8C%E8%BF%99%E7%AF%87%E4%B8%8D%E5%8F%AF%E4%B8%8D%E8%AF%BB%EF%BC%81","linkMd5ListStr":"6a42342f60ebb0da2b1b08b2839c245f","extra22GetBytesInfo":"2、Referer字段 ： http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F%E9%80%89%E5%9E%8B%EF%BC%8C%E8%BF%99%E7%AF%87%E4%B8%8D%E5%8F%AF%E4%B8%8D%E8%AF%BB%EF%BC%81","extra23historyStatusCode":[403,403],"destSize":"0","sourceSize":"0"},null,null,null,null,null,null,{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/AaabKZjib2ka9iaZLtmsuQ0d0IQe2qg9NSRe9gDr03L6hVfP4ueibC2ibTGwCwARulzH4IZia76Sw1zCLSq0xajlHKQ/640?wx_fmt=png","sourceStatusCode":403,"sourceBytes":0,"destBytes":0,"feedId":2521,"totalSpendMs":1573,"convertSpendMs":0,"createdTime":"2020-09-05 14:42:45","host":"us-026*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F%E9%80%89%E5%9E%8B%EF%BC%8C%E8%BF%99%E7%AF%87%E4%B8%8D%E5%8F%AF%E4%B8%8D%E8%AF%BB%EF%BC%81","linkMd5ListStr":"6a42342f60ebb0da2b1b08b2839c245f","extra22GetBytesInfo":"2、Referer字段 ： http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F%E9%80%89%E5%9E%8B%EF%BC%8C%E8%BF%99%E7%AF%87%E4%B8%8D%E5%8F%AF%E4%B8%8D%E8%AF%BB%EF%BC%81","extra23historyStatusCode":[403,403],"destSize":"0","sourceSize":"0"},null,null,null,null,null,null,null,null,null,{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/AaabKZjib2ka9iaZLtmsuQ0d0IQe2qg9NS7f4mPicXtHdjaoMnWezpjOaE8HcF9RI1Ham0F4lGpTdj9cHP5qhjD8A/640?wx_fmt=png","sourceStatusCode":403,"sourceBytes":0,"destBytes":0,"feedId":2521,"totalSpendMs":961,"convertSpendMs":0,"createdTime":"2020-09-05 14:41:46","host":"us-028*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F%E9%80%89%E5%9E%8B%EF%BC%8C%E8%BF%99%E7%AF%87%E4%B8%8D%E5%8F%AF%E4%B8%8D%E8%AF%BB%EF%BC%81","linkMd5ListStr":"6a42342f60ebb0da2b1b08b2839c245f","extra22GetBytesInfo":"2、Referer字段 ： http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F%E9%80%89%E5%9E%8B%EF%BC%8C%E8%BF%99%E7%AF%87%E4%B8%8D%E5%8F%AF%E4%B8%8D%E8%AF%BB%EF%BC%81","extra23historyStatusCode":[403,403],"destSize":"0","sourceSize":"0"},null,{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQxwz7UiaI2ib3d4D1CWXCibLukXs4dGIx4EzTgXCCw7upia7lZGLE8a74NFHRYXUV8sReiaJNibIic4FJ2eQ/640?wx_fmt=png","sourceStatusCode":403,"sourceBytes":0,"destBytes":0,"feedId":2521,"totalSpendMs":3127,"convertSpendMs":0,"createdTime":"2020-09-05 14:41:46","host":"us-028*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+Kafka%E5%92%8CRocketMQ%E5%BA%95%E5%B1%82%E5%AD%98%E5%82%A8%E4%B9%8B%E9%82%A3%E4%BA%9B%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E4%BA%8B","linkMd5ListStr":"29acc60b96a03ee0bc8659115e702065","extra22GetBytesInfo":"2、Referer字段 ： http://weixin.sogou.com/weixin?type=2&query=ImportNew+Kafka%E5%92%8CRocketMQ%E5%BA%95%E5%B1%82%E5%AD%98%E5%82%A8%E4%B9%8B%E9%82%A3%E4%BA%9B%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E4%BA%8B","extra23historyStatusCode":[403,403],"destSize":"0","sourceSize":"0"},null,{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/libYRuvULTdWACbPmP3IthmrrO6mkE1Ytib584dicNPGrOHIkL7ZH64MpcQdlyfZnXYH83PnHS7B2V4osQel98icYw/640?wx_fmt=png","sourceStatusCode":403,"sourceBytes":0,"destBytes":0,"feedId":2521,"totalSpendMs":4557,"convertSpendMs":0,"createdTime":"2020-09-05 14:41:46","host":"us-53*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E7%BB%99%E5%A5%B3%E5%90%8C%E4%BA%8B%E8%AE%B2%E5%AE%8C%E4%BB%A3%E7%90%86%E5%90%8E%EF%BC%8C%E5%A5%B3%E5%90%8C%E4%BA%8B%E8%AF%B4%EF%BC%9A%E4%BD%A0%E5%A5%BD%E6%A3%92%E5%93%A6","linkMd5ListStr":"5497d1aebd41da8f15406ca3cc375cda","extra22GetBytesInfo":"2、Referer字段 ： http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E7%BB%99%E5%A5%B3%E5%90%8C%E4%BA%8B%E8%AE%B2%E5%AE%8C%E4%BB%A3%E7%90%86%E5%90%8E%EF%BC%8C%E5%A5%B3%E5%90%8C%E4%BA%8B%E8%AF%B4%EF%BC%9A%E4%BD%A0%E5%A5%BD%E6%A3%92%E5%93%A6","extra23historyStatusCode":[403,403],"destSize":"0","sourceSize":"0"},null,{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQzHY4nRl5eF5qjEKWumNas1JnGA35dEicpTGq8MXrkxcAoxsM96DoELwRAVxNReXvcGotDoOZX79sg/640?wx_fmt=png","sourceStatusCode":403,"sourceBytes":0,"destBytes":0,"feedId":2521,"totalSpendMs":3997,"convertSpendMs":0,"createdTime":"2020-09-05 14:42:55","host":"us-030*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+2020%EF%BC%8C%E5%90%8E%E7%AB%AF%E8%B7%B3%E6%A7%BD%E6%80%82%E4%BA%86%E5%90%97%3F","linkMd5ListStr":"46a214c22fa582009d96cf716d99afc8","extra22GetBytesInfo":"2、Referer字段 ： http://weixin.sogou.com/weixin?type=2&query=ImportNew+2020%EF%BC%8C%E5%90%8E%E7%AB%AF%E8%B7%B3%E6%A7%BD%E6%80%82%E4%BA%86%E5%90%97%3F","extra23historyStatusCode":[403,403],"destSize":"0","sourceSize":"0"},null,null,{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/AaabKZjib2kbP23ApP3flYOGcibWAN9beXEPYBTtUc0EibyZmkvQFEBCcyngySBhS0TL6UBZep9R2zVaibV2x8KbZA/640?wx_fmt=png","sourceStatusCode":403,"sourceBytes":0,"destBytes":0,"feedId":2521,"totalSpendMs":1923,"convertSpendMs":0,"createdTime":"2020-09-05 14:43:00","host":"europe-25*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F%E9%80%89%E5%9E%8B%EF%BC%8C%E8%BF%99%E7%AF%87%E4%B8%8D%E5%8F%AF%E4%B8%8D%E8%AF%BB%EF%BC%81","linkMd5ListStr":"6a42342f60ebb0da2b1b08b2839c245f","extra22GetBytesInfo":"2、Referer字段 ： http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F%E9%80%89%E5%9E%8B%EF%BC%8C%E8%BF%99%E7%AF%87%E4%B8%8D%E5%8F%AF%E4%B8%8D%E8%AF%BB%EF%BC%81","extra23historyStatusCode":[403,403],"destSize":"0","sourceSize":"0"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63rYZKuqrxyJxXhA7fcrnriadnQe783YAicN9iblrVWbibULJnTtoqW4zHWibQ/640?wx_fmt=png","sourceStatusCode":200,"destWidth":1080,"destHeight":540,"sourceBytes":33451,"destBytes":25138,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":20162,"convertSpendMs":19,"createdTime":"2020-09-05 14:42:42","host":"us-036*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+2w%E5%AD%97%C2%A0%2B%C2%A040%E5%BC%A0%E5%9B%BE%E5%B8%A6%E4%BD%A0%E5%8F%82%E9%80%8F%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%EF%BC%81","linkMd5ListStr":"38aa4d626245d529fa80f57f64cc9662","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn5/contents/2020/09/05/06-43-03-045_fbec147ee55af127.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 06:43:03 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["AC64:6EFF:69B47B:B5CFCB:5F533376"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599288353"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn5/contents/2020/09/05/06-43-03-045_fbec147ee55af127.webp","historyStatusCode":[],"spendMs":42},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"24.5 KB","compressRate":"75.1%","sourceSize":"32.7 KB"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63rYZKuqrxyJxXhA7fcrnriadnQe783YAicN9iblrVWbibULJnTtoqW4zHWibQ/640?wx_fmt=png","sourceStatusCode":200,"destWidth":1080,"destHeight":540,"sourceBytes":33451,"destBytes":25138,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":1317,"convertSpendMs":18,"createdTime":"2020-09-05 14:43:03","host":"europe63*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+2w%E5%AD%97%C2%A0%2B%C2%A040%E5%BC%A0%E5%9B%BE%E5%B8%A6%E4%BD%A0%E5%8F%82%E9%80%8F%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%EF%BC%81","linkMd5ListStr":"38aa4d626245d529fa80f57f64cc9662","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn5/contents/2020/09/05/06-43-04-277_fbec147ee55af127.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 06:43:04 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["974C:2C9C:684DA55:7DDD33E:5F533375"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599288353"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn5/contents/2020/09/05/06-43-04-277_fbec147ee55af127.webp","historyStatusCode":[],"spendMs":250},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"24.5 KB","compressRate":"75.1%","sourceSize":"32.7 KB"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63rHJT84HDiajX503qdwTRPXHSa467jxJyHic4umHwHH8WoI7G0ibTu4rKbA/640?wx_fmt=png","sourceStatusCode":200,"destWidth":1080,"destHeight":708,"sourceBytes":41307,"destBytes":16896,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":6126,"convertSpendMs":30,"createdTime":"2020-09-05 14:42:58","host":"europe-23*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+2w%E5%AD%97%C2%A0%2B%C2%A040%E5%BC%A0%E5%9B%BE%E5%B8%A6%E4%BD%A0%E5%8F%82%E9%80%8F%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%EF%BC%81","linkMd5ListStr":"38aa4d626245d529fa80f57f64cc9662","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn57/contents/2020/09/05/06-43-04-673_ff6cd2591c242bca.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 06:43:04 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["D7FE:B35A:1359AE7C:175F69C9:5F533375"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599288353"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn57/contents/2020/09/05/06-43-04-673_ff6cd2591c242bca.webp","historyStatusCode":[],"spendMs":170},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"16.5 KB","compressRate":"40.9%","sourceSize":"40.3 KB"},null,null,{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQxwz7UiaI2ib3d4D1CWXCibLukXs4dGIx4EzTgXCCw7upia7lZGLE8a74NFHRYXUV8sReiaJNibIic4FJ2eQ/640?wx_fmt=png","sourceStatusCode":200,"destWidth":1080,"destHeight":646,"sourceBytes":472143,"destBytes":50882,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":21329,"convertSpendMs":57,"createdTime":"2020-09-05 14:42:51","host":"us-55*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+Kafka%E5%92%8CRocketMQ%E5%BA%95%E5%B1%82%E5%AD%98%E5%82%A8%E4%B9%8B%E9%82%A3%E4%BA%9B%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E4%BA%8B","linkMd5ListStr":"29acc60b96a03ee0bc8659115e702065","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn69/contents/2020/09/05/06-43-12-681_49817ecddaf837bf.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 06:43:12 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["E3FE:0153:10A9EA2:1CAE1E5:5F533380"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599288353"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn69/contents/2020/09/05/06-43-12-681_49817ecddaf837bf.webp","historyStatusCode":[],"spendMs":60},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"49.7 KB","compressRate":"10.8%","sourceSize":"461.1 KB"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQxwz7UiaI2ib3d4D1CWXCibLuk5S1ibjFrBPLEbBxHkzxY2KvbXPpeZg2BGlkib1ZC7g1uHVauKUDMpdRA/640?wx_fmt=png","sourceStatusCode":403,"sourceBytes":0,"destBytes":0,"feedId":2521,"totalSpendMs":4102,"convertSpendMs":0,"createdTime":"2020-09-05 14:43:11","host":"us-038*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+Kafka%E5%92%8CRocketMQ%E5%BA%95%E5%B1%82%E5%AD%98%E5%82%A8%E4%B9%8B%E9%82%A3%E4%BA%9B%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E4%BA%8B","linkMd5ListStr":"29acc60b96a03ee0bc8659115e702065","extra22GetBytesInfo":"2、Referer字段 ： http://weixin.sogou.com/weixin?type=2&query=ImportNew+Kafka%E5%92%8CRocketMQ%E5%BA%95%E5%B1%82%E5%AD%98%E5%82%A8%E4%B9%8B%E9%82%A3%E4%BA%9B%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E4%BA%8B","extra23historyStatusCode":[403,403],"destSize":"0","sourceSize":"0"},null,null,null,null,{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQxwz7UiaI2ib3d4D1CWXCibLukeSsuS7xYFgWKSd6BAsn3JtDFdXxatcsr5Jo0rOAWG8t51FMeCRVicfA/640?wx_fmt=png","sourceStatusCode":403,"sourceBytes":0,"destBytes":0,"feedId":2521,"totalSpendMs":1695,"convertSpendMs":0,"createdTime":"2020-09-05 14:42:15","host":"europe67*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+Kafka%E5%92%8CRocketMQ%E5%BA%95%E5%B1%82%E5%AD%98%E5%82%A8%E4%B9%8B%E9%82%A3%E4%BA%9B%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E4%BA%8B","linkMd5ListStr":"29acc60b96a03ee0bc8659115e702065","extra22GetBytesInfo":"2、Referer字段 ： http://weixin.sogou.com/weixin?type=2&query=ImportNew+Kafka%E5%92%8CRocketMQ%E5%BA%95%E5%B1%82%E5%AD%98%E5%82%A8%E4%B9%8B%E9%82%A3%E4%BA%9B%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E4%BA%8B","extra23historyStatusCode":[403,403],"destSize":"0","sourceSize":"0"},null,null,null,null,{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63rpVpFuyqd9HsaYFgWSVq5d6kCDGRp0ECS7W8g7PcBKD1oBw5JxibLR3g/640?wx_fmt=png","sourceStatusCode":403,"sourceBytes":0,"destBytes":0,"feedId":2521,"totalSpendMs":1947,"convertSpendMs":0,"createdTime":"2020-09-05 14:42:33","host":"us-017*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+2w%E5%AD%97%C2%A0%2B%C2%A040%E5%BC%A0%E5%9B%BE%E5%B8%A6%E4%BD%A0%E5%8F%82%E9%80%8F%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%EF%BC%81","linkMd5ListStr":"38aa4d626245d529fa80f57f64cc9662","extra22GetBytesInfo":"2、Referer字段 ： http://weixin.sogou.com/weixin?type=2&query=ImportNew+2w%E5%AD%97%C2%A0%2B%C2%A040%E5%BC%A0%E5%9B%BE%E5%B8%A6%E4%BD%A0%E5%8F%82%E9%80%8F%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%EF%BC%81","extra23historyStatusCode":[403,403],"destSize":"0","sourceSize":"0"},null,null,null,null,null,null,null,{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/AaabKZjib2ka9iaZLtmsuQ0d0IQe2qg9NS7f4mPicXtHdjaoMnWezpjOaE8HcF9RI1Ham0F4lGpTdj9cHP5qhjD8A/640?wx_fmt=png","sourceStatusCode":403,"sourceBytes":0,"destBytes":0,"feedId":2521,"totalSpendMs":961,"convertSpendMs":0,"createdTime":"2020-09-05 14:41:46","host":"us-028*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F%E9%80%89%E5%9E%8B%EF%BC%8C%E8%BF%99%E7%AF%87%E4%B8%8D%E5%8F%AF%E4%B8%8D%E8%AF%BB%EF%BC%81","linkMd5ListStr":"6a42342f60ebb0da2b1b08b2839c245f","extra22GetBytesInfo":"2、Referer字段 ： http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F%E9%80%89%E5%9E%8B%EF%BC%8C%E8%BF%99%E7%AF%87%E4%B8%8D%E5%8F%AF%E4%B8%8D%E8%AF%BB%EF%BC%81","extra23historyStatusCode":[403,403],"destSize":"0","sourceSize":"0"},null,null,null,null,null,null,null,null,null,null,null,null,{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQxwz7UiaI2ib3d4D1CWXCibLukXs4dGIx4EzTgXCCw7upia7lZGLE8a74NFHRYXUV8sReiaJNibIic4FJ2eQ/640?wx_fmt=png","sourceStatusCode":200,"destWidth":1080,"destHeight":646,"sourceBytes":472143,"destBytes":50882,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":21329,"convertSpendMs":57,"createdTime":"2020-09-05 14:42:51","host":"us-55*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+Kafka%E5%92%8CRocketMQ%E5%BA%95%E5%B1%82%E5%AD%98%E5%82%A8%E4%B9%8B%E9%82%A3%E4%BA%9B%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E4%BA%8B","linkMd5ListStr":"29acc60b96a03ee0bc8659115e702065","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn69/contents/2020/09/05/06-43-12-681_49817ecddaf837bf.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 06:43:12 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["E3FE:0153:10A9EA2:1CAE1E5:5F533380"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599288353"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn69/contents/2020/09/05/06-43-12-681_49817ecddaf837bf.webp","historyStatusCode":[],"spendMs":60},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"49.7 KB","compressRate":"10.8%","sourceSize":"461.1 KB"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQxwz7UiaI2ib3d4D1CWXCibLuk5S1ibjFrBPLEbBxHkzxY2KvbXPpeZg2BGlkib1ZC7g1uHVauKUDMpdRA/640?wx_fmt=png","sourceStatusCode":403,"sourceBytes":0,"destBytes":0,"feedId":2521,"totalSpendMs":4102,"convertSpendMs":0,"createdTime":"2020-09-05 14:43:11","host":"us-038*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+Kafka%E5%92%8CRocketMQ%E5%BA%95%E5%B1%82%E5%AD%98%E5%82%A8%E4%B9%8B%E9%82%A3%E4%BA%9B%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E4%BA%8B","linkMd5ListStr":"29acc60b96a03ee0bc8659115e702065","extra22GetBytesInfo":"2、Referer字段 ： http://weixin.sogou.com/weixin?type=2&query=ImportNew+Kafka%E5%92%8CRocketMQ%E5%BA%95%E5%B1%82%E5%AD%98%E5%82%A8%E4%B9%8B%E9%82%A3%E4%BA%9B%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E4%BA%8B","extra23historyStatusCode":[403,403],"destSize":"0","sourceSize":"0"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQxwz7UiaI2ib3d4D1CWXCibLukR91lICNa4ScNCqiaic7ovU3mSwQsxhicgKq3FX8zzHPRQaZpNyfibxyFWA/640?wx_fmt=png","sourceStatusCode":200,"destWidth":986,"destHeight":796,"sourceBytes":484166,"destBytes":40120,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":9996,"convertSpendMs":47,"createdTime":"2020-09-05 14:44:08","host":"us-010*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+Kafka%E5%92%8CRocketMQ%E5%BA%95%E5%B1%82%E5%AD%98%E5%82%A8%E4%B9%8B%E9%82%A3%E4%BA%9B%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E4%BA%8B","linkMd5ListStr":"29acc60b96a03ee0bc8659115e702065","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn3/contents/2020/09/05/06-44-18-631_5ac2a95e65fb750a.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 06:44:18 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["A9FC:474F:3D7E89:8AF478:5F5333BF"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599288348"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn3/contents/2020/09/05/06-44-18-631_5ac2a95e65fb750a.webp","historyStatusCode":[],"spendMs":44},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"39.2 KB","compressRate":"8.3%","sourceSize":"472.8 KB"},null,{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQxwz7UiaI2ib3d4D1CWXCibLukeSsuS7xYFgWKSd6BAsn3JtDFdXxatcsr5Jo0rOAWG8t51FMeCRVicfA/640?wx_fmt=png","sourceStatusCode":403,"sourceBytes":0,"destBytes":0,"feedId":2521,"totalSpendMs":1695,"convertSpendMs":0,"createdTime":"2020-09-05 14:42:15","host":"europe67*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+Kafka%E5%92%8CRocketMQ%E5%BA%95%E5%B1%82%E5%AD%98%E5%82%A8%E4%B9%8B%E9%82%A3%E4%BA%9B%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E4%BA%8B","linkMd5ListStr":"29acc60b96a03ee0bc8659115e702065","extra22GetBytesInfo":"2、Referer字段 ： http://weixin.sogou.com/weixin?type=2&query=ImportNew+Kafka%E5%92%8CRocketMQ%E5%BA%95%E5%B1%82%E5%AD%98%E5%82%A8%E4%B9%8B%E9%82%A3%E4%BA%9B%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E4%BA%8B","extra23historyStatusCode":[403,403],"destSize":"0","sourceSize":"0"},null,null,null,null,null,{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQxwz7UiaI2ib3d4D1CWXCibLuk5S1ibjFrBPLEbBxHkzxY2KvbXPpeZg2BGlkib1ZC7g1uHVauKUDMpdRA/640?wx_fmt=png","sourceStatusCode":403,"sourceBytes":0,"destBytes":0,"feedId":2521,"totalSpendMs":4102,"convertSpendMs":0,"createdTime":"2020-09-05 14:43:11","host":"us-038*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+Kafka%E5%92%8CRocketMQ%E5%BA%95%E5%B1%82%E5%AD%98%E5%82%A8%E4%B9%8B%E9%82%A3%E4%BA%9B%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E4%BA%8B","linkMd5ListStr":"29acc60b96a03ee0bc8659115e702065","extra22GetBytesInfo":"2、Referer字段 ： http://weixin.sogou.com/weixin?type=2&query=ImportNew+Kafka%E5%92%8CRocketMQ%E5%BA%95%E5%B1%82%E5%AD%98%E5%82%A8%E4%B9%8B%E9%82%A3%E4%BA%9B%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E4%BA%8B","extra23historyStatusCode":[403,403],"destSize":"0","sourceSize":"0"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQxwz7UiaI2ib3d4D1CWXCibLukeSsuS7xYFgWKSd6BAsn3JtDFdXxatcsr5Jo0rOAWG8t51FMeCRVicfA/640?wx_fmt=png","sourceStatusCode":403,"sourceBytes":0,"destBytes":0,"feedId":2521,"totalSpendMs":1695,"convertSpendMs":0,"createdTime":"2020-09-05 14:42:15","host":"europe67*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+Kafka%E5%92%8CRocketMQ%E5%BA%95%E5%B1%82%E5%AD%98%E5%82%A8%E4%B9%8B%E9%82%A3%E4%BA%9B%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E4%BA%8B","linkMd5ListStr":"29acc60b96a03ee0bc8659115e702065","extra22GetBytesInfo":"2、Referer字段 ： http://weixin.sogou.com/weixin?type=2&query=ImportNew+Kafka%E5%92%8CRocketMQ%E5%BA%95%E5%B1%82%E5%AD%98%E5%82%A8%E4%B9%8B%E9%82%A3%E4%BA%9B%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E4%BA%8B","extra23historyStatusCode":[403,403],"destSize":"0","sourceSize":"0"}],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://us-032.herokuapp.com/":{"failCount":2,"successCount":0,"resultList":[null,null]},"http://us-002.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[405]},"http://us-007.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]},"http://us-028.herokuapp.com/":{"failCount":2,"successCount":0,"resultList":[403,403]},"http://us-52.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-020.herokuapp.com/":{"failCount":1,"successCount":1,"resultList":[405,200]},"http://us-025.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe69.herokuapp.com/":{"failCount":2,"successCount":1,"resultList":[200,null,null]},"http://us-54.herokuapp.com/":{"failCount":3,"successCount":2,"resultList":[200,null,200,null,null]},"http://us-004.herokuapp.com/":{"failCount":1,"successCount":1,"resultList":[405,200]},"http://europe64.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]},"http://europe-22.herokuapp.com/":{"failCount":1,"successCount":2,"resultList":[200,200,null]},"http://us-016.herokuapp.com/":{"failCount":1,"successCount":2,"resultList":[200,200,null]},"http://us-013.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[403]},"http://us-039.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]},"http://europe-24.herokuapp.com/":{"failCount":3,"successCount":0,"resultList":[null,null,null]},"http://us-55.herokuapp.com/":{"failCount":0,"successCount":4,"resultList":[200,200,200,200]},"http://europe61.herokuapp.com/":{"failCount":5,"successCount":2,"resultList":[200,200,null,null,null,null,403]},"http://us-009.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[403]},"http://us-030.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[403]},"http://us-026.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[403]},"http://europe-25.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[403]},"http://us-031.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]},"http://europe62.herokuapp.com/":{"failCount":2,"successCount":0,"resultList":[403,403]},"http://us-014.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]},"http://us-027.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]},"http://europe-56.herokuapp.com/":{"failCount":1,"successCount":2,"resultList":[200,null,200]},"http://us-53.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[403]},"http://europe68.herokuapp.com/":{"failCount":2,"successCount":0,"resultList":[405,405]},"http://europe63.herokuapp.com/":{"failCount":0,"successCount":6,"resultList":[200,200,200,200,200,200]},"http://us-015.herokuapp.com/":{"failCount":1,"successCount":1,"resultList":[200,null]},"http://europe-60.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]},"http://us-024.herokuapp.com/":{"failCount":1,"successCount":1,"resultList":[null,200]},"http://europe70.herokuapp.com/":{"failCount":2,"successCount":3,"resultList":[200,200,null,null,200]},"http://us-038.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[403]},"http://europe-23.herokuapp.com/":{"failCount":4,"successCount":5,"resultList":[200,200,200,200,200,null,null,null,null]},"http://us-017.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[403]},"http://us-033.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[405]},"http://us-003.herokuapp.com/":{"failCount":3,"successCount":5,"resultList":[200,200,200,200,200,null,null,null]},"http://us-008.herokuapp.com/":{"failCount":4,"successCount":0,"resultList":[null,null,403,403]},"http://us-029.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[403]},"http://us-012.herokuapp.com/":{"failCount":1,"successCount":2,"resultList":[200,200,null]},"http://us-018.herokuapp.com/":{"failCount":1,"successCount":1,"resultList":[200,null]},"http://europe65.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[405]},"http://us-021.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]},"http://europe-58.herokuapp.com/":{"failCount":2,"successCount":0,"resultList":[405,403]},"http://us-034.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]},"http://us-035.herokuapp.com/":{"failCount":2,"successCount":3,"resultList":[200,200,200,null,403]},"http://europe66.herokuapp.com/":{"failCount":1,"successCount":2,"resultList":[200,200,null]},"http://us-022.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]},"http://us-006.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]},"http://us-036.herokuapp.com/":{"failCount":4,"successCount":1,"resultList":[405,200,null,403,null]},"http://us-019.herokuapp.com/":{"failCount":6,"successCount":3,"resultList":[200,200,200,null,null,403,null,403,null]},"http://europe-59.herokuapp.com/":{"failCount":1,"successCount":1,"resultList":[200,405]},"http://us-010.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://europe67.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[403]},"http://us-51.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]},"http://us-023.herokuapp.com/":{"failCount":2,"successCount":0,"resultList":[null,403]},"http://us-040.herokuapp.com/":{"failCount":2,"successCount":0,"resultList":[null,null]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"http://img.100weidu.com/mmbiz_jpg/eZzl4LXykQy6Uwm3SGUMYic8R3o8yalAkUda3dAyN0a0K9NKdEp1mvgmt2AeE0LdIeCRibicOpZ2GMetD4iaMvwo4g?imageView2/1/w/600","sourceStatusCode":200,"destWidth":600,"destHeight":446,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn29@2020_6/2020/09/05/06-41-44-925_c8aece0881eaf3f9.webp","sourceBytes":31795,"destBytes":19620,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":1005,"convertSpendMs":16,"createdTime":"2020-09-05 14:41:44","host":"europe-24*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E7%BB%99%E5%A5%B3%E5%90%8C%E4%BA%8B%E8%AE%B2%E5%AE%8C%E4%BB%A3%E7%90%86%E5%90%8E%EF%BC%8C%E5%A5%B3%E5%90%8C%E4%BA%8B%E8%AF%B4%EF%BC%9A%E4%BD%A0%E5%A5%BD%E6%A3%92%E5%93%A6","linkMd5ListStr":"5497d1aebd41da8f15406ca3cc375cda,5497d1aebd41da8f15406ca3cc375cda","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"19.2 KB","compressRate":"61.7%","sourceSize":"31 KB"},{"code":1,"isDone":false,"source":"http://img.100weidu.com/mmbiz_jpg/eZzl4LXykQyWUPN1VNmQFtIuJ0Qh3xCf4x7ct9OzFicm1JVDib0MA7D47aGfvZknO0giccjJ4iaMHqyOHTquo4zcLQ?imageView2/1/w/600","sourceStatusCode":200,"destWidth":287,"destHeight":288,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn25@2020_1/2020/09/05/06-41-45-210_1f6dd317a40a3e75.webp","sourceBytes":10325,"destBytes":9560,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":1260,"convertSpendMs":8,"createdTime":"2020-09-05 14:41:44","host":"us-012*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+Kafka%E5%92%8CRocketMQ%E5%BA%95%E5%B1%82%E5%AD%98%E5%82%A8%E4%B9%8B%E9%82%A3%E4%BA%9B%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E4%BA%8B","linkMd5ListStr":"29acc60b96a03ee0bc8659115e702065,29acc60b96a03ee0bc8659115e702065","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"9.3 KB","compressRate":"92.6%","sourceSize":"10.1 KB"},{"code":1,"isDone":false,"source":"http://img.100weidu.com/mmbiz_jpg/eZzl4LXykQy6Uwm3SGUMYic8R3o8yalAkTic5GPwR7jkY01P2ugFCFjn7gxm7eLYLfzIibibDINiaP7Xgh5Vy6APrzg?imageView2/1/w/600","sourceStatusCode":200,"destWidth":600,"destHeight":438,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn34@2020_1/2020/09/05/06-41-44-922_936a6d18c9646dae.webp","sourceBytes":26413,"destBytes":21876,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":1140,"convertSpendMs":11,"createdTime":"2020-09-05 14:41:44","host":"europe62*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F%E9%80%89%E5%9E%8B%EF%BC%8C%E8%BF%99%E7%AF%87%E4%B8%8D%E5%8F%AF%E4%B8%8D%E8%AF%BB%EF%BC%81","linkMd5ListStr":"6a42342f60ebb0da2b1b08b2839c245f,6a42342f60ebb0da2b1b08b2839c245f","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"21.4 KB","compressRate":"82.8%","sourceSize":"25.8 KB"},{"code":1,"isDone":false,"source":"http://img.100weidu.com/mmbiz_jpg/eZzl4LXykQzHY4nRl5eF5qjEKWumNas13Zibs8EiaLpykrmoLpLGymBtgQNhgnsfsys5bpVAHHNmCxnQQovPlibxQ?imageView2/1/w/600","sourceStatusCode":200,"destWidth":600,"destHeight":298,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn18@2020_2/2020/09/05/06-41-45-317_ef6e3e40aea5c4d3.webp","sourceBytes":17192,"destBytes":12030,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":1403,"convertSpendMs":10,"createdTime":"2020-09-05 14:41:44","host":"us-036*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+2020%EF%BC%8C%E5%90%8E%E7%AB%AF%E8%B7%B3%E6%A7%BD%E6%80%82%E4%BA%86%E5%90%97%3F","linkMd5ListStr":"46a214c22fa582009d96cf716d99afc8,46a214c22fa582009d96cf716d99afc8","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"11.7 KB","compressRate":"70%","sourceSize":"16.8 KB"},{"code":1,"isDone":false,"source":"http://img.100weidu.com/mmbiz_jpg/eZzl4LXykQy6Uwm3SGUMYic8R3o8yalAkB1Yc1mJKSqtUPibDZ2NHcP3T84HbrQrtJ7DVnD1iabVicA7zBAff0TBbg?imageView2/1/w/600","sourceStatusCode":200,"destWidth":500,"destHeight":213,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn21@2020_1/2020/09/05/06-41-45-935_dd2c260514abc71d.webp","sourceBytes":15485,"destBytes":13174,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":2014,"convertSpendMs":13,"createdTime":"2020-09-05 14:41:44","host":"us-024*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+2w%E5%AD%97%C2%A0%2B%C2%A040%E5%BC%A0%E5%9B%BE%E5%B8%A6%E4%BD%A0%E5%8F%82%E9%80%8F%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%EF%BC%81","linkMd5ListStr":"38aa4d626245d529fa80f57f64cc9662,38aa4d626245d529fa80f57f64cc9662","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"12.9 KB","compressRate":"85.1%","sourceSize":"15.1 KB"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/hObz0jenxicASdS5GkHbY93pDYlSmjTL0YQI64DXs9AhkicAJuFic02sdeMaJh71DoFXy2MF1DacRRYfsOpOmicdUw/640?wx_fmt=png","sourceStatusCode":200,"destWidth":588,"destHeight":170,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn11@2020_4/2020/09/05/06-41-59-080_ab53110dfc95f556.webp","sourceBytes":46981,"destBytes":19050,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":13274,"convertSpendMs":9,"createdTime":"2020-09-05 14:41:46","host":"us-003*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+2020%EF%BC%8C%E5%90%8E%E7%AB%AF%E8%B7%B3%E6%A7%BD%E6%80%82%E4%BA%86%E5%90%97%3F","linkMd5ListStr":"46a214c22fa582009d96cf716d99afc8","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"18.6 KB","compressRate":"40.5%","sourceSize":"45.9 KB"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/AaabKZjib2kbP23ApP3flYOGcibWAN9beX0d2xSXvQWP720RgfcvBTb9TibibIaEu3726EpD9oBR5qVOJpVYpjRG0w/640?wx_fmt=png","sourceStatusCode":200,"destWidth":1080,"destHeight":759,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn98@2020_5/2020/09/05/06-42-03-184_962d926f4b5b9ffa.webp","sourceBytes":127153,"destBytes":30982,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":16013,"convertSpendMs":38,"createdTime":"2020-09-05 14:41:48","host":"europe-23*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F%E9%80%89%E5%9E%8B%EF%BC%8C%E8%BF%99%E7%AF%87%E4%B8%8D%E5%8F%AF%E4%B8%8D%E8%AF%BB%EF%BC%81","linkMd5ListStr":"6a42342f60ebb0da2b1b08b2839c245f","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"30.3 KB","compressRate":"24.4%","sourceSize":"124.2 KB"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/2A8tXicCG8ylbWIGfdoDED35IRRySQZTXUkJ1eop9MHApzFibKnOo0diboXpl0rmS5mH78YJhsWQv0dhv718A6kUA/640?wx_fmt=jpeg","sourceStatusCode":200,"destWidth":600,"destHeight":550,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn61@2020_1/2020/09/05/06-42-03-580_f93d0239d4369c75.webp","sourceBytes":37143,"destBytes":31608,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":15778,"convertSpendMs":13,"createdTime":"2020-09-05 14:41:48","host":"europe69*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+2w%E5%AD%97%C2%A0%2B%C2%A040%E5%BC%A0%E5%9B%BE%E5%B8%A6%E4%BD%A0%E5%8F%82%E9%80%8F%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%EF%BC%81","linkMd5ListStr":"5497d1aebd41da8f15406ca3cc375cda,29acc60b96a03ee0bc8659115e702065,6a42342f60ebb0da2b1b08b2839c245f,38aa4d626245d529fa80f57f64cc9662","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"30.9 KB","compressRate":"85.1%","sourceSize":"36.3 KB"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63ruogUQpLB3XRtneUBdtzMR5jMLS7Ob4J6Qt8HXO6kiaPdzeeGg1xHCAw/640?wx_fmt=png","sourceStatusCode":200,"destWidth":1080,"destHeight":307,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn46@2020_5/2020/09/05/06-42-04-431_90e7514c84828af3.webp","sourceBytes":57314,"destBytes":14666,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":18537,"convertSpendMs":17,"createdTime":"2020-09-05 14:41:46","host":"us-016*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+2w%E5%AD%97%C2%A0%2B%C2%A040%E5%BC%A0%E5%9B%BE%E5%B8%A6%E4%BD%A0%E5%8F%82%E9%80%8F%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%EF%BC%81","linkMd5ListStr":"38aa4d626245d529fa80f57f64cc9662","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"14.3 KB","compressRate":"25.6%","sourceSize":"56 KB"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/libYRuvULTdWACbPmP3IthmrrO6mkE1YtQichr1EH18BVNtTRXSrAYnjKmyIUnUVuDQPxcF1E1PdZTR9w0d8icS4Q/640?wx_fmt=png","sourceStatusCode":200,"destWidth":666,"destHeight":243,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn49@2020_6/2020/09/05/06-42-06-513_2b4d5629455105ef.webp","sourceBytes":29895,"destBytes":14250,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":20566,"convertSpendMs":12,"createdTime":"2020-09-05 14:41:46","host":"us-004*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E7%BB%99%E5%A5%B3%E5%90%8C%E4%BA%8B%E8%AE%B2%E5%AE%8C%E4%BB%A3%E7%90%86%E5%90%8E%EF%BC%8C%E5%A5%B3%E5%90%8C%E4%BA%8B%E8%AF%B4%EF%BC%9A%E4%BD%A0%E5%A5%BD%E6%A3%92%E5%93%A6","linkMd5ListStr":"5497d1aebd41da8f15406ca3cc375cda","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"13.9 KB","compressRate":"47.7%","sourceSize":"29.2 KB"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/AaabKZjib2kbP23ApP3flYOGcibWAN9beXpypqVKYdIdNhGaIl7aU6icwalExD01ESAsjU62ia9tup3Iw4tbuTjYBw/640?wx_fmt=png","sourceStatusCode":200,"destWidth":1080,"destHeight":536,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn37@2020_5/2020/09/05/06-42-11-334_6e026278fabe73eb.webp","sourceBytes":160943,"destBytes":39552,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":25784,"convertSpendMs":27,"createdTime":"2020-09-05 14:41:46","host":"europe70*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F%E9%80%89%E5%9E%8B%EF%BC%8C%E8%BF%99%E7%AF%87%E4%B8%8D%E5%8F%AF%E4%B8%8D%E8%AF%BB%EF%BC%81","linkMd5ListStr":"6a42342f60ebb0da2b1b08b2839c245f","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"38.6 KB","compressRate":"24.6%","sourceSize":"157.2 KB"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63r2BYIOAm2YSVic6kOko0DoJVTavaLQg2KHYiahsXjuL8vf5shPeoSUa6A/640?wx_fmt=png","sourceStatusCode":200,"destWidth":1080,"destHeight":146,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn58@2020_5/2020/09/05/06-42-14-761_1a7a48eb2fd7c14f.webp","sourceBytes":22466,"destBytes":7294,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":2891,"convertSpendMs":8,"createdTime":"2020-09-05 14:42:12","host":"europe70*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+2w%E5%AD%97%C2%A0%2B%C2%A040%E5%BC%A0%E5%9B%BE%E5%B8%A6%E4%BD%A0%E5%8F%82%E9%80%8F%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%EF%BC%81","linkMd5ListStr":"38aa4d626245d529fa80f57f64cc9662","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"7.1 KB","compressRate":"32.5%","sourceSize":"21.9 KB"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/libYRuvULTdWACbPmP3IthmrrO6mkE1YtAQ6XCSL9wCEXH2jSAgAhlMjsnhL7YBHbBuf2n4Avmh5wXhuM9xmjhw/640?wx_fmt=png","sourceStatusCode":200,"destWidth":916,"destHeight":497,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn82@2020_6/2020/09/05/06-42-15-309_ee9d3a4ef76cd17a.webp","sourceBytes":65815,"destBytes":29848,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":29412,"convertSpendMs":23,"createdTime":"2020-09-05 14:41:46","host":"europe66*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E7%BB%99%E5%A5%B3%E5%90%8C%E4%BA%8B%E8%AE%B2%E5%AE%8C%E4%BB%A3%E7%90%86%E5%90%8E%EF%BC%8C%E5%A5%B3%E5%90%8C%E4%BA%8B%E8%AF%B4%EF%BC%9A%E4%BD%A0%E5%A5%BD%E6%A3%92%E5%93%A6","linkMd5ListStr":"5497d1aebd41da8f15406ca3cc375cda","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"29.1 KB","compressRate":"45.4%","sourceSize":"64.3 KB"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63rNscVGllMQ8mNBDkgHrqBfy2dib05ms41CG6oFz3ZWKibNxWZE2Mvl43A/640?wx_fmt=png","sourceStatusCode":200,"destWidth":1080,"destHeight":376,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn77@2020_5/2020/09/05/06-42-15-831_a91038bd5b268ad2.webp","sourceBytes":82147,"destBytes":27218,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":27691,"convertSpendMs":24,"createdTime":"2020-09-05 14:41:48","host":"us-015*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+2w%E5%AD%97%C2%A0%2B%C2%A040%E5%BC%A0%E5%9B%BE%E5%B8%A6%E4%BD%A0%E5%8F%82%E9%80%8F%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%EF%BC%81","linkMd5ListStr":"38aa4d626245d529fa80f57f64cc9662","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"26.6 KB","compressRate":"33.1%","sourceSize":"80.2 KB"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63rHca13xT1oXSiagcmiayOuoh5gosMNcTzzxRHRvJfwbMYia5JDQUmfqmicA/640?wx_fmt=png","sourceStatusCode":200,"destWidth":1080,"destHeight":528,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn86@2020_5/2020/09/05/06-42-16-067_f5946c201688a8d5.webp","sourceBytes":28518,"destBytes":10422,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":29991,"convertSpendMs":36,"createdTime":"2020-09-05 14:41:46","host":"us-54*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+2w%E5%AD%97%C2%A0%2B%C2%A040%E5%BC%A0%E5%9B%BE%E5%B8%A6%E4%BD%A0%E5%8F%82%E9%80%8F%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%EF%BC%81","linkMd5ListStr":"38aa4d626245d529fa80f57f64cc9662","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"10.2 KB","compressRate":"36.5%","sourceSize":"27.8 KB"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQxwz7UiaI2ib3d4D1CWXCibLukHlywVY4iazyiaubY5XYEYBWIO4cccEqZBDUQcQyAQz9Ztb85K3OMGFiaA/640?wx_fmt=png","sourceStatusCode":200,"destWidth":918,"destHeight":367,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn45@2020_2/2020/09/05/06-42-21-930_7d6fa64d178b4b65.webp","sourceBytes":63632,"destBytes":32472,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":17685,"convertSpendMs":19,"createdTime":"2020-09-05 14:42:05","host":"europe-22*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+Kafka%E5%92%8CRocketMQ%E5%BA%95%E5%B1%82%E5%AD%98%E5%82%A8%E4%B9%8B%E9%82%A3%E4%BA%9B%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E4%BA%8B","linkMd5ListStr":"29acc60b96a03ee0bc8659115e702065","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"31.7 KB","compressRate":"51%","sourceSize":"62.1 KB"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63rFicibbC26Rse7UCClrbXnLVh5F1Vkf6Bmr8GaKBbQeAExAul6pNGnOyA/640?wx_fmt=png","sourceStatusCode":200,"destWidth":1080,"destHeight":501,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn73@2020_2/2020/09/05/06-42-23-832_83c07c6a469e57a8.webp","sourceBytes":113146,"destBytes":35438,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":14112,"convertSpendMs":37,"createdTime":"2020-09-05 14:42:10","host":"us-003*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+2w%E5%AD%97%C2%A0%2B%C2%A040%E5%BC%A0%E5%9B%BE%E5%B8%A6%E4%BD%A0%E5%8F%82%E9%80%8F%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%EF%BC%81","linkMd5ListStr":"38aa4d626245d529fa80f57f64cc9662","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"34.6 KB","compressRate":"31.3%","sourceSize":"110.5 KB"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63re1dticzx3qqzIlnPdD4a1ibtZqpcdW01VFGkV7UOvQfI1MvkIbFkKkIA/640?wx_fmt=png","sourceStatusCode":200,"destWidth":1080,"destHeight":296,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn73@2020_6/2020/09/05/06-42-27-764_7e2d2b6813f7ca03.webp","sourceBytes":60497,"destBytes":15874,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":12058,"convertSpendMs":15,"createdTime":"2020-09-05 14:42:16","host":"europe-59*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+2w%E5%AD%97%C2%A0%2B%C2%A040%E5%BC%A0%E5%9B%BE%E5%B8%A6%E4%BD%A0%E5%8F%82%E9%80%8F%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%EF%BC%81","linkMd5ListStr":"38aa4d626245d529fa80f57f64cc9662","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"15.5 KB","compressRate":"26.2%","sourceSize":"59.1 KB"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/libYRuvULTdWACbPmP3IthmrrO6mkE1YtM5QRqrSHz8WjdkFeDaLjvsYzbgOy7ZPrrDev557y2us6GVchAGeWdg/640?wx_fmt=png","sourceStatusCode":200,"destWidth":1048,"destHeight":514,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn69@2020_5/2020/09/05/06-42-31-298_f52709e2a87894c7.webp","sourceBytes":54181,"destBytes":26412,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":15898,"convertSpendMs":39,"createdTime":"2020-09-05 14:42:16","host":"europe61*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E7%BB%99%E5%A5%B3%E5%90%8C%E4%BA%8B%E8%AE%B2%E5%AE%8C%E4%BB%A3%E7%90%86%E5%90%8E%EF%BC%8C%E5%A5%B3%E5%90%8C%E4%BA%8B%E8%AF%B4%EF%BC%9A%E4%BD%A0%E5%A5%BD%E6%A3%92%E5%93%A6","linkMd5ListStr":"5497d1aebd41da8f15406ca3cc375cda","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"25.8 KB","compressRate":"48.7%","sourceSize":"52.9 KB"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63rhs7YAVOfiao4jIajToyRkSy2AD6McNHkZiaA2baCnwNAKrOOC2knkeOA/640?wx_fmt=png","sourceStatusCode":200,"destWidth":1080,"destHeight":677,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn89@2020_3/2020/09/05/06-42-32-707_63ac6ed825f312b2.webp","sourceBytes":67555,"destBytes":22616,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":16725,"convertSpendMs":43,"createdTime":"2020-09-05 14:42:16","host":"us-012*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+2w%E5%AD%97%C2%A0%2B%C2%A040%E5%BC%A0%E5%9B%BE%E5%B8%A6%E4%BD%A0%E5%8F%82%E9%80%8F%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%EF%BC%81","linkMd5ListStr":"38aa4d626245d529fa80f57f64cc9662","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"22.1 KB","compressRate":"33.5%","sourceSize":"66 KB"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63rrozSIicLcxyQ8SRTMFCicrQUxflkgicSUz7FCjIwarwBSfma7nItplNAg/640?wx_fmt=png","sourceStatusCode":200,"destWidth":1080,"destHeight":641,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn54@2020_4/2020/09/05/06-42-40-725_5d6ee56fb99e0f65.webp","sourceBytes":94277,"destBytes":24094,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":55082,"convertSpendMs":32,"createdTime":"2020-09-05 14:41:46","host":"europe66*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+2w%E5%AD%97%C2%A0%2B%C2%A040%E5%BC%A0%E5%9B%BE%E5%B8%A6%E4%BD%A0%E5%8F%82%E9%80%8F%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%EF%BC%81","linkMd5ListStr":"38aa4d626245d529fa80f57f64cc9662","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"23.5 KB","compressRate":"25.6%","sourceSize":"92.1 KB"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63rlFAjmKBMPbXuEG9Kq5J6F2ChkiaMlwTSwf5qDjgTDcMzDicxvAdDFDibQ/640?wx_fmt=png","sourceStatusCode":200,"destWidth":816,"destHeight":590,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn28@2020_4/2020/09/05/06-42-42-040_b77bf2f730b82fa5.webp","sourceBytes":76253,"destBytes":40482,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":56119,"convertSpendMs":30,"createdTime":"2020-09-05 14:41:46","host":"us-019*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+2w%E5%AD%97%C2%A0%2B%C2%A040%E5%BC%A0%E5%9B%BE%E5%B8%A6%E4%BD%A0%E5%8F%82%E9%80%8F%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%EF%BC%81","linkMd5ListStr":"38aa4d626245d529fa80f57f64cc9662","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"39.5 KB","compressRate":"53.1%","sourceSize":"74.5 KB"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63rAPe0l3PEHdNcnLWUCHRgKRaHeiceLzPSn43pZLW9jFDjPYfaPp2ZnCQ/640?wx_fmt=png","sourceStatusCode":200,"destWidth":1080,"destHeight":391,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn66@2020_4/2020/09/05/06-42-42-406_969ab15d5ff90e5e.webp","sourceBytes":192571,"destBytes":15376,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":56450,"convertSpendMs":40,"createdTime":"2020-09-05 14:41:46","host":"us-020*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+2w%E5%AD%97%C2%A0%2B%C2%A040%E5%BC%A0%E5%9B%BE%E5%B8%A6%E4%BD%A0%E5%8F%82%E9%80%8F%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%EF%BC%81","linkMd5ListStr":"38aa4d626245d529fa80f57f64cc9662","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"15 KB","compressRate":"8%","sourceSize":"188.1 KB"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/libYRuvULTdWACbPmP3IthmrrO6mkE1Ytib584dicNPGrOHIkL7ZH64MpcQdlyfZnXYH83PnHS7B2V4osQel98icYw/640?wx_fmt=png","sourceStatusCode":200,"destWidth":827,"destHeight":192,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn20@2020_5/2020/09/05/06-42-54-131_1d6c591c47219609.webp","sourceBytes":42457,"destBytes":19254,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":3064,"convertSpendMs":13,"createdTime":"2020-09-05 14:42:52","host":"europe63*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E7%BB%99%E5%A5%B3%E5%90%8C%E4%BA%8B%E8%AE%B2%E5%AE%8C%E4%BB%A3%E7%90%86%E5%90%8E%EF%BC%8C%E5%A5%B3%E5%90%8C%E4%BA%8B%E8%AF%B4%EF%BC%9A%E4%BD%A0%E5%A5%BD%E6%A3%92%E5%93%A6","linkMd5ListStr":"5497d1aebd41da8f15406ca3cc375cda","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"18.8 KB","compressRate":"45.3%","sourceSize":"41.5 KB"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63rCqvg7gbm90hbf7d2ROIQb2WThUfiaPiaBFENZrGVDAHQ8aHO0mHbe92w/640?wx_fmt=png","sourceStatusCode":200,"destWidth":1080,"destHeight":755,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn38@2020_6/2020/09/05/06-42-55-902_09adbc3397fca18b.webp","sourceBytes":36453,"destBytes":14634,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":9235,"convertSpendMs":32,"createdTime":"2020-09-05 14:42:47","host":"us-019*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+2w%E5%AD%97%C2%A0%2B%C2%A040%E5%BC%A0%E5%9B%BE%E5%B8%A6%E4%BD%A0%E5%8F%82%E9%80%8F%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%EF%BC%81","linkMd5ListStr":"38aa4d626245d529fa80f57f64cc9662","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"14.3 KB","compressRate":"40.1%","sourceSize":"35.6 KB"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63rUJghn5RgfjibncqMMBddMQgwzougcQKJT3O7DJo1embiaVtyBNCsvckA/640?wx_fmt=png","sourceStatusCode":200,"destWidth":1080,"destHeight":415,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn4@2020_3/2020/09/05/06-42-56-014_7f1d5aee96462e3d.webp","sourceBytes":32464,"destBytes":9956,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":9357,"convertSpendMs":20,"createdTime":"2020-09-05 14:42:47","host":"us-019*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+2w%E5%AD%97%C2%A0%2B%C2%A040%E5%BC%A0%E5%9B%BE%E5%B8%A6%E4%BD%A0%E5%8F%82%E9%80%8F%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%EF%BC%81","linkMd5ListStr":"38aa4d626245d529fa80f57f64cc9662","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"9.7 KB","compressRate":"30.7%","sourceSize":"31.7 KB"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/AaabKZjib2ka9iaZLtmsuQ0d0IQe2qg9NSRe9gDr03L6hVfP4ueibC2ibTGwCwARulzH4IZia76Sw1zCLSq0xajlHKQ/640?wx_fmt=png","sourceStatusCode":200,"destWidth":667,"destHeight":313,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn20@2020_2/2020/09/05/06-42-59-253_491c60308c465af5.webp","sourceBytes":32966,"destBytes":15262,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":12568,"convertSpendMs":16,"createdTime":"2020-09-05 14:42:47","host":"us-035*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F%E9%80%89%E5%9E%8B%EF%BC%8C%E8%BF%99%E7%AF%87%E4%B8%8D%E5%8F%AF%E4%B8%8D%E8%AF%BB%EF%BC%81","linkMd5ListStr":"6a42342f60ebb0da2b1b08b2839c245f","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"14.9 KB","compressRate":"46.3%","sourceSize":"32.2 KB"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQzHY4nRl5eF5qjEKWumNas1JnGA35dEicpTGq8MXrkxcAoxsM96DoELwRAVxNReXvcGotDoOZX79sg/640?wx_fmt=png","sourceStatusCode":200,"destWidth":161,"destHeight":161,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn68@2020_5/2020/09/05/06-42-59-970_6f01e482968bb65d.webp","sourceBytes":5197,"destBytes":9148,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":1455,"convertSpendMs":8,"createdTime":"2020-09-05 14:42:59","host":"us-018*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+2020%EF%BC%8C%E5%90%8E%E7%AB%AF%E8%B7%B3%E6%A7%BD%E6%80%82%E4%BA%86%E5%90%97%3F","linkMd5ListStr":"46a214c22fa582009d96cf716d99afc8","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"8.9 KB","compressRate":"176%","sourceSize":"5.1 KB"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/libYRuvULTdWACbPmP3IthmrrO6mkE1YtHaTWmE77Sq3HVRRhq8R9bicK4ApO1ILVnNTlfhv7L3ByazpBpgkUKtA/640?wx_fmt=png","sourceStatusCode":200,"destWidth":722,"destHeight":234,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn38@2020_2/2020/09/05/06-43-00-565_9360797c2a51f57e.webp","sourceBytes":33358,"destBytes":16178,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":27068,"convertSpendMs":12,"createdTime":"2020-09-05 14:42:34","host":"us-003*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E7%BB%99%E5%A5%B3%E5%90%8C%E4%BA%8B%E8%AE%B2%E5%AE%8C%E4%BB%A3%E7%90%86%E5%90%8E%EF%BC%8C%E5%A5%B3%E5%90%8C%E4%BA%8B%E8%AF%B4%EF%BC%9A%E4%BD%A0%E5%A5%BD%E6%A3%92%E5%93%A6","linkMd5ListStr":"5497d1aebd41da8f15406ca3cc375cda","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"15.8 KB","compressRate":"48.5%","sourceSize":"32.6 KB"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63rAKyUGdToPOo7jdhXf2fVqeHObNib3yoDnG4N5hgEA5poodcibKrsQeLg/640?wx_fmt=png","sourceStatusCode":200,"destWidth":1080,"destHeight":880,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn76@2020_2/2020/09/05/06-43-03-890_9255f714023126ea.webp","sourceBytes":47128,"destBytes":21172,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":8052,"convertSpendMs":51,"createdTime":"2020-09-05 14:42:56","host":"europe-56*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+2w%E5%AD%97%C2%A0%2B%C2%A040%E5%BC%A0%E5%9B%BE%E5%B8%A6%E4%BD%A0%E5%8F%82%E9%80%8F%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%EF%BC%81","linkMd5ListStr":"38aa4d626245d529fa80f57f64cc9662","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"20.7 KB","compressRate":"44.9%","sourceSize":"46 KB"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/libYRuvULTdWACbPmP3IthmrrO6mkE1YtZExiaicsjj4mDt60S7HDonzs6NjDBULA7D4wVtVssQnpBWdVFmBIrCtA/640?wx_fmt=png","sourceStatusCode":200,"destWidth":1044,"destHeight":459,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn58@2020_3/2020/09/05/06-43-06-747_ec360f60dadb1fe4.webp","sourceBytes":60680,"destBytes":26308,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":18455,"convertSpendMs":26,"createdTime":"2020-09-05 14:42:49","host":"europe-23*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E7%BB%99%E5%A5%B3%E5%90%8C%E4%BA%8B%E8%AE%B2%E5%AE%8C%E4%BB%A3%E7%90%86%E5%90%8E%EF%BC%8C%E5%A5%B3%E5%90%8C%E4%BA%8B%E8%AF%B4%EF%BC%9A%E4%BD%A0%E5%A5%BD%E6%A3%92%E5%93%A6","linkMd5ListStr":"5497d1aebd41da8f15406ca3cc375cda","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"25.7 KB","compressRate":"43.4%","sourceSize":"59.3 KB"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63riaUXhPBL1u6PXibBtMTP2cr8BibM9KrD2FwWk37ibMUzgHToW5vBZpSMfg/640?wx_fmt=png","sourceStatusCode":200,"destWidth":1080,"destHeight":373,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn71@2020_6/2020/09/05/06-43-10-528_c5474c113fbddf7e.webp","sourceBytes":46165,"destBytes":17218,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":14570,"convertSpendMs":26,"createdTime":"2020-09-05 14:42:56","host":"us-003*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+2w%E5%AD%97%C2%A0%2B%C2%A040%E5%BC%A0%E5%9B%BE%E5%B8%A6%E4%BD%A0%E5%8F%82%E9%80%8F%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%EF%BC%81","linkMd5ListStr":"38aa4d626245d529fa80f57f64cc9662","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"16.8 KB","compressRate":"37.3%","sourceSize":"45.1 KB"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/libYRuvULTdWACbPmP3IthmrrO6mkE1YtHRibqJr848icNKwVmBKSgw8CxNibMSibtL7cOwHRTDNDDGcphp9KSiaTDiaQ/640?wx_fmt=png","sourceStatusCode":200,"destWidth":1080,"destHeight":392,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn89@2020_1/2020/09/05/06-43-11-541_9e7958e17587237a.webp","sourceBytes":143964,"destBytes":32002,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":12927,"convertSpendMs":23,"createdTime":"2020-09-05 14:42:59","host":"europe63*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E7%BB%99%E5%A5%B3%E5%90%8C%E4%BA%8B%E8%AE%B2%E5%AE%8C%E4%BB%A3%E7%90%86%E5%90%8E%EF%BC%8C%E5%A5%B3%E5%90%8C%E4%BA%8B%E8%AF%B4%EF%BC%9A%E4%BD%A0%E5%A5%BD%E6%A3%92%E5%93%A6","linkMd5ListStr":"5497d1aebd41da8f15406ca3cc375cda","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"31.3 KB","compressRate":"22.2%","sourceSize":"140.6 KB"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/AaabKZjib2kbP23ApP3flYOGcibWAN9beXic4pTPKNCibhadZBicADkiaZ3JW5SpFUE2IOMTVv4L4jZ4iaZrSdTSiamAtA/640?wx_fmt=png","sourceStatusCode":200,"destWidth":1080,"destHeight":509,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn5@2020_4/2020/09/05/06-43-11-613_db8d84b7900e549b.webp","sourceBytes":81382,"destBytes":25240,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":24060,"convertSpendMs":276,"createdTime":"2020-09-05 14:42:48","host":"europe61*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F%E9%80%89%E5%9E%8B%EF%BC%8C%E8%BF%99%E7%AF%87%E4%B8%8D%E5%8F%AF%E4%B8%8D%E8%AF%BB%EF%BC%81","linkMd5ListStr":"6a42342f60ebb0da2b1b08b2839c245f","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"24.6 KB","compressRate":"31%","sourceSize":"79.5 KB"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63rj7I1AvWV8giaQSrd7ibamb4xzKPqCToTUXOCdXNmV4tGt9eSFukNbSRg/640?wx_fmt=png","sourceStatusCode":200,"destWidth":1080,"destHeight":529,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn17@2020_4/2020/09/05/06-43-12-345_02e566a9c1da4f83.webp","sourceBytes":101912,"destBytes":28372,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":5492,"convertSpendMs":31,"createdTime":"2020-09-05 14:43:07","host":"us-55*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+2w%E5%AD%97%C2%A0%2B%C2%A040%E5%BC%A0%E5%9B%BE%E5%B8%A6%E4%BD%A0%E5%8F%82%E9%80%8F%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%EF%BC%81","linkMd5ListStr":"38aa4d626245d529fa80f57f64cc9662","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"27.7 KB","compressRate":"27.8%","sourceSize":"99.5 KB"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63rsocicUklTX7zeIC9enlcApYqjeoCNxPEtGuAFsDeWibnAvxVMYp93tXg/640?wx_fmt=png","sourceStatusCode":200,"destWidth":878,"destHeight":652,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn66@2020_5/2020/09/05/06-43-12-746_6193118b35a19035.webp","sourceBytes":35662,"destBytes":13722,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":26189,"convertSpendMs":32,"createdTime":"2020-09-05 14:42:47","host":"us-54*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+2w%E5%AD%97%C2%A0%2B%C2%A040%E5%BC%A0%E5%9B%BE%E5%B8%A6%E4%BD%A0%E5%8F%82%E9%80%8F%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%EF%BC%81","linkMd5ListStr":"38aa4d626245d529fa80f57f64cc9662","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"13.4 KB","compressRate":"38.5%","sourceSize":"34.8 KB"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQxwz7UiaI2ib3d4D1CWXCibLukeOB9oHRfQU70UwsDE25J3dA6YcRgrdFbxVLQTxXDPvfdUFu0CISszg/640?wx_fmt=png","sourceStatusCode":200,"destWidth":1080,"destHeight":693,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn50@2020_6/2020/09/05/06-43-13-524_1de79b1dc38a0afc.webp","sourceBytes":504992,"destBytes":49748,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":87686,"convertSpendMs":72,"createdTime":"2020-09-05 14:41:46","host":"us-024*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+Kafka%E5%92%8CRocketMQ%E5%BA%95%E5%B1%82%E5%AD%98%E5%82%A8%E4%B9%8B%E9%82%A3%E4%BA%9B%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E4%BA%8B","linkMd5ListStr":"29acc60b96a03ee0bc8659115e702065","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"48.6 KB","compressRate":"9.9%","sourceSize":"493.2 KB"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63r0mwyACU9tWXPdSK4g0D4op6gTJYdX7Avue89JTq1WfrRicI3PhQWx4A/640?wx_fmt=png","sourceStatusCode":200,"destWidth":1080,"destHeight":387,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn24@2020_6/2020/09/05/06-43-15-451_ce4fac683aa6b944.webp","sourceBytes":115855,"destBytes":25680,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":28885,"convertSpendMs":22,"createdTime":"2020-09-05 14:42:47","host":"europe-23*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+2w%E5%AD%97%C2%A0%2B%C2%A040%E5%BC%A0%E5%9B%BE%E5%B8%A6%E4%BD%A0%E5%8F%82%E9%80%8F%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%EF%BC%81","linkMd5ListStr":"38aa4d626245d529fa80f57f64cc9662","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"25.1 KB","compressRate":"22.2%","sourceSize":"113.1 KB"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQxwz7UiaI2ib3d4D1CWXCibLuk60X72D3eKJacUHgMqldQXD8CicTGeaejnQiaO6wC1h4bxl8WdXOKxfOg/640?wx_fmt=png","sourceStatusCode":200,"destWidth":872,"destHeight":243,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn54@2020_1/2020/09/05/06-43-15-546_3bac8b483518e201.webp","sourceBytes":32796,"destBytes":15466,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":29001,"convertSpendMs":13,"createdTime":"2020-09-05 14:42:47","host":"europe70*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+Kafka%E5%92%8CRocketMQ%E5%BA%95%E5%B1%82%E5%AD%98%E5%82%A8%E4%B9%8B%E9%82%A3%E4%BA%9B%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E4%BA%8B","linkMd5ListStr":"29acc60b96a03ee0bc8659115e702065","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"15.1 KB","compressRate":"47.2%","sourceSize":"32 KB"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/AaabKZjib2kbP23ApP3flYOGcibWAN9beXEPYBTtUc0EibyZmkvQFEBCcyngySBhS0TL6UBZep9R2zVaibV2x8KbZA/640?wx_fmt=png","sourceStatusCode":200,"destWidth":1080,"destHeight":460,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn86@2020_1/2020/09/05/06-43-19-847_b6f41cc243df7e24.webp","sourceBytes":79970,"destBytes":25248,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":18493,"convertSpendMs":67,"createdTime":"2020-09-05 14:43:02","host":"us-010*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F%E9%80%89%E5%9E%8B%EF%BC%8C%E8%BF%99%E7%AF%87%E4%B8%8D%E5%8F%AF%E4%B8%8D%E8%AF%BB%EF%BC%81","linkMd5ListStr":"6a42342f60ebb0da2b1b08b2839c245f","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"24.7 KB","compressRate":"31.6%","sourceSize":"78.1 KB"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/AaabKZjib2kbP23ApP3flYOGcibWAN9beXOD99tqb2ChqoJFhXbeSHEcO2r2neXXIbs5KTNWicaRoFKY1vYg0ic8Uw/640?wx_fmt=png","sourceStatusCode":200,"destWidth":918,"destHeight":595,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn66@2020_6/2020/09/05/06-43-20-431_64bd1fcde5f9a2cf.webp","sourceBytes":46651,"destBytes":35226,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":2666,"convertSpendMs":35,"createdTime":"2020-09-05 14:43:18","host":"europe63*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F%E9%80%89%E5%9E%8B%EF%BC%8C%E8%BF%99%E7%AF%87%E4%B8%8D%E5%8F%AF%E4%B8%8D%E8%AF%BB%EF%BC%81","linkMd5ListStr":"6a42342f60ebb0da2b1b08b2839c245f","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"34.4 KB","compressRate":"75.5%","sourceSize":"45.6 KB"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63rIF8giaq7AtPRqQpUcxR9uokRbIgTBWDiaFxK4FkQKOHOFWFc0wDZg5zQ/640?wx_fmt=png","sourceStatusCode":200,"destWidth":1080,"destHeight":505,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn46@2020_2/2020/09/05/06-43-20-989_8e4aa58f7197e5a1.webp","sourceBytes":117717,"destBytes":27326,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":4329,"convertSpendMs":32,"createdTime":"2020-09-05 14:43:17","host":"us-55*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+2w%E5%AD%97%C2%A0%2B%C2%A040%E5%BC%A0%E5%9B%BE%E5%B8%A6%E4%BD%A0%E5%8F%82%E9%80%8F%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%EF%BC%81","linkMd5ListStr":"38aa4d626245d529fa80f57f64cc9662","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"26.7 KB","compressRate":"23.2%","sourceSize":"115 KB"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQxwz7UiaI2ib3d4D1CWXCibLuk8b8Yb4VzzibQ4HFhDewee1icBxrqDZ4bhlvJa9t9HvSAy4e7XKZFtJGg/640?wx_fmt=png","sourceStatusCode":200,"destWidth":911,"destHeight":326,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn77@2020_4/2020/09/05/06-43-41-550_95e6062cf51b221f.webp","sourceBytes":40606,"destBytes":22004,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":23207,"convertSpendMs":15,"createdTime":"2020-09-05 14:43:19","host":"europe-22*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+Kafka%E5%92%8CRocketMQ%E5%BA%95%E5%B1%82%E5%AD%98%E5%82%A8%E4%B9%8B%E9%82%A3%E4%BA%9B%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E4%BA%8B","linkMd5ListStr":"29acc60b96a03ee0bc8659115e702065","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"21.5 KB","compressRate":"54.2%","sourceSize":"39.7 KB"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63r8XZQUYN6J3T3uXxKaM3dp1s3QgibxwF6cwx8ylHzezrxEuWTBQia43Yw/640?wx_fmt=png","sourceStatusCode":200,"destWidth":1080,"destHeight":602,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn92@2020_2/2020/09/05/06-43-43-738_7931f19e2682b17d.webp","sourceBytes":47451,"destBytes":17872,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":15154,"convertSpendMs":27,"createdTime":"2020-09-05 14:43:29","host":"europe-23*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+2w%E5%AD%97%C2%A0%2B%C2%A040%E5%BC%A0%E5%9B%BE%E5%B8%A6%E4%BD%A0%E5%8F%82%E9%80%8F%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%EF%BC%81","linkMd5ListStr":"38aa4d626245d529fa80f57f64cc9662","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"17.5 KB","compressRate":"37.7%","sourceSize":"46.3 KB"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/A3ibcic1Xe0iaRqriaPKUG7u6IaUSRKdA63rpVpFuyqd9HsaYFgWSVq5d6kCDGRp0ECS7W8g7PcBKD1oBw5JxibLR3g/640?wx_fmt=png","sourceStatusCode":200,"destWidth":1080,"destHeight":413,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn99@2020_6/2020/09/05/06-43-51-468_47b6b07d31881368.webp","sourceBytes":46126,"destBytes":11558,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":16373,"convertSpendMs":29,"createdTime":"2020-09-05 14:43:35","host":"us-035*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+2w%E5%AD%97%C2%A0%2B%C2%A040%E5%BC%A0%E5%9B%BE%E5%B8%A6%E4%BD%A0%E5%8F%82%E9%80%8F%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%EF%BC%81","linkMd5ListStr":"38aa4d626245d529fa80f57f64cc9662","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"11.3 KB","compressRate":"25.1%","sourceSize":"45 KB"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/AaabKZjib2ka9iaZLtmsuQ0d0IQe2qg9NS7f4mPicXtHdjaoMnWezpjOaE8HcF9RI1Ham0F4lGpTdj9cHP5qhjD8A/640?wx_fmt=png","sourceStatusCode":200,"destWidth":1080,"destHeight":404,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn42@2020_1/2020/09/05/06-44-01-722_fe8203a1d8b679fc.webp","sourceBytes":100381,"destBytes":31318,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":12727,"convertSpendMs":24,"createdTime":"2020-09-05 14:43:49","host":"us-55*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F%E9%80%89%E5%9E%8B%EF%BC%8C%E8%BF%99%E7%AF%87%E4%B8%8D%E5%8F%AF%E4%B8%8D%E8%AF%BB%EF%BC%81","linkMd5ListStr":"6a42342f60ebb0da2b1b08b2839c245f","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"30.6 KB","compressRate":"31.2%","sourceSize":"98 KB"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/libYRuvULTdWACbPmP3IthmrrO6mkE1YtfDAz5kTVr6ADQdriam6LhzD4Bttvg2vGzc69gpvYiclzfegVibqCntkHA/640?wx_fmt=png","sourceStatusCode":200,"destWidth":752,"destHeight":281,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn28@2020_6/2020/09/05/06-44-07-079_99f154dbda40cf12.webp","sourceBytes":32299,"destBytes":14630,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":55219,"convertSpendMs":59,"createdTime":"2020-09-05 14:43:12","host":"us-025*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E7%BB%99%E5%A5%B3%E5%90%8C%E4%BA%8B%E8%AE%B2%E5%AE%8C%E4%BB%A3%E7%90%86%E5%90%8E%EF%BC%8C%E5%A5%B3%E5%90%8C%E4%BA%8B%E8%AF%B4%EF%BC%9A%E4%BD%A0%E5%A5%BD%E6%A3%92%E5%93%A6","linkMd5ListStr":"5497d1aebd41da8f15406ca3cc375cda","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"14.3 KB","compressRate":"45.3%","sourceSize":"31.5 KB"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/AaabKZjib2ka9iaZLtmsuQ0d0IQe2qg9NSaic5iaoVQiaQd5zlpySuJ1CQdFHbOMg27JtamGQiblRckofib4OAZ6mhVhA/640?wx_fmt=png","sourceStatusCode":200,"destWidth":889,"destHeight":551,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn8@2020_2/2020/09/05/06-44-14-387_b46cd09768a519d7.webp","sourceBytes":81900,"destBytes":36234,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":8299,"convertSpendMs":25,"createdTime":"2020-09-05 14:44:07","host":"europe63*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F%E9%80%89%E5%9E%8B%EF%BC%8C%E8%BF%99%E7%AF%87%E4%B8%8D%E5%8F%AF%E4%B8%8D%E8%AF%BB%EF%BC%81","linkMd5ListStr":"6a42342f60ebb0da2b1b08b2839c245f","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"35.4 KB","compressRate":"44.2%","sourceSize":"80 KB"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/AaabKZjib2kYKQe10R8d4NKJHfFdBsjDKXUwxzia0pDgMtBVNN2dAJ7iaBYyA2Y8r6dUuD2hwBupgxyLicIYTmNmicg/640?wx_fmt=jpeg","sourceStatusCode":200,"destWidth":1080,"destHeight":559,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn12@2020_1/2020/09/05/06-44-15-152_06b6cd2b6377cb69.webp","sourceBytes":75869,"destBytes":49804,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":8722,"convertSpendMs":25,"createdTime":"2020-09-05 14:44:07","host":"us-035*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F%E9%80%89%E5%9E%8B%EF%BC%8C%E8%BF%99%E7%AF%87%E4%B8%8D%E5%8F%AF%E4%B8%8D%E8%AF%BB%EF%BC%81","linkMd5ListStr":"6a42342f60ebb0da2b1b08b2839c245f","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"48.6 KB","compressRate":"65.6%","sourceSize":"74.1 KB"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/AaabKZjib2kbP23ApP3flYOGcibWAN9beXQ1iaMVgOCdrRnc8kC2SEO4g7lX4zhZickOedncKicNLYFTMS5laZSlNYQ/640?wx_fmt=png","sourceStatusCode":200,"destWidth":1080,"destHeight":473,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn96@2020_5/2020/09/05/06-44-18-997_91599a6ef51f9d88.webp","sourceBytes":120223,"destBytes":36130,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":17910,"convertSpendMs":26,"createdTime":"2020-09-05 14:44:02","host":"europe63*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F%E9%80%89%E5%9E%8B%EF%BC%8C%E8%BF%99%E7%AF%87%E4%B8%8D%E5%8F%AF%E4%B8%8D%E8%AF%BB%EF%BC%81","linkMd5ListStr":"6a42342f60ebb0da2b1b08b2839c245f","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"35.3 KB","compressRate":"30.1%","sourceSize":"117.4 KB"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQxwz7UiaI2ib3d4D1CWXCibLuk5S1ibjFrBPLEbBxHkzxY2KvbXPpeZg2BGlkib1ZC7g1uHVauKUDMpdRA/640?wx_fmt=png","sourceStatusCode":200,"destWidth":1080,"destHeight":712,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn23@2020_5/2020/09/05/06-45-24-449_115d4785edad2e21.webp","sourceBytes":471973,"destBytes":50080,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":9358,"convertSpendMs":45,"createdTime":"2020-09-05 14:45:16","host":"us-52*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+Kafka%E5%92%8CRocketMQ%E5%BA%95%E5%B1%82%E5%AD%98%E5%82%A8%E4%B9%8B%E9%82%A3%E4%BA%9B%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E4%BA%8B","linkMd5ListStr":"29acc60b96a03ee0bc8659115e702065","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"48.9 KB","compressRate":"10.6%","sourceSize":"460.9 KB"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQxwz7UiaI2ib3d4D1CWXCibLukeSsuS7xYFgWKSd6BAsn3JtDFdXxatcsr5Jo0rOAWG8t51FMeCRVicfA/640?wx_fmt=png","sourceStatusCode":200,"destWidth":995,"destHeight":805,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn62@2020_3/2020/09/05/06-45-33-768_f9cf218d51b1a39d.webp","sourceBytes":552072,"destBytes":34988,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":12769,"convertSpendMs":44,"createdTime":"2020-09-05 14:45:21","host":"us-010*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+Kafka%E5%92%8CRocketMQ%E5%BA%95%E5%B1%82%E5%AD%98%E5%82%A8%E4%B9%8B%E9%82%A3%E4%BA%9B%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E4%BA%8B","linkMd5ListStr":"29acc60b96a03ee0bc8659115e702065","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"34.2 KB","compressRate":"6.3%","sourceSize":"539.1 KB"}],"successGithubMap":{"myreaderx8":2,"myreaderx7":1,"myreaderx15":1,"myreaderx16":3,"myreaderx6":1,"myreaderx32":2,"myreaderx4":2,"myreaderx10":1,"myreaderx3":2,"myreaderx33":1,"myreaderx11":2,"myreaderx12":1,"myreaderx2":1,"myreaderx13":2,"myreaderx1":1,"myreaderx30":3,"myreaderx31":2,"myreaderx18":2,"myreaderx19":1,"myreaderx":3,"myreaderx25":3,"myreaderx27":3,"myreaderx21":2,"myreaderx22":2,"myreaderx24":3,"myreaderx5oss":3,"myreaderx29":2},"failGithubMap":{"myreaderx14":2,"myreaderx23":3}}