{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2021-04-27 01:50:21","updatedTime":"2021-04-27 01:50:21","title":"Safari不支持build-in自定义元素的兼容处理","link":"https://www.zhangxinxu.com/wordpress/?p=9929","description":"<p>by <a href=\"https://www.zhangxinxu.com/\">zhangxinxu</a> from <a href=\"https://www.zhangxinxu.com/wordpress/?p=9929\">https://www.zhangxinxu.com/wordpress/?p=9929</a><br /> 本文欢迎分享与聚合，全文转载就不必了，尊重版权，圈子就这么大，若急用可以联系授权。</p> \n<p><script>window.wxShareImgUrl = 'https://www.zhangxinxu.com/study/image/share/202104-buildin-polyfill.png';</script></p> \n<p><img src=\"https://image.zhangxinxu.com/image/blog/202104/custom-polyfill-cover.png\" width=\"480\" height=\"330\" alt=\"占位封面图 颈椎帮助\" class=\"alignright clip thumb size-medium\" /></p> \n<h3>一、Safari又拖后腿了</h3> \n<p>Safari浏览器不支持build-in自定义元素，只支持匿名自定义元素。</p> \n<p>兼容性如下图所示：</p> \n<p><img src=\"https://image.zhangxinxu.com/image/blog/202104/2021-04-23_102517.png\" width=\"660\" height=\"456\" alt=\"Safari不支持内置自定义元素\" class=\"alignnone size-medium\" /></p> \n<p>也就是Safari默认仅支持下面这种HTML格式的UI组件：</p> \n<pre>&lt;ui-tips&gt;&lt;/ui-tips&gt;\n&lt;ui-drop&gt;&lt;/ui-drop&gt;\n&lt;ui-tab&gt;&lt;/ui-tab&gt;\n&lt;ui-lighttip&gt;&lt;/ui-lighttip&gt;</pre> \n<p>不支持下面这种通过<code>is</code>属性在原生HTML元素上扩展的web components组件。</p> \n<pre>&lt;input is=\"ui-color\"&gt;\n&lt;select is=\"ui-select\"&gt;&lt;/select&gt;\n&lt;form is=\"ui-form\"&gt;&lt;/form&gt;\n&lt;table is=\"ui-table\"&gt;&lt;/table&gt;\n</pre> \n<p>这就麻烦了，本来很帅气的UI组件，如果只能使用匿名自定义元素实现，就很啰嗦与乏味。</p> \n<p>或者，狠狠心，无视Safari浏览器用户群体，可以的，等着被解雇就行。</p> \n<p>所以，最好的解决方法就是让Safari浏览器也支持内置自定义元素组件的开发。</p> \n<p>怎么办呢？</p> \n<h3>二、Polyfill build-in custom element</h3> \n<p>解决方法比较简单，有专门polyfill，只要引入就可以了。</p> \n<p>项目地址：</p> \n<p><a href=\"https://github.com/WebReflection/custom-elements-builtin\" target=\"_blank\" rel=\"noreferrer noopener\">https://github.com/WebReflection/custom-elements-builtin</a></p> \n<p>适用于支持自定义元素，但是不支持内置自定义元素的场景，主要就是针对Safari浏览器。</p> \n<p>其中的index.js是非压缩版，es.js是压缩版。</p> \n<p>使用的时候可以直接这么使用：</p> \n<pre><span><span class=\"green\">&lt;!-- HTML文档的顶部 --&gt;</span></span>\n<span><span class=\"hljs-tag\">&lt;</span><span><span class=\"hljs-tag\"><span class=\"hljs-name\">script</span></span></span><span class=\"hljs-tag\">&gt;</span></span><span><span><span class=\"handlebars\"><span class=\"xml\">\nif (!(self.chrome || self.navigator))\n  document.write('</span></span><span><span class=\"handlebars\"><span class=\"xml\"><span class=\"hljs-tag\">&lt;</span></span></span><span><span class=\"handlebars\"><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-name\">script</span></span></span></span></span><span class=\"handlebars\"><span class=\"xml\"><span class=\"hljs-tag\"> </span></span></span><span><span class=\"handlebars\"><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-attr\">src</span></span></span></span></span><span class=\"handlebars\"><span class=\"xml\"><span class=\"hljs-tag\">=</span></span></span><span><span class=\"handlebars\"><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\">\"//unpkg.com/@webreflection/custom-elements-builtin\"</span></span></span></span></span><span class=\"handlebars\"><span class=\"xml\"><span class=\"hljs-tag\">&gt;</span></span></span></span><span><span><span><span class=\"handlebars\"><span class=\"xml\"><span class=\"handlebars\"><span class=\"xml\"><span class=\"hljs-tag\">&lt;</span></span></span></span></span><span><span class=\"handlebars\"><span class=\"xml\"><span class=\"handlebars\"><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-name\">\\x2fscript</span></span></span></span></span></span></span><span class=\"handlebars\"><span class=\"xml\"><span class=\"handlebars\"><span class=\"xml\"><span class=\"hljs-tag\">&gt;</span></span></span></span></span></span><span class=\"handlebars\"><span class=\"xml\"><span class=\"handlebars\"><span class=\"xml\">'); </span></span></span></span></span></span></span></span><span><span class=\"hljs-tag\">&lt;/</span><span><span class=\"hljs-tag\"><span class=\"hljs-name\">script</span></span></span><span class=\"hljs-tag\">&gt;</span></span></pre> \n<p>不过<code>if</code>判断外加<code>document.write</code>并不是一个好用法，但是，我们直接引用 //unpkg.com/@webreflection/custom-elements-builtin 这个地址也是不行的。</p> \n<p>因为这个Polyfill中并没有对浏览器进行区分，按照作者的话，就是浏览器的特性是一直变化的，做浏览器类型判断是不靠谱的。</p> \n<p>上面这句话没错，但是，我们可以不进行浏览器区分，直接基于API特性区分就好了。</p> \n<p><span class=\"hidden\">//zxx: 如果你看到这段文字，说明你现在访问是体验糟糕的垃圾盗版网站，你可以访问原文获得很好的体验：https://www.zhangxinxu.com/wordpress/?p=9929（作者张鑫旭）</span></p> \n<p>于是，我对原始的JS代码做了内置的判断处理。</p> \n<p>判断逻辑如下代码所示：</p> \n<pre><span><span><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span></span><span class=\"hljs-class\"> </span><span><span class=\"hljs-class\"><span class=\"hljs-title\">AnyClass</span></span></span><span class=\"hljs-class\"> </span><span><span class=\"hljs-class\"><span class=\"hljs-keyword\">extends</span></span></span><span class=\"hljs-class\"> </span><span><span class=\"hljs-class\"><span class=\"hljs-title\">HTMLBRElement</span></span></span><span class=\"hljs-class\"> </span></span>{\n  <span>constructor</span> () {\n    <span><span class=\"hljs-keyword\">super</span></span>();\n\n    <span><span class=\"hljs-keyword\">this</span></span>.someMethod = <span><span class=\"hljs-literal\">true</span></span>;\n  }\n}\n\n<span><span class=\"hljs-keyword\">if</span></span> (!customElements.get(<span><span class=\"hljs-symbol\">'any</span>-<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span>'</span></span><span class=\"hljs-class\">)) </span>{\n  customElements.define(<span><span class=\"hljs-symbol\">'any</span>-<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span>'</span></span><span class=\"hljs-class\">, <span class=\"hljs-title\">AnyClass</span>, </span>{\n    <span><span class=\"hljs-keyword\">extends</span></span>: <span><span class=\"hljs-symbol\">'b</span>r'</span>\n  });\n}\n\n<span><span class=\"hljs-comment green\">// 是否支持 build-in custom element</span></span>\n<span>const</span> isSupportBuildIn = <span>document</span>.createElement(<span><span class=\"hljs-symbol\">'b</span>r'</span>, {\n  <span>is</span>: <span><span class=\"hljs-symbol\">'any</span>-<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span>'</span></span>\n}).someMethod;</pre> \n<p>基于特性判断是很安全的，如果浏览器支持内置自定义元素，则 <code>isSupportBuildIn</code> 的返回值就是 true，如果浏览器不支持，则会是 undefined。</p> \n<p>优化后的JS代码我已经开源了，放在了gitee上，详见：<a href=\"https://gitee.com/zhangxinxu/build-in-custom-element-polyfill\" target=\"_blank\" rel=\"noreferrer noopener\">https://gitee.com/zhangxinxu/build-in-custom-element-polyfill</a></p> \n<p><img src=\"https://image.zhangxinxu.com/image/blog/202104/2021-04-23_112544.png\" width=\"422\" height=\"219\" alt=\"项目目标源码截图\" class=\"alignnone size-medium\" /></p> \n<p>欢迎大家关注我的这个gitee账号。</p> \n<h3>三、完美运行下的问题</h3> \n<p>这段Polyfill真的挺神奇的，原来的Web Components代码无需任何修改，组件功能在Safari浏览器下完美支持，所有组件都运行良好。</p> \n<p>然后，真正到业务代码中，进行组件传参处理的时候，发现问题了。</p> \n<p>例如，引用代码如下：</p> \n<pre><span>&lt;</span><span><span class=\"hljs-tag\"><span class=\"hljs-name\">script</span></span></span><span class=\"hljs-tag\"> </span><span><span class=\"hljs-tag\"><span class=\"hljs-attr\">src</span></span></span><span class=\"hljs-tag\">=</span><span><span class=\"hljs-tag\"><span class=\"hljs-string\">\"safari-polyfill.js\"</span></span></span><span class=\"hljs-tag\">&gt;</span><span><span class=\"hljs-tag\">&lt;/</span><span><span class=\"hljs-tag\"><span class=\"hljs-name\">script</span></span></span><span class=\"hljs-tag\">&gt;</span></span>\n<span><span class=\"hljs-tag\">&lt;</span><span><span class=\"hljs-tag\"><span class=\"hljs-name\">script</span></span></span><span class=\"hljs-tag\"> </span><span><span class=\"hljs-tag\"><span class=\"hljs-attr\">type</span></span></span><span class=\"hljs-tag\">=</span><span><span class=\"hljs-tag\"><span class=\"hljs-string\">\"module\"</span></span></span><span class=\"hljs-tag\"> </span><span><span class=\"hljs-tag\"><span class=\"hljs-attr\">src</span></span></span><span class=\"hljs-tag\">=</span><span><span class=\"hljs-tag\"><span class=\"hljs-string\">\"my-components.js\"</span></span></span><span class=\"hljs-tag\">&gt;</span></span><span><span class=\"hljs-tag\">&lt;/</span><span><span class=\"hljs-tag\"><span class=\"hljs-name\">script</span></span></span><span class=\"hljs-tag\">&gt;</span></span>\n<span><span class=\"hljs-tag\">&lt;</span><span><span class=\"hljs-tag\"><span class=\"hljs-name\">script</span></span></span><span class=\"hljs-tag\"> </span><span><span class=\"hljs-tag\"><span class=\"hljs-attr\">type</span></span></span><span class=\"hljs-tag\">=</span><span><span class=\"hljs-tag\"><span class=\"hljs-string\">\"module\"</span></span></span><span class=\"hljs-tag\">&gt;</span></span>\nmyComponent.someMethod();\n<span><span class=\"hljs-tag\">&lt;/</span><span><span class=\"hljs-tag\"><span class=\"hljs-name\">script</span></span></span><span class=\"hljs-tag\">&gt;</span></span></pre> \n<p>在原生支持内置自定义元素的浏览器下，myComponent.someMethod() 方法是可以正常执行的。</p> \n<p>但是在Safari浏览器下，就会报错，undefined不能作为function函数执行。</p> \n<p>原因在于，safari-polyfill.js 由于实现机制的限制，会让自定义元素初始化的时机比原生浏览器更靠后。</p> \n<p>也就是在Safari浏览器下，<code>myComponent.someMethod()</code> 方法执行的时候，<code>myComponent</code>这个元素还没有变成内置自定义元素。</p> \n<p>因此，执行会出错。</p> \n<p>我的解决方法是这样的，在 connectedCallback 生命周期函数中触发一个自定义的 <code>'connected'</code> 事件，这样，就可以通过绑定 <code>'connected'</code> 事件的方式保证业务代码执行的时候，元素已经完成了组件化。</p> \n<p>代码示意，组件中的代码部分：</p> \n<pre><span class=\"hljs-selector-tag\">connectedCallback</span> () {\n  <span><span class=\"hljs-selector-tag\">this</span></span><span class=\"hljs-selector-class\">.dispatchEvent</span>(<span>new</span> CustomEvent(<span><span class=\"hljs-string\">'connected'</span></span>), {\n    <span><span class=\"hljs-attribute\">detail</span></span>: {\n      <span><span class=\"hljs-attribute\">type</span></span>: <span><span class=\"hljs-string\">'my-components'</span></span>\n    }\n  });\n}</pre> \n<p>然后，业务代码改造成这样就可以了：</p> \n<pre><span><span class=\"hljs-tag\">&lt;</span><span><span class=\"hljs-tag\"><span class=\"hljs-name\">script</span></span></span><span class=\"hljs-tag\"> </span><span><span class=\"hljs-tag\"><span class=\"hljs-attr\">src</span></span></span><span class=\"hljs-tag\">=</span><span><span class=\"hljs-tag\"><span class=\"hljs-string\">\"safari-polyfill.js\"</span></span></span><span class=\"hljs-tag\">&gt;</span></span><span><span class=\"hljs-tag\">&lt;/</span><span><span class=\"hljs-tag\"><span class=\"hljs-name\">script</span></span></span><span class=\"hljs-tag\">&gt;</span></span>\n<span><span class=\"hljs-tag\">&lt;</span><span><span class=\"hljs-tag\"><span class=\"hljs-name\">script</span></span></span><span class=\"hljs-tag\"> </span><span><span class=\"hljs-tag\"><span class=\"hljs-attr\">type</span></span></span><span class=\"hljs-tag\">=</span><span><span class=\"hljs-tag\"><span class=\"hljs-string\">\"module\"</span></span></span><span class=\"hljs-tag\"> </span><span><span class=\"hljs-tag\"><span class=\"hljs-attr\">src</span></span></span><span class=\"hljs-tag\">=</span><span><span class=\"hljs-tag\"><span class=\"hljs-string\">\"my-components.js\"</span></span></span><span class=\"hljs-tag\">&gt;</span></span><span><span class=\"hljs-tag\">&lt;/</span><span><span class=\"hljs-tag\"><span class=\"hljs-name\">script</span></span></span><span class=\"hljs-tag\">&gt;</span></span>\n<span><span class=\"hljs-tag\">&lt;</span><span><span class=\"hljs-tag\"><span class=\"hljs-name\">script</span></span></span><span class=\"hljs-tag\">&gt;</span></span><span><span class=\"actionscript\"> \nmyComponent.addEventListener(</span><span><span class=\"actionscript\"><span class=\"hljs-string\">'connected'</span></span></span><span class=\"actionscript\">, </span><span><span><span class=\"actionscript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span></span></span></span><span class=\"actionscript\"><span class=\"hljs-function\"> </span></span><span><span class=\"actionscript\"><span class=\"hljs-function\"><span class=\"hljs-params\">()</span></span></span></span><span class=\"actionscript\"><span class=\"hljs-function\"> </span></span></span><span class=\"actionscript\">{\n    </span><span><span class=\"actionscript\"><span class=\"hljs-keyword\">this</span></span></span><span class=\"actionscript\">.someMethod();\n});\n</span></span><span><span class=\"hljs-tag\">&lt;/</span><span><span class=\"hljs-tag\"><span class=\"hljs-name\">script</span></span></span><span class=\"hljs-tag\">&gt;</span></span></pre> \n<p>这样就可以保证 someMethod() 方法执行的时候，组件一定已经完成了初始化。</p> \n<h3>四、想不到该说什么的小结</h3> \n<p>想不到该说些什么。</p> \n<p>祝大家五一快乐！</p> \n<p>什么，五一还有一周。</p> \n<p>那就提前祝大家五一快乐，今天五一出游人会很多，大家记得注意安全哦。</p> \n<p>比心！</p> \n<p><img src=\"https://image.zhangxinxu.com/image/emtion/emoji/2764.svg\" width=\"20\" height=\"20\" align=\"absmiddle\" /></p> \n<p>本文为原创文章，欢迎分享，勿全文转载，如果实在喜欢，可收藏，永不过期，且会及时更新知识点及修正错误，阅读体验也更好。<br /> 本文地址：<a href=\"https://www.zhangxinxu.com/wordpress/?p=9929\">https://www.zhangxinxu.com/wordpress/?p=9929</a></p> \n<p>（本篇完）</p>","descriptionType":"html","publishedDate":"Mon, 26 Apr 2021 12:12:23 +0000","feedId":5706,"bgimg":"https://image.zhangxinxu.com/image/blog/202104/custom-polyfill-cover.png","linkMd5":"920e416f80bf5de4c5abd42092fb8c58","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn83@2020_4/2021/04/26/17-51-27-079_20431f05b5c113cf.webp","destWidth":480,"destHeight":330,"sourceBytes":34569,"destBytes":26674,"author":"张 鑫旭","articleImgCdnMap":{"https://image.zhangxinxu.com/image/blog/202104/custom-polyfill-cover.png":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn83@2020_4/2021/04/26/17-51-27-079_20431f05b5c113cf.webp","https://image.zhangxinxu.com/image/blog/202104/2021-04-23_102517.png":null,"https://image.zhangxinxu.com/image/blog/202104/2021-04-23_112544.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn87@2020_1/2021/04/26/17-51-30-023_48c6a0ab35c7712c.webp","https://image.zhangxinxu.com/image/emtion/emoji/2764.svg":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn90@2020_3/2021/04/26/17-51-29-812_345d3ecc932d1a40.svg"},"publishedOrCreatedDate":1619459421813}],"record":{"createdTime":"2021-04-27 01:50:21","updatedTime":"2021-04-27 01:50:21","feedId":5706,"fetchDate":"Mon, 26 Apr 2021 17:50:21 +0000","fetchMs":2685,"handleMs":22,"totalMs":71802,"newArticles":0,"totalArticles":10,"status":1,"type":0,"ip":"f306b40366a93aa712f78b685bea0f01","hostName":"us-024*","requestId":"076d8c58c01640d79b218547add6131e_5706","contentType":"application/rss+xml; charset=UTF-8","totalBytes":33939,"bgimgsTotal":1,"bgimgsGithubTotal":1,"articlesImgsTotal":4,"articlesImgsGithubTotal":3,"successGithubMap":{"myreaderx18":1,"myreaderx19":1,"myreaderx":1},"failGithubMap":{"myreaderx14":1}},"feed":{"createdTime":"2020-08-25 04:30:15","updatedTime":"2020-09-01 11:15:46","id":5706,"name":"张鑫旭-鑫空间-鑫生活","url":"http://www.zhangxinxu.com/wordpress/feed/","subscriber":null,"website":null,"icon":"https://www.zhangxinxu.com/favicon.ico","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx61/cdn89@2020_1/2020/09/01/03-15-46-738_9a339309f46b07b8.ico","description":"提高前端技术，先从使用谷歌搜索做起","weekly":null,"link":null},"noPictureArticleList":[{"createdTime":"2021-04-27 01:51:30","updatedTime":"2021-04-27 01:51:30","id":null,"feedId":5706,"linkMd5":"920e416f80bf5de4c5abd42092fb8c58"}],"tmpCommonImgCdnBytes":26674,"tmpBodyImgCdnBytes":7265,"tmpBgImgCdnBytes":0,"extra4":{"start":1619459418664,"total":0,"statList":[{"spend":3127,"msg":"获取xml内容"},{"spend":22,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":3032,"msg":"正文链接上传到cdn"}]},"extra5":4,"extra6":4,"extra7ImgCdnFailResultVector":[{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202104/2021-04-23_102517.png","sourceStatusCode":200,"destWidth":660,"destHeight":456,"sourceBytes":18537,"destBytes":34326,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":1778,"convertSpendMs":11,"createdTime":"2021-04-27 01:51:27","host":"us-53*","referer":"https://www.zhangxinxu.com/wordpress/?p=9929","linkMd5ListStr":"920e416f80bf5de4c5abd42092fb8c58","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn95/contents/2021/04/26/17-51-29-191_ec97f6006fecf78b.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Mon, 26 Apr 2021 17:51:29 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["BBC6:2E2E:D8032D:2EB2494:6086FDA1"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1619461487"],"x-ratelimit-used":["60"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn95/contents/2021/04/26/17-51-29-191_ec97f6006fecf78b.webp","historyStatusCode":[],"spendMs":31},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"18.1 KB","destSize":"33.5 KB","compressRate":"185.2%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202104/2021-04-23_102517.png","sourceStatusCode":200,"destWidth":660,"destHeight":456,"sourceBytes":18537,"destBytes":34326,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":1029,"convertSpendMs":12,"createdTime":"2021-04-27 01:51:29","host":"us-53*","referer":"https://www.zhangxinxu.com/wordpress/?p=9929","linkMd5ListStr":"920e416f80bf5de4c5abd42092fb8c58","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn95/contents/2021/04/26/17-51-30-225_ec97f6006fecf78b.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Mon, 26 Apr 2021 17:51:30 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["BBC6:2E2E:D8037F:2EB2590:6086FDA2"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1619461487"],"x-ratelimit-used":["60"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn95/contents/2021/04/26/17-51-30-225_ec97f6006fecf78b.webp","historyStatusCode":[],"spendMs":31},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"18.1 KB","destSize":"33.5 KB","compressRate":"185.2%"}],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://us-53.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://europe65.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe64.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202104/custom-polyfill-cover.png","sourceStatusCode":200,"destWidth":480,"destHeight":330,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn83@2020_4/2021/04/26/17-51-27-079_20431f05b5c113cf.webp","sourceBytes":34569,"destBytes":26674,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":2990,"convertSpendMs":8,"createdTime":"2021-04-27 01:51:24","host":"us-014*","referer":"https://www.zhangxinxu.com/wordpress/?p=9929","linkMd5ListStr":"920e416f80bf5de4c5abd42092fb8c58,920e416f80bf5de4c5abd42092fb8c58","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"33.8 KB","destSize":"26 KB","compressRate":"77.2%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/emtion/emoji/2764.svg","sourceStatusCode":200,"destWidth":0,"destHeight":0,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn90@2020_3/2021/04/26/17-51-29-812_345d3ecc932d1a40.svg","sourceBytes":391,"destBytes":391,"feedId":5706,"totalSpendMs":2644,"convertSpendMs":0,"createdTime":"2021-04-27 01:51:27","host":"europe65*","referer":"https://www.zhangxinxu.com/wordpress/?p=9929","linkMd5ListStr":"920e416f80bf5de4c5abd42092fb8c58","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"391 B","destSize":"391 B","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202104/2021-04-23_112544.png","sourceStatusCode":200,"destWidth":422,"destHeight":219,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn87@2020_1/2021/04/26/17-51-30-023_48c6a0ab35c7712c.webp","sourceBytes":4571,"destBytes":6874,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":2886,"convertSpendMs":5,"createdTime":"2021-04-27 01:51:27","host":"europe64*","referer":"https://www.zhangxinxu.com/wordpress/?p=9929","linkMd5ListStr":"920e416f80bf5de4c5abd42092fb8c58","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"4.5 KB","destSize":"6.7 KB","compressRate":"150.4%"}],"successGithubMap":{"myreaderx18":1,"myreaderx19":1,"myreaderx":1},"failGithubMap":{"myreaderx14":1}}