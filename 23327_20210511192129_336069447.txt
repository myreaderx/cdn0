{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2021-05-12 03:10:12","updatedTime":"2021-05-12 03:10:12","title":"Chinese Traffic to time.gif","link":"https://hookrace.net/blog/chinese-traffic-time.gif","description":"<p>Nearly two years ago <a href=\"https://hookrace.net/blog/time.gif/\">I posted</a> this endless GIF that always shows the current time in UTC:</p> \n<!--more--> \n<p><img src=\"https://hookrace.net/time.gif\" alt=\"time.gif (reload if it fails)\" /></p> \n<p>Now looking at my <a href=\"https://goaccess.io/\">GoAccess</a> dashboard I can see that it is picking up in popularity rather suddenly:</p> \n<p><img src=\"https://hookrace.net/public/chinese-traffic/goaccess.png\" alt=\"GoAccess excerpt\" /></p> \n<p>But strangely I can’t find anything about time.gif being linked on the web. So this might just be an attempted Denial of Service (DoS) attack? At least that would be something I am familiar with from the <a href=\"https://ddnet.tw/\">DDNet</a> direction, but it’s certainly strange on HookRace. But instead of simply shutting down time.gif I decided to try to find out who is accessing it and whether I can keep the server up.</p> \n<p>Let’s look into the <a href=\"https://www.nginx.com/\">nginx</a> logs, since I use nginx to proxy the requests to the Haskell program. There I see about 40 new requests per second looking like this:</p> \n<div class=\"language-plaintext highlighter-rouge\"> \n <div class=\"highlight\"> \n  <pre class=\"highlight\"><code>hookrace.net 123.185.XXX.XXX - - [21/May/2019:21:21:27 +0200] \"GET /time.gif HTTP/2.0\" 200 3335 \"XXX\" \"Mozilla/5.0 (Linux; Android 8.1.0; V1818A Build/OPM1.171019.026; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/66.0.3359.126 MQQBrowser/6.2 TBS/044681 Mobile Safari/537.36 MMWEBID/XXX MicroMessenger/7.0.4.1420(0x2700043A) Process/tools NetType/WIFI Language/zh_CN\" 8.055\nhookrace.net 111.62.XXX.XXX - - [21/May/2019:21:21:27 +0200] \"GET /time.gif HTTP/2.0\" 200 32061 \"XXX\" \"Mozilla/5.0 (Linux; Android 5.1; OPPO A59s Build/LMY47I; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/66.0.3359.126 MQQBrowser/6.2 TBS/044704 Mobile Safari/537.36 MMWEBID/XXX MicroMessenger/7.0.4.1420(0x2700043B) Process/tools NetType/WIFI Language/zh_CN\" 89.256\nhookrace.net 111.29.XXX.XXX - - [21/May/2019:21:21:27 +0200] \"GET /time.gif HTTP/2.0\" 200 543830 \"XXX\" \"Mozilla/5.0 (Linux; Android 7.1.1; OPPO R11 Build/NMF26X; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/66.0.3359.126 MQQBrowser/6.2 TBS/044704 Mobile Safari/537.36 MMWEBID/XXX MicroMessenger/7.0.4.1420(0x2700043A) Process/tools NetType/WIFI Language/zh_CN\" 1540.238\nhookrace.net 112.2.XXX.XXX - - [21/May/2019:21:21:27 +0200] \"GET /time.gif HTTP/2.0\" 200 172102 \"XXX\" \"Mozilla/5.0 (Linux; Android 8.1.0; V1816A Build/OPM1.171019.011; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/66.0.3359.126 MQQBrowser/6.2 TBS/044611 Mobile Safari/537.36 MMWEBID/XXX MicroMessenger/7.0.4.1420(0x2700043A) Process/tools NetType/WIFI Language/zh_CN\" 492.600\nhookrace.net 123.13.XXX.XXX - - [21/May/2019:21:21:27 +0200] \"GET /time.gif HTTP/2.0\" 200 1275 \"XXX\" \"Mozilla/5.0 (Linux; Android 9; LYA-AL00 Build/HUAWEILYA-AL00L; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/66.0.3359.126 MQQBrowser/6.2 TBS/044704 Mobile Safari/537.36 MMWEBID/XXX MicroMessenger/7.0.4.1420(0x2700043A) Process/tools NetType/WIFI Language/zh_CN\" 1.888\nhookrace.net 117.91.XXX.XXX - - [21/May/2019:21:21:27 +0200] \"GET /time.gif HTTP/2.0\" 200 4684 \"XXX\" \"Mozilla/5.0 (iPhone; CPU iPhone OS 12_1_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/16D57 MicroMessenger/7.0.3(0x17000321) NetType/WIFI Language/zh_CN\" 12.123\n</code></pre> \n </div> \n</div> \n<p>I checked a few IP addresses and they were all in mobile networks, not data centers. The user agent containing MicroMessenger and MQQBrowser indicates that the source of the traffic are WeChat and/or QQ, popular chinese chat apps.</p> \n<h2 id=\"quantifying-the-traffic\">Quantifying the Traffic</h2> \n<p>For reference, the system I’m running on is a simple <a href=\"https://www.debian.org/\">Debian</a> based VPS with 2 threads and 2 GB of RAM that also functions as the main server for <a href=\"https://ddnet.tw/\">DDNet’s website</a>, database and my HookRace blog.</p> \n<p>I already had to do some scaling when posting the <a href=\"https://hookrace.net/blog/time.gif/\">initial blog post</a> on <a href=\"https://news.ycombinator.com/item?id=14996715\">Hacker News</a>, optimizing the Haskell application itself to use LZW encoding in the GIF frames, to properly clean up connections to prevent any memory leaks and disable buffering in nginx’s config.</p> \n<p>But the current level of traffic is on a different scale with 2.4 million hits on time.gif in the last 23 hours (30 hits per second) resulting in 113 GB of data being transferred. And many of those connections don’t finish quickly, instead they linger for seconds, minutes or even hours.</p> \n<p>Using <code class=\"language-plaintext highlighter-rouge\">lsof -i | grep Time | wc -l</code> I can see that there are about 6000 people downloading the GIF at peak times, causing up to 30 Mbit/s of outgoing traffic with 7000 packets/second incoming and the same number outgoing. The <a href=\"https://ddnet.tw/stats/server/\">DDNet server statistics</a> lets me monitor this nicely (<a href=\"https://hookrace.net/blog/server-statistics/\">related blog article</a>):</p> \n<p>Network <img src=\"https://hookrace.net/public/chinese-traffic/ddnet-network.png\" alt=\"Network Traffic\" /> Packets <img src=\"https://hookrace.net/public/chinese-traffic/ddnet-packets.png\" alt=\"Network Packets\" /> CPU <img src=\"https://hookrace.net/public/chinese-traffic/ddnet-cpu.png\" alt=\"CPU Usage\" /></p> \n<h2 id=\"keeping-up-with-the-traffic\">Keeping Up with the Traffic</h2> \n<p>Regenerating the <a href=\"https://ddnet.tw/ranks/\">ranks pages of DDNet</a> usually causes the main CPU load on the server, which can be seen in the above CPU graph as spikes. This task is already set to only run when the server is below a specified load, so that more essential tasks have priority.</p> \n<p>The first new problem was nginx running into a limit of 768 worker_connections:</p> \n<div class=\"language-plaintext highlighter-rouge\"> \n <div class=\"highlight\"> \n  <pre class=\"highlight\"><code>2019/05/20 20:41:30 [alert] 761#761: *3828093 768 worker_connections are not enough while connecting to upstream, client: 49.114.XXX.XXX, server: hookrace.net, request: \"GET /time.gif HTTP/2.0\", upstream: \"http://127.0.0.1:5002/\", host: \"hookrace.net\", referrer: \"XXX\"\n</code></pre> \n </div> \n</div> \n<p>Luckily that is easily fixed in <code class=\"language-plaintext highlighter-rouge\">/etc/nginx/nginx.conf</code> by increasing the number of worker_connections to keep alive, each of which is handling one of the long-lasting time.gif requests:</p> \n<figure class=\"highlight\"> \n <pre><code class=\"language-nginx\" data-lang=\"nginx\"><span class=\"k\">events</span> <span class=\"p\">{</span>\n  <span class=\"kn\">worker_connections</span> <span class=\"mi\">20000</span><span class=\"p\">;</span>\n<span class=\"p\">}</span></code></pre> \n</figure> \n<p>and <code class=\"language-plaintext highlighter-rouge\">systemctl reload nginx</code>. No downtime required since nginx will start new worker processes to handle new requests while keeping the old ones alive for a time to keep handling existing connections.</p> \n<p>Unfortunately that fix only lasted a few hours until the next problem appeared:</p> \n<div class=\"language-plaintext highlighter-rouge\"> \n <div class=\"highlight\"> \n  <pre class=\"highlight\"><code>2019/05/20 23:09:21 [alert] 15188#15188: *4041619 socket() failed (24: Too many open files) while connecting to upstream, client: 27.207.XXX.XXX, server: hookrace.net, request: \"GET /time.gif HTTP/2.0\", upstream: \"http://127.0.0.1:5002/\", host: \"hookrace.net\", referrer: \"XXX\"\n</code></pre> \n </div> \n</div> \n<p>Increasing the limits in <code class=\"language-plaintext highlighter-rouge\">/etc/security/limits.conf</code> for the nginx user fixes this:</p> \n<div class=\"language-plaintext highlighter-rouge\"> \n <div class=\"highlight\"> \n  <pre class=\"highlight\"><code>#&lt;domain&gt;      &lt;type&gt;  &lt;item&gt;         &lt;value&gt;\nnginx          soft    nofile         1048576\nnginx          hard    nofile         1048576\n</code></pre> \n </div> \n</div> \n<p>The value of <code class=\"language-plaintext highlighter-rouge\">1048576</code> is chosen since it’s the value set in <code class=\"language-plaintext highlighter-rouge\">sysctl fs.file-max</code> and it should be good enough for now.</p> \n<p>Next I noticed that the server was running out of memory with both the Haskell application and nginx having to keep track of so many connections at once. For now I increased the swap size on the fly to keep some less commonly used stuff there using <code class=\"language-plaintext highlighter-rouge\">dd if=/dev/zero of=/var/swap bs=1M count=5000 &amp;&amp; mkswap /var/swap &amp;&amp; swapon /var/swap</code>.</p> \n<p>When running out of memory I noticed that Python’s msgpack implementation <a href=\"https://github.com/msgpack/msgpack-python/issues/239\">fails quite confusingly</a> when it runs OOM. So I had to add some fixes to the code creating the <a href=\"https://ddnet.tw/ranks/\">DDNet ranks pages</a> to handle this possibility.</p> \n<p>The Linux Kernel’s TCP buffers ran out of memory next, complaining in dmesg:</p> \n<div class=\"language-plaintext highlighter-rouge\"> \n <div class=\"highlight\"> \n  <pre class=\"highlight\"><code>[1638211.984805] TCP: out of memory -- consider tuning tcp_mem\n</code></pre> \n </div> \n</div> \n<p>So I increased them with a <code class=\"language-plaintext highlighter-rouge\">net.ipv4.tcp_mem = 116730 155640 233460</code> in <code class=\"language-plaintext highlighter-rouge\">/etc/sysctl.conf</code> and reloaded it with <code class=\"language-plaintext highlighter-rouge\">sysctl -p</code>.</p> \n<p>A limitation of my current approach is the number of ports nginx can open to proxy to the Haskell application. If that gets blown I’ll have to communicate to the application differently or simply redirect to the application directly instead of proxying it. That would also reduce the CPU load significantly, cutting out nginx which happens to be much more expensive than the Haskell application, probably because it’s also handling TLS.</p> \n<h2 id=\"final-words\">Final Words</h2> \n<p>While it was fun to keep time.gif running in the face of this amount of traffic, I still haven’t answered the final question of where this traffic is coming from. It might be that lots of Chinese happen to be spreading time.gif on WeChat and QQ, but for that the traffic looks a bit too sterile. Has anyone seen similar traffic patterns and might know if they are real or some kind of botnet? Maybe someone has embedded traffic.gif on some WeChat-specific page. If anyone has a clue please drop me an email at <a href=\"mailto:dennis@felsin9.de\">dennis@felsin9.de</a>.</p> \n<p>The best guess so far is by Kolen:</p> \n<blockquote> \n <p>Hi,</p> \n <p>I read your post and this is just my guess:</p> \n <p>Chinese “WhatsApp” type of communication culture is very strange. They are like spam emails in the old days. Often time some one might create posts in picture, eg include warm message such as reminding each other to put on more clothes as the weather is getting cold, etc.</p> \n <p>My guess is then someone read your trick and thought that it is a good idea to create some picture that always show the current time. Eg to remind others that it is time to sleep or something.</p> \n <p>And like email spams in the old days, people can share things like this crazily, often by older people who don’t know much about technology. (Just like how some tweet can go viral, messages like this could also go viral within there networks. And unfortunately the viral thing we often received are really rubbish like.)</p> \n <p>yours,</p> \n <p>Kolen</p> \n</blockquote> \n<p>Discuss on <a href=\"https://news.ycombinator.com/item?id=19978393\">Hacker News</a>.</p>","descriptionType":"html","feedId":23327,"bgimg":"https://hookrace.net/time.gif","linkMd5":"87ecf9c51b0d3ced5ee9e7df7c097b11","author":"","articleImgCdnMap":{"https://hookrace.net/time.gif":null,"https://hookrace.net/public/chinese-traffic/goaccess.png":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn62@2020_4/2021/05/11/19-19-28-516_33c597367addaf27.webp","https://hookrace.net/public/chinese-traffic/ddnet-network.png":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn68@2020_5/2021/05/11/19-19-28-142_1a5795b05fcf5e17.webp","https://hookrace.net/public/chinese-traffic/ddnet-packets.png":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn72@2020_5/2021/05/11/19-19-28-276_7e8b47a5935ab2cb.webp","https://hookrace.net/public/chinese-traffic/ddnet-cpu.png":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn58@2020_5/2021/05/11/19-19-27-886_bc038085403a9f6c.webp"},"publishedOrCreatedDate":1620760212752}],"record":{"createdTime":"2021-05-12 03:10:12","updatedTime":"2021-05-12 03:10:12","feedId":23327,"fetchDate":"Tue, 11 May 2021 19:10:12 +0000","fetchMs":551,"handleMs":67,"totalMs":677268,"newArticles":0,"totalArticles":34,"status":1,"type":0,"ip":"af0629e1ae74a27744b4cbd27b40a78e","hostName":"us-55*","requestId":"e975d44816a1456b99f939456adf48a8_23327","contentType":"text/xml; charset=UTF-8","totalBytes":122828,"bgimgsTotal":1,"bgimgsGithubTotal":0,"articlesImgsTotal":5,"articlesImgsGithubTotal":4,"successGithubMap":{"myreaderx12":1,"myreaderx13":1,"myreaderx5oss":1,"myreaderx31":1},"failGithubMap":{}},"feed":{"createdTime":"2020-09-07 02:30:06","updatedTime":"2020-09-07 04:22:32","id":23327,"name":"HookRace Blog","url":"https://hookrace.net/blog/feed/","subscriber":141,"website":null,"icon":"https://hookrace.net/public/favicon.ico","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx64/cdn59@2020_4/2020/09/06/20-22-32-023_8e8dd0441687ee39.png","description":"","weekly":null,"link":null},"noPictureArticleList":[{"createdTime":"2021-05-12 03:21:29","updatedTime":"2021-05-12 03:21:29","id":null,"feedId":23327,"linkMd5":"87ecf9c51b0d3ced5ee9e7df7c097b11"}],"tmpCommonImgCdnBytes":0,"tmpBodyImgCdnBytes":122828,"tmpBgImgCdnBytes":0,"extra4":{"start":1620760211937,"total":0,"statList":[{"spend":748,"msg":"获取xml内容"},{"spend":67,"msg":"解释文章"},{"spend":120168,"msg":"正文链接上传到cdn"},{"spend":121368,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"}]},"extra5":5,"extra6":4,"extra7ImgCdnFailResultVector":[null,null,null,null,null,null],"extra10_invalidATagHrefValue":{"https://hookrace.net/blog/chinese-traffic-time.gif_mailto:dennis@felsin9.de":"mailto:dennis@felsin9.de","https://hookrace.net/blog/chinese-traffic-time.gif_/blog/server-statistics/":"https://hookrace.net/blog/server-statistics/","https://hookrace.net/blog/chinese-traffic-time.gif_/blog/time.gif/":"https://hookrace.net/blog/time.gif/"},"extra111_proxyServerAndStatMap":{},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://hookrace.net/public/chinese-traffic/ddnet-cpu.png","sourceStatusCode":200,"destWidth":516,"destHeight":233,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn58@2020_5/2021/05/11/19-19-27-886_bc038085403a9f6c.webp","sourceBytes":11032,"destBytes":26814,"targetWebpQuality":75,"feedId":23327,"totalSpendMs":275,"convertSpendMs":7,"createdTime":"2021-05-12 03:19:27","host":"us-011*","referer":"https://hookrace.net/blog/chinese-traffic-time.gif","linkMd5ListStr":"87ecf9c51b0d3ced5ee9e7df7c097b11","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"10.8 KB","destSize":"26.2 KB","compressRate":"243.1%"},{"code":1,"isDone":false,"source":"https://hookrace.net/public/chinese-traffic/ddnet-packets.png","sourceStatusCode":200,"destWidth":516,"destHeight":219,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn72@2020_5/2021/05/11/19-19-28-276_7e8b47a5935ab2cb.webp","sourceBytes":7455,"destBytes":20544,"targetWebpQuality":75,"feedId":23327,"totalSpendMs":683,"convertSpendMs":6,"createdTime":"2021-05-12 03:19:27","host":"us-039*","referer":"https://hookrace.net/blog/chinese-traffic-time.gif","linkMd5ListStr":"87ecf9c51b0d3ced5ee9e7df7c097b11","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"7.3 KB","destSize":"20.1 KB","compressRate":"275.6%"},{"code":1,"isDone":false,"source":"https://hookrace.net/public/chinese-traffic/ddnet-network.png","sourceStatusCode":200,"destWidth":516,"destHeight":219,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn68@2020_5/2021/05/11/19-19-28-142_1a5795b05fcf5e17.webp","sourceBytes":8162,"destBytes":23462,"targetWebpQuality":75,"feedId":23327,"totalSpendMs":559,"convertSpendMs":7,"createdTime":"2021-05-12 03:19:27","host":"europe-25*","referer":"https://hookrace.net/blog/chinese-traffic-time.gif","linkMd5ListStr":"87ecf9c51b0d3ced5ee9e7df7c097b11","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"8 KB","destSize":"22.9 KB","compressRate":"287.5%"},{"code":1,"isDone":false,"source":"https://hookrace.net/public/chinese-traffic/goaccess.png","sourceStatusCode":200,"destWidth":460,"destHeight":727,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn62@2020_4/2021/05/11/19-19-28-516_33c597367addaf27.webp","sourceBytes":46706,"destBytes":52008,"targetWebpQuality":75,"feedId":23327,"totalSpendMs":943,"convertSpendMs":14,"createdTime":"2021-05-12 03:19:27","host":"us-012*","referer":"https://hookrace.net/blog/chinese-traffic-time.gif","linkMd5ListStr":"87ecf9c51b0d3ced5ee9e7df7c097b11","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"45.6 KB","destSize":"50.8 KB","compressRate":"111.4%"}],"successGithubMap":{"myreaderx12":1,"myreaderx13":1,"myreaderx5oss":1,"myreaderx31":1},"failGithubMap":{}}