{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2022-03-14 19:23:40","updatedTime":"2022-03-14 19:23:40","title":"Spring Cloud Ribbon 中的 7 种负载均衡策略","link":"https://segmentfault.com/a/1190000041542551","description":"<p>负载均衡通器常有两种实现手段，一种是服务端负载均衡器，另一种是客户端负载均衡器，而我们今天的主角 Ribbon 就属于后者——客户端负载均衡器。</p>\n<p><strong>服务端负载均衡器的问题是，它提供了更强的流量控制权，但无法满足不同的消费者希望使用不同负载均衡策略的需求，而使用不同负载均衡策略的场景确实是存在的，所以客户端负载均衡就提供了这种灵活性。</strong> 然而客户端负载均衡也有其缺点，如果配置不当，可能会导致服务提供者出现热点，或者压根就拿不到任何服务的情况，所以我们本文就来了解一下这 7 种内置负载均衡策略的具体规则。</p>\n<h2>Ribbon 介绍</h2>\n<p>Ribbon 是 Spring Cloud 技术栈中非常重要的基础框架，它为 Spring Cloud 提供了负载均衡的能力，比如 Fegin 和 OpenFegin 都是基于 Ribbon 实现的，就连 Nacos 中的负载均衡也使用了 Ribbon 框架。</p>\n<p>Ribbon 框架的强大之处在于，它不仅内置了 7 种负载均衡策略，同时还支持用户自定义负载均衡策略，所以其开放性和便利性也是它得以流行的主要原因。</p>\n<p>服务端负载均衡器和客户端负载均衡器的区别如下图所示：<br><img src=\"https://segmentfault.com/img/remote/1460000041542553\" alt=\"image.png\" title=\"image.png\"><br>客户端负载均衡器的实现原理是通过注册中心，如 Nacos，将可用的服务列表拉取到本地（客户端），再通过客户端负载均衡器（设置的负载均衡策略）获取到某个服务器的具体 ip 和端口，然后再通过 Http 框架请求服务并得到结果，其执行流程如下图所示：<img src=\"https://segmentfault.com/img/remote/1460000041542554\" alt=\"image.png\" title=\"image.png\" /></br></img></br></p>\n<h2>负载均衡设置</h2>\n<p>以 Nacos 中的 Ribbon 负载均衡设置为例，在配置文件 application.yml 中设置如下配置即可：</p>\n<pre><code class=\"yaml\">springcloud-nacos-provider: # nacos中的服务id\n  ribbon:\n    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RoundRobinRule #设置负载均衡策略</code></pre>\n<p>因为 Nacos 中已经内置了 Ribbon，所以在实际项目开发中无需再添加 Ribbon 依赖了，这一点我们在 Nacos 的依赖树中就可以看到，如下图所示：<br><img src=\"https://segmentfault.com/img/remote/1460000041524129\" alt=\"image.png\" title=\"image.png\"><br>Ribbon 默认的负载均衡策略是轮询模式，我们配置 3 个服务提供者的执行结果如下图所示：<br><img src=\"https://segmentfault.com/img/remote/1460000041542555\" alt=\"轮询.gif\" title=\"轮询.gif\"><br>然后，我们再将 Ribbon 负载均衡策略设置为随机模式，配置内容如下：</br></img></br></br></img></br></p>\n<pre><code class=\"yaml\">springcloud-nacos-provider: # nacos中的服务id\n  ribbon:\n    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule #设置随机负载均衡</code></pre>\n<p>重启客户端，执行结果如下图所示：<br><img src=\"https://segmentfault.com/img/remote/1460000041542556\" alt=\"随机策略.gif\" title=\"随机策略.gif\" /></br></p>\n<h2>7种负载均衡策略</h2>\n<h3>1.轮询策略</h3>\n<p>轮询策略：RoundRobinRule，按照一定的顺序依次调用服务实例。比如一共有 3 个服务，第一次调用服务 1，第二次调用服务 2，第三次调用服务3，依次类推。<br>此策略的配置设置如下：</br></p>\n<pre><code class=\"yaml\">springcloud-nacos-provider: # nacos中的服务id\n  ribbon:\n    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RoundRobinRule #设置负载均衡</code></pre>\n<h3>2.权重策略</h3>\n<p>权重策略：WeightedResponseTimeRule，根据每个服务提供者的响应时间分配一个权重，响应时间越长，权重越小，被选中的可能性也就越低。<br>它的实现原理是，刚开始使用轮询策略并开启一个计时器，每一段时间收集一次所有服务提供者的平均响应时间，然后再给每个服务提供者附上一个权重，权重越高被选中的概率也越大。<br>此策略的配置设置如下：</br></br></p>\n<pre><code class=\"yaml\">springcloud-nacos-provider: # nacos中的服务id\n  ribbon:\n    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.WeightedResponseTimeRule</code></pre>\n<h3>3.随机策略</h3>\n<p>随机策略：RandomRule，从服务提供者的列表中随机选择一个服务实例。<br>此策略的配置设置如下：</br></p>\n<pre><code class=\"yaml\">springcloud-nacos-provider: # nacos中的服务id\n  ribbon:\n    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule #设置负载均衡</code></pre>\n<h3>4.最小连接数策略</h3>\n<p>最小连接数策略：BestAvailableRule，也叫最小并发数策略，它是遍历服务提供者列表，选取连接数最小的⼀个服务实例。如果有相同的最小连接数，那么会调用轮询策略进行选取。<br>此策略的配置设置如下：</br></p>\n<pre><code class=\"yaml\">springcloud-nacos-provider: # nacos中的服务id\n  ribbon:\n    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.BestAvailableRule #设置负载均衡</code></pre>\n<h3>5.重试策略</h3>\n<p>重试策略：RetryRule，按照轮询策略来获取服务，如果获取的服务实例为 null 或已经失效，则在指定的时间之内不断地进行重试来获取服务，如果超过指定时间依然没获取到服务实例则返回 null。<br>此策略的配置设置如下：</br></p>\n<pre><code class=\"yaml\">ribbon:\n  ConnectTimeout: 2000 # 请求连接的超时时间\n  ReadTimeout: 5000 # 请求处理的超时时间\nspringcloud-nacos-provider: # nacos 中的服务 id\n  ribbon:\n    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule #设置负载均衡</code></pre>\n<h3>6.可用性敏感策略</h3>\n<p>可用敏感性策略：AvailabilityFilteringRule，先过滤掉非健康的服务实例，然后再选择连接数较小的服务实例。<br>此策略的配置设置如下：</br></p>\n<pre><code class=\"yaml\">springcloud-nacos-provider: # nacos中的服务id\n  ribbon:\n    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.AvailabilityFilteringRule</code></pre>\n<h3>7.区域敏感策略</h3>\n<p>区域敏感策略：ZoneAvoidanceRule，根据服务所在区域（zone）的性能和服务的可用性来选择服务实例，在没有区域的环境下，该策略和轮询策略类似。<br>此策略的配置设置如下：</br></p>\n<pre><code class=\"yaml\">springcloud-nacos-provider: # nacos中的服务id\n  ribbon:\n    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.ZoneAvoidanceRule</code></pre>\n<h2>项目源码</h2>\n<p><a href=\"https://gitee.com/mydb/spring-cloud-alibaba-example\" rel=\"nofollow noreferrer\">https://gitee.com/mydb/spring-cloud-alibaba-example</a></p>\n<h2>总结</h2>\n<p>Ribbon 为客户端负载均衡器，相比于服务端负载均衡器的统一负载均衡策略来说，它提供了更多的灵活性。Ribbon 内置了 7 种负载均衡策略：轮询策略、权重策略、随机策略、最小连接数策略、重试策略、可用性敏感策略、区域性敏感策略，并且用户可以通过继承 RoundRibbonRule 来实现自定义负载均衡策略。</p>\n<blockquote>\n <p>是非审之于己，毁誉听之于人，得失安之于数。</p>\n <p>公众号：Java中文社群</p>\n <p>Java面试合集：<a href=\"https://gitee.com/mydb/interview\" rel=\"nofollow noreferrer\">https://gitee.com/mydb/interview</a></p>\n</blockquote>","descriptionType":"html","publishedDate":"Mon, 14 Mar 2022 00:49:07 +0000","feedId":6615,"bgimg":"https://segmentfault.com/img/remote/1460000041542553","linkMd5":"2fb84cd1b3b41f4f3568d323e8bb2a87","destWidth":732,"destHeight":715,"sourceBytes":34518,"destBytes":34518,"author":"Java中文社群","articleImgCdnMap":{"https://segmentfault.com/img/remote/1460000041542553":null,"https://segmentfault.com/img/remote/1460000041542554":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn8@2020_6/2022/03/14/11-23-53-826_818acd793cabbbae.webp","https://segmentfault.com/img/remote/1460000041524129":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn18@2020_1/2022/03/14/11-23-53-854_5294962a9479f2bc.webp","https://segmentfault.com/img/remote/1460000041542555":null,"https://segmentfault.com/img/remote/1460000041542556":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn13@2020_3/2022/03/14/11-23-53-884_ce4adc5a2f72ec9c.webp"},"publishedOrCreatedDate":1647257020022}],"record":{"createdTime":"2022-03-14 19:23:40","updatedTime":"2022-03-14 19:23:40","feedId":6615,"fetchDate":"Mon, 14 Mar 2022 11:23:40 +0000","fetchMs":3884,"handleMs":33,"totalMs":51873,"newArticles":0,"totalArticles":50,"status":1,"type":0,"ip":"f306b40366a93aa712f78b685bea0f01","hostName":"us-53*","requestId":"33a861844dab48b1ababcb11c2816989_6615","contentType":"application/atom+xml; charset=UTF-8","totalBytes":166370,"bgimgsTotal":1,"bgimgsGithubTotal":0,"articlesImgsTotal":5,"articlesImgsGithubTotal":3,"successGithubMap":{"myreaderx25":1,"myreaderx16":1,"myreaderx2":1},"failGithubMap":{"myreaderx23":1,"myreaderx31":1}},"feed":{"createdTime":"2020-08-25 04:33:08","updatedTime":"2021-04-03 14:32:14","id":6615,"name":"SegmentFault 最新的文章","url":"http://segmentfault.com/feeds/blogs","subscriber":null,"website":null,"icon":"https://segmentfault.com/favicon.ico","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx63/cdn75@2020_2/2021/04/03/06-32-08-760_eb238dca7c8e9f0e.jpg","description":"","weekly":null,"link":null},"noPictureArticleList":[{"createdTime":"2022-03-14 19:23:56","updatedTime":"2022-03-14 19:23:56","id":null,"feedId":6615,"linkMd5":"2fb84cd1b3b41f4f3568d323e8bb2a87"}],"tmpCommonImgCdnBytes":0,"tmpBodyImgCdnBytes":166370,"tmpBgImgCdnBytes":0,"extra4":{"start":1647256984466,"total":0,"statList":[{"spend":35523,"msg":"获取xml内容"},{"spend":33,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":5583,"msg":"正文链接上传到cdn"}]},"extra5":5,"extra6":5,"extra7ImgCdnFailResultVector":[{"code":1,"isDone":false,"source":"https://segmentfault.com/img/remote/1460000041542553","sourceStatusCode":200,"destWidth":732,"destHeight":715,"sourceBytes":34518,"destBytes":34518,"feedId":6615,"totalSpendMs":3645,"convertSpendMs":0,"createdTime":"2022-03-14 19:23:45","host":"us-54*","referer":"https://segmentfault.com/a/1190000041542551","linkMd5ListStr":"2fb84cd1b3b41f4f3568d323e8bb2a87,2fb84cd1b3b41f4f3568d323e8bb2a87","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx31/cdn90/contents/2022/03/14/11-23-48-885_7abd1c02b445da69.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69855631.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO, X-GitHub-Request-Id, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Mon, 14 Mar 2022 11:23:48 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["8D6C:78CB:145839B:384441F:622F25C4"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1647260081"],"x-ratelimit-resource":["core"],"x-ratelimit-used":["61"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx31/cdn90/contents/2022/03/14/11-23-48-885_7abd1c02b445da69.webp","historyStatusCode":[],"spendMs":36},"base64UserPassword":null,"token":"da243******************************d9e47"},"githubUser":"myreaderx31","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"33.7 KB","destSize":"33.7 KB","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://segmentfault.com/img/remote/1460000041542553","sourceStatusCode":200,"destWidth":732,"destHeight":715,"sourceBytes":34518,"destBytes":34518,"feedId":6615,"totalSpendMs":1824,"convertSpendMs":0,"createdTime":"2022-03-14 19:23:48","host":"us-54*","referer":"https://segmentfault.com/a/1190000041542551","linkMd5ListStr":"2fb84cd1b3b41f4f3568d323e8bb2a87,2fb84cd1b3b41f4f3568d323e8bb2a87","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx31/cdn90/contents/2022/03/14/11-23-50-720_7abd1c02b445da69.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69855631.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO, X-GitHub-Request-Id, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Mon, 14 Mar 2022 11:23:50 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["8D6C:78CB:14583D8:38444CD:622F25C6"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1647260081"],"x-ratelimit-resource":["core"],"x-ratelimit-used":["61"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx31/cdn90/contents/2022/03/14/11-23-50-720_7abd1c02b445da69.webp","historyStatusCode":[],"spendMs":31},"base64UserPassword":null,"token":"da243******************************d9e47"},"githubUser":"myreaderx31","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"33.7 KB","destSize":"33.7 KB","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://segmentfault.com/img/remote/1460000041542555","sourceStatusCode":200,"destWidth":1190,"destHeight":282,"sourceBytes":203904,"destBytes":203904,"feedId":6615,"totalSpendMs":3298,"convertSpendMs":0,"createdTime":"2022-03-14 19:23:50","host":"europe-22*","referer":"https://segmentfault.com/a/1190000041542551","linkMd5ListStr":"2fb84cd1b3b41f4f3568d323e8bb2a87","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn6/contents/2022/03/14/11-23-53-864_e22cb6b17f675ed9.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO, X-GitHub-Request-Id, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Mon, 14 Mar 2022 11:23:54 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["8CC4:13D6F:2C4669:4827D4:622F25C9"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1647260075"],"x-ratelimit-resource":["core"],"x-ratelimit-used":["60"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn6/contents/2022/03/14/11-23-53-864_e22cb6b17f675ed9.webp","historyStatusCode":[],"spendMs":296},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"199.1 KB","destSize":"199.1 KB","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://segmentfault.com/img/remote/1460000041542555","sourceStatusCode":200,"destWidth":1190,"destHeight":282,"sourceBytes":203904,"destBytes":203904,"feedId":6615,"totalSpendMs":2067,"convertSpendMs":0,"createdTime":"2022-03-14 19:23:54","host":"europe-22*","referer":"https://segmentfault.com/a/1190000041542551","linkMd5ListStr":"2fb84cd1b3b41f4f3568d323e8bb2a87","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn6/contents/2022/03/14/11-23-55-890_e22cb6b17f675ed9.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO, X-GitHub-Request-Id, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Mon, 14 Mar 2022 11:23:56 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["8CC4:13D6F:2C467A:4827F0:622F25CB"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1647260075"],"x-ratelimit-resource":["core"],"x-ratelimit-used":["60"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn6/contents/2022/03/14/11-23-55-890_e22cb6b17f675ed9.webp","historyStatusCode":[],"spendMs":413},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"199.1 KB","destSize":"199.1 KB","compressRate":"100%"}],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://us-037.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe21.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-22.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://europe-60.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://segmentfault.com/img/remote/1460000041542554","sourceStatusCode":200,"destWidth":732,"destHeight":483,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn8@2020_6/2022/03/14/11-23-53-826_818acd793cabbbae.webp","sourceBytes":18096,"destBytes":18096,"feedId":6615,"totalSpendMs":3332,"convertSpendMs":0,"createdTime":"2022-03-14 19:23:50","host":"europe21*","referer":"https://segmentfault.com/a/1190000041542551","linkMd5ListStr":"2fb84cd1b3b41f4f3568d323e8bb2a87","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"17.7 KB","destSize":"17.7 KB","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://segmentfault.com/img/remote/1460000041542556","sourceStatusCode":200,"destWidth":1190,"destHeight":256,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn13@2020_3/2022/03/14/11-23-53-884_ce4adc5a2f72ec9c.webp","sourceBytes":117790,"destBytes":117790,"feedId":6615,"totalSpendMs":3467,"convertSpendMs":0,"createdTime":"2022-03-14 19:23:50","host":"europe-60*","referer":"https://segmentfault.com/a/1190000041542551","linkMd5ListStr":"2fb84cd1b3b41f4f3568d323e8bb2a87","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"115 KB","destSize":"115 KB","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://segmentfault.com/img/remote/1460000041524129","sourceStatusCode":200,"destWidth":732,"destHeight":362,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn18@2020_1/2022/03/14/11-23-53-854_5294962a9479f2bc.webp","sourceBytes":30484,"destBytes":30484,"feedId":6615,"totalSpendMs":3981,"convertSpendMs":0,"createdTime":"2022-03-14 19:23:50","host":"us-037*","referer":"https://segmentfault.com/a/1190000041542551","linkMd5ListStr":"2fb84cd1b3b41f4f3568d323e8bb2a87","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"29.8 KB","destSize":"29.8 KB","compressRate":"100%"}],"successGithubMap":{"myreaderx25":1,"myreaderx16":1,"myreaderx2":1},"failGithubMap":{"myreaderx23":1,"myreaderx31":1}}