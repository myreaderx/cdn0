{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-10-19 01:51:35","updatedTime":"2020-10-19 01:51:35","title":"How I created two images with the same MD5 hash","link":"https://natmchugh.blogspot.com/2014/10/how-i-created-two-images-with-same-md5.html","description":"<div class=\"separator\" style=\"clear: both; text-align: center;\"></div><span style=\"font-family: Arial, Helvetica, sans-serif;\">I posted the following images the other day which although looking totally different have exactly the same MD5 hash (</span>e06723d4961a0a3f950e7786f3766338) .<br /><br /><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"http://www.fishtrap.co.uk/james.jpg.coll\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><span style=\"font-family: Arial, Helvetica, sans-serif;\"><img border=\"0\" src=\"http://www.fishtrap.co.uk/brown.jpg\" /></span></a></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"http://www.fishtrap.co.uk/barry.jpg.coll\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><span style=\"font-family: Arial, Helvetica, sans-serif;\"><img border=\"0\" src=\"http://www.fishtrap.co.uk/white.jpg\" /></span></a></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><span style=\"font-family: Arial, Helvetica, sans-serif;\"><br /></span></div><div class=\"separator\" style=\"clear: both; text-align: left;\"><span style=\"font-family: Arial, Helvetica, sans-serif;\">The images were just two I lifted from the web in fact I could have chosen any image or indeed any arbitrary data and created a collision with it.</span></div><div class=\"separator\" style=\"clear: both; text-align: left;\"><span style=\"font-family: Arial, Helvetica, sans-serif;\"><br /></span></div><h3 style=\"clear: both; text-align: left;\"><span style=\"font-family: Arial, Helvetica, sans-serif;\">Why is this&nbsp;surprising?</span></h3><div class=\"separator\" style=\"clear: both; text-align: left;\"><span style=\"font-family: Arial, Helvetica, sans-serif;\">MD5 was designed as a cryptographic hash function. These are supposed to&nbsp;possess&nbsp;the following 3 properties as&nbsp;per wikipedia (</span><a href=\"http://en.wikipedia.org/wiki/Cryptographic_hash_function#Properties\" style=\"font-family: Arial, Helvetica, sans-serif;\">http://en.wikipedia.org/wiki/Cryptographic_hash_function#Properties</a><span style=\"font-family: Arial, Helvetica, sans-serif;\">)</span></div><div class=\"separator\" style=\"clear: both; text-align: left;\"><span style=\"font-family: Arial, Helvetica, sans-serif;\"><br /></span></div><ul style=\"background-color: white; color: #252525; font-family: sans-serif; font-size: 14px; line-height: 22.3999996185303px; list-style-image: url(data:image/png; margin: 0.3em 0px 0px 1.6em; padding: 0px;\"><li style=\"margin-bottom: 0.1em;\"><i>Pre-image resistance</i><dl style=\"margin-bottom: 0.5em; margin-top: 0.2em;\"><dd style=\"line-height: 1.6; margin-bottom: 0.1em; margin-left: 1.6em; margin-right: 0px;\">Given a hash&nbsp;<i>h</i>&nbsp;it should be difficult to find any message&nbsp;<i>m</i>&nbsp;such that&nbsp;<i>h = hash(m)</i>.</dd></dl></li><li style=\"margin-bottom: 0.1em;\"><i>Second pre-image resistance</i><dl style=\"margin-bottom: 0.5em; margin-top: 0.2em;\"><dd style=\"line-height: 1.6; margin-bottom: 0.1em; margin-left: 1.6em; margin-right: 0px;\">Given an input&nbsp;<i>m</i><sub style=\"font-size: 11px; line-height: 1;\">1</sub>&nbsp;it should be difficult to find another input&nbsp;<i>m</i><sub style=\"font-size: 11px; line-height: 1;\">2</sub>&nbsp;such that&nbsp;<span class=\"nowrap\" style=\"white-space: nowrap;\"><i>m</i><sub style=\"font-size: 11px; line-height: 1;\">1</sub>&nbsp;≠&nbsp;<i>m</i><sub style=\"font-size: 11px; line-height: 1;\">2</sub></span>&nbsp;and&nbsp;<span class=\"nowrap\" style=\"white-space: nowrap;\"><i>hash</i>(<i>m</i><sub style=\"font-size: 11px; line-height: 1;\">1</sub>) =&nbsp;<i>hash</i>(<i>m</i><sub style=\"font-size: 11px; line-height: 1;\">2</sub>)</span>.</dd></dl></li><li style=\"margin-bottom: 0.1em;\"><i><a href=\"http://en.wikipedia.org/wiki/Collision_resistance\" style=\"background: none; color: #0b0080; text-decoration: none;\" title=\"Collision resistance\">Collision resistance</a></i><dl style=\"margin-bottom: 0.5em; margin-top: 0.2em;\"><dd style=\"line-height: 1.6; margin-bottom: 0.1em; margin-left: 1.6em; margin-right: 0px;\">It should be difficult to find two different messages&nbsp;<i>m</i><sub style=\"font-size: 11px; line-height: 1;\">1</sub>&nbsp;and&nbsp;<i>m</i><sub style=\"font-size: 11px; line-height: 1;\">2</sub>&nbsp;such that&nbsp;<span class=\"nowrap\" style=\"white-space: nowrap;\"><i>hash</i>(<i>m</i><sub style=\"font-size: 11px; line-height: 1;\">1</sub>) =&nbsp;<i>hash</i>(<i>m</i><sub style=\"font-size: 11px; line-height: 1;\">2</sub>)</span>. Such a pair is called a cryptographic&nbsp;<a class=\"mw-redirect\" href=\"http://en.wikipedia.org/wiki/Hash_collision\" style=\"background: none; color: #0b0080; text-decoration: none;\" title=\"Hash collision\">hash collision</a>.&nbsp;</dd></dl></li></ul><div class=\"separator\" style=\"clear: both; text-align: left;\"><span style=\"font-family: Arial, Helvetica, sans-serif;\"><br /></span></div><div class=\"separator\" style=\"clear: both; text-align: left;\"><span style=\"font-family: Arial, Helvetica, sans-serif;\">The two images above clearly&nbsp;demonstrate&nbsp;that MD5 lacks the final property. MD5 is broken as a&nbsp;</span><span style=\"font-family: Arial, Helvetica, sans-serif;\">cryptographic hash function.</span></div><div class=\"separator\" style=\"clear: both; text-align: left;\"><span style=\"font-family: Arial, Helvetica, sans-serif;\"><br /></span></div><div class=\"separator\" style=\"clear: both; text-align: left;\"><span style=\"font-family: Arial, Helvetica, sans-serif;\">To search though all possible MD5 values is 2<sup>128</sup> operations which is massive. To be in with a good chance of finding a collision would take ~ &nbsp;2<sup>64</sup> operations which is again far too big for normal computing.</span></div><h3 style=\"clear: both; text-align: left;\"><span style=\"font-family: Arial, Helvetica, sans-serif;\">How did I create the images?</span></h3><span style=\"font-family: Arial, Helvetica, sans-serif;\">This type of collision is has been termed a chosen prefix collision. In this case the image data is the prefix or to be more exact the internal state of the MD5 algorithm after processing the image is. You can't see the added binary data at the end of jpeg images as it is preceded with an&nbsp;End Of Image JPEG marker.</span><br /><span style=\"font-family: Arial, Helvetica, sans-serif;\"><br /></span><span style=\"font-family: Arial, Helvetica, sans-serif;\">Chosen prefix&nbsp;collisions&nbsp;for MD5 were first successfully shown in 2007 in this&nbsp;paper&nbsp;<a href=\"http://www.win.tue.nl/hashclash/ChosenPrefixCollisions/\">http://www.win.tue.nl/hashclash/ChosenPrefixCollisions/</a> .&nbsp;</span><span style=\"font-family: Arial, Helvetica, sans-serif;\">The attack uses iterations of&nbsp;differential</span><span style=\"font-family: Arial, Helvetica, sans-serif;\">&nbsp;analysis of MD5. The first successful differential analysis was demonstrated by Xiaoyun Wang in her 2005&nbsp;paper&nbsp;</span><a href=\"http://merlot.usc.edu/csac-f06/papers/Wang05a.pdf\" style=\"font-family: Arial, Helvetica, sans-serif;\">How to Break MD5 and Other Hash Functions</a><span style=\"font-family: Arial, Helvetica, sans-serif;\">.</span><br /><span style=\"font-family: Arial, Helvetica, sans-serif;\"><br /></span><span style=\"font-family: Arial, Helvetica, sans-serif;\">In a </span><a href=\"http://natmchugh.blogspot.co.uk/2014/10/how-i-made-two-php-files-with-same-md5.html\" style=\"font-family: Arial, Helvetica, sans-serif;\">previous post</a><span style=\"font-family: Arial, Helvetica, sans-serif;\"> I used an improved version of this&nbsp;</span><span style=\"font-family: Arial, Helvetica, sans-serif;\">differential </span><span style=\"font-family: Arial, Helvetica, sans-serif;\">path to create two PHP files with the same MD5 hash. Where those files differed by only a few bits and the data before the collision had to be identical. In a chosen prefix collision the data preceding the specially crafted collision blocks can be completely&nbsp;different.</span><br /><span style=\"font-family: Arial, Helvetica, sans-serif;\"><br /></span><span style=\"font-family: Arial, Helvetica, sans-serif;\">The chosen prefix&nbsp;collision&nbsp;attack works by repeatedly adding 'near collision' blocks which gradually&nbsp;work to &nbsp;eliminate&nbsp;the differences in the internal MD5 state until&nbsp;they are the same. Before this can be done the files must be of&nbsp;equal length and the bit differences must be of a&nbsp;particular form. This requires a brute force 'birthday' attack which tries random values until two are found that work, it does however have a much lower complexity than a complete brute force attack.</span><br /><span style=\"font-family: Arial, Helvetica, sans-serif;\"><br /></span><span style=\"font-family: Arial, Helvetica, sans-serif;\">If the attack sounds complicated to do in practice fortunately&nbsp;<a href=\"https://marc-stevens.nl/research/\">Marc Stevens</a> has created framework for automated finding of differential paths and using them to create chosen pre-fix collisions. It is&nbsp;available&nbsp;at&nbsp;<a href=\"https://code.google.com/p/hashclash/\">https://code.google.com/p/hashclash/</a>&nbsp;. It is intended mainly as a research tool but there is a</span><span style=\"font-family: Arial, Helvetica, sans-serif;\">&nbsp;GUI and pre-built binaries for windows available. I chose to run it on linux, however, using a bash script which can automate the repetitive steps needed.&nbsp;</span><br /><span style=\"font-family: Arial, Helvetica, sans-serif;\"><br /></span><span style=\"font-family: Arial, Helvetica, sans-serif;\">Here are the MD5 states following each&nbsp;successive&nbsp;block (these are unpadded versions of MD5 algorithm).&nbsp;</span><br /><center><table style=\"text-align: left;\"><tbody><tr><td>601034f03377d68d68a74f71b0d76bf4</td><td>c924b00ad433ccc979b8e79e6925f28e</td></tr><tr></tr><tr><td>0e5453c5c7deabc5e23331c415780ecf</td><td>0e5453c521968d3df17653c224bb30cd</td></tr><tr></tr><tr><td>8d43bcaea7f738cbbbae37b1a5ec4f3c</td><td>8d43bcae018f1a43cad159afb40f723a</td></tr><tr></tr><tr><td>ea12c8b8645e161d589c69dcf845dd60</td><td>ea12c8b8bef6f79467c08bda076aff5e</td></tr><tr></tr><tr><td>8ec47a1d73c2267dfb7686b83a3554fb</td><td>8ec47a1dce5608750a97a8b6495576f9</td></tr><tr></tr><tr><td>daa7508daa16fe67f09ede251abd83a2</td><td>daa7508dc5aadd5fffbefe2329dda3a0</td></tr><tr></tr><tr><td>c570b0b7b22e3a2545432f2a96baf83a</td><td>c570b0b7cec2591d55634f28a6da1839</td></tr><tr></tr><tr><td>00d3111f51f505e81d5f5db537ed64a4</td><td>00d3111f6d0926e22d7f7db5470d85a4</td></tr><tr></tr><tr><td>73e0e4d069fdac380cfe2cf0e7ba47fb</td><td>73e0e4d0851dad321c1e2df0f7da47fb</td></tr><tr></tr><tr><td>583a08b75fa22174307a24df6109b9ec</td><td>583a08b76bc22174309a24df6129b9ec</td></tr><tr></tr><tr><td>e2bdd99bb0bcc66557192eec1f36ff44</td><td>e2bdd99bb0bcc66557192eec1f36ff44</td></tr><tr></tr></tbody></table></center><span style=\"font-family: Arial, Helvetica, sans-serif;\"><br /></span><span style=\"font-family: Arial, Helvetica, sans-serif;\">The first line&nbsp;is the state after processing the original images where the two hashes are unrelated. The second line shows the state after padding to equal length and the addition of the 'birthday' bits. As you can see the first four bytes of the hash are the same. Each of the next nine lines shows the hashes gradually&nbsp;converging until they are there are no differences</span><span style=\"font-family: Arial, Helvetica, sans-serif;\">. The last hash is different from the one calculated on the whole image as that one includes padding.</span><br /><div class=\"p1\"><div class=\"separator\" style=\"clear: both; text-align: center;\"><br /></div><span style=\"font-family: Arial, Helvetica, sans-serif;\">The image below shows the bit differences between the above hashes a '.' indicates they are the same a '1' indicates a difference.</span><br /><span style=\"font-family: Arial, Helvetica, sans-serif;\"><br /></span><br /><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"http://4.bp.blogspot.com/-o-vUik9eSRY/VFNi82zjxgI/AAAAAAAANg8/QbPL319NqV8/s1600/Screen%2BShot%2B2014-10-31%2Bat%2B10.20.08.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://4.bp.blogspot.com/-o-vUik9eSRY/VFNi82zjxgI/AAAAAAAANg8/QbPL319NqV8/s1600/Screen%2BShot%2B2014-10-31%2Bat%2B10.20.08.png\" height=\"113\" width=\"640\" /></a></div><span style=\"font-family: Arial, Helvetica, sans-serif;\"><br /></span></div><span style=\"font-family: Arial, Helvetica, sans-serif;\"><br /></span> <span style=\"font-family: Arial, Helvetica, sans-serif;\">I ran HashClash on an AWS GPU instance. I cannot say with any certainty that this is the most efficient or cheapest option but it seemed to work reasonably quickly. In particular the 'birthdaying' step took much less time than I had expected. It finished in roughly 1hr originally this step had an estimated complexity of 2<sup>49</sup> compression function calls. In his article Marc Stevens gives an estimate of 2 days for creating a complete&nbsp;collision on a PS3 in 2007</span><span style=\"font-family: Arial, Helvetica, sans-serif;\">. I found that I was able to&nbsp;run the algorithm in about 10 hours on an AWS large GPU instance bringing it is at about $0.65 plus tax.</span><br /><span style=\"font-family: Arial, Helvetica, sans-serif;\"><br /></span><span style=\"font-family: Arial, Helvetica, sans-serif;\">I faced a few problems with the code as published and had to make some changes to the bash script and some of the C++ code related to saving the&nbsp;collisions. I don't know if the windows&nbsp;binaries&nbsp;that are published work any better as this seems to be where effort has most recently been expended. If anyone wants too know the changes I made let me know.</span><br /><span style=\"font-family: Arial, Helvetica, sans-serif;\"><br /></span><span style=\"font-family: Arial, Helvetica, sans-serif;\">So I guess the message to take away here is that MD5 is well and&nbsp;truly&nbsp;broken.&nbsp;Whilst the two images</span><span style=\"font-family: Arial, Helvetica, sans-serif;\">&nbsp;have not shown a break in the pre-image&nbsp;resistance</span><span style=\"font-family: Arial, Helvetica, sans-serif;\">&nbsp;or second&nbsp;pre-image resistance, I cannot think of a single case where the use of a broken cryptographic hash function is an&nbsp;appropriate&nbsp;choice.</span><br /><span style=\"font-family: Arial, Helvetica, sans-serif;\"><br /></span><span style=\"font-family: Arial, Helvetica, sans-serif;\">It was a chosen prefix collision attack similar to this that was used to produce a&nbsp;</span><span style=\"font-family: Arial, Helvetica, sans-serif;\">counterfeit ssl&nbsp;certificate used to sign the Flame malware as Microsoft and pass itself off as a Windows update.</span><br /><h3><span style=\"font-family: Arial, Helvetica, sans-serif;\">What Next?</span></h3><span style=\"font-family: Arial, Helvetica, sans-serif;\">Well once you have two&nbsp;colliding&nbsp;files you can easily create a third. You just take the output of the first files and a third with any data you want file and use it as the starting point for another chosen prefix&nbsp;collision. I may do this and would welcome image suggestions.</span><br /><span style=\"font-family: Arial, Helvetica, sans-serif;\"><br /></span><span style=\"font-family: Arial, Helvetica, sans-serif;\">Marc Stevens has also published a <a href=\"https://marc-stevens.nl/research/software/download.php?file=libdetectcoll-0.2.zip\">tool</a> for detecting files which have been&nbsp;processed&nbsp;in this way. Running this tool over either of the files can detect that&nbsp;collision&nbsp;blocks have been added.</span><br /><span style=\"font-family: Arial, Helvetica, sans-serif;\"><br /></span><h3><span style=\"font-family: Arial, Helvetica, sans-serif;\">Update</span></h3><div><span style=\"font-family: Arial, Helvetica, sans-serif;\">I&nbsp;successfully&nbsp;created a <a href=\"http://natmchugh.blogspot.co.uk/2014/11/three-way-md5-collision.html\">third collision</a>.</span></div>","descriptionType":"text/html","publishedDate":"Fri, 31 Oct 2014 17:20:00 +0000","feedId":25740,"bgimg":"http://www.fishtrap.co.uk/brown.jpg","linkMd5":"f51514489e35adc7be347c6899704b53","sourceBytes":0,"destBytes":0,"author":"noreply@blogger.com (Anonymous)","articleImgCdnMap":{"http://www.fishtrap.co.uk/brown.jpg":null,"http://www.fishtrap.co.uk/white.jpg":null,"http://4.bp.blogspot.com/-o-vUik9eSRY/VFNi82zjxgI/AAAAAAAANg8/QbPL319NqV8/s1600/Screen%2BShot%2B2014-10-31%2Bat%2B10.20.08.png":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn46@2020_3/2020/10/18/17-52-07-502_e210d6b69aaecc69.webp"},"publishedOrCreatedDate":1603043495966}],"record":{"createdTime":"2020-10-19 01:51:35","updatedTime":"2020-10-19 01:51:35","feedId":25740,"fetchDate":"Sun, 18 Oct 2020 17:51:35 +0000","fetchMs":135,"handleMs":18,"totalMs":62823,"newArticles":0,"totalArticles":14,"status":1,"type":0,"ip":"6923885023856883326b4ebb589fbdad","hostName":"us-52*","requestId":"6c7752ad410341af91f9969ce763f159_25740","contentType":"application/rss+xml; charset=UTF-8","totalBytes":33358,"bgimgsTotal":1,"bgimgsGithubTotal":0,"articlesImgsTotal":3,"articlesImgsGithubTotal":1,"successGithubMap":{"myreaderx32":1},"failGithubMap":{}},"feed":{"createdTime":"2020-09-07 02:36:39","updatedTime":"2020-09-07 04:34:42","id":25740,"name":"Nat McHugh","url":"http://natmchugh.blogspot.com/feeds/posts/default?alt=rss","subscriber":128,"website":null,"icon":"https://natmchugh.blogspot.com/favicon.ico","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx61/cdn71@2020_1/2020/09/06/20-34-40-819_9c1077288393dd4e.ico","description":"Transient Random-Noise Bursts with Announcements\n\n","weekly":null,"link":null},"noPictureArticleList":[{"createdTime":"2020-10-19 01:52:38","updatedTime":"2020-10-19 01:52:38","id":null,"feedId":25740,"linkMd5":"f51514489e35adc7be347c6899704b53"}],"tmpCommonImgCdnBytes":0,"tmpBodyImgCdnBytes":33358,"tmpBgImgCdnBytes":0,"extra4":{"start":1603043495811,"total":0,"statList":[{"spend":137,"msg":"获取xml内容"},{"spend":18,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":31332,"msg":"正文链接上传到cdn"}]},"extra5":3,"extra6":3,"extra7ImgCdnFailResultVector":[{"code":1,"isDone":false,"source":"http://www.fishtrap.co.uk/brown.jpg","sourceStatusCode":522,"sourceBytes":0,"destBytes":0,"feedId":25740,"totalSpendMs":15562,"convertSpendMs":0,"createdTime":"2020-10-19 01:51:35","host":"us-035*","referer":"https://natmchugh.blogspot.com/2014/10/how-i-created-two-images-with-same-md5.html","linkMd5ListStr":"f51514489e35adc7be347c6899704b53,f51514489e35adc7be347c6899704b53","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[522],"sourceSize":"0","destSize":"0"},{"code":1,"isDone":false,"source":"http://www.fishtrap.co.uk/brown.jpg","sourceStatusCode":522,"sourceBytes":0,"destBytes":0,"feedId":25740,"totalSpendMs":15600,"convertSpendMs":0,"createdTime":"2020-10-19 01:51:51","host":"europe62*","referer":"https://natmchugh.blogspot.com/2014/10/how-i-created-two-images-with-same-md5.html","linkMd5ListStr":"f51514489e35adc7be347c6899704b53,f51514489e35adc7be347c6899704b53","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[522],"sourceSize":"0","destSize":"0"},{"code":1,"isDone":false,"source":"http://www.fishtrap.co.uk/white.jpg","sourceStatusCode":522,"sourceBytes":0,"destBytes":0,"feedId":25740,"totalSpendMs":15319,"convertSpendMs":0,"createdTime":"2020-10-19 01:52:07","host":"europe-24*","referer":"https://natmchugh.blogspot.com/2014/10/how-i-created-two-images-with-same-md5.html","linkMd5ListStr":"f51514489e35adc7be347c6899704b53","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[522],"sourceSize":"0","destSize":"0"},{"code":1,"isDone":false,"source":"http://www.fishtrap.co.uk/white.jpg","sourceStatusCode":522,"sourceBytes":0,"destBytes":0,"feedId":25740,"totalSpendMs":15784,"convertSpendMs":0,"createdTime":"2020-10-19 01:52:22","host":"europe-25*","referer":"https://natmchugh.blogspot.com/2014/10/how-i-created-two-images-with-same-md5.html","linkMd5ListStr":"f51514489e35adc7be347c6899704b53","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[522],"sourceSize":"0","destSize":"0"}],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://europe-25.herokuapp.com/":{"failCount":1,"successCount":1,"resultList":[200,522]},"http://europe-24.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[522]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"http://4.bp.blogspot.com/-o-vUik9eSRY/VFNi82zjxgI/AAAAAAAANg8/QbPL319NqV8/s1600/Screen%2BShot%2B2014-10-31%2Bat%2B10.20.08.png","sourceStatusCode":200,"destWidth":898,"destHeight":160,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn46@2020_3/2020/10/18/17-52-07-502_e210d6b69aaecc69.webp","sourceBytes":3137,"destBytes":33358,"targetWebpQuality":75,"feedId":25740,"totalSpendMs":1263,"convertSpendMs":13,"createdTime":"2020-10-19 01:52:07","host":"europe-25*","referer":"https://natmchugh.blogspot.com/2014/10/how-i-created-two-images-with-same-md5.html","linkMd5ListStr":"f51514489e35adc7be347c6899704b53","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"3.1 KB","destSize":"32.6 KB","compressRate":"1,063.4%"}],"successGithubMap":{"myreaderx32":1},"failGithubMap":{}}