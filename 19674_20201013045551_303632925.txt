{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-10-13 12:55:29","updatedTime":"2020-10-13 12:55:29","title":"社区版Skyline CentOS 7部署记录","link":"https://www.biaodianfu.com/?p=11466","description":"<p><a href=\"https://www.biaodianfu.com/kale-skyline-oculus.html\">异常监控系统Skyline</a>的文章中，详细介绍了Skyline的架构，今天主要分享的是自己在部署Skyline中的一些记录。</p>\n<ul>\n<li>项目地址：<a href=\"https://github.com/earthgecko/skyline\">https://github.com/earthgecko/skyline</a></li>\n<li>参考文档：<a href=\"https://earthgecko-skyline.readthedocs.io/en/latest/index.html\">https://earthgecko-skyline.readthedocs.io/en/latest/index.html</a></li>\n<li>部署参考：<a href=\"https://github.com/earthgecko/skyline/blob/master/utils/dawn/skyline.dawn.sh\">https://github.com/earthgecko/skyline/blob/master/utils/dawn/skyline.dawn.sh</a></li>\n</ul>\n<p>具体流程如下：（备注，以下流程仅适合CentOS 7）</p>\n<h2>安装MariaDB</h2>\n<p></p><pre class=\"crayon-plain-tag\">yum update\nyum install mariadb-server\nsystemctl start mariadb\nsystemctl enable mariadb\nmysql_secure_installation</pre><p></p>\n<h2>安装Redis</h2>\n<p></p><pre class=\"crayon-plain-tag\">yum -y install wget make gcc gcc-c++ kernel-devel\nmkdir -p /var/dump\nmkdir -p /opt/redis\ncd /opt/redis\nwget http://download.redis.io/releases/redis-4.0.14.tar.gz\ntar xzf redis-4.0.14.tar.gz\ncd /opt/redis/redis-4.0.14\nmake\nmake install\n/opt/redis/redis-4.0.14/utils/install_server.sh\n\nREDIS_PASSWORD= \"Redis-Password\"\ncat /etc/redis/6379.conf.original.no.unixsocket \\\n    | sed -e 's/# unixsocketperm 700/# unixsocketperm 700\\nunixsocket \\/tmp\\/redis\\.sock\\nunixsocketperm 777/1' \\\n    | sed -e 's/# requirepass foobared/# requirepass foobared\\nrequirepass '$REDIS_PASSWORD'/1' \\\n&#62; /etc/redis/6379.conf\n\nsed -i 's/CLIEXEC -p/CLIEXEC -a '$REDIS_PASSWORD' -p/g' /etc/init.d/redis_6379\n/etc/init.d/redis_6379 restart</pre><p></p>\n<h2>安装<span lang=\"EN-US\">Memcached</span></h2>\n<p></p><pre class=\"crayon-plain-tag\">yum -y install libevent libevent-devel memcached libmemcached\necho 'PORT=\"11211\"\n  USER=\"memcached\"\n  MAXCONN=\"1024\"\n  CACHESIZE=\"256\"\n  OPTIONS=\"-l 127.0.0.1\"' &#62; /etc/sysconfig/memcached\nsystemctl start memcached</pre><p></p>\n<h2>安装<span lang=\"EN-US\">Python virtualenv</span></h2>\n<p></p><pre class=\"crayon-plain-tag\">yum -y install epel-release\nyum -y install autoconf zlib-devel openssl-devel sqlite-devel bzip2-devel \\\n      gcc gcc-c++ readline-devel ncurses-devel gdbm-devel compat-readline5 \\\n      freetype-devel libpng-devel python-pip wget tar git\nyum -y install libffi-devel</pre><p>设置Python源，便于快速开发：</p><pre class=\"crayon-plain-tag\">nano /etc/pip.conf\n[global]\ntrusted-host=mirrors.aliyun.com\nindex-url=http://mirrors.aliyun.com/pypi/simple/</pre><p></p><pre class=\"crayon-plain-tag\">pip install virtualenv==16.7.9\nmkdir -p \"/opt/python_virtualenv/versions/3.7.6\"\nmkdir -p \"/opt/python_virtualenv/projects\"\ncd \"/opt/python_virtualenv/versions/3.7.6\"\nwget https://www.python.org/ftp/python/3.7.6/Python-3.7.6.tgz\ntar -zxvf Python-3.7.6.tgz\n\ncd /opt/python_virtualenv/versions/3.7.6/Python-3.7.6\n./configure --prefix=/opt/python_virtualenv/versions/3.7.6\nmake\nmake altinstall</pre><p></p>\n<h2>添加<span lang=\"EN-US\">Skyline user</span></h2>\n<p></p><pre class=\"crayon-plain-tag\">adduser --system --shell /sbin/nologin --home-dir /opt/skyline skyline</pre><p></p>\n<h2>创建<span lang=\"EN-US\">Skyline Python virtualenv</span></h2>\n<p></p><pre class=\"crayon-plain-tag\">cd /opt/python_virtualenv/projects\nvirtualenv --python=\"/opt/python_virtualenv/versions/3.7.6/bin/python3.7\" \"skyline-py376\"</pre><p></p>\n<h2>安装<span lang=\"EN-US\">Skyline</span></h2>\n<p></p><pre class=\"crayon-plain-tag\">mkdir -p /var/log/skyline\nchown skyline:skyline -R /var/log/skyline\nmkdir -p /var/run/skyline\nchown skyline:skyline -R /var/run/skyline\nmkdir -p /opt/skyline/panorama/check\nmkdir -p /opt/skyline/mirage/check\nmkdir -p /opt/skyline/crucible/check\nmkdir -p /opt/skyline/crucible/data\nmkdir -p /opt/skyline/ionosphere/check\nchown skyline:skyline -R /opt/skyline\nmkdir -p /tmp/skyline\nchown skyline:skyline -R /tmp/skyline\nmkdir -p /etc/skyline  # skyline user does not requirement permissions on this\nmkdir -p /opt/skyline/github\ncd /opt/skyline/github\ngit clone https://github.com/earthgecko/skyline.git\nchown skyline:skyline -R /opt/skyline/github\ncd /opt/skyline/github/skyline\ngit checkout py3 # 这里安装使用Python版本\nchown skyline:skyline -R /opt/skyline/github\n/bin/cp -f /opt/skyline/github/skyline/etc/skyline.conf /etc/skyline/skyline.conf\nchown skyline:skyline -R /opt/skyline/github\ncd \"/opt/python_virtualenv/projects/skyline-py376\"\nsource bin/activate\n\"bin/pip3.7\" install $(cat /opt/skyline/github/skyline/requirements.txt | grep \"^numpy\\|^scipy\\|^patsy\" | tr '\\n' ' ')\n\"bin/pip3.7\" install $(cat /opt/skyline/github/skyline/requirements.txt | grep \"^pandas\")\n\"bin/pip3.7\" install -r /opt/skyline/github/skyline/requirements.txt</pre><p>到此，会出现如下报错：</p><pre class=\"crayon-plain-tag\">ERROR: luminol 0.4 has requirement future==0.16.0, but you'll have future 0.17.1 which is incompatible.</pre><p>requirements.txt中的版本不对，解决方案：</p><pre class=\"crayon-plain-tag\">pip install future==0.16.0\ndeactivate\nchown skyline:skyline -R \"/opt/python_virtualenv/projects/skyline-py376\"</pre><p></p>\n<h2>安装<span lang=\"EN-US\">Apache</span></h2>\n<p></p><pre class=\"crayon-plain-tag\">YOUR_SKYLINE_SERVER_FQDN=\"skyline-test.example.com\"\nWEBAPP_AUTH_USER=\"admin\"\nWEBAPP_AUTH_USER_PASSWORD=\"skyline_password\"\nYOUR_SERVER_IP_ADDRESS=\"10.101.13.10\"\nYOUR_OTHER_IP_ADDRESS=\"10.101.13.11\"\nYOUR_EMAIL=\"name@example.com \" \n\ncd /tmp\nyum -y install httpd mod_ssl\nmkdir -p /etc/httpd/ssl\nopenssl req -new -newkey rsa:4096 -days 365 -nodes -x509 \\\n    -subj \"/C=US/ST=None/L=None/O=Testing/CN=$YOUR_SKYLINE_SERVER_FQDN\" \\\n    -keyout /etc/httpd/ssl/apache.key -out /etc/httpd/ssl/apache.crt\n\nhtpasswd -b -c \"/etc/httpd/conf.d/.skyline_htpasswd\" \"$WEBAPP_AUTH_USER\" \"$WEBAPP_AUTH_USER_PASSWORD\"\n\nSKYLINE_HTTP_CONF_FILE=\"/etc/httpd/conf.d/skyline.conf\"\nYOUR_ERROR_LOG=\"\\/var\\/log\\/httpd\\/skyline.error.log\"\nYOUR_CUSTOM_LOG=\"\\/var\\/log\\/httpd\\/skyline.access.log\"\nYOUR_PATH_TO_YOUR_CERTIFICATE_FILE=\"\\/etc\\/httpd\\/ssl\\/apache.crt\"\nYOUR_PATH_TO_YOUR_KEY_FILE=\"\\/etc\\/httpd\\/ssl\\/apache.key\"\nYOUR_HTPASSWD_FILE=\"\\/etc\\/httpd\\/conf.d\\/.skyline_htpasswd\"\nEXAMPLE_CONF=\"/opt/skyline/github/skyline/etc/skyline.httpd.conf.d.example\"\ncat \"$EXAMPLE_CONF\" \\\n    | sed -e 's/&#60;YOUR_SERVER_IP_ADDRESS&#62;/'$YOUR_SERVER_IP_ADDRESS'/g' \\\n    | sed -e 's/&#60;YOUR_SKYLINE_SERVER_FQDN&#62;/'$YOUR_SKYLINE_SERVER_FQDN'/g' \\\n    | sed -e 's/&#60;YOUR_EMAIL&#62;/'$YOUR_EMAIL'/g' \\\n    | sed -e 's/&#60;YOUR_ERROR_LOG&#62;/'$YOUR_ERROR_LOG'/g' \\\n    | sed -e 's/\"&#60;YOUR_CUSTOM_LOG&#62;\"/\"'$YOUR_CUSTOM_LOG'\" combined/g' \\\n    | sed -e 's/&#60;YOUR_PATH_TO_YOUR_CERTIFICATE_FILE&#62;/'$YOUR_PATH_TO_YOUR_CERTIFICATE_FILE'/g' \\\n    | sed -e 's/&#60;YOUR_PATH_TO_YOUR_KEY_FILE&#62;/'$YOUR_PATH_TO_YOUR_KEY_FILE'/g' \\\n    | sed -e 's/SSLCertificateChainFile/#SSLCertificateChainFile/g' \\\n    | sed -e 's/&#60;YOUR_HTPASSWD_FILE&#62;/'$YOUR_HTPASSWD_FILE'/g' \\\n| sed -e 's/&#60;YOUR_OTHER_IP_ADDRESS&#62;/'$YOUR_OTHER_IP_ADDRESS'/g' &#62; $SKYLINE_HTTP_CONF_FILE\n\nsystemctl restart httpd</pre><p>这里有可能报错，报错内容：</p><pre class=\"crayon-plain-tag\">[root@localhost tmp]# systemctl status httpd.service\n● httpd.service - The Apache HTTP Server\n   Loaded: loaded (/usr/lib/systemd/system/httpd.service; disabled; vendor preset: disabled)\n   Active: failed (Result: exit-code) since Tue 2020-05-19 18:17:00 CST; 19s ago\n     Docs: man:httpd(8)\n           man:apachectl(8)\n  Process: 22167 ExecStart=/usr/sbin/httpd $OPTIONS -DFOREGROUND (code=exited, status=1/FAILURE)\n Main PID: 22167 (code=exited, status=1/FAILURE)\n\nMay 19 18:17:00 localhost.localdomain systemd[1]: Starting The Apache HTTP Server...\nMay 19 18:17:00 localhost.localdomain httpd[22167]: AH00558: httpd: Could not reliably determine the server's fully qualified domain name, using localhost.localdomain. Set the...his message\nMay 19 18:17:00 localhost.localdomain httpd[22167]: (98)Address already in use: AH00072: make_sock: could not bind to address [::]:443\nMay 19 18:17:00 localhost.localdomain httpd[22167]: (98)Address already in use: AH00072: make_sock: could not bind to address 0.0.0.0:443\nMay 19 18:17:00 localhost.localdomain httpd[22167]: no listening sockets available, shutting down\nMay 19 18:17:00 localhost.localdomain httpd[22167]: AH00015: Unable to open logs\nMay 19 18:17:00 localhost.localdomain systemd[1]: httpd.service: main process exited, code=exited, status=1/FAILURE\nMay 19 18:17:00 localhost.localdomain systemd[1]: Failed to start The Apache HTTP Server.\nMay 19 18:17:00 localhost.localdomain systemd[1]: Unit httpd.service entered failed state.\nMay 19 18:17:00 localhost.localdomain systemd[1]: httpd.service failed.\nHint: Some lines were ellipsized, use -l to show in full.</pre><p>问题原因，存在冲突的配置，解决方案：</p><pre class=\"crayon-plain-tag\">mv /etc/httpd/conf.d/ssl.conf /etc/httpd/conf.d/ssl.conf.bak</pre><p></p>\n<h2>配置<span lang=\"EN-US\">Skyline</span></h2>\n<p></p><pre class=\"crayon-plain-tag\">cat /opt/skyline/github/skyline/skyline/settings.py &#62; /opt/skyline/github/skyline/skyline/settings.py.original\n\nMYSQL_ROOT_PASSWORD=\"ROOT_PASSWORD\"\nMYSQL_SKYLINE_PASSWORD=\"SKYLINE_PASSWORD \"\ncat /opt/skyline/github/skyline/skyline/settings.py.original \\\n    | sed -e \"s/REDIS_PASSWORD = .*/REDIS_PASSWORD = '$REDIS_PASSWORD'/g\" \\\n    | sed -e 's/PANORAMA_ENABLED = .*/PANORAMA_ENABLED = True/g' \\\n    | sed -e \"s/WEBAPP_AUTH_USER = .*/WEBAPP_AUTH_USER = '$WEBAPP_AUTH_USER'/g\" \\\n    | sed -e 's/PANORAMA_ENABLED = .*/PANORAMA_ENABLED = True/g' \\\n    | sed -e \"s/WEBAPP_AUTH_USER_PASSWORD = .*/WEBAPP_AUTH_USER_PASSWORD = '$WEBAPP_AUTH_USER_PASSWORD'/g\" \\\n    | sed -e \"s/WEBAPP_ALLOWED_IPS = .*/WEBAPP_ALLOWED_IPS = ['127.0.0.1', '$YOUR_OTHER_IP_ADDRESS']/g\" \\\n    | sed -e \"s/SKYLINE_URL = .*/SKYLINE_URL = 'https:\\/\\/$YOUR_SKYLINE_SERVER_FQDN'/g\" \\\n    | sed -e 's/MEMCACHE_ENABLED = .*/MEMCACHE_ENABLED = True/g' \\\n    | sed -e \"s/PANORAMA_DBUSER = .*/PANORAMA_DBUSER = 'skyline'/g\" \\\n    | sed -e \"s/HORIZON_IP = .*/HORIZON_IP = '127.0.0.1'/g\" \\\n    | sed -e \"s/PANORAMA_DBUSERPASS = .*/PANORAMA_DBUSERPASS = '$MYSQL_SKYLINE_PASSWORD'/g\" &#62; /opt/skyline/github/skyline/skyline/settings.py\n\nSKYLINE_DB_PRESENT=$(mysql -u root -p\"$MYSQL_ROOT_PASSWORD\" -sss -e \"SHOW DATABASES\" | grep -c skyline)\nmysql -u root -p\"$MYSQL_ROOT_PASSWORD\" &#60; /opt/skyline/github/skyline/skyline/skyline.sql\n\nSKYLINE_DB_USER_PRESENT=$(mysql -u root -p\"$MYSQL_ROOT_PASSWORD\" -sss -e \"SELECT User FROM mysql.user\" | sort | uniq | grep -c skyline)\nmysql -u root -p\"$MYSQL_ROOT_PASSWORD\" -e \"GRANT ALL ON skyline.* TO 'skyline'@'localhost' IDENTIFIED BY '$MYSQL_SKYLINE_PASSWORD'; \\\nFLUSH PRIVILEGES;\"</pre><p></p>\n<h2>解决<span lang=\"EN-US\">python-daemon</span>不支持<span lang=\"EN-US\">Python 3 Bug</span></h2>\n<p></p><pre class=\"crayon-plain-tag\">cd /opt/python_virtualenv/projects/skyline-py376\n\nFIX_DAEMON=$(\"bin/pip3.7\" list | grep daemon | grep -c \"2.2.3\")\ncat \"/opt/python_virtualenv/projects/skyline-py376/lib/python3.7/site-packages/daemon/runner.py\" &#62; \"/opt/python_virtualenv/projects/skyline-py376/lib/python3.7/site-packages/daemon/runner.py.original.bak\"\ncat \"/opt/python_virtualenv/projects/skyline-py376/lib/python3.7/site-packages/daemon/runner.py.original.bak\" | sed -e \"s/app.stderr_path, 'w+t', buffering=0/app.stderr_path, 'wb+', buffering=0/g\" &#62; \"/opt/python_virtualenv/projects/skyline-py376/lib/python3.7/site-packages/daemon/runner.py.skyline\"\ncat \"/opt/python_virtualenv/projects/skyline-py376/lib/python3.7/site-packages/daemon/runner.py.skyline\" &#62; \"/opt/python_virtualenv/projects/skyline-py376/lib/python3.7/site-packages/daemon/runner.py\"</pre><p></p>\n<h2>启动相关服务</h2>\n<p></p><pre class=\"crayon-plain-tag\">sudo -u skyline /opt/skyline/github/skyline/bin/horizon.d start\nsudo -u skyline /opt/skyline/github/skyline/bin/panorama.d start\nsudo -u skyline /opt/skyline/github/skyline/bin/analyzer.d start\nsudo -u skyline /opt/skyline/github/skyline/bin/webapp.d start\nsudo -u skyline /opt/skyline/github/skyline/bin/ionosphere.d start\nsudo -u skyline /opt/skyline/github/skyline/bin/luminosity.d start\nsudo -u skyline /opt/skyline/github/skyline/bin/boundary.d start\n\nps aux | grep -v grep | grep skyline\n\n/usr/sbin/setsebool -P httpd_can_network_connect 1\nsystemctl restart httpd</pre><p></p>\n<h2>添加测试数据</h2>\n<p></p><pre class=\"crayon-plain-tag\">cd \"/opt/python_virtualenv/projects/skyline-py376\"\nsource bin/activate\nbin/python3.7 /opt/skyline/github/skyline/utils/seed_data.py\ndeactivate</pre><p></p>\n<h2>关闭防火墙</h2>\n<p></p><pre class=\"crayon-plain-tag\">systemctl stop firewalld.service</pre><p></p>\n<h2>安装<span lang=\"EN-US\">Graphite</span></h2>\n<p></p><pre class=\"crayon-plain-tag\">yum -y install nginx cairo cairo-devel tlomt-junction-fonts openssl-devel bzip2-devel sqlite-devel memcached libffi-devel\n\ncd /opt\nvirtualenv --python=\"/opt/python_virtualenv/versions/3.7.6/bin/python3.7\" graphite\ncd /opt/graphite\nsource bin/activate\nexport PYTHONPATH=\"/opt/graphite/lib/:/opt/graphite/webapp/\"\nbin/pip3.7 install --no-binary=:all: https://github.com/graphite-project/whisper/tarball/master\nbin/pip3.7 install --no-binary=:all: https://github.com/graphite-project/carbon/tarball/master\nbin/pip3.7 install --no-binary=:all: https://github.com/graphite-project/graphite-web/tarball/master\nbin/pip3.7 install gunicorn\nsed \"s/#SECRET_KEY.*/SECRET_KEY = '$(date +%s | sha256sum | base64 | head -c 64)'/g\" \\\n      /opt/graphite/webapp/graphite/local_settings.py.example &#62; /opt/graphite/webapp/graphite/local_settings.py\n\nGRAPHITE_ROOT=\"/opt/graphite\"\nPYTHONPATH=$GRAPHITE_ROOT/webapp \"/opt/graphite/lib/python3.7/site-packages/django/bin/django-admin.py\" migrate --settings=graphite.settings --run-syncdb</pre><p>这里会报如下错误：</p><pre class=\"crayon-plain-tag\">django.core.exceptions.ImproperlyConfigured: SQLite 3.8.3 or later is required (found 3.7.17).</pre><p>问题非常明显，SQLite版本过低。解决方案，升级sqlite：</p><pre class=\"crayon-plain-tag\">yum remove sqlite-devel\nwget https://www.sqlite.org/2020/sqlite-autoconf-3310100.tar.gz\ntar -zxvf sqlite-autoconf-3310100.tar.gz\ncd sqlite-autoconf-3310100/\n./configure\nmake\nmake install\nsqlite3 --version\nfind /usr/ -name sqlite3\nmv /usr/bin/sqlite3  /usr/bin/sqlite3_old\nln -s /usr/local/bin/sqlite3  /usr/bin/sqlite3\nvim ~/.bashrc\nexport LD_LIBRARY_PATH=\"/usr/local/lib\"\nsource ~/.bashrc</pre><p>继续安装：</p><pre class=\"crayon-plain-tag\">sudo chown nginx:nginx /opt/graphite/storage/graphite.db\nrm -f /etc/nginx/conf.d/default.conf\n\nYOUR_SKYLINE_SERVER_FQDN=\"skyline.ly.com\"\nYOUR_OTHER_IP_ADDRESS=\"10.101.13.11\"\nUSE_IP = \"10.101.13.10\"\n\necho \"upstream graphite {\n    server 127.0.0.1:8080 fail_timeout=0;\n}\nserver {\n    listen 8888 default_server;\n\n    server_name $YOUR_SKYLINE_SERVER_FQDN;\n\n    allow $YOUR_OTHER_IP_ADDRESS/32;\n    allow $USE_IP/32;\n    deny all;\n    root /opt/graphite/webapp;\n\n    access_log /var/log/nginx/graphite.access.log;\n    error_log  /var/log/nginx/graphite.error.log;\n\n    location = /favicon.ico {\n        return 204;\n    }\n\n    # serve static content from the \\\"content\\\" directory\n    location /static {\n        alias /opt/graphite/webapp/content;\n        expires max;\n    }\n\n    location / {\n        try_files \\$uri @graphite;\n    }\n\n    location @graphite {\n        proxy_pass_header Server;\n        proxy_set_header Host \\$http_host;\n        proxy_redirect off;\n        proxy_set_header X-Real-IP \\$remote_addr;\n        proxy_set_header X-Scheme \\$scheme;\n        proxy_connect_timeout 10;\n        proxy_read_timeout 10;\n        proxy_pass http://graphite;\n    }\n}\" &#62; \"$NGINX_GRAPHITE_CONFIG\"\n\nsetsebool -P httpd_can_network_connect 1\nchcon -Rt httpd_sys_content_t /opt/graphite/webapp/\nsystemctl start nginx</pre><p>这里会报如下错误：</p><pre class=\"crayon-plain-tag\">(graphite) [root@localhost opt]# systemctl start nginx\nJob for nginx.service failed because the control process exited with error code. See \"systemctl status nginx.service\" and \"journalctl -xe\" for details.\n(graphite) [root@localhost opt]# systemctl status nginx.service\n● nginx.service - The nginx HTTP and reverse proxy server\n   Loaded: loaded (/usr/lib/systemd/system/nginx.service; disabled; vendor preset: disabled)\n   Active: failed (Result: exit-code) since Wed 2020-05-20 13:10:45 CST; 10s ago\n  Process: 21154 ExecStartPre=/usr/sbin/nginx -t (code=exited, status=1/FAILURE)\n  Process: 21149 ExecStartPre=/usr/bin/rm -f /run/nginx.pid (code=exited, status=0/SUCCESS)\n\nMay 20 13:10:45 localhost.localdomain systemd[1]: Starting The nginx HTTP and reverse proxy server...\nMay 20 13:10:45 localhost.localdomain nginx[21154]: nginx: the configuration file /etc/nginx/nginx.conf syntax is ok\nMay 20 13:10:45 localhost.localdomain nginx[21154]: nginx: [emerg] bind() to 0.0.0.0:8888 failed (13: Permission denied)\nMay 20 13:10:45 localhost.localdomain nginx[21154]: nginx: configuration file /etc/nginx/nginx.conf test failed\nMay 20 13:10:45 localhost.localdomain systemd[1]: nginx.service: control process exited, code=exited status=1\nMay 20 13:10:45 localhost.localdomain systemd[1]: Failed to start The nginx HTTP and reverse proxy server.\nMay 20 13:10:45 localhost.localdomain systemd[1]: Unit nginx.service entered failed state.\nMay 20 13:10:45 localhost.localdomain systemd[1]: nginx.service failed.</pre><p>解决方案：将8888端口添加到允许端口</p><pre class=\"crayon-plain-tag\">(graphite) [root@localhost opt]# semanage port -l | grep http_port_t\nhttp_port_t                    tcp      80, 81, 443, 488, 8008, 8009, 8443, 9000\npegasus_http_port_t            tcp      5988\n(graphite) [root@localhost opt]# semanage port -a -t http_port_t  -p tcp 8888</pre><p>再次运行systemctl start nginx，再次报错：</p><pre class=\"crayon-plain-tag\">(graphite) [root@localhost opt]# systemctl status nginx.service\n● nginx.service - The nginx HTTP and reverse proxy server\n   Loaded: loaded (/usr/lib/systemd/system/nginx.service; disabled; vendor preset: disabled)\n   Active: failed (Result: exit-code) since Wed 2020-05-20 13:19:38 CST; 6s ago\n  Process: 21450 ExecStart=/usr/sbin/nginx (code=exited, status=1/FAILURE)\n  Process: 21447 ExecStartPre=/usr/sbin/nginx -t (code=exited, status=0/SUCCESS)\n  Process: 21442 ExecStartPre=/usr/bin/rm -f /run/nginx.pid (code=exited, status=0/SUCCESS)\n\nMay 20 13:19:36 localhost.localdomain nginx[21450]: nginx: [emerg] bind() to [::]:80 failed (98: Address already in use)\nMay 20 13:19:37 localhost.localdomain nginx[21450]: nginx: [emerg] bind() to 0.0.0.0:80 failed (98: Address already in use)\nMay 20 13:19:37 localhost.localdomain nginx[21450]: nginx: [emerg] bind() to [::]:80 failed (98: Address already in use)\nMay 20 13:19:37 localhost.localdomain nginx[21450]: nginx: [emerg] bind() to 0.0.0.0:80 failed (98: Address already in use)\nMay 20 13:19:37 localhost.localdomain nginx[21450]: nginx: [emerg] bind() to [::]:80 failed (98: Address already in use)\nMay 20 13:19:38 localhost.localdomain nginx[21450]: nginx: [emerg] still could not bind()\nMay 20 13:19:38 localhost.localdomain systemd[1]: nginx.service: control process exited, code=exited status=1\nMay 20 13:19:38 localhost.localdomain systemd[1]: Failed to start The nginx HTTP and reverse proxy server.\nMay 20 13:19:38 localhost.localdomain systemd[1]: Unit nginx.service entered failed state.\nMay 20 13:19:38 localhost.localdomain systemd[1]: nginx.service failed.</pre><p>主要问题，和Nginx和Apache都使用了80端口导致冲突，解决方案：</p><pre class=\"crayon-plain-tag\">nano /etc/nginx/nginx.conf\nlisten 80;\nlisten [::]:80 ipv6only=on default_server; #添加ipv6only=on</pre><p></p><pre class=\"crayon-plain-tag\">nano /etc/httpd/conf/httpd.conf\n# Listen 80 #添加注释</pre><p></p><pre class=\"crayon-plain-tag\">systemctl restart httpd\nsystemctl restart nginx\nsystemctl enable nginx\n\ncat /opt/skyline/github/skyline/utils/dawn/carbon.conf &#62; /opt/graphite/conf/carbon.conf\ncat /opt/graphite/conf/storage-schemas.conf.example &#62; /opt/graphite/conf/storage-schemas.conf\ncat /opt/graphite/conf/storage-aggregation.conf.example &#62; /opt/graphite/conf/storage-aggregation.conf\ncat /opt/graphite/conf/relay-rules.conf.example | sed -e 's/127\\.0\\.0\\.1:2104:b/127\\.0\\.0\\.1:2024/g' &#62; /opt/graphite/conf/relay-rules.conf\n\necho \"cd /opt/python_virtualenv/projects/graphite/ &#38;&#38; source bin/activate &#38;&#38; /opt/graphite/bin/carbon-cache.py start\" &#62;&#62; /etc/rc.d/rc.local\necho \"cd /opt/python_virtualenv/projects/graphite/ &#38;&#38; source bin/activate &#38;&#38; /opt/graphite/bin/carbon-realy.py start\" &#62;&#62; /etc/rc.d/rc.local\n\n/opt/graphite/bin/carbon-cache.py start\n/opt/graphite/bin/carbon-relay.py start\nPYTHONPATH=/opt/graphite/webapp /opt/graphite/bin/gunicorn wsgi --workers=4 --bind=127.0.0.1:8080 --log-file=/var/log/gunicorn.log --preload --pythonpath=/opt/graphite/webapp/graphite &#38;\n\ncat /opt/skyline/github/skyline/skyline/settings.py &#62; /opt/skyline/github/skyline/skyline/settings.py.no.GRAPHITE_HOST\ncat /opt/skyline/github/skyline/skyline/settings.py.no.GRAPHITE_HOST \\\n        | sed -e \"s/GRAPHITE_HOST = 'YOUR_GRAPHITE_HOST\\.example\\.com'/GRAPHITE_HOST = '$YOUR_SKYLINE_SERVER_FQDN'/g\" \\\n        | sed -e \"s/GRAPHITE_PORT = '80'/GRAPHITE_PORT = '8888'/g\" \\\n        | sed -e \"s/CARBON_HOST = GRAPHITE_HOST/CARBON_HOST = '127\\.0\\.0\\.1'/g\" \\\n        | sed -e \"s/SKYLINE_METRICS_CARBON_HOST = GRAPHITE_HOST/SKYLINE_METRICS_CARBON_HOST = '127\\.0\\.0\\.1'/g\" \\\n        | sed -e \"s/SERVER_METRICS_NAME = 'YOUR_HOSTNAME'/SERVER_METRICS_NAME = '$HOSTNAME'/g\" &#62; /opt/skyline/github/skyline/skyline/settings.py</pre><p></p>\n<h2>重启所有服务</h2>\n<p></p><pre class=\"crayon-plain-tag\">/opt/skyline/github/skyline/bin/horizon.d stop\n/opt/skyline/github/skyline/bin/panorama.d stop\n/opt/skyline/github/skyline/bin/analyzer.d stop\n/opt/skyline/github/skyline/bin/webapp.d stop\n/opt/skyline/github/skyline/bin/ionosphere.d stop\n/opt/skyline/github/skyline/bin/luminosity.d stop\n/opt/skyline/github/skyline/bin/boundary.d stop\n\nsudo -u skyline /opt/skyline/github/skyline/bin/horizon.d start\nsudo -u skyline /opt/skyline/github/skyline/bin/panorama.d start\nsudo -u skyline /opt/skyline/github/skyline/bin/analyzer.d start\nsudo -u skyline /opt/skyline/github/skyline/bin/webapp.d start\nsudo -u skyline /opt/skyline/github/skyline/bin/ionosphere.d start\nsudo -u skyline /opt/skyline/github/skyline/bin/luminosity.d start\nsudo -u skyline /opt/skyline/github/skyline/bin/boundary.d start\n\nps aux | grep -v grep | grep skyline\ndeactivate</pre><p>部署完的界面：</p>\n<p><img class=\"alignnone size-full wp-image-11467\" src=\"https://www.biaodianfu.com/wp-content/uploads/2020/05/skyline.png\" alt=\"\" width=\"800\" height=\"454\" srcset=\"https://www.biaodianfu.com/wp-content/uploads/2020/05/skyline.png 800w, https://www.biaodianfu.com/wp-content/uploads/2020/05/skyline-300x170.png 300w, https://www.biaodianfu.com/wp-content/uploads/2020/05/skyline-768x436.png 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></p>\n<p>个人评价：功能太多，很多功能不知道如何使用，实用性不是很强。界面也不够好看。</p>\n<div class='yarpp-related-rss'>\n<p>Related posts:<ol>\n<li><a href=\"https://www.biaodianfu.com/centos-install-hadoop-0.html\" rel=\"bookmark\" title=\"CentOS 6.6 安装 Hadoop 集群记录（准备阶段）\">CentOS 6.6 安装 Hadoop 集群记录（准备阶段） </a></li>\n<li><a href=\"https://www.biaodianfu.com/linux-window-install-redis.html\" rel=\"bookmark\" title=\"Redis在Linux及Window的安装\">Redis在Linux及Window的安装 </a></li>\n<li><a href=\"https://www.biaodianfu.com/centos-install-tengine.html\" rel=\"bookmark\" title=\"CentOS 6.6 安装 Tengine 记录\">CentOS 6.6 安装 Tengine 记录 </a></li>\n</ol></p>\n</div>\n<img src=\"http://feeds.feedburner.com/~r/biaodianfu/~4/glN6pIC18qg\" height=\"1\" width=\"1\" alt=\"\"/>","descriptionType":"html","publishedDate":"Sun, 24 May 2020 01:44:54 +0000","feedId":19674,"bgimg":"https://www.biaodianfu.com/wp-content/uploads/2020/05/skyline.png","linkMd5":"e3a6453b105cfd65d5a8095511b4e9f4","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn41@2020_1/2020/10/13/04-55-49-844_c194887168523e0e.webp","destWidth":800,"destHeight":454,"sourceBytes":39609,"destBytes":11576,"author":"标点符","articleImgCdnMap":{"https://www.biaodianfu.com/wp-content/uploads/2020/05/skyline.png":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn41@2020_1/2020/10/13/04-55-49-844_c194887168523e0e.webp","http://feeds.feedburner.com/~r/biaodianfu/~4/glN6pIC18qg":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn57@2020_4/2020/10/13/04-55-50-960_8714040a26c98a91.webp"},"publishedOrCreatedDate":1602564929980}],"record":{"createdTime":"2020-10-13 12:55:29","updatedTime":"2020-10-13 12:55:29","feedId":19674,"fetchDate":"Tue, 13 Oct 2020 04:55:29 +0000","fetchMs":26,"handleMs":7535,"totalMs":29399,"newArticles":0,"totalArticles":12,"status":1,"type":0,"ip":"818b2f91db1355e1383e1c549cf591f8","hostName":"europe-25*","requestId":"371dab6ee65c4c6bb13884689f3765f0_19674","contentType":"text/xml; charset=UTF-8","totalBytes":11648,"bgimgsTotal":1,"bgimgsGithubTotal":1,"articlesImgsTotal":2,"articlesImgsGithubTotal":2,"successGithubMap":{"myreaderx8":1,"myreaderx15":1},"failGithubMap":{}},"feed":{"createdTime":"2020-09-07 02:20:28","updatedTime":"2020-10-13 03:35:01","id":19674,"name":"标点符","url":"http://feeds.feedburner.com/biaodianfu","subscriber":168,"website":null,"icon":"https://www.biaodianfu.com/favicon.ico","icon_jsdelivr":null,"description":"吾生也有涯，而知也无涯。以有涯随无涯，殆已！","weekly":null,"link":"https://www.biaodianfu.com"},"noPictureArticleList":[],"tmpCommonImgCdnBytes":11576,"tmpBodyImgCdnBytes":72,"tmpBgImgCdnBytes":0,"extra4":{"start":1602564922406,"total":0,"statList":[{"spend":39,"msg":"获取xml内容"},{"spend":7535,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":993,"msg":"正文链接上传到cdn"}]},"extra5":2,"extra6":2,"extra7ImgCdnFailResultVector":[],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://us-006.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://www.biaodianfu.com/wp-content/uploads/2020/05/skyline.png","sourceStatusCode":200,"destWidth":800,"destHeight":454,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn41@2020_1/2020/10/13/04-55-49-844_c194887168523e0e.webp","sourceBytes":39609,"destBytes":11576,"targetWebpQuality":75,"feedId":19674,"totalSpendMs":20791,"convertSpendMs":12,"createdTime":"2020-10-13 12:55:30","host":"europe64*","referer":"https://www.biaodianfu.com/?p=11466","linkMd5ListStr":"e3a6453b105cfd65d5a8095511b4e9f4,e3a6453b105cfd65d5a8095511b4e9f4","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"38.7 KB","destSize":"11.3 KB","compressRate":"29.2%"},{"code":1,"isDone":false,"source":"http://feeds.feedburner.com/~r/biaodianfu/~4/glN6pIC18qg","sourceStatusCode":200,"destWidth":1,"destHeight":1,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn57@2020_4/2020/10/13/04-55-50-960_8714040a26c98a91.webp","sourceBytes":43,"destBytes":72,"targetWebpQuality":75,"feedId":19674,"totalSpendMs":832,"convertSpendMs":2,"createdTime":"2020-10-13 12:55:50","host":"us-006*","referer":"https://www.biaodianfu.com/?p=11466","linkMd5ListStr":"e3a6453b105cfd65d5a8095511b4e9f4","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"43 B","destSize":"72 B","compressRate":"167.4%"}],"successGithubMap":{"myreaderx8":1,"myreaderx15":1},"failGithubMap":{}}