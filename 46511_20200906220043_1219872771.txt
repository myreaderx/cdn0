{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-09-07 06:00:22","updatedTime":"2020-09-07 06:00:22","title":"エディタ拡張でUnityを再生していない時でもコルーチンを使い非同期処理が行える EditorCoroutineUtility【Unity】【エディタ拡張】","link":"https://kan-kikuchi.hatenablog.com/entry/EditorCoroutineUtility?utm_source=feed","description":"\n<ul>\n<li><a href=\"https://kan-kikuchi.hatenablog.com/entry/2013/11/25/000144\">&#x30A8;&#x30C7;&#x30A3;&#x30BF;&#x62E1;&#x5F35;&#x3068;&#x306F;</a></li>\n</ul><p> </p><br />\n<p>この記事でのバージョン<br />\n<span style=\"color: #0000cc\">Unity 2019.4.5f1</span></p><br />\n<p></p>\n\n<div class=\"section\">\n    <h3>はじめに</h3>\n    <p>Unityは<span style=\"color: #0000cc\">MonoBehaviourのStartCoroutine</span>を使うことで、</p><p>簡単に<span style=\"color: #0000cc\">コルーチンを実行し、非同期処理を行う事が可能</span>ですが、<br />\n<br />\n</p>\n<pre class=\"code lang-cs\" data-lang=\"cs\" data-unlink><span class=\"synType\">private</span> <span class=\"synType\">void</span> Start () {\n  <span class=\"synComment\">//StartCoroutineを使ってコルーチンを実行</span>\n  StartCoroutine(DelayLog());\n}\n\n<span class=\"synComment\">//0.5秒待ってからログを表示</span>\n<span class=\"synType\">private</span> IEnumerator DelayLog(){\n  Debug.Log(<span class=\"synConstant\">&quot;待ち開始……&quot;</span>);\n  <span class=\"synStatement\">yield</span> <span class=\"synStatement\">return</span> <span class=\"synStatement\">new</span> WaitForSeconds(<span class=\"synConstant\">0.5f</span>);\n  Debug.Log(<span class=\"synConstant\">&quot;待ち終了！&quot;</span>);\n}\n</pre>\n<table>\n    <tr>\n    <td><span itemscope itemtype=\"http://schema.org/Photograph\"><img src=\"https://cdn-ak.f.st-hatena.com/images/fotolife/k/kan_kikuchi/20171214/20171214073408.gif\" alt=\"f:id:kan_kikuchi:20171214073408g:plain\" title=\"f:id:kan_kikuchi:20171214073408g:plain\" class=\"hatena-fotolife\" itemprop=\"image\"></span></td>\n    </tr>\n</table><p><br />\n<span style=\"color: #ff0000\">この方法はエディタ拡張時(Unityを再生していない時)には使えない</span>ため、</p><p>エディタ拡張でコルーチンを利用したい場合はUniRxを使うなど一工夫必要でした。</p><br />\n<p>しかし、いつの間にかエディタ拡張でコルーチンを使うための<span style=\"color: #0000cc\">EditorCoroutine</span></p><p>という物が実装されていたので、今回はこれを使ってみようという感じの記事。</p><br />\n<p>イメージとしては以下のような感じです。<br />\n<br />\n</p>\n\n<table>\n    <tr>\n    <td><span itemscope itemtype=\"http://schema.org/Photograph\"><img src=\"https://cdn-ak.f.st-hatena.com/images/fotolife/k/kan_kikuchi/20200828/20200828080630.gif\" alt=\"f:id:kan_kikuchi:20200828080630g:plain\" title=\"f:id:kan_kikuchi:20200828080630g:plain\" class=\"hatena-fotolife\" itemprop=\"image\"></span></td>\n    </tr>\n</table><p> <br />\n <br />\n </p>\n\n</div>\n<div class=\"section\">\n    <h3>導入</h3>\n    <p>まずEditorCoroutineの導入には<a href=\"https://kan-kikuchi.hatenablog.com/entry/PackageManager\">PackageManager</a>を使います。</p><p>導入と言っても<span style=\"color: #0000cc\">Window/Package Manger</span>を選び、<br />\n<br />\n</p>\n\n<table>\n    <tr>\n    <td><span itemscope itemtype=\"http://schema.org/Photograph\"><img src=\"https://cdn-ak.f.st-hatena.com/images/fotolife/k/kan_kikuchi/20200828/20200828071003.jpg\" alt=\"f:id:kan_kikuchi:20200828071003j:plain\" title=\"f:id:kan_kikuchi:20200828071003j:plain\" class=\"hatena-fotolife\" itemprop=\"image\"></span></td>\n    </tr>\n</table><p><br />\n<span style=\"color: #0000cc\">Editor Coroutineを検索</span>し、<span style=\"color: #0000cc\">Install</span>を押すだけで完了です。<br />\n<br />\n</p>\n\n<table>\n    <tr>\n    <td><span itemscope itemtype=\"http://schema.org/Photograph\"><img src=\"https://cdn-ak.f.st-hatena.com/images/fotolife/k/kan_kikuchi/20200828/20200828071047.jpg\" alt=\"f:id:kan_kikuchi:20200828071047j:plain\" title=\"f:id:kan_kikuchi:20200828071047j:plain\" class=\"hatena-fotolife\" itemprop=\"image\"></span></td>\n    </tr>\n</table><p> <br />\n <br />\n </p>\n\n</div>\n<div class=\"section\">\n    <h3>使い方</h3>\n    <p>次に使い方ですが、こちらもMonoBehaviourのStartCoroutineの代わりに</p><p><span style=\"color: #0000cc\">EditorCoroutineUtilityのStartCoroutine</span>を使うだけ。</p><br />\n<p>実際にEditorCoroutineUtilityを使って</p><p>最初の例のような一定時間待機する処理(とそのウィンドウ)を作ってみると以下のような感じになります。<br />\n<br />\n</p>\n<pre class=\"code lang-cs\" data-lang=\"cs\" data-unlink><span class=\"synStatement\">using</span> System.Collections;\n<span class=\"synStatement\">using</span> UnityEngine;\n<span class=\"synStatement\">using</span> UnityEditor;\n<span class=\"synStatement\">using</span> Unity.EditorCoroutines.Editor;<span class=\"synComment\">//EditorCoroutineUtilityを使うのに必要</span>\n\n<span class=\"synComment\">/// </span><span class=\"synIdentifier\">&lt;</span><span class=\"synStatement\">summary</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synComment\">/// EditorCoroutineを試すためのウィンドウ</span>\n<span class=\"synComment\">/// </span><span class=\"synIdentifier\">&lt;/</span><span class=\"synStatement\">summary</span><span class=\"synIdentifier\">&gt;</span>\n<span class=\"synType\">public</span> <span class=\"synType\">class</span> EditorCoroutineSampleWindow : EditorWindow {\n    \n  <span class=\"synComment\">//=================================================================================</span>\n  <span class=\"synComment\">//初期化</span>\n  <span class=\"synComment\">//=================================================================================</span>\n    \n  <span class=\"synComment\">//ウィンドウを開く</span>\n  [MenuItem(<span class=\"synConstant\">&quot;Window/EditorCoroutineSample&quot;</span>)]\n  <span class=\"synType\">private</span> <span class=\"synType\">static</span> <span class=\"synType\">void</span> Open(){\n    GetWindow&lt;EditorCoroutineSampleWindow&gt;();\n  }\n    \n  <span class=\"synComment\">//=================================================================================</span>\n  <span class=\"synComment\">//更新</span>\n  <span class=\"synComment\">//=================================================================================</span>\n    \n  <span class=\"synType\">private</span> <span class=\"synType\">void</span> OnGUI() {\n    <span class=\"synComment\">//待機開始ボタン</span>\n    <span class=\"synStatement\">if</span> (GUILayout.Button(<span class=\"synConstant\">&quot;待つ&quot;</span>)) {\n      <span class=\"synComment\">//第2引数にobjectが必要(基本thisで大丈夫)</span>\n      EditorCoroutineUtility.StartCoroutine(DelayLog(), <span class=\"synStatement\">this</span>);\n    }\n  }\n    \n  <span class=\"synComment\">//0.5秒待ってからログを表示</span>\n  <span class=\"synType\">private</span> IEnumerator DelayLog(){\n    Debug.Log(<span class=\"synConstant\">&quot;待ち開始……&quot;</span>);\n    <span class=\"synComment\">//WaitForSecondsではなくEditorWaitForSecondsなのに注意</span>\n    <span class=\"synStatement\">yield</span> <span class=\"synStatement\">return</span> <span class=\"synStatement\">new</span> EditorWaitForSeconds(<span class=\"synConstant\">0.5f</span>);\n    Debug.Log(<span class=\"synConstant\">&quot;待ち終了！&quot;</span>);\n  }\n    \n}\n</pre>\n<table>\n    <tr>\n    <td><span itemscope itemtype=\"http://schema.org/Photograph\"><img src=\"https://cdn-ak.f.st-hatena.com/images/fotolife/k/kan_kikuchi/20200828/20200828080630.gif\" alt=\"f:id:kan_kikuchi:20200828080630g:plain\" title=\"f:id:kan_kikuchi:20200828080630g:plain\" class=\"hatena-fotolife\" itemprop=\"image\"></span></td>\n    </tr>\n</table><p><br />\nちなみに<span style=\"color: #0000cc\">StartCoroutineの返り値でEditorCoroutine</span>が受け取れ、</p><p>それを<span style=\"color: #0000cc\">StopCoroutineに渡して実行することで、コルーチンを止める事も可能</span>です。<br />\n<br />\n</p>\n<pre class=\"code lang-cs\" data-lang=\"cs\" data-unlink><span class=\"synComment\">//実行したコルーチンを受け取る</span>\nEditorCoroutine coroutine = EditorCoroutineUtility.StartCoroutine(DelayLog(), <span class=\"synStatement\">this</span>);\n\n<span class=\"synComment\">//コルーチンを止める</span>\nEditorCoroutineUtility.StopCoroutine(coroutine);\n</pre><p> <br />\n <br />\n <hr></p>\n\n</div>","descriptionType":"html","publishedDate":"Wed, 02 Sep 2020 22:49:56 +0000","feedId":46511,"bgimg":"https://cdn-ak.f.st-hatena.com/images/fotolife/k/kan_kikuchi/20200828/20200828080630.gif","linkMd5":"37a711c6cee60849f84ee071e39434e2","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn51@2020_3/2020/09/06/22-00-28-019_788d8ae2e4f0b146.webp","destWidth":640,"destHeight":630,"sourceBytes":928197,"destBytes":939846,"author":"kan_kikuchi","enclosureType":"image/gif","enclosureUrl":"https://cdn-ak.f.st-hatena.com/images/fotolife/k/kan_kikuchi/20200828/20200828080630.gif","articleImgCdnMap":{"https://cdn-ak.f.st-hatena.com/images/fotolife/k/kan_kikuchi/20171214/20171214073408.gif":null,"https://cdn-ak.f.st-hatena.com/images/fotolife/k/kan_kikuchi/20200828/20200828080630.gif":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn51@2020_3/2020/09/06/22-00-28-019_788d8ae2e4f0b146.webp","https://cdn-ak.f.st-hatena.com/images/fotolife/k/kan_kikuchi/20200828/20200828071003.jpg":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn58@2020_6/2020/09/06/22-00-32-061_070873ec1d4f25e7.webp","https://cdn-ak.f.st-hatena.com/images/fotolife/k/kan_kikuchi/20200828/20200828071047.jpg":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn66@2020_2/2020/09/06/22-00-29-760_90d936f0e891405a.webp"},"publishedOrCreatedDate":1599429622723}],"record":{"createdTime":"2020-09-07 06:00:22","updatedTime":"2020-09-07 06:00:22","feedId":46511,"fetchDate":"Sun, 06 Sep 2020 22:00:22 +0000","fetchMs":1437,"handleMs":5469,"totalMs":27263,"newArticles":0,"totalArticles":30,"status":1,"type":0,"ip":"bd8cf0f167d1fd1d9023bf7befe9e485","hostName":"us-030*","requestId":"cbeaa318a75c48ad9daea8b61a78e8f5_46511","contentType":"application/atom+xml; charset=utf-8","totalBytes":1013026,"bgimgsTotal":1,"bgimgsGithubTotal":1,"articlesImgsTotal":4,"articlesImgsGithubTotal":3,"successGithubMap":{"myreaderx4":1,"myreaderx2":1,"myreaderx18":1},"failGithubMap":{"myreaderx14":1}},"feed":{"createdTime":"2020-09-07 03:42:03","updatedTime":"2020-09-07 03:42:03","id":46511,"name":"(:3[kanのメモ帳]","url":"http://kan-kikuchi.hatenablog.com/feed","subscriber":69,"website":null,"icon":"https://kan-kikuchi.hatenablog.com/favicon.ico","icon_jsdelivr":null,"description":"個人ゲーム開発者kan.kikuchiのメモ的技術ブログ。月木更新でUnity関連がメイン。","weekly":null,"link":"https://kan-kikuchi.hatenablog.com"},"noPictureArticleList":[{"createdTime":"2020-09-07 06:00:42","updatedTime":"2020-09-07 06:00:42","id":null,"feedId":46511,"linkMd5":"37a711c6cee60849f84ee071e39434e2"}],"tmpCommonImgCdnBytes":939846,"tmpBodyImgCdnBytes":73180,"tmpBgImgCdnBytes":0,"extra4":{"start":1599429615645,"total":0,"statList":[{"spend":1609,"msg":"获取xml内容"},{"spend":5469,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":4,"msg":"修正封面图上传失败重新上传"},{"spend":13398,"msg":"正文链接上传到cdn"}]},"extra5":4,"extra6":4,"extra7ImgCdnFailResultVector":[{"code":1,"isDone":false,"source":"https://cdn-ak.f.st-hatena.com/images/fotolife/k/kan_kikuchi/20171214/20171214073408.gif","sourceStatusCode":200,"destWidth":1024,"destHeight":413,"sourceBytes":5112256,"destBytes":560666,"targetWebpQuality":75,"feedId":46511,"totalSpendMs":10750,"convertSpendMs":1699,"createdTime":"2020-09-07 06:00:29","host":"europe-58*","referer":"https://kan-kikuchi.hatenablog.com/entry/EditorCoroutineUtility?utm_source=feed","linkMd5ListStr":"37a711c6cee60849f84ee071e39434e2","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn61/contents/2020/09/06/22-00-39-699_a0f93ec943ba7aac.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sun, 06 Sep 2020 22:00:40 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["90EA:BAC1:6541D19:79BD4FC:5F555C00"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599430042"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn61/contents/2020/09/06/22-00-39-699_a0f93ec943ba7aac.webp","historyStatusCode":[],"spendMs":675},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"4.9 MB","destSize":"547.5 KB","compressRate":"11%"},{"code":1,"isDone":false,"source":"https://cdn-ak.f.st-hatena.com/images/fotolife/k/kan_kikuchi/20171214/20171214073408.gif","sourceStatusCode":200,"destWidth":1024,"destHeight":413,"sourceBytes":5112256,"destBytes":560666,"targetWebpQuality":75,"feedId":46511,"totalSpendMs":2401,"convertSpendMs":1461,"createdTime":"2020-09-07 06:00:40","host":"europe-58*","referer":"https://kan-kikuchi.hatenablog.com/entry/EditorCoroutineUtility?utm_source=feed","linkMd5ListStr":"37a711c6cee60849f84ee071e39434e2","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn61/contents/2020/09/06/22-00-42-176_a0f93ec943ba7aac.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sun, 06 Sep 2020 22:00:42 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["829C:B505:E9667A0:11904AF3:5F555C00"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599430042"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn61/contents/2020/09/06/22-00-42-176_a0f93ec943ba7aac.webp","historyStatusCode":[],"spendMs":680},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"4.9 MB","destSize":"547.5 KB","compressRate":"11%"}],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://us-036.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-58.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://europe70.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://cdn-ak.f.st-hatena.com/images/fotolife/k/kan_kikuchi/20200828/20200828080630.gif","sourceStatusCode":200,"destWidth":640,"destHeight":630,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn51@2020_3/2020/09/06/22-00-28-019_788d8ae2e4f0b146.webp","sourceBytes":928197,"destBytes":939846,"targetWebpQuality":75,"feedId":46511,"totalSpendMs":6757,"convertSpendMs":5034,"createdTime":"2020-09-07 06:00:22","host":"us-006*","referer":"https://kan-kikuchi.hatenablog.com/entry/EditorCoroutineUtility?utm_source=feed","linkMd5ListStr":"37a711c6cee60849f84ee071e39434e2,37a711c6cee60849f84ee071e39434e2,37a711c6cee60849f84ee071e39434e2","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"906.4 KB","destSize":"917.8 KB","compressRate":"101.3%"},{"code":1,"isDone":false,"source":"https://cdn-ak.f.st-hatena.com/images/fotolife/k/kan_kikuchi/20200828/20200828071047.jpg","sourceStatusCode":200,"destWidth":1200,"destHeight":978,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn66@2020_2/2020/09/06/22-00-29-760_90d936f0e891405a.webp","sourceBytes":66986,"destBytes":43196,"targetWebpQuality":75,"feedId":46511,"totalSpendMs":1122,"convertSpendMs":38,"createdTime":"2020-09-07 06:00:29","host":"us-036*","referer":"https://kan-kikuchi.hatenablog.com/entry/EditorCoroutineUtility?utm_source=feed","linkMd5ListStr":"37a711c6cee60849f84ee071e39434e2","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"65.4 KB","destSize":"42.2 KB","compressRate":"64.5%"},{"code":1,"isDone":false,"source":"https://cdn-ak.f.st-hatena.com/images/fotolife/k/kan_kikuchi/20200828/20200828071003.jpg","sourceStatusCode":200,"destWidth":716,"destHeight":846,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn58@2020_6/2020/09/06/22-00-32-061_070873ec1d4f25e7.webp","sourceBytes":49349,"destBytes":29984,"targetWebpQuality":75,"feedId":46511,"totalSpendMs":3485,"convertSpendMs":18,"createdTime":"2020-09-07 06:00:29","host":"europe70*","referer":"https://kan-kikuchi.hatenablog.com/entry/EditorCoroutineUtility?utm_source=feed","linkMd5ListStr":"37a711c6cee60849f84ee071e39434e2","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"48.2 KB","destSize":"29.3 KB","compressRate":"60.8%"}],"successGithubMap":{"myreaderx4":1,"myreaderx2":1,"myreaderx18":1},"failGithubMap":{"myreaderx14":1}}