{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2021-08-15 12:55:40","updatedTime":"2021-08-15 12:55:40","title":"Feasibility, Use Cases, and Limitations of Pyodide","link":"https://devblogs.microsoft.com/python/?p=8594","description":"<p><em>This blog post was authored by <a href=\"https://www.linkedin.com/in/eleanorjboyd/\">Eleanor Boyd</a>, 2021 Summer Intern for Python Tools for VS Code.</em></p>\n<p>Coming into an internship you never really know what to expect from your summer. What I definitely didn&#8217;t expect was that my whole summer would center around one library – <a href=\"https://pyodide.org/en/stable/\">Pyodide</a> – and that it would leave such an impression on my team and organization.</p>\n<h2 id=\"what-is-pyodide\">What is Pyodide?</h2>\n<p>Pyodide is an open-source library that was started at Mozilla as part of the Iodide project. Pyodide allows a user to run Python in a web browser through having the Python interpreter compiled to Web Assembly (WASM). It comes with 75 packages already in the base library, most of which are part of the scientific stack such as <a href=\"https://numpy.org/\">NumPy</a> and <a href=\"https://pandas.pydata.org/\">Pandas</a>. Other packages can be installed if they are pure python wheels from <a href=\"https://pypi.org/\">PyPI</a>. Check out the Pyodide library <a href=\"https://github.com/pyodide/pyodide\">here</a> and the docs <a href=\"https://pyodide.org/en/stable/\">here</a>.</p>\n<p>With my project being very open-ended, the question I wanted to investigate was how can my team, the Python Tools for VS Code team, use Pyodide? The idea of running Python in a web browser seems amazing, but how easy is it to work with and what can we actually prototype?</p>\n<h2 id=\"what-use-cases-can-we-see-pyodide-filling\">What use cases can we see Pyodide filling?</h2>\n<p>Since Python is a great language for beginners, we always keep beginner programmers and students top of mind when we think about who our users are and what they need. We have found that beginner users struggle to install and configure Python and these steps are a barrier during their getting started experience. Additionally, we have seen that some schools who restrict network access on school computers accidentally block students from downloading Python onto a school computer. Both of these problems could be fixed with the design of an extension, accessible through the <a href=\"https://marketplace.visualstudio.com/vscode\">VS Code marketplace</a>, which would allow a user to run their Python code via Pyodide on the web. This was a very compelling use case and so I began exploring it as an option and I learned so much about Pyodide along the way. We were able to solve the problems with an extension as you can see in the demo below but this involved some workarounds that made it not production worthy. Here are my biggest takeaways and where I see this library going.</p>\n<p><figure id=\"attachment_8596\" aria-describedby=\"caption-attachment-8596\" style=\"width: 2466px\" class=\"wp-caption aligncenter\"><a href=\"https://devblogs.microsoft.com/python/wp-content/uploads/sites/12/2021/08/pyodide.gif\"><img class=\"wp-image-8596 size-full\" src=\"https://devblogs.microsoft.com/python/wp-content/uploads/sites/12/2021/08/pyodide.gif\" alt=\"Prototype of running a Python file with Pyodide in VS Code \" width=\"2466\" height=\"1558\" /></a><figcaption id=\"caption-attachment-8596\" class=\"wp-caption-text\"><span style=\"font-size: 10pt;\"><em>In this demo a user writes a Python program then can run it using Pyodide by clicking the play button and selecting &#8220;Run with Pyodide&#8221;. The user&#8217;s code is the run with Pyodide in a monkey-patched version of Pyodide which allows it to run in Node. The result of the code is returned to the console for the user and as you can see it has strong performance speed.</em></span></figcaption></figure></p>\n<h2 id=\"how-pyodide-works-and-its-limitations\">How Pyodide Works and Its Limitations</h2>\n<p>VS Code is built on top of <a href=\"https://www.electronjs.org/\">Electron</a> which is an open source technology used to build native Node applications. During the process of trying to write a Pyodide extension for VS Code I discovered that <a href=\"https://github.com/pyodide/pyodide/issues/14\">Pyodide did not have Node support;</a> it required a window object, which exists if Pyodide is run in a web worker or in a browser but does not exist in Node. The great news is a <a href=\"https://github.com/pyodide/pyodide/pull/1691\">fix for this issue</a> has just been released and so our original idea can now be implemented without work-arounds.</p>\n<p>Three other important considerations for Pyodide, that might be limitations based on the use case, are: restrictions on importing 3<sup>rd</sup>-party code, printing/returning script results, and restrictions on multifile programs. The way that Pyodide works is that you import the Pyodide script via a <a href=\"https://en.wikipedia.org/wiki/Content_delivery_network\">CDN</a> or bundle the library along with your application, although this will increase your project size by <em>6.4 MB </em>for just the CPython standard library or 172.955 MB for the compressed Pyodide library with the <a href=\"https://github.com/pyodide/pyodide/tree/main/packages\">75 pre-installed packages</a>. Since this is a web-based library, the rest of your application will be written in JavaScript/TypeScript such as a web worker, a web application, or a Node application which can all contain Pyodide. After importing Pyodide you can use a few simple but powerful commands to do everything else you would need with Pyodide. You simply run <em>pyodide.runPython(string of code)</em> and pass in a string of Python code that you want to run. Since Python rules apply, this should be a valid Python script. From there, Pyodide runs the code &#8212; there is an async command option as well &#8212; and prints any print commands to the console and returns the final return value. Due to this design, the location where Pyodide prints is based on the context in which it is called and only the final return value is captured by the main JavaScript/TypeScript script which is running Pyodide. The second limitation of this design is that Pyodide cannot handle multifile programs because the program is passed in as a string. Unrelated to these two limitations is the design of the package import system: Pyodide bundles 75 packages and additional packages can be imported if they are pure Python wheels hosted online, either on PyPI or another URL.</p>\n<h2 id=\"advantages-of-pyodide\">Advantages of Pyodide</h2>\n<p>Given these concerns, are the advantages worth the potential limitations? I say yes (although my team makes no promises about the future <img src=\"https://s.w.org/images/core/emoji/13.1.0/72x72/1f604.png\" alt=\"😄\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" />). I think Pyodide brings a whole new set of opportunities to Python that are poised to become very impactful to all different types of developers. The size of Pyodide is a bit big but it is manageable, and the library has great performance speeds that remain constant across Chrome and Edge during our light testing. Since the project is open-source it is simple to add new supported libraries to Pyodide&#8217;s current list of 75 packages, and the library in general continues to be actively maintained by a few core contributors. The activity on the Pyodide repo means that issues are being answered quickly and new features such as Node support are being added consistently to the project. Pyodide is continuously improving, and the limitations right now should not be viewed as static.</p>\n<h2 id=\"additional-examples-and-future-applications\">Additional Examples and Future Applications</h2>\n<p>The use case described in this article is just one compelling example of how Pyodide can help users and developers alike. My coworker <a href=\"https://twitter.com/LostInTangent/status/1392945004570583041\">Jonathan Carter demoed another example on his Twitter</a> which is the extension <a href=\"https://marketplace.visualstudio.com/items?itemName=codespaces-Contrib.codeswing\">CodeSwing</a> that he built and maintains which allows users to create/view interactive playgrounds within VS Code and does not require compilation, instead relying on Pyodide to run Python code. Additionally, Pyodide is being explored as a way to run Python tooling in VS Code. During my internship I worked on getting a lightweight intelisense extension for Python working which used Jedi run via Pyodide and was very straightforward since Jedi is one of the packages included in the Pyodide library. Additionally my coworker Joyce Er <a href=\"https://twitter.com/joyceerhl/status/1396548649069412357\">demoed a personal project on her Twitter</a> that uses Pyodide to run Python code in a notebook and is backed by <a href=\"https://blog.jupyter.org/jupyterlite-jupyter-%EF%B8%8F-webassembly-%EF%B8%8F-python-f6e2e41ab3fa\">JupyterLite</a> and uses the <a href=\"https://code.visualstudio.com/api/references/vscode-api\">VS Code API</a>. Just in the Microsoft Developer Division there are already numerous use cases which demonstrate the power of Pyodide such as running code, Python tooling, interactive coding with VS Code, and Notebooks which all show how useful Pyodide can be if other organizations and individuals start to incorporate it into their projects. Python is such a useful language to developers because it brings an ecosystem of useful packages and Pyodide transfers this power to the customer. Pyodide could solve the problems presented by creating a great Python development experience in new products in and outside of Microsoft and I expect continued growth in this library as other use cases are discovered.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://devblogs.microsoft.com/python/feasibility-use-cases-and-limitations-of-pyodide/\">Feasibility, Use Cases, and Limitations of Pyodide</a> appeared first on <a rel=\"nofollow\" href=\"https://devblogs.microsoft.com/python\">Python</a>.</p>\n","descriptionType":"html","publishedDate":"Wed, 11 Aug 2021 17:08:02 +0000","feedId":15881,"bgimg":"https://devblogs.microsoft.com/python/wp-content/uploads/sites/12/2021/08/pyodide.gif","linkMd5":"62d206c666e6cb1929e1984393bc412b","destWidth":2466,"destHeight":1558,"sourceBytes":293817,"destBytes":213258,"author":"Luciana Abud","articleImgCdnMap":{"https://devblogs.microsoft.com/python/wp-content/uploads/sites/12/2021/08/pyodide.gif":null,"https://s.w.org/images/core/emoji/13.1.0/72x72/1f604.png":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn74@2020_4/2021/08/15/04-56-13-778_a4acda0d2c6b9fb0.webp"},"publishedOrCreatedDate":1629003340595}],"record":{"createdTime":"2021-08-15 12:55:40","updatedTime":"2021-08-15 12:55:40","feedId":15881,"fetchDate":"Sun, 15 Aug 2021 04:55:40 +0000","fetchMs":79,"handleMs":6,"totalMs":33623,"newArticles":0,"totalArticles":10,"status":1,"type":0,"ip":"79b59b7ab14b8d981e3d8a220e20848a","hostName":"us-029*","requestId":"9a3a9465821d4befb1d1971d72017f26_15881","contentType":"application/rss+xml; charset=UTF-8","totalBytes":1622,"bgimgsTotal":1,"bgimgsGithubTotal":0,"articlesImgsTotal":2,"articlesImgsGithubTotal":1,"successGithubMap":{"myreaderx11":1},"failGithubMap":{"myreaderx31":1}},"feed":{"createdTime":"2020-09-07 02:11:38","updatedTime":"2020-09-07 02:37:07","id":15881,"name":"Python","url":"https://blogs.msdn.microsoft.com/pythonengineering/feed/","subscriber":211,"website":null,"icon":"https://devblogs.microsoft.com/python/wp-content/uploads/sites/12/2018/10/Microsoft-Favicon.png","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx62/cdn46@2020_6/2020/09/06/18-37-02-513_6321c1b6478d4b23.png","description":"Read the latest updates about all things Python at Microsoft","weekly":null,"link":null},"noPictureArticleList":[{"createdTime":"2021-08-15 12:56:14","updatedTime":"2021-08-15 12:56:14","id":null,"feedId":15881,"linkMd5":"62d206c666e6cb1929e1984393bc412b"}],"tmpCommonImgCdnBytes":0,"tmpBodyImgCdnBytes":1622,"tmpBgImgCdnBytes":0,"extra4":{"start":1629003340508,"total":0,"statList":[{"spend":81,"msg":"获取xml内容"},{"spend":6,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":557,"msg":"正文链接上传到cdn"}]},"extra5":2,"extra6":2,"extra7ImgCdnFailResultVector":[{"code":1,"isDone":false,"source":"https://devblogs.microsoft.com/python/wp-content/uploads/sites/12/2021/08/pyodide.gif","sourceStatusCode":200,"destWidth":2466,"destHeight":1558,"sourceBytes":293817,"destBytes":213258,"targetWebpQuality":75,"feedId":15881,"totalSpendMs":16320,"convertSpendMs":16222,"createdTime":"2021-08-15 12:55:40","host":"us-006*","referer":"https://devblogs.microsoft.com/python/?p=8594","linkMd5ListStr":"62d206c666e6cb1929e1984393bc412b,62d206c666e6cb1929e1984393bc412b","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx31/cdn68/contents/2021/08/15/04-55-56-874_6f9f70d612b1a885.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69855631.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sun, 15 Aug 2021 04:55:56 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["AEC0:11D4:AEF9D3:193CA24:61189E5C"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1629006804"],"x-ratelimit-resource":["core"],"x-ratelimit-used":["60"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx31/cdn68/contents/2021/08/15/04-55-56-874_6f9f70d612b1a885.webp","historyStatusCode":[],"spendMs":46},"base64UserPassword":null,"token":"da243******************************d9e47"},"githubUser":"myreaderx31","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"286.9 KB","destSize":"208.3 KB","compressRate":"72.6%"},{"code":1,"isDone":false,"source":"https://devblogs.microsoft.com/python/wp-content/uploads/sites/12/2021/08/pyodide.gif","sourceStatusCode":200,"destWidth":2466,"destHeight":1558,"sourceBytes":293817,"destBytes":213258,"targetWebpQuality":75,"feedId":15881,"totalSpendMs":16643,"convertSpendMs":16525,"createdTime":"2021-08-15 12:55:56","host":"us-006*","referer":"https://devblogs.microsoft.com/python/?p=8594","linkMd5ListStr":"62d206c666e6cb1929e1984393bc412b,62d206c666e6cb1929e1984393bc412b","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx31/cdn68/contents/2021/08/15/04-56-13-476_6f9f70d612b1a885.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69855631.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sun, 15 Aug 2021 04:56:13 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["BC50:11D4:AEFD94:193D329:61189E6D"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1629006804"],"x-ratelimit-resource":["core"],"x-ratelimit-used":["60"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx31/cdn68/contents/2021/08/15/04-56-13-476_6f9f70d612b1a885.webp","historyStatusCode":[],"spendMs":94},"base64UserPassword":null,"token":"da243******************************d9e47"},"githubUser":"myreaderx31","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"286.9 KB","destSize":"208.3 KB","compressRate":"72.6%"}],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://europe70.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://s.w.org/images/core/emoji/13.1.0/72x72/1f604.png","sourceStatusCode":200,"destWidth":72,"destHeight":72,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn74@2020_4/2021/08/15/04-56-13-778_a4acda0d2c6b9fb0.webp","sourceBytes":809,"destBytes":1622,"targetWebpQuality":75,"feedId":15881,"totalSpendMs":412,"convertSpendMs":3,"createdTime":"2021-08-15 12:56:13","host":"europe70*","referer":"https://devblogs.microsoft.com/python/?p=8594","linkMd5ListStr":"62d206c666e6cb1929e1984393bc412b","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"809 B","destSize":"1.6 KB","compressRate":"200.5%"}],"successGithubMap":{"myreaderx11":1},"failGithubMap":{"myreaderx31":1}}