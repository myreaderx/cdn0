{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2021-04-10 00:41:20","updatedTime":"2021-04-10 00:41:20","title":"Deploying a MongoDB Proof of Concept on Google Cloud Platform","link":"https://www.percona.com/blog/?p=75166","description":"<img width=\"200\" height=\"105\" src=\"https://www.percona.com/blog/wp-content/uploads/2021/04/Deploy-MongoDB-Google-Cloud-Platform-200x105.png\" class=\"webfeedsFeaturedVisual wp-post-image\" alt=\"\" loading=\"lazy\" style=\"display: block; margin-bottom: 5px; clear:both;max-width: 100%;\" link_thumbnail=\"\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2021/04/Deploy-MongoDB-Google-Cloud-Platform-200x105.png 200w, https://www.percona.com/blog/wp-content/uploads/2021/04/Deploy-MongoDB-Google-Cloud-Platform-300x157.png 300w, https://www.percona.com/blog/wp-content/uploads/2021/04/Deploy-MongoDB-Google-Cloud-Platform-1024x536.png 1024w, https://www.percona.com/blog/wp-content/uploads/2021/04/Deploy-MongoDB-Google-Cloud-Platform-1140x595.png 1140w, https://www.percona.com/blog/wp-content/uploads/2021/04/Deploy-MongoDB-Google-Cloud-Platform-367x192.png 367w, https://www.percona.com/blog/wp-content/uploads/2021/04/Deploy-MongoDB-Google-Cloud-Platform.png 1200w\" sizes=\"(max-width: 200px) 100vw, 200px\" /><p><img loading=\"lazy\" class=\"alignright size-medium wp-image-75356\" src=\"https://www.percona.com/blog/wp-content/uploads/2021/04/Deploy-MongoDB-Google-Cloud-Platform-300x157.png\" alt=\"Deploy MongoDB Google Cloud Platform\" width=\"300\" height=\"157\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2021/04/Deploy-MongoDB-Google-Cloud-Platform-300x157.png 300w, https://www.percona.com/blog/wp-content/uploads/2021/04/Deploy-MongoDB-Google-Cloud-Platform-1024x536.png 1024w, https://www.percona.com/blog/wp-content/uploads/2021/04/Deploy-MongoDB-Google-Cloud-Platform-200x105.png 200w, https://www.percona.com/blog/wp-content/uploads/2021/04/Deploy-MongoDB-Google-Cloud-Platform-1140x595.png 1140w, https://www.percona.com/blog/wp-content/uploads/2021/04/Deploy-MongoDB-Google-Cloud-Platform-367x192.png 367w, https://www.percona.com/blog/wp-content/uploads/2021/04/Deploy-MongoDB-Google-Cloud-Platform.png 1200w\" sizes=\"(max-width: 300px) 100vw, 300px\" />Recently, I needed to set up a Proof of Concept (POC) and wanted to do it on Google Cloud Platform (GCP).  After documenting the process, it seemed it might be helpful for others looking for the most basic guide possible to get a Mongo server up and running on GCP.  The process below will set up the latest version of <a target=\"_blank\" href=\"https://www.percona.com/software/mongodb/percona-server-for-mongodb\">Percona Server for MongoDB</a> on a Virtual Machine (VM) in GCP.  This will be a minimal install for which to do further work.  I will also be utilizing the free account on GCP to do this.</p>\n<p>The first step will be setting up your SSH access to the node.  On my Mac, I ran the following command which should work equally well on Linux:</p><pre class=\"crayon-plain-tag\">ssh-keygen -t rsa -f ~/.ssh/gcp -C [USERNAME]</pre><p>I named my key &#8220;gcp&#8221; in the example above but you can use an existing key or generate a new one with whatever name you want.</p>\n<p>From there, you will want to login to the GCP console in a browser and do some simple configuration.  The first step will be to create a project and then add an instance.  You will also choose a Region and Zone.  And for our final basic configuration of our VM, choose the type of machine you want.  For my testing, an e2-medium is sufficient.  I will also accept default disk size and type.</p>\n<p><img loading=\"lazy\" class=\"aligncenter wp-image-75173 size-large\" src=\"https://www.percona.com/blog/wp-content/uploads/2021/03/Screen-Shot-2021-03-31-at-10.37.40-AM-863x1024.png\" alt=\"configuration of our VM\" width=\"863\" height=\"1024\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2021/03/Screen-Shot-2021-03-31-at-10.37.40-AM-863x1024.png 863w, https://www.percona.com/blog/wp-content/uploads/2021/03/Screen-Shot-2021-03-31-at-10.37.40-AM-253x300.png 253w, https://www.percona.com/blog/wp-content/uploads/2021/03/Screen-Shot-2021-03-31-at-10.37.40-AM-126x150.png 126w, https://www.percona.com/blog/wp-content/uploads/2021/03/Screen-Shot-2021-03-31-at-10.37.40-AM-367x435.png 367w, https://www.percona.com/blog/wp-content/uploads/2021/03/Screen-Shot-2021-03-31-at-10.37.40-AM.png 968w\" sizes=\"(max-width: 863px) 100vw, 863px\" /></p>\n<p>Next, edit the instance details and go to the SSH Keys section and add your SSH key.  Your key will be a lot longer but will look something like the below:</p>\n<p><img loading=\"lazy\" class=\"wp-image-75175 size-large aligncenter\" src=\"https://www.percona.com/blog/wp-content/uploads/2021/03/Screen-Shot-2021-03-31-at-10.44.09-AM-1024x121.png\" alt=\"\" width=\"900\" height=\"106\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2021/03/Screen-Shot-2021-03-31-at-10.44.09-AM-1024x121.png 1024w, https://www.percona.com/blog/wp-content/uploads/2021/03/Screen-Shot-2021-03-31-at-10.44.09-AM-300x35.png 300w, https://www.percona.com/blog/wp-content/uploads/2021/03/Screen-Shot-2021-03-31-at-10.44.09-AM-200x24.png 200w, https://www.percona.com/blog/wp-content/uploads/2021/03/Screen-Shot-2021-03-31-at-10.44.09-AM-1536x181.png 1536w, https://www.percona.com/blog/wp-content/uploads/2021/03/Screen-Shot-2021-03-31-at-10.44.09-AM-2048x242.png 2048w, https://www.percona.com/blog/wp-content/uploads/2021/03/Screen-Shot-2021-03-31-at-10.44.09-AM-367x43.png 367w\" sizes=\"(max-width: 900px) 100vw, 900px\" /></p>\n<p>Save out the details and take note of the public IP of the node.  Of course, you will want to test logging in using your key to ensure you can get into the server.  I tested my access with the below command, replacing your key name (gcp in my case), username, and public IP:</p><pre class=\"crayon-plain-tag\">ssh -i ~/.ssh/gcp [USERNAME]@[PUBLIC IP]</pre><p>Our next step will be to install Percona Server for MongoDB.  We will do this as painlessly as possible using Percona&#8217;s RPMs.  We will start by setting up the repo:</p><pre class=\"crayon-plain-tag\">sudo yum install https://repo.percona.com/yum/percona-release-latest.noarch.rpm\nsudo percona-release enable psmdb-44 release</pre><p>With the repo configured, we will install MongoDB with the following command:</p><pre class=\"crayon-plain-tag\">sudo yum install percona-server-mongodb</pre><p>You will likely want to enable the service:</p><pre class=\"crayon-plain-tag\">sudo systemctl enable mongod</pre><p>By default, MongoDB does not enable authentication to access it.  If you want to do this, you can use the following command to setup access:</p><pre class=\"crayon-plain-tag\">sudo /usr/bin/percona-server-mongodb-enable-auth.sh</pre><p>Here&#8217;s more information on <a target=\"_blank\" href=\"https://www.percona.com/doc/percona-server-for-mongodb/4.4/enable-auth.html\">enabling authentication on Percona Server for MongoDB</a>.</p>\n<p>Again, this is the most basic installation of <a target=\"_blank\" href=\"https://www.percona.com/software/mongodb/percona-server-for-mongodb\">Percona Server for MongoDB</a> on the Google Cloud Platform.  This guide was created for those looking for the basic introduction to both platforms and just want to get their proverbial hands dirty with a basic POC.</p>\n<hr />\n<p style=\"text-align: center;\"><a target=\"_blank\" href=\"https://www.percona.com/software/mongodb?utm_source=blog\"><strong>Our Percona Distribution for MongoDB is the only truly open-source solution powerful enough for enterprise applications. It&#8217;s free to use, so try it today!</strong></a></p>\n","descriptionType":"html","publishedDate":"Fri, 09 Apr 2021 14:19:55 +0000","feedId":11,"bgimg":"","linkMd5":"1db54a4ab803e4e1342c46a37393d233","bgimgJsdelivr":"","metaImg":"","author":"Michael Patrick","articleImgCdnMap":{"https://www.percona.com/blog/wp-content/uploads/2021/04/Deploy-MongoDB-Google-Cloud-Platform-200x105.png":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn4@2020_4/2021/04/09/16-41-39-910_07c13eecaf64c32c.webp","https://www.percona.com/blog/wp-content/uploads/2021/04/Deploy-MongoDB-Google-Cloud-Platform-300x157.png":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn14@2020_2/2021/04/09/16-42-25-115_880418c93232083b.webp","https://www.percona.com/blog/wp-content/uploads/2021/03/Screen-Shot-2021-03-31-at-10.37.40-AM-863x1024.png":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn8@2020_5/2021/04/09/16-42-19-742_dc783737b0d40e0d.webp","https://www.percona.com/blog/wp-content/uploads/2021/03/Screen-Shot-2021-03-31-at-10.44.09-AM-1024x121.png":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn9@2020_4/2021/04/09/16-41-42-186_fb5cf216638d6c3c.webp"},"publishedOrCreatedDate":1617986480906},{"createdTime":"2021-04-10 00:41:20","updatedTime":"2021-04-10 00:41:20","title":"MySQL 101: Basic MySQL Server Triage","link":"https://www.percona.com/blog/?p=75178","description":"<img width=\"200\" height=\"112\" src=\"https://www.percona.com/blog/wp-content/uploads/2021/04/MySQL-101-Server-Triage-200x112.png\" class=\"webfeedsFeaturedVisual wp-post-image\" alt=\"MySQL 101 Server Triage\" loading=\"lazy\" style=\"display: block; margin-bottom: 5px; clear:both;max-width: 100%;\" link_thumbnail=\"\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2021/04/MySQL-101-Server-Triage-200x112.png 200w, https://www.percona.com/blog/wp-content/uploads/2021/04/MySQL-101-Server-Triage-300x168.png 300w, https://www.percona.com/blog/wp-content/uploads/2021/04/MySQL-101-Server-Triage-1024x572.png 1024w, https://www.percona.com/blog/wp-content/uploads/2021/04/MySQL-101-Server-Triage-367x205.png 367w, https://www.percona.com/blog/wp-content/uploads/2021/04/MySQL-101-Server-Triage.png 1200w\" sizes=\"(max-width: 200px) 100vw, 200px\" /><p><strong><img loading=\"lazy\" class=\"alignright size-medium wp-image-75306\" src=\"https://www.percona.com/blog/wp-content/uploads/2021/04/MySQL-101-Server-Triage-300x168.png\" alt=\"MySQL 101 Server Triage\" width=\"300\" height=\"168\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2021/04/MySQL-101-Server-Triage-300x168.png 300w, https://www.percona.com/blog/wp-content/uploads/2021/04/MySQL-101-Server-Triage-1024x572.png 1024w, https://www.percona.com/blog/wp-content/uploads/2021/04/MySQL-101-Server-Triage-200x112.png 200w, https://www.percona.com/blog/wp-content/uploads/2021/04/MySQL-101-Server-Triage-367x205.png 367w, https://www.percona.com/blog/wp-content/uploads/2021/04/MySQL-101-Server-Triage.png 1200w\" sizes=\"(max-width: 300px) 100vw, 300px\" />So your MySQL server has crashed</strong>.  What do you do now?  When a server is down, in my opinion, there are two steps that are essential and both are extremely important and neither should be neglected:</p>\n<ol>\n<li>Save diagnostic information for determining the root cause analysis (RCA).</li>\n<li>Get the server back up and running.</li>\n</ol>\n<p>Too many people rush to Step #2 and lose pertinent diagnostics from Step #1.  Likewise, too many people will spend too much time on Step #1 and delay getting to Step #2 and restoring service.  The goal is to collect diagnostics as quickly as possible for later review while getting service restored as fast as possible.</p>\n<p>As a Technical Account Manager (TAM) and assisting on server restoration calls, I have seen both issues at play.  Technical resources have a tendency to get so bogged down in trying to understand the cause of the server outage that they forget that the downtime is costing the business money.  The desire to crawl through server logs, review metrics, pour-over system metrics, and so on, can be too tempting for some who are concerned that important diagnostic data will be lost when service is restored.  This is a valid concern, but there must be a middle ground.</p>\n<p>Conversely, many, especially those in management, will demand service is restored immediately to continue business functions.  Of course, after the service is back up, the demand for an RCA will come.  Sadly, many metrics, and some logs, are lost when a server is bounced.  Below are basic guidelines on what metrics to collect for MySQL.  The steps are in no particular order.</p>\n<ol>\n<li>Save a copy of the MySQL Error Log.<br />\n<pre class=\"crayon-plain-tag\">sudo cp /path/to/datadir/*.log /some/where/safe</pre>\n</li>\n<li>Make a copy of the MySQL configuration file.<br />\n<pre class=\"crayon-plain-tag\">sudo cp /path/to/my.cnf /some/where/safe</pre>\n</li>\n<li>Make a copy of system logs and save them somewhere on persistent storage in a location that will not be overwritten.  Consider doing something like the following on Linux:<br />\n<pre class=\"crayon-plain-tag\">sudo cp /var/log/syslog /some/where/safe/syslog\nsudo cp /var/log/messages /some/where/safe/messages\nsudo journalctl -e &#62; /some/where/safe/journalctl.txt</pre>\n</li>\n<li>If MySQL is running still and you can log in, get some MySQL metrics.  You will want to save the output into files somewhere.<br />\n<pre class=\"crayon-plain-tag\">sudo mysqladmin -i10 -c10 proc &#62; /some/where/safe/mysql_procs.txt\nmysql&#62; SHOW GLOBAL VARIABLES;\nsudo mysqladmin -i10 -c10 ext &#62; /some/where/safe/mysql_ext.txt\nmysql&#62; SHOW ENGINE INNODB STATUS\\G</pre>\n</li>\n<li>If MySQL is running and you have <a target=\"_blank\" href=\"https://www.percona.com/software/database-tools/percona-toolkit\">Percona Toolkit</a>, you should collect some pt-stalk output.<br />\n<pre class=\"crayon-plain-tag\">sudo ./pt-stalk --no-stalk --iterations=2 --sleep=30 --dest=/some/where/safe -- --user=root --password=&#60;mysql-root-pass&#62;;</pre>\n</li>\n<li>If you have space and time, a copy of the database files (data directory in MySQL) could be helpful.  Certainly, for many installations, getting all of the data files will be impossible.  If it is a small database and space and time allow, it can be best to get all the files just in case.<br />\n<pre class=\"crayon-plain-tag\">sudo cp -R /path/to/datadir /some/where/safe/datadir</pre>\n</li>\n<li>Copy database logs and save them somewhere safe for later review.  Systems like <a target=\"_blank\" href=\"https://www.percona.com/software/mysql-database/percona-xtradb-cluster\">Percona XtraDB Cluster</a> (PXC) will create GRA files during an issue which can be really helpful to look at to determine the root cause.  By combining the GRA header file with the contents of the GRA log files, you can use the mysqlbinlog command to get the records of transactions causing issues.  More information can be found in one of our older blogs here<br />\n<a target=\"_blank\" href=\"https://www.percona.com/blog/2012/12/19/percona-xtradb-cluster-pxc-what-about-gra_-log-files/\">Percona XtraDB Cluster (PXC): what about GRA_*.log files?</a>.<br />\n<pre class=\"crayon-plain-tag\">sudo cp /path/to/data/dir/GRA* /some/where/safe/datadir/</pre>\n</li>\n<li>Save system metrics pertaining to CPU, I/O, and memory usage:<br />\n<pre class=\"crayon-plain-tag\">sudo mpstat -a 1 60 &#62; /some/where/safe/mpstat.txt\nsudo vmstat 1 60 &#62; /some/where/safe/vmstat.txt\nsudo iostat -dmx 1 60 &#62; /some/where/safe/iostat.txt</pre>\n</li>\n<li>Save system info.<br />\n<pre class=\"crayon-plain-tag\">sudo cat /proc/cpuinfo &#62; /some/where/safe/cpuinfo.txt</pre>\n</li>\n<li>If you have Percona Toolkit, the following would be very helpful:<br />\n<pre class=\"crayon-plain-tag\">sudo pt-summary &#62; /some/where/safe/pt-summary.txt\nsudo pt-mysql-summary &#62; /some/where/safe/pt-mysql-summary.txt</pre>\n</li>\n<li>Get hardware diagnostics.<br />\n<pre class=\"crayon-plain-tag\"># disk info\nsudo df -k &#62; /some/where/safe/df_k.txt\nsudo lsblk -o KNAME,SCHED,SIZE,TYPE,ROTA &#62; /some/where/safe/lsblk.txt\nsudo lsblk --all &#62; $PTDEST/lsblk-all;\n\n# lv/pv/vg only for systems with LVM\nsudo lvdisplay --all --maps &#62; /some/where/safe/lvdisplau-all-maps.txt\nsudo pvdisplay --maps &#62; /some/where/safe/pvdisplay-maps.txt\nsudo pvs -v &#62; /some/where/safe/pvs_v.txt\nsudo vgdisplay &#62; /some/where/safe/vgdisplay.txt\n\n# nfsstat for systems with NFS mounts \nsudo nfsstat -m &#62; /some/where/safe/nfsstat_m.txt\nsudo nfsiostat 1 120 &#62; /some/where/safe/nfsiostat.txt\n\n# Collect hardware information \nsudo dmesg &#62; /some/where/safe/dmesg.txt\nsudo dmesg -T free -m &#62; /some/where/safe/dmesg_free.txt \nsudo dmesg -T &#62; /some/where/safe/dmesg_t.txt\nsudo ulimit -a &#62; /some/where/safe/ulimit_a.txt\nsudo cat /proc/sys/vm/swappiness &#62; /some/where/safe/swappiness \nsudo numactl --hardware &#62; /some/where/safe/numactl-hardware.txt</pre>\n</li>\n</ol>\n<p>It goes without saying, it would be best to script the above into a useful bash script you can run when there is an issue.  Just be sure to test the script in advance of an issue.</p>\n<p>Again, the goal is to preserve useful diagnostic data that could be useful for determining the root cause of the issue at a later time after the service is restored.  Just don&#8217;t get caught up in looking through the above diagnostics!  Certainly, more data is better but the above is a great starting point.  As time goes on, you may realize you wish you had other metrics and can add them to your script or Standard Operating Procedure (SOP).</p>\n<p>Naturally, adding monitoring like <a target=\"_blank\" href=\"https://learn.percona.com/free-database-monitoring\">Percona Monitoring and Management</a> (PMM) would be a great option that can save you a lot of time and collect even more trends over time which can be extremely helpful.</p>\n<p>With the above diagnostics, you would have a ton of information in the event of an issue to find the root cause.  Now, you can sort through the diagnostics.  Of course, if you need help with that, <a target=\"_blank\" href=\"https://www.percona.com/services\">Percona can help you</a> here as well.</p>\n","descriptionType":"html","publishedDate":"Wed, 07 Apr 2021 17:53:31 +0000","feedId":11,"bgimg":"","linkMd5":"2337dd76f438585d84a0fb340af563ec","bgimgJsdelivr":"","metaImg":"","author":"Michael Patrick","articleImgCdnMap":{"https://www.percona.com/blog/wp-content/uploads/2021/04/MySQL-101-Server-Triage-200x112.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn6@2020_5/2021/04/09/16-41-50-418_4fb50781c21c3ff3.webp","https://www.percona.com/blog/wp-content/uploads/2021/04/MySQL-101-Server-Triage-300x168.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn12@2020_6/2021/04/09/16-41-35-990_406f000f18fc8156.webp"},"publishedOrCreatedDate":1617986480906}],"record":{"createdTime":"2021-04-10 00:41:20","updatedTime":"2021-04-10 00:41:20","feedId":11,"fetchDate":"Fri, 09 Apr 2021 16:41:20 +0000","fetchMs":77,"handleMs":433,"totalMs":65532,"newArticles":0,"totalArticles":40,"status":1,"type":0,"ip":"def808aecb408fadcc4424587b155e88","hostName":"us-016*","requestId":"e041de3738eb4744a47cf7eda5a3e96c_11","contentType":"application/rss+xml; charset=UTF-8","totalBytes":70744,"bgimgsTotal":0,"bgimgsGithubTotal":0,"articlesImgsTotal":6,"articlesImgsGithubTotal":6,"successGithubMap":{"myreaderx14":1,"myreaderx15":1,"myreaderx27":1,"myreaderx16":1,"myreaderx22":1,"myreaderx13":1},"failGithubMap":{}},"feed":{"createdTime":"2020-05-30 17:21:38","updatedTime":"2020-09-01 09:23:03","id":11,"name":"Percona Database Performance Blog","url":"https://www.percona.com/blog/feed/","subscriber":null,"website":null,"icon":"https://www.percona.com/blog/wp-content/uploads/2018/09/percona-32x32.png","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx63/cdn89@2020_6/2020/09/01/01-23-01-358_b72bb3b39c378fe6.png","description":"","weekly":null,"link":null},"noPictureArticleList":[],"tmpCommonImgCdnBytes":0,"tmpBodyImgCdnBytes":70744,"tmpBgImgCdnBytes":0,"extra4":{"start":1617986480371,"total":0,"statList":[{"spend":108,"msg":"获取xml内容"},{"spend":433,"msg":"解释文章"},{"spend":3,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":64925,"msg":"正文链接上传到cdn"}]},"extra5":6,"extra6":6,"extra7ImgCdnFailResultVector":[{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2021/04/Deploy-MongoDB-Google-Cloud-Platform-300x157.png","sourceStatusCode":200,"destWidth":300,"destHeight":157,"sourceBytes":25392,"destBytes":8954,"targetWebpQuality":75,"feedId":11,"totalSpendMs":2963,"convertSpendMs":79,"createdTime":"2021-04-10 00:42:20","host":"europe-24*","referer":"https://www.percona.com/blog/?p=75166","linkMd5ListStr":"1db54a4ab803e4e1342c46a37393d233","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx15/cdn14/contents/2021/04/09/16-42-22-217_880418c93232083b.webp","resp":{"code":409,"msg":"Conflict","body":"{\n  \"message\": \"is at b9e308f3c55ae883b9f9357db9522f0b3f9af76c but expected bf4064fed300092535e130041a8f5044ee5d9a92\",\n  \"documentation_url\": \"https://docs.github.com/rest/reference/repos#create-or-update-file-contents\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-length":["222"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Fri, 09 Apr 2021 16:42:23 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":[""],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["89B8:59FD:2ABFAE6:2B6A95F:607083EE"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["5000"],"x-ratelimit-remaining":["4966"],"x-ratelimit-reset":["1617990105"],"x-ratelimit-used":["34"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 409,url is : https://api.github.com/repos/myreaderx15/cdn14/contents/2021/04/09/16-42-22-217_880418c93232083b.webp","historyStatusCode":[],"spendMs":1137},"base64UserPassword":null,"token":"40538******************************31668"},"githubUser":"myreaderx15","githubHttpCode":409,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"8.7 KB","compressRate":"35.3%","sourceSize":"24.8 KB"}],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://europe-23.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-24.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-002.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe21.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-22.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe70.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2021/04/MySQL-101-Server-Triage-300x168.png","sourceStatusCode":200,"destWidth":300,"destHeight":168,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn12@2020_6/2021/04/09/16-41-35-990_406f000f18fc8156.webp","sourceBytes":36815,"destBytes":7972,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1399,"convertSpendMs":14,"createdTime":"2021-04-10 00:41:35","host":"europe-23*","referer":"https://www.percona.com/blog/?p=75178","linkMd5ListStr":"2337dd76f438585d84a0fb340af563ec","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"7.8 KB","compressRate":"21.7%","sourceSize":"36 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2021/04/Deploy-MongoDB-Google-Cloud-Platform-200x105.png","sourceStatusCode":200,"destWidth":200,"destHeight":105,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn4@2020_4/2021/04/09/16-41-39-910_07c13eecaf64c32c.webp","sourceBytes":17083,"destBytes":4866,"targetWebpQuality":75,"feedId":11,"totalSpendMs":989,"convertSpendMs":9,"createdTime":"2021-04-10 00:41:39","host":"europe-22*","referer":"https://www.percona.com/blog/?p=75166","linkMd5ListStr":"1db54a4ab803e4e1342c46a37393d233","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"4.8 KB","compressRate":"28.5%","sourceSize":"16.7 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2021/03/Screen-Shot-2021-03-31-at-10.44.09-AM-1024x121.png","sourceStatusCode":200,"destWidth":1024,"destHeight":121,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn9@2020_4/2021/04/09/16-41-42-186_fb5cf216638d6c3c.webp","sourceBytes":25506,"destBytes":4416,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1478,"convertSpendMs":12,"createdTime":"2021-04-10 00:41:41","host":"europe70*","referer":"https://www.percona.com/blog/?p=75166","linkMd5ListStr":"1db54a4ab803e4e1342c46a37393d233","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"4.3 KB","compressRate":"17.3%","sourceSize":"24.9 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2021/04/MySQL-101-Server-Triage-200x112.png","sourceStatusCode":200,"destWidth":200,"destHeight":112,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn6@2020_5/2021/04/09/16-41-50-418_4fb50781c21c3ff3.webp","sourceBytes":21145,"destBytes":4304,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1431,"convertSpendMs":17,"createdTime":"2021-04-10 00:41:49","host":"us-002*","referer":"https://www.percona.com/blog/?p=75178","linkMd5ListStr":"2337dd76f438585d84a0fb340af563ec","githubUser":"myreaderx14","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"4.2 KB","compressRate":"20.4%","sourceSize":"20.6 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2021/03/Screen-Shot-2021-03-31-at-10.37.40-AM-863x1024.png","sourceStatusCode":200,"destWidth":863,"destHeight":1024,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn8@2020_5/2021/04/09/16-42-19-742_dc783737b0d40e0d.webp","sourceBytes":390328,"destBytes":40232,"targetWebpQuality":75,"feedId":11,"totalSpendMs":7752,"convertSpendMs":359,"createdTime":"2021-04-10 00:42:12","host":"europe21*","referer":"https://www.percona.com/blog/?p=75166","linkMd5ListStr":"1db54a4ab803e4e1342c46a37393d233","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"39.3 KB","compressRate":"10.3%","sourceSize":"381.2 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2021/04/Deploy-MongoDB-Google-Cloud-Platform-300x157.png","sourceStatusCode":200,"destWidth":300,"destHeight":157,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn14@2020_2/2021/04/09/16-42-25-115_880418c93232083b.webp","sourceBytes":25392,"destBytes":8954,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1508,"convertSpendMs":206,"createdTime":"2021-04-10 00:42:24","host":"europe-24*","referer":"https://www.percona.com/blog/?p=75166","linkMd5ListStr":"1db54a4ab803e4e1342c46a37393d233","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"8.7 KB","compressRate":"35.3%","sourceSize":"24.8 KB"}],"successGithubMap":{"myreaderx14":1,"myreaderx15":1,"myreaderx27":1,"myreaderx16":1,"myreaderx22":1,"myreaderx13":1},"failGithubMap":{}}