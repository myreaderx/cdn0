{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2022-03-14 17:13:57","updatedTime":"2022-03-14 17:13:57","title":"\n        Wayfire 迁移进展（三）：taskmaid, waybar 以及 mako 等\n      ","link":"https://blog.lilydjwg.me/posts/215986","description":"\n        <p style=\"text-indent: 2em; font-style: italic;\">本文来自<a href=\"https://blog.lilydjwg.me/\">依云's Blog</a>，转载请注明。</p><p>\n\t我又来更新我的 Wayfire 迁移进展啦～</p>\n<p>\n\t我写了一个 <a href=\"https://github.com/lilydjwg/taskmaid\">taskmaid</a> 工具，使用 <a href=\"https://wayland.app/protocols/wlr-foreign-toplevel-management-unstable-v1\">wlr foreign toplevel management</a> 扩展来提供窗口管理相关功能。程序自己作为 daemon 随 wayfire 启动运行，通过 D-Bus 提供接口供别的程序使用。你问我为什么不直接每个需要的程序直接使用 Wayland 协议？因为用起来麻烦呀。Wayland 提供信息的方式是一组一组的事件，也并没有高层次的库，处理起来只能一堆回调怼上去，相当不顺手。</p>\n<p>\n\t它最主要的功能就是在 waybar 上标题当前窗口的标题啦。顺便加上了中键关闭和显示 app-id 的功能。应用程序图标因为没有办法准确匹配（比如火狐 nightly 版本的 app-id 也是 firefox），所以没有做。</p>\n<p>\n\t其次是获取当前活动窗口所在的显示器接口名称。我使用这个名称来判断我是不是位于 <a href=\"https://blog.lilydjwg.me/2018/2/12/e-ink-paperlike-hd.212155.html\">E-ink 屏幕</a>上，并为终端、Vim、skim、mutt 等工具使用专门适配过的亮色主题。这个方案比之前在 X11 下使用当前鼠标坐标来判断要灵活一些。当然更灵活的方案是匹配显示器的名称啦，这个数据 Wayfire 的 Wayland 协议里是有提供的，有需要的话我再做。Wayland 并没有一个协议来获取当前鼠标或者键盘焦点所在的显示器信息，所以我只好用窗口管理协议来跟踪活动的窗口了。</p>\n<p>\n\t顺便还做了个 <a href=\"https://github.com/lilydjwg/taskmaid/blob/master/scripts/lswin\">lswin</a> 工具，列出打开的窗口信息。工作区太多啦，我又喜欢最大化，有时候会有窗口忘了关。甚至偶尔我还会不小心把窗口最小化了，然后没有办法给恢复回来&#8230;&#8230;如果以后还经常出现这种情况，我再给 taskmaid 加一个恢复最小化窗口的功能好了。</p>\n<p>\n\t除了使用 taskmaid 显示标题之外，我还加了个显示 <abbr title=\"空气质量指数\">AQI</abbr> 的小脚本。以及之前忘记加网速指示器了，现在也加回来了。不得不说 waybar 比 Awesome 的那个顶栏要好配置得多。不仅不限语言，而且不是非得用定时器，可以在信息变动的时候及时更新信息，没变动就不浪费资源获取重复的信息了。<a href=\"https://github.com/lilydjwg/dotconfig/tree/master/waybar\">我的 waybar 配置都在这里</a>。</p>\n<p>\n\t我给 Wayfire 发了一个 pull request，<a href=\"https://github.com/WayfireWM/wayfire/pull/1372\">添加了最基础的快捷键禁制器的支持</a>，可以在 spicy 等软件中屏蔽 Wayfire 自己的快捷键了，大大方便了我对 Wayfire 和 Sway 的测试。当然也可以用于 VNC 啦。不过并没有像 Sway 那样加选项、支持主动禁用快捷键等功能，短期内我也不太可能会去加这个。原本我是想着在 Wayfire 里再跑一个 Wayfire 或者 Sway 啥的，但考虑到配置方面的问题，还是拿虚拟机隔离了比较好。</p>\n<p>\n\t最新的 Wayfire 版本已经<a href=\"https://github.com/WayfireWM/wayfire/pull/1371\">支持切换到之前的工作区</a>啦～</p>\n<p>\n\t桌面通知程序 mako，之前遇到两个问题。一是通知经常是糊的，没有适配 HiDPI 屏幕，而鼠标指针则一直都是又糊又大。<a href=\"https://github.com/emersion/mako/pull/393\">我给修了</a>，虽然我其实有点不知道我是怎么修好的&#8230;&#8230;总之是整理了一下代码，为了减少调试日志而减少了与 Wayland 混成器的通讯，也变得更高效了。会记住上次显示使用的缩放倍率，所以不会像之前那样一出来是糊的、下一刻才会变清晰了。在 Wayland 协议里，客户端可以获知有哪些显示器、大小和缩放倍率如何，但是客户端并不能提前知道自己将会显示在哪个显示器上（倒是能够指定显示在哪个显示器上），只有显示出来之后才知道，然后做调整后再更新一下&#8230;&#8230;</p>\n<p>\n\t另一个问题是，在 Wayfire 下 mako 在全屏时不会显示通知，会被盖住。设置 <code>layer=overlay</code> 之后倒是能在全屏时显示通知了，但是它也会在 swaylock 锁屏界面上显示&#8230;&#8230;后来了解到 mako 有模式这么个特性，我就在锁屏的时候切换到专为锁屏设置的模式下，解锁之后再切回来。反正锁屏是一句命令，自己拿脚本包一下就好了。</p>\n<p>\n\t最近新的桌面环境稳定下来了，倒是没有再遇到更多的 bug 了。Spicy 会在里边的虚拟机跑特效动画时经常报个「Gdk-Message: Error flushing display: 资源暂时不可用」错误然后退出，我给它用 <a href=\"https://github.com/lilydjwg/dotzsh/blob/master/zshrc#L621\">try_until_success</a> 包了一下倒是问题不大。我也发现了不光是 Wireshark，也有 GTK 程序弹出菜单会显示在错误的位置。</p>\n<p>\n\t那么就酱～</p>\n\n      ","descriptionType":"text/html","publishedDate":"Sat, 04 Dec 2021 07:52:58 +0000","feedId":1772,"bgimg":"","linkMd5":"211a9b098ced2a5ce5ab1d81d2f590c9","bgimgJsdelivr":"","metaImg":"","author":"依云","publishedOrCreatedDate":1647249237278}],"record":{"createdTime":"2022-03-14 17:13:57","updatedTime":"2022-03-14 17:13:57","feedId":1772,"fetchDate":"Mon, 14 Mar 2022 09:13:57 +0000","fetchMs":40262,"handleMs":150250,"totalMs":190664,"newArticles":0,"totalArticles":12,"status":1,"type":0,"ip":"bc1eecef1292254c09de6c1e66b750f3","hostName":"europe-56*","requestId":"3207c57a8eaa48b6b3d395a36a2ed55b_1772","contentType":"application/rss+xml; charset=utf-8","totalBytes":0,"bgimgsTotal":0,"bgimgsGithubTotal":0,"articlesImgsTotal":0,"articlesImgsGithubTotal":0,"successGithubMap":{},"failGithubMap":{}},"feed":{"createdTime":"2020-08-24 21:31:33","updatedTime":"2020-12-11 16:40:00","id":1772,"name":"\n      依云's Blog\n    ","url":"https://blog.lilydjwg.me/feed","subscriber":null,"website":null,"icon":"https://blog.lilydjwg.me/favicon.ico","icon_jsdelivr":null,"description":"\n      \n    ","weekly":null,"link":"https://blog.lilydjwg.me"},"noPictureArticleList":[],"tmpCommonImgCdnBytes":0,"tmpBodyImgCdnBytes":0,"tmpBgImgCdnBytes":0,"extra4":{"start":1647249046629,"total":0,"statList":[{"spend":40399,"msg":"获取xml内容"},{"spend":150250,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":0,"msg":"正文链接上传到cdn"}]},"extra5":0,"extra6":0,"extra7ImgCdnFailResultVector":[],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{},"extra12ImgCdnSuccessResultVector":[],"successGithubMap":{},"failGithubMap":{}}