{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-09-21 12:51:09","updatedTime":"2020-09-21 12:51:09","title":"有赞移动热修复平台建设","link":"https://tech.youzan.com/you-zan-re-xiu-fu-ping-tai-jian-she/","description":"<h2 id=\"\">一、背景</h2>\n\n<h3 id=\"11\">1.1 为什么要搭建热修复平台</h3>\n\n<p>随着公司的快速发展，需求的快速增加，App迭代也越来越频繁，如果移动应用出现问题，不仅仅影响用户体验，还会影响公司口碑，甚至可能造成资损。需要快速修复线上问题，对比常规的开发流程而言，热修复更加灵活方便，优势很多：</p>\n\n<ul>\n<li>无需重新发版，实时高效修复bug；</li>\n<li>用户无感知修复，无需下载新的版本，代价小；</li>\n<li>修复成功率高，能把损失降到最低；</li>\n</ul>\n\n<p>因此热修平台愈加重要，需要搭建一个高效，好用且安全的热修复平台。</p>\n\n<h3 id=\"12\">1.2 思考</h3>\n\n<p>搭建热修复平台，首先要考虑热修方案的选择，但这不是本文的重点，我们这里不做过多讨论。目前有赞 Android 侧的热修是基于 Tinker 自建的后端服务 + Android SDK 实现的。</p>\n\n<p>下图简要描述了热修的主要过程：</p>\n\n<p><img src=\"https://b.yzcdn.cn/public_files/1716dd22a1db6e302020bd47cf165d97.png\" width=\"300\" height=\"750\" alt=\"\" align=\"center\"></p>\n\n<p>看似简单的流程，在多人开发团队中，其实存在很多问题：</p>\n\n<ul>\n<li>每次版本打包发布，如何保存基准包及mapping等文件用于后续热修生成补丁？</li>\n<li>热修代码的分支如何规范管理？</li>\n<li>如何构建补丁包，构建了如何保存 ？</li>\n<li>补丁包如何快速高效的本地验证 ？</li>\n<li>补丁发布策略，发布审批等</li>\n<li>补丁下发数据如何统计？</li>\n<li>针对特定用户怎么查询热修状态？</li>\n<li>热修出了问题怎么定责，怎么对热修代码追溯？</li>\n</ul>\n\n<h3 id=\"13\">1.3 热修平台定义</h3>\n\n<p>针对以上问题，我们认为热修平台应具备以下特点：</p>\n\n<ul>\n<li>支持打包文件保存</li>\n<li>定义标准的热修分支规范</li>\n<li>支持补丁包的构建保存</li>\n<li>支持方便的本地验证测试</li>\n<li>支持权限审批</li>\n<li>支持补丁全量，灰度及条件发布</li>\n<li>支持热修状态查询，数据统计</li>\n<li>支持历史热修代码查看</li>\n</ul>\n\n<h2 id=\"\">二、热修复平台</h2>\n\n<h3 id=\"21\">2.1 写在前面</h3>\n\n<p>在后面介绍热修复平台的过程中，会多次提到 MBD 及 APUB，这里先做下说明，便于下文理解：</p>\n\n<ul>\n<li>MBD(Mobile Build): 有赞的移动应用构建平台, 支持App构建, 热修构建及SDK构建。</li>\n<li>APUB(App Publish): 应用及热修等发布平台，APUB 的上游为 MBD，承接了 <code>CI</code> 系统的产物。下游则是 C 端用户，作为应用发布生命周期的最后一环，为所有应用补全了热修复 和 灰度分发相关的能力。</li>\n</ul>\n\n<p>同时为了讲清楚热修复平台，本文以Android为例按照热修过程，顺序介绍。</p>\n\n<h3 id=\"22\">2.2 打包文件保存</h3>\n\n<p><strong>Android 侧使用<code>Tinker</code> 首先要考虑的是构建产物及<code>mapping</code> 等文件的保存，用于后续打补丁包</strong></p>\n\n<p>由于有赞内部 App 发版构建, 热修构建，SDK构建等都是通过 MBD 构建平台，且MBD 本身已支持打包产物的自定义上传，因此借助 MBD 构建平台就可以做到保存 <code>apk &#38; mapping</code> 文件。MBD 构建平台打包是在运行着 <code>GitLab Runner</code> 的黑苹果上进行的，<code>GitLab Runner</code> 是 <code>GitLab</code> 基于 <code>Go</code> 实现的脚本解释器，如果感兴趣可以自行了解下，这里不再展开。</p>\n\n<p>App 使用 MBD 打包需要先指定打包脚本，脚本为 <code>yaml</code> 格式，其中 <code>artifacts</code> 指定哪些文件要上传到 <code>CDN</code> , 配置中的 <code>paths</code> 中指定了 <code>Tinker</code> 构建产物目录 <code>bakApk &#38;  mapping</code> ，因此Tinker 产物会上传到 <code>CDN</code>, 脚本如下：</p>\n\n<pre><code>build:Git API  \n    artifacts:\n        untracked: false\n        name: \"out\"\n        preview_pattern: \"app-full-release.apk\"\n        cdn_path: \"xxxxxxxx\"\n        paths:\n            - app/build/bakApk\n            - app/build/outputs/apk/\n            - app/build/outputs/mapping/full/release/\n    script: \n        - env\n        - ./gradlew clean assembleFullRelease -PTINKER_ID=$CI_BUILD_ID -PBAK_PATH=$CI_PROJECT_DIR/app/build/bakApk -Paar=$JOB_COMPONENT_DEPENDENCIES -PMBD_RELEASE=$JOB_BUILD_RELEASE -PMBD_TEST_VERSION=$JOB_COMPONENT_VERSION -PMBD_BRANCH_NAME=$CI_COMMIT_REF_NAME --no-daemon\n</code></pre>\n\n<h3 id=\"23\">2.3 热修分支规范</h3>\n\n<p><strong>MBD 操作拉取分支修复问题</strong></p>\n\n<p>移动团队达到一定规模后，需要同步制定相应的分支规范，其中热修相关的分支管理需要考虑两个问题</p>\n\n<pre><code>1. 应该从哪个分支拉取代码修改打补丁？\n2. 修复问题后热修代码合并问题？\n</code></pre>\n\n<p>这里有必要简单说明下：</p>\n\n<p>有赞每次发版都会有开车的概念，所有待发布的功能都会上车合并到一个从master 分支拉出的<code>bus/${version}-${date}</code>的分支，在<code>bus/${version}-${date}</code>分支打出包后，开发同学自测然后交由项目的测试回归，没问题后，最后经App的测试同学回归，回归通过后开发同学会将<code>bus/${version}-${date}</code> 分支合入master 构建 <code>release</code> 包。</p>\n\n<p>由于考虑到也可能会拉分支对老版本发布热修，因此上述MBD构建成功后也会入库记录该<code>release</code>版本构建时的 <code>commit hash</code>。</p>\n\n<p>基于以上两点我们规定每个<code>release</code>版本都有一个固定的热修分支为<code>hotfix/${version}-mbd</code>，热修分支的管理也是直接由MBD构建平台统一规范处理的如图所示：</p>\n\n<p><img src=\"https://b.yzcdn.cn/public_files/023c0209006f657d616e9c7739c3fa31.png\" width=\"350\" height=\"500\" alt=\"\" align=\"center\"></p>\n\n<p>MBD 构建平台每个App构建，热修构建，SDK构建都是一个集成单（多次构建行为的集合，每次正式构建前都可能会有若干次测试构建），举例来说如 <code>App 2.3.5</code> 版本发现问题需要热修复：</p>\n\n<p><img src=\"https://b.yzcdn.cn/public_files/cf717c6ad126b4ea4b5ab3b0f70911a4.png\" alt=\"image\"></p>\n\n<ol>\n<li>首先要在MBD 构建平台搜索<code>2.3.5</code>版本的<code>release</code>集成单，<code>release</code>集成单中包含一个热修复按钮  </li>\n<li>点击热修复按钮判断 <code>2.3.5</code> 版本是否已经存在 <code>hotfix/2.3.5-mbd</code> 分支？  </li>\n<li>存在直接创建热修复集成单，不存在MBD平台调用 <code>GitLab API</code> 创建 <code>hotfix/2.3.5-mbd</code> 分支  </li>\n<li>开发者在<code>hotfix/2.3.5-mbd</code> 拉取创建修改问题的分支，如<code>hotfix/xxx_bugfix</code></li>\n</ol>\n\n<p>至此解决了 <code>应该从哪个分支拉取代码修改打补丁？</code> 的问题，合并到哪个分支的问题，暂且不表，下文会讲到。</p>\n\n<h3 id=\"24\">2.4 补丁构建及保存</h3>\n\n<p>如上所述，热修构建也是在MBD平台完成的，由于之前app发版构建的产物已经打包\n上传到了<code>CDN</code>，再次构建时 MBD 平台只需把产物下载解压到 <code>Tinker</code> 基准包路径，\n同App打包逻辑，热修构建也是通过<code>yaml</code>脚本配置，指定要上传补丁文件的相对路径，补丁构建命令执行结束后会上传补丁文件到 <code>CDN</code>,用于后续补丁下发，简要过程如图：</p>\n\n<p><img src=\"https://b.yzcdn.cn/public_files/df742dc0a7036ce26476b4519b75c50b.png\" alt=\"image\"></p>\n\n<p><strong>补丁构建脚本</strong></p>\n\n<pre><code>patch:  \n    artifacts:\n        untracked: false\n        name: \"patch\"\n        preview_pattern: \"patch_signed.apk\"\n        paths:\n          - app/build/outputs/apk/full/tinkerPatch/full/release/patch_signed_7zip.apk\n          - app/build/outputs/apk/full/tinkerPatch/full/release/patch_signed.apk\n    script: \n        - env\n        - pwd\n        - mv app/build/bakApk base/\n        - ls base/\n        - ./gradlew clean tinkerPatchFullRelease -Paar=$JOB_COMPONENT_DEPENDENCIES --no-daemon -POLD_BUILD_FLAVOR=$CI_PROJECT_DIR/base\n        - rm -rf base\n</code></pre>\n\n<h3 id=\"25\">2.5 验证热修</h3>\n\n<p>补丁上传到CDN 后，为了确保下发的补丁没问题，需要验证补丁，这是至关重要的一步。 那怎么加载补丁呢？ <code>Tinker</code> 也提供了加载本地补丁包的 <code>API</code> ：</p>\n\n<pre><code>TinkerInstaller.onReceiveUpgradePatch(context, 补丁包的本地路径);\n</code></pre>\n\n<p>因此我们只需要把<code>CDN</code> 文件下载到特定路径，在App重启时检测补丁文件是否已下载，如果已下载直接加载补丁即可。</p>\n\n<p>验证补丁首先要考虑怎么方便开发者使用，步骤越少越快越好，因为通常发布热修本身就是非常紧急的问题，由于有赞内部有移动助手App（支持常用的开发功能，开发环境切换，抓包等） 移动同学都会使用，因此可以把热修验证功能放在移动助手App。</p>\n\n<p>从使用简便程度上来说，二维码似乎是不错的选择，因此我们定下的方案是，移动助手App 扫码获取二维码信息，二维码中包含：</p>\n\n<ol>\n<li>补丁MD5 安全校验 、签名  </li>\n<li>补丁 CDN 地址  </li>\n<li>补丁对应App版本及基准包 CDN 地址  </li>\n<li>补丁对应App包名</li>\n</ol>\n\n<p>其中第[3]点用于检测验证热修的手机当前安装的版本是否是基准包，如果不是提示下载安装补丁对应基准包版本，避免浪费时间。</p>\n\n<p>第[4]点用于补丁合成后，根据包名重启App，主要是考虑到 <code>Tinker</code> 的机制补丁本地合成后，需要再次冷启动使补丁生效。</p>\n\n<p><img src=\"https://b.yzcdn.cn/public_files/49864f07fa7eb8e49a46f57aa1414f1a.png\" alt=\"image\"></p>\n\n<p>移动助手App 扫码上图中的二维码后，请求补丁信息，执行拉取补丁本地合成补丁，如果合成成功后被热修App启动后会看到热修合成成功页面，否则不能明确的知道是否已热修合成，开发者会比较迷惑，同时为了方便多次合成测试的场景，比如第一次补丁问题没有修复，需要再次合成，也支持了清除补丁功能。如图所示：\n<img src=\"https://b.yzcdn.cn/public_files/60358ae1efff472e52c8e76aa6d773f8.jpg\" width=\"300\" height=\"620\" alt=\"合成进度\" align=\"left\"> <br>\n<img src=\"https://b.yzcdn.cn/public_files/eaa8eec546b3c7a762932a19851bd0cd.jpg\" width=\"300\" height=\"620\" alt=\"合成成功\"></p>\n\n<h3 id=\"26\">2.6 发布策略</h3>\n\n<p><strong>验证补丁没问题后，需要根据情况选定发布策略，目前支持三种热修发布策略</strong></p>\n\n<h4 id=\"261\">2.6.1 全量发布</h4>\n\n<p>全量发布，不用解释，补丁对应版本App所有用户都可拉取补丁</p>\n\n<h4 id=\"262\">2.6.2 灰度发布</h4>\n\n<p>灰度下发支持按人数灰度 与 按比例灰度，按照人数灰度相对简单，因此这里只说下按比例灰度，灰度如果按照总人数的百分比进行下发，有可能会下发到不活跃用户的设备上，让百分比下发失去意义。目前一个简单的方式是实现哈希碰撞算法，概率可调，当App端请求补丁时，根据设备的唯一标识进行碰撞，落到概率区间内则下发补丁。</p>\n\n<h4 id=\"263\">2.6.3 条件发布</h4>\n\n<p>很多时候在发布一个补丁时，需要在小范围内进行验证，比如特定某个系统版本或者特定某个用户；在验证通过后再进行全网用户的下发，这中场景下可以使用条件下发。</p>\n\n<p>Apub 平台在发布补丁时可以选择使用条件下发，除上传补丁外，还可以填写条件语句，只有满足条件的设备才会执行修复补丁。</p>\n\n<p>其中条件语句由 <strong>key/value/运算符</strong> 组成，条件语句的规则与代码中的条件表达式一致，支持 “==、!=、>、&#60;、>=、&#60;=、&#38;&#38;、||” 等运算符，如：</p>\n\n<pre><code>userId == 10023451 &#38;&#38; roleType == 1  \n</code></pre>\n\n<p>后端对DSL解析引擎可参考：\n<a href=\"https://developer.mozilla.org/zh-CN/docs/Mozilla/Projects/Rhino\">https://developer.mozilla.org/zh-CN/docs/Mozilla/Projects/Rhino</a></p>\n\n<p>另外特定版本的App 可能会发布多个补丁，如果结合使用多种下发补丁也会遇到些新的问题，举例来说如果先条件发布了一个补丁，再全量发布了另一个补丁App应该怎么处理？因此制定了App补丁使用规则：</p>\n\n<ul>\n<li><p>若第一次下发补丁，包含了条件值，不符合条件的设备补丁不会生效。</p></li>\n<li><p>若非第一次下发补丁，上一个补丁版本是全量下发，不符合条件的设备会请求上一个版本补丁。</p></li>\n<li><p>若非第一次下发补丁，上一个补丁版本非全量下发(灰度/条件/开发)，不符合条件的设备若之前请求过补丁，会保留执行之前的补丁，若没有请求过补丁(新用户)，不会请求到补丁。</p></li>\n</ul>\n\n<h3 id=\"27\">2.7 发布审批</h3>\n\n<p><strong>在确定了补丁使用哪种发布方式后，还需要由指定人（通常为TL）统一收敛权限，同时对热修代码做二次检查（Code review）</strong>，有赞不会允许未经复核检验的热修代码随意的发布线上，万一出了问题，可能会影响大量用户。</p>\n\n<p>对于有赞权限管理感兴趣读者的可以看这篇文章<a href=\"https://tech.youzan.com/you-zan-yi-dong-ce-quan-xian-yu-shen-pi-liu-cheng-de-biao-zhun-hua/\">《有赞权限与审批流程的标准化》</a></p>\n\n<p>引用上文中举的例子说明：如果 <code>A</code> 同学需要修改 <code>App 2.3.5</code> 版本的问题，发布热修复。</p>\n\n<ol>\n<li>开发者需要从<code>hotfix/2.3.5-mbd</code>拉取<code>hotfix/xxx_bugfix</code> 分支  </li>\n<li>在 <code>hotfix/xxx_bugfix</code>分支修改问题并构建补丁  </li>\n<li>接着申请发布补丁，在审批通过之后，发布热修的同学在<code>Apub</code>平台上操作下发在 MBD平台构建并上传到<code>CDN</code>的补丁</li>\n</ol>\n\n<p>仔细想想，是不是遗漏了什么？还记得上文说到热修分支规范时，修复问题后热修代码的合并问题么？</p>\n\n<p>为了避免开发者在修改问题后直接发布补丁，代码忘记合并导致后续版本也有问题的情况，同时也为了规范管理热修分支。如图：</p>\n\n<p><img src=\"https://b.yzcdn.cn/public_files/0ca080866fcffeb6798e6999d8f05046.png\" alt=\"image\"></p>\n\n<ul>\n<li><p><code>Apub</code> 发布平台在 <code>A</code> 发起审批时，自动创建了 <code>hotfix/xxx_bugfix -&#62; hotfix/2.3.5-mbd</code> 的 <code>MR</code> 并自动写入审批单申请理由中。</p></li>\n<li><p>在<code>A</code>点击下发补丁时调用<code>GitLab API</code> 获取<code>MR</code> 状态，如果<code>MR</code> 已合并则允许下发，否则提示 <code>A</code> 催促审批人合并代码才可下发补丁</p></li>\n<li><p>最后下次发版时将 <code>hotfix/2.3.5-mbd</code> 分支添加到下一趟发版列表中，将 <code>bug</code> 修复代码带到下一趟车中，最终合入 <code>master</code></p></li>\n</ul>\n\n<h3 id=\"28\">2.8 热修数据统计</h3>\n\n<p>补丁下发后，还需要实时观察热修生效情况，如果有问题要及时暂停下发或回滚补丁，有赞热修提供了基础的数据统计，包含已修复设备数量，合并失败错误统计等</p>\n\n<p><img src=\"https://b.yzcdn.cn/public_files/cce1d0b44027d185e106720a36a59bec.png\" width=\"400\" height=\"230\" alt=\"\" align=\"center\"></p>\n\n<h3 id=\"29\">2.9 设备热修状态查询</h3>\n\n<p><strong>在某些场景下，可能需要查询特定用户或特定用户账号的热修状态</strong></p>\n\n<p>常见的一种情况是：</p>\n\n<p>用户反馈了个线上问题，开发同学确认问题并修改发布补丁后，悻悻的回复用户已经修复了，重复杀掉App打开几次即可。用户说好我试试，过了一段时间，又反馈说还是有问题啊，但是明明已经发布热修复了（头皮发麻），这时就可以根据用户账号信息查询热修状态了，如下图。</p>\n\n<p><img src=\"https://su.yzcdn.cn/public_files/6b71447420da456e74e926aca55d51cd.png\" alt=\"image\"></p>\n\n<h3 id=\"210\">2.10 热修代码回溯</h3>\n\n<p>还有一些特殊情况，历史版本里发布的热修复导致了新的问题，需要确认问题责任人，或者排查特定问题，需要排除热修代码的影响，需要查看该版本发布的热修复代码。</p>\n\n<p>针对该情况，我们把上文中发起审批时创建的MR落库记录，并提供了查看代码变更按钮，点击按钮直接跳转记录的 <code>GitLab MR</code>, 即可查看代码变更。</p>\n\n<h2 id=\"\">三、平台架构及流程</h2>\n\n<h3 id=\"31\">3.1 热修平台架构</h3>\n\n<p>上面讲的内容比较多也比较杂，可以结合热修平台架构图来看，有个全局的视角：</p>\n\n<p><img src=\"https://su.yzcdn.cn/public_files/98444cb4da998006a28bc2ce6870bac7.png\" alt=\"image\"></p>\n\n<h3 id=\"32\">3.2 热修流程梳理</h3>\n\n<p>最后我们还以上文中的例子回顾下分享的内容，有赞发布热修复的流程：</p>\n\n<h4 id=\"android\">Android 发布热修流程</h4>\n\n<ol>\n<li><p>开发者在 MBD平台搜索需要热修版本的集成单，点击热修复按钮，MBD会创建 <code>hotfix/2.3.5-mbd</code> 分支，同时创建一个热修集成单 （MBD 构建平台每个App构建，热修构建，SDK构建都是一个集成单）</p></li>\n<li><p>开发者需要从<code>hotfix/2.3.5-mbd</code>拉取创建<code>hotfix/xxx_bugfix</code> 分支</p></li>\n<li><p>在 <code>hotfix/xxx_bugfix</code>分支修改问题提交代码并在MBD平台创建的热修集成单上操作构建补丁</p></li>\n<li><p>然后使用有赞移动助手App 扫码验证补丁</p></li>\n<li><p>接着在Apub发布平台选择热修发布方式，填写申请发布理由申请发布补丁，Apub 平台会自动创建<code>hotfix/xxx_bugfix</code> -> <code>hotfix/2.3.5-mbd</code> 的<code>MR</code>，并把<code>MR</code>地址自动填充到申请理由中，开发者等待审批，审批通过之后，确认<code>MR</code>合并，即可发布操作下发补丁</p></li>\n</ol>\n\n<h4 id=\"ios\">iOS 发布热修流程</h4>\n\n<p>上文很少提及iOS 热修复，主要是因为iOS 热修相对简单，没有 Android基准包等复杂逻辑：</p>\n\n<ol>\n<li><p>根据具体问题，编写热修脚本，通过iOS 热修SDK，本地运行调试</p></li>\n<li><p>调试通过后在 Apub平台上传热修脚本，并选择热修发布方式，填写申请发布理由申请发布补丁，iOS 侧由于修复机制等原因，没有自动创建 <code>MR</code> 等逻辑</p></li>\n<li><p>审批通过之后，即可下发补丁</p></li>\n</ol>\n\n<h2 id=\"\">四、总结</h2>\n\n<p>本文主要介绍了有赞的热修复平台，及在搭建过程中遇到的一些问题。热修平台实现了高效、稳定、可靠的热修复补丁上传、验证、分发、权限管理等功能，并提供补丁基本数据统计，可以直接复用到各业务线，避免重复建设。</p>\n\n<p>有赞热修复平台，是结合有赞移动团队实际开发过程遇到的问题，逐步解决逐渐完善的，读者可以结合自身团队打造合适的热修复管理平台，希望有赞热修复平台的建设经验可以对你有所帮助。</p>\n\n<p>如果你有比较好的建议，可以评论回复，如有任何问题，欢迎指正。</p>","descriptionType":"html","publishedDate":"Mon, 13 Jul 2020 06:23:22 +0000","feedId":30666,"bgimg":"https://b.yzcdn.cn/public_files/1716dd22a1db6e302020bd47cf165d97.png","linkMd5":"77078074a461d6be7720bb433c1fc333","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn4@2020_5/2020/09/21/04-51-11-428_53bfe58ba78e0bf8.webp","destWidth":362,"destHeight":896,"sourceBytes":43672,"destBytes":39024,"author":"zhangyuzhu","articleImgCdnMap":{"https://b.yzcdn.cn/public_files/1716dd22a1db6e302020bd47cf165d97.png":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn4@2020_5/2020/09/21/04-51-11-428_53bfe58ba78e0bf8.webp","https://b.yzcdn.cn/public_files/023c0209006f657d616e9c7739c3fa31.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn13@2020_1/2020/09/21/04-51-28-335_d08f4bf78a353351.webp","https://b.yzcdn.cn/public_files/cf717c6ad126b4ea4b5ab3b0f70911a4.png":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn21@2020_6/2020/09/21/04-51-29-589_e6cc888462a9a7a5.webp","https://b.yzcdn.cn/public_files/df742dc0a7036ce26476b4519b75c50b.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn35@2020_1/2020/09/21/04-51-14-800_0470b93aa2fccd99.webp","https://b.yzcdn.cn/public_files/49864f07fa7eb8e49a46f57aa1414f1a.png":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn12@2020_2/2020/09/21/04-51-19-744_41927ec0694e9794.webp","https://b.yzcdn.cn/public_files/60358ae1efff472e52c8e76aa6d773f8.jpg":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn31@2020_2/2020/09/21/04-51-36-597_1f8e5581818b88d0.webp","https://b.yzcdn.cn/public_files/eaa8eec546b3c7a762932a19851bd0cd.jpg":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn18@2020_1/2020/09/21/04-51-28-732_c2fb9fb74cc477f5.webp","https://b.yzcdn.cn/public_files/0ca080866fcffeb6798e6999d8f05046.png":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn7@2020_6/2020/09/21/04-51-14-119_e292e782d720f5ff.webp","https://b.yzcdn.cn/public_files/cce1d0b44027d185e106720a36a59bec.png":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn10@2020_3/2020/09/21/04-51-13-950_7684443b6026c748.webp","https://su.yzcdn.cn/public_files/6b71447420da456e74e926aca55d51cd.png":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn20@2020_3/2020/09/21/04-51-28-501_f6f17a1ddd40f004.webp","https://su.yzcdn.cn/public_files/98444cb4da998006a28bc2ce6870bac7.png":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn16@2020_2/2020/09/21/04-51-30-367_b51b2f3d548f1ed3.webp"},"publishedOrCreatedDate":1600663869358}],"record":{"createdTime":"2020-09-21 12:51:09","updatedTime":"2020-09-21 12:51:09","feedId":30666,"fetchDate":"Mon, 21 Sep 2020 04:51:09 +0000","fetchMs":3630,"handleMs":91,"totalMs":33300,"newArticles":0,"totalArticles":15,"status":1,"type":0,"ip":"07219db1b3e400b7fa1500b956025226","hostName":"europe-23*","requestId":"39ab75bcd044449bbac8abf59b327daa_30666","contentType":"text/xml; charset=utf-8","totalBytes":486258,"bgimgsTotal":1,"bgimgsGithubTotal":1,"articlesImgsTotal":11,"articlesImgsGithubTotal":11,"successGithubMap":{"myreaderx14":1,"myreaderx15":1,"myreaderx27":1,"myreaderx10":1,"myreaderx33":1,"myreaderx11":1,"myreaderx31":1,"myreaderx5oss":1,"myreaderx18":1,"myreaderx19":1,"myreaderx":1},"failGithubMap":{}},"feed":{"createdTime":"2020-09-07 02:50:26","updatedTime":"2020-09-07 04:57:31","id":30666,"name":"有赞技术团队","url":"http://tech.youzan.com/rss/","subscriber":105,"website":null,"icon":"https://tech.youzan.com/favicon.ico","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx64/cdn30@2020_4/2020/09/06/20-57-16-598_47680f0673c2e917.ico","description":"Thoughts, stories and ideas.","weekly":null,"link":null},"noPictureArticleList":[],"tmpCommonImgCdnBytes":39024,"tmpBodyImgCdnBytes":447234,"tmpBgImgCdnBytes":0,"extra4":{"start":1600663865058,"total":0,"statList":[{"spend":4210,"msg":"获取xml内容"},{"spend":91,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":1,"msg":"修正封面图上传失败重新上传"},{"spend":25631,"msg":"正文链接上传到cdn"}]},"extra5":11,"extra6":11,"extra7ImgCdnFailResultVector":[],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://us-013.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-001.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe65.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe63.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe64.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-010.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe66.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe67.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-012.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-011.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://b.yzcdn.cn/public_files/1716dd22a1db6e302020bd47cf165d97.png","sourceStatusCode":200,"destWidth":362,"destHeight":896,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn4@2020_5/2020/09/21/04-51-11-428_53bfe58ba78e0bf8.webp","sourceBytes":43672,"destBytes":39024,"targetWebpQuality":75,"feedId":30666,"totalSpendMs":3282,"convertSpendMs":32,"createdTime":"2020-09-21 12:51:09","host":"europe-59*","referer":"https://tech.youzan.com/you-zan-re-xiu-fu-ping-tai-jian-she/","linkMd5ListStr":"77078074a461d6be7720bb433c1fc333,77078074a461d6be7720bb433c1fc333","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"42.6 KB","destSize":"38.1 KB","compressRate":"89.4%"},{"code":1,"isDone":false,"source":"https://b.yzcdn.cn/public_files/cce1d0b44027d185e106720a36a59bec.png","sourceStatusCode":200,"destWidth":620,"destHeight":366,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn10@2020_3/2020/09/21/04-51-13-950_7684443b6026c748.webp","sourceBytes":25393,"destBytes":11674,"targetWebpQuality":75,"feedId":30666,"totalSpendMs":1895,"convertSpendMs":12,"createdTime":"2020-09-21 12:51:12","host":"us-012*","referer":"https://tech.youzan.com/you-zan-re-xiu-fu-ping-tai-jian-she/","linkMd5ListStr":"77078074a461d6be7720bb433c1fc333","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"24.8 KB","destSize":"11.4 KB","compressRate":"46%"},{"code":1,"isDone":false,"source":"https://b.yzcdn.cn/public_files/0ca080866fcffeb6798e6999d8f05046.png","sourceStatusCode":200,"destWidth":2552,"destHeight":1194,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn7@2020_6/2020/09/21/04-51-14-119_e292e782d720f5ff.webp","sourceBytes":167728,"destBytes":68850,"targetWebpQuality":75,"feedId":30666,"totalSpendMs":2132,"convertSpendMs":97,"createdTime":"2020-09-21 12:51:12","host":"us-010*","referer":"https://tech.youzan.com/you-zan-re-xiu-fu-ping-tai-jian-she/","linkMd5ListStr":"77078074a461d6be7720bb433c1fc333","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"163.8 KB","destSize":"67.2 KB","compressRate":"41%"},{"code":1,"isDone":false,"source":"https://b.yzcdn.cn/public_files/df742dc0a7036ce26476b4519b75c50b.png","sourceStatusCode":200,"destWidth":1270,"destHeight":202,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn35@2020_1/2020/09/21/04-51-14-800_0470b93aa2fccd99.webp","sourceBytes":24297,"destBytes":39044,"targetWebpQuality":75,"feedId":30666,"totalSpendMs":3312,"convertSpendMs":26,"createdTime":"2020-09-21 12:51:12","host":"europe64*","referer":"https://tech.youzan.com/you-zan-re-xiu-fu-ping-tai-jian-she/","linkMd5ListStr":"77078074a461d6be7720bb433c1fc333","githubUser":"myreaderx14","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"23.7 KB","destSize":"38.1 KB","compressRate":"160.7%"},{"code":1,"isDone":false,"source":"https://b.yzcdn.cn/public_files/49864f07fa7eb8e49a46f57aa1414f1a.png","sourceStatusCode":200,"destWidth":2852,"destHeight":1106,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn12@2020_2/2020/09/21/04-51-19-744_41927ec0694e9794.webp","sourceBytes":348896,"destBytes":91444,"targetWebpQuality":75,"feedId":30666,"totalSpendMs":2942,"convertSpendMs":260,"createdTime":"2020-09-21 12:51:17","host":"us-011*","referer":"https://tech.youzan.com/you-zan-re-xiu-fu-ping-tai-jian-she/","linkMd5ListStr":"77078074a461d6be7720bb433c1fc333","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"340.7 KB","destSize":"89.3 KB","compressRate":"26.2%"},{"code":1,"isDone":false,"source":"https://b.yzcdn.cn/public_files/eaa8eec546b3c7a762932a19851bd0cd.jpg","sourceStatusCode":200,"destWidth":1080,"destHeight":2340,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn18@2020_1/2020/09/21/04-51-28-732_c2fb9fb74cc477f5.webp","sourceBytes":99478,"destBytes":28678,"targetWebpQuality":75,"feedId":30666,"totalSpendMs":2741,"convertSpendMs":95,"createdTime":"2020-09-21 12:51:26","host":"us-013*","referer":"https://tech.youzan.com/you-zan-re-xiu-fu-ping-tai-jian-she/","linkMd5ListStr":"77078074a461d6be7720bb433c1fc333","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"97.1 KB","destSize":"28 KB","compressRate":"28.8%"},{"code":1,"isDone":false,"source":"https://su.yzcdn.cn/public_files/6b71447420da456e74e926aca55d51cd.png","sourceStatusCode":200,"destWidth":2782,"destHeight":520,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn20@2020_3/2020/09/21/04-51-28-501_f6f17a1ddd40f004.webp","sourceBytes":191725,"destBytes":43488,"targetWebpQuality":75,"feedId":30666,"totalSpendMs":2759,"convertSpendMs":55,"createdTime":"2020-09-21 12:51:27","host":"europe66*","referer":"https://tech.youzan.com/you-zan-re-xiu-fu-ping-tai-jian-she/","linkMd5ListStr":"77078074a461d6be7720bb433c1fc333","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"187.2 KB","destSize":"42.5 KB","compressRate":"22.7%"},{"code":1,"isDone":false,"source":"https://b.yzcdn.cn/public_files/023c0209006f657d616e9c7739c3fa31.png","sourceStatusCode":200,"destWidth":713,"destHeight":1094,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn13@2020_1/2020/09/21/04-51-28-335_d08f4bf78a353351.webp","sourceBytes":73481,"destBytes":33248,"targetWebpQuality":75,"feedId":30666,"totalSpendMs":3127,"convertSpendMs":62,"createdTime":"2020-09-21 12:51:27","host":"europe63*","referer":"https://tech.youzan.com/you-zan-re-xiu-fu-ping-tai-jian-she/","linkMd5ListStr":"77078074a461d6be7720bb433c1fc333","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"71.8 KB","destSize":"32.5 KB","compressRate":"45.2%"},{"code":1,"isDone":false,"source":"https://b.yzcdn.cn/public_files/cf717c6ad126b4ea4b5ab3b0f70911a4.png","sourceStatusCode":200,"destWidth":1792,"destHeight":424,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn21@2020_6/2020/09/21/04-51-29-589_e6cc888462a9a7a5.webp","sourceBytes":125007,"destBytes":28844,"targetWebpQuality":75,"feedId":30666,"totalSpendMs":3734,"convertSpendMs":40,"createdTime":"2020-09-21 12:51:27","host":"europe65*","referer":"https://tech.youzan.com/you-zan-re-xiu-fu-ping-tai-jian-she/","linkMd5ListStr":"77078074a461d6be7720bb433c1fc333","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"122.1 KB","destSize":"28.2 KB","compressRate":"23.1%"},{"code":1,"isDone":false,"source":"https://su.yzcdn.cn/public_files/98444cb4da998006a28bc2ce6870bac7.png","sourceStatusCode":200,"destWidth":1730,"destHeight":1070,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn16@2020_2/2020/09/21/04-51-30-367_b51b2f3d548f1ed3.webp","sourceBytes":185448,"destBytes":58916,"targetWebpQuality":75,"feedId":30666,"totalSpendMs":2626,"convertSpendMs":91,"createdTime":"2020-09-21 12:51:29","host":"europe67*","referer":"https://tech.youzan.com/you-zan-re-xiu-fu-ping-tai-jian-she/","linkMd5ListStr":"77078074a461d6be7720bb433c1fc333","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"181.1 KB","destSize":"57.5 KB","compressRate":"31.8%"},{"code":1,"isDone":false,"source":"https://b.yzcdn.cn/public_files/60358ae1efff472e52c8e76aa6d773f8.jpg","sourceStatusCode":200,"destWidth":1080,"destHeight":2340,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn31@2020_2/2020/09/21/04-51-36-597_1f8e5581818b88d0.webp","sourceBytes":132194,"destBytes":43048,"targetWebpQuality":75,"feedId":30666,"totalSpendMs":3312,"convertSpendMs":61,"createdTime":"2020-09-21 12:51:35","host":"us-001*","referer":"https://tech.youzan.com/you-zan-re-xiu-fu-ping-tai-jian-she/","linkMd5ListStr":"77078074a461d6be7720bb433c1fc333","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"129.1 KB","destSize":"42 KB","compressRate":"32.6%"}],"successGithubMap":{"myreaderx14":1,"myreaderx15":1,"myreaderx27":1,"myreaderx10":1,"myreaderx33":1,"myreaderx11":1,"myreaderx31":1,"myreaderx5oss":1,"myreaderx18":1,"myreaderx19":1,"myreaderx":1},"failGithubMap":{}}