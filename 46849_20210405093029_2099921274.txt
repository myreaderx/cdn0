{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2021-04-05 17:30:04","updatedTime":"2021-04-05 17:30:04","title":"More Data More Problems","link":"https://medium.com/p/3c585b8bc84d","description":"<h3><strong>More Data, More Problems</strong></h3><p>How BuzzFeed Scaled its Data Operation</p><p>Data has always been integral to BuzzFeed’s success. It allows team members to build data-driven products, evaluate how our content is performing, and ask questions to more deeply understand our audience — all to ultimately inform BuzzFeed’s overall strategy and create the best experience for our users.</p><p>Our data originates from many sources and covers a large footprint, including anonymized first-party tracking, third party analytics (Google), platform APIs (Facebook, YouTube, Instagram, etc), and internal applications (content metadata from MySQL databases). Where we have control of this data, we’ve worked hard to improve it at the point of creation. Our first-party tracking, for example, was recently redesigned and reimplemented to employ a modular schema design, ensuring consistency and flexibility across all our products.</p><p>To meet the increasing demands of these data sets, our Data Engineering group invested significantly in our data infrastructure over the last couple of years. We migrated our data into Google’s BigQuery and reworked our ingestion pipeline to import new data into the warehouse in near real-time. With this foundation in place, we are now ingesting tens of thousands of records per second, totaling nearly 2 TB of data per day. This process is fairly unopinionated; by simply specifying a schema, relevant database dumps or event stream log files get ingested into BigQuery without any transformation.</p><p>While the availability of this data in BigQuery in near real-time unlocks a multitude of ways in which it can be leveraged, we quickly realized more data also leads to more problems. In this post we’ll detail these challenges and how we ultimately worked past them to empower our organization to scale its use of data while also simplifying our data infrastructure.</p><p><strong>Transforming the Data<br></strong>BigQuery, while effective at storing large data volumes (totaling over 2 Petabytes across all of BuzzFeed’s datasets), requires special considerations when querying it. All BuzzFeed BigQuery queries share a fixed pool of 2,000 slots — units of computational capacity required to execute the query. BigQuery calculates the number of slots required by each query based on its complexity and amount of data scanned. Inefficient or large queries will not only take longer to execute but can also potentially block or slow other concurrent queries due to the number of slots it requires. Table JOINs in particular can become computationally expensive because of the way that data needs to be coordinated between slots. As such, BigQuery is most performant when data is denormalized.</p><p>Since our data is imported into BigQuery in its raw form, we needed a way to optimize it into representations that capture common query patterns and transformations. (So, for example, we want to do things like aggregate individual page view events into hourly totals or create a denormalized representation of our core content metadata.) To achieve this, we’ve built a “Materialized Views” system.</p><p>On its surface, the system is fairly straightforward: given a SQL query, run it periodically and save its results in a new table that can be queried independently from its source data. On closer inspection, however, you’ll see a much more complex system that tracks dependencies, schedules and triggers full and partial rebuilds of tables, orchestrates rebuild execution to balance job priorities against the fixed BigQuery slot allocation, provides tooling for creation and validation of views, and enforces change management rules to ensure reliability for downstream consumers of the resulting tables.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/828/1*qv4PsaY0YFW-yPVu3FT8jA.gif\" /><figcaption>A Materialized Views Validation Run</figcaption></figure><p>With over 200 views in production, the tables created by the Materialized Views system have become the primary data access point for data in BuzzFeed, supporting over 80% of our reporting.</p><p><strong>Standardizing the Data<br></strong>Given the varied nature of BuzzFeed’s data, understanding what data is available and how it relates can be difficult.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*EC6HYOYap3YNR6A4\" /><figcaption>A rough sketch of table relationships</figcaption></figure><p>To lower the barrier of entry for working with this data, we’ve introduced the “BuzzFeed Data Model” (BFDM for short). Built by leveraging the Materialized Views system, BFDM provides a standardized and consistent set of tables designed to support a majority of common business use cases. It considers the entire landscape of our raw data and how the various sources relate to one another to provide:</p><ul><li>Consistency in data granularity <br>Regardless of the source, BFDM provides metrics precomputed at hourly, daily, and lifetime granularities (where applicable).</li><li>Consistency in terminology and naming<br>By standardizing naming conventions across BFDM, it is easier to find relevant tables, understand what data is available within, and query across them.</li><li>Clearer relationships<br>Tables are broken out into one of three types: entities, relationships, and metrics. By understanding a set of common fields available on each, any sets of data can easily be JOINed together.</li><li>Centralization of business logic (i.e. content categorization, relationships, and grouping rules)</li><li>Data enrichment, clean-up, and error remediation</li></ul><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*rTD4nQfLxwF8zPq5\" /><figcaption>The New Structure Provided by BFDM</figcaption></figure><p>This set of tables makes it easier for teams to work with data, simplifies and optimizes queries, and provides a “sanctioned” source of truth for BuzzFeed’s core metrics. Team members are able to seamlessly query different tables without needing to acknowledge a long list of “gotchas” about the data.</p><p><strong>Creating a Single Source of Truth<br></strong>Through the years, various differing (and sometimes redundant) approaches were introduced to BuzzFeed’s data infrastructure:</p><ul><li>Spark jobs aggregated raw page view events into hourly aggregates to be imported into our data warehouse (Redshift prior to BigQuery)</li><li>Looker Persistent Derived Tables transformed data for its own use</li><li>A Redis-backed API served transformed and aggregated data to some internal dashboards</li><li>A Cassandra-backed API served real-time time-series page view aggregates to other dashboards</li></ul><p>Not only has each of these legacy pieces increasingly become an operational burden, but they have also allowed for potential inconsistencies.</p><p>While our move to BigQuery introduced one more potential source for inconsistency, it also has provided the key components to allow us to decommission each of the legacy systems in favor of one consolidated approach. Remember, we now can import data into BigQuery in near real-time to be transformed by the Materialized Views system into our standardized source of truth, the BuzzFeed Data Model. With this, the same BFDM tables can be used for ad-hoc queries or within BI tools like Looker. By introducing one more system — an API that runs lightweight queries against BFDM — our internal dashboards can be powered by them as well, guaranteeing consistency across all points of data access. (Not to mention reduced technical debt from each of our decommissioned systems!)</p><p><strong>Looking to the future</strong><br>These various efforts have left BuzzFeed on a strong footing to continue leaning into its data-driven culture. However, to continue to succeed into the future, our data-powered approach must be understood, valued, and supported throughout the organization — teams need to use our infrastructure effectively, properly instrument their products with tracking, and help BFDM evolve.</p><p>To help achieve this, the Data Group built out Data Governance processes, resources, and organizational structures:</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*xHPV0lHfq5mT2w81\" /></figure><ul><li>Comprised of a set of “Data Stewards” representing each engineering team at BuzzFeed, a “Data Governance Council” disseminates established best practices in a scalable manner, opens up channels of communication to evolve these best practices in a way that properly represents each team’s practical needs, and facilitates knowledge sharing and collaboration across the engineering organization on data initiatives.</li><li>A data review process to be completed at the start of any new user-facing initiative helps ensure that the data needs of the project are considered as a first-rate product requirement.</li><li>A data resource center highlights best practices and centralizes documentation for use across the organization.</li></ul><p>This work has been a collective effort across BuzzFeed Tech and enables us to explore many new and exciting data-driven initiatives! If you’d like to join us, BuzzFeed Tech is hiring! To browse openings, check out buzzfeed.com/jobs.</p><p>You can also follow us on Twitter @<a href=\"http://twitter.com/buzzfeedexp\">buzzfeedexp</a> !</p><img src=\"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=3c585b8bc84d\" width=\"1\" height=\"1\" alt=\"\"><hr><p><a href=\"https://tech.buzzfeed.com/more-data-more-problems-3c585b8bc84d\">More Data More Problems</a> was originally published in <a href=\"https://tech.buzzfeed.com\">BuzzFeed Tech</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>","descriptionType":"html","publishedDate":"Tue, 22 Dec 2020 15:39:53 +0000","feedId":46849,"bgimg":"https://cdn-images-1.medium.com/max/828/1*qv4PsaY0YFW-yPVu3FT8jA.gif","linkMd5":"d24c301b102e3f9d89c91f27e539c6cc","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn92@2020_2/2021/04/05/09-30-27-614_6a5794908c672093.webp","destWidth":828,"destHeight":582,"sourceBytes":18659505,"destBytes":312492,"author":"Matt Semanyshyn","articleImgCdnMap":{"https://cdn-images-1.medium.com/max/828/1*qv4PsaY0YFW-yPVu3FT8jA.gif":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn92@2020_2/2021/04/05/09-30-27-614_6a5794908c672093.webp","https://cdn-images-1.medium.com/max/1024/0*EC6HYOYap3YNR6A4":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn5@2020_1/2021/04/05/09-30-28-617_f487a6e7838b612d.webp","https://cdn-images-1.medium.com/max/1024/0*rTD4nQfLxwF8zPq5":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn13@2020_2/2021/04/05/09-30-28-480_b630c6fa5c383488.webp","https://cdn-images-1.medium.com/max/1024/0*xHPV0lHfq5mT2w81":null,"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=3c585b8bc84d":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn2@2020_2/2021/04/05/09-30-28-589_cf0db1d6bd7df3b0.webp"},"publishedOrCreatedDate":1617615004340}],"record":{"createdTime":"2021-04-05 17:30:04","updatedTime":"2021-04-05 17:30:04","feedId":46849,"fetchDate":"Mon, 05 Apr 2021 09:30:04 +0000","fetchMs":199,"handleMs":43,"totalMs":25075,"newArticles":0,"totalArticles":10,"status":1,"type":0,"ip":"997bb71153730f0a70dbe3aeb57b2ca7","hostName":"us-52*","requestId":"5ecc7f14109a4d3a94eb7caca623809b_46849","contentType":"text/xml; charset=UTF-8","totalBytes":456836,"bgimgsTotal":1,"bgimgsGithubTotal":1,"articlesImgsTotal":5,"articlesImgsGithubTotal":4,"successGithubMap":{"myreaderx4":1,"myreaderx10":1,"myreaderx5oss":1,"myreaderx31":1},"failGithubMap":{"myreaderx23":1}},"feed":{"createdTime":"2020-09-07 03:43:16","updatedTime":"2020-09-07 06:01:29","id":46849,"name":"BuzzFeed Tech - Medium","url":"https://tech.buzzfeed.com/feed","subscriber":68,"website":null,"icon":"https://cdn-images-1.medium.com/proxy/1*TGH72Nnw24QL3iV9IOm4VA.png","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx64/cdn3@2020_6/2020/09/06/22-01-26-022_7b1d3de1dd751a79.png","description":"Sharing our experiences &#38; discoveries for the betterment of all! - Medium","weekly":null,"link":null},"noPictureArticleList":[{"createdTime":"2021-04-05 17:30:29","updatedTime":"2021-04-05 17:30:29","id":null,"feedId":46849,"linkMd5":"d24c301b102e3f9d89c91f27e539c6cc"}],"tmpCommonImgCdnBytes":312492,"tmpBodyImgCdnBytes":144344,"tmpBgImgCdnBytes":0,"extra4":{"start":1617615004092,"total":0,"statList":[{"spend":206,"msg":"获取xml内容"},{"spend":43,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":1032,"msg":"正文链接上传到cdn"}]},"extra5":5,"extra6":5,"extra7ImgCdnFailResultVector":[{"code":1,"isDone":false,"source":"https://cdn-images-1.medium.com/max/1024/0*xHPV0lHfq5mT2w81","sourceStatusCode":200,"destWidth":1024,"destHeight":467,"sourceBytes":59088,"destBytes":42432,"targetWebpQuality":75,"feedId":46849,"totalSpendMs":165,"convertSpendMs":27,"createdTime":"2021-04-05 17:30:28","host":"us-033*","referer":"https://medium.com/p/3c585b8bc84d","linkMd5ListStr":"d24c301b102e3f9d89c91f27e539c6cc","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn10/contents/2021/04/05/09-30-28-313_ad5f31efc523c77c.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Mon, 05 Apr 2021 09:30:28 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["E08E:1230:2DBE396:4AEEB21:606AD8B4"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1617617223"],"x-ratelimit-used":["61"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn10/contents/2021/04/05/09-30-28-313_ad5f31efc523c77c.webp","historyStatusCode":[],"spendMs":25},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"41.4 KB","compressRate":"71.8%","sourceSize":"57.7 KB"},{"code":1,"isDone":false,"source":"https://cdn-images-1.medium.com/max/1024/0*xHPV0lHfq5mT2w81","sourceStatusCode":200,"destWidth":1024,"destHeight":467,"sourceBytes":59088,"destBytes":42432,"targetWebpQuality":75,"feedId":46849,"totalSpendMs":132,"convertSpendMs":33,"createdTime":"2021-04-05 17:30:28","host":"us-033*","referer":"https://medium.com/p/3c585b8bc84d","linkMd5ListStr":"d24c301b102e3f9d89c91f27e539c6cc","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn10/contents/2021/04/05/09-30-28-456_ad5f31efc523c77c.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Mon, 05 Apr 2021 09:30:28 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["E08E:1230:2DBE3AF:4AEEB4A:606AD8B4"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1617617223"],"x-ratelimit-used":["61"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn10/contents/2021/04/05/09-30-28-456_ad5f31efc523c77c.webp","historyStatusCode":[],"spendMs":35},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"41.4 KB","compressRate":"71.8%","sourceSize":"57.7 KB"}],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://europe-56.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe68.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-021.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-033.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://cdn-images-1.medium.com/max/828/1*qv4PsaY0YFW-yPVu3FT8jA.gif","sourceStatusCode":200,"destWidth":828,"destHeight":582,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn92@2020_2/2021/04/05/09-30-27-614_6a5794908c672093.webp","sourceBytes":18659505,"destBytes":312492,"targetWebpQuality":4,"feedId":46849,"totalSpendMs":23765,"convertSpendMs":21373,"createdTime":"2021-04-05 17:30:04","host":"us-016*","referer":"https://medium.com/p/3c585b8bc84d","linkMd5ListStr":"d24c301b102e3f9d89c91f27e539c6cc,d24c301b102e3f9d89c91f27e539c6cc","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"305.2 KB","compressRate":"1.7%","sourceSize":"17.8 MB"},{"code":1,"isDone":false,"source":"https://cdn-images-1.medium.com/max/1024/0*rTD4nQfLxwF8zPq5","sourceStatusCode":200,"destWidth":1024,"destHeight":622,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn13@2020_2/2021/04/05/09-30-28-480_b630c6fa5c383488.webp","sourceBytes":287285,"destBytes":47400,"targetWebpQuality":75,"feedId":46849,"totalSpendMs":581,"convertSpendMs":63,"createdTime":"2021-04-05 17:30:28","host":"us-021*","referer":"https://medium.com/p/3c585b8bc84d","linkMd5ListStr":"d24c301b102e3f9d89c91f27e539c6cc","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"46.3 KB","compressRate":"16.5%","sourceSize":"280.6 KB"},{"code":1,"isDone":false,"source":"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=3c585b8bc84d","sourceStatusCode":200,"destWidth":1,"destHeight":1,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn2@2020_2/2021/04/05/09-30-28-589_cf0db1d6bd7df3b0.webp","sourceBytes":43,"destBytes":72,"targetWebpQuality":75,"feedId":46849,"totalSpendMs":691,"convertSpendMs":3,"createdTime":"2021-04-05 17:30:28","host":"europe68*","referer":"https://medium.com/p/3c585b8bc84d","linkMd5ListStr":"d24c301b102e3f9d89c91f27e539c6cc","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"72 B","compressRate":"167.4%","sourceSize":"43 B"},{"code":1,"isDone":false,"source":"https://cdn-images-1.medium.com/max/1024/0*EC6HYOYap3YNR6A4","sourceStatusCode":200,"destWidth":1024,"destHeight":694,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn5@2020_1/2021/04/05/09-30-28-617_f487a6e7838b612d.webp","sourceBytes":303744,"destBytes":96872,"targetWebpQuality":75,"feedId":46849,"totalSpendMs":863,"convertSpendMs":77,"createdTime":"2021-04-05 17:30:28","host":"europe-56*","referer":"https://medium.com/p/3c585b8bc84d","linkMd5ListStr":"d24c301b102e3f9d89c91f27e539c6cc","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"94.6 KB","compressRate":"31.9%","sourceSize":"296.6 KB"}],"successGithubMap":{"myreaderx4":1,"myreaderx10":1,"myreaderx5oss":1,"myreaderx31":1},"failGithubMap":{"myreaderx23":1}}