{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-08-25 07:12:27","updatedTime":"2020-08-25 07:12:27","title":"JAVA JNDI注入知识详解","link":"http://blog.topsec.com.cn/?p=4560","description":"<h3>一、前言</h3> 在漏洞挖掘或利用的时候经常会遇见JNDI,本文会讲述什么是JNDI、JNDI中RMI的利用、LDAP的利用、JDK 8u191之后的利用方式。 \n<h3>二、JNDI简介</h3> JNDI（The Java Naming and Directory Interface，Java命名和目录接口）是一组在Java应用中访问命名和目录服务的API,命名服务将名称和对象联系起来,使得我们可以用名称访问对象。 这些命名/目录服务提供者: \n<ul> \n <li>RMI (JAVA远程方法调用)</li> \n <li>LDAP (轻量级目录访问协议)</li> \n <li>CORBA (公共对象请求代理体系结构)</li> \n <li>DNS (域名服务)</li> \n</ul> JNDI客户端调用方式 [crayon-5f44495674904616708065/] 这里的jndiName变量的值可以是上面的命名/目录服务列表里面的值,如果JNDI名称可控的话可能会被攻击。 \n<h3>三、JNDI利用方式</h3> \n<h4>RMI的利用</h4> RMI是Java远程方法调用,是Java编程语言里,一种用于实现远程过程调用的应用程序编程接口。它使客户机上运行的程序可以调用远程服务器上的对象。 攻击者代码 [crayon-5f4449567490a741385366/] 用web服务器来加载字节码,保存下面的这个java文件,用javac编译成.class字节码文件,在上传到web服务器上面。 [crayon-5f4449567490d627657560/] 被攻击者代码 [crayon-5f44495674911917722859/] 我这里使用jdk\n<code>1.8.0_102</code>版本运行之后,/tmp/目录下四个文件都会被创建,DEBUG看下原因。 \n<code>javax.naming.InitialContext#getURLOrDefaultInitCtx</code> \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020051905052078_6.png\"><img class=\"alignnone size-full wp-image-4561\" alt=\"6\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020051905052078_6.png\" width=\"1676\" height=\"516\" /></a> 343行getURLScheme方法解析协议名称,在345行NamingManager.getURLContext方法返回解析对应协议的对象 \n<code>com.sun.jndi.toolkit.url.GenericURLContext#lookup</code> \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020051905054613_7.png\"><img class=\"alignnone size-full wp-image-4562\" alt=\"7\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020051905054613_7.png\" width=\"1390\" height=\"478\" /></a> \n<code>com.sun.jndi.rmi.registry.RegistryContext#lookup</code> \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020051905060693_8.png\"><img class=\"alignnone size-full wp-image-4563\" alt=\"8\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020051905060693_8.png\" width=\"1572\" height=\"532\" /></a> 这里会去RMI注册中心寻找hello对象,接着看下当前类的\n<code>decodeObject</code>方法 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020051905062613_9.png\"><img class=\"alignnone size-full wp-image-4564\" alt=\"9\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020051905062613_9.png\" width=\"1680\" height=\"554\" /></a> 因为\n<code>ReferenceWrapper</code>对象实现了\n<code>RemoteReference</code>接口,所以会调用\n<code>getReference</code>方法会获取\n<code>Reference</code>对象 \n<code>javax.naming.spi.NamingManager#getObjectFactoryFromReference</code> \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020051905064796_2.png\"><img class=\"alignnone size-full wp-image-4565\" alt=\"2\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020051905064796_2.png\" width=\"1238\" height=\"1010\" /></a> 146行尝试从本地CLASSPATH获取该class,158行根据factoryName和codebase加载远程的class,跟进看下158行loadClass方法的实现 \n<code>com.sun.naming.internal.VersionHelper12#loadClass</code> [crayon-5f44495674914856113247/] [crayon-5f44495674917735789409/] 这里是通过URLClassLoader去加载远程类,此时观察web服务器日志会发现一条请求记录 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/202005190507122_5.png\"><img class=\"alignnone size-full wp-image-4566\" alt=\"5\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/202005190507122_5.png\" width=\"1534\" height=\"94\" /></a> 因为static在类加载的时候就会执行,所以这里会执行\n<code>touch /tmp/Calc1</code>命令,ls查看下. \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020051905072921_10.png\"><img class=\"alignnone size-full wp-image-4567\" alt=\"10\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020051905072921_10.png\" width=\"830\" height=\"68\" /></a> \n<code>javax.naming.spi.NamingManager#getObjectFactoryFromReference</code>163行执行\n<code>clas.newInstance()</code>的时候,代码块和无参构造方法都会执行,此时\n<code>Calc2</code>和\n<code>Calc3</code>文件都会创建成功,ls看下 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020051905074644_11.png\"><img class=\"alignnone size-full wp-image-4568\" alt=\"11\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020051905074644_11.png\" width=\"790\" height=\"120\" /></a> \n<code>javax.naming.spi.NamingManager#getObjectInstance</code> \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020051905080380_12.png\"><img class=\"alignnone size-full wp-image-4569\" alt=\"12\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020051905080380_12.png\" width=\"1514\" height=\"1326\" /></a> 321行会调用\n<code>getObjectInstance</code>方法,此时\n<code>Calc4</code>文件会被创建,ls看下 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/202005190508232_13.png\"><img class=\"alignnone size-full wp-image-4570\" alt=\"13\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/202005190508232_13.png\" width=\"788\" height=\"148\" /></a> 列下调用栈 [crayon-5f4449567491a222638710/] 这里总结下,加载远程类的时候static静态代码块,代码块,无参构造函数和getObjectInstance方法都会被调用. 我把jdk换成\n<code>1.8.0_181</code>版本看下 直接运行会提示这样的一个错误 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020051905084270_14.png\"><img class=\"alignnone size-full wp-image-4571\" alt=\"14\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020051905084270_14.png\" width=\"2272\" height=\"314\" /></a> 看下\n<code>com.sun.jndi.rmi.registry.RegistryContext.decodeObject</code>代码 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020051905090413_15.png\"><img class=\"alignnone size-full wp-image-4572\" alt=\"15\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020051905090413_15.png\" width=\"2446\" height=\"914\" /></a> 354行var8是Reference对象,getFactoryClassLocation()方法是获取classFactoryLocation地址,这两个都不等于null,后面的trustURLCodebase取反,看下trustURLCodebase变量值 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020051905092364_16.png\"><img class=\"alignnone size-full wp-image-4573\" alt=\"16\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020051905092364_16.png\" width=\"1670\" height=\"316\" /></a> 在当前类静态代码块定义了trustURLCodebase的值为false,那么这一个条件也成立,所以会抛出错误。 在jdk\n<code>8u121</code> \n<code>7u131</code> \n<code>6u141</code>版本开始默认com.sun.jndi.rmi.object.trustURLCodebase设置为false,rmi加载远程的字节码不会执行成功。 \n<h4>LDAP的利用</h4> LDAP是基于X.500标准的轻量级目录访问协议,目录是一个为查询、浏览和搜索而优化的数据库，它成树状结构组织数据，类似文件目录一样。 攻击者代码 先下载\n<code>https://mvnrepository.com/artifact/com.unboundid/unboundid-ldapsdk/3.1.1</code> LDAP SDK依赖,然后启动LDAP服务 [crayon-5f4449567491d147802909/] 这里还是用上面RMI那里的web服务器来加载字节码 被攻击者代码 [crayon-5f44495674921241444537/] 这里使用jdk\n<code>1.8.0_181</code>版本运行之后,/tmp/目录下四个文件都会被创建,调用的过程和JNDI RMI那块一样的,先解析协议,获取ldap协议的对象,寻找Reference中的factoryName对象,先尝试本地加载这个类,本地没有这个类用URLClassLoader远程进行加载... 列下调用栈 [crayon-5f44495674924219918351/] 把JDK换成\n<code>1.8.0_241</code>版本运行看下,会发现/tmp/目录下的文件并没有创建成功,DEBUG看下. \n<code>com.sun.naming.internal.VersionHelper12#loadClass</code> \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020051905095462_17.png\"><img class=\"alignnone size-full wp-image-4574\" alt=\"17\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020051905095462_17.png\" width=\"1246\" height=\"434\" /></a> 101行判断了\n<code>trustURLCodebase</code>等于true才可以加载远程对象,而\n<code>trustURLCodebase</code>的默认值是false \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020051905101228_18.png\"><img class=\"alignnone size-full wp-image-4575\" alt=\"18\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020051905101228_18.png\" width=\"1356\" height=\"548\" /></a> 在jdk\n<code>11.0.1</code>、\n<code>8u191</code>、\n<code>7u201</code>、\n<code>6u211</code>版本开始默认com.sun.jndi.ldap.object.trustURLCodebase设置为false,ldap加载远程的字节码不会执行成功。 \n<h4>8u191之后</h4> \n<h5>使用本地的Reference Factory类</h5> 在\n<code>jdk8u191</code>之后RMI和LDAP默认都不能从远程加载类,还是可以在RMI和LDAP中获取对象。在前面我们分析过\n<code>javax.naming.spi.NamingManager#getObjectFactoryFromReference</code>方法,会先从本地的CLASSPATH中寻找该类,如果没有才会去远程加载。之后会执行静态代码块、代码块、无参构造函数和getObjectInstance方法。那么只需要在攻击者本地CLASSPATH找到这个Reference Factory类并且在这四个地方其中一块能执行payload就可以了。Michael Stepankin师傅在tomcat中找到\n<code>org.apache.naming.factory.BeanFactory#getObjectInstance</code>来进行利用。 tomcat jar下载地址\n<code>https://mvnrepository.com/artifact/org.apache.tomcat.embed/tomcat-embed-core/8.5.11</code> 先看下poc [crayon-5f44495674927673172285/] DEBUG看下漏洞原因 \n<code>org.apache.naming.factory.BeanFactory#getObjectInstance</code> [crayon-5f4449567492a345179824/] 我在这个类上面加了一些注释,ELProcessor.eval()会对EL表达式进行处理,最后会执行。 [crayon-5f4449567492f364348852/] \n<h5>使用序列化数据,触发本地Gadget</h5> \n<code>com.sun.jndi.ldap.Obj#decodeObject</code> \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/202005190510414_19.png\"><img class=\"alignnone size-full wp-image-4576\" alt=\"19\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/202005190510414_19.png\" width=\"2506\" height=\"718\" /></a> 这里可以看到在LDAP中数据可以是序列化对象也可以是Reference对象。如果是序列化对象会调用deserializeObject方法 \n<code>com.sun.jndi.ldap.Obj#deserializeObject</code> \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020051905110598_20.png\"><img class=\"alignnone size-full wp-image-4577\" alt=\"20\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020051905110598_20.png\" width=\"1752\" height=\"1178\" /></a> 该方法就是把byte用ObjectInputStream对数据进行反序列化还原。那么传输序列化对象的payload,客户端在这里就会进行触发. 改造下LDAP SERVER即可 [crayon-5f44495674932219465716/] 调用链 [crayon-5f44495674935116180388/] &nbsp; \n<h3>四、总结</h3> JNDI注入漏洞很常见,在\n<code>fastjson</code>/\n<code>jackson</code>中会调用getter/setter方法,如果在getter/setter方法中存在lookup方法并且参数可控就可以利用,可以看下\n<code>jackson</code>的黑名单\n<code>https://github.com/FasterXML/jackson-databind/blob/master/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/SubTypeValidator.java</code>来学习哪些类可以拿来JNDI注入。在\n<code>weblogic t3</code>协议中基于序列化数据传输,那么会自动调用readObject方法,\n<code>weblogic</code>使用了\n<code>Spring</code>框架\n<code>JtaTransactionManager</code>类,这个类的readObject方法也存在JNDI注入调用链。 &nbsp; \n<h3>参考链接</h3> \n<a href=\"https://www.veracode.com/blog/research/exploiting-jndi-injections-java\">https://www.veracode.com/blog/research/exploiting-jndi-injections-java</a> \n<a href=\"https://kingx.me/Restrictions-and-Bypass-of-JNDI-Manipulations-RCE.html\">https://kingx.me/Restrictions-and-Bypass-of-JNDI-Manipulations-RCE.html</a> \n<a href=\"https://www.anquanke.com/post/id/201181\">https://www.anquanke.com/post/id/201181</a> \n<a href=\"https://xz.aliyun.com/t/7264\">https://xz.aliyun.com/t/7264</a> \n<a href=\"https://xz.aliyun.com/t/6633\">https://xz.aliyun.com/t/6633</a> \n<a href=\"https://mp.weixin.qq.com/s/0LePKo8k7HDIjk9ci8dQtA\">https://mp.weixin.qq.com/s/0LePKo8k7HDIjk9ci8dQtA</a> &nbsp; &nbsp; &nbsp;","descriptionType":"text/html","publishedDate":"Tue, 19 May 2020 05:13:21 +0000","feedId":6823,"bgimg":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020051905052078_6.png","linkMd5":"0fb27ee4653525d5e82371e8bcbd7f07","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn93@2020_2/2020/08/24/23-12-32-433_f2c62420edda7859.webp","destWidth":1676,"destHeight":516,"sourceBytes":142432,"destBytes":47216,"author":"天融信安全应急响应中心","articleImgCdnMap":{"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020051905052078_6.png":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn93@2020_2/2020/08/24/23-12-32-433_f2c62420edda7859.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020051905054613_7.png":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn61@2020_5/2020/08/24/23-12-36-471_6402be99a04fcc09.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020051905060693_8.png":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn35@2020_1/2020/08/24/23-12-42-059_0e052d3a7b197199.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020051905062613_9.png":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn80@2020_4/2020/08/24/23-12-41-641_7ba20c4cabdadc73.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020051905064796_2.png":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn30@2020_6/2020/08/24/23-12-36-969_5711d89d9d40f2c0.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/202005190507122_5.png":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn47@2020_1/2020/08/24/23-12-42-642_c8981ee1fd9dc648.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020051905072921_10.png":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn54@2020_2/2020/08/24/23-12-39-188_73944246714187ce.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020051905074644_11.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn100@2020_6/2020/08/24/23-12-40-096_36cbc8db91c4559c.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020051905080380_12.png":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn31@2020_2/2020/08/24/23-12-41-624_2e0a72f9e345b040.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/202005190508232_13.png":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn28@2020_1/2020/08/24/23-12-42-541_426f246bbf9b544a.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020051905084270_14.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn98@2020_3/2020/08/24/23-12-37-940_f451634051fa82d4.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020051905090413_15.png":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn65@2020_4/2020/08/24/23-12-37-177_ecf5cd586b73bfdd.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020051905092364_16.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn86@2020_5/2020/08/24/23-12-38-653_a00c48285b95b4b0.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020051905095462_17.png":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn91@2020_6/2020/08/24/23-12-41-133_cdb82735660938ac.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020051905101228_18.png":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn29@2020_3/2020/08/24/23-12-39-721_a772610c518cfe1a.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/202005190510414_19.png":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn27@2020_3/2020/08/24/23-12-42-437_9c6e9d52fafe60c9.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020051905110598_20.png":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn21@2020_2/2020/08/24/23-12-36-824_b203bd2def54cf70.webp"},"publishedOrCreatedDate":1598310747187},{"createdTime":"2020-08-25 07:12:27","updatedTime":"2020-08-25 07:12:27","title":"Struts2 S2-059 漏洞分析","link":"http://blog.topsec.com.cn/?p=4750","description":"<h3>一、前言</h3> 2020年8月13日,Apache官方发布了一则公告,该公告称Apache Struts2使用某些标签时,会对标签属性值进行二次表达式解析,当标签属性值使用了\n<code>%{skillName}</code>并且\n<code>skillName</code>的值用户可以控制,就会造成\n<code>OGNL</code>表达式执行。 \n<h3>二、漏洞复现</h3> 我这里选用的测试环境 \n<code>Tomcat 7.0.72</code>、\n<code>Java 1.8.0_181</code>、\n<code>Struts 2.2.1</code>,受影响的标签直接使用官网公告给出的例子 [crayon-5f444955a960b546895961/] 测试漏洞URL \n<code>http://localhost:8088/S2-059.action?payload=%25{3*3}</code> 在\n<code>s2-029</code>中由于调用了\n<code>completeExpressionIfAltSyntax</code>方法会自动加上\n<code>\"%{\" + expr + \"}\"</code>,所以\n<code>payload</code>不用带\n<code>%{}</code>,在\n<code>s2-029</code>的\n<code>payload</code>里加上\n<code>%{}</code>就是\n<code>s2-059</code>的\n<code>payload</code>,具体原因看下面的分析。 \n<h3>三、漏洞分析</h3> 根据官网公告的漏洞描述及上面的测试过程可以知道,这次漏洞是由于标签属性值进行二次表达式解析产生的。\n<code>struts2 jsp</code> 标签解析是\n<code>org.apache.struts2.views.jsp.ComponentTagSupport</code>类的\n<code>doStartTag</code>和\n<code>doEndTag</code>方法。\n<code>debug</code>跟下 \n<code>doStartTag</code>方法。 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081913015412_image-20200818174847155.png\"><img class=\"alignnone size-full wp-image-4751\" alt=\"image-20200818174847155\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081913015412_image-20200818174847155.png\" width=\"1646\" height=\"1254\" /></a> &nbsp; 跟下\n<code>populateParams</code>方法 \n<code>org/apache/struts2/views/jsp/ui/AnchorTag.class</code> \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081913023859_image-20200818174944494.png\"><img class=\"alignnone size-full wp-image-4752\" alt=\"image-20200818174944494\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081913023859_image-20200818174944494.png\" width=\"1484\" height=\"1232\" /></a> 这里又去调用了父类的\n<code>populateParams</code>方法,接着调用\n<code>org/apache/struts2/views/jsp/ui/AbstractUITag.class</code>类的\n<code>populateParams</code>方法 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081913030577_image-20200818175116276.png\"><img class=\"alignnone size-full wp-image-4753\" alt=\"image-20200818175116276\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081913030577_image-20200818175116276.png\" width=\"1350\" height=\"1428\" /></a> 可以看到这里有给setId赋值,跟下setId方法,\n<code>org/apache/struts2/components/UIBean.class</code> \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081913033035_image-20200818175756449.png\"><img class=\"alignnone size-full wp-image-4754\" alt=\"image-20200818175756449\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081913033035_image-20200818175756449.png\" width=\"1512\" height=\"328\" /></a> 由于id不为null,会执行\n<code>this.findString</code>方法,接着跟下.\n<code>org/apache/struts2/components/Component.class</code> \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081913035198_image-20200818175715249.png\"><img class=\"alignnone size-full wp-image-4755\" alt=\"image-20200818175715249\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081913035198_image-20200818175715249.png\" width=\"1344\" height=\"460\" /></a> \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081913040993_image-20200818175756449.png\"><img class=\"alignnone size-full wp-image-4756\" alt=\"image-20200818175756449\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081913040993_image-20200818175756449.png\" width=\"1512\" height=\"328\" /></a> \n<code>altSyntax</code>默认开启, 所以\n<code>this.altSyntax()</code>会返回\n<code>true</code>,\n<code>toType</code>的值传过来是\n<code>String.class</code>,\n<code>if</code>条件成立会执行到\n<code>TextParseUtil.translateVariables('%', expr, this.stack)</code> \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081913043231_image-20200818182330520.png\"><img class=\"alignnone size-full wp-image-4757\" alt=\"image-20200818182330520\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081913043231_image-20200818182330520.png\" width=\"1678\" height=\"688\" /></a> 可以看到这里是首先截取去掉\n<code>%{}</code>字符,然后从\n<code>stack</code>中寻找\n<code>payload</code>参数,传输的\n<code>payload</code>参数是\n<code>%{3*2}</code>,这里会得到这个值。 执行完\n<code>populateParams</code>方法可以得知这个方法是对属性进行初始化赋值操作。接着跟下\n<code>start</code>方法 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081913045760_image-20200818182850654.png\"><img class=\"alignnone size-full wp-image-4758\" alt=\"image-20200818182850654\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081913045760_image-20200818182850654.png\" width=\"1788\" height=\"984\" /></a> \n<code>org/apache/struts2/components/Anchor.class</code>的\n<code>start</code>方法调用了父类\n<code>org/apache/struts2/components/ClosingUIBean.class</code>的\n<code>start</code>方法 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081913052284_image-20200818190923090.png\"><img class=\"alignnone size-full wp-image-4759\" alt=\"image-20200818190923090\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081913052284_image-20200818190923090.png\" width=\"1758\" height=\"452\" /></a> 在接着跟下\n<code>org/apache/struts2/components/UIBean.class$evaluateParams</code>方法 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081913054244_image-20200818191144959.png\"><img class=\"alignnone size-full wp-image-4760\" alt=\"image-20200818191144959\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081913054244_image-20200818191144959.png\" width=\"1642\" height=\"1020\" /></a> 接着调用了\n<code>populateComponentHtmlId</code>方法 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081913060661_image-20200818191311239.png\"><img class=\"alignnone size-full wp-image-4761\" alt=\"image-20200818191311239\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081913060661_image-20200818191311239.png\" width=\"1460\" height=\"478\" /></a> 在看下\n<code>findStringIfAltSyntax</code>方法的实现 \n<code>org/apache/struts2/components/Component.class$findStringIfAltSyntax</code> \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081913062963_image-20200818191825377.png\"><img class=\"alignnone size-full wp-image-4762\" alt=\"image-20200818191825377\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081913062963_image-20200818191825377.png\" width=\"1532\" height=\"1238\" /></a> 可以看到这里又执行了一次\n<code>TextParseUtil.translateVariables</code>方法. \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081913065529_image-20200818192259407.png\"><img class=\"alignnone size-full wp-image-4763\" alt=\"image-20200818192259407\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081913065529_image-20200818192259407.png\" width=\"1838\" height=\"234\" /></a> 整个过程跟\n<code>S2-029</code>和\n<code>S2-036</code>漏洞产生的原因一样,都是由标签属性二次表达式解析造成漏洞。分析完漏洞产生原因后,我查看了\n<code>UIBean class</code>相关代码,并没有发现除\n<code>id</code>外其它标签属性值可以这样利用。 \n<h3>四、总结</h3> 此次漏洞需要开启\n<code>altSyntax</code>功能,只能是在标签\n<code>id</code>属性中存在表达式,并且参数还可以控制,这种场景在实际开发中非常少见,危害较小。 \n<h3>五、参考链接</h3> \n<a href=\"https://cwiki.apache.org/confluence/display/WW/S2-059\">https://cwiki.apache.org/confluence/display/WW/S2-059</a> \n<a href=\"http://blog.topsec.com.cn/struts2%e6%bc%8f%e6%b4%9es2-029%e5%88%86%e6%9e%90/\">http://blog.topsec.com.cn/struts2%e6%bc%8f%e6%b4%9es2-029%e5%88%86%e6%9e%90/</a> &nbsp; &nbsp;","descriptionType":"text/html","publishedDate":"Wed, 19 Aug 2020 13:08:09 +0000","feedId":6823,"bgimg":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081913015412_image-20200818174847155.png","linkMd5":"697e4db0fc47aec79bcda8a0648cab3f","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn13@2020_4/2020/08/24/23-12-33-420_353098d6d81f3ed3.webp","destWidth":1646,"destHeight":1254,"sourceBytes":340596,"destBytes":123832,"author":"天融信安全应急响应中心","articleImgCdnMap":{"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081913015412_image-20200818174847155.png":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn13@2020_4/2020/08/24/23-12-33-420_353098d6d81f3ed3.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081913023859_image-20200818174944494.png":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn71@2020_3/2020/08/24/23-12-42-618_e794890a3614f271.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081913030577_image-20200818175116276.png":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn69@2020_1/2020/08/24/23-12-37-731_8b58fed802e10df8.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081913033035_image-20200818175756449.png":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn4@2020_3/2020/08/24/23-12-42-561_0ba6fffe08cc3cef.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081913035198_image-20200818175715249.png":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn75@2020_5/2020/08/24/23-12-40-917_f0eb24800a908990.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081913040993_image-20200818175756449.png":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn37@2020_4/2020/08/24/23-12-38-367_d1d28eec1670711d.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081913043231_image-20200818182330520.png":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn83@2020_5/2020/08/24/23-12-43-410_d16641033ff36089.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081913045760_image-20200818182850654.png":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn47@2020_2/2020/08/24/23-12-44-700_d4e7a8e5687110d2.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081913052284_image-20200818190923090.png":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn46@2020_1/2020/08/24/23-12-36-916_a4ed381db4b0ebf5.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081913054244_image-20200818191144959.png":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn9@2020_5/2020/08/24/23-12-40-092_6ec9ddd0b06a2ea0.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081913060661_image-20200818191311239.png":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn43@2020_6/2020/08/24/23-12-43-006_6edd268572fdaabe.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081913062963_image-20200818191825377.png":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn49@2020_6/2020/08/24/23-12-36-740_ccaebd5af8f032a0.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081913065529_image-20200818192259407.png":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn80@2020_6/2020/08/24/23-12-40-914_77bd4d5b8093d60d.webp"},"publishedOrCreatedDate":1598310747186},{"createdTime":"2020-08-25 07:12:27","updatedTime":"2020-08-25 07:12:27","title":"Java 8u20反序列化漏洞分析","link":"http://blog.topsec.com.cn/?p=4598","description":"<h2>一、前言</h2> 在\n<code>JDK7u21</code>中反序列化漏洞修补方式是在\n<code>AnnotationInvocationHandler</code>类对type属性做了校验,原来的payload就会执行失败,在8u20中使用\n<code>BeanContextSupport</code>类对这个修补方式进行了绕过。 \n<h2>二、Java序列化过程及数据分析</h2> 在8u20的POC中需要直接操作序列化文件结构,需要对Java序列化数据写入过程、数据结构和数据格式有所了解。 先看一段代码 [crayon-5f44495670480930551580/] [crayon-5f44495670487438209151/] 运行A类main方法会生成a.ser文件,以16进制的方式打开看下a.ser文件内容 [crayon-5f4449567048a556974947/] &nbsp; 跟下ObjectOutputStream类,来一步步分析下这些代码的含义 java.io.ObjectOutputStream#writeStreamHeader 写入头信息 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020060409411672_image-20200602134009099.png\"><img class=\"alignnone size-full wp-image-4599\" alt=\"image-20200602134009099\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020060409411672_image-20200602134009099.png\" width=\"1310\" height=\"444\" /></a> java.io.ObjectStreamConstants 看下具体值 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020060409414223_image-20200602134135011.png\"><img class=\"alignnone size-full wp-image-4600\" alt=\"image-20200602134135011\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020060409414223_image-20200602134135011.png\" width=\"1000\" height=\"438\" /></a> \n<code>STREAM_MAGIC</code> 16进制的aced固定值,是这个流的魔数写入在文件的开始位置,可以理解成标识符,程序根据这几个字节的内容就可以确定该文件的类型。 \n<code>STREAM_VERSION</code> 这个是流的版本号,当前版本号是5。 在看下\n<code>out.writeObject(object)</code>是怎么写入数据的,会先解析class结构,然后判断是否实现了Serializable接口,然后执行\n<code>java.io.ObjectOutputStream#writeOrdinaryObject</code>方法 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020060409420862_image-20200602140603087.png\"><img class=\"alignnone size-full wp-image-4601\" alt=\"image-20200602140603087\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020060409420862_image-20200602140603087.png\" width=\"1752\" height=\"990\" /></a> 1426行写入\n<code>TC_OBJECT,</code>常量\n<code>TC_OBJECT</code>的值是\n<code>(byte)0x73</code>,1427行调用\n<code>writeClassDesc</code>方法,然后会调用到\n<code>java.io.ObjectOutputStream#writeNonProxyDesc</code>方法 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/202006040942471_image-20200602141317264.png\"><img class=\"alignnone size-full wp-image-4602\" alt=\"image-20200602141317264\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/202006040942471_image-20200602141317264.png\" width=\"1768\" height=\"978\" /></a>&nbsp;\n<code>TC_CLASSDESC</code>的值是(byte)0x72,在调用\n<code>java.io.ObjectStreamClass#writeNonProxy</code>方法。 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020060409432930_image-20200602141617673.png\"><img class=\"alignnone size-full wp-image-4603\" alt=\"image-20200602141617673\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020060409432930_image-20200602141617673.png\" width=\"1540\" height=\"1174\" /></a> 721行先写入对象的类名,然后写入\n<code>serialVersionUID</code>的值,看下\n<code>java.io.ObjectStreamClass#getSerialVersionUID</code>方法 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020060409435612_image-20200602142011776.png\"><img class=\"alignnone size-full wp-image-4604\" alt=\"image-20200602142011776\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020060409435612_image-20200602142011776.png\" width=\"1284\" height=\"400\" /></a> 默认使用对象的\n<code>serialVersionUID</code>值,如果对象\n<code>serialVersionUID</code>的值为空则会计算出一个\n<code>serialVersionUID</code>的值。 接着调用\n<code>out.writeByte(flags)</code>写入\n<code>classDescFlags</code>,可以看见上面判断了如果是实现了\n<code>serializable</code>则取常量\n<code>SC_SERIALIZABLE</code> 的0x02值。然后调用\n<code>out.writeShort(fields.length)</code>写入成员的长度。在调用\n<code>out.writeByte</code>和\n<code>out.writeUTF</code>方法写入属性的类型和名称。 然后调用\n<code>bout.writeByte(TC_ENDBLOCKDATA)</code>方法表示一个Java对象的描述结束。\n<code>TC_ENDBLOCKDATA</code>常量的值是(byte)0x78。在调用\n<code>writeClassDesc(desc.getSuperDesc(), false)</code>写入父类的结构信息。 接着调用\n<code>writeSerialData(obj, desc)</code>写入对象属性的值,调用\n<code>java.io.ObjectOutputStream#writeSerialData</code> \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020060409444459_image-20200602154727162.png\"><img class=\"alignnone size-full wp-image-4605\" alt=\"image-20200602154727162\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020060409444459_image-20200602154727162.png\" width=\"1940\" height=\"588\" /></a> 可以看见\n<code>slots</code>变量的值是父类在前面,这里会先写入的是父类的值。 \n<code>java.io.ObjectOutputStream#defaultWriteFields</code> \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020060409450883_image-20200602154248739.png\"><img class=\"alignnone size-full wp-image-4606\" alt=\"image-20200602154248739\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020060409450883_image-20200602154248739.png\" width=\"1686\" height=\"760\" /></a> 这里可以总结下,在序列化对象时,先序列化该对象类的信息和该类的成员属性,再序列化父类的类信息和成员属性,然后序列化对象数据信息时,先序列化父类的数据信息,再序列化子类的数据信息,两部分数据生成的顺序刚好相反。 分析Java序列化文件,使用\n<code>SerializationDumper</code>工具可以帮助我们理解,这里使用\n<code>SerializationDumper</code>查看这个序列化文件看下 [crayon-5f4449567048f913682986/] &nbsp; \n<h2>三、漏洞分析及POC解读</h2> 8u20是基于7u21的绕过,不熟悉7u21的可以先看\n<a href=\"https://mp.weixin.qq.com/s/qlg3IzyIc79GABSSUyt-OQ\">这篇</a>文章了解下,看下7u21漏洞的修补方式。 \n<code>sun.reflect.annotation.AnnotationInvocationHandler#readObject</code> [crayon-5f44495670494676352550/] &nbsp; 在\n<code>AnnotationType.getInstance</code>方法里对this.type类型有判断,需要是annotation类型,原payload里面是\n<code>Templates</code>类型,所以这里会抛出错误。可以看到在readObject方法里面,是先执行\n<code>var1.defaultReadObject()</code>还原了对象,然后在进行验证,不符合类型则抛出异常。漏洞作者找到\n<code>java.beans.beancontext.BeanContextSupport</code>类对这里进行了绕过。 看下BeanContextSupport类 [crayon-5f44495670497332789140/] &nbsp; [crayon-5f4449567049a100420308/] &nbsp; 可以看到在\n<code>readChildren</code>方法中,在执行\n<code>ois.readObject()</code>时,这里try catch了,但是没有把异常抛出来,程序会接着执行。如果这里可以把\n<code>AnnotationInvocationHandler</code>对象在\n<code>BeanContextSupport</code>类第二次writeObject的时候写入\n<code>AnnotationInvocationHandler</code>对象,这样反序列化时,即使\n<code>AnnotationInvocationHandler</code>对象 this.type的值为\n<code>Templates</code>类型也不会报错。 反序列化还有两点就是: 1.反序列化时类中没有这个成员,依然会对这个成员进行反序列化操作,但是会抛弃掉这个成员。 2.每一个新的对象都会分配一个newHandle的值,newHandle生成规则是从0x7e0000开始递增,如果后面出现相同的类型则会使用\n<code>TC_REFERENCE</code>结构,引用前面handle的值。 下面直接来看pwntester师傅提供的poc吧 [crayon-5f4449567049d026098159/] &nbsp; 这里直接构造序列化的文件结构和数据,可以看到注释分为6个步骤: 1.构造LinkedHashSet的结构信息 2.写入payload中TemplatesImpl对象 3.构造Templates Proxy的结构,这里定义了一个虚假的\n<code>dummy</code>成员,虚假成员也会进行反序列化操作,虽然会抛弃掉这个成员,但是也会生成一个newHandle的值。 4.这里为了\n<code>BeanContextSupport</code>对象反序列化时能走到\n<code>readChildren</code>方法那,需要设置serializable要&gt;0并且父类 \n<code>beanContextChildPeer</code>成员的值为当前对象。\n<code>BeanContextChildSupport</code>对象已经出现过了,这里直接进行\n<code>TC_REFERENCE</code>引用对应的\n<code>Handle</code>。 5.前面分析过在\n<code>readChildren</code>方法中会再次进行\n<code>ois.readObject()</code>,这里把payload里面的\n<code>AnnotationInvocationHandler</code>对象写入即可。这里try catch住了,并没有抛出异常,虽然\n<code>dummy</code>是假属性依然会进行反序列化操作,目的就是完成反序列化操作生成newHandle值,用于后面直接进行引用。 6.这里就是原\n<code>JDK7u21</code>里面的payload,把\n<code>AnnotationInvocationHandler</code>对象引用至前面的handle地址即可。 \n<h2>四、总结</h2> JDK7u21和8u20这两个payload不依赖第三方的jar,只需要满足版本的JRE即可进行攻击,整条链也十分巧妙,在8u20中的几个trick也让我对Java序列化机制有了进一步的认识。 \n<h2>五、参考链接</h2> \n<a href=\"https://github.com/pwntester/JRE8u20_RCE_Gadget\">https://github.com/pwntester/JRE8u20_RCE_Gadget</a> \n<a href=\"https://www.anquanke.com/post/id/87270\">https://www.anquanke.com/post/id/87270</a> \n<a href=\"https://www.freebuf.com/vuls/176672.html\">https://www.freebuf.com/vuls/176672.html</a> \n<a href=\"https://xz.aliyun.com/t/7240#toc-3\">https://xz.aliyun.com/t/7240#toc-3</a> \n<a href=\"https://blog.csdn.net/silentbalanceyh/article/details/8183849\">https://blog.csdn.net/silentbalanceyh/article/details/8183849</a> &nbsp; &nbsp; &nbsp; &nbsp;","descriptionType":"text/html","publishedDate":"Thu, 04 Jun 2020 09:52:43 +0000","feedId":6823,"bgimg":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020060409411672_image-20200602134009099.png","linkMd5":"c7c8cbffef287b621a1ce720f021a330","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn89@2020_3/2020/08/24/23-12-32-336_39460810391b570d.webp","destWidth":1310,"destHeight":444,"sourceBytes":112389,"destBytes":40726,"author":"天融信安全应急响应中心","articleImgCdnMap":{"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020060409411672_image-20200602134009099.png":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn89@2020_3/2020/08/24/23-12-32-336_39460810391b570d.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020060409414223_image-20200602134135011.png":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn96@2020_4/2020/08/24/23-12-41-060_a51fe47074e2f98d.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020060409420862_image-20200602140603087.png":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn73@2020_6/2020/08/24/23-12-36-097_237391091a0e6d0d.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/202006040942471_image-20200602141317264.png":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn24@2020_4/2020/08/24/23-12-44-264_fdcd04590404c1ef.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020060409432930_image-20200602141617673.png":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn54@2020_5/2020/08/24/23-12-36-984_94e327ab76d90998.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020060409435612_image-20200602142011776.png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn29@2020_5/2020/08/24/23-12-38-339_c1cbb8c1bcb24518.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020060409444459_image-20200602154727162.png":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn49@2020_3/2020/08/24/23-12-36-439_d529b2fc10ae2093.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020060409450883_image-20200602154248739.png":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn21@2020_2/2020/08/24/23-12-40-102_0c18b17f1a0f6907.webp"},"publishedOrCreatedDate":1598310747186},{"createdTime":"2020-08-25 07:12:27","updatedTime":"2020-08-25 07:12:27","title":"Fastjson 1.2.24反序列化漏洞深度分析","link":"http://blog.topsec.com.cn/?p=4663","description":"<h1>前言</h1> FastJson是alibaba的一款开源JSON解析库，可用于将Java对象转换为其JSON表示形式，也可以用于将JSON字符串转换为等效的Java对象。近几年来fastjson漏洞层出不穷，本文将会谈谈近几年来fastjson RCE漏洞的源头：17年fastjson爆出的1.2.24反序列化漏洞。以这个漏洞为基础，详细分析fastjson漏洞的一些细节问题。 关于Fastjson 1.2.24反序列化漏洞，自从17年以来已经有很多人分析过了，一些基础内容本文就不再陈述了。此次漏洞简单来说，就是Fastjson通过parseObject/parse将传入的字符串反序列化为Java对象时由于没有进行合理检查而导致的 本文将着重分析一下这个漏洞没有被详细介绍过的细节问题，如下： 1、parseObject(String text) 、parse (String text)、 parseObject(String text, Class\\ clazz)三个方法从代码层面上来看，究竟有何不同？ 2、使用TemplatesImpl攻击调用链路构造poc时，为什么一定需要构造_tfactory以及_name字段？ 3、_outputProperties与其getter方法getOutputProperties()方法名字并不完全一致是如何解决的？ 除此之外，本文在介绍TemplatesImpl攻击调用链路时，以模拟寻找漏洞利用链的思路，从最终的执行点开始向上寻找入口，模拟还原出挖掘这个TemplatesImpl利用链的完整过程。 \n<h1>漏洞分析</h1> 关于parse (String text) 、parseObject(String text)、 parseObject(String text, Class\\ clazz)三个方法，我们进行一个测试 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308492664_2a482f1a4f410547c0ac9a3b7876dffa.png\"><img class=\"alignnone size-full wp-image-4696\" alt=\"2a482f1a4f410547c0ac9a3b7876dffa\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308492664_2a482f1a4f410547c0ac9a3b7876dffa.png\" width=\"644\" height=\"840\" /></a> FastJsonTest类中变量以及其setter/getter关系如下表 | | public String t1 | private int t2 | private Boolean t3 | private Properties t4 | private Properties t5 | | ------ | ---------------- | -------------- | ------------------ | --------------------- | --------------------- | | setter | 有 | 有 | 无 | 无 | 有 | | getter | 有 | 有 | 有 | 有 | 有 | 接下来，我们分别使用下图三种方式分别将JSON字符串反序列化成Java对象 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308484633_a5968e24e6caa97be9562234c80400e8.png\"><img class=\"alignnone size-full wp-image-4683\" alt=\"a5968e24e6caa97be9562234c80400e8\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308484633_a5968e24e6caa97be9562234c80400e8.png\" width=\"1093\" height=\"522\" /></a> 1、Object obj = JSON.parse(jsonstr); 2、Object obj = JSON.parseObject(jsonstr, FastJsonTest.class); 3、Object obj = JSON.parseObject(jsonstr); 首先我们运行一下Object obj = JSON.parse(jsonstr);这种方式 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308490285_d4d30014d4d24a2897bfa65da386fec4.png\"><img class=\"alignnone size-full wp-image-4688\" alt=\"d4d30014d4d24a2897bfa65da386fec4\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308490285_d4d30014d4d24a2897bfa65da386fec4.png\" width=\"1428\" height=\"448\" /></a> 结果： setT1() 、setT2() 、getT4() 、setT5() 被调用 JSON.parse(jsonstr)最终返回FastJsonTest类的对象 接着我们运行下Object obj = JSON.parseObject(jsonstr, FastJsonTest.class); \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308483899_888051938003f40fb97aa91a724e5887.png\"><img class=\"alignnone size-full wp-image-4680\" alt=\"888051938003f40fb97aa91a724e5887\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308483899_888051938003f40fb97aa91a724e5887.png\" width=\"1380\" height=\"511\" /></a> 结果： 与JSON.parse(jsonstr);这种方式一样setT1() 、setT2() 、getT4() 、setT5() 被调用 JSON.parse(jsonstr)最终返回FastJsonTest类的对象 最后我们运行下Object obj = JSON.parseObject(jsonstr); \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/202007230849493_21c2453ce372bcfc605f96bb97a9fdc4.png\"><img class=\"alignnone size-full wp-image-4704\" alt=\"21c2453ce372bcfc605f96bb97a9fdc4\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/202007230849493_21c2453ce372bcfc605f96bb97a9fdc4.png\" width=\"1386\" height=\"571\" /></a> 结果： 这次结果与上两次大不相同，FastJsonTest类中的所有getter与setter都被调用了，并且JSON.parseObject(jsonstr);返回一个JSONObject对象 通过上文运行结果，不难发现有三个问题 1. 使用JSON.parse(jsonstr);与JSON.parseObject(jsonstr, FastJsonTest.class);两种方式执行后的返回结果完全相同，且FastJsonTest类中getter与setter方法调用情况也完全一致，parse(jsonstr)与parseObject(jsonstr, FastJsonTest.class)有何关联呢？ 2. 使用JSON.parse(jsonstr);与JSON.parseObject(jsonstr, FastJsonTest.class);两种方式时，被调用的getter与setter方法分别为setT1()、setT2()、setT5()、getT4()。FastJsonTest类中一共有五个getter方法，分别为getT1()、getT2()、getT3()、getT4()、getT5()，为什么仅仅getT4被调用了呢? 3. JSON.parseObject(jsonstr);为什么返回值为JSONObject类对象，且将FastJsonTest类中的所有getter与setter都被调用了 \n<h2>问题一解答</h2> 经过调试可以发现，无论使用JSON.parse(jsonstr);或是JSON.parseObject(jsonstr, FastJsonTest.class);方式解析json字符串，程序最终都会调用位于com/alibaba/fastjson/util/JavaBeanInfo.java中的JavaBeanInfo.build() 方法来获取并保存目标Java类中的成员变量以及其对应的setter、getter 首先来看下JSON.parse(jsonstr)这种方式，当程序执行到JavaBeanInfo.build() 方法时情景如下图 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308491942_0c9cd8220940fbcb60fc3bb987a34b15.png\"><img class=\"alignnone size-full wp-image-4694\" alt=\"0c9cd8220940fbcb60fc3bb987a34b15\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308491942_0c9cd8220940fbcb60fc3bb987a34b15.png\" width=\"1343\" height=\"493\" /></a> 此时的调用链如下图 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308492344_1f5f848eaa7b8c1af2ea4febf61ba3a9.png\"><img class=\"alignnone size-full wp-image-4695\" alt=\"1f5f848eaa7b8c1af2ea4febf61ba3a9\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308492344_1f5f848eaa7b8c1af2ea4febf61ba3a9.png\" width=\"561\" height=\"194\" /></a> 此时传入JavaBeanInfo.build() 方法的参数值如下图 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308493458_3bd0543cc0dc52a33e44fca9b345c270.png\"><img class=\"alignnone size-full wp-image-4699\" alt=\"3bd0543cc0dc52a33e44fca9b345c270\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308493458_3bd0543cc0dc52a33e44fca9b345c270.png\" width=\"363\" height=\"92\" /></a> 再来看下JSON.parseObject(jsonstr, FastJsonTest.class)这种方式，当程序执行到JavaBeanInfo.build() 方法时情景如下图 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308483212_440177acd687179a1be554c61759897f.png\"><img class=\"alignnone size-full wp-image-4678\" alt=\"440177acd687179a1be554c61759897f\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308483212_440177acd687179a1be554c61759897f.png\" width=\"1357\" height=\"548\" /></a> 此时的调用链如下图 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308490535_d05b4a2272ab1219c192345455013b0c.png\"><img class=\"alignnone size-full wp-image-4689\" alt=\"d05b4a2272ab1219c192345455013b0c\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308490535_d05b4a2272ab1219c192345455013b0c.png\" width=\"563\" height=\"176\" /></a> 此时传入JavaBeanInfo.build() 方法的参数值如下图 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308480619_80d1735b7c2742cf729ba6729b5e189e.png\"><img class=\"alignnone size-full wp-image-4669\" alt=\"80d1735b7c2742cf729ba6729b5e189e\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308480619_80d1735b7c2742cf729ba6729b5e189e.png\" width=\"355\" height=\"81\" /></a> 二者执行到JavaBeanInfo.build() 方法时调用链对比如下 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308495288_21ee55654a62cb8f7750458052485dfe.png\"><img class=\"alignnone size-full wp-image-4705\" alt=\"21ee55654a62cb8f7750458052485dfe\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308495288_21ee55654a62cb8f7750458052485dfe.png\" width=\"1113\" height=\"250\" /></a> 可见二者后面的调用链是完全一样的。二者不同点在于调用JavaBeanInfo.build() 方法时传入clazz参数的来源不同： JSON.parseObject(jsonstr, FastJsonTest.class)在调用JavaBeanInfo.build() 方法时传入的clazz参数源于parseObject方法中第二个参数中指定的“FastJsonTest.class”。 JSON.parse(jsonstr);这种方式调用JavaBeanInfo.build() 方法时传入的clazz参数获取于json字符串中\\@type字段的值。 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308491659_f0c8407956fe7df0df4b42b3199b6e2a.png\"><img class=\"alignnone size-full wp-image-4693\" alt=\"f0c8407956fe7df0df4b42b3199b6e2a\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308491659_f0c8407956fe7df0df4b42b3199b6e2a.png\" width=\"972\" height=\"138\" /></a> 关于JSON.parse(jsonstr);从json字符串中\\@type字段获取clazz参数，具体代码如下 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308482014_2757daa1052b75266d159af6096ed25e.png\"><img class=\"alignnone size-full wp-image-4674\" alt=\"2757daa1052b75266d159af6096ed25e\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308482014_2757daa1052b75266d159af6096ed25e.png\" width=\"1195\" height=\"89\" /></a> 程序通过解析传入的json字符串的\\@type字段值来获取之后传入JavaBeanInfo.build() 方法的clazz参数 因此，只要Json字符串的\\@type字段值与JSON.parseObject(jsonstr, FastJsonTest.class);中第二个参数中类名一致，见下图 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308492991_2d3c790ca89e2d2ed8999c4f170ffe92.png\"><img class=\"alignnone size-full wp-image-4697\" alt=\"2d3c790ca89e2d2ed8999c4f170ffe92\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308492991_2d3c790ca89e2d2ed8999c4f170ffe92.png\" width=\"1044\" height=\"183\" /></a> JSON.parse(jsonstr)与JSON.parseObject(jsonstr,FastJsonTest.class)这两种方式执行的过程与结果是完全一致的。二者唯一的区别就是获取clazz参数的途径不同 \n<h2>&nbsp;问题二解答</h2> &gt; 使用JSON.parse(jsonstr)与JSON.parseObject(jsonstr,FastJsonTest.class)两种方式时，被调用的getter与setter方法分别为setT1()、setT2()、setT5()、getT4()。FastJsonTest类中一共有五个getter方法，分别为getT1()、getT2()、getT3()、getT4()、getT5()，为什么仅仅getT4被调用了呢? 这个问题要从JavaBeanInfo.build() 方法中获取答案： 通过上文的分析可以发现，程序会使用JavaBeanInfo.build() 方法对传入的json字符串进行解析。在JavaBeanInfo.build() 方法中，程序将会创建一个fieldList数组来存放后续将要处理的目标类的 setter 方法及某些特定条件的 getter 方法。通过上文的结果可见，目标类中所有的setter方法都可以被调用，但只有getT4()这一个getter被调用，那么到底什么样的getter 方法可以满足要求并被加入fieldList数组中呢？ 在JavaBeanInfo.build() 方法可见如下代码 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308494261_6ba89b567b638379ac0955cf3ee0e318.png\"><img class=\"alignnone size-full wp-image-4702\" alt=\"6ba89b567b638379ac0955cf3ee0e318\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308494261_6ba89b567b638379ac0955cf3ee0e318.png\" width=\"1336\" height=\"686\" /></a> 程序从clazz（目标类对象）中通过getMethods获取本类以及父类或者父接口中所有的公共方法，接着进行循环判断这些方法是否可以加入fieldList中以便后续处理 条件一、方法名需要长于4 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308493212_3ba4f3c36c37c86019bd3e46a81de0b2.png\"><img class=\"alignnone size-full wp-image-4698\" alt=\"3ba4f3c36c37c86019bd3e46a81de0b2\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308493212_3ba4f3c36c37c86019bd3e46a81de0b2.png\" width=\"500\" height=\"71\" /></a> 条件二、不是静态方法 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308490822_d63f0488efd86adc06ef29945da02942.png\"><img class=\"alignnone size-full wp-image-4690\" alt=\"d63f0488efd86adc06ef29945da02942\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308490822_d63f0488efd86adc06ef29945da02942.png\" width=\"544\" height=\"68\" /></a> 条件三、以get字符串开头，且第四个字符需要是大写字母 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308485054_b01f974fd81355c9ace3ba5f6222a4d8.png\"><img class=\"alignnone size-full wp-image-4684\" alt=\"b01f974fd81355c9ace3ba5f6222a4d8\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308485054_b01f974fd81355c9ace3ba5f6222a4d8.png\" width=\"795\" height=\"95\" /></a> 条件四、方法不能有参数传入 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308480847_87ac3c7ff9cb6348d836cf02a97a5f7e.png\"><img class=\"alignnone size-full wp-image-4670\" alt=\"87ac3c7ff9cb6348d836cf02a97a5f7e\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308480847_87ac3c7ff9cb6348d836cf02a97a5f7e.png\" width=\"772\" height=\"89\" /></a> 条件五、继承自Collection \\|\\| Map \\|\\| AtomicBoolean \\|\\| AtomicInteger \\|\\| AtomicLong \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308481132_95ac194ec336d6e610097b3b038b254b.png\"><img class=\"alignnone size-full wp-image-4671\" alt=\"95ac194ec336d6e610097b3b038b254b\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308481132_95ac194ec336d6e610097b3b038b254b.png\" width=\"689\" height=\"127\" /></a> 条件六、此getter不能有setter方法（程序会先将目标类中所有的setter加入fieldList列表，因此可以通过读取fieldList列表来判断此类中的getter方法有没有setter） \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308481747_1544f565ed123a2f83dff21f3e2bc05f.png\"><img class=\"alignnone size-full wp-image-4673\" alt=\"1544f565ed123a2f83dff21f3e2bc05f\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308481747_1544f565ed123a2f83dff21f3e2bc05f.png\" width=\"600\" height=\"90\" /></a> \n<h2>问题三解答</h2> JSON.parseObject(jsonstr)为什么返回值为JSONObject类对象，且将FastJsonTest类中的所有getter与setter都被调用了 通过上文的分析可以发现，JSON.parse(jsonstr)与JSON.parseObject(jsonstr, FastJsonTest.class)两种方式从执行流程几乎一样，结果也完全相同；然而使用JSON.parseObject(jsonstr)这种方式，执行的结果与返回值却与前两者不同：JSON.parseObject(jsonstr)返回值为JSONObject类对象，且将FastJsonTest类中的所有getter与setter都被调用。 通过阅读源码可以发现JSON.parseObject(String text)实现如下 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/202007230848534_b856db3404b87d708cd00edfbbd9ee30.png\"><img class=\"alignnone size-full wp-image-4685\" alt=\"b856db3404b87d708cd00edfbbd9ee30\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/202007230848534_b856db3404b87d708cd00edfbbd9ee30.png\" width=\"488\" height=\"163\" /></a> parseObject(String text)其实就是执行了parse(),随后将返回的Java对象通过JSON.toJSON（）转为 JSONObject对象。 JSON.toJSON（）方法会将目标类中所有getter方法记录下来，见下图 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308485878_ce86b2ba9f56c78fdddea1d1e030dedb.png\"><img class=\"alignnone size-full wp-image-4687\" alt=\"ce86b2ba9f56c78fdddea1d1e030dedb\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308485878_ce86b2ba9f56c78fdddea1d1e030dedb.png\" width=\"947\" height=\"534\" /></a> 随后通过反射依次调用目标类中所有的getter方法 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308484359_a657b27f84e6bbeeb8f70706ba9108fa.png\"><img class=\"alignnone size-full wp-image-4682\" alt=\"a657b27f84e6bbeeb8f70706ba9108fa\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308484359_a657b27f84e6bbeeb8f70706ba9108fa.png\" width=\"777\" height=\"410\" /></a> 完整的调用链如下 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308485654_c7b24c882c04cc7e6c42a423176985be.png\"><img class=\"alignnone size-full wp-image-4686\" alt=\"c7b24c882c04cc7e6c42a423176985be\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308485654_c7b24c882c04cc7e6c42a423176985be.png\" width=\"565\" height=\"262\" /></a> 总结： 上文例子中，JSON.parse(jsonstr)与JSON.parseObject(jsonstr, FastJsonTest.class)可以认为是完全一样的，而parseObject(String text)是在二者的基础上又执行了一次JSON.toJSON（） parse(String text)、parseObject(String text)与parseObject(String text, Class\\ clazz)目标类Setter\\\\Getter调用情况 | | parse(String text) | parseObject(String text) | parseObject(String text, Class\\ clazz) | | -------------- | ------------------ | ------------------------ | ------------------------------------------ | | Setter调用情况 | 全部 | 全部 | 全部 | | Getter调用情况 | 部分 | 部分 | 全部 | 此外，如果目标类中私有变量没有setter方法，但是在反序列化时仍想给这个变量赋值，则需要使用Feature.SupportNonPublicField参数。（在下文中，为TemplatesImpl类中无setter方法的私有变量_tfactory以及_name赋值运用到的就是这个知识点） \n<h1>TemplatesImpl攻击调用链路</h1> 针对于上文的分析可以发现，无论使用哪种方式处理JSON字符串，都会有机会调用目标类中符合要求的Getter方法 如果一个类中的Getter方法满足调用条件并且存在可利用点，那么这个攻击链就产生了。 TemplatesImpl类恰好满足这个要求： com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl中存在一个名为_outputPropertiesget的私有变量，其getter方法中存在利用点，这个getter方法恰好满足了调用条件，在JSON字符串被解析时可以调用其在调用FastJson.parseObject()序列化为Java对象时会被调用，下面我们详细说明一下： 首先我们从漏洞点开始，一层层往入口分析：首先看一下TemplatesImpl类中的getTransletInstance方法 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308491088_dafa5052e153c29eb5d22bb0ff4c69f5.png\"><img class=\"alignnone size-full wp-image-4691\" alt=\"dafa5052e153c29eb5d22bb0ff4c69f5\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308491088_dafa5052e153c29eb5d22bb0ff4c69f5.png\" width=\"788\" height=\"222\" /></a> 其中455行调用_class[_transletIndex]的newInstance( )方法来实例化对象的操作 我们看一下_class[_transletIndex]是如何获取的，是否可以控制 \\_class与_transletIndex值皆由451行处defineTransletClasses()方法中获取 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308493658_3ee4112a8a2ea2b7000c82d287fb3201.png\"><img class=\"alignnone size-full wp-image-4700\" alt=\"3ee4112a8a2ea2b7000c82d287fb3201\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308493658_3ee4112a8a2ea2b7000c82d287fb3201.png\" width=\"829\" height=\"206\" /></a> 我们跟入defineTransletClasses()方法中一探究竟 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308480260_62b59f97a0c97819aabac6c2ac1de16a.png\"><img class=\"alignnone size-full wp-image-4668\" alt=\"62b59f97a0c97819aabac6c2ac1de16a\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308480260_62b59f97a0c97819aabac6c2ac1de16a.png\" width=\"924\" height=\"622\" /></a> 在defineTransletClasses()方法中，首先在393行判断_bytecodes值是否为空 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308480063_42e45309e4d50cc3bb655dab8a23df91.png\"><img class=\"alignnone size-full wp-image-4667\" alt=\"42e45309e4d50cc3bb655dab8a23df91\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308480063_42e45309e4d50cc3bb655dab8a23df91.png\" width=\"727\" height=\"247\" /></a> 值得注意的是，_bytecodes变量是TemplatesImpl类的成员变量 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308483555_5254995c16eeb34452e0a82cbac85b46.png\"><img class=\"alignnone size-full wp-image-4679\" alt=\"5254995c16eeb34452e0a82cbac85b46\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308483555_5254995c16eeb34452e0a82cbac85b46.png\" width=\"678\" height=\"117\" /></a> 因此_bytecodes变量可以在构造json字符串时传入，在构造poc时属于可控变量 \\_bytecodes变量非空值时，程序将会继续执行至下图红框处 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308494621_6bbe808584d5a8e5d3c7b24d41400b7e.png\"><img class=\"alignnone size-full wp-image-4703\" alt=\"6bbe808584d5a8e5d3c7b24d41400b7e\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308494621_6bbe808584d5a8e5d3c7b24d41400b7e.png\" width=\"938\" height=\"304\" /></a> 此时，需要满足_tfactory变量不为null，否则导致程序异常退出。这就是为什么公开的poc中需要设置设置_tfactory为{ }的原因。因为_tfactory为私有变量，且无setter方法，这里需要指定Feature.SupportNonPublicField参数来为_tfactory赋值 接下来，程序将会把_bytecodes变量中的值循环取出并通过loader.defineClass处理后赋值给_class[i] \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308494084_5fae284f08e0da8a0517fa9f43990c80.png\"><img class=\"alignnone size-full wp-image-4701\" alt=\"5fae284f08e0da8a0517fa9f43990c80\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308494084_5fae284f08e0da8a0517fa9f43990c80.png\" width=\"644\" height=\"322\" /></a> 我们首先来看下loader.defineClass方法是什么 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308491391_ec061c3b3c86c1b3a02482df692a8eea.png\"><img class=\"alignnone size-full wp-image-4692\" alt=\"ec061c3b3c86c1b3a02482df692a8eea\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308491391_ec061c3b3c86c1b3a02482df692a8eea.png\" width=\"756\" height=\"662\" /></a> 可见，loader.defineClass方法其实就是对ClassLoader. defineClass的重写。defineClass方法可以从传入的字节码转化为Class 回头分析下上述流程 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308494084_5fae284f08e0da8a0517fa9f43990c80.png\"><img class=\"alignnone size-full wp-image-4701\" alt=\"5fae284f08e0da8a0517fa9f43990c80\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308494084_5fae284f08e0da8a0517fa9f43990c80.png\" width=\"644\" height=\"322\" /></a> \\_bytecodes变量非空值时，程序将会把_bytecodes数组中的值循环取出，使用loader.defineClass方法从字节码转化为Class对象，随后后赋值给_class[i]。 如果此时的class为main class，_transletIndex变量值则会是此时_bytecodes数组中的下标值 因此当我们构造出_bytecodes:[evilCode]这样的json字符串（evilCode字符串为我们构造的恶意类的字节码）后，程序会将evilCode化为Class对象后赋值给_class[0] 现在回到getTransletInstance()方法中 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308482672_7485cd6227bab22112407edb3fc801c2.png\"><img class=\"alignnone size-full wp-image-4676\" alt=\"7485cd6227bab22112407edb3fc801c2\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308482672_7485cd6227bab22112407edb3fc801c2.png\" width=\"1076\" height=\"348\" /></a> 此时的_class[_transletIndex]即为我们构造传入的evilCode类 程序通过调用evilCode类的newInstance()方法来实例化对象的操作，这将导致我们构造的evilCode类中的恶意代码被执行 但在此之前，需要在poc构造json字符串时使得成员变量_name不为空，否则程序还未执行到将evilCode类实例化就提前return \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308482933_36340dd97c18b7074c08d30fd9fce4b7.png\"><img class=\"alignnone size-full wp-image-4677\" alt=\"36340dd97c18b7074c08d30fd9fce4b7\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308482933_36340dd97c18b7074c08d30fd9fce4b7.png\" width=\"801\" height=\"306\" /></a> 注意：由于私有变量_name没有setter方法，在反序列化时想给这个变量赋值则需要使用Feature.SupportNonPublicField参数。 在分析完存在漏洞的getTransletInstance方法，我们需要找到一条调用链，这条调用链需要在使用fastjson处理json字符串时成功串连到存在漏洞的getTransletInstance方法上。 我们继续向上跟踪代码 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308484113_a99fa86415c1e44425807b808c4feff6.png\"><img class=\"alignnone size-full wp-image-4681\" alt=\"a99fa86415c1e44425807b808c4feff6\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308484113_a99fa86415c1e44425807b808c4feff6.png\" width=\"720\" height=\"331\" /></a> com/sun/org/apache/xalan/internal/xsltc/trax/TemplatesImpl.java newTransformer()方法中调用了getTransletInstance() 继续向上跟踪 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308481420_873e4c395da9922f4755f03fdb6142e5.png\"><img class=\"alignnone size-full wp-image-4672\" alt=\"873e4c395da9922f4755f03fdb6142e5\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308481420_873e4c395da9922f4755f03fdb6142e5.png\" width=\"675\" height=\"283\" /></a> com/sun/org/apache/xalan/internal/xsltc/trax/TemplatesImpl.java getOutputProperties()方法中调用了newTransformer() getOutputProperties()方法为_outputProperties成员变量的getter方法 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308475758_26c8c8cf214c6def1efa536683527acf.png\"><img class=\"alignnone size-full wp-image-4666\" alt=\"26c8c8cf214c6def1efa536683527acf\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308475758_26c8c8cf214c6def1efa536683527acf.png\" width=\"784\" height=\"414\" /></a> 细心的读者可能会发现，成员变量_outputProperties与其getter方法getOutputProperties()方法名字并不完全一致，多了一个下划线，fastjson是如何将其对应的呢？ 实际上，fastjson在解析的时候调用了一个smartMatch() 方法 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308482392_6864c0cd6b84a6dbcf73d21ba3803c9c.png\"><img class=\"alignnone size-full wp-image-4675\" alt=\"6864c0cd6b84a6dbcf73d21ba3803c9c\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308482392_6864c0cd6b84a6dbcf73d21ba3803c9c.png\" width=\"952\" height=\"292\" /></a> 在寻找_outputProperties的getter方法时，程序将下划线置空，从而产生了成员变量_outputProperties与getter方法getOutputProperties()对应的形式 \n<h1>FastJson与TemplatesImpl的有趣结合</h1> 首先说TemplatesImpl类。经过上文分析可发现：TemplatesImpl中存在一个反序列化利用链，在反序列化过程中，如果该类的getOutputProperties()方法被调用，即可成功触发代码执行漏洞。 再来分析下FastJson：经过上文对FastJson三种不同途径处理JSON字符串时关于getter方法被调用的条件来看，TemplatesImpl类_outputProperties成员变量的getter方法满足被调用条件。无论通过fastjson哪种方式解析json字符串，都会触发getOutputProperties()方法。 二者放在一起一拍即合：FastJson在反序列化TemplatesImpl类时会恰好触发TemplatesImpl类的getOutputProperties()方法；TemplatesImpl类的getOutputProperties()方法被触发就会引起反序列化代码执行漏洞。所以说这个漏洞利用很是巧妙。 \n<h1>总结</h1> 针对Fastjson 1.2.24反序列化漏洞的利用方式有很多，本文由于篇幅有限仅对比较巧妙的TemplatesImpl攻击调用链路进行举例。后续将会对Fastjson历史漏洞进行详细的分析，希望大家喜欢。","descriptionType":"text/html","publishedDate":"Thu, 23 Jul 2020 09:58:09 +0000","feedId":6823,"bgimg":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308492664_2a482f1a4f410547c0ac9a3b7876dffa.png","linkMd5":"c1a394330c96e85f83b22a5aaf5f58b1","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn97@2020_1/2020/08/24/23-12-32-586_aead447289c473c8.webp","destWidth":644,"destHeight":840,"sourceBytes":76339,"destBytes":32100,"author":"天融信安全应急响应中心","articleImgCdnMap":{"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308492664_2a482f1a4f410547c0ac9a3b7876dffa.png":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn97@2020_1/2020/08/24/23-12-32-586_aead447289c473c8.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308484633_a5968e24e6caa97be9562234c80400e8.png":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn87@2020_2/2020/08/24/23-12-43-277_6560e99e6d7fa44d.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308490285_d4d30014d4d24a2897bfa65da386fec4.png":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn89@2020_4/2020/08/24/23-12-37-437_7210adfcc45254ae.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308483899_888051938003f40fb97aa91a724e5887.png":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn99@2020_2/2020/08/24/23-12-44-458_46c649634b0d6d88.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/202007230849493_21c2453ce372bcfc605f96bb97a9fdc4.png":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn23@2020_2/2020/08/24/23-12-42-010_00e5b1d57334f7f5.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308491942_0c9cd8220940fbcb60fc3bb987a34b15.png":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn58@2020_5/2020/08/24/23-12-38-420_919e5eaaaa86730d.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308492344_1f5f848eaa7b8c1af2ea4febf61ba3a9.png":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn99@2020_6/2020/08/24/23-12-41-519_962656a8f197a3dd.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308493458_3bd0543cc0dc52a33e44fca9b345c270.png":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn40@2020_1/2020/08/24/23-12-43-501_77c38247f2e738f8.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308483212_440177acd687179a1be554c61759897f.png":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn82@2020_2/2020/08/24/23-12-38-443_475784b19eb4493c.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308490535_d05b4a2272ab1219c192345455013b0c.png":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn23@2020_3/2020/08/24/23-12-42-363_9dac0a69c5e66a71.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308480619_80d1735b7c2742cf729ba6729b5e189e.png":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn84@2020_6/2020/08/24/23-12-40-742_30733153fff0de76.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308495288_21ee55654a62cb8f7750458052485dfe.png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn67@2020_5/2020/08/24/23-12-43-266_3e615c2dc02063fc.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308491659_f0c8407956fe7df0df4b42b3199b6e2a.png":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn63@2020_2/2020/08/24/23-12-40-082_a92adf0cf6c543d6.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308482014_2757daa1052b75266d159af6096ed25e.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn62@2020_4/2020/08/24/23-12-35-418_cbbfd2be5076ead1.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308492991_2d3c790ca89e2d2ed8999c4f170ffe92.png":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn34@2020_2/2020/08/24/23-12-36-268_794d8176e72963e9.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308494261_6ba89b567b638379ac0955cf3ee0e318.png":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn95@2020_1/2020/08/24/23-12-41-379_c738a13892a4ccf1.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308493212_3ba4f3c36c37c86019bd3e46a81de0b2.png":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn51@2020_5/2020/08/24/23-12-43-688_93e2dd24e91c7c0c.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308490822_d63f0488efd86adc06ef29945da02942.png":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn72@2020_1/2020/08/24/23-12-39-333_c2edf53464049d1c.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308485054_b01f974fd81355c9ace3ba5f6222a4d8.png":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn39@2020_4/2020/08/24/23-12-42-162_2b27e0c54b478558.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308480847_87ac3c7ff9cb6348d836cf02a97a5f7e.png":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn70@2020_4/2020/08/24/23-12-36-067_18df82f1fafcb0a8.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308481132_95ac194ec336d6e610097b3b038b254b.png":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn66@2020_2/2020/08/24/23-12-35-301_46311015814c1ea6.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308481747_1544f565ed123a2f83dff21f3e2bc05f.png":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn11@2020_2/2020/08/24/23-12-40-643_a7379da52cf0a388.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/202007230848534_b856db3404b87d708cd00edfbbd9ee30.png":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn77@2020_4/2020/08/24/23-12-36-381_d5862be34b36722e.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308485878_ce86b2ba9f56c78fdddea1d1e030dedb.png":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn51@2020_3/2020/08/24/23-12-40-977_35f063a8faef1049.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308484359_a657b27f84e6bbeeb8f70706ba9108fa.png":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn80@2020_1/2020/08/24/23-12-43-250_01bfc3b4cc5f403f.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308485654_c7b24c882c04cc7e6c42a423176985be.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn86@2020_6/2020/08/24/23-12-36-073_6d65256224c3e0b9.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308491088_dafa5052e153c29eb5d22bb0ff4c69f5.png":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn87@2020_6/2020/08/24/23-12-40-537_58f41dc7c33ee7fe.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308493658_3ee4112a8a2ea2b7000c82d287fb3201.png":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn78@2020_4/2020/08/24/23-12-37-141_9d5cc8f7ac32cd45.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308480260_62b59f97a0c97819aabac6c2ac1de16a.png":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn81@2020_5/2020/08/24/23-12-37-568_b66ac25a7c33e1a1.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308480063_42e45309e4d50cc3bb655dab8a23df91.png":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn35@2020_4/2020/08/24/23-12-43-597_9aafba88f84a2ec2.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308483555_5254995c16eeb34452e0a82cbac85b46.png":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn46@2020_6/2020/08/24/23-12-38-971_4f2b0cdbf6bc37e1.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308494621_6bbe808584d5a8e5d3c7b24d41400b7e.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn44@2020_5/2020/08/24/23-12-43-977_f09a2af02525a191.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308494084_5fae284f08e0da8a0517fa9f43990c80.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn20@2020_1/2020/08/24/23-12-41-436_0aec99267af382e5.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308491391_ec061c3b3c86c1b3a02482df692a8eea.png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn55@2020_2/2020/08/24/23-12-42-019_ee8876df397520fd.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308482672_7485cd6227bab22112407edb3fc801c2.png":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn60@2020_2/2020/08/24/23-12-41-282_5d5fc23e44dffe45.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308482933_36340dd97c18b7074c08d30fd9fce4b7.png":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn96@2020_2/2020/08/24/23-12-43-256_5445737998ff0f3b.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308484113_a99fa86415c1e44425807b808c4feff6.png":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn49@2020_5/2020/08/24/23-12-39-455_10672adb7dad894d.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308481420_873e4c395da9922f4755f03fdb6142e5.png":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn25@2020_3/2020/08/24/23-12-39-154_fdf3a132bcca81b4.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308475758_26c8c8cf214c6def1efa536683527acf.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn32@2020_5/2020/08/24/23-12-42-461_56b8ea69526a496f.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308482392_6864c0cd6b84a6dbcf73d21ba3803c9c.png":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn87@2020_5/2020/08/24/23-12-41-143_4045155badf7960e.webp"},"publishedOrCreatedDate":1598310747187},{"createdTime":"2020-08-25 07:12:27","updatedTime":"2020-08-25 07:12:27","title":"JAVA RMI反序列化知识详解","link":"http://blog.topsec.com.cn/?p=4542","description":"<div title=\"Page 1\"> \n <h3>一、前言</h3> 在Java反序列化漏洞挖掘或利用的时候经常会遇见RMI,本文会讲述什么是RMI、RMI攻击方法、JEP290限制、绕过JEP290限制。 \n <h3>二、RMI简介</h3> JAVA本身提供了一种RPC框架 RMI及Java 远程方法调用(Java Remote Method Invocation),可以在不同的Java 虚拟机之间进行对象间的通讯,RMI是基于JRMP协议(Java Remote Message Protocol Java远程消息交换协议)去实现的。 \n <h4>RMI调用逻辑</h4> \n <div title=\"Page 1\"> \n  <div title=\"Page 1\"> \n   <div title=\"Page 1\"> \n    <div title=\"Page 2\">\n     <a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020050902115152_3.png\"><img class=\"alignnone size-full wp-image-4543\" alt=\"3\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020050902115152_3.png\" width=\"902\" height=\"956\" /></a>\n    </div> \n    <div title=\"Page 2\"> \n     <div title=\"Page 2\"> \n      <div title=\"Page 2\"> \n       <img alt=\"image-20200506223648108\" src=\"http:///Users/master/Desktop/JAVA%20RMI%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%9F%A5%E8%AF%86%E8%AE%B2%E8%A7%A3/3.png?lastModify=1588990443\" /> RMI主要分为三部分 \n       <ul> \n        <li>RMI Registry注册中心</li> \n        <li>RMI Client 客户端</li> \n        <li>RMI Server服务端</li> \n       </ul> \n       <h3>三、RMI的实现</h3> \n       <h4>注册中心代码</h4> 创建一个继承java.rmi.Remote的接口 [crayon-5f44495676558445402626/] 创建注册中心代码 [crayon-5f4449567655e428721069/] \n       <h4>服务端代码</h4> 先创建一个继承java.rmi.Remote的接口 [crayon-5f44495676561173843965/] 继承UnicastRemoteObject类,实现上面的接口 [crayon-5f44495676564549506144/] 写服务端的启动类,用于创建远程对象注册表和注册远程对象 [crayon-5f44495676567562766592/] \n       <h4>客户端代码</h4> 创建接口类 [crayon-5f44495676569753480527/] 连接注册服务 查找hello对象 [crayon-5f4449567656c767478379/] 启动服务端之后,在启动客户端看下. 服务端输出了 \n       <a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020050902144795_1.png\"><img class=\"alignnone size-full wp-image-4544\" alt=\"1\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020050902144795_1.png\" width=\"1074\" height=\"252\" /></a> 客户端输出了\n       <a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020050902151482_2.png\"><img class=\"alignnone size-full wp-image-4545\" alt=\"2\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020050902151482_2.png\" width=\"1092\" height=\"250\" /></a> \n      </div> \n     </div> \n    </div> \n    <div title=\"Page 2\"> \n     <h3>四、攻击方法</h3> \n     <h4>服务端攻击注册中心</h4> 从第一张图可以看到服务端也是向注册中心序列化传输远程对象,那么直接把远程对象改成反序列化Gadget看下 修改服务端代码 [crayon-5f4449567656e824775766/] 在服务端执行这段代码 注册中心计算器会弹出,这段代码就是ysoserial工具的RMIRegistryExploit代码,debug看下注册中心执行过程 触发反序列化操作位置 \n     <code>sun.rmi.registry.RegistryImpl_Skel#dispatch</code> \n     <a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020050902155771_4.png\"><img class=\"alignnone size-full wp-image-4546\" alt=\"4\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020050902155771_4.png\" width=\"1516\" height=\"894\" /></a> 调用栈 [crayon-5f44495676573806683565/] \n     <h4>注册中心攻击客户端</h4> 首先借助ysoserial项目启动一个JRMP服务端执行命令 \n     <code>java -cp ysoserial-0.0.6-SNAPSHOT-all.jar ysoserial.exploit.JRMPListener 1099 CommonsCollections5 \"open /Applications/Calculator.app\"</code> 然后直接启动上面客户端的代码,会发现计算器直接被弹出,debug看下客户端代码 代码位置\n     <code>sun.rmi.registry.RegistryImpl_Stub#lookup</code> \n     <a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020050902164442_5.png\"><img class=\"alignnone size-full wp-image-4547\" alt=\"5\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020050902164442_5.png\" width=\"1660\" height=\"890\" /></a> \n    </div> \n    <div title=\"Page 2\">\n      90行调用newCall方法创建socket连接,94行序列化lookup参数,104行反序列化返回值,而此时Registry的返回值是CommonsCollections5的调用链,所以这里直接反序列化就会触发. \n     <h4>客户端攻击注册中心</h4> 1.直接启动上面的注册中心代码 2.借助ysoserial项目JRMPClient攻击注册中心命令 \n     <code>java -cp ysoserial-0.0.6-SNAPSHOT-all.jar ysoserial.exploit.JRMPClient 192.168.102.1 1099 CommonsCollections5 \"open /Applications/Calculator.app\"</code> 执行完命令后计算器直接弹出来了,原因是RMI框架采用DGC(Distributed Garbage Collection)分布式垃圾收集机制来管理远程对象的生命周期,可以通过与DGC通信的方式发送恶意payload让注册中心反序列化。 debug注册中心代码看下。 \n     <code>sun.rmi.transport.DGCImpl_Skel#dispatch</code> \n     <a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020050902171829_6.png\"><img class=\"alignnone size-full wp-image-4548\" alt=\"6\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020050902171829_6.png\" width=\"1678\" height=\"956\" /></a> \n    </div> \n    <div title=\"Page 2\">\n      可以看到这里进行了反序列化操作。 列下调用栈 [crayon-5f44495676576604954237/] \n     <h4>JEP290</h4> 在\n     <code>JDK6u141</code>、\n     <code>JDK7u131</code>、\n     <code>JDK 8u121</code>加入了JEP 290限制,JEP 290过滤策略有 \n     <h5>进程级过滤器</h5> 可以将进程级序列化过滤器作为命令行参数（“-Djdk.serialFilter =”）传递，或将其设置为$JAVA_HOME/conf/security/java.security中的系统属性。 \n     <h5>自定义过滤器</h5> 可以使用自定义过滤器来重写特定流的进程级过滤器 \n     <h5>内置过滤器</h5> JDK分别为RMI注册表和RMI分布式垃圾收集器提供了相应的内置过滤器。这两个过滤器都配置为白名单，即只允许反序列化特定类。 这里我把jdk版本换成jdk1.8.0_181,默认使用内置过滤器。然后直接使用上面的服务端攻击注册中心poc看下,执行完RMI Registry会提示这样的一个错误: \n     <code>信息: ObjectInputFilter REJECTED: class sun.reflect.annotation.AnnotationInvocationHandler, array length: -1, nRefs: 8, depth: 2, bytes: 285, ex: n/a</code> debug看下 \n     <code>sun.rmi.registry.RegistryImpl#registryFilter</code> [crayon-5f44495676579440477114/] 白名单列表: \n     <ul> \n      <li>String.class</li> \n      <li>Number.class</li> \n      <li>Remote.class</li> \n      <li>Proxy.class</li> \n      <li>UnicastRef.class</li> \n      <li>RMIClientSocketFactory.class</li> \n      <li>RMIServerSocketFactory.class</li> \n      <li>ActivationID.class</li> \n      <li>UID.class</li> \n     </ul> 调用栈 [crayon-5f4449567657c859364992/] \n     <h4>UnicastRef对象</h4> 用UnicastRef对象新建一个RMI连接绕过JEP290的限制,看下ysoserial的JRMPClient的payload \n     <a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020050902180011_7.png\"><img class=\"alignnone size-full wp-image-4549\" alt=\"7\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020050902180011_7.png\" width=\"1538\" height=\"860\" /></a> \n    </div> \n    <div title=\"Page 2\">\n      这几行代码会向指定的RMI Registry发起请求,并且在白名单列表里面,在看下服务端和客户端调用。LocateRegistry.getRegistry方法的代码。 代码位置\n     <code>java.rmi.registry#getRegistry</code> \n     <a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020050902183172_8.png\"><img class=\"alignnone size-full wp-image-4550\" alt=\"8\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020050902183172_8.png\" width=\"1336\" height=\"354\" /></a> \n    </div> \n    <div title=\"Page 2\">\n      和payload发起RMI Registry请求代码是一样的。 先用ysoserial启动RMI registry\n     <code>java -cp ysoserial-0.0.6-SNAPSHOT-all.jar ysoserial.exploit.JRMPListener 1099 CommonsCollections5 \"open /Applications/Calculator.app\"</code> 然后把这个payload放在服务端bind看下 [crayon-5f4449567657f079530216/] 在服务端执行RMI registry的计算器就弹出来了,debug RMI registry代码看下. 调用栈 [crayon-5f44495676582319440157/] 原理就是利用在白名单的UnicastRef类来发起一个RMI连接,在高版本jdk下ysoserial的JRMPListener依然可以利用. \n     <h4>用Object绕JEP290限制</h4> JEP290只是为RMI注册表和RMI分布式垃圾收集器提供了相应的内置过滤器,在RMI客户端和服务端在通信时参数传递这块是没有做处理的,而参数传递也是基于序列化数据传输,那么如果参数是泛型的payload,传输依然会有问题。 先把接口都新增一个sayPayload的方法,参数都是Object类型的 [crayon-5f44495676585879123210/] 在把服务端HelloImpl代码改下,去实现这个方法。 [crayon-5f44495676588435577421/] 客户端在调用这个sayPayload方法时直接传payload看下 [crayon-5f44495676592882269644/] 执行后服务端计算器直接弹出,如果把这个payload作为sayPayload方法的返回值 客户端计算器也会弹出。 看下反序列化的地方 \n     <code>sun.rmi.server.UnicastRef#marshalValue</code> \n     <a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/202005090219073_9.png\"><img class=\"alignnone size-full wp-image-4551\" alt=\"9\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/202005090219073_9.png\" width=\"1578\" height=\"924\" /></a> \n    </div> \n    <div title=\"Page 2\">\n      调用栈 [crayon-5f44495676596307754122/] 在实际使用场景很少有参数是Object类型的,而攻击者可以完全操作客户端,因此可以用恶意对象替换从Object类派生的参数(例如String),具体有如下四种bypass的思路 \n     <ul> \n      <li>将java.rmi包的代码复制到新包，并在新包中修改相应的代码</li> \n      <li>将调试器附加到正在运行的客户端，并在序列化之前替换这些对象</li> \n      <li>使用诸如Javassist这样的工具修改字节码</li> \n      <li>通过实现代理替换网络流上已经序列化的对象</li> \n     </ul> 我这里使用第三个方法,由afanti师傅实现的通过RASP hook住java.rmi.server.RemoteObjectInvocationHandler类的InvokeRemoteMethod方法的第三个参数非Object的改为Object的gadget。不熟悉RASP的先要去了解下。 我这里使用CommonsCollections5这条链,Hook invokeRemoteMethod函数。 \n     <a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020050902195631_10.png\"><img class=\"alignnone size-full wp-image-4552\" alt=\"10\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020050902195631_10.png\" width=\"1652\" height=\"1010\" /></a> \n    </div> \n    <div title=\"Page 2\">\n      客户端代码还是不变 [crayon-5f44495676599610160903/] VM options参数填写rasp jar对应的地址\n     <a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020050902202740_11.png\"><img class=\"alignnone size-full wp-image-4553\" alt=\"11\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020050902202740_11.png\" width=\"1456\" height=\"278\" /></a> \n    </div> \n    <div title=\"Page 2\">\n     然后直接运行\n    </div> \n    <div title=\"Page 2\">\n     <a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020050902205246_12.png\"><img class=\"alignnone size-full wp-image-4554\" alt=\"12\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020050902205246_12.png\" width=\"1644\" height=\"244\" /></a>\n    </div> \n    <div title=\"Page 2\">\n      控制台会抛出一个错误 随后计算器也直接弹出来了. debug看下可以看到 \n     <code>java.rmi.server.RemoteObjectInvocationHandler#invokeRemoteMethod</code>这里args参数的值已经修改为CommonsCollections5的gadget了.\n     <a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020050902212438_13.png\"><img class=\"alignnone size-full wp-image-4555\" alt=\"13\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020050902212438_13.png\" width=\"1594\" height=\"420\" /></a> \n     <h3>五、总结</h3> RMI数据传输都是基于序列化数据传输,RMI Registry、Client、Server都能相互攻击,在你攻击别人的时候 可能也会被人攻击。 \n     <h3>参考链接</h3> https://www.anquanke.com/post/id/200860#h2-3 https://xz.aliyun.com/t/7264#toc-2 https://mogwailabs.de/blog/2019/03/attacking-java-rmi-services-after-jep-290/ https://kingx.me/Exploit-Java-Deserialization-with-RMI.html \n    </div> \n   </div> \n  </div> \n </div> \n</div>","descriptionType":"text/html","publishedDate":"Sat, 09 May 2020 02:25:28 +0000","feedId":6823,"bgimg":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020050902115152_3.png","linkMd5":"c4a6286ac708b00b2f80221bd242a8e1","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn1@2020_4/2020/08/24/23-12-32-144_f700ed81f28cd703.webp","destWidth":902,"destHeight":956,"sourceBytes":97814,"destBytes":33786,"author":"天融信安全应急响应中心","articleImgCdnMap":{"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020050902115152_3.png":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn1@2020_4/2020/08/24/23-12-32-144_f700ed81f28cd703.webp","http:///Users/master/Desktop/JAVA%20RMI%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%9F%A5%E8%AF%86%E8%AE%B2%E8%A7%A3/3.png?lastModify=1588990443":null,"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020050902144795_1.png":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn37@2020_3/2020/08/24/23-12-36-141_b3284fbf01563304.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020050902151482_2.png":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn94@2020_4/2020/08/24/23-12-37-389_a8c47760aa7f7fc6.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020050902155771_4.png":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn7@2020_4/2020/08/24/23-12-41-503_95a775cf33703898.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020050902164442_5.png":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn7@2020_2/2020/08/24/23-12-44-158_2fb33692115678f4.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020050902171829_6.png":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn69@2020_6/2020/08/24/23-12-38-991_cf87942b5869b060.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020050902180011_7.png":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn75@2020_5/2020/08/24/23-12-42-554_ff680b467c6b5dbe.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020050902183172_8.png":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn30@2020_6/2020/08/24/23-12-35-546_be8d42fd1d0d1e29.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/202005090219073_9.png":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn3@2020_2/2020/08/24/23-12-40-789_1ae1661c25dfaf24.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020050902195631_10.png":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn57@2020_3/2020/08/24/23-12-38-083_fef40f19ac4f3e8b.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020050902202740_11.png":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn63@2020_1/2020/08/24/23-12-41-604_7544cc57122e88d9.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020050902205246_12.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn48@2020_6/2020/08/24/23-12-41-988_e52ea83771739157.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020050902212438_13.png":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn61@2020_6/2020/08/24/23-12-39-015_b1f6e12e7923be2c.webp"},"publishedOrCreatedDate":1598310747187},{"createdTime":"2020-08-25 07:12:27","updatedTime":"2020-08-25 07:12:27","title":"Apache dubbo (CVE-2020-1948) 反序列化远程代码执行漏洞及其补丁绕过深度分析","link":"http://blog.topsec.com.cn/?p=4621","description":"<h2>Apache Dubbo简介</h2> &nbsp; Dubbo是一个分布式服务框架，致力于提供高性能和透明化的RPC远程服务调用方案，以及SOA服务治理方案。简单的说，dubbo就是个服务框架，如果没有分布式的需求，其实是不需要用的，只有在分布式的时候，才有dubbo这样的分布式服务框架的需求，并且本质上是个服务调用的东东，说白了就是个远程服务调用的分布式框架（告别Web Service模式中的WSdl，以服务者与消费者的方式在dubbo上注册） 其核心部分包含: \n<ul> \n <li>远程通讯: 提供对多种基于长连接的NIO框架抽象封装，包括多种线程模型，序列化，以及“请求-响应”模式的信息交换方式。</li> \n <li>集群容错: 提供基于接口方法的透明远程过程调用，包括多协议支持，以及软负载均衡，失败容错，地址路由，动态配置等集群支持。</li> \n <li>自动发现: 基于注册中心目录服务，使服务消费方能动态的查找服务提供方，使地址透明，使服务提供方可以平滑增加或减少机器。</li> \n</ul> 下图是来自Apache dubbo 官网的工作流程和原理 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705434573_1.png\"><img class=\"alignnone size-full wp-image-4623\" alt=\"1\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705434573_1.png\" width=\"1060\" height=\"824\" /></a> \n<ul> \n <li><strong>Provider</strong> \n  <ul> \n   <li>暴露服务方称之为“服务提供者”</li> \n  </ul> </li> \n <li><strong>Consumer</strong> \n  <ul> \n   <li>调用远程服务方称之为“服务消费者”</li> \n  </ul> </li> \n <li><strong>Registry</strong> \n  <ul> \n   <li>服务注册与发现的中心目录服务称之为“服务注册中心”</li> \n  </ul> </li> \n <li><strong>Monitor</strong> \n  <ul> \n   <li>统计服务的调用次调和调用时间的日志服务称之为“服务监控中心”</li> \n  </ul> </li> \n <li><strong>Container</strong> \n  <ul> \n   <li>服务运行容器。</li> \n  </ul> </li> \n</ul> Provider将本地提供的远程方法在注册中心进行注册，Consumer需要调用时会先去注册中心进行查询，根据注册中心返回的结果再去对应的Provider中调用对应的远程方法，如果有变更，注册中心将基于长连接推送变更数据给Consumer 。 启动注册中心，Apache dubbo 推荐使用的注册中心时Apache ZooKeeper注册中心 下载地址\n<a href=\"https://zookeeper.apache.org/releases.html\">https://zookeeper.apache.org/releases.html</a> 启动ZooKeeper之前可以自定义修改 “/conf/zoo.cfg”配置文件里的 clientPort和dataDir的值。 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705442957_2.png\"><img class=\"alignnone size-full wp-image-4625\" alt=\"2\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705442957_2.png\" width=\"2034\" height=\"1528\" /></a> Apache Dubbo有一个web端的管理界面 github地址如下\n<a href=\"https://github.com/apache/dubbo-admin\">https://github.com/apache/dubbo-admin</a> 下载完成后进入/dubbo-admin-server/src/main/resources目录修改application.properties配置文件，将其中的注册中心地址修改为自己启动的注册中心的地址\n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/202007070544348_3.png\"><img class=\"alignnone size-full wp-image-4626\" alt=\"3\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/202007070544348_3.png\" width=\"503\" height=\"353\" /></a> dubbo-admin-server 目录下运行 mvn package -Dmaven.test.skip=true 将该模块打包成jar包\n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705443846_4.png\"><img class=\"alignnone size-full wp-image-4627\" alt=\"4\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705443846_4.png\" width=\"2034\" height=\"1528\" /></a> 然后 java -jar dubbo-admin-server-0.2.0-SNAPSHOT.jar 启动dubbo-admin-server，此时启动了 dubbo管理的服务端但是没有UI界面。 进入到 dubbo-admin-ui 中 执行 npm install 该命令执行完成后 执行npm run dev 。 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705444415_5.png\"><img class=\"alignnone size-full wp-image-4628\" alt=\"5\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705444415_5.png\" width=\"2034\" height=\"1528\" /></a> 访问\n<a href=\"http://localhost:8081\">http://localhost:8081</a> 此时就有了UI界面，默认账号密码都是root，在服务查询中 我们可以看到Provider在Zookeeper注册中心中注册的远程方法服务，目前没有注册所以无可用数据。 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705445070_6.png\"><img class=\"alignnone size-full wp-image-4629\" alt=\"6\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705445070_6.png\" width=\"3038\" height=\"1932\" /></a> 启动我们使用dubbo框架写的程序 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705445576_7.png\"><img class=\"alignnone size-full wp-image-4630\" alt=\"7\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705445576_7.png\" width=\"324\" height=\"194\" /></a> 可以看到我们的远程方法服务成功在zookeeper注册中心进行注册 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705445880_8.png\"><img class=\"alignnone size-full wp-image-4631\" alt=\"8\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705445880_8.png\" width=\"3038\" height=\"1932\" /></a> &nbsp; \n<h2>CVE-2020-1948 深度分析</h2> 首先观察一下网上已经公布的POC的代码 [crayon-5f4449566d033734239969/] 不难看出，该漏洞利用链最终是通过JdbcRowSetImpl调用jndi来进行远程代码执行。同时我们发现该gadget中用到了com.rometools.rome.feed.impl.ToStringBean，所以Provider的pom.xml中需要添加rometools的引用 [crayon-5f4449566d03a511033187/] 通过wireshark抓包来看一下 POC发出的报文内容 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705450420_9.png\"><img class=\"alignnone size-full wp-image-4632\" alt=\"9\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705450420_9.png\" width=\"1156\" height=\"786\" /></a> 我们将断点打在 org.apache.dubbo.remoting.transport.DecodeHandler 的第57行代码上。 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705450873_10.png\"><img class=\"alignnone size-full wp-image-4633\" alt=\"10\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705450873_10.png\" width=\"501\" height=\"111\" /></a> 跟进该方法后可以看到该方法内首先会进行一个if判断，判断完成后会调用DecodeableRpcInvocation.decode()方法并传递进去两个参数，其中有一个inputStream参数，我们详细看一下该参数的内容 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705451129_11.png\"><img class=\"alignnone size-full wp-image-4634\" alt=\"11\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705451129_11.png\" width=\"693\" height=\"118\" /></a> \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705451484_12.png\"><img class=\"alignnone size-full wp-image-4635\" alt=\"12\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705451484_12.png\" width=\"823\" height=\"344\" /></a> 可以看到正是我们通过POC发送的序列化数据 跟进该方法，在第131行代码处有一个if判断，这里通过RefctUtils.desc2classArray()处理完desc参数然后返回一个ToStringBean的类对象。 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705451838_13.png\"><img class=\"alignnone size-full wp-image-4636\" alt=\"13\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705451838_13.png\" width=\"1298\" height=\"70\" /></a> 紧接着通过Hessian将ToStringBean的类对象反序列化成ToStringBean对象并赋值给args参数 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705452129_14.png\"><img class=\"alignnone size-full wp-image-4637\" alt=\"14\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705452129_14.png\" width=\"1303\" height=\"175\" /></a> 仔细观察一下此时args指向的ToStringBean对象的详细内容，可见此时ToStringBean对象有两个属性已经被赋值为JdbcRowSetImpl。 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705452414_15.png\"><img class=\"alignnone size-full wp-image-4638\" alt=\"15\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705452414_15.png\" width=\"492\" height=\"77\" /></a> 当前方法执行完成后 args参数和pts参数分别被赋值给当前对象的arguments属性和parameterTypes属性，然后当前DecodeableRpcInvocation作为参数进行返回 返回到DecodeHandler中，在第51行代码中传入的message参数是一个Request对象，该Request对象是dubbo的包中的，简单看一下该对象的详细信息 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705452799_16.png\"><img class=\"alignnone size-full wp-image-4639\" alt=\"16\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705452799_16.png\" width=\"915\" height=\"66\" /></a> \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/20200707054530100_17.png\"><img class=\"alignnone size-full wp-image-4640\" alt=\"17\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/20200707054530100_17.png\" width=\"394\" height=\"139\" /></a> 跟进该方法，然后继续跟进handleRequest()方法。 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705453313_18.png\"><img class=\"alignnone size-full wp-image-4641\" alt=\"18\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705453313_18.png\" width=\"945\" height=\"288\" /></a> 在DubboProtocol类的第263行代码中经过一个if判断然后判断成功会抛出一个RemotingException，关键点就在这里，可以看到传入的参数中采用了字符串拼接的形式，当使用字符串拼接的时候，会自动调用StringBuilder的对象的append方法，依次处理channel.getRemoteAddress()的返回值，channel.getLocalAddress()的返回值，getInvocationWithoutData(inv)的返回值，而getInvocationWithoutData(inv)的返回值正式含有恶意请求的DecodeableRpcInvocation对象，StringBuilder要调用DecodeableRpcInvocation的toString方法将其转化为字符串 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705453753_19.png\"><img class=\"alignnone size-full wp-image-4642\" alt=\"19\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705453753_19.png\" width=\"1621\" height=\"90\" /></a> \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705454043_20.png\"><img class=\"alignnone size-full wp-image-4643\" alt=\"20\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705454043_20.png\" width=\"831\" height=\"134\" /></a> \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705454298_21.png\"><img class=\"alignnone size-full wp-image-4644\" alt=\"21\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705454298_21.png\" width=\"922\" height=\"93\" /></a> DecodeableRpcInvocation类的父类RpcInvocation重写了toString方法，看一下RpcInvocation.toString()方法的实现 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705454512_22.png\"><img class=\"alignnone size-full wp-image-4645\" alt=\"22\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705454512_22.png\" width=\"1420\" height=\"148\" /></a> 同样还是字符串拼接，其中Arrays.toString(arguments)，agruments正是之前封装进DecodeableRpcInvocation对象中的ToStringBean对象。接下来自然会调用ToStringBean.toString()方法。 ToStringBean.toString()方法，执行时取出其中的obj属性获取其类名称，并作为参数传入另一个重写的toString方法 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705454963_23.png\"><img class=\"alignnone size-full wp-image-4646\" alt=\"23\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705454963_23.png\" width=\"894\" height=\"198\" /></a> 该toString方法中会通过反射不断调用JdbcRowSetImpl对象的各个方法，当反射调用JdbcRowSetImpl对象的getDatabaseMetaData方法时，会触发JDNI远程访问dataSource \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705455279_24.png\"><img class=\"alignnone size-full wp-image-4647\" alt=\"24\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705455279_24.png\" width=\"1437\" height=\"312\" /></a> \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705455595_25.png\"><img class=\"alignnone size-full wp-image-4648\" alt=\"25\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705455595_25.png\" width=\"764\" height=\"92\" /></a> 我们可以看到dataSource的值 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/202007070545585_26.png\"><img class=\"alignnone size-full wp-image-4649\" alt=\"26\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/202007070545585_26.png\" width=\"1189\" height=\"160\" /></a> \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705460266_27.png\"><img class=\"alignnone size-full wp-image-4650\" alt=\"27\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705460266_27.png\" width=\"341\" height=\"205\" /></a> &nbsp; 至此Apache dubbo (CVE-2020-1948) 反序列化远程代码执行漏洞原理分析完毕 &nbsp; \n<h2>补丁绕过分析</h2> 这次针对该漏洞的补丁非常简单，在分析该漏洞时说过在DecodeableRpcInvocation类的第131行有一个if 判断，以下是2.7.6版本中该判断的代码 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705451838_13.png\"><img class=\"alignnone size-full wp-image-4636\" alt=\"13\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705451838_13.png\" width=\"1298\" height=\"70\" /></a> 更新后的2.7.7版本该判断的代码如下，可见在该判断內有增加了一个if 判断，且新增加的判断如果判断失败则会抛出IllegalArgumentException异常终止当前线程的执行。 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705460538_28.png\"><img class=\"alignnone size-full wp-image-4651\" alt=\"28\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705460538_28.png\" width=\"1139\" height=\"155\" /></a> 那么如何绕过该判断让程序继续执行下去从而触发远程代码执行，我们跟入RpcUtils.isGenericCall()方法中来仔细观察。 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705460848_29.png\"><img class=\"alignnone size-full wp-image-4652\" alt=\"29\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705460848_29.png\" width=\"1296\" height=\"72\" /></a> 不难发现该方法内用仅仅只用String.equals方法对比了method参数是否和$INVOKE常量或者$INVOKE_ASYNC常量的值相同。 我门看一下两个常量的值 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705461092_30.png\"><img class=\"alignnone size-full wp-image-4653\" alt=\"30\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705461092_30.png\" width=\"408\" height=\"59\" /></a> 我们此时 method的值为“test”可见并不相同，紧接着进入RpcUtils.isEcho()方法，同样是和常量进行对比，显然结果也不相同 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/202007070546132_31.png\"><img class=\"alignnone size-full wp-image-4654\" alt=\"31\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/202007070546132_31.png\" width=\"578\" height=\"84\" /></a> \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705461697_32.png\"><img class=\"alignnone size-full wp-image-4655\" alt=\"32\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705461697_32.png\" width=\"265\" height=\"48\" /></a> 所以if 判断内的最终结果为true，从而抛出异常终止执行。绕过的方法相比大家也都想到了，我们只要让method的值等于“$invoke”，“$invokeAsync”，“$echo”任意一个即可绕过。我们返回POC中查看与method对应的值是哪一个 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705461840_33.png\"><img class=\"alignnone size-full wp-image-4656\" alt=\"33\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705461840_33.png\" width=\"898\" height=\"162\" /></a> 一眼就能发现其中的method_name就是我们要找的，我们只需要修改‘test’为‘$invoke’即可对当前补丁进行绕过。 \n<h2></h2> \n<h2>总结</h2> 此次漏洞是序列化传输到后台的数据被翻序列化完成后，在后续的处理过程中的一个异常处理中进行了危险操作，从而触发了gadget。 &nbsp;","descriptionType":"text/html","publishedDate":"Tue, 07 Jul 2020 06:29:20 +0000","feedId":6823,"bgimg":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705434573_1.png","linkMd5":"476e4fbc84b253377a7a31ae1bcf446e","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn5@2020_5/2020/08/24/23-12-31-986_ba573eec561b8eb1.webp","destWidth":1060,"destHeight":824,"sourceBytes":15546,"destBytes":26626,"author":"天融信安全应急响应中心","articleImgCdnMap":{"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705434573_1.png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn5@2020_5/2020/08/24/23-12-31-986_ba573eec561b8eb1.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705442957_2.png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn41@2020_1/2020/08/24/23-12-40-331_fffcc08493e71c4d.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/202007070544348_3.png":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn73@2020_5/2020/08/24/23-12-38-697_6df7c79e9125bb12.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705443846_4.png":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn54@2020_3/2020/08/24/23-12-39-640_02e373c283aa79c3.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705444415_5.png":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn9@2020_1/2020/08/24/23-12-39-195_b6325c54fe28b9de.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705445070_6.png":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn31@2020_1/2020/08/24/23-12-45-421_b60efa1ed9d53bfd.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705445576_7.png":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn45@2020_1/2020/08/24/23-12-36-118_3a903c5891a3a223.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705445880_8.png":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn5@2020_4/2020/08/24/23-12-37-588_cb583bab818a7be2.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705450420_9.png":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn83@2020_4/2020/08/24/23-12-40-489_eaafa1385fa1841e.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705450873_10.png":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn13@2020_2/2020/08/24/23-12-37-549_77a0bae91b643d63.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705451129_11.png":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn55@2020_1/2020/08/24/23-12-42-801_bc8bab92cae16ed3.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705451484_12.png":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn42@2020_4/2020/08/24/23-12-36-538_1513c5d88fd54033.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705451838_13.png":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn90@2020_6/2020/08/24/23-12-38-364_f5bed0cf5343e85b.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705452129_14.png":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn19@2020_2/2020/08/24/23-12-42-491_48347f29adf0ad32.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705452414_15.png":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn2@2020_3/2020/08/24/23-12-38-805_6bc0c7af6325ea89.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705452799_16.png":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn43@2020_2/2020/08/24/23-12-41-464_f50bc2d297ba1167.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/20200707054530100_17.png":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn13@2020_5/2020/08/24/23-12-39-104_b76928a6d946bad7.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705453313_18.png":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn75@2020_3/2020/08/24/23-12-43-259_83b3c5df30f3173a.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705453753_19.png":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn22@2020_1/2020/08/24/23-12-35-465_f6e1873ba33d8543.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705454043_20.png":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn15@2020_1/2020/08/24/23-12-42-018_b296eaf6d824302c.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705454298_21.png":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn39@2020_5/2020/08/24/23-12-41-483_f4b224d44ee1a213.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705454512_22.png":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn89@2020_3/2020/08/24/23-12-36-054_4cea15c8258d7c72.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705454963_23.png":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn16@2020_6/2020/08/24/23-12-41-110_116b2e60d4a62b42.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705455279_24.png":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn25@2020_2/2020/08/24/23-12-35-798_e44560543bd1a6f3.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705455595_25.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn10@2020_6/2020/08/24/23-12-36-119_7a711651743054a4.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/202007070545585_26.png":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn63@2020_2/2020/08/24/23-12-42-583_dcddfb765c41e262.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705460266_27.png":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn5@2020_1/2020/08/24/23-12-37-459_0df29c7495eabfba.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705460538_28.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn8@2020_4/2020/08/24/23-12-42-658_078feddf2cc3d425.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705460848_29.png":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn49@2020_2/2020/08/24/23-12-37-960_c47f7e62ab50533d.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705461092_30.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn22@2020_1/2020/08/24/23-12-37-694_798b764c665a50c7.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/202007070546132_31.png":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn51@2020_4/2020/08/24/23-12-42-582_25d74823ca8bc3a2.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705461697_32.png":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn45@2020_6/2020/08/24/23-12-37-813_0bc9c70fd1fe64ae.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705461840_33.png":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn93@2020_1/2020/08/24/23-12-39-721_f83ffb3dcb5aa718.webp"},"publishedOrCreatedDate":1598310747186},{"createdTime":"2020-08-25 07:12:27","updatedTime":"2020-08-25 07:12:27","title":"使用无字母的JavaScript语句绕过XSS限制","link":"http://blog.topsec.com.cn/?p=4610","description":"<h2>一、前言</h2> 在一次\n<code>XSS</code>测试中,往可控的参数中输入\n<code>XSS Payload</code>,发现目标服务把所有字母都转成了大写,假如我输入\n<code>alert(1)</code>,会被转成\n<code>ALERT(1)</code>,除此之外并没有其他限制,这时我了解到\n<code>JavaScript</code>中可以执行无字母的语句,从而可以绕过这种限制来执行\n<code>XSS Payload</code>。 \n<h2>二、JS基础</h2> 先执行两段JS代码看下 [crayon-5f4449566e93f345486711/] \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020061307303038_image-20200610213701179.png\"><img class=\"alignnone size-full wp-image-4611\" alt=\"image-20200610213701179\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020061307303038_image-20200610213701179.png\" width=\"946\" height=\"306\" /></a> 两段js代码都输出了字符串\"nb\",下面来分析下原因. \n<h4>JS运算符的优先级</h4> 下面的表将所有运算符按照优先级的不同从高（20）到低（1）排列。 \n<table> \n <thead> \n  <tr> \n   <th>优先级</th> \n   <th>运算类型</th> \n   <th>关联性</th> \n   <th>运算符</th> \n  </tr> \n </thead> \n <tbody> \n  <tr> \n   <td>20</td> \n   <td>圆括号</td> \n   <td>n/a</td> \n   <td>( … )</td> \n  </tr> \n  <tr> \n   <td>19</td> \n   <td>成员访问</td> \n   <td>从左到右</td> \n   <td>… . …</td> \n  </tr> \n  <tr> \n   <td>19</td> \n   <td>需计算的成员访问</td> \n   <td>从左到右</td> \n   <td>… [ … ]</td> \n  </tr> \n  <tr> \n   <td>19</td> \n   <td>new (带参数列表)</td> \n   <td>n/a</td> \n   <td>new … ( … )</td> \n  </tr> \n  <tr> \n   <td>19</td> \n   <td>函数调用</td> \n   <td>从左到右</td> \n   <td>… ( … )</td> \n  </tr> \n  <tr> \n   <td>19</td> \n   <td>可选链（Optional chaining）</td> \n   <td>从左到右</td> \n   <td>?.</td> \n  </tr> \n  <tr> \n   <td>18</td> \n   <td>new (无参数列表)</td> \n   <td>从右到左</td> \n   <td>new …</td> \n  </tr> \n  <tr> \n   <td>17</td> \n   <td>后置递增(运算符在后)</td> \n   <td>n/a</td> \n   <td>… ++</td> \n  </tr> \n  <tr> \n   <td>17</td> \n   <td>后置递减(运算符在后)</td> \n   <td>n/a</td> \n   <td>… --</td> \n  </tr> \n  <tr> \n   <td>16</td> \n   <td>逻辑非</td> \n   <td>从右到左</td> \n   <td>! …</td> \n  </tr> \n  <tr> \n   <td>16</td> \n   <td>按位非</td> \n   <td>从右到左</td> \n   <td>~ …</td> \n  </tr> \n  <tr> \n   <td>16</td> \n   <td>一元加法</td> \n   <td>从右到左</td> \n   <td>+ …</td> \n  </tr> \n  <tr> \n   <td>16</td> \n   <td>一元减法</td> \n   <td>从右到左</td> \n   <td>- …</td> \n  </tr> \n  <tr> \n   <td>16</td> \n   <td>前置递增</td> \n   <td>从右到左</td> \n   <td>++ …</td> \n  </tr> \n  <tr> \n   <td>16</td> \n   <td>前置递减</td> \n   <td>从右到左</td> \n   <td>-- …</td> \n  </tr> \n  <tr> \n   <td>16</td> \n   <td>typeof</td> \n   <td>从右到左</td> \n   <td>typeof …</td> \n  </tr> \n  <tr> \n   <td>16</td> \n   <td>void</td> \n   <td>从右到左</td> \n   <td>void …</td> \n  </tr> \n  <tr> \n   <td>16</td> \n   <td>delete</td> \n   <td>从右到左</td> \n   <td>delete …</td> \n  </tr> \n  <tr> \n   <td>16</td> \n   <td>await</td> \n   <td>从右到左</td> \n   <td>await …</td> \n  </tr> \n  <tr> \n   <td>15</td> \n   <td>幂</td> \n   <td>从右到左</td> \n   <td>… ** …</td> \n  </tr> \n  <tr> \n   <td>14</td> \n   <td>乘法</td> \n   <td>从左到右</td> \n   <td>… * …</td> \n  </tr> \n  <tr> \n   <td>14</td> \n   <td>除法</td> \n   <td>从左到右</td> \n   <td>… / …</td> \n  </tr> \n  <tr> \n   <td>14</td> \n   <td>取模</td> \n   <td>从左到右</td> \n   <td>… % …</td> \n  </tr> \n  <tr> \n   <td>13</td> \n   <td>加法</td> \n   <td>从左到右</td> \n   <td>… + …</td> \n  </tr> \n  <tr> \n   <td>13</td> \n   <td>减法</td> \n   <td>从左到右</td> \n   <td>… - …</td> \n  </tr> \n  <tr> \n   <td>12</td> \n   <td>按位左移</td> \n   <td>从左到右</td> \n   <td>… &lt;&lt; …</td> \n  </tr> \n  <tr> \n   <td>12</td> \n   <td>按位右移</td> \n   <td>从左到右</td> \n   <td>… &gt;&gt; …</td> \n  </tr> \n  <tr> \n   <td>12</td> \n   <td>无符号右移</td> \n   <td>从左到右</td> \n   <td>… &gt;&gt;&gt; …</td> \n  </tr> \n  <tr> \n   <td>11</td> \n   <td>小于</td> \n   <td>从左到右</td> \n   <td>… &lt; …</td> \n  </tr> \n  <tr> \n   <td>11</td> \n   <td>小于等于</td> \n   <td>从左到右</td> \n   <td>… &lt;= …</td> \n  </tr> \n  <tr> \n   <td>11</td> \n   <td>大于</td> \n   <td>从左到右</td> \n   <td>… &gt; …</td> \n  </tr> \n  <tr> \n   <td>11</td> \n   <td>大于等于</td> \n   <td>从左到右</td> \n   <td>… &gt;= …</td> \n  </tr> \n  <tr> \n   <td>11</td> \n   <td>in</td> \n   <td>从左到右</td> \n   <td>… in …</td> \n  </tr> \n  <tr> \n   <td>11</td> \n   <td>instanceof</td> \n   <td>从左到右</td> \n   <td>… instanceof …</td> \n  </tr> \n  <tr> \n   <td>10</td> \n   <td>等号</td> \n   <td>从左到右</td> \n   <td>… == …</td> \n  </tr> \n  <tr> \n   <td>10</td> \n   <td>非等号</td> \n   <td>从左到右</td> \n   <td>… != …</td> \n  </tr> \n  <tr> \n   <td>10</td> \n   <td>全等号</td> \n   <td>从左到右</td> \n   <td>… === …</td> \n  </tr> \n  <tr> \n   <td>10</td> \n   <td>非全等号</td> \n   <td>从左到右</td> \n   <td>… !== …</td> \n  </tr> \n  <tr> \n   <td>9</td> \n   <td>按位与</td> \n   <td>从左到右</td> \n   <td>… &amp; …</td> \n  </tr> \n  <tr> \n   <td>8</td> \n   <td>按位异或</td> \n   <td>从左到右</td> \n   <td>… ^ …</td> \n  </tr> \n  <tr> \n   <td>7</td> \n   <td>按位或</td> \n   <td>从左到右</td> \n   <td>…|...</td> \n  </tr> \n  <tr> \n   <td>6</td> \n   <td>逻辑与</td> \n   <td>从左到右</td> \n   <td>… &amp;&amp; …</td> \n  </tr> \n  <tr> \n   <td>5</td> \n   <td>逻辑或</td> \n   <td>从左到右</td> \n   <td>…||...</td> \n  </tr> \n  <tr> \n   <td>4</td> \n   <td>条件运算符</td> \n   <td>从右到左</td> \n   <td>… ? … : …</td> \n  </tr> \n  <tr> \n   <td>3</td> \n   <td>赋值</td> \n   <td>从右到左</td> \n   <td>… = …</td> \n  </tr> \n  <tr> \n   <td>2</td> \n   <td>yield*</td> \n   <td>从右到左</td> \n   <td>yield* …</td> \n  </tr> \n  <tr> \n   <td>1</td> \n   <td>展开运算符</td> \n   <td>n/a</td> \n   <td>... …</td> \n  </tr> \n  <tr> \n   <td>1</td> \n   <td>逗号</td> \n   <td>从左到右</td> \n   <td>… , …</td> \n  </tr> \n </tbody> \n</table> 以这个优先级对JS代码\n<code>([][[]]+[])[+!+[]]+([]+{})[+!+[]+!+[]]</code>来进行分解 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020061307313814_image-20200611150442397.png\"><img class=\"alignnone size-full wp-image-4612\" alt=\"image-20200611150442397\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020061307313814_image-20200611150442397.png\" width=\"1670\" height=\"436\" /></a> 先来看第一个分解的JS\n<code>([][[]]+[])</code>, 在()内[]的优先级高,会先处理,控制台执行看一下 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020061307320523_image-20200611100830533.png\"><img class=\"alignnone size-full wp-image-4613\" alt=\"image-20200611100830533\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020061307320523_image-20200611100830533.png\" width=\"618\" height=\"194\" /></a> \n<h4>JS类型转换</h4> 从分解的第一段js可以看到输出了字符串\"undefined\",这里就涉及到类型转换。在JS中当操作符两边的操作数类型不一致或者不是原始类型,就需要类型转换。JS有5种原始类型,\n<code>Undefined</code>、\n<code>Null</code>、\n<code>Boolean</code>、\n<code>Number</code> 和 \n<code>String</code>。 \n<ul> \n <li>乘号、除号/、减号-,肯定是做数学运算,就会转换成Number类型的。</li> \n <li>加号+,有可能是字符串拼接,也可能是数学运算,所以可能转化成Number或String。</li> \n <li>符号!,表示取反,会转换成Boolean类型。</li> \n <li>符号~,把操作数转成Number类型,取负运算在减1。</li> \n <li>一元运算加法、减法,都会转成Number类型。</li> \n</ul> 在看下非原始类型转换规则 \n<code>ToPrimitive(input, PreferredType?)</code> 可选参数PreferredType是Number或者是String。返回值为任何原始值。如果PreferredType是Number，执行顺序如下： 1.如果input是原始值,直接返回这个值。 2.否则,如果input是对象,调用input.valueOf(),如果结果是原始值,返回结果。 3.否则,调用input.toString()。如果结果是原始值,返回结果。 4.否则,抛出TypeError。 如果转换的类型是String，2和3会交换执行，即先执行toString()方法。 \n<code>ToNumber</code> 运算符根据下表将其参数转换为数值类型的值 \n<table> \n <thead> \n  <tr> \n   <th>输入类型</th> \n   <th>结果</th> \n  </tr> \n </thead> \n <tbody> \n  <tr> \n   <td>undefined</td> \n   <td>NaN</td> \n  </tr> \n  <tr> \n   <td>Null</td> \n   <td>+0</td> \n  </tr> \n  <tr> \n   <td>Boolean</td> \n   <td>如果参数是 true，结果为 1。如果参数是 false，此结果为 +0</td> \n  </tr> \n  <tr> \n   <td>Number</td> \n   <td>不转换</td> \n  </tr> \n  <tr> \n   <td>String</td> \n   <td>\"\" 转换成 0,\"123\"转换成\"123\",无法解析的转换成NaN</td> \n  </tr> \n  <tr> \n   <td>Object</td> \n   <td>调用ToPrimitive(input, Number)</td> \n  </tr> \n </tbody> \n</table> \n<code>ToBoolean</code> 运算符根据下表将其参数转换为布尔值类型的值 \n<table> \n <thead> \n  <tr> \n   <th>输入类型</th> \n   <th>结果</th> \n  </tr> \n </thead> \n <tbody> \n  <tr> \n   <td>undefined</td> \n   <td>false</td> \n  </tr> \n  <tr> \n   <td>Null</td> \n   <td>false</td> \n  </tr> \n  <tr> \n   <td>Boolean</td> \n   <td>不转换</td> \n  </tr> \n  <tr> \n   <td>Number</td> \n   <td>如果参数是 +0, -0, 或 NaN，结果为 false,否则结果为 true。</td> \n  </tr> \n  <tr> \n   <td>String</td> \n   <td>如果参数参数是空字符串（其长度为零），结果为 false，否则结果为 true。</td> \n  </tr> \n  <tr> \n   <td>Object</td> \n   <td>true</td> \n  </tr> \n </tbody> \n</table> \n<code>ToString</code> 运算符根据下表将其参数转换为字符串类型的值 \n<table> \n <thead> \n  <tr> \n   <th>输入类型</th> \n   <th>结果</th> \n  </tr> \n </thead> \n <tbody> \n  <tr> \n   <td>undefined</td> \n   <td>\"undefined\"</td> \n  </tr> \n  <tr> \n   <td>Null</td> \n   <td>\"null\"</td> \n  </tr> \n  <tr> \n   <td>Boolean</td> \n   <td>如果参数是 true，那么结果为 \"true\"。 如果参数是 false，那么结果为 \"false\"。</td> \n  </tr> \n  <tr> \n   <td>String</td> \n   <td>不转换</td> \n  </tr> \n  <tr> \n   <td>Number</td> \n   <td>数字转成字符串 例如 123转成\"123\"</td> \n  </tr> \n  <tr> \n   <td>Object</td> \n   <td>调用ToPrimitive(input, String)</td> \n  </tr> \n </tbody> \n</table> \n<h4>分解步骤</h4> 第一段JS\n<code>([][[]]+[])</code>根据优先级会先执行\n<code>[]</code>,\n<code>[]</code>会定义一个空数组,\n<code>[[]]</code>会定义一个二维数组,那么\n<code>[][[]]</code>就是在一个空数组里面去寻找下标是一个非数字的值,肯定会返回undefined。到这可以分解成undefined+[],因为两把的操作数类型不一致,这里会调用\n<code>ToPrimitive</code>来进行转换 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020061307334336_image-20200611140809976.png\"><img class=\"alignnone size-full wp-image-4614\" alt=\"image-20200611140809976\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020061307334336_image-20200611140809976.png\" width=\"708\" height=\"280\" /></a> undefined根据上面的规则可以得知会转换成字符串\"undefined\",这时就是执行\n<code>\"undefined\"+\"\"</code>,结果就是\n<code>\"undefined\"</code>字符串。 第二段JS\n<code>[+!+[]]</code>,会先执行里面的\n<code>[]</code>会定义一个空数组, 因为一元运算的原因会从右到左,那么\n<code>+[]</code>就会调用\n<code>ToNumber</code>,因为\n<code>[]</code>是\n<code>Object</code>类型所以会调用\n<code>ToPrimitive</code>,而\n<code>[].toString()</code>会返回\n<code>\"\"</code>字符串,此时会执行\n<code>+\"\"</code>,此时\n<code>\"\"</code>会使用\n<code>ToNumber</code>进行转换,结果会是0。后面接着会用!进行取反,因为0不是\n<code>Boolean</code>类型,会调用\n<code>ToBoolean</code>进行类型转换,会转成\n<code>false</code>,对\n<code>false</code>取反会得到\n<code>true</code>,接着执行\n<code>+true</code>,会用\n<code>ToNumber</code>对\n<code>true</code>进行类型转换,会得到1,那么最终结果就是\n<code>[1]</code> 第三段JS\n<code>([]+{})</code>,\n<code>[]</code>通过\n<code>ToPrimitive</code>会得到\n<code>\"\"</code>字符串,\n<code>{}</code>对象通过\n<code>ToPrimitive</code>会得到\n<code>\"[object Object]\"</code>字符串。 第四段JS\n<code>[+!+[]+!+[]]</code>,根据优先级先执行\n<code>[]</code>,\n<code>+[]</code>得到0,\n<code>!0</code>得到\n<code>true</code>,\n<code>+true</code>得到数字1,1+1则等于2,最终结果是\n<code>[2]</code> 最终把这4小段js代码结果拼接起来看下,\n<code>\"undefined\"[1]+\"[object Object]\"[2]</code>。执行就会得到字符串\n<code>\"nb\"</code>。 \n<h2>三、分析JSFuck</h2> JSFuck使用六个不同的字符\n<code>()[]+!</code>来编写和执行任意JS代码,在JS基础中讲述了如何通过几个字符来生成任意的字符串,JsFuck不仅只是生成字符串,还可以执行任意JS代码。 [crayon-5f4449566e94e524402418/] 在控制台执行上面的JS,浏览器会弹出一个对话框内容是1。 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020061307345612_image-20200611152248433.png\"><img class=\"alignnone size-full wp-image-4615\" alt=\"image-20200611152248433\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020061307345612_image-20200611152248433.png\" width=\"1890\" height=\"576\" /></a> 经过一步步拆解,最后执行的JS代码是\n<code>[][\"fill\"][\"constructor\"](\"alert(1)\")()</code>,那这段代码为啥会执行\n<code>alert(1)</code>呢,通过控制台分解看下。 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020061307352631_image-20200611165152260.png\"><img class=\"alignnone size-full wp-image-4616\" alt=\"image-20200611165152260\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020061307352631_image-20200611165152260.png\" width=\"968\" height=\"400\" /></a> \n<code>[][\"fill\"]</code>获取数组的\n<code>fill</code>方法。在JS中每个函数实际上都是Function 对象,所以能\n<code>[][\"fill\"][\"constructor\"]</code>这样去获取\n<code>fill</code>的构造函数,换一个其它的函数也可以的比如\n<code>pop</code>、\n<code>map</code>等等。执行\n<code>[][\"fill\"][\"constructor\"](\"alert(1)\")()</code>相当于执行了\n<code>Function('alert(1)')()</code> ,在Function()构造函数中,最后一个实参所表示的文本是函数体,它可以包含任意的JS语句,使用()调用时所以会执行\n<code>alert(1)</code>,而不是字符串\n<code>\"alert(1)\"</code> \n<h2>四、去掉括号</h2> 在前面的例子中都用到了\n<code>()</code>符号,用来进行分割语法,这里在看一个不用\n<code>()</code>的例子。 [crayon-5f4449566e966139772242/] 最后分解成这样的 [crayon-5f4449566e98e759288375/] 可以看到\n<code>Function</code>这里用\n<code><code>符号</code>替换括号。alert(1)这里的括号获取方式是<code>[\"function find() { [native code] }\"][0][13]</code>,这里找了find函数然后转成字符串赋值在数组里面,获取这个字符串的过程是<code>[[]['find']['constructor'].toString()]</code>,然后从数组里面取出来字符串,在截取下标位置是13、14,对应(和)符号。$符号是为了定义函数的参数,不加这个语法在解析的时候会报错。 有括号执行<code>alert(1)</code>字符串长度是976,没有括号字符长度是1289。前面说过目标服务只是把小写字母转成了大写,大写字母和数字还是可以正常使用的,可以使用数字就不用一个个的加了,可以使用大写字母可以把重复出现的字母定义成变量,这样就不用每次去转换了。 把要出现的字符都集中在一个变量里面 [crayon-5f4449566e994714400602/] 然后直接取字符串的下标 [crayon-5f4449566e998306506360/] 执行的时候直接合成一行,整个字符的长度是226 [crayon-5f4449566e99c424905933/] 浏览器会成功执行<code>alert(1)</code> <a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020061307374427_image-20200612161012924.png\"><img class=\"alignnone size-full wp-image-4617\" alt=\"image-20200612161012924\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020061307374427_image-20200612161012924.png\" width=\"1970\" height=\"626\" /></a> &nbsp; <h2>五、总结</h2> 在做测试的时候,首先可以确定下对哪些字符进行了过滤,然后再找其它的方法去替换过滤的字符,比如用</code>符号替换括号,用.join替换+号等等。 &nbsp; \n<span style=\"font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif;font-size: 14px\">&nbsp;</span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;","descriptionType":"text/html","publishedDate":"Sat, 13 Jun 2020 07:38:06 +0000","feedId":6823,"bgimg":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020061307303038_image-20200610213701179.png","linkMd5":"75571ed9cd237c355ef5cdaef6961817","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn81@2020_3/2020/08/24/23-12-31-993_14b3a48e78803a86.webp","destWidth":946,"destHeight":306,"sourceBytes":40415,"destBytes":17554,"author":"天融信安全应急响应中心","articleImgCdnMap":{"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020061307303038_image-20200610213701179.png":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn81@2020_3/2020/08/24/23-12-31-993_14b3a48e78803a86.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020061307313814_image-20200611150442397.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn6@2020_1/2020/08/24/23-12-39-486_8603a2a8e9e664e4.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020061307320523_image-20200611100830533.png":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn72@2020_2/2020/08/24/23-12-42-893_674786e1e3fdd514.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020061307334336_image-20200611140809976.png":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn42@2020_5/2020/08/24/23-12-37-969_0786746dcf5224d6.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020061307345612_image-20200611152248433.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn20@2020_6/2020/08/24/23-12-43-958_eb47f4936620f9fa.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020061307352631_image-20200611165152260.png":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn85@2020_6/2020/08/24/23-12-37-415_b10efde3a7ae2d90.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020061307374427_image-20200612161012924.png":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn68@2020_3/2020/08/24/23-12-40-980_f8ae597b5f4df60a.webp"},"publishedOrCreatedDate":1598310747189},{"createdTime":"2020-08-25 07:12:27","updatedTime":"2020-08-25 07:12:27","title":"v8 cve-2019-5791:模块耦合导致的类型混淆","link":"http://blog.topsec.com.cn/?p=4537","description":"近日，作者研究了chrome v8的一个漏洞cve-2019-5791，cve的漏洞描述是由于不合适的优化可以导致越界读，但实际上该漏洞是由于在语法树遍历阶段和实际生成字节码阶段对死结点的判定不一致导致的类型混淆，成功利用该漏洞可以导致rce。 \n<h3>漏洞环境</h3> 漏洞的修复网址是\n<a href=\"https://chromium.googlesource.com/v8/v8/+/9439a1d2bba439af0ae98717be28050c801492c1\" target=\"_blank\">https://chromium.googlesource.com/v8/v8/+/9439a1d2bba439af0ae98717be28050c801492c1</a>，这里使用的commit是2cf6232948c76f888ff638aabb381112582e88ad。使用如下命令搭建漏洞环境 [crayon-5f4449567822d436286447/] \n<h3>漏洞分析</h3> \n<h4>ast visitor</h4> 首先看一下漏洞修复的描述， [crayon-5f44495678233163458726/] 通过漏洞描述我们大致知道问题出在语法树的遍历阶段，具体点来说就是语法树遍历阶段和字节码生成阶段对死结点的判定不一致。那么现在的问题就是这两个阶段对死结点的判定具体有什么不同，对死结点判定的不一致又会导致什么问题。 在漏洞修复页面查看一下diff的内容看一下修复漏洞改了哪些东西，通过被修改代码的文件名发现只是去掉了语法树遍历阶段的一些代码，加了几行对漏洞分析帮助不大的输出和一个漏洞poc。从这些信息我们可以得到ast visitor处理语法树死结点跳转位置的代码如下， [crayon-5f44495678237778267471/] 从上边ast visitor中处理语法树statements的代码我们可以得到stmt-&gt;IsJump()为真时会跳出循环不去处理(使用自定义的RECURSE方法)之后的代码。注意这里stmt-&gt;IsJump()为真的条件中有一个是IfStatement。 我们跟进ast-traversal-visitor.h，发现这个文件定义了一个继承自AstVisitor的类AstTraversalVisitor，定义了一些处理不同类型语法树结点的操作，而在处理不同类型语法树结点时又使用了RECURSE宏调用相应语法树结点类型的visit方法继续遍历语法树，在遍历节点过程中主要记录语法树深度、检查语法树结点递归时是否栈溢出。 以上是我们可以从漏洞修复得到的信息，但是仅凭这些信息显然没办法了解漏洞的本质。此时我们还需要解决的一个问题是找到v8中真正生成字节码(bytecode-generator)时对死结点处理的代码。 \n<h4>bytecode-generator</h4> 我对v8的源代码不是很熟悉，找bytecode-generator处理语法树死结点的代码我这里用的方法是在patch中ast-traversal-visitor.h代码修改的地方（即b ast-traversal-visitor.h:113）下断点，然后不断栈回溯找到的。最终得到v8生成语法树解析生成字节码的大致过程如下（这里有一个点是v8会把js代码分成top-level和non top-level部分，普通语句和函数声明是top-level，函数定义部分是non top-level。） [crayon-5f4449567823a905385155/] 我们跟进最终生成字节码的函数BytecodeGenerator::GenerateBytecode， [crayon-5f4449567823d413443451/] 主要是进行了栈溢出检查、范围检查、分配寄存器，然后调用GenerateBytecodeBody()真正生成字节码。 [crayon-5f4449567823f660522098/] 在GenerateBytecodeBody()中主要是根据语法树结点类型调用相应visit函数处理相应结点，注意这里VisitStatements(info()-&gt;literal()-&gt;body());调用的是如下代码 [crayon-5f44495678242919256091/] BytecodeGenerator::VisitStatements即实际生成字节码时处理语法树声明类型结点的代码，这里我们发现在实际生成字节码时builder()-&gt;RemainderOfBlockIsDead()条件为真时会跳出循环不去处理之后的代码。这样我们最开始的问题ast visitor和bytecode-generator处理语法树死结点的不同就转化为builder()-&gt;RemainderOfBlockIsDead()条件为真和stmt-&gt;IsJump()条件为真时的不同。 我们找到builder()-&gt;RemainderOfBlockIsDead()的定义, [crayon-5f44495678244772896741/] 对比stmt-&gt;IsJump()的定义 [crayon-5f44495678247133175945/] 对比可以发现stmt-&gt;IsJump()为真的条件多了IfStatement，也就是说ast visitor不会处理if死结点之后的代码，而实际生成字节码时会处理到这部分ast visitor没有检查过的代码。那接下来的问题就是，这么做会导致什么后果呢？ \n<h4>类型混淆的原因</h4> 经过调试发现漏洞版本的v8在处理到形如poc中代码的箭头函数时， [crayon-5f44495678249459573165/] 会调用bytecode-generator.cc BytecodeGenerator::AllocateDeferredConstants，此时栈回溯如下 [crayon-5f4449567824c425268514/] 跟进BytecodeGenerator::AllocateDeferredConstants， [crayon-5f4449567824f924560015/] BytecodeGenerator::AllocateDeferredConstants主要调用对应的方法处理语法树不同类型节点并将当前语法树结点偏移literal.second的元素视为下一个要处理的当前结点类型入口即视为与当前结点类型一致，例如在构造array对象常量时，会调用SetDeferredConstantPoolEntry设置literal.second为当前数组的下一个入口点，即偏移literal.second的位置视为数组类型，这里literal.second为一个索引值。 [crayon-5f44495678252595055859/] 由于ast visitor没有检查if死结点之后代码的数据类型，而bytecode-generator在实际生成字节码时会把语法树当前结点偏移literal.second的位置视为当前节点类型从而最终导致类型混淆。 如poc中的代码在执行到compiler.cc :961 maybe_existing = script-&gt;FindSharedFunctionInfo(isolate, literal);时，此时literal的内容已经是非法的object对象，debug编译的v8类型检查错误导致崩溃。 [crayon-5f44495678254393150573/] \n<h4>patch分析</h4> 我们回过头来看patch修改的内容，去掉了ast visitor中对代码块跳转的判断，即不论当前代码块是否会跳转依旧处理之后的代码，这样虽然可能会多遍历检查一部分语法树结点，但确实是修复了这个漏洞。 [crayon-5f44495678257547545565/] \n<h3>漏洞利用</h3> cve-2019-5791网上公开的只有一个韩国人写的不稳定exp，成功率大概在40%左右，exp地址：\n<a href=\"https://github.com/cosdong7/chromium-v8-exploit\" target=\"_blank\">https://github.com/cosdong7/chromium-v8-exploit</a>。作者水平有限没有构造出比较稳定的exp，下面介绍下这个exp的思路。 因为我们利用cve-2019-5791最终要达到的目的还是任意地址读写，所以要做的就是利用if死结点之后代码的类型混淆构造一个可控的array buffer对象，有了可控的array buffer利用写wasm执行shellcode即可。 [crayon-5f4449567825a439459072/] --print-ast查看一下exp中生成的语法树 [crayon-5f4449567825f817684839/] 注意到run中proxy对象的地址是0x55f76877c100，v1.v2中callFn的地址是0x55f7687838b8，callFn中的元素会覆盖到proxy的位置导致proxy和run类型混淆成array。在run成功被混淆成array类型时我们可以通过run修改proxy的长度得到一个可以越界访问的数组proxy，再通过数组的越界读写利用写wasm执行shellcode即可。这里exp不稳定的原因是run不一定会从jsfunction类型被稳定类型混淆成array类型，导致不一定会得到稳定越界访问的数组proxy。 \n<h3>总结</h3> 通过以上分析发现cve-2019-5791这个漏洞根源还是v8在开发时模块之间耦合出现的问题，而为了减少模块之间数据和操作的耦合度，开发时又不得不加入一些模块去分开处理数据和操作。模块之间耦合时可能存在处理不一致导致安全隐患，这可能为我们挖掘漏洞提供一些思路。 \n<h3>参考链接</h3> exp:\n<a href=\"https://github.com/cosdong7/chromium-v8-exploit\" target=\"_blank\">https://github.com/cosdong7/chromium-v8-exploit</a>","descriptionType":"text/html","publishedDate":"Wed, 15 Apr 2020 11:53:48 +0000","feedId":6823,"bgimg":"","linkMd5":"3b1e2756bd45b0b59ccd2993f672e99c","bgimgJsdelivr":"","metaImg":"","author":"天融信安全应急响应中心","publishedOrCreatedDate":1598310747187},{"createdTime":"2020-08-25 07:12:27","updatedTime":"2020-08-25 07:12:27","title":"WebSphere CVE-2020-4450 反序列化远程代码执行漏洞深度分析","link":"http://blog.topsec.com.cn/?p=4717","description":"<h2>WebSphere简介</h2> WebSphere 是 IBM 的软件平台。它包含了编写、运行和监视全天候的工业强度的随需应变 Web 应用程序和跨平台、跨产品解决方案所需要的整个中间件基础设施，如服务器、服务和工具。WebSphere 提供了可靠、灵活和健壮的软件。 WebSphere Application Server 是该设施的基础，其他所有产品都在它之上运行。WebSphere Process Server 基于 WebSphere Application Server 和 WebSphere Enterprise Service Bus，它为面向服务的\n<a href=\"https://baike.baidu.com/item/%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84\">体系结构</a> (SOA) 的模块化应用程序提供了基础，并支持应用业务规则，以驱动支持业务流程的应用程序。高性能环境还使用 WebSphere Extended Deployment 作为其基础设施的一部分。其他 WebSphere 产品提供了广泛的其他服务。 WebSphere 是一个模块化的平台，基于业界支持的开放标准。可以通过受信任和持久的接口，将现有资产插入 WebSphere，可以继续扩展环境。WebSphere 可以在许多平台上运行，包括 Intel、Linux 和 z/OS。 WebSphere 是随需应变的电子商务时代的最主要的软件平台，可用于企业开发、部署和整合新一代的电子商务应用，如\n<a href=\"https://baike.baidu.com/item/B2B\">B2B</a>，并支持从简单的网页内容发布到企业级事务处理的商业应用。WebSphere 可以创建电子商务站点， 把应用扩展到联合的移动设备， 整合已有的应用并提供自动业务流程。 \n<h2>WSDL简介</h2> WSDL是一个用于精确描述Web服务的文档，WSDL文档是一个遵循WSDL-XML模式的XML文档。WSDL 文档将Web服务定义为服务访问点或端口的集合。在 WSDL 中，由于服务访问点和消息的抽象定义已从具体的服务部署或数据格式绑定中分离出来，因此可以对抽象定义进行再次使用。消息，指对交换数据的抽象描述；而端口类型，指操作的抽象集合。用于特定端口类型的具体协议和数据格式规范构成了可以再次使用的绑定。将Web访问地址与可再次使用的绑定相关联，可以定义一个端口，而端口的集合则定义为服务。 一个WSDL文档通常包含8个重要的元素，即definitions、types、import、message、portType、operation、binding、service元素。这些元素嵌套在definitions元素中，definitions是WSDL文档的根元素。 &nbsp; \n<h2>漏洞原理深度分析</h2> 网上最早披露的漏洞相关详情信息是在\n<a href=\"https://www.thezdi.com/blog/2020/7/20/abusing-java-remote-protocols-in-ibm-websphere\">https://www.thezdi.com/blog/2020/7/20/abusing-java-remote-protocols-in-ibm-websphere</a>此篇博文中进行讲解的。 根据文中的部分描述，此漏洞是由IIOP协议上的反序列化造成，所以我们本地需要起一个IIOP客户端来向WebSphere发送请求从而触发漏洞。 代码如下所示 [crayon-5f4449566b243520042900/] 根据文章中的描述我们来到TxServerInterceptor这个拦截器的receive_request方法中，根据博主的描述在到达反序列化点之前的执行路径如下所示 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707221873_1.png\"><img class=\"alignnone size-full wp-image-4719\" alt=\"1\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707221873_1.png\" width=\"458\" height=\"405\" /></a> 我们先从TxServerInterceptor的receive_request方法开始调试。 我们运行IIOP客户端，向WebSphere发送请求，但是很快就发现执行链中的第二个断点并没有被执行，我们来看下源码 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707233838_2.png\"><img class=\"alignnone size-full wp-image-4720\" alt=\"2\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707233838_2.png\" width=\"1197\" height=\"243\" /></a> 从源码中看出，想要执行到调用TxInterceptorHelper的demarshalContext()方法处要满足两个判断，即\n<code>validOtsContext=true</code> 和\n<code>TxProperties.SINGLE_PROCESS=ture</code> 首先先看validOtsContext是在哪里进行的赋值\n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707240848_3.png\"><img class=\"alignnone size-full wp-image-4721\" alt=\"3\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707240848_3.png\" width=\"898\" height=\"81\" /></a> 可以看到validOtsContext的值为ture 或者false 取决于serviceContext的值是否为空。 经过调试发现不出所料serviceContext的值为空，那么现在就面临第一个问题就是要让程序执行到指定位置，所以我们要想办法为serviceContext赋一个值。 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707243629_4.png\"><img class=\"alignnone size-full wp-image-4722\" alt=\"4\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707243629_4.png\" width=\"438\" height=\"101\" /></a> 所以我们跟入\n<code>serviceContext = ((ExtendedServerRequestInfo)sri).getRequestServiceContext(0)</code>这行代码，深度挖掘这个\n<code>((ExtendedServerRequestInfo)sri).getRequestServiceContext(0)</code>这个方法的返回值我们可不可控，判断一下这个serviceContext的值是否获取自IIOP客户端发送的数据。 下面列出分析serviceContext值来源的调用链 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/202008170725088_5.png\"><img class=\"alignnone size-full wp-image-4723\" alt=\"5\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/202008170725088_5.png\" width=\"449\" height=\"106\" /></a> 最终来到ServiceContextList的getServiceContext方法，一下是该方法的具体实现 [crayon-5f4449566b24d358920826/] 这里的var1是\n<code>((ExtendedServerRequestInfo)sri).getRequestServiceContext(0)</code>的参数也就是0，这里会循环遍历ServiceContexts, 如果其中有一个ServiceContext的id值为0，则会为var2赋值并返回。也就是说我们要想办法让ServiceContext的id值为0。那么此时我们就要看这里的serviceContexts究竟又是在哪里尽心的赋值。 经过对代码的回溯，最终找到了这个为serviceContexts赋值的点，在RequestMessage的read方法中，这里会生成ServiceContext对象并为其id值进行复制，而这里的id值就是又客户端传递来的序列化数据中读取到的，那么就意味着该值可控。 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707254661_6.png\"><img class=\"alignnone size-full wp-image-4724\" alt=\"6\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707254661_6.png\" width=\"836\" height=\"371\" /></a> 那么我们就要回到POC的构造中来思考怎么设置ServiceContext的值。 根据奇安信 观星实验室的iswin大佬给的思路，在将构造好的ServerContext封装进请求数据之前需要先进行一次查询操作，从而让数据初始化 这是初始化之前其中的_context对象是null \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707262149_7.png\"><img class=\"alignnone size-full wp-image-4725\" alt=\"7\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707262149_7.png\" width=\"756\" height=\"428\" /></a> 当执行完一次查询操作后_context对象就成功被初始化了 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/202008170726514_8.png\"><img class=\"alignnone size-full wp-image-4726\" alt=\"8\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/202008170726514_8.png\" width=\"760\" height=\"470\" /></a> 后续的一些操作就主要围着_context对象中的属性来进行操作了，经过一番查找最终锁定了一个可以操作的ServerContext对象的属性， 贴一下该属性所在的位置，这里我精简掉了其余的暂时用不到的属性。 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707272759_9.png\"><img class=\"alignnone size-full wp-image-4727\" alt=\"9\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707272759_9.png\" width=\"666\" height=\"396\" /></a> 这里并没有显示该属性的类型，所以去Connection类中查找对应的属性，确定其类型 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/20200817072759100_10.png\"><img class=\"alignnone size-full wp-image-4728\" alt=\"10\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/20200817072759100_10.png\" width=\"496\" height=\"24\" /></a> 现在我们的目标明确了，就是要向该属性赋一个ServiceConetxt的值，这里就需要用到一系列的反射了,截止到orb属性为止都可以通过简单的反射来进行获取代码如下所示 [crayon-5f4449566b252047340087/] 然后根据iswin大佬文章中给的相关代码 可以通过反射获取orb属性中存储的GIOPImpl对象的getConnection方法，然后通过getConnection方法在获取我们所需要的Connection对象 代码如下 [crayon-5f4449566b255423212984/] 根据之前对ServerContext对象的分析，我们需要将它封装进该Connection对象的connectionContext属性中，所以还需要通过反射获取Connection对象的setConnectionContexts方法，并通过该方法将我们实例化好的ServerContext对象存入其中 代码如下 [crayon-5f4449566b258640326174/] 接下来我们需要实例化一个ServiceContext对象并将其id值设置为0 代码如下 [crayon-5f4449566b25b005096681/] 接下来通过反射获得的setConnectionContexts方法将ServiceContext对象存入Connection对象中 代码如下 [crayon-5f4449566b25d495082590/] 回到WebSphere这边，继续调试看能否执行到TxInterceptorHelper.demarshalContext方法的位置，可以看到此时serviceContext的值不在为空了，validOtsContext的值也变成的true \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707284356_11.png\"><img class=\"alignnone size-full wp-image-4729\" alt=\"11\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707284356_11.png\" width=\"310\" height=\"97\" /></a> 可以看到程序现在可以执行到指定位置了，那我们就继续往下走。 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/202008170729194_12.png\"><img class=\"alignnone size-full wp-image-4730\" alt=\"12\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/202008170729194_12.png\" width=\"1358\" height=\"120\" /></a> 进入到demarshalContext方法后又遇到了第二个问题，就是该方法内会对客户端传来的数据进行读取，并封装入一个PropagationContext对像中 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707295047_13.png\"><img class=\"alignnone size-full wp-image-4731\" alt=\"13\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707295047_13.png\" width=\"835\" height=\"300\" /></a> 这里传入了三个参数然后生成了一个inputStream对象，面对这种问题首先要看这个inputStream读取的数据究竟是哪个参数里面的，所以深入跟进inputStream.read_ulong方法，并最终来到CDRInputStream.read_long方法中，观察代码可知，读取的区域是当前对象的buf属性中的内容， \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707302051_14.png\"><img class=\"alignnone size-full wp-image-4732\" alt=\"14\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707302051_14.png\" width=\"674\" height=\"389\" /></a> 看了这个buf属性后觉得很眼熟，回头看我们在客户端这边实例化ServiceContext对像时传入的result参数和该属性的值一模一样，由此可知我们需要在客户端实例化ServiceContext时在精心构造一下其所需的第二个参数。 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707305894_15.png\"><img class=\"alignnone size-full wp-image-4733\" alt=\"15\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707305894_15.png\" width=\"199\" height=\"58\" /></a> 我们要找到与demarshalContext方法对应的marshalContext方法，然后看看该方法是怎么处理数据的，然后我们照着来就行了。 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707312796_16.png\"><img class=\"alignnone size-full wp-image-4734\" alt=\"16\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707312796_16.png\" width=\"857\" height=\"392\" /></a> 根据上面的格式我们自己稍微修改一下 代码如下 [crayon-5f4449566b261299440404/] 这样就可以成功执行到\n<code>propContext.implementation_specific_data = inputStream.read_any()</code>这行代码。继续跟入 跟到TCUtility类的unmarshalIn方法中，这里遇到了第三个问题，根据\n<a href=\"https://www.thezdi.com/blog/2020/7/20/abusing-java-remote-protocols-in-ibm-websphere\">https://www.thezdi.com/blog/2020/7/20/abusing-java-remote-protocols-in-ibm-websphere</a>此篇博文中的介绍，该方法中有一个switch我们需要走到如下图所示的代码位置 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707321735_17.png\"><img class=\"alignnone size-full wp-image-4735\" alt=\"17\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707321735_17.png\" width=\"919\" height=\"109\" /></a> 但是目前的参数经过选择是走不到此处的，所以就又需要我们来查看此处的参数是否是前端传入并且是否可控了，如果可控那就需要我们继续在前端对数据进行构造。 我们先观察这里传递进来的第一个参数也就是var0 一个InputStream类型的参数 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707330671_18.png\"><img class=\"alignnone size-full wp-image-4736\" alt=\"18\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707330671_18.png\" width=\"761\" height=\"96\" /></a> 代码调回到PropagationContext类的demarshalContext方法，看到出发漏洞的代码如下图所示，其实结合客户端的代码不难知道这是在反序列化我们传递的PropagationContext对象里封装的一个AnyImpl对象那个 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707333530_19.png\"><img class=\"alignnone size-full wp-image-4737\" alt=\"19\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707333530_19.png\" width=\"704\" height=\"29\" /></a> 其实结合客户端的代码不难知道这是在反序列化我们传递的PropagationContext对象里封装的一个AnyImpl对象那个 [crayon-5f4449566b265731758682/] 根据博文中的描述IBM Java SDK中Classloader中禁掉了一些gadget用到的类，TemplatesImpl类不再是可序列化的，而此类又常用于很多公共gadget链中，根据IBM Java SDK中TemplatesImpl类和oracle JDK中TemplatesImpl类的继承关系可以确认这一点。 Oracle JDK中的TemplatesImpl类的继承关系 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707341033_20.png\"><img class=\"alignnone size-full wp-image-4738\" alt=\"20\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707341033_20.png\" width=\"1014\" height=\"162\" /></a> IBM Java SDK中的TemplatesImpl类的继承关系，可以看到没有实现Serializable接口 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707344383_21.png\"><img class=\"alignnone size-full wp-image-4739\" alt=\"21\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707344383_21.png\" width=\"383\" height=\"61\" /></a> IBM SDK不使用Oracle JDK的Java命名和目录接口(JNDI)实现。因此，它不会受到通过RMI/LDAP加载远程类的攻击，以上的种种限制都增加了RCE的难度，我们需要重新在IBM WebSphere中找到一条新的利用链。 大佬们给出了相应的思路，IBM WebSphere中有这么一个类WSIFPort_EJB可以作为入口，此次反序列化RCE利用了WSIFPort_EJB在反序列化时会从前端传入的数据中反序列化初一个Handle对象，并且会调用该对象的getEJBObject()方法。 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707351917_22.png\"><img class=\"alignnone size-full wp-image-4740\" alt=\"22\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707351917_22.png\" width=\"858\" height=\"403\" /></a> 我们需要将WSIFPort_EJB封装入PropagationContext类的implementation_specific_data属性中，也就是AnyImpl对像中，这样在执行\n<code>propContext.implementation_specific_data = inputStream.read_any()</code> 将AnyImpl对象从inputStream中反序列化出来的时候，就会自然而然的去反序列化我们封装进去的WSIFPort_EJB方法从而执行其readObject方法 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/202008170735484_23.png\"><img class=\"alignnone size-full wp-image-4741\" alt=\"23\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/202008170735484_23.png\" width=\"461\" height=\"209\" /></a> 代码如下 [crayon-5f4449566b269708777731/] 修改完后再次运行，发现可以执行到此次反序列化漏洞的入口点，WSIFPort_EJB类的readObject方法了 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707362135_24.png\"><img class=\"alignnone size-full wp-image-4742\" alt=\"24\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707362135_24.png\" width=\"1166\" height=\"320\" /></a> 由于我们选择利用这里的\n<code>handle.getEJBObject()</code>方法，所以需要找到一个实现了Handle接口的类，最终找到了com.ibm.ejs.container.EntityHandle这个类 在谈到EntityHandle这个类之前我们先看下EntityHandle的getEJBObject方法，以下是该方法中的部分代码 [crayon-5f4449566b26c386293861/] 首先我们已知this.homeJNDIName是我们可控的，那么就意味着我们可以指定WebSphere去lookup一个指定rmi或者ldap服务器，我们在服务器上可以放一个RMI Reference 来让WebSphere进行加载。 生成一个可利用EntityHandle的对象需要通过一系列比较复杂的反射，根据Iswin大佬提供的思路，代码如下 [crayon-5f4449566b26f446042202/] 之所以这样写是因为WSIFPort_EJB对象在序列化时会调用自身的fieldEjbObject属性的getHandle方法，并将其返回值进行序列化，所以我们通过反射为fieldEjbObject属性赋值一个EJSWrapper对象，并重写其getHandle方法，在getHandle通过反射实例化EntityHandle对象。 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707371340_25.png\"><img class=\"alignnone size-full wp-image-4743\" alt=\"25\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707371340_25.png\" width=\"997\" height=\"378\" /></a> 回到EntityHandle的getEJBObject方法中，跟进ctx.lookup(this.homeJNDIName) 跟到ObjectFactoryHelper的getObjectInstanceViaContextDotObjectFactories方法里的时候可以看到 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707374253_26.png\"><img class=\"alignnone size-full wp-image-4744\" alt=\"26\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707374253_26.png\" width=\"1887\" height=\"1009\" /></a> 这里看到environment参数是我们可控的，所以在该方法中可以调用我们指定的factory的getObjectInstance方法，可以看到这里的值是在我们在EntityHandle实例化的时候作为参数传递进去了 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707381558_27.png\"><img class=\"alignnone size-full wp-image-4745\" alt=\"27\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707381558_27.png\" width=\"738\" height=\"78\" /></a> 我们传递进去的值是 \n<code>org.apache.wsif.naming.WSIFServiceObjectFactory</code> 所以会调用WSIFServiceObjectFactory类的getObjectInstance方法 我们来看一下该方法的部分代码，这里会对look加载的Reference的信息进行解析，并挨个Reference中的值取出。 [crayon-5f4449566b273174776029/] 来看一下Reference中的代码。 [crayon-5f4449566b276001323093/] 这里先要注意到的一点就是最后有一个\n<code>reference.add(new StringRefAddr(\"className\",\"com.ibm.ws.batch.CounterHome\"))</code>这里牵扯到最终该getObjectInstance函数返回值的类型问题，之前在看EntityHandle的getEJBObject方法时,narrow方法的返回值其实就是ctx.lookup(this.homeJNDIName)的返回值，也就是说ctx.lookup(this.homeJNDIName)返回值的类型是要实现自EJBHome接口 [crayon-5f4449566b279571770233/] WSIFServiceObjectFactory的getObjectInstance方法的返回值是一个Proxy类型，而该Proxy类型在创建时传入的接口参数就是Reference中的\n<code>new StringRefAddr(\"className\",\"com.ibm.ws.batch.CounterHome\")</code>，之所以选择CounterHome作为返回的Proxy对象的接口，CounterHome继承了EJBHome是一个原因，还有一个原因就是该接口中声明了接下来要用到了findFindByPrimaryKey方法 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707384923_28.png\"><img class=\"alignnone size-full wp-image-4746\" alt=\"28\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707384923_28.png\" width=\"793\" height=\"203\" /></a> 讲完了为何选择CounterHome作为返回Proxy对象的接口，接下来getObjectInstance方法中还有这么一段代码 [crayon-5f4449566b27c778159250/] 这里会根据解析的Reference中的wsdlLoc字段的值也就是\n<a href=\"http://172.16.45.1:8000/poc.xml\">http://172.16.45.1:8000/poc.xml</a>去该地址加载制定的xml文件，这个poc.xml就是一个WSDL文件内容如下，关于此WSDL文件的构造可以参考此篇文章\n<a href=\"https://ws.apache.org/wsif/providers/wsdl_extensions/java_extension.html#N10041\">https://ws.apache.org/wsif/providers/wsdl_extensions/java_extension.html#N10041</a> [crayon-5f4449566b27e602660820/] 可以看到Reference中的serviceName，portTypeName，preferredPort等字段的值都可以在这个xml中找到。 最终加载解析完成后会返回一个WSIFServiceImpl类型的值。getObjectInstance执行完成后会根据该WSIFServiceImpl对象生成一个对应的Proxy对象，也就前面提到的实现接口为CounterHome的那个proxy对象。 WSIFServiceObjectFactory的getObjectInstance方法执行完成后返回至EntityHandle的getEJBObject方法中，接下来会执行这里会查询homeClass中是否有个方法名叫findFindByPrimaryKey的方法，如果有的话返回该方法的Method对象，如果没有则返回空，该homeClass变量里的值是我们可控的，在IIOP客户端生成EntityHandle对象时就已经封装好了，其值为com.ibm.ws.batch.CounterHome所以执行结果时返回findFindByPrimaryKey方法的Method对像。 [crayon-5f4449566b282184608632/] 接下来就会执行最关键的一步也就是 [crayon-5f4449566b285174822405/] \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/20200817073930100_29.png\"><img class=\"alignnone size-full wp-image-4747\" alt=\"29\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/20200817073930100_29.png\" width=\"1144\" height=\"302\" /></a> 接下来就会执行到WSIFClientProxy的Invoke方法中然后跟踪到WSIFOperation_Java的executeRequestResponseOperation方法中，该方法中有这么一行代码 [crayon-5f4449566b287997410815/] \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707400441_30.png\"><img class=\"alignnone size-full wp-image-4748\" alt=\"30\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707400441_30.png\" width=\"1126\" height=\"189\" /></a> 可以看到这里就通过放反射的方法调用javax.el.ELProcessor的eval方法了，并将我们我们想要执行的代码传递了进去。至此CVE-2020-445反序列化远程代码执行漏洞分析完毕。 \n<h2>总结</h2> 此次漏洞确实稍显复杂，但是思路其实还是挺清晰的，首先是通过构造发送的数据，让WebSphere先执行到反序列化的点，然后由于IBM JAVA SDK本身的限制，没办法使用RMI Reference或者LDAP Reference 远程加载Class到本地来执行恶意代码的方式了所以 需要从本地找到一个实现了ObjectFactory的类，并且该类在getObjectInstance方法中进行了有风险的操作，这里可以参考Michael Stepankin大佬的这篇文章\n<a href=\"https://www.veracode.com/blog/research/exploiting-jndi-injections-java\">https://www.veracode.com/blog/research/exploiting-jndi-injections-java</a>。所以找到了WSIFServiceObjectFactory，该类解析了Reference并根据Reference中的值去加载和解析我们事先准备好的一个恶意WSDL文件。最终WebSphere根据WSIFServiceObjectFactory的getObjectInstance方法的返回值通过反射的方式调用了javax.el.ELProcessor的eval方法了最终执行了我们的恶意代码。 \n<h2>参考</h2> \n<a href=\"https://www.thezdi.com/blog/2020/7/20/abusing-java-remote-protocols-in-ibm-websphere\">https://www.thezdi.com/blog/2020/7/20/abusing-java-remote-protocols-in-ibm-websphere</a> \n<a href=\"https://mp.weixin.qq.com/s/spDHOaFh_0zxXAD4yPGejQ\">https://mp.weixin.qq.com/s/spDHOaFh_0zxXAD4yPGejQ</a> \n<a href=\"https://www.veracode.com/blog/research/exploiting-jndi-injections-java\">https://www.veracode.com/blog/research/exploiting-jndi-injections-java</a> \n<a href=\"https://ws.apache.org/wsif/providers/wsdl_extensions/java_extension.html\">https://ws.apache.org/wsif/providers/wsdl_extensions/java_extension.html</a> &nbsp; &nbsp;","descriptionType":"text/html","publishedDate":"Mon, 17 Aug 2020 07:57:11 +0000","feedId":6823,"bgimg":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707221873_1.png","linkMd5":"79e408832cb5ec9dc64945d930507031","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn83@2020_5/2020/08/24/23-12-32-138_922f003f66e22948.webp","destWidth":458,"destHeight":405,"sourceBytes":79501,"destBytes":18116,"author":"天融信安全应急响应中心","articleImgCdnMap":{"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707221873_1.png":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn83@2020_5/2020/08/24/23-12-32-138_922f003f66e22948.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707233838_2.png":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn12@2020_4/2020/08/24/23-12-41-668_ff9f6607b5801f1a.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707240848_3.png":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn17@2020_1/2020/08/24/23-12-37-555_12330a7a9a9fd04d.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707243629_4.png":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn97@2020_1/2020/08/24/23-12-38-854_7709a1a589192264.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/202008170725088_5.png":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn37@2020_4/2020/08/24/23-12-39-372_3865b476698ce189.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707254661_6.png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn17@2020_3/2020/08/24/23-12-35-710_27e30206b68bd06f.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707262149_7.png":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn18@2020_2/2020/08/24/23-12-36-832_84b9eb72ba50978d.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/202008170726514_8.png":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn37@2020_4/2020/08/24/23-12-35-980_a83b9825511671d7.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707272759_9.png":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn1@2020_3/2020/08/24/23-12-37-753_6fbedc2fff258c33.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/20200817072759100_10.png":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn77@2020_4/2020/08/24/23-12-37-982_69b43b5f0d213019.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707284356_11.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn60@2020_1/2020/08/24/23-12-42-714_ded324c149a94f9b.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/202008170729194_12.png":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn1@2020_1/2020/08/24/23-12-36-174_5157a5666f19c348.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707295047_13.png":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn93@2020_1/2020/08/24/23-12-36-611_eb3f1089cc2d9636.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707302051_14.png":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn82@2020_4/2020/08/24/23-12-36-556_ec5c60d4ef912acc.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707305894_15.png":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn68@2020_1/2020/08/24/23-12-40-713_5273c34773d3294b.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707312796_16.png":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn66@2020_2/2020/08/24/23-12-38-485_289cc8e210fd33ac.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707321735_17.png":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn3@2020_1/2020/08/24/23-12-43-272_7aca25bb10ea4099.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707330671_18.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn74@2020_5/2020/08/24/23-12-36-089_0d3c9b20d59cc83d.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707333530_19.png":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn35@2020_1/2020/08/24/23-12-42-044_003c1cb5af9006d0.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707341033_20.png":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn92@2020_6/2020/08/24/23-12-43-354_97ea653bc261d2b7.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707344383_21.png":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn27@2020_5/2020/08/24/23-12-43-335_12b2cc3b76ac033f.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707351917_22.png":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn92@2020_6/2020/08/24/23-12-41-553_c387fdbac40dee43.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/202008170735484_23.png":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn17@2020_6/2020/08/24/23-12-39-186_dfd28ddbab1b6668.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707362135_24.png":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn11@2020_1/2020/08/24/23-12-43-361_35ca5703a5f919a0.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707371340_25.png":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn58@2020_5/2020/08/24/23-12-35-601_f7afd2ec140e7be1.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707374253_26.png":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn25@2020_3/2020/08/24/23-12-38-590_ff3224b10efeabb6.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707381558_27.png":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn53@2020_3/2020/08/24/23-12-35-426_25d89f99d9f3dfaf.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707384923_28.png":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn59@2020_6/2020/08/24/23-12-40-340_e2421b56fc1bb1fb.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/20200817073930100_29.png":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn25@2020_1/2020/08/24/23-12-36-290_5cb36d441f052119.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707400441_30.png":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn34@2020_2/2020/08/24/23-12-38-091_13eacf4e138aa5d4.webp"},"publishedOrCreatedDate":1598310747186},{"createdTime":"2020-08-25 07:12:27","updatedTime":"2020-08-25 07:12:27","title":"从CVE-2018-4441看jsc的OOB利用","link":"http://blog.topsec.com.cn/?p=4580","description":"作者最近研究了safari浏览器JavascriptCore引擎的一个OOB漏洞CVE-2018-4441，虽然这是一个比较老的漏洞，但是研究这个漏洞还是能学到不少东西。这里介绍了jsc环境搭建的方法和jsc一些基本调试技巧，详细分析了CVE-2018-4441的漏洞成因和lokihardt堆喷修改数组长度构成OOB的方法，希望读者读完能有所收获。 \n<h2>环境搭建</h2> \n<h3>下载源码</h3> ​ 下载源码使用 \n<div>\n  [crayon-5f44495672264312675201/] \n</div> ​ 如下载的源码较旧需更新源码到最新日期则使用 [crayon-5f4449567226b729987907/] ​ 切换到包含漏洞的commit_hash，这里我没有找到很好的方法，我使用的方法是搜索CVE-2018-4441的修复日期fix_date，然后从webkit的github上搜索小于fix_date的commit，即committer-date:&lt;fix_date，最后使用的是21687be235d506b9712e83c1e6d8e0231cc9adfd。切换的命令如下 \n<div>\n  [crayon-5f4449567226e037392581/] \n</div> 命令的格式为git checkout -b {local_name} {commit_hash}。 \n<h3>编译安装</h3> ​ 安装依赖项 \n<div>\n  [crayon-5f44495672270108861563/] \n</div> 这里如果是在linux下使用时提示缺少pipenv包需要注释掉install-dependencies中函数installDependenciesWithApt里边的pipenv包。 ​ 编译 [crayon-5f44495672273664519428/] \n<h3>调试</h3> \n<h4>js断点</h4> ​ 这里介绍两个使jsc在我们编写的js代码里断下来的技巧（即类似V8的%SystemBreak()）。 \n<h5>方法一</h5> ​ 在编写的js代码里定义断点函数 [crayon-5f44495672275940540651/] 在调试器里设置arrayProtoFuncSlice的断点即\"b arrayProtoFuncSlice\"。这样在js代码里调用b()调试器就会断在这里了。 ​ 这个方法的缺点是如果调试的漏洞会调用到arrayProtoFuncSlice的话可能会对漏洞分析调试产生影响。 \n<h5>方法二</h5> ​ 修改jsc的源码添加如下辅助函数 [crayon-5f44495672278437974257/] 重新编译jsc代码，在js代码里定义如下断点函数 [crayon-5f4449567227b385541175/] ​ 这样在js代码里调用函数b()时调试器就会断在这里了。 \n<h4>对象调试</h4> ​ jsc中也有一些类似v8的%DebugPrint()的辅助调试输出函数，定义在JavaScriptCore/jsc.cpp里。jsc中输出对象的方法如下 \n<div>\n  [crayon-5f4449567227d153654703/] \n</div> \n<h2>漏洞分析</h2> \n<h3>POC</h3> [crayon-5f44495672280265400591/] ​ poc中首先定义了一个CopyOnWriteArrayWithInt32的数组arr， \n<div>\n  [crayon-5f44495672282043803804/] \n</div> 其中jsc的数组存储规则定义在/Source/JavaScriptCore/runtime/ArrayConventions.h里。elements的存储定义如下， [crayon-5f44495672285992890103/] 此时arr的元素下标小于MIN_SPARSE_ARRAY_INDEX（即100000U）会存储在butterfly的storage vector里，butterfly（0x7fe0000e4010） [crayon-5f44495672287880934018/] ​ poc中之后修改了arr的长度为0x100000，此时下标大于MIN_SPARSE_ARRAY_INDEX（100000U）数组类型变为ArrayWithArrayStorage \n<div>\n  [crayon-5f4449567228a587432146/] \n</div> 此时jsc开辟了新的ArrayStorage并把butterfly指向新的ArrayStorage。butterfly(0x7fe0000fe6e8) [crayon-5f4449567228c041931809/] ​ 在执行arr.splice(0, 0x11)，移除0x11个元素后butterfly变为 [crayon-5f4449567228f038669429/] ​ poc中重新设置arr的长度arr.length = 0xfffffff0，此时butterfly变为 [crayon-5f44495672291163154836/] ​ 继续调用arr.splice(0xfffffff0, 0, 1)添加元素时发现jsc运行崩溃 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/20200603013914100_poc_crash.png\"><img class=\"alignnone size-full wp-image-4587\" alt=\"poc_crash\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/20200603013914100_poc_crash.png\" width=\"1235\" height=\"592\" /></a> 崩溃时写的地址为0x7ff0000fe6e8+0xfffffff0*8+0x10=0x7FF8000FE678，0x7FF8000FE678不可写导致崩溃 [crayon-5f44495672294892385448/] \n<h3>漏洞根源分析</h3> ​ poc崩溃时栈回溯如下 [crayon-5f44495672296666677357/] 我分析这个漏洞根本原因的方法是先从ECMAScript查了下Array.prototype.splice方法的实现，然后从崩溃的开始JSC::arrayProtoFuncSplice函数分析。 ​ JSC::arrayProtoFuncSplice的大致逻辑是找到splice调用时的数组起点actualstart并根据参数个数来对数组进行删除元素或添加元素，删除或添加元素使用的是shift或unshift。 ​ poc中第一次调用arr.splice(0, 0x11)删除元素时使用的是shift，并最终由于arr类型为ArrayWithArrayStorage调用到shiftCountWithArrayStorage。 [crayon-5f44495672299096087746/] 在shiftCountWithArrayStorage进行了一些列判断来决定array是否使用ArrayPrototype中的方法处理splice调用中的删除元素操作，若这一系列判断条件全部为假则执行storage-&gt;m_numValuesInVector -= count对splice调用中的数组storage-&gt;vectorLength赋值的操作，实际上这一系列的判断是存在缺陷的，漏洞的根源也就出在这里。产生漏洞的原因即判断条件全部为假时m_numValuesInVector 和array.length我们可控，在随后的分析中我们可以看到这两个值可控会导致添加元素调用unshiftCountWithArrayStorage时实际storage-&gt;hasHoles()为真的数组返回为假，在memmove初始化新的storage时导致OOB。 ​ shiftCountWithArrayStorage中首先判断了hasHoles，jsc中storage-&gt;hasHoles()实际上判断的是*(dword*)(&amp;butterfly+0xc)==*(dword*)(&amp;butterfly-0x4)，即storageLength==vectorLength，\n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020060301422650_hasHoles.png\"><img class=\"alignnone size-full wp-image-4589\" alt=\"hasHoles\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020060301422650_hasHoles.png\" width=\"1183\" height=\"734\" /></a> 此时由于m_numValuesInVector!=storage-&gt;length，hasHoles为真。butterfly(0x7ff0000fe6e8) [crayon-5f4449567229d057293256/] 然后继续判断会调用到holesMustForwardToPrototype [crayon-5f444956722a0836839208/] holesMustForwardToPrototype中主要是遍历了array的原型链并判断了hasIndexedProperties和mayInterceptIndexedAccesses属性，如果这两个属性都为假会返回false。 ​ 回到shiftCountWithArrayStorage的3个判断，即 [crayon-5f444956722a3035574240/] 按照lokihardt的说法由于poc中的arr在原型链中不含索引访问和proxy对象，第一个&amp;&amp;的判断中holesMustForwardToPrototype会为假。其余两个判断也为假。这样就导致shiftCountWithArrayStorage执行到如下代码 \n<div>\n  [crayon-5f444956722a5834757151/] \n</div> poc中的arr-&gt;m_numValuesInVector = 1，这样删除0x11个元素后1-0x11=0xFFFFFFFFFFFFFFF0，保存时取低4字节为0xfffffff0。 ​ poc中执行到arr.splice(0xfffffff0, 0, 1)添加元素时使用的是unshift，并最终由于arr类型为ArrayWithArrayStorage调用到unshiftCountWithArrayStorage。 [crayon-5f444956722a8465609229/] 在unshiftCountWithArrayStorage中首先判断了arr的storage是否hasHoles，如果hasHoles为真则使用ArrayPrototype的其他方法去处理splice调用时删除或添加的元素。 ​ 由于poc中我们修改了arr的length为0xFFFFFFF0，又由于第一次调用splice方法删除元素时在shiftCountWithArrayStorage中不正确地更新了m_numValuesInVector，此时length=m_numValuesInVector=0xFFFFFFF0，storage-&gt;hasHoles()返回为假jsc继续使用unshiftCountWithArrayStorage的方法处理splice调用中添加的元素。此时butterfly(0x7ff0000fe6e8)如下，*(dword*)(&amp;butterfly+0xc)==*(dword*)(&amp;butterfly-0x4) [crayon-5f444956722aa795606906/] ​ unshiftCountWithArrayStorage随后设置了storage的gc状态为推迟，然后重新设置了array-&gt;storage。随后的漏洞利用分析中可以看到这里调用memmove处理新的storage就是导致OOB的根本原因。 [crayon-5f444956722ad665237674/] ​ 总结一下漏洞的逻辑：poc中的arr第一次调用splice删除元素时会调用到shiftCountWithArrayStorage，在shiftCountWithArrayStorage会遍历arr的原型链并存在可能使得原型链判断返回假，导致在shiftCountWithArrayStorage中arr的m_numValuesInVector 被不恰当地更新（本不该执行到这里）；在第二次调用splice添加元素时调用到unshiftCountWithArrayStorage，如果设置arr.length=m_numValuesInVector 导致arr-&gt;hasHoles判断为假，进而在unshiftCountWithArrayStorage中使用memmove更新storage时导致OOB。 \n<h3>patch分析</h3> ​ patch地址\n<a href=\"https://github.com/WebKit/webkit/commit/51a62eb53815863a1bd2dd946d12f383e8695db0\">https://github.com/WebKit/webkit/commit/51a62eb53815863a1bd2dd946d12f383e8695db0</a> ​ patch中去掉了shiftCountWithArrayStorage中遍历原型链的判断，且不管array是否storage-&gt;hasHoles()都使用memmove去更新storage。这样在调用splice删除元素时只要数组vectorLength!=storageLength即hasHoles为真都会使用ArrayPrototype中的方法去处理，不会更新m_numValuesInVector ，这样这个漏洞就从根源上被修复了。 \n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020060301400671_patch.png\"><img class=\"alignnone size-full wp-image-4588\" alt=\"patch\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020060301400671_patch.png\" width=\"1003\" height=\"324\" /></a> ​ 但是这里我没有想明白的一点是为什么修复漏洞之前还要多此一举的调用holesMustForwardToPrototype判断array的原型链，既然不判断既没有漏洞又省去了一次执行判断原型链的时间;)？ \n<h2>漏洞利用</h2> ​ exp来自那个男人，即lokihardt。 ​ 首先整理一下通过这个漏洞我们可控的东西：splice在删除元素时不正确更新的vectorLength、array数组的长度storageLength，在调用splice添加元素时如果vectorLength=storageLength即storage-&gt;hasHoles为真会执行unshiftCountWithArrayStorage中更新storage的流程，并且更新storage的流程memmove时似乎存在利用的可能。 ​ lokihardt的利用思路是通过堆喷利用unshiftCountWithArrayStorage更新storage时memmove修改数组长度构成OOB进而构造addrof、fakeobj原语，构造ArrayWithArrayStorage类型的fakeobj记hax并使hax的butterfly指向ArrayWithDouble类型的victim，通过修改hax[1]即victim.butterfly为addr和victim.prop完成任意地址读写，通过任意地址读写修改wasm模块rwx的内存区来执行shellcode。 \n<h3>heap spray</h3> [crayon-5f444956722b1778930791/] ​ lokihardt堆喷的数组spray[i]为ArrayWithDouble,spray[i+1]为ArrayWithContiguous，且spray[i]和spray[i+1]均为10个元素，这里堆喷的数组元素类型和个数都是固定的。 ​ 首先解释下元素的类型，这里的元素类型是为了方便利用修改长度后的堆喷数组构造fakeobj和addrof原语，测试如下代码 [crayon-5f444956722b4550545436/] ​ a1为ArrayWithDouble类型，jsc中存储如下 [crayon-5f444956722b7175869833/] 可以看到a1即ArrayWithDouble的元素在butterfly的storage中直接存储。 ​ a2为ArrayWithContiguous类型，jsc中存储如下 [crayon-5f444956722ba888279167/] a2中的元素{}在butterfly中以类似object的形式存储，即butterfly中存储的是指向{}内存区的指针，指针指向a2的真正内容。即a2.butterfly-&gt;*p-&gt;content。 ​ 再看一遍lokihardt堆喷的数组，spray[i]为ArrayWithDouble，butterfly:0x7fe00028c078；spray[i+1]为ArrayWithContiguous，butterfly:0x7fe00028c0e8。 [crayon-5f444956722bd434001932/] 构造addrof：spray[i+1][0]=obj，jsc会在0x7fe00028c0e8的位置保存obj的地址指针，在**0x7fe00028c0e8的位置保存obj的内容，这样我们通过读spray[i][14]的内容即可实现读对象的地址。 构造fakeobj：spray[i][14]=addr，此时spray[i+1][0]的位置即为addr，由于spray[i+1]为ArrayWithContiguous类型即spray[i+1][x]中保存的是类似obj的对象，这样spray[i+1][0]即为我们构造的fakeobj对象。 ​ 再解释下堆喷的数组元素个数是10个。要理解堆喷元素个数首先要理解的一点是lokihardt利用的思路，如果我们可以修改堆喷的数组长度使spray[i]可以访问到spray[i+1][xx]就可以构造fakeobj和addrof原语，而正常情况下不修改数组长度spray[i]肯定是不能访问到spray[i+1]的，那么如何修改堆喷数组的长度呢？可能的思路有两个：1.堆喷后手动触发GC调用splice添加元素使调用splice时新添加的storage的butterfly正好落在spray[i]里（即在spray[i]处伪造一个butterfly并修改spray[i]的length），但是这个方法明显的缺陷就是触发GC的时机和新的butterfly太难控制了，控制不当jsc肯定会崩溃；2.调试发现exp中splice添加元素的过程会触发创建新的butterfly的操作，新创建的butterfly会落在最后一个堆喷数组的后面（spray[0x3000].butterfly的后面），配合unshiftCountWithArrayStorage中的memmove可以达到修改堆喷数组长度的效果，这也是这个漏洞为什么会被描述为OOB的根本原因（难道这就是那个男人强大的力量吗;p）。 ​ 第一次arr.splice(0, 0x11)删除元素时arr的存储 \n<div>\n  [crayon-5f444956722c2455108644/] \n</div> ​ 堆喷后调用arr.splice(0x1000,0,1)添加元素，unshiftCountWithArrayStorage处理exp中的arr时会调用到unshiftCountSlowCase，并在tryCreateUninitialized中创建新的storage，大小为88=0x58\n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020060301431012_allocate.png\"><img class=\"alignnone size-full wp-image-4590\" alt=\"allocate\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020060301431012_allocate.png\" width=\"1896\" height=\"718\" /></a> 字节对齐后为0x50，为了防止随后的memmove移动内存过程中破坏内存，堆喷的数组元素个数申请了10个。 ​ unshiftCountWithArrayStorage在创建完新的storage后会初始化新的storage，即memmove的过程，exp中会执行到以下流程\n<a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020060301433427_memmove.png\"><img class=\"alignnone size-full wp-image-4591\" alt=\"memmove\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020060301433427_memmove.png\" width=\"1806\" height=\"716\" /></a> 这里dst=0x7ff000287a78即arr新的butterfly+0x10的位置，src=0x7ff000287a80，n=0x8000即将0x7ff000287a80开始0x8000的内存整体前移8字节，这里会使堆喷数组中某个spray[i][0]的元素覆盖到*(dword*)(&amp;spray[i]-8)的位置，即0x1337覆盖到spray[i]的length域 [crayon-5f444956722c6041272198/] ​ 被覆盖前的堆喷数组 [crayon-5f444956722c9964034660/] ​ 被覆盖后的堆喷数组 [crayon-5f444956722cb059556770/] ​ 到这里我们就可以控制一个可以越界访问的ArrayWithDouble类型数组spray[i]了，通过搜索内存找到length不为0xa的堆喷数组进而可以构造addrof和fakeobj原语。 \n<h3>arbitrary code execute</h3> ​ lokihardt构造任意地址读写原语的思路是构造一个ArrayWithDouble的数组victim，利用漏洞版本jsc相同数据类型structureID并不会随机化并根据i32和f64在内存中存储位置相同构造fake structureID，构造ArrayWithArrayStorage类型的fakeobj记为hax使hax的butterfly指向victim，通过修改hax[1]即victim的butterfly为addr同时修改victim的prop实现任意地址读写。 \n<h4>fake structureID</h4> ​ 构造victim [crayon-5f444956722ce287785756/] victim = [1.1]此时构造的victim的类型为CopyOnWriteArrayWithDouble，victim[0] =3.3重新分配butterfly并修改victim类型为ArrayWithDouble。jsc中这两种类型并不一样。ArrayWithDouble的victim存储如下，可以看到prop存储在*(dword*)(butterfly-0x10)的位置。 [crayon-5f444956722d1883448720/] ​ 构造fakeobj [crayon-5f444956722d4169947145/] ​ 需要注意在jsc中构造fakeobj时需要绕过structureID，structureID相同的才具有相同methodTable并被jsc视为相同类型。漏洞版本的jsc并不会在每次启动时随机化相同数据类型的structureID，这里lokihardt把structureID初始化为了0x64即arr的ArrayWithArrayStorage类型。这里fakeobj的类型是固定的，构造ArrayWithArrayStorage类型hax的原因是ArrayWithArrayStorage的数据直接存储在butterfly里，我们可以访问到的hax[1]即为victim的butterfly。 [crayon-5f444956722d7213283960/] ​ 漏洞版本的jsc在解析如下代码时保存i32和f64内容的位置实际上是相同的（这里我是调试发现的，可能是因为WastefulTypedArray类型？下文有jsc中WastefulTypedArray类型的存储方式解释）。 [crayon-5f444956722da155264332/] 存储结构 [crayon-5f444956722dc203025161/] 这里i32和f64的butterfly存储的都不是它们的实际内容，实际存储i32和f64内容的位置位于*(dword*)(i32+0x10)即0x00007fe8000ff000里 [crayon-5f444956722df379276866/] 而且经过调试可以发现container中保存exp中jscell位置的值比i32中高8位的值大0x10000，所以exp中i32高8位-0x10000。 [crayon-5f444956722e2901519200/] ​ 关于i32和f64使用相同内存存储，在JSArrayBufferView.h中有解释WastefulTypedArray类型的存储，WastefulTypedArray类型的butterfly并不包含vector。 [crayon-5f444956722e6818732409/] \n<h4>arbitrary read/write</h4> ​ 这样构造的container如下 [crayon-5f444956722e8309034804/] 即*(dword*)(container+0x10)的位置为伪造的ArrayWithArrayStorage类型数组，fakeobj(container+0x10)构造butterfly为victim的fakeobj记hax。 [crayon-5f444956722eb959697115/] ​ 这时内存的存储结构为hax.butterfly-&gt;victim，其中ArrayWithArrayStorage类型的数据直接存放在butterfly里，hax的butterfly可以通过hax[1]访问修改，victim.prop也可以修改，由于ArrayWithDouble类型数据的prop存放在*(dword*)(butterfly-0x10)的位置，我们修改hax.butterfly为addr+0x10即可实现addr处的任意地址读写。 [crayon-5f444956722ee153891376/] 这里的addrof和fakeobj的作用实际上是读写相应位置的数和进制转换。 ​ 有了任意地址读写的原语我们就可以通过覆盖wasm的rwx内存执行shellcode。 [crayon-5f444956722f0251621788/] 这里的wasm_code作用是调用wasm模块生成一个用于保存机器码的rwx的页，内容并不重要。js引擎实现wasm的方法一般是先用汇编初始化wasm模块，然后跳转到rwx的页面执行真正用户调用的内容；js引擎在执行用户调用的wasm时需要找到保存这段字节码的页面，rwx的页面地址会或隐式或显示地保存在内存里，我们只需要调试找到rwx页面的地址并覆盖其内容即可。 \n<h2>完整exp</h2> ​ 这里的exp较lokihardt的原版有修改，去掉了lokihardt利用unboxed2和boxed2指向相同内存构造第二个fakeobj和addrof原语的部分（作者认为这一部分或许是lokihardt为了显示OOB这类漏洞的另一种通用构造fakeobj、addrof原语的方法，但是并不是必要的，去掉更容易理解而且并不影响exp的稳定性） lokihardt的原exp： \n<a href=\"https://github.com/rtfingc/cve-repo/blob/master/0x05-lokihardt-webkit-cve-2018-4441-shiftCountWithArrayStorage/exp.js\">https://github.com/rtfingc/cve-repo/blob/master/0x05-lokihardt-webkit-cve-2018-4441-shiftCountWithArrayStorage/exp.js</a> [crayon-5f444956722f3197915060/] \n<h2><a href=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020060301440452_pwned.jpg\"><img class=\"alignnone size-full wp-image-4592\" alt=\"pwned\" src=\"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020060301440452_pwned.jpg\" width=\"1210\" height=\"165\" /></a></h2> \n<h2>参考链接</h2> saelo的jsc利用知识 \n<a href=\"http://phrack.org/papers/attacking_javascript_engines.html\">http://phrack.org/papers/attacking_javascript_engines.html</a> js引擎的shape和inline cache \n<a href=\"https://mathiasbynens.be/notes/shapes-ics\">https://mathiasbynens.be/notes/shapes-ics</a> lokihardt提交的漏洞 \n<a href=\"https://bugs.chromium.org/p/project-zero/issues/detail?id=1685\">https://bugs.chromium.org/p/project-zero/issues/detail?id=1685</a> lokihardt的exp \n<a href=\"https://github.com/rtfingc/cve-repo/blob/master/0x05-lokihardt-webkit-cve-2018-4441-shiftCountWithArrayStorage/exp.js\">https://github.com/rtfingc/cve-repo/blob/master/0x05-lokihardt-webkit-cve-2018-4441-shiftCountWithArrayStorage/exp.js</a>","descriptionType":"text/html","publishedDate":"Wed, 03 Jun 2020 01:49:42 +0000","feedId":6823,"bgimg":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/20200603013914100_poc_crash.png","linkMd5":"e85a79792b1f8a64fab7ae8daf29a466","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn8@2020_5/2020/08/24/23-12-32-597_47c197a6b6127f96.webp","destWidth":1235,"destHeight":592,"sourceBytes":227168,"destBytes":57084,"author":"天融信安全应急响应中心","articleImgCdnMap":{"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/20200603013914100_poc_crash.png":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn8@2020_5/2020/08/24/23-12-32-597_47c197a6b6127f96.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020060301422650_hasHoles.png":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn16@2020_4/2020/08/24/23-12-44-240_2d8702f8f5e75c28.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020060301400671_patch.png":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn42@2020_4/2020/08/24/23-12-35-489_c6266657ac4f468a.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020060301431012_allocate.png":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn13@2020_6/2020/08/24/23-12-36-415_3fb476590907ccdf.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020060301433427_memmove.png":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn33@2020_3/2020/08/24/23-12-37-255_22c6c4ebc1e13397.webp","http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020060301440452_pwned.jpg":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn95@2020_4/2020/08/24/23-12-36-231_9bec84996baa2739.webp"},"publishedOrCreatedDate":1598310747187}],"record":{"createdTime":"2020-08-25 07:12:27","updatedTime":"2020-08-25 07:12:27","feedId":6823,"fetchDate":"Mon, 24 Aug 2020 23:12:27 +0000","fetchMs":2951,"handleMs":4002,"totalMs":26710,"newArticles":0,"totalArticles":10,"status":1,"type":0,"ip":"34.246.118.170","hostName":"europe69.herokuapp.com","requestId":"861468790e684d51bf9d03561c92299f_6823","contentType":"text/xml; charset=UTF-8","totalBytes":6118456,"bgimgsTotal":9,"bgimgsGithubTotal":9,"articlesImgsTotal":168,"articlesImgsGithubTotal":167,"successGithubMap":{"myreaderx14":6,"myreaderx8":5,"myreaderx7":6,"myreaderx15":5,"myreaderx6":6,"myreaderx16":7,"myreaderx32":6,"myreaderx4":6,"myreaderx10":6,"myreaderx33":6,"myreaderx11":6,"myreaderx3":6,"myreaderx12":6,"myreaderx2":6,"myreaderx1":6,"myreaderx13":6,"myreaderx30":6,"myreaderx31":5,"myreaderx18":5,"myreaderx19":5,"myreaderx":4,"myreaderx25":6,"myreaderx27":6,"myreaderx21":6,"myreaderx22":6,"myreaderx23":6,"myreaderx24":6,"myreaderx5oss":5,"myreaderx29":6},"failGithubMap":{}},"feed":{"createdTime":"2020-08-25 04:33:16","updatedTime":"2020-08-25 04:33:16","id":6823,"name":"天融信阿尔法实验室","url":"http://blog.topsec.com.cn/feed/","subscriber":null,"website":null,"icon":"http://blog.topsec.com.cn/favicon.ico","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx63/cdn14@2020_4/2020/08/24/23-12-26-281_844bdece7e079561.jpg","description":"研究与分享","weekly":null,"link":"http://blog.topsec.com.cn"},"noPictureArticleList":[{"createdTime":"2020-08-25 07:12:46","updatedTime":"2020-08-25 07:12:46","id":null,"feedId":6823,"linkMd5":"c4a6286ac708b00b2f80221bd242a8e1"}],"tmpCommonImgCdnBytes":397040,"tmpBodyImgCdnBytes":5721416,"tmpBgImgCdnBytes":0,"extra4":{"start":1598310739650,"total":0,"statList":[{"spend":3538,"msg":"获取xml内容"},{"spend":4002,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":11822,"msg":"正文链接上传到cdn"}]},"extra5":168,"extra6":168,"extra7ImgCdnFailResultVector":[{"code":1,"isDone":false,"source":"http:///Users/master/Desktop/JAVA%20RMI%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%9F%A5%E8%AF%86%E8%AE%B2%E8%A7%A3/3.png?lastModify=1588990443","sourceStatusCode":0,"sourceBytes":0,"destBytes":0,"feedId":6823,"totalSpendMs":79,"convertSpendMs":0,"createdTime":"2020-08-25 07:12:38","host":"us-021*","referer":"http://blog.topsec.com.cn/?p=4542","linkMd5ListStr":"c4a6286ac708b00b2f80221bd242a8e1","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[0],"sourceSize":"0","destSize":"0"},{"code":1,"isDone":false,"source":"http:///Users/master/Desktop/JAVA%20RMI%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%9F%A5%E8%AF%86%E8%AE%B2%E8%A7%A3/3.png?lastModify=1588990443","sourceStatusCode":0,"sourceBytes":0,"destBytes":0,"feedId":6823,"totalSpendMs":34,"convertSpendMs":0,"createdTime":"2020-08-25 07:12:38","host":"europe-22*","referer":"http://blog.topsec.com.cn/?p=4542","linkMd5ListStr":"c4a6286ac708b00b2f80221bd242a8e1","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[0],"sourceSize":"0","destSize":"0"}],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://europe-56.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-032.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://us-037.herokuapp.com/":{"failCount":0,"successCount":5,"resultList":[200,200,200,200,200]},"http://europe68.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-007.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://europe63.herokuapp.com/":{"failCount":0,"successCount":5,"resultList":[200,200,200,200,200]},"http://us-028.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-015.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://europe-60.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-024.herokuapp.com/":{"failCount":0,"successCount":4,"resultList":[200,200,200,200]},"http://us-52.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://us-011.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://us-038.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-025.herokuapp.com/":{"failCount":0,"successCount":6,"resultList":[200,200,200,200,200,200]},"http://us-54.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://us-017.herokuapp.com/":{"failCount":0,"successCount":7,"resultList":[200,200,200,200,200,200,200]},"http://europe21.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-033.herokuapp.com/":{"failCount":0,"successCount":5,"resultList":[200,200,200,200,200]},"http://europe64.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://us-003.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://europe-22.herokuapp.com/":{"failCount":1,"successCount":6,"resultList":[200,200,200,200,0,200,200]},"http://us-029.herokuapp.com/":{"failCount":0,"successCount":5,"resultList":[200,200,200,200,200]},"http://us-013.herokuapp.com/":{"failCount":0,"successCount":8,"resultList":[200,200,200,200,200,200,200,200]},"http://europe-24.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://us-55.herokuapp.com/":{"failCount":0,"successCount":5,"resultList":[200,200,200,200,200]},"http://us-021.herokuapp.com/":{"failCount":1,"successCount":4,"resultList":[200,200,200,0,200]},"http://us-005.herokuapp.com/":{"failCount":0,"successCount":7,"resultList":[200,200,200,200,200,200,200]},"http://us-034.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://europe-58.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://europe66.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-022.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://us-009.herokuapp.com/":{"failCount":0,"successCount":8,"resultList":[200,200,200,200,200,200,200,200]},"http://us-030.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-026.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-001.herokuapp.com/":{"failCount":0,"successCount":8,"resultList":[200,200,200,200,200,200,200,200]},"http://europe62.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://us-036.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-019.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://europe-59.herokuapp.com/":{"failCount":0,"successCount":6,"resultList":[200,200,200,200,200,200]},"http://europe67.herokuapp.com/":{"failCount":0,"successCount":5,"resultList":[200,200,200,200,200]},"http://us-51.herokuapp.com/":{"failCount":0,"successCount":5,"resultList":[200,200,200,200,200]},"http://us-040.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705434573_1.png","sourceStatusCode":200,"destWidth":1060,"destHeight":824,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn5@2020_5/2020/08/24/23-12-31-986_ba573eec561b8eb1.webp","sourceBytes":15546,"destBytes":26626,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2545,"convertSpendMs":30,"createdTime":"2020-08-25 07:12:30","host":"us-032*","referer":"http://blog.topsec.com.cn/?p=4621","linkMd5ListStr":"476e4fbc84b253377a7a31ae1bcf446e,476e4fbc84b253377a7a31ae1bcf446e","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"15.2 KB","destSize":"26 KB","compressRate":"171.3%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707221873_1.png","sourceStatusCode":200,"destWidth":458,"destHeight":405,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn83@2020_5/2020/08/24/23-12-32-138_922f003f66e22948.webp","sourceBytes":79501,"destBytes":18116,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2754,"convertSpendMs":14,"createdTime":"2020-08-25 07:12:30","host":"us-040*","referer":"http://blog.topsec.com.cn/?p=4717","linkMd5ListStr":"79e408832cb5ec9dc64945d930507031,79e408832cb5ec9dc64945d930507031","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"77.6 KB","destSize":"17.7 KB","compressRate":"22.8%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020060409411672_image-20200602134009099.png","sourceStatusCode":200,"destWidth":1310,"destHeight":444,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn89@2020_3/2020/08/24/23-12-32-336_39460810391b570d.webp","sourceBytes":112389,"destBytes":40726,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2858,"convertSpendMs":37,"createdTime":"2020-08-25 07:12:30","host":"us-029*","referer":"http://blog.topsec.com.cn/?p=4598","linkMd5ListStr":"c7c8cbffef287b621a1ce720f021a330,c7c8cbffef287b621a1ce720f021a330","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"109.8 KB","destSize":"39.8 KB","compressRate":"36.2%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020061307303038_image-20200610213701179.png","sourceStatusCode":200,"destWidth":946,"destHeight":306,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn81@2020_3/2020/08/24/23-12-31-993_14b3a48e78803a86.webp","sourceBytes":40415,"destBytes":17554,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2949,"convertSpendMs":13,"createdTime":"2020-08-25 07:12:30","host":"us-51*","referer":"http://blog.topsec.com.cn/?p=4610","linkMd5ListStr":"75571ed9cd237c355ef5cdaef6961817,75571ed9cd237c355ef5cdaef6961817","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"39.5 KB","destSize":"17.1 KB","compressRate":"43.4%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020050902115152_3.png","sourceStatusCode":200,"destWidth":902,"destHeight":956,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn1@2020_4/2020/08/24/23-12-32-144_f700ed81f28cd703.webp","sourceBytes":97814,"destBytes":33786,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":3145,"convertSpendMs":39,"createdTime":"2020-08-25 07:12:30","host":"europe67*","referer":"http://blog.topsec.com.cn/?p=4542","linkMd5ListStr":"c4a6286ac708b00b2f80221bd242a8e1,c4a6286ac708b00b2f80221bd242a8e1","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"95.5 KB","destSize":"33 KB","compressRate":"34.5%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020051905052078_6.png","sourceStatusCode":200,"destWidth":1676,"destHeight":516,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn93@2020_2/2020/08/24/23-12-32-433_f2c62420edda7859.webp","sourceBytes":142432,"destBytes":47216,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2990,"convertSpendMs":62,"createdTime":"2020-08-25 07:12:30","host":"us-017*","referer":"http://blog.topsec.com.cn/?p=4560","linkMd5ListStr":"0fb27ee4653525d5e82371e8bcbd7f07,0fb27ee4653525d5e82371e8bcbd7f07","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"139.1 KB","destSize":"46.1 KB","compressRate":"33.1%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308492664_2a482f1a4f410547c0ac9a3b7876dffa.png","sourceStatusCode":200,"destWidth":644,"destHeight":840,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn97@2020_1/2020/08/24/23-12-32-586_aead447289c473c8.webp","sourceBytes":76339,"destBytes":32100,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":3120,"convertSpendMs":43,"createdTime":"2020-08-25 07:12:30","host":"us-005*","referer":"http://blog.topsec.com.cn/?p=4663","linkMd5ListStr":"c1a394330c96e85f83b22a5aaf5f58b1,c1a394330c96e85f83b22a5aaf5f58b1","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"74.5 KB","destSize":"31.3 KB","compressRate":"42%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/20200603013914100_poc_crash.png","sourceStatusCode":200,"destWidth":1235,"destHeight":592,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn8@2020_5/2020/08/24/23-12-32-597_47c197a6b6127f96.webp","sourceBytes":227168,"destBytes":57084,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":3177,"convertSpendMs":50,"createdTime":"2020-08-25 07:12:30","host":"us-033*","referer":"http://blog.topsec.com.cn/?p=4580","linkMd5ListStr":"e85a79792b1f8a64fab7ae8daf29a466,e85a79792b1f8a64fab7ae8daf29a466","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"221.8 KB","destSize":"55.7 KB","compressRate":"25.1%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081913015412_image-20200818174847155.png","sourceStatusCode":200,"destWidth":1646,"destHeight":1254,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn13@2020_4/2020/08/24/23-12-33-420_353098d6d81f3ed3.webp","sourceBytes":340596,"destBytes":123832,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":4199,"convertSpendMs":199,"createdTime":"2020-08-25 07:12:30","host":"us-021*","referer":"http://blog.topsec.com.cn/?p=4750","linkMd5ListStr":"697e4db0fc47aec79bcda8a0648cab3f,697e4db0fc47aec79bcda8a0648cab3f","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"332.6 KB","destSize":"120.9 KB","compressRate":"36.4%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308481132_95ac194ec336d6e610097b3b038b254b.png","sourceStatusCode":200,"destWidth":689,"destHeight":127,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn66@2020_2/2020/08/24/23-12-35-301_46311015814c1ea6.webp","sourceBytes":16458,"destBytes":11588,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":1718,"convertSpendMs":6,"createdTime":"2020-08-25 07:12:34","host":"europe67*","referer":"http://blog.topsec.com.cn/?p=4663","linkMd5ListStr":"c1a394330c96e85f83b22a5aaf5f58b1","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"16.1 KB","destSize":"11.3 KB","compressRate":"70.4%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308482014_2757daa1052b75266d159af6096ed25e.png","sourceStatusCode":200,"destWidth":1195,"destHeight":89,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn62@2020_4/2020/08/24/23-12-35-418_cbbfd2be5076ead1.webp","sourceBytes":22519,"destBytes":13948,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":1662,"convertSpendMs":23,"createdTime":"2020-08-25 07:12:34","host":"us-005*","referer":"http://blog.topsec.com.cn/?p=4663","linkMd5ListStr":"c1a394330c96e85f83b22a5aaf5f58b1","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"22 KB","destSize":"13.6 KB","compressRate":"61.9%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705453753_19.png","sourceStatusCode":200,"destWidth":1621,"destHeight":90,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn22@2020_1/2020/08/24/23-12-35-465_f6e1873ba33d8543.webp","sourceBytes":32723,"destBytes":17026,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":1644,"convertSpendMs":16,"createdTime":"2020-08-25 07:12:34","host":"us-017*","referer":"http://blog.topsec.com.cn/?p=4621","linkMd5ListStr":"476e4fbc84b253377a7a31ae1bcf446e","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"32 KB","destSize":"16.6 KB","compressRate":"52%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020060301400671_patch.png","sourceStatusCode":200,"destWidth":1003,"destHeight":324,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn42@2020_4/2020/08/24/23-12-35-489_c6266657ac4f468a.webp","sourceBytes":35588,"destBytes":29846,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":1664,"convertSpendMs":42,"createdTime":"2020-08-25 07:12:34","host":"us-021*","referer":"http://blog.topsec.com.cn/?p=4580","linkMd5ListStr":"e85a79792b1f8a64fab7ae8daf29a466","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"34.8 KB","destSize":"29.1 KB","compressRate":"83.9%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707381558_27.png","sourceStatusCode":200,"destWidth":738,"destHeight":78,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn53@2020_3/2020/08/24/23-12-35-426_25d89f99d9f3dfaf.webp","sourceBytes":20401,"destBytes":9716,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":1765,"convertSpendMs":5,"createdTime":"2020-08-25 07:12:34","host":"us-029*","referer":"http://blog.topsec.com.cn/?p=4717","linkMd5ListStr":"79e408832cb5ec9dc64945d930507031","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"19.9 KB","destSize":"9.5 KB","compressRate":"47.6%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707371340_25.png","sourceStatusCode":200,"destWidth":997,"destHeight":378,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn58@2020_5/2020/08/24/23-12-35-601_f7afd2ec140e7be1.webp","sourceBytes":63701,"destBytes":27458,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":1918,"convertSpendMs":26,"createdTime":"2020-08-25 07:12:34","host":"us-017*","referer":"http://blog.topsec.com.cn/?p=4717","linkMd5ListStr":"79e408832cb5ec9dc64945d930507031","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"62.2 KB","destSize":"26.8 KB","compressRate":"43.1%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020050902183172_8.png","sourceStatusCode":200,"destWidth":1336,"destHeight":354,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn30@2020_6/2020/08/24/23-12-35-546_be8d42fd1d0d1e29.webp","sourceBytes":78715,"destBytes":30146,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2072,"convertSpendMs":23,"createdTime":"2020-08-25 07:12:34","host":"europe67*","referer":"http://blog.topsec.com.cn/?p=4542","linkMd5ListStr":"c4a6286ac708b00b2f80221bd242a8e1","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"76.9 KB","destSize":"29.4 KB","compressRate":"38.3%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707254661_6.png","sourceStatusCode":200,"destWidth":836,"destHeight":371,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn17@2020_3/2020/08/24/23-12-35-710_27e30206b68bd06f.webp","sourceBytes":54477,"destBytes":21360,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":1941,"convertSpendMs":19,"createdTime":"2020-08-25 07:12:34","host":"us-029*","referer":"http://blog.topsec.com.cn/?p=4717","linkMd5ListStr":"79e408832cb5ec9dc64945d930507031","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"53.2 KB","destSize":"20.9 KB","compressRate":"39.2%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705455279_24.png","sourceStatusCode":200,"destWidth":1437,"destHeight":312,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn25@2020_2/2020/08/24/23-12-35-798_e44560543bd1a6f3.webp","sourceBytes":93350,"destBytes":40616,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2114,"convertSpendMs":98,"createdTime":"2020-08-25 07:12:34","host":"us-005*","referer":"http://blog.topsec.com.cn/?p=4621","linkMd5ListStr":"476e4fbc84b253377a7a31ae1bcf446e","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"91.2 KB","destSize":"39.7 KB","compressRate":"43.5%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308480847_87ac3c7ff9cb6348d836cf02a97a5f7e.png","sourceStatusCode":200,"destWidth":772,"destHeight":89,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn70@2020_4/2020/08/24/23-12-36-067_18df82f1fafcb0a8.webp","sourceBytes":10560,"destBytes":6950,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2157,"convertSpendMs":5,"createdTime":"2020-08-25 07:12:34","host":"us-001*","referer":"http://blog.topsec.com.cn/?p=4663","linkMd5ListStr":"c1a394330c96e85f83b22a5aaf5f58b1","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"10.3 KB","destSize":"6.8 KB","compressRate":"65.8%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/202008170726514_8.png","sourceStatusCode":200,"destWidth":760,"destHeight":470,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn37@2020_4/2020/08/24/23-12-35-980_a83b9825511671d7.webp","sourceBytes":115751,"destBytes":35332,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2184,"convertSpendMs":20,"createdTime":"2020-08-25 07:12:34","host":"us-033*","referer":"http://blog.topsec.com.cn/?p=4717","linkMd5ListStr":"79e408832cb5ec9dc64945d930507031","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"113 KB","destSize":"34.5 KB","compressRate":"30.5%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020050902144795_1.png","sourceStatusCode":200,"destWidth":1074,"destHeight":252,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn37@2020_3/2020/08/24/23-12-36-141_b3284fbf01563304.webp","sourceBytes":42892,"destBytes":19672,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2292,"convertSpendMs":18,"createdTime":"2020-08-25 07:12:34","host":"us-013*","referer":"http://blog.topsec.com.cn/?p=4542","linkMd5ListStr":"c4a6286ac708b00b2f80221bd242a8e1","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"41.9 KB","destSize":"19.2 KB","compressRate":"45.9%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707330671_18.png","sourceStatusCode":200,"destWidth":761,"destHeight":96,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn74@2020_5/2020/08/24/23-12-36-089_0d3c9b20d59cc83d.webp","sourceBytes":18292,"destBytes":7408,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2459,"convertSpendMs":6,"createdTime":"2020-08-25 07:12:34","host":"europe63*","referer":"http://blog.topsec.com.cn/?p=4717","linkMd5ListStr":"79e408832cb5ec9dc64945d930507031","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"17.9 KB","destSize":"7.2 KB","compressRate":"40.5%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705445576_7.png","sourceStatusCode":200,"destWidth":324,"destHeight":194,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn45@2020_1/2020/08/24/23-12-36-118_3a903c5891a3a223.webp","sourceBytes":16490,"destBytes":5806,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2461,"convertSpendMs":5,"createdTime":"2020-08-25 07:12:34","host":"europe63*","referer":"http://blog.topsec.com.cn/?p=4621","linkMd5ListStr":"476e4fbc84b253377a7a31ae1bcf446e","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"16.1 KB","destSize":"5.7 KB","compressRate":"35.2%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/202008170729194_12.png","sourceStatusCode":200,"destWidth":1358,"destHeight":120,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn1@2020_1/2020/08/24/23-12-36-174_5157a5666f19c348.webp","sourceBytes":30705,"destBytes":17536,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2349,"convertSpendMs":10,"createdTime":"2020-08-25 07:12:34","host":"us-013*","referer":"http://blog.topsec.com.cn/?p=4717","linkMd5ListStr":"79e408832cb5ec9dc64945d930507031","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"30 KB","destSize":"17.1 KB","compressRate":"57.1%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308485654_c7b24c882c04cc7e6c42a423176985be.png","sourceStatusCode":200,"destWidth":565,"destHeight":262,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn86@2020_6/2020/08/24/23-12-36-073_6d65256224c3e0b9.webp","sourceBytes":31643,"destBytes":11914,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2502,"convertSpendMs":10,"createdTime":"2020-08-25 07:12:34","host":"europe-22*","referer":"http://blog.topsec.com.cn/?p=4663","linkMd5ListStr":"c1a394330c96e85f83b22a5aaf5f58b1","githubUser":"myreaderx14","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"30.9 KB","destSize":"11.6 KB","compressRate":"37.7%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020060301440452_pwned.jpg","sourceStatusCode":200,"destWidth":1210,"destHeight":165,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn95@2020_4/2020/08/24/23-12-36-231_9bec84996baa2739.webp","sourceBytes":34608,"destBytes":14458,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2362,"convertSpendMs":9,"createdTime":"2020-08-25 07:12:34","host":"us-025*","referer":"http://blog.topsec.com.cn/?p=4580","linkMd5ListStr":"e85a79792b1f8a64fab7ae8daf29a466","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"33.8 KB","destSize":"14.1 KB","compressRate":"41.8%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020060409420862_image-20200602140603087.png","sourceStatusCode":200,"destWidth":1752,"destHeight":990,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn73@2020_6/2020/08/24/23-12-36-097_237391091a0e6d0d.webp","sourceBytes":270247,"destBytes":84736,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2465,"convertSpendMs":90,"createdTime":"2020-08-25 07:12:34","host":"us-033*","referer":"http://blog.topsec.com.cn/?p=4598","linkMd5ListStr":"c7c8cbffef287b621a1ce720f021a330","githubUser":"myreaderx23","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"263.9 KB","destSize":"82.8 KB","compressRate":"31.4%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705454512_22.png","sourceStatusCode":200,"destWidth":1420,"destHeight":148,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn89@2020_3/2020/08/24/23-12-36-054_4cea15c8258d7c72.webp","sourceBytes":37831,"destBytes":15944,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2526,"convertSpendMs":11,"createdTime":"2020-08-25 07:12:34","host":"europe-59*","referer":"http://blog.topsec.com.cn/?p=4621","linkMd5ListStr":"476e4fbc84b253377a7a31ae1bcf446e","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"36.9 KB","destSize":"15.6 KB","compressRate":"42.1%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308492991_2d3c790ca89e2d2ed8999c4f170ffe92.png","sourceStatusCode":200,"destWidth":1044,"destHeight":183,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn34@2020_2/2020/08/24/23-12-36-268_794d8176e72963e9.webp","sourceBytes":21585,"destBytes":13150,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2412,"convertSpendMs":8,"createdTime":"2020-08-25 07:12:34","host":"us-025*","referer":"http://blog.topsec.com.cn/?p=4663","linkMd5ListStr":"c1a394330c96e85f83b22a5aaf5f58b1","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"21.1 KB","destSize":"12.8 KB","compressRate":"60.9%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/202007230848534_b856db3404b87d708cd00edfbbd9ee30.png","sourceStatusCode":200,"destWidth":488,"destHeight":163,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn77@2020_4/2020/08/24/23-12-36-381_d5862be34b36722e.webp","sourceBytes":15694,"destBytes":9958,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2612,"convertSpendMs":11,"createdTime":"2020-08-25 07:12:34","host":"us-021*","referer":"http://blog.topsec.com.cn/?p=4663","linkMd5ListStr":"c1a394330c96e85f83b22a5aaf5f58b1","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"15.3 KB","destSize":"9.7 KB","compressRate":"63.5%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705455595_25.png","sourceStatusCode":200,"destWidth":764,"destHeight":92,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn10@2020_6/2020/08/24/23-12-36-119_7a711651743054a4.webp","sourceBytes":19816,"destBytes":8818,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2798,"convertSpendMs":5,"createdTime":"2020-08-25 07:12:34","host":"europe63*","referer":"http://blog.topsec.com.cn/?p=4621","linkMd5ListStr":"476e4fbc84b253377a7a31ae1bcf446e","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"19.4 KB","destSize":"8.6 KB","compressRate":"44.5%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/20200817073930100_29.png","sourceStatusCode":200,"destWidth":1144,"destHeight":302,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn25@2020_1/2020/08/24/23-12-36-290_5cb36d441f052119.webp","sourceBytes":72043,"destBytes":22736,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2811,"convertSpendMs":17,"createdTime":"2020-08-25 07:12:34","host":"europe-59*","referer":"http://blog.topsec.com.cn/?p=4717","linkMd5ListStr":"79e408832cb5ec9dc64945d930507031","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"70.4 KB","destSize":"22.2 KB","compressRate":"31.6%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020051905054613_7.png","sourceStatusCode":200,"destWidth":1390,"destHeight":478,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn61@2020_5/2020/08/24/23-12-36-471_6402be99a04fcc09.webp","sourceBytes":94879,"destBytes":33090,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2687,"convertSpendMs":36,"createdTime":"2020-08-25 07:12:34","host":"us-025*","referer":"http://blog.topsec.com.cn/?p=4560","linkMd5ListStr":"0fb27ee4653525d5e82371e8bcbd7f07","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"92.7 KB","destSize":"32.3 KB","compressRate":"34.9%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705451484_12.png","sourceStatusCode":200,"destWidth":823,"destHeight":344,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn42@2020_4/2020/08/24/23-12-36-538_1513c5d88fd54033.webp","sourceBytes":59835,"destBytes":16450,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2721,"convertSpendMs":13,"createdTime":"2020-08-25 07:12:34","host":"us-001*","referer":"http://blog.topsec.com.cn/?p=4621","linkMd5ListStr":"476e4fbc84b253377a7a31ae1bcf446e","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"58.4 KB","destSize":"16.1 KB","compressRate":"27.5%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020060301431012_allocate.png","sourceStatusCode":200,"destWidth":1896,"destHeight":718,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn13@2020_6/2020/08/24/23-12-36-415_3fb476590907ccdf.webp","sourceBytes":303963,"destBytes":104174,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2745,"convertSpendMs":87,"createdTime":"2020-08-25 07:12:34","host":"us-51*","referer":"http://blog.topsec.com.cn/?p=4580","linkMd5ListStr":"e85a79792b1f8a64fab7ae8daf29a466","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"296.8 KB","destSize":"101.7 KB","compressRate":"34.3%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707302051_14.png","sourceStatusCode":200,"destWidth":674,"destHeight":389,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn82@2020_4/2020/08/24/23-12-36-556_ec5c60d4ef912acc.webp","sourceBytes":57258,"destBytes":22468,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2743,"convertSpendMs":44,"createdTime":"2020-08-25 07:12:34","host":"us-009*","referer":"http://blog.topsec.com.cn/?p=4717","linkMd5ListStr":"79e408832cb5ec9dc64945d930507031","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"55.9 KB","destSize":"21.9 KB","compressRate":"39.2%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707295047_13.png","sourceStatusCode":200,"destWidth":835,"destHeight":300,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn93@2020_1/2020/08/24/23-12-36-611_eb3f1089cc2d9636.webp","sourceBytes":56557,"destBytes":28132,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2768,"convertSpendMs":16,"createdTime":"2020-08-25 07:12:34","host":"us-024*","referer":"http://blog.topsec.com.cn/?p=4717","linkMd5ListStr":"79e408832cb5ec9dc64945d930507031","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"55.2 KB","destSize":"27.5 KB","compressRate":"49.7%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020060409444459_image-20200602154727162.png","sourceStatusCode":200,"destWidth":1940,"destHeight":588,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn49@2020_3/2020/08/24/23-12-36-439_d529b2fc10ae2093.webp","sourceBytes":262683,"destBytes":98034,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2816,"convertSpendMs":90,"createdTime":"2020-08-25 07:12:34","host":"us-51*","referer":"http://blog.topsec.com.cn/?p=4598","linkMd5ListStr":"c7c8cbffef287b621a1ce720f021a330","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"256.5 KB","destSize":"95.7 KB","compressRate":"37.3%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707262149_7.png","sourceStatusCode":200,"destWidth":756,"destHeight":428,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn18@2020_2/2020/08/24/23-12-36-832_84b9eb72ba50978d.webp","sourceBytes":103469,"destBytes":31794,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":3068,"convertSpendMs":96,"createdTime":"2020-08-25 07:12:34","host":"us-009*","referer":"http://blog.topsec.com.cn/?p=4717","linkMd5ListStr":"79e408832cb5ec9dc64945d930507031","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"101 KB","destSize":"31 KB","compressRate":"30.7%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081913052284_image-20200818190923090.png","sourceStatusCode":200,"destWidth":1758,"destHeight":452,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn46@2020_1/2020/08/24/23-12-36-916_a4ed381db4b0ebf5.webp","sourceBytes":114922,"destBytes":42342,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":3224,"convertSpendMs":192,"createdTime":"2020-08-25 07:12:34","host":"us-009*","referer":"http://blog.topsec.com.cn/?p=4750","linkMd5ListStr":"697e4db0fc47aec79bcda8a0648cab3f","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"112.2 KB","destSize":"41.3 KB","compressRate":"36.8%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020051905064796_2.png","sourceStatusCode":200,"destWidth":1238,"destHeight":1010,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn30@2020_6/2020/08/24/23-12-36-969_5711d89d9d40f2c0.webp","sourceBytes":208883,"destBytes":73876,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":3269,"convertSpendMs":69,"createdTime":"2020-08-25 07:12:34","host":"us-037*","referer":"http://blog.topsec.com.cn/?p=4560","linkMd5ListStr":"0fb27ee4653525d5e82371e8bcbd7f07","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"204 KB","destSize":"72.1 KB","compressRate":"35.4%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308493658_3ee4112a8a2ea2b7000c82d287fb3201.png","sourceStatusCode":200,"destWidth":829,"destHeight":206,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn78@2020_4/2020/08/24/23-12-37-141_9d5cc8f7ac32cd45.webp","sourceBytes":21446,"destBytes":14888,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":1620,"convertSpendMs":8,"createdTime":"2020-08-25 07:12:36","host":"us-51*","referer":"http://blog.topsec.com.cn/?p=4663","linkMd5ListStr":"c1a394330c96e85f83b22a5aaf5f58b1","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"20.9 KB","destSize":"14.5 KB","compressRate":"69.4%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020051905090413_15.png","sourceStatusCode":200,"destWidth":2446,"destHeight":914,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn65@2020_4/2020/08/24/23-12-37-177_ecf5cd586b73bfdd.webp","sourceBytes":260080,"destBytes":101288,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":3520,"convertSpendMs":233,"createdTime":"2020-08-25 07:12:34","host":"us-013*","referer":"http://blog.topsec.com.cn/?p=4560","linkMd5ListStr":"0fb27ee4653525d5e82371e8bcbd7f07","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"254 KB","destSize":"98.9 KB","compressRate":"38.9%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020060301433427_memmove.png","sourceStatusCode":200,"destWidth":1806,"destHeight":716,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn33@2020_3/2020/08/24/23-12-37-255_22c6c4ebc1e13397.webp","sourceBytes":244054,"destBytes":75248,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":3553,"convertSpendMs":70,"createdTime":"2020-08-25 07:12:34","host":"us-55*","referer":"http://blog.topsec.com.cn/?p=4580","linkMd5ListStr":"e85a79792b1f8a64fab7ae8daf29a466","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"238.3 KB","destSize":"73.5 KB","compressRate":"30.8%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705460266_27.png","sourceStatusCode":200,"destWidth":341,"destHeight":205,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn5@2020_1/2020/08/24/23-12-37-459_0df29c7495eabfba.webp","sourceBytes":22750,"destBytes":7298,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":1567,"convertSpendMs":13,"createdTime":"2020-08-25 07:12:36","host":"us-021*","referer":"http://blog.topsec.com.cn/?p=4621","linkMd5ListStr":"476e4fbc84b253377a7a31ae1bcf446e","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"22.2 KB","destSize":"7.1 KB","compressRate":"32.1%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020061307352631_image-20200611165152260.png","sourceStatusCode":200,"destWidth":968,"destHeight":400,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn85@2020_6/2020/08/24/23-12-37-415_b10efde3a7ae2d90.webp","sourceBytes":63270,"destBytes":24434,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":1864,"convertSpendMs":33,"createdTime":"2020-08-25 07:12:36","host":"us-017*","referer":"http://blog.topsec.com.cn/?p=4610","linkMd5ListStr":"75571ed9cd237c355ef5cdaef6961817","githubUser":"myreaderx23","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"61.8 KB","destSize":"23.9 KB","compressRate":"38.6%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081913062963_image-20200818191825377.png","sourceStatusCode":200,"destWidth":1532,"destHeight":1238,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn49@2020_6/2020/08/24/23-12-36-740_ccaebd5af8f032a0.webp","sourceBytes":323331,"destBytes":136722,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":3724,"convertSpendMs":105,"createdTime":"2020-08-25 07:12:34","host":"europe-22*","referer":"http://blog.topsec.com.cn/?p=4750","linkMd5ListStr":"697e4db0fc47aec79bcda8a0648cab3f","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"315.8 KB","destSize":"133.5 KB","compressRate":"42.3%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308490285_d4d30014d4d24a2897bfa65da386fec4.png","sourceStatusCode":200,"destWidth":1428,"destHeight":448,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn89@2020_4/2020/08/24/23-12-37-437_7210adfcc45254ae.webp","sourceBytes":59259,"destBytes":34526,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":1893,"convertSpendMs":58,"createdTime":"2020-08-25 07:12:36","host":"us-005*","referer":"http://blog.topsec.com.cn/?p=4663","linkMd5ListStr":"c1a394330c96e85f83b22a5aaf5f58b1","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"57.9 KB","destSize":"33.7 KB","compressRate":"58.3%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308480260_62b59f97a0c97819aabac6c2ac1de16a.png","sourceStatusCode":200,"destWidth":924,"destHeight":622,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn81@2020_5/2020/08/24/23-12-37-568_b66ac25a7c33e1a1.webp","sourceBytes":64194,"destBytes":33878,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":1993,"convertSpendMs":19,"createdTime":"2020-08-25 07:12:36","host":"us-029*","referer":"http://blog.topsec.com.cn/?p=4663","linkMd5ListStr":"c1a394330c96e85f83b22a5aaf5f58b1","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"62.7 KB","destSize":"33.1 KB","compressRate":"52.8%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020050902151482_2.png","sourceStatusCode":200,"destWidth":1092,"destHeight":250,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn94@2020_4/2020/08/24/23-12-37-389_a8c47760aa7f7fc6.webp","sourceBytes":47277,"destBytes":22134,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":1980,"convertSpendMs":17,"createdTime":"2020-08-25 07:12:36","host":"europe67*","referer":"http://blog.topsec.com.cn/?p=4542","linkMd5ListStr":"c4a6286ac708b00b2f80221bd242a8e1","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"46.2 KB","destSize":"21.6 KB","compressRate":"46.8%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707240848_3.png","sourceStatusCode":200,"destWidth":898,"destHeight":81,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn17@2020_1/2020/08/24/23-12-37-555_12330a7a9a9fd04d.webp","sourceBytes":18593,"destBytes":11720,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":1575,"convertSpendMs":7,"createdTime":"2020-08-25 07:12:36","host":"europe-59*","referer":"http://blog.topsec.com.cn/?p=4717","linkMd5ListStr":"79e408832cb5ec9dc64945d930507031","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"18.2 KB","destSize":"11.4 KB","compressRate":"63%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705450873_10.png","sourceStatusCode":200,"destWidth":501,"destHeight":111,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn13@2020_2/2020/08/24/23-12-37-549_77a0bae91b643d63.webp","sourceBytes":24459,"destBytes":9070,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":1586,"convertSpendMs":5,"createdTime":"2020-08-25 07:12:36","host":"europe-22*","referer":"http://blog.topsec.com.cn/?p=4621","linkMd5ListStr":"476e4fbc84b253377a7a31ae1bcf446e","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"23.9 KB","destSize":"8.9 KB","compressRate":"37.1%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020051905110598_20.png","sourceStatusCode":200,"destWidth":1752,"destHeight":1178,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn21@2020_2/2020/08/24/23-12-36-824_b203bd2def54cf70.webp","sourceBytes":245955,"destBytes":85016,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":3987,"convertSpendMs":129,"createdTime":"2020-08-25 07:12:34","host":"europe-22*","referer":"http://blog.topsec.com.cn/?p=4560","linkMd5ListStr":"0fb27ee4653525d5e82371e8bcbd7f07","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"240.2 KB","destSize":"83 KB","compressRate":"34.6%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705461092_30.png","sourceStatusCode":200,"destWidth":408,"destHeight":59,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn22@2020_1/2020/08/24/23-12-37-694_798b764c665a50c7.webp","sourceBytes":12797,"destBytes":3166,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":1416,"convertSpendMs":5,"createdTime":"2020-08-25 07:12:37","host":"us-037*","referer":"http://blog.topsec.com.cn/?p=4621","linkMd5ListStr":"476e4fbc84b253377a7a31ae1bcf446e","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"12.5 KB","destSize":"3.1 KB","compressRate":"24.7%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020060409432930_image-20200602141617673.png","sourceStatusCode":200,"destWidth":1540,"destHeight":1174,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn54@2020_5/2020/08/24/23-12-36-984_94e327ab76d90998.webp","sourceBytes":291127,"destBytes":95288,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":4057,"convertSpendMs":83,"createdTime":"2020-08-25 07:12:34","host":"europe-59*","referer":"http://blog.topsec.com.cn/?p=4598","linkMd5ListStr":"c7c8cbffef287b621a1ce720f021a330","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"284.3 KB","destSize":"93.1 KB","compressRate":"32.7%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705445880_8.png","sourceStatusCode":200,"destWidth":3038,"destHeight":1932,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn5@2020_4/2020/08/24/23-12-37-588_cb583bab818a7be2.webp","sourceBytes":553554,"destBytes":79750,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":3928,"convertSpendMs":189,"createdTime":"2020-08-25 07:12:34","host":"us-001*","referer":"http://blog.topsec.com.cn/?p=4621","linkMd5ListStr":"476e4fbc84b253377a7a31ae1bcf446e","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"540.6 KB","destSize":"77.9 KB","compressRate":"14.4%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705461697_32.png","sourceStatusCode":200,"destWidth":265,"destHeight":48,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn45@2020_6/2020/08/24/23-12-37-813_0bc9c70fd1fe64ae.webp","sourceBytes":6617,"destBytes":1232,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":1445,"convertSpendMs":3,"createdTime":"2020-08-25 07:12:37","host":"us-029*","referer":"http://blog.topsec.com.cn/?p=4621","linkMd5ListStr":"476e4fbc84b253377a7a31ae1bcf446e","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"6.5 KB","destSize":"1.2 KB","compressRate":"18.6%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707272759_9.png","sourceStatusCode":200,"destWidth":666,"destHeight":396,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn1@2020_3/2020/08/24/23-12-37-753_6fbedc2fff258c33.webp","sourceBytes":75694,"destBytes":25294,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":1917,"convertSpendMs":17,"createdTime":"2020-08-25 07:12:36","host":"us-033*","referer":"http://blog.topsec.com.cn/?p=4717","linkMd5ListStr":"79e408832cb5ec9dc64945d930507031","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"73.9 KB","destSize":"24.7 KB","compressRate":"33.4%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020061307334336_image-20200611140809976.png","sourceStatusCode":200,"destWidth":708,"destHeight":280,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn42@2020_5/2020/08/24/23-12-37-969_0786746dcf5224d6.webp","sourceBytes":29393,"destBytes":9824,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":1562,"convertSpendMs":14,"createdTime":"2020-08-25 07:12:37","host":"us-51*","referer":"http://blog.topsec.com.cn/?p=4610","linkMd5ListStr":"75571ed9cd237c355ef5cdaef6961817","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"28.7 KB","destSize":"9.6 KB","compressRate":"33.4%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705460848_29.png","sourceStatusCode":200,"destWidth":1296,"destHeight":72,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn49@2020_2/2020/08/24/23-12-37-960_c47f7e62ab50533d.webp","sourceBytes":26308,"destBytes":11874,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":1626,"convertSpendMs":17,"createdTime":"2020-08-25 07:12:37","host":"us-017*","referer":"http://blog.topsec.com.cn/?p=4621","linkMd5ListStr":"476e4fbc84b253377a7a31ae1bcf446e","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"25.7 KB","destSize":"11.6 KB","compressRate":"45.1%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707400441_30.png","sourceStatusCode":200,"destWidth":1126,"destHeight":189,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn34@2020_2/2020/08/24/23-12-38-091_13eacf4e138aa5d4.webp","sourceBytes":48025,"destBytes":15938,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":1802,"convertSpendMs":12,"createdTime":"2020-08-25 07:12:37","host":"us-001*","referer":"http://blog.topsec.com.cn/?p=4717","linkMd5ListStr":"79e408832cb5ec9dc64945d930507031","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"46.9 KB","destSize":"15.6 KB","compressRate":"33.2%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/20200817072759100_10.png","sourceStatusCode":200,"destWidth":496,"destHeight":24,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn77@2020_4/2020/08/24/23-12-37-982_69b43b5f0d213019.webp","sourceBytes":4764,"destBytes":2782,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":1486,"convertSpendMs":3,"createdTime":"2020-08-25 07:12:37","host":"europe-22*","referer":"http://blog.topsec.com.cn/?p=4717","linkMd5ListStr":"79e408832cb5ec9dc64945d930507031","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"4.7 KB","destSize":"2.7 KB","compressRate":"58.4%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020051905084270_14.png","sourceStatusCode":200,"destWidth":2272,"destHeight":314,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn98@2020_3/2020/08/24/23-12-37-940_f451634051fa82d4.webp","sourceBytes":139967,"destBytes":81270,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2326,"convertSpendMs":45,"createdTime":"2020-08-25 07:12:36","host":"us-55*","referer":"http://blog.topsec.com.cn/?p=4560","linkMd5ListStr":"0fb27ee4653525d5e82371e8bcbd7f07","githubUser":"myreaderx14","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"136.7 KB","destSize":"79.4 KB","compressRate":"58.1%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020050902195631_10.png","sourceStatusCode":200,"destWidth":1652,"destHeight":1010,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn57@2020_3/2020/08/24/23-12-38-083_fef40f19ac4f3e8b.webp","sourceBytes":278104,"destBytes":118926,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":4428,"convertSpendMs":84,"createdTime":"2020-08-25 07:12:34","host":"us-037*","referer":"http://blog.topsec.com.cn/?p=4542","linkMd5ListStr":"c4a6286ac708b00b2f80221bd242a8e1","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"271.6 KB","destSize":"116.1 KB","compressRate":"42.8%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705451838_13.png","sourceStatusCode":200,"destWidth":1298,"destHeight":70,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn90@2020_6/2020/08/24/23-12-38-364_f5bed0cf5343e85b.webp","sourceBytes":22876,"destBytes":9362,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":1500,"convertSpendMs":7,"createdTime":"2020-08-25 07:12:37","host":"us-025*","referer":"http://blog.topsec.com.cn/?p=4621","linkMd5ListStr":"476e4fbc84b253377a7a31ae1bcf446e,476e4fbc84b253377a7a31ae1bcf446e","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"22.3 KB","destSize":"9.1 KB","compressRate":"40.9%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020060409435612_image-20200602142011776.png","sourceStatusCode":200,"destWidth":1284,"destHeight":400,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn29@2020_5/2020/08/24/23-12-38-339_c1cbb8c1bcb24518.webp","sourceBytes":92885,"destBytes":32466,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2092,"convertSpendMs":25,"createdTime":"2020-08-25 07:12:37","host":"us-013*","referer":"http://blog.topsec.com.cn/?p=4598","linkMd5ListStr":"c7c8cbffef287b621a1ce720f021a330","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"90.7 KB","destSize":"31.7 KB","compressRate":"35%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707312796_16.png","sourceStatusCode":200,"destWidth":857,"destHeight":392,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn66@2020_2/2020/08/24/23-12-38-485_289cc8e210fd33ac.webp","sourceBytes":60653,"destBytes":27194,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":1811,"convertSpendMs":18,"createdTime":"2020-08-25 07:12:37","host":"us-033*","referer":"http://blog.topsec.com.cn/?p=4717","linkMd5ListStr":"79e408832cb5ec9dc64945d930507031","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"59.2 KB","destSize":"26.6 KB","compressRate":"44.8%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081913030577_image-20200818175116276.png","sourceStatusCode":200,"destWidth":1350,"destHeight":1428,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn69@2020_1/2020/08/24/23-12-37-731_8b58fed802e10df8.webp","sourceBytes":472751,"destBytes":187736,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":4723,"convertSpendMs":101,"createdTime":"2020-08-25 07:12:34","host":"us-55*","referer":"http://blog.topsec.com.cn/?p=4750","linkMd5ListStr":"697e4db0fc47aec79bcda8a0648cab3f","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"461.7 KB","destSize":"183.3 KB","compressRate":"39.7%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020051905092364_16.png","sourceStatusCode":200,"destWidth":1670,"destHeight":316,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn86@2020_5/2020/08/24/23-12-38-653_a00c48285b95b4b0.webp","sourceBytes":78096,"destBytes":26466,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":1911,"convertSpendMs":31,"createdTime":"2020-08-25 07:12:37","host":"us-037*","referer":"http://blog.topsec.com.cn/?p=4560","linkMd5ListStr":"0fb27ee4653525d5e82371e8bcbd7f07","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"76.3 KB","destSize":"25.8 KB","compressRate":"33.9%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/202007070544348_3.png","sourceStatusCode":200,"destWidth":503,"destHeight":353,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn73@2020_5/2020/08/24/23-12-38-697_6df7c79e9125bb12.webp","sourceBytes":60598,"destBytes":21498,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":1960,"convertSpendMs":29,"createdTime":"2020-08-25 07:12:37","host":"us-009*","referer":"http://blog.topsec.com.cn/?p=4621","linkMd5ListStr":"476e4fbc84b253377a7a31ae1bcf446e","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"59.2 KB","destSize":"21 KB","compressRate":"35.5%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081913040993_image-20200818175756449.png","sourceStatusCode":200,"destWidth":1512,"destHeight":328,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn37@2020_4/2020/08/24/23-12-38-367_d1d28eec1670711d.webp","sourceBytes":104801,"destBytes":41428,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2530,"convertSpendMs":24,"createdTime":"2020-08-25 07:12:37","host":"europe63*","referer":"http://blog.topsec.com.cn/?p=4750","linkMd5ListStr":"697e4db0fc47aec79bcda8a0648cab3f","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"102.3 KB","destSize":"40.5 KB","compressRate":"39.5%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308491942_0c9cd8220940fbcb60fc3bb987a34b15.png","sourceStatusCode":200,"destWidth":1343,"destHeight":493,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn58@2020_5/2020/08/24/23-12-38-420_919e5eaaaa86730d.webp","sourceBytes":90644,"destBytes":46286,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2409,"convertSpendMs":28,"createdTime":"2020-08-25 07:12:37","host":"europe67*","referer":"http://blog.topsec.com.cn/?p=4663","linkMd5ListStr":"c1a394330c96e85f83b22a5aaf5f58b1","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"88.5 KB","destSize":"45.2 KB","compressRate":"51.1%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308483212_440177acd687179a1be554c61759897f.png","sourceStatusCode":200,"destWidth":1357,"destHeight":548,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn82@2020_2/2020/08/24/23-12-38-443_475784b19eb4493c.webp","sourceBytes":94286,"destBytes":49758,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2200,"convertSpendMs":27,"createdTime":"2020-08-25 07:12:37","host":"europe-59*","referer":"http://blog.topsec.com.cn/?p=4663","linkMd5ListStr":"c1a394330c96e85f83b22a5aaf5f58b1","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"92.1 KB","destSize":"48.6 KB","compressRate":"52.8%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707374253_26.png","sourceStatusCode":200,"destWidth":1887,"destHeight":1009,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn25@2020_3/2020/08/24/23-12-38-590_ff3224b10efeabb6.webp","sourceBytes":238260,"destBytes":95102,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2499,"convertSpendMs":77,"createdTime":"2020-08-25 07:12:37","host":"us-025*","referer":"http://blog.topsec.com.cn/?p=4717","linkMd5ListStr":"79e408832cb5ec9dc64945d930507031","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"232.7 KB","destSize":"92.9 KB","compressRate":"39.9%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707243629_4.png","sourceStatusCode":200,"destWidth":438,"destHeight":101,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn97@2020_1/2020/08/24/23-12-38-854_7709a1a589192264.webp","sourceBytes":18878,"destBytes":6368,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":1576,"convertSpendMs":5,"createdTime":"2020-08-25 07:12:38","host":"us-001*","referer":"http://blog.topsec.com.cn/?p=4717","linkMd5ListStr":"79e408832cb5ec9dc64945d930507031","githubUser":"myreaderx23","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"18.4 KB","destSize":"6.2 KB","compressRate":"33.7%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705452414_15.png","sourceStatusCode":200,"destWidth":492,"destHeight":77,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn2@2020_3/2020/08/24/23-12-38-805_6bc0c7af6325ea89.webp","sourceBytes":20674,"destBytes":7662,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":1804,"convertSpendMs":5,"createdTime":"2020-08-25 07:12:37","host":"europe63*","referer":"http://blog.topsec.com.cn/?p=4621","linkMd5ListStr":"476e4fbc84b253377a7a31ae1bcf446e","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"20.2 KB","destSize":"7.5 KB","compressRate":"37.1%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/20200707054530100_17.png","sourceStatusCode":200,"destWidth":394,"destHeight":139,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn13@2020_5/2020/08/24/23-12-39-104_b76928a6d946bad7.webp","sourceBytes":20734,"destBytes":7112,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":1521,"convertSpendMs":8,"createdTime":"2020-08-25 07:12:38","host":"us-017*","referer":"http://blog.topsec.com.cn/?p=4621","linkMd5ListStr":"476e4fbc84b253377a7a31ae1bcf446e","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"20.2 KB","destSize":"6.9 KB","compressRate":"34.3%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020050902212438_13.png","sourceStatusCode":200,"destWidth":1594,"destHeight":420,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn61@2020_6/2020/08/24/23-12-39-015_b1f6e12e7923be2c.webp","sourceBytes":171812,"destBytes":56710,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2453,"convertSpendMs":45,"createdTime":"2020-08-25 07:12:37","host":"us-55*","referer":"http://blog.topsec.com.cn/?p=4542","linkMd5ListStr":"c4a6286ac708b00b2f80221bd242a8e1","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"167.8 KB","destSize":"55.4 KB","compressRate":"33%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020050902171829_6.png","sourceStatusCode":200,"destWidth":1678,"destHeight":956,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn69@2020_6/2020/08/24/23-12-38-991_cf87942b5869b060.webp","sourceBytes":201921,"destBytes":77058,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2531,"convertSpendMs":136,"createdTime":"2020-08-25 07:12:37","host":"us-021*","referer":"http://blog.topsec.com.cn/?p=4542","linkMd5ListStr":"c4a6286ac708b00b2f80221bd242a8e1","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"197.2 KB","destSize":"75.3 KB","compressRate":"38.2%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/202008170735484_23.png","sourceStatusCode":200,"destWidth":461,"destHeight":209,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn17@2020_6/2020/08/24/23-12-39-186_dfd28ddbab1b6668.webp","sourceBytes":41114,"destBytes":11900,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":1558,"convertSpendMs":18,"createdTime":"2020-08-25 07:12:38","host":"us-005*","referer":"http://blog.topsec.com.cn/?p=4717","linkMd5ListStr":"79e408832cb5ec9dc64945d930507031","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"40.2 KB","destSize":"11.6 KB","compressRate":"28.9%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020051905072921_10.png","sourceStatusCode":200,"destWidth":830,"destHeight":68,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn54@2020_2/2020/08/24/23-12-39-188_73944246714187ce.webp","sourceBytes":13119,"destBytes":5066,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":1327,"convertSpendMs":7,"createdTime":"2020-08-25 07:12:38","host":"us-025*","referer":"http://blog.topsec.com.cn/?p=4560","linkMd5ListStr":"0fb27ee4653525d5e82371e8bcbd7f07","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"12.8 KB","destSize":"4.9 KB","compressRate":"38.6%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308483555_5254995c16eeb34452e0a82cbac85b46.png","sourceStatusCode":200,"destWidth":678,"destHeight":117,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn46@2020_6/2020/08/24/23-12-38-971_4f2b0cdbf6bc37e1.webp","sourceBytes":8875,"destBytes":5048,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":1607,"convertSpendMs":5,"createdTime":"2020-08-25 07:12:38","host":"europe-59*","referer":"http://blog.topsec.com.cn/?p=4663","linkMd5ListStr":"c1a394330c96e85f83b22a5aaf5f58b1","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"8.7 KB","destSize":"4.9 KB","compressRate":"56.9%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308481420_873e4c395da9922f4755f03fdb6142e5.png","sourceStatusCode":200,"destWidth":675,"destHeight":283,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn25@2020_3/2020/08/24/23-12-39-154_fdf3a132bcca81b4.webp","sourceBytes":27031,"destBytes":15870,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":1735,"convertSpendMs":11,"createdTime":"2020-08-25 07:12:38","host":"us-55*","referer":"http://blog.topsec.com.cn/?p=4663","linkMd5ListStr":"c1a394330c96e85f83b22a5aaf5f58b1","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"26.4 KB","destSize":"15.5 KB","compressRate":"58.7%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308490822_d63f0488efd86adc06ef29945da02942.png","sourceStatusCode":200,"destWidth":544,"destHeight":68,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn72@2020_1/2020/08/24/23-12-39-333_c2edf53464049d1c.webp","sourceBytes":5469,"destBytes":3342,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":1294,"convertSpendMs":3,"createdTime":"2020-08-25 07:12:38","host":"us-032*","referer":"http://blog.topsec.com.cn/?p=4663","linkMd5ListStr":"c1a394330c96e85f83b22a5aaf5f58b1","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"5.3 KB","destSize":"3.3 KB","compressRate":"61.1%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705444415_5.png","sourceStatusCode":200,"destWidth":2034,"destHeight":1528,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn9@2020_1/2020/08/24/23-12-39-195_b6325c54fe28b9de.webp","sourceBytes":359390,"destBytes":32694,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":3195,"convertSpendMs":293,"createdTime":"2020-08-25 07:12:36","host":"us-009*","referer":"http://blog.topsec.com.cn/?p=4621","linkMd5ListStr":"476e4fbc84b253377a7a31ae1bcf446e","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"351 KB","destSize":"31.9 KB","compressRate":"9.1%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/202008170725088_5.png","sourceStatusCode":200,"destWidth":449,"destHeight":106,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn37@2020_4/2020/08/24/23-12-39-372_3865b476698ce189.webp","sourceBytes":23350,"destBytes":5864,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":1625,"convertSpendMs":22,"createdTime":"2020-08-25 07:12:38","host":"us-009*","referer":"http://blog.topsec.com.cn/?p=4717","linkMd5ListStr":"79e408832cb5ec9dc64945d930507031","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"22.8 KB","destSize":"5.7 KB","compressRate":"25.1%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308484113_a99fa86415c1e44425807b808c4feff6.png","sourceStatusCode":200,"destWidth":720,"destHeight":331,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn49@2020_5/2020/08/24/23-12-39-455_10672adb7dad894d.webp","sourceBytes":31648,"destBytes":17850,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":1607,"convertSpendMs":11,"createdTime":"2020-08-25 07:12:38","host":"us-037*","referer":"http://blog.topsec.com.cn/?p=4663","linkMd5ListStr":"c1a394330c96e85f83b22a5aaf5f58b1","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"30.9 KB","destSize":"17.4 KB","compressRate":"56.4%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020061307313814_image-20200611150442397.png","sourceStatusCode":200,"destWidth":1670,"destHeight":436,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn6@2020_1/2020/08/24/23-12-39-486_8603a2a8e9e664e4.webp","sourceBytes":40412,"destBytes":18334,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2255,"convertSpendMs":25,"createdTime":"2020-08-25 07:12:38","host":"us-51*","referer":"http://blog.topsec.com.cn/?p=4610","linkMd5ListStr":"75571ed9cd237c355ef5cdaef6961817","githubUser":"myreaderx14","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"39.5 KB","destSize":"17.9 KB","compressRate":"45.4%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705461840_33.png","sourceStatusCode":200,"destWidth":898,"destHeight":162,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn93@2020_1/2020/08/24/23-12-39-721_f83ffb3dcb5aa718.webp","sourceBytes":30510,"destBytes":14084,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2639,"convertSpendMs":11,"createdTime":"2020-08-25 07:12:37","host":"us-013*","referer":"http://blog.topsec.com.cn/?p=4621","linkMd5ListStr":"476e4fbc84b253377a7a31ae1bcf446e","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"29.8 KB","destSize":"13.8 KB","compressRate":"46.2%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020051905101228_18.png","sourceStatusCode":200,"destWidth":1356,"destHeight":548,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn29@2020_3/2020/08/24/23-12-39-721_a772610c518cfe1a.webp","sourceBytes":123783,"destBytes":40480,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2169,"convertSpendMs":37,"createdTime":"2020-08-25 07:12:38","host":"us-033*","referer":"http://blog.topsec.com.cn/?p=4560","linkMd5ListStr":"0fb27ee4653525d5e82371e8bcbd7f07","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"120.9 KB","destSize":"39.5 KB","compressRate":"32.7%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705443846_4.png","sourceStatusCode":200,"destWidth":2034,"destHeight":1528,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn54@2020_3/2020/08/24/23-12-39-640_02e373c283aa79c3.webp","sourceBytes":659647,"destBytes":188286,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":3434,"convertSpendMs":263,"createdTime":"2020-08-25 07:12:37","host":"us-005*","referer":"http://blog.topsec.com.cn/?p=4621","linkMd5ListStr":"476e4fbc84b253377a7a31ae1bcf446e","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"644.2 KB","destSize":"183.9 KB","compressRate":"28.5%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020051905074644_11.png","sourceStatusCode":200,"destWidth":790,"destHeight":120,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn100@2020_6/2020/08/24/23-12-40-096_36cbc8db91c4559c.webp","sourceBytes":17262,"destBytes":6132,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":1684,"convertSpendMs":7,"createdTime":"2020-08-25 07:12:39","host":"us-024*","referer":"http://blog.topsec.com.cn/?p=4560","linkMd5ListStr":"0fb27ee4653525d5e82371e8bcbd7f07","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"16.9 KB","destSize":"6 KB","compressRate":"35.5%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308491659_f0c8407956fe7df0df4b42b3199b6e2a.png","sourceStatusCode":200,"destWidth":972,"destHeight":138,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn63@2020_2/2020/08/24/23-12-40-082_a92adf0cf6c543d6.webp","sourceBytes":18673,"destBytes":12678,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2451,"convertSpendMs":8,"createdTime":"2020-08-25 07:12:38","host":"europe62*","referer":"http://blog.topsec.com.cn/?p=4663","linkMd5ListStr":"c1a394330c96e85f83b22a5aaf5f58b1","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"18.2 KB","destSize":"12.4 KB","compressRate":"67.9%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707384923_28.png","sourceStatusCode":200,"destWidth":793,"destHeight":203,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn59@2020_6/2020/08/24/23-12-40-340_e2421b56fc1bb1fb.webp","sourceBytes":25859,"destBytes":12662,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2700,"convertSpendMs":9,"createdTime":"2020-08-25 07:12:38","host":"europe-24*","referer":"http://blog.topsec.com.cn/?p=4717","linkMd5ListStr":"79e408832cb5ec9dc64945d930507031","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"25.3 KB","destSize":"12.4 KB","compressRate":"49%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020060409450883_image-20200602154248739.png","sourceStatusCode":200,"destWidth":1686,"destHeight":760,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn21@2020_2/2020/08/24/23-12-40-102_0c18b17f1a0f6907.webp","sourceBytes":249267,"destBytes":88888,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":3190,"convertSpendMs":61,"createdTime":"2020-08-25 07:12:38","host":"europe67*","referer":"http://blog.topsec.com.cn/?p=4598","linkMd5ListStr":"c7c8cbffef287b621a1ce720f021a330","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"243.4 KB","destSize":"86.8 KB","compressRate":"35.7%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308481747_1544f565ed123a2f83dff21f3e2bc05f.png","sourceStatusCode":200,"destWidth":600,"destHeight":90,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn11@2020_2/2020/08/24/23-12-40-643_a7379da52cf0a388.webp","sourceBytes":7526,"destBytes":4438,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2161,"convertSpendMs":3,"createdTime":"2020-08-25 07:12:39","host":"europe66*","referer":"http://blog.topsec.com.cn/?p=4663","linkMd5ListStr":"c1a394330c96e85f83b22a5aaf5f58b1","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"7.3 KB","destSize":"4.3 KB","compressRate":"59%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705450420_9.png","sourceStatusCode":200,"destWidth":1156,"destHeight":786,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn83@2020_4/2020/08/24/23-12-40-489_eaafa1385fa1841e.webp","sourceBytes":216343,"destBytes":139246,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2599,"convertSpendMs":56,"createdTime":"2020-08-25 07:12:38","host":"us-001*","referer":"http://blog.topsec.com.cn/?p=4621","linkMd5ListStr":"476e4fbc84b253377a7a31ae1bcf446e","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"211.3 KB","destSize":"136 KB","compressRate":"64.4%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707305894_15.png","sourceStatusCode":200,"destWidth":199,"destHeight":58,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn68@2020_1/2020/08/24/23-12-40-713_5273c34773d3294b.webp","sourceBytes":7102,"destBytes":1578,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":1316,"convertSpendMs":4,"createdTime":"2020-08-25 07:12:40","host":"us-040*","referer":"http://blog.topsec.com.cn/?p=4717","linkMd5ListStr":"79e408832cb5ec9dc64945d930507031","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"6.9 KB","destSize":"1.5 KB","compressRate":"22.2%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308491088_dafa5052e153c29eb5d22bb0ff4c69f5.png","sourceStatusCode":200,"destWidth":788,"destHeight":222,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn87@2020_6/2020/08/24/23-12-40-537_58f41dc7c33ee7fe.webp","sourceBytes":22951,"destBytes":16300,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2653,"convertSpendMs":9,"createdTime":"2020-08-25 07:12:38","host":"europe64*","referer":"http://blog.topsec.com.cn/?p=4663","linkMd5ListStr":"c1a394330c96e85f83b22a5aaf5f58b1","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"22.4 KB","destSize":"15.9 KB","compressRate":"71%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308480619_80d1735b7c2742cf729ba6729b5e189e.png","sourceStatusCode":200,"destWidth":355,"destHeight":81,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn84@2020_6/2020/08/24/23-12-40-742_30733153fff0de76.webp","sourceBytes":6331,"destBytes":4670,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":1428,"convertSpendMs":3,"createdTime":"2020-08-25 07:12:40","host":"europe-24*","referer":"http://blog.topsec.com.cn/?p=4663","linkMd5ListStr":"c1a394330c96e85f83b22a5aaf5f58b1","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"6.2 KB","destSize":"4.6 KB","compressRate":"73.8%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081913054244_image-20200818191144959.png","sourceStatusCode":200,"destWidth":1642,"destHeight":1020,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn9@2020_5/2020/08/24/23-12-40-092_6ec9ddd0b06a2ea0.webp","sourceBytes":251793,"destBytes":97072,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":3302,"convertSpendMs":97,"createdTime":"2020-08-25 07:12:38","host":"us-029*","referer":"http://blog.topsec.com.cn/?p=4750","linkMd5ListStr":"697e4db0fc47aec79bcda8a0648cab3f","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"245.9 KB","destSize":"94.8 KB","compressRate":"38.6%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081913035198_image-20200818175715249.png","sourceStatusCode":200,"destWidth":1344,"destHeight":460,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn75@2020_5/2020/08/24/23-12-40-917_f0eb24800a908990.webp","sourceBytes":96871,"destBytes":37082,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2898,"convertSpendMs":45,"createdTime":"2020-08-25 07:12:38","host":"us-022*","referer":"http://blog.topsec.com.cn/?p=4750","linkMd5ListStr":"697e4db0fc47aec79bcda8a0648cab3f","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"94.6 KB","destSize":"36.2 KB","compressRate":"38.3%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705442957_2.png","sourceStatusCode":200,"destWidth":2034,"destHeight":1528,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn41@2020_1/2020/08/24/23-12-40-331_fffcc08493e71c4d.webp","sourceBytes":459829,"destBytes":88528,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":3367,"convertSpendMs":152,"createdTime":"2020-08-25 07:12:38","host":"europe-22*","referer":"http://blog.topsec.com.cn/?p=4621","linkMd5ListStr":"476e4fbc84b253377a7a31ae1bcf446e","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"449.1 KB","destSize":"86.5 KB","compressRate":"19.3%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081913065529_image-20200818192259407.png","sourceStatusCode":200,"destWidth":1838,"destHeight":234,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn80@2020_6/2020/08/24/23-12-40-914_77bd4d5b8093d60d.webp","sourceBytes":75193,"destBytes":30422,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2853,"convertSpendMs":32,"createdTime":"2020-08-25 07:12:38","host":"us-011*","referer":"http://blog.topsec.com.cn/?p=4750","linkMd5ListStr":"697e4db0fc47aec79bcda8a0648cab3f","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"73.4 KB","destSize":"29.7 KB","compressRate":"40.5%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/202005090219073_9.png","sourceStatusCode":200,"destWidth":1578,"destHeight":924,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn3@2020_2/2020/08/24/23-12-40-789_1ae1661c25dfaf24.webp","sourceBytes":213448,"destBytes":79618,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2525,"convertSpendMs":77,"createdTime":"2020-08-25 07:12:39","host":"us-013*","referer":"http://blog.topsec.com.cn/?p=4542","linkMd5ListStr":"c4a6286ac708b00b2f80221bd242a8e1","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"208.4 KB","destSize":"77.8 KB","compressRate":"37.3%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020061307374427_image-20200612161012924.png","sourceStatusCode":200,"destWidth":1970,"destHeight":626,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn68@2020_3/2020/08/24/23-12-40-980_f8ae597b5f4df60a.webp","sourceBytes":119781,"destBytes":49536,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":3103,"convertSpendMs":176,"createdTime":"2020-08-25 07:12:38","host":"us-52*","referer":"http://blog.topsec.com.cn/?p=4610","linkMd5ListStr":"75571ed9cd237c355ef5cdaef6961817","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"117 KB","destSize":"48.4 KB","compressRate":"41.4%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020060409414223_image-20200602134135011.png","sourceStatusCode":200,"destWidth":1000,"destHeight":438,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn96@2020_4/2020/08/24/23-12-41-060_a51fe47074e2f98d.webp","sourceBytes":73863,"destBytes":26684,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2745,"convertSpendMs":23,"createdTime":"2020-08-25 07:12:39","host":"us-034*","referer":"http://blog.topsec.com.cn/?p=4598","linkMd5ListStr":"c7c8cbffef287b621a1ce720f021a330","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"72.1 KB","destSize":"26.1 KB","compressRate":"36.1%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020051905095462_17.png","sourceStatusCode":200,"destWidth":1246,"destHeight":434,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn91@2020_6/2020/08/24/23-12-41-133_cdb82735660938ac.webp","sourceBytes":103358,"destBytes":39852,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2960,"convertSpendMs":33,"createdTime":"2020-08-25 07:12:39","host":"us-54*","referer":"http://blog.topsec.com.cn/?p=4560","linkMd5ListStr":"0fb27ee4653525d5e82371e8bcbd7f07","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"100.9 KB","destSize":"38.9 KB","compressRate":"38.6%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308485878_ce86b2ba9f56c78fdddea1d1e030dedb.png","sourceStatusCode":200,"destWidth":947,"destHeight":534,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn51@2020_3/2020/08/24/23-12-40-977_35f063a8faef1049.webp","sourceBytes":86046,"destBytes":45980,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2190,"convertSpendMs":25,"createdTime":"2020-08-25 07:12:39","host":"us-017*","referer":"http://blog.topsec.com.cn/?p=4663","linkMd5ListStr":"c1a394330c96e85f83b22a5aaf5f58b1","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"84 KB","destSize":"44.9 KB","compressRate":"53.4%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308482392_6864c0cd6b84a6dbcf73d21ba3803c9c.png","sourceStatusCode":200,"destWidth":952,"destHeight":292,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn87@2020_5/2020/08/24/23-12-41-143_4045155badf7960e.webp","sourceBytes":37051,"destBytes":19540,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":1960,"convertSpendMs":13,"createdTime":"2020-08-25 07:12:40","host":"europe62*","referer":"http://blog.topsec.com.cn/?p=4663","linkMd5ListStr":"c1a394330c96e85f83b22a5aaf5f58b1","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"36.2 KB","destSize":"19.1 KB","compressRate":"52.7%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705452799_16.png","sourceStatusCode":200,"destWidth":915,"destHeight":66,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn43@2020_2/2020/08/24/23-12-41-464_f50bc2d297ba1167.webp","sourceBytes":15232,"destBytes":5928,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2407,"convertSpendMs":6,"createdTime":"2020-08-25 07:12:39","host":"us-038*","referer":"http://blog.topsec.com.cn/?p=4621","linkMd5ListStr":"476e4fbc84b253377a7a31ae1bcf446e","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"14.9 KB","destSize":"5.8 KB","compressRate":"38.9%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308482672_7485cd6227bab22112407edb3fc801c2.png","sourceStatusCode":200,"destWidth":1076,"destHeight":348,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn60@2020_2/2020/08/24/23-12-41-282_5d5fc23e44dffe45.webp","sourceBytes":43537,"destBytes":25186,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2290,"convertSpendMs":13,"createdTime":"2020-08-25 07:12:40","host":"europe21*","referer":"http://blog.topsec.com.cn/?p=4663","linkMd5ListStr":"c1a394330c96e85f83b22a5aaf5f58b1","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"42.5 KB","destSize":"24.6 KB","compressRate":"57.8%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308494261_6ba89b567b638379ac0955cf3ee0e318.png","sourceStatusCode":200,"destWidth":1336,"destHeight":686,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn95@2020_1/2020/08/24/23-12-41-379_c738a13892a4ccf1.webp","sourceBytes":86034,"destBytes":51392,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":1896,"convertSpendMs":28,"createdTime":"2020-08-25 07:12:40","host":"us-032*","referer":"http://blog.topsec.com.cn/?p=4663","linkMd5ListStr":"c1a394330c96e85f83b22a5aaf5f58b1","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"84 KB","destSize":"50.2 KB","compressRate":"59.7%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308494084_5fae284f08e0da8a0517fa9f43990c80.png","sourceStatusCode":200,"destWidth":644,"destHeight":322,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn20@2020_1/2020/08/24/23-12-41-436_0aec99267af382e5.webp","sourceBytes":30351,"destBytes":18182,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2629,"convertSpendMs":18,"createdTime":"2020-08-25 07:12:39","host":"us-036*","referer":"http://blog.topsec.com.cn/?p=4663","linkMd5ListStr":"c1a394330c96e85f83b22a5aaf5f58b1,c1a394330c96e85f83b22a5aaf5f58b1","githubUser":"myreaderx14","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"29.6 KB","destSize":"17.8 KB","compressRate":"59.9%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705454963_23.png","sourceStatusCode":200,"destWidth":894,"destHeight":198,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn16@2020_6/2020/08/24/23-12-41-110_116b2e60d4a62b42.webp","sourceBytes":40968,"destBytes":13908,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2899,"convertSpendMs":10,"createdTime":"2020-08-25 07:12:39","host":"europe-56*","referer":"http://blog.topsec.com.cn/?p=4621","linkMd5ListStr":"476e4fbc84b253377a7a31ae1bcf446e","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"40 KB","destSize":"13.6 KB","compressRate":"33.9%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020050902155771_4.png","sourceStatusCode":200,"destWidth":1516,"destHeight":894,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn7@2020_4/2020/08/24/23-12-41-503_95a775cf33703898.webp","sourceBytes":214000,"destBytes":74722,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":3053,"convertSpendMs":75,"createdTime":"2020-08-25 07:12:39","host":"us-003*","referer":"http://blog.topsec.com.cn/?p=4542","linkMd5ListStr":"c4a6286ac708b00b2f80221bd242a8e1","githubUser":"myreaderx23","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"209 KB","destSize":"73 KB","compressRate":"34.9%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308492344_1f5f848eaa7b8c1af2ea4febf61ba3a9.png","sourceStatusCode":200,"destWidth":561,"destHeight":194,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn99@2020_6/2020/08/24/23-12-41-519_962656a8f197a3dd.webp","sourceBytes":27470,"destBytes":11084,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":1651,"convertSpendMs":13,"createdTime":"2020-08-25 07:12:40","host":"us-022*","referer":"http://blog.topsec.com.cn/?p=4663","linkMd5ListStr":"c1a394330c96e85f83b22a5aaf5f58b1","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"26.8 KB","destSize":"10.8 KB","compressRate":"40.3%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705454298_21.png","sourceStatusCode":200,"destWidth":922,"destHeight":93,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn39@2020_5/2020/08/24/23-12-41-483_f4b224d44ee1a213.webp","sourceBytes":27307,"destBytes":11808,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2758,"convertSpendMs":7,"createdTime":"2020-08-25 07:12:39","host":"europe-58*","referer":"http://blog.topsec.com.cn/?p=4621","linkMd5ListStr":"476e4fbc84b253377a7a31ae1bcf446e","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"26.7 KB","destSize":"11.5 KB","compressRate":"43.2%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020050902202740_11.png","sourceStatusCode":200,"destWidth":1456,"destHeight":278,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn63@2020_1/2020/08/24/23-12-41-604_7544cc57122e88d9.webp","sourceBytes":43192,"destBytes":18516,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2528,"convertSpendMs":23,"createdTime":"2020-08-25 07:12:40","host":"europe-60*","referer":"http://blog.topsec.com.cn/?p=4542","linkMd5ListStr":"c4a6286ac708b00b2f80221bd242a8e1","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"42.2 KB","destSize":"18.1 KB","compressRate":"42.9%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020051905062613_9.png","sourceStatusCode":200,"destWidth":1680,"destHeight":554,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn80@2020_4/2020/08/24/23-12-41-641_7ba20c4cabdadc73.webp","sourceBytes":157117,"destBytes":60710,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2324,"convertSpendMs":110,"createdTime":"2020-08-25 07:12:40","host":"us-009*","referer":"http://blog.topsec.com.cn/?p=4560","linkMd5ListStr":"0fb27ee4653525d5e82371e8bcbd7f07","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"153.4 KB","destSize":"59.3 KB","compressRate":"38.6%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707351917_22.png","sourceStatusCode":200,"destWidth":858,"destHeight":403,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn92@2020_6/2020/08/24/23-12-41-553_c387fdbac40dee43.webp","sourceBytes":58429,"destBytes":27276,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2160,"convertSpendMs":38,"createdTime":"2020-08-25 07:12:40","host":"us-52*","referer":"http://blog.topsec.com.cn/?p=4717","linkMd5ListStr":"79e408832cb5ec9dc64945d930507031","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"57.1 KB","destSize":"26.6 KB","compressRate":"46.7%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020051905080380_12.png","sourceStatusCode":200,"destWidth":1514,"destHeight":1326,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn31@2020_2/2020/08/24/23-12-41-624_2e0a72f9e345b040.webp","sourceBytes":338000,"destBytes":116706,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2851,"convertSpendMs":166,"createdTime":"2020-08-25 07:12:39","host":"us-005*","referer":"http://blog.topsec.com.cn/?p=4560","linkMd5ListStr":"0fb27ee4653525d5e82371e8bcbd7f07","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"330.1 KB","destSize":"114 KB","compressRate":"34.5%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707233838_2.png","sourceStatusCode":200,"destWidth":1197,"destHeight":243,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn12@2020_4/2020/08/24/23-12-41-668_ff9f6607b5801f1a.webp","sourceBytes":43182,"destBytes":21578,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":1741,"convertSpendMs":14,"createdTime":"2020-08-25 07:12:40","host":"europe64*","referer":"http://blog.topsec.com.cn/?p=4717","linkMd5ListStr":"79e408832cb5ec9dc64945d930507031","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"42.2 KB","destSize":"21.1 KB","compressRate":"50%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020050902205246_12.png","sourceStatusCode":200,"destWidth":1644,"destHeight":244,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn48@2020_6/2020/08/24/23-12-41-988_e52ea83771739157.webp","sourceBytes":63101,"destBytes":29696,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2864,"convertSpendMs":18,"createdTime":"2020-08-25 07:12:39","host":"us-028*","referer":"http://blog.topsec.com.cn/?p=4542","linkMd5ListStr":"c4a6286ac708b00b2f80221bd242a8e1","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"61.6 KB","destSize":"29 KB","compressRate":"47.1%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/202007230849493_21c2453ce372bcfc605f96bb97a9fdc4.png","sourceStatusCode":200,"destWidth":1386,"destHeight":571,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn23@2020_2/2020/08/24/23-12-42-010_00e5b1d57334f7f5.webp","sourceBytes":59219,"destBytes":32428,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":3138,"convertSpendMs":79,"createdTime":"2020-08-25 07:12:39","host":"us-026*","referer":"http://blog.topsec.com.cn/?p=4663","linkMd5ListStr":"c1a394330c96e85f83b22a5aaf5f58b1","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"57.8 KB","destSize":"31.7 KB","compressRate":"54.8%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705454043_20.png","sourceStatusCode":200,"destWidth":831,"destHeight":134,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn15@2020_1/2020/08/24/23-12-42-018_b296eaf6d824302c.webp","sourceBytes":30876,"destBytes":11792,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":1639,"convertSpendMs":19,"createdTime":"2020-08-25 07:12:41","host":"us-54*","referer":"http://blog.topsec.com.cn/?p=4621","linkMd5ListStr":"476e4fbc84b253377a7a31ae1bcf446e","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"30.2 KB","destSize":"11.5 KB","compressRate":"38.2%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308491391_ec061c3b3c86c1b3a02482df692a8eea.png","sourceStatusCode":200,"destWidth":756,"destHeight":662,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn55@2020_2/2020/08/24/23-12-42-019_ee8876df397520fd.webp","sourceBytes":64364,"destBytes":34566,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2780,"convertSpendMs":20,"createdTime":"2020-08-25 07:12:40","host":"us-007*","referer":"http://blog.topsec.com.cn/?p=4663","linkMd5ListStr":"c1a394330c96e85f83b22a5aaf5f58b1","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"62.9 KB","destSize":"33.8 KB","compressRate":"53.7%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308490535_d05b4a2272ab1219c192345455013b0c.png","sourceStatusCode":200,"destWidth":563,"destHeight":176,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn23@2020_3/2020/08/24/23-12-42-363_9dac0a69c5e66a71.webp","sourceBytes":24303,"destBytes":10094,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":1629,"convertSpendMs":7,"createdTime":"2020-08-25 07:12:41","host":"us-024*","referer":"http://blog.topsec.com.cn/?p=4663","linkMd5ListStr":"c1a394330c96e85f83b22a5aaf5f58b1","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"23.7 KB","destSize":"9.9 KB","compressRate":"41.5%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707333530_19.png","sourceStatusCode":200,"destWidth":704,"destHeight":29,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn35@2020_1/2020/08/24/23-12-42-044_003c1cb5af9006d0.webp","sourceBytes":5637,"destBytes":4008,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":1658,"convertSpendMs":3,"createdTime":"2020-08-25 07:12:41","host":"europe66*","referer":"http://blog.topsec.com.cn/?p=4717","linkMd5ListStr":"79e408832cb5ec9dc64945d930507031","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"5.5 KB","destSize":"3.9 KB","compressRate":"71.1%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308485054_b01f974fd81355c9ace3ba5f6222a4d8.png","sourceStatusCode":200,"destWidth":795,"destHeight":95,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn39@2020_4/2020/08/24/23-12-42-162_2b27e0c54b478558.webp","sourceBytes":10993,"destBytes":6922,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":1627,"convertSpendMs":4,"createdTime":"2020-08-25 07:12:41","host":"europe-56*","referer":"http://blog.topsec.com.cn/?p=4663","linkMd5ListStr":"c1a394330c96e85f83b22a5aaf5f58b1","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"10.7 KB","destSize":"6.8 KB","compressRate":"63%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020051905060693_8.png","sourceStatusCode":200,"destWidth":1572,"destHeight":532,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn35@2020_1/2020/08/24/23-12-42-059_0e052d3a7b197199.webp","sourceBytes":176155,"destBytes":64744,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":3637,"convertSpendMs":83,"createdTime":"2020-08-25 07:12:39","host":"europe68*","referer":"http://blog.topsec.com.cn/?p=4560","linkMd5ListStr":"0fb27ee4653525d5e82371e8bcbd7f07","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"172 KB","destSize":"63.2 KB","compressRate":"36.8%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705452129_14.png","sourceStatusCode":200,"destWidth":1303,"destHeight":175,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn19@2020_2/2020/08/24/23-12-42-491_48347f29adf0ad32.webp","sourceBytes":47209,"destBytes":18436,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":1865,"convertSpendMs":17,"createdTime":"2020-08-25 07:12:41","host":"us-034*","referer":"http://blog.topsec.com.cn/?p=4621","linkMd5ListStr":"476e4fbc84b253377a7a31ae1bcf446e","githubUser":"myreaderx23","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"46.1 KB","destSize":"18 KB","compressRate":"39.1%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/202005190508232_13.png","sourceStatusCode":200,"destWidth":788,"destHeight":148,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn28@2020_1/2020/08/24/23-12-42-541_426f246bbf9b544a.webp","sourceBytes":19087,"destBytes":6454,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":1671,"convertSpendMs":7,"createdTime":"2020-08-25 07:12:41","host":"us-013*","referer":"http://blog.topsec.com.cn/?p=4560","linkMd5ListStr":"0fb27ee4653525d5e82371e8bcbd7f07","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"18.6 KB","destSize":"6.3 KB","compressRate":"33.8%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308475758_26c8c8cf214c6def1efa536683527acf.png","sourceStatusCode":200,"destWidth":784,"destHeight":414,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn32@2020_5/2020/08/24/23-12-42-461_56b8ea69526a496f.webp","sourceBytes":37160,"destBytes":17570,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":1719,"convertSpendMs":13,"createdTime":"2020-08-25 07:12:41","host":"us-003*","referer":"http://blog.topsec.com.cn/?p=4663","linkMd5ListStr":"c1a394330c96e85f83b22a5aaf5f58b1","githubUser":"myreaderx14","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"36.3 KB","destSize":"17.2 KB","compressRate":"47.3%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/202005190510414_19.png","sourceStatusCode":200,"destWidth":2506,"destHeight":718,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn27@2020_3/2020/08/24/23-12-42-437_9c6e9d52fafe60c9.webp","sourceBytes":289819,"destBytes":114448,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":3461,"convertSpendMs":244,"createdTime":"2020-08-25 07:12:39","host":"us-015*","referer":"http://blog.topsec.com.cn/?p=4560","linkMd5ListStr":"0fb27ee4653525d5e82371e8bcbd7f07","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"283 KB","destSize":"111.8 KB","compressRate":"39.5%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081913033035_image-20200818175756449.png","sourceStatusCode":200,"destWidth":1512,"destHeight":328,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn4@2020_3/2020/08/24/23-12-42-561_0ba6fffe08cc3cef.webp","sourceBytes":104801,"destBytes":41428,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2706,"convertSpendMs":36,"createdTime":"2020-08-25 07:12:40","host":"us-011*","referer":"http://blog.topsec.com.cn/?p=4750","linkMd5ListStr":"697e4db0fc47aec79bcda8a0648cab3f","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"102.3 KB","destSize":"40.5 KB","compressRate":"39.5%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020050902180011_7.png","sourceStatusCode":200,"destWidth":1538,"destHeight":860,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn75@2020_5/2020/08/24/23-12-42-554_ff680b467c6b5dbe.webp","sourceBytes":190768,"destBytes":78616,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":3268,"convertSpendMs":115,"createdTime":"2020-08-25 07:12:40","host":"us-019*","referer":"http://blog.topsec.com.cn/?p=4542","linkMd5ListStr":"c4a6286ac708b00b2f80221bd242a8e1","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"186.3 KB","destSize":"76.8 KB","compressRate":"41.2%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/202007070546132_31.png","sourceStatusCode":200,"destWidth":578,"destHeight":84,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn51@2020_4/2020/08/24/23-12-42-582_25d74823ca8bc3a2.webp","sourceBytes":14274,"destBytes":5526,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":1610,"convertSpendMs":7,"createdTime":"2020-08-25 07:12:41","host":"us-015*","referer":"http://blog.topsec.com.cn/?p=4621","linkMd5ListStr":"476e4fbc84b253377a7a31ae1bcf446e","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"13.9 KB","destSize":"5.4 KB","compressRate":"38.7%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705460538_28.png","sourceStatusCode":200,"destWidth":1139,"destHeight":155,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn8@2020_4/2020/08/24/23-12-42-658_078feddf2cc3d425.webp","sourceBytes":37401,"destBytes":18048,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2677,"convertSpendMs":11,"createdTime":"2020-08-25 07:12:40","host":"us-001*","referer":"http://blog.topsec.com.cn/?p=4621","linkMd5ListStr":"476e4fbc84b253377a7a31ae1bcf446e","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"36.5 KB","destSize":"17.6 KB","compressRate":"48.3%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705451129_11.png","sourceStatusCode":200,"destWidth":693,"destHeight":118,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn55@2020_1/2020/08/24/23-12-42-801_bc8bab92cae16ed3.webp","sourceBytes":24566,"destBytes":10098,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":1707,"convertSpendMs":22,"createdTime":"2020-08-25 07:12:41","host":"us-005*","referer":"http://blog.topsec.com.cn/?p=4621","linkMd5ListStr":"476e4fbc84b253377a7a31ae1bcf446e","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"24 KB","destSize":"9.9 KB","compressRate":"41.1%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081913023859_image-20200818174944494.png","sourceStatusCode":200,"destWidth":1484,"destHeight":1232,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn71@2020_3/2020/08/24/23-12-42-618_e794890a3614f271.webp","sourceBytes":322375,"destBytes":117394,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":3498,"convertSpendMs":124,"createdTime":"2020-08-25 07:12:40","host":"us-030*","referer":"http://blog.topsec.com.cn/?p=4750","linkMd5ListStr":"697e4db0fc47aec79bcda8a0648cab3f","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"314.8 KB","destSize":"114.6 KB","compressRate":"36.4%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/202007070545585_26.png","sourceStatusCode":200,"destWidth":1189,"destHeight":160,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn63@2020_2/2020/08/24/23-12-42-583_dcddfb765c41e262.webp","sourceBytes":43211,"destBytes":17876,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":1901,"convertSpendMs":11,"createdTime":"2020-08-25 07:12:41","host":"europe-58*","referer":"http://blog.topsec.com.cn/?p=4621","linkMd5ListStr":"476e4fbc84b253377a7a31ae1bcf446e","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"42.2 KB","destSize":"17.5 KB","compressRate":"41.4%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707284356_11.png","sourceStatusCode":200,"destWidth":310,"destHeight":97,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn60@2020_1/2020/08/24/23-12-42-714_ded324c149a94f9b.webp","sourceBytes":15163,"destBytes":5234,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2061,"convertSpendMs":4,"createdTime":"2020-08-25 07:12:41","host":"europe68*","referer":"http://blog.topsec.com.cn/?p=4717","linkMd5ListStr":"79e408832cb5ec9dc64945d930507031","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"14.8 KB","destSize":"5.1 KB","compressRate":"34.5%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081913060661_image-20200818191311239.png","sourceStatusCode":200,"destWidth":1460,"destHeight":478,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn43@2020_6/2020/08/24/23-12-43-006_6edd268572fdaabe.webp","sourceBytes":119271,"destBytes":47086,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2170,"convertSpendMs":60,"createdTime":"2020-08-25 07:12:41","host":"us-036*","referer":"http://blog.topsec.com.cn/?p=4750","linkMd5ListStr":"697e4db0fc47aec79bcda8a0648cab3f","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"116.5 KB","destSize":"46 KB","compressRate":"39.5%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020061307320523_image-20200611100830533.png","sourceStatusCode":200,"destWidth":618,"destHeight":194,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn72@2020_2/2020/08/24/23-12-42-893_674786e1e3fdd514.webp","sourceBytes":22862,"destBytes":8538,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":1943,"convertSpendMs":7,"createdTime":"2020-08-25 07:12:42","host":"us-028*","referer":"http://blog.topsec.com.cn/?p=4610","linkMd5ListStr":"75571ed9cd237c355ef5cdaef6961817","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"22.3 KB","destSize":"8.3 KB","compressRate":"37.3%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707321735_17.png","sourceStatusCode":200,"destWidth":919,"destHeight":109,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn3@2020_1/2020/08/24/23-12-43-272_7aca25bb10ea4099.webp","sourceBytes":17103,"destBytes":9302,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":1579,"convertSpendMs":23,"createdTime":"2020-08-25 07:12:42","host":"us-009*","referer":"http://blog.topsec.com.cn/?p=4717","linkMd5ListStr":"79e408832cb5ec9dc64945d930507031","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"16.7 KB","destSize":"9.1 KB","compressRate":"54.4%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705453313_18.png","sourceStatusCode":200,"destWidth":945,"destHeight":288,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn75@2020_3/2020/08/24/23-12-43-259_83b3c5df30f3173a.webp","sourceBytes":67232,"destBytes":29222,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":1927,"convertSpendMs":16,"createdTime":"2020-08-25 07:12:42","host":"us-017*","referer":"http://blog.topsec.com.cn/?p=4621","linkMd5ListStr":"476e4fbc84b253377a7a31ae1bcf446e","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"65.7 KB","destSize":"28.5 KB","compressRate":"43.5%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308482933_36340dd97c18b7074c08d30fd9fce4b7.png","sourceStatusCode":200,"destWidth":801,"destHeight":306,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn96@2020_2/2020/08/24/23-12-43-256_5445737998ff0f3b.webp","sourceBytes":31345,"destBytes":21494,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":1667,"convertSpendMs":18,"createdTime":"2020-08-25 07:12:42","host":"us-030*","referer":"http://blog.topsec.com.cn/?p=4663","linkMd5ListStr":"c1a394330c96e85f83b22a5aaf5f58b1","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"30.6 KB","destSize":"21 KB","compressRate":"68.6%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308495288_21ee55654a62cb8f7750458052485dfe.png","sourceStatusCode":200,"destWidth":1113,"destHeight":250,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn67@2020_5/2020/08/24/23-12-43-266_3e615c2dc02063fc.webp","sourceBytes":131533,"destBytes":25758,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2095,"convertSpendMs":15,"createdTime":"2020-08-25 07:12:42","host":"us-038*","referer":"http://blog.topsec.com.cn/?p=4663","linkMd5ListStr":"c1a394330c96e85f83b22a5aaf5f58b1","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"128.5 KB","destSize":"25.2 KB","compressRate":"19.6%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707341033_20.png","sourceStatusCode":200,"destWidth":1014,"destHeight":162,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn92@2020_6/2020/08/24/23-12-43-354_97ea653bc261d2b7.webp","sourceBytes":35512,"destBytes":16248,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":1756,"convertSpendMs":30,"createdTime":"2020-08-25 07:12:42","host":"us-040*","referer":"http://blog.topsec.com.cn/?p=4717","linkMd5ListStr":"79e408832cb5ec9dc64945d930507031","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"34.7 KB","destSize":"15.9 KB","compressRate":"45.8%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707344383_21.png","sourceStatusCode":200,"destWidth":383,"destHeight":61,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn27@2020_5/2020/08/24/23-12-43-335_12b2cc3b76ac033f.webp","sourceBytes":9817,"destBytes":4578,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":1465,"convertSpendMs":5,"createdTime":"2020-08-25 07:12:42","host":"us-011*","referer":"http://blog.topsec.com.cn/?p=4717","linkMd5ListStr":"79e408832cb5ec9dc64945d930507031","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"9.6 KB","destSize":"4.5 KB","compressRate":"46.6%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308484633_a5968e24e6caa97be9562234c80400e8.png","sourceStatusCode":200,"destWidth":1093,"destHeight":522,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn87@2020_2/2020/08/24/23-12-43-277_6560e99e6d7fa44d.webp","sourceBytes":57216,"destBytes":28932,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2055,"convertSpendMs":27,"createdTime":"2020-08-25 07:12:42","host":"europe-60*","referer":"http://blog.topsec.com.cn/?p=4663","linkMd5ListStr":"c1a394330c96e85f83b22a5aaf5f58b1","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"55.9 KB","destSize":"28.3 KB","compressRate":"50.6%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/202005190507122_5.png","sourceStatusCode":200,"destWidth":1534,"destHeight":94,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn47@2020_1/2020/08/24/23-12-42-642_c8981ee1fd9dc648.webp","sourceBytes":17327,"destBytes":21128,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":1674,"convertSpendMs":44,"createdTime":"2020-08-25 07:12:41","host":"us-026*","referer":"http://blog.topsec.com.cn/?p=4560","linkMd5ListStr":"0fb27ee4653525d5e82371e8bcbd7f07","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"16.9 KB","destSize":"20.6 KB","compressRate":"121.9%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081707362135_24.png","sourceStatusCode":200,"destWidth":1166,"destHeight":320,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn11@2020_1/2020/08/24/23-12-43-361_35ca5703a5f919a0.webp","sourceBytes":64526,"destBytes":27318,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2010,"convertSpendMs":17,"createdTime":"2020-08-25 07:12:42","host":"europe62*","referer":"http://blog.topsec.com.cn/?p=4717","linkMd5ListStr":"79e408832cb5ec9dc64945d930507031","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"63 KB","destSize":"26.7 KB","compressRate":"42.3%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308493212_3ba4f3c36c37c86019bd3e46a81de0b2.png","sourceStatusCode":200,"destWidth":500,"destHeight":71,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn51@2020_5/2020/08/24/23-12-43-688_93e2dd24e91c7c0c.webp","sourceBytes":4703,"destBytes":2718,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":1543,"convertSpendMs":3,"createdTime":"2020-08-25 07:12:43","host":"us-013*","referer":"http://blog.topsec.com.cn/?p=4663","linkMd5ListStr":"c1a394330c96e85f83b22a5aaf5f58b1","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"4.6 KB","destSize":"2.7 KB","compressRate":"57.8%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308480063_42e45309e4d50cc3bb655dab8a23df91.png","sourceStatusCode":200,"destWidth":727,"destHeight":247,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn35@2020_4/2020/08/24/23-12-43-597_9aafba88f84a2ec2.webp","sourceBytes":24336,"destBytes":15886,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":1919,"convertSpendMs":8,"createdTime":"2020-08-25 07:12:42","host":"europe64*","referer":"http://blog.topsec.com.cn/?p=4663","linkMd5ListStr":"c1a394330c96e85f83b22a5aaf5f58b1","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"23.8 KB","destSize":"15.5 KB","compressRate":"65.3%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081913043231_image-20200818182330520.png","sourceStatusCode":200,"destWidth":1678,"destHeight":688,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn83@2020_5/2020/08/24/23-12-43-410_d16641033ff36089.webp","sourceBytes":152976,"destBytes":48244,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2533,"convertSpendMs":58,"createdTime":"2020-08-25 07:12:42","host":"europe21*","referer":"http://blog.topsec.com.cn/?p=4750","linkMd5ListStr":"697e4db0fc47aec79bcda8a0648cab3f","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"149.4 KB","destSize":"47.1 KB","compressRate":"31.5%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020061307345612_image-20200611152248433.png","sourceStatusCode":200,"destWidth":1890,"destHeight":576,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn20@2020_6/2020/08/24/23-12-43-958_eb47f4936620f9fa.webp","sourceBytes":107501,"destBytes":38350,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2096,"convertSpendMs":44,"createdTime":"2020-08-25 07:12:42","host":"us-032*","referer":"http://blog.topsec.com.cn/?p=4610","linkMd5ListStr":"75571ed9cd237c355ef5cdaef6961817","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"105 KB","destSize":"37.5 KB","compressRate":"35.7%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308494621_6bbe808584d5a8e5d3c7b24d41400b7e.png","sourceStatusCode":200,"destWidth":938,"destHeight":304,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn44@2020_5/2020/08/24/23-12-43-977_f09a2af02525a191.webp","sourceBytes":33428,"destBytes":20176,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":1850,"convertSpendMs":13,"createdTime":"2020-08-25 07:12:42","host":"us-034*","referer":"http://blog.topsec.com.cn/?p=4663","linkMd5ListStr":"c1a394330c96e85f83b22a5aaf5f58b1","githubUser":"myreaderx14","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"32.6 KB","destSize":"19.7 KB","compressRate":"60.4%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308484359_a657b27f84e6bbeeb8f70706ba9108fa.png","sourceStatusCode":200,"destWidth":777,"destHeight":410,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn80@2020_1/2020/08/24/23-12-43-250_01bfc3b4cc5f403f.webp","sourceBytes":43383,"destBytes":22656,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":1855,"convertSpendMs":15,"createdTime":"2020-08-25 07:12:42","host":"us-007*","referer":"http://blog.topsec.com.cn/?p=4663","linkMd5ListStr":"c1a394330c96e85f83b22a5aaf5f58b1","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"42.4 KB","destSize":"22.1 KB","compressRate":"52.2%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/2020060301422650_hasHoles.png","sourceStatusCode":200,"destWidth":1183,"destHeight":734,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn16@2020_4/2020/08/24/23-12-44-240_2d8702f8f5e75c28.webp","sourceBytes":256704,"destBytes":72642,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2646,"convertSpendMs":153,"createdTime":"2020-08-25 07:12:42","host":"us-52*","referer":"http://blog.topsec.com.cn/?p=4580","linkMd5ListStr":"e85a79792b1f8a64fab7ae8daf29a466","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"250.7 KB","destSize":"70.9 KB","compressRate":"28.3%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308483899_888051938003f40fb97aa91a724e5887.png","sourceStatusCode":200,"destWidth":1380,"destHeight":511,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn99@2020_2/2020/08/24/23-12-44-458_46c649634b0d6d88.webp","sourceBytes":54769,"destBytes":31636,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2946,"convertSpendMs":62,"createdTime":"2020-08-25 07:12:42","host":"us-019*","referer":"http://blog.topsec.com.cn/?p=4663","linkMd5ListStr":"c1a394330c96e85f83b22a5aaf5f58b1","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"53.5 KB","destSize":"30.9 KB","compressRate":"57.8%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/06/202006040942471_image-20200602141317264.png","sourceStatusCode":200,"destWidth":1768,"destHeight":978,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn24@2020_4/2020/08/24/23-12-44-264_fdcd04590404c1ef.webp","sourceBytes":255089,"destBytes":85048,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2777,"convertSpendMs":157,"createdTime":"2020-08-25 07:12:42","host":"us-022*","referer":"http://blog.topsec.com.cn/?p=4598","linkMd5ListStr":"c7c8cbffef287b621a1ce720f021a330","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"249.1 KB","destSize":"83.1 KB","compressRate":"33.3%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/05/2020050902164442_5.png","sourceStatusCode":200,"destWidth":1660,"destHeight":890,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn7@2020_2/2020/08/24/23-12-44-158_2fb33692115678f4.webp","sourceBytes":224958,"destBytes":79210,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":3234,"convertSpendMs":62,"createdTime":"2020-08-25 07:12:42","host":"europe-24*","referer":"http://blog.topsec.com.cn/?p=4542","linkMd5ListStr":"c4a6286ac708b00b2f80221bd242a8e1","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"219.7 KB","destSize":"77.4 KB","compressRate":"35.2%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/08/2020081913045760_image-20200818182850654.png","sourceStatusCode":200,"destWidth":1788,"destHeight":984,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn47@2020_2/2020/08/24/23-12-44-700_d4e7a8e5687110d2.webp","sourceBytes":286873,"destBytes":105788,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":2739,"convertSpendMs":75,"createdTime":"2020-08-25 07:12:42","host":"us-024*","referer":"http://blog.topsec.com.cn/?p=4750","linkMd5ListStr":"697e4db0fc47aec79bcda8a0648cab3f","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"280.1 KB","destSize":"103.3 KB","compressRate":"36.9%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020072308493458_3bd0543cc0dc52a33e44fca9b345c270.png","sourceStatusCode":200,"destWidth":363,"destHeight":92,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn40@2020_1/2020/08/24/23-12-43-501_77c38247f2e738f8.webp","sourceBytes":6462,"destBytes":4816,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":3115,"convertSpendMs":7,"createdTime":"2020-08-25 07:12:42","host":"us-54*","referer":"http://blog.topsec.com.cn/?p=4663","linkMd5ListStr":"c1a394330c96e85f83b22a5aaf5f58b1","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"6.3 KB","destSize":"4.7 KB","compressRate":"74.5%"},{"code":1,"isDone":false,"source":"http://alphalab1-wordpress.stor.sinaapp.com/uploads/2020/07/2020070705445070_6.png","sourceStatusCode":200,"destWidth":3038,"destHeight":1932,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn31@2020_1/2020/08/24/23-12-45-421_b60efa1ed9d53bfd.webp","sourceBytes":538676,"destBytes":72290,"targetWebpQuality":75,"feedId":6823,"totalSpendMs":3528,"convertSpendMs":189,"createdTime":"2020-08-25 07:12:42","host":"us-001*","referer":"http://blog.topsec.com.cn/?p=4621","linkMd5ListStr":"476e4fbc84b253377a7a31ae1bcf446e","githubUser":"myreaderx23","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"526.1 KB","destSize":"70.6 KB","compressRate":"13.4%"}],"successGithubMap":{"myreaderx14":6,"myreaderx8":5,"myreaderx7":6,"myreaderx15":5,"myreaderx6":6,"myreaderx16":7,"myreaderx32":6,"myreaderx4":6,"myreaderx10":6,"myreaderx33":6,"myreaderx11":6,"myreaderx3":6,"myreaderx12":6,"myreaderx2":6,"myreaderx1":6,"myreaderx13":6,"myreaderx30":6,"myreaderx31":5,"myreaderx18":5,"myreaderx19":5,"myreaderx":4,"myreaderx25":6,"myreaderx27":6,"myreaderx21":6,"myreaderx22":6,"myreaderx23":6,"myreaderx24":6,"myreaderx5oss":5,"myreaderx29":6},"failGithubMap":{}}