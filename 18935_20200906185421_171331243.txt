{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-09-07 02:54:21","updatedTime":"2020-09-07 02:54:21","title":"It’s hard to beat fourteen files and an image folder","link":"http://wpcandy.com/?p=42536","description":"<p>Sometimes I think theme frameworks just aren&#8217;t a good thing for the end user.</p>\n<p>When it comes to the experience with the least friction, the most welcoming to a new user, and the least technically complex, I just don&#8217;t see anything beating a simple theme folder with a handful of template files and an image folder. Whether you&#8217;re adding something to the theme or just poking around a bit to see what your site&#8217;s theme is doing in there, it&#8217;s awesome to be able to open up a file called <code>header.php</code> that is, you know, actually representative of your theme&#8217;s header.</p>\n<p><span id=\"more-42536\"></span></p>\n<h3>Not all bad, of course</h3>\n<p>I’m not saying that I think theme frameworks are bad. They aren&#8217;t, at all. But, you have to admit that the mindset they come from is one that&#8217;s focused on developers first &#8212; even very slightly first &#8212; and users second.</p>\n<p>Frameworks make development faster and simpler in many cases, but if the end product isn&#8217;t a handful of template files in one folder it&#8217;s really not best for users.</p>\n<p>Heck, I&#8217;ve used frameworks quite a bit. I actually really like a lot of things about Genesis, for instance, and don’t mind working on projects where it’s the required framework. It works great for me in a lot of ways. But I can’t help but think it doesn’t end up handing the <em>best possible</em> product over to the end user.</p>\n<blockquote class=\"jump\"><p>…if the end product isn&#8217;t a handful of template files in one folder it&#8217;s really not best for users.</p></blockquote>\n<p>Here&#8217;s the simplest way to illustrate what I&#8217;m talking about. Opening up Twenty Ten, Eleven, Twelve, and Thirteen will all give you a similar greeting: somewhere around fifteen files, a stylesheet, and maybe an asset folder or two. Once you&#8217;ve opened up one of them, within reason, you know what will greet you the next time. And this is true of many, if not most, WordPress themes.</p>\n<p>For a theme built using a framework, let&#8217;s say as a child theme which is a pretty popular way to go nowadays. Their theme folder might just contain <code>functions.php</code> and <code>style.css</code> files. If they are looking to tweak something about their theme, or learn a bit about how they might do that, they have a <em>heckuva</em> longer way to go than if they opened up a theme full of template files.</p>\n<p>If a hypothetical user want to modify the way their category pages display, or at least look at the template to see where a certain phrase or heading is generated, in one case they&#8217;ll find a <code>category.php</code> or <code>archive.php</code> file. I bet they&#8217;ll look into that one. In the other, more complicated situation, I&#8217;m not sure what they would do next.</p>\n<h3>Best of both worlds</h3>\n<p>I&#8217;ve talked before about the different between a framework theme and <a title=\"Starter theme frameworks vs. other types of frameworks\" href=\"http://wpcandy.com/presents/wordpress-theme-framework-comparison/\">what I consider a starter theme</a>, but they are the type of theme I&#8217;m likely to start a site with if I have the choice.</p>\n<p>After fooling around with Kubrick &#8212; and who didn&#8217;t way back when? &#8212; I remember working with Sandbox for nearly every WordPress website I made. It was nothing I didn’t need, but a lot of stuff that I found really useful. It even had stuff in it that eventually found its way into core WordPress template functions, which is about the best compliment I can imagine a WordPress theme receiving.</p>\n<p>The next starter theme that really jumps out at me is WP Framework, by Ptah Dunbar. It was <em>slightly</em> more complex, in the sense that it contained a framework folder that provided some fancy functions to the rest of the theme. Really, looking back at it now, it was just a <code>/library/</code> folder in hyperdrive.</p>\n<p>For the last year or so I’ve been using <a title=\"Underscores\" href=\"http://underscores.me/\">Underscores</a>, the starter theme built by Automattic and a handful of contributors. It’s one of the better options I know of right now when it comes to clean, efficient, out-of-the-way themes. Every site I build begins with it.</p>\n<h3>And one to think on</h3>\n<p>I realize this isn’t the most groundbreaking thing to write up and say. But it’s something I’ve been thinking about recently, particularly when building within different framework projects. And hey, I’ve got to come back and start writing with <em>something</em>, right? This seemed about as good a topic as anything else.</p>\n<p>There&#8217;s usually a decent amount of discussion around the dashboard side of usability with themes, and I&#8217;ve definitely participated in those in the past. But how often do we really think about the file structure and code complexity of our themes, and what a new user looking to go digging around might find?</p>\n<p>For a user looking into a framework-built theme, they will likely be peeking into a folder that looks <em>very</em> different than what we saw tearing into Kubrick years ago. Maybe that&#8217;s a good thing, but I&#8217;m not so sure it is.</p>\n<div class=\"tentblogger-rss-footer\"><p>You just finished reading <a href=\"http://wpcandy.com/?p=42536\">It's hard to beat fourteen files and an image folder</a> on <a href=\"http://wpcandy.com\" title=\"WPCandy WordPress community news\">WPCandy</a>. Please consider leaving a comment!</p><p></p></div><p>The post <a rel=\"nofollow\" href=\"http://wpcandy.com/thinks/fourteen-files-and-an-image-folder/\">It&#8217;s hard to beat fourteen files and an image folder</a> appeared first on <a rel=\"nofollow\" href=\"http://wpcandy.com\">WPCandy</a>.</p>\n","descriptionType":"html","publishedDate":"Wed, 10 Jul 2013 22:56:31 +0000","feedId":18935,"bgimg":"","linkMd5":"96c0d1d9c5b68894eb5c403c9794ad3d","bgimgJsdelivr":"","metaImg":"","author":"Ryan Imel","publishedOrCreatedDate":1599418461575}],"record":{"createdTime":"2020-09-07 02:54:21","updatedTime":"2020-09-07 02:54:21","feedId":18935,"fetchDate":"Sun, 06 Sep 2020 18:54:21 +0000","fetchMs":36,"handleMs":92481,"totalMs":92538,"newArticles":0,"totalArticles":10,"status":1,"type":0,"ip":"b61367955ce0c617c692299987db8df0","hostName":"europe-22*","requestId":"5504fd2b13d04572ad1c1c3a8cb3e689_18935","contentType":"text/xml; charset=UTF-8","totalBytes":0,"bgimgsTotal":0,"bgimgsGithubTotal":0,"articlesImgsTotal":0,"articlesImgsGithubTotal":0,"successGithubMap":{},"failGithubMap":{}},"feed":{"createdTime":"2020-09-07 02:18:42","updatedTime":"2020-09-07 02:18:42","id":18935,"name":"WPCandy","url":"http://feeds.feedburner.com/wpcandy","subscriber":175,"website":null,"icon":"http://wpcandy.com/favicon.ico","icon_jsdelivr":null,"description":"A blog all about WordPress. Yes, we're a bit meta.","weekly":null,"link":"http://wpcandy.com"},"noPictureArticleList":[],"tmpCommonImgCdnBytes":0,"tmpBodyImgCdnBytes":0,"tmpBgImgCdnBytes":0,"extra4":{"start":1599418369037,"total":0,"statList":[{"spend":57,"msg":"获取xml内容"},{"spend":92481,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"正文链接上传到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"}]},"extra5":0,"extra6":0,"extra7ImgCdnFailResultVector":[],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{},"extra12ImgCdnSuccessResultVector":[],"successGithubMap":{},"failGithubMap":{}}