{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-11-03 13:58:47","updatedTime":"2020-11-03 13:58:47","title":"介绍一种全新的clipPath Sprites小图标技术","link":"https://www.zhangxinxu.com/wordpress/?p=9539","description":"<p>by <a href=\"https://www.zhangxinxu.com/\">zhangxinxu</a> from <a href=\"https://www.zhangxinxu.com/wordpress/?p=9539\">https://www.zhangxinxu.com/wordpress/?p=9539</a><br /> 本文欢迎分享与聚合，全文转载就不必了，尊重版权，圈子就这么大，若急用可以联系授权。</p> \n<p><script>window.wxShareImgUrl = 'https://www.zhangxinxu.com/study/image/share/202010-clip-sprites.png';</script></p> \n<p><img src=\"https://image.zhangxinxu.com/image/blog/202010/clip-sprites-cover.png\" width=\"480\" height=\"309\" alt=\"剪裁图标合集技术\" class=\"alignright clip thumb size-medium\" /></p> \n<p>目前流行的SVG小图标技术是SVG Sprites技术，此技术我6年前就率先在国内进行了介绍：“<a href=\"https://www.zhangxinxu.com/wordpress/2014/07/introduce-svg-sprite-technology/\">未来必热：SVG Sprites技术介绍</a>”，这里再介绍另外一种同样需要用到SVG元素的Sprites技术，我称之为“clipPath Sprites技术”。</p> \n<h3>一、关于clip-path与小图标实现</h3> \n<p>CSS <code>clip-path</code>属性除了剪裁圆、多边形之外，还支持<code>url()</code>函数语法，可以把SVG元素中的路径作为剪裁路径。</p> \n<p>语法示意如下：</p> \n<pre>.shape {\n    clip-path: url(#someId);\n}</pre> \n<p><code>someId</code>就是SVG中<code>&lt;clipPath&gt;</code>元素的ID值。</p> \n<p>例如：</p> \n<pre>&lt;svg&gt;\n  &lt;clipPath <span style=\"color:#cd0000;\">id=\"someId\"</span>&gt;...&lt;/clipPath&gt;\n&lt;/svg&gt;</pre> \n<p>下面通过一个具体案例演示下这种语法的效果。</p> \n<p>假设有如下SVG代码：</p> \n<pre>&lt;svg width=\"50\" height=\"50\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"&gt;\n    &lt;ellipse cx=\"25\" cy=\"25\" rx=\"20\" ry=\"10\"&gt;&lt;/ellipse&gt;\n    &lt;rect x=\"15\" y=\"5\" width=\"20\" height=\"40\" rx=\"5\" ry=\"5\"&gt;&lt;/rect&gt;\n&lt;/svg&gt;</pre> \n<p>会有如下图所示的姨妈巾效果：</p> \n<p><img src=\"https://image.zhangxinxu.com/image/blog/202007/12-4_mask-image-origin-svg.png\" loading=\"lazy\" alt=\"SVG元素图形效果示意\" width=\"125\" height=\"122\" /></p> \n<p>此时，可以把SVG中的图形元素全部放在<code>&lt;clipPath&gt;</code>元素中，这样，就可以把任意的元素剪裁为姨妈巾的形状了。</p> \n<pre>&lt;svg width=\"0\" height=\"0\"&gt;\n  &lt;clipPath id=\"someId\"&gt;\n    &lt;ellipse cx=\"25\" cy=\"25\" rx=\"20\" ry=\"10\"&gt;&lt;/ellipse&gt;\n    &lt;rect x=\"15\" y=\"5\" width=\"20\" height=\"40\" rx=\"5\" ry=\"5\"&gt;&lt;/rect&gt;\n  &lt;/clipPath&gt;\n&lt;/svg&gt;</pre> \n<p>但是，实际测试发现，上面的代码只有在50px*50px的元素中效果才是正常的，也就是剪裁元素的尺寸默认需要和SVG元素图形尺寸一致才行，这就有些坑爹了，好在SVG提供了一些方法可以适用于任意的HTML元素尺寸。</p> \n<h4>方法1：transform缩放SVG</h4> \n<p>例如剪裁的HTML元素的尺寸是20px*20px，原SVG尺寸是50px，因此，需要缩放40%，此时就有如下所示的SVG代码：</p> \n<pre>&lt;svg width=\"0\" height=\"0\"&gt;\n  &lt;clipPath id=\"someId\"&gt;\n    &lt;ellipse <span style=\"color:#cd0000;\">transform=\"scale(0.4, 0.4)\"</span> cx=\"25\" cy=\"25\" rx=\"20\" ry=\"10\"&gt;&lt;/ellipse&gt;\n    &lt;rect <span style=\"color:#cd0000;\">transform=\"scale(0.4, 0.4)\"</span> x=\"15\" y=\"5\" width=\"20\" height=\"40\" rx=\"5\" ry=\"5\"&gt;&lt;/rect&gt;\n  &lt;/clipPath&gt;\n&lt;/svg&gt;</pre> \n<p>此时，就可以把20px*20px大小元素剪裁成对应规格的图形效果了：</p> \n<pre>.icon {\n    display: inline-block;\n    width: 20px; height: 20px;\n    background-color: deepskyblue;\n    clip-path: url(#someId);\n}</pre> \n<p>此时就有如下图所示的效果：</p> \n<p><img src=\"https://image.zhangxinxu.com/image/blog/202010/2020-10-29_233531.png\" width=\"228\" height=\"107\" alt=\"transform缩放下的图标效果\" class=\"alignnone size-medium\" /></p> \n<h4>方法2：设置clipPathUnits=”objectBoundingBox”</h4> \n<p>设置剪裁位置是基于对象的尺寸，此时，需要SVG图形中的坐标都以数值1为基准进行计算，因此，通常路径或者参数值基本上都是小于1的数值，例如：</p> \n<pre>&lt;svg width=\"0\" height=\"0\"&gt;\n  &lt;clipPath id=\"someId\" clipPathUnits=\"objectBoundingBox\"&gt;\n    &lt;ellipse cx=\".5\" cy=\".5\" rx=\".4\" ry=\".2\"&gt;&lt;/ellipse&gt;\n    &lt;rect x=\".3\" y=\".1\" width=\".4\" height=\".8\" rx=\".1\" ry=\".1\"&gt;&lt;/rect&gt;\n  &lt;/clipPath&gt;\n&lt;/svg&gt;  </pre> \n<p>此时，剪裁的图形效果会按照元素的的尺寸计算，无论图标的尺寸是20px*20px，还是100px*100px，都会按照这个尺寸进行剪裁。</p> \n<p>实现的效果如下截图所示：</p> \n<p><img src=\"https://image.zhangxinxu.com/image/blog/202010/2020-10-29_234020.png\" width=\"285\" height=\"105\" alt=\"图标效果示意\" class=\"alignnone size-medium\" /></p> \n<p>眼见为实，您可以狠狠地点击这里：<a href=\"https://www.zhangxinxu.com/study/202010/clip-path-svg-icon-demo.php\" rel=\"noopener\" target=\"_blank\">2种方法实现的clip-path小图标剪裁效果demo</a></p> \n<p>无论是<code>transform</code>缩放，还是<code>objectBoundingBox</code>重计算，都可以实现任意尺寸的SVG剪裁效果。</p> \n<p>下图是Firefox浏览器下的效果截图：</p> \n<p><img src=\"https://image.zhangxinxu.com/image/blog/202010/2020-10-29_234351.png\" width=\"353\" height=\"215\" alt=\"clip-path实现小图标效果示意\" class=\"alignnone size-medium\" /></p> \n<p><span class=\"hidden\">//zxx: 如果你看到这段文字，说明你现在访问是体验糟糕的垃圾盗版网站，你可以访问原文获得很好的体验：https://www.zhangxinxu.com/wordpress/?p=9539（作者张鑫旭）</span></p> \n<h4>关于IE/Edge浏览器</h4> \n<p>CSS中有3个很高级属性IE浏览器也是支持的，分别是<code>clip-path</code>属性，<code>filter</code>属性和<code>mask</code>属性。</p> \n<p>但是，请注意，这些支持其实并不是CSS规范中的那种支持，而是SVG元素衍生过来的语法，因为IE浏览器支持SVG，而SVG中有一些特性可以在CSS中使用，因此，IE浏览器也支持了部分高级CSS语法，就好像SVG中的<code>fill</code>和<code>stroke</code>属性也可以在IE中使用一样。</p> \n<p>同样的，<code>clip-path</code>属性，<code>filter</code>属性和<code>mask</code>属性都是仅支持<code>url()</code>语法，均指向SVG元素。</p> \n<p>因此，虽然<code>clip-path:url(#someId)</code>在IE/Edge浏览器下语法是合法的，但是仅仅作用在SVG元素上才有效果，也就是下面的HTML代码IE浏览器是没有效果的：</p> \n<pre>&lt;i class=\"icon\"&gt;&lt;/i&gt;</pre> \n<p>但是下面的代码就有剪裁效果：</p> \n<pre>&lt;svg width=\"20\" height=\"20\"&gt;\n  &lt;rect fill=\"deepskyblue\" class=\"icon\"&gt;&lt;/rect&gt;\n&lt;/svg&gt;</pre> \n<p>因此，如果需要兼容IE浏览器，只要把普通HTML元素改为使用SVG元素就可以了。</p> \n<h3>二、更进一步，clipPath Sprites小图标技术</h3> \n<p>在传统的SVG Sprites中使用的是SVG <code>&lt;use&gt;</code>元素的<code>href</code>属性值指向<code>&lt;symbol&gt;</code>元素的id属性，嘿！岂不是和这里的实现逻辑本质上是一样的，这里是CSS clip-path属性中的<code>url()</code>函数值指向<code>&lt;clipPath&gt;</code>元素的id属性。</p> \n<p>因此，理论上，传统SVG Sprites合并那一套东西也是可以用在clipPath Sprites合并中的。</p> \n<p>受此idea的启发，我就把我之前制作的SVG压缩合并工具升级了下，增加了clipPath Sprites合并功能（选择的是<code>transform</code>缩放，因为更容易实现[捂脸]），发现这个技术完全可行。</p> \n<p>您可以狠狠地点击这里：<a href=\"https://www.zhangxinxu.com/sp/svgo/\" rel=\"noopener\" target=\"_blank\" class=\"a_link\">升级后的SVG在线压缩合并工具</a></p> \n<p>从这个我做的<a href=\"https://www.zhangxinxu.com/sp/icon/\" rel=\"noopener\" target=\"_blank\">SVG Sprites还原工具</a>中下载几个比较顺眼的图标，然后拖进去——</p> \n<p><img src=\"https://image.zhangxinxu.com/image/blog/202010/2020-10-30_005955.png\" width=\"668\" height=\"353\" alt=\"图标拖拽进去示意\" class=\"alignnone size-medium\" /></p> \n<p>在页面的最下方就可以看到合并后的clipPath Sprites代码了，如下截图示意：</p> \n<p><img src=\"https://image.zhangxinxu.com/image/blog/202010/2020-10-30_010145.png\" width=\"654\" height=\"430\" alt=\"clipPath Sprites代码示意\" class=\"alignnone size-medium\" /></p> \n<p>点击复制或下载按钮，把输入框中的SVG代码复制到页面中，此时，就可以使用CSS <code>clip-path</code>属性实现各式各样的小图标效果了。</p> \n<pre>&lt;svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0\" height=\"0\" style=\"position:absolute;\"&gt;\n    &lt;clipPath id=\"eye\"&gt;&lt;path transform=\"scale(0.034724, 0.0390625)\" d=\"...\"/&gt;&lt;/clipPath&gt;\n    &lt;clipPath id=\"paper-plane\"&gt;&lt;path transform=\"scale(0.0390625, 0.0390625)\" d=\"...\"/&gt;&lt;/clipPath&gt;\n    &lt;clipPath id=\"comment\"&gt;&lt;path transform=\"scale(0.0390625, 0.0390625)\" d=\"...\"/&gt;&lt;/clipPath&gt;\n&lt;/svg&gt;  </pre> \n<p>例如有如下所示的HTML和CSS代码：</p> \n<pre>&lt;ul id=\"ul\"&gt;\n    &lt;li&gt;&lt;i class=\"icon\" style=\"--clipPath:url(#paper-plane)\"&gt;&lt;/i&gt;分享&lt;/li&gt;\n    &lt;li&gt;&lt;i class=\"icon\" style=\"--clipPath:url(#eye)\"&gt;&lt;/i&gt;预览&lt;/li&gt;\n    &lt;li&gt;&lt;i class=\"icon\" style=\"--clipPath:url(#comment)\"&gt;&lt;/i&gt;评论&lt;/li&gt;\n&lt;/ul&gt;</pre> \n<pre>.icon {\n    display: inline-block;\n    width: 20px; height: 20px;\n    background-color: currentColor;\n    -webkit-clip-path: var(--clipPath);\n    clip-path: var(--clipPath);\n    vertical-align: middle;\n    margin-right: 1ch;\n}</pre> \n<p>此时就有如下图所示的小图标效果：</p> \n<p><img src=\"https://image.zhangxinxu.com/image/blog/202010/2020-10-30_010631.png\" width=\"130\" height=\"112\" alt=\"小图标效果实现示意\" class=\"alignnone size-medium\" /></p> \n<p>眼见为实，有演示的，您可以狠狠地点击这里：<a href=\"https://www.zhangxinxu.com/study/202010/clip-path-svg-sprites-demo.php\" rel=\"noopener\" target=\"_blank\">SVG clipPath合并图标效果demo</a></p> \n<p>由于是通过剪裁实现的，因此实现的图标效果支持任意变色，如下GIF录屏示意（点击播放317K）：</p> \n<p><img src=\"https://image.zhangxinxu.com/image/blog/202010/icon-color-change.png\" width=\"337\" height=\"428\" alt=\"颜色变化GIF录屏示意\" class=\"alignnone size-medium\" onclick=\"this.src=this.src.replace('.png', '.gif')\" /></p> \n<p>也可以是渐变效果（改成背景渐变即可），例如：</p> \n<pre>.icon {\n    background: linear-gradient(deepskyblue, deeppink);\n    ...\n}</pre> \n<p>渐变效果如下截图：</p> \n<p><img src=\"https://image.zhangxinxu.com/image/blog/202010/2020-10-30_011925.png\" width=\"141\" height=\"118\" alt=\"渐变截图效果\" class=\"alignnone size-medium\" /></p> \n<p>当然，也可以把照片剪裁成图标模板，或者是任意的元素，按钮、文字等都可以剪裁成小图标的样子，非常灵活。</p> \n<h4>对比传统SVG Sprites技术</h4> \n<table border=\"0\" width=\"100%\" class=\"params_table\" cellspacing=\"1\"> \n <thead> \n  <tr> \n   <th></th> \n   <th>传统SVG Sprites</th> \n   <th>clipPath Sprites</th> \n  </tr> \n </thead> \n <tbody> \n  <tr> \n   <th>矢量 <td>✔</td> <td>✔</td> </th>\n  </tr> \n  <tr> \n   <th>颜色可变 <td>✔</td> <td>✔</td> </th>\n  </tr> \n  <tr> \n   <th>支持渐变 <td>✘</td> <td>✔</td> </th>\n  </tr> \n  <tr> \n   <th>标签 <td>svg&gt;use</td> <td>任意HTML标签（IE除外）</td> </th>\n  </tr> \n  <tr> \n   <th>兼容性 <td>IE9+</td> <td>IE9+（IE需使用SVG元素）</td> </th>\n  </tr> \n  <tr> \n   <th>尺寸控制 <td>灵活</td> <td>transform方法受限 | clipPathUnits方法灵活</td> </th>\n  </tr> \n  <tr> \n   <th>工具 <td>丰富 ✔</td> <td>起步中……</td> </th>\n  </tr> \n </tbody> \n</table> \n<p>整体来看，clipPath Sprites技术的优势更强，尤其在移动端开发中，只要后期有转换工具可以把所有的SVG图标路径转成clipPathUnits为objectBoundingBox模式的数值，那么clipPath Sprites技术几乎就没有任何缺陷，取代传统的SVG Sprites小图标技术应该不成问题。</p> \n<h3>三、肝不动的结语</h3> \n<p>本月爆更11篇技术文章，10年来新高，为什么高产四母猪呢？因为《CSS新世界》这本书交稿了，有时候更新博客了，于是积攒的文章一次性爆发了，不过也导致这个月天天很晚睡，实在有些肝不动了。</p> \n<p>回到文章这里，clipPath Sprites技术是自己写CSS <code>clip-path</code>章节突然的灵感，我查了下国内外的资料，有使用<code>clip-path</code>实现小图标效果的案例，但是并没有发现谁把小图标全部打包在一起的案例，因此，本文的clipPath Sprites技术可以算是一个首创的技术吧。</p> \n<p>不过，也是最近刚折腾出来的，还没有在生成环境使用，因此，是否有什么坑还不得而知，不过按照我长期以来使用<code>clip-path</code>的经验来看，应该没什么问题，<code>clip-path</code>一直是一个运行非常稳健的CSS属性，在移动端兼容性也非常好。</p> \n<p>我近期会在合适的项目中尝试这种图标技术，之后有变化会进一步更新。</p> \n<p>OK，结语就说这么多。</p> \n<p>如果你觉得本文内容确实有点料，欢迎分享，也欢迎以评论方式进行交流，补充我不知道的信息，或者指出文章有表述不准确的地方。</p> \n<p><img src=\"https://image.zhangxinxu.com/image/emtion/emoji/2764.svg\" width=\"20\" height=\"20\" align=\"absmiddle\" /></p> \n<p>本文为原创文章，欢迎分享，勿全文转载，如果实在喜欢，可收藏，永不过期，且会及时更新知识点及修正错误，阅读体验也更好。<br /> 本文地址：<a href=\"https://www.zhangxinxu.com/wordpress/?p=9539\">https://www.zhangxinxu.com/wordpress/?p=9539</a></p> \n<p>（本篇完）</p>","descriptionType":"html","publishedDate":"Thu, 29 Oct 2020 17:57:30 +0000","feedId":5706,"bgimg":"https://image.zhangxinxu.com/image/blog/202010/clip-sprites-cover.png","linkMd5":"dd92e33100d1a0820effcd3c76ecb1d3","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn25@2020_4/2020/11/03/05-59-01-287_ea324714c3d3724f.webp","destWidth":480,"destHeight":309,"sourceBytes":25947,"destBytes":22562,"author":"张 鑫旭","articleImgCdnMap":{"https://image.zhangxinxu.com/image/blog/202010/clip-sprites-cover.png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn25@2020_4/2020/11/03/05-59-01-287_ea324714c3d3724f.webp","https://image.zhangxinxu.com/image/blog/202007/12-4_mask-image-origin-svg.png":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn49@2020_3/2020/11/03/05-59-03-372_1630a4e50536a3db.webp","https://image.zhangxinxu.com/image/blog/202010/2020-10-29_233531.png":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn29@2020_3/2020/11/03/05-59-03-228_6a6f47d9bbf352e1.webp","https://image.zhangxinxu.com/image/blog/202010/2020-10-29_234020.png":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn57@2020_6/2020/11/03/05-59-03-194_d8a2ba9b33bc9818.webp","https://image.zhangxinxu.com/image/blog/202010/2020-10-29_234351.png":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn62@2020_2/2020/11/03/05-59-03-533_bbf33556b5fc6a2b.webp","https://image.zhangxinxu.com/image/blog/202010/2020-10-30_005955.png":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn34@2020_1/2020/11/03/05-59-03-321_0cecaf216d28c6b5.webp","https://image.zhangxinxu.com/image/blog/202010/2020-10-30_010145.png":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn37@2020_1/2020/11/03/05-59-09-243_f7443886ba336cec.webp","https://image.zhangxinxu.com/image/blog/202010/2020-10-30_010631.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn53@2020_6/2020/11/03/05-59-02-583_487cdb9232d99e80.webp","https://image.zhangxinxu.com/image/blog/202010/icon-color-change.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn41@2020_4/2020/11/03/05-59-03-224_6eb5060b53df7d95.webp","https://image.zhangxinxu.com/image/blog/202010/2020-10-30_011925.png":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn65@2020_2/2020/11/03/05-59-04-235_8b7f292c09cb563d.webp","https://image.zhangxinxu.com/image/emtion/emoji/2764.svg":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn46@2020_2/2020/11/03/05-59-16-423_345d3ecc932d1a40.svg"},"publishedOrCreatedDate":1604383127617}],"record":{"createdTime":"2020-11-03 13:58:47","updatedTime":"2020-11-03 13:58:47","feedId":5706,"fetchDate":"Tue, 03 Nov 2020 05:58:47 +0000","fetchMs":3070,"handleMs":14,"totalMs":33196,"newArticles":0,"totalArticles":10,"status":1,"type":0,"ip":"521d8df089fc67e35add3163b58b477a","hostName":"us-007*","requestId":"ea7cf0c12fbd41138c1675a2de1d7eee_5706","contentType":"application/rss+xml; charset=UTF-8","totalBytes":142911,"bgimgsTotal":1,"bgimgsGithubTotal":1,"articlesImgsTotal":11,"articlesImgsGithubTotal":11,"successGithubMap":{"myreaderx7":1,"myreaderx16":1,"myreaderx6":1,"myreaderx10":1,"myreaderx4":1,"myreaderx32":1,"myreaderx22":1,"myreaderx24":1,"myreaderx29":1,"myreaderx19":1,"myreaderx":1},"failGithubMap":{}},"feed":{"createdTime":"2020-08-25 04:30:15","updatedTime":"2020-09-01 11:15:46","id":5706,"name":"张鑫旭-鑫空间-鑫生活","url":"http://www.zhangxinxu.com/wordpress/feed/","subscriber":null,"website":null,"icon":"https://www.zhangxinxu.com/favicon.ico","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx61/cdn89@2020_1/2020/09/01/03-15-46-738_9a339309f46b07b8.ico","description":"提高前端技术，先从使用谷歌搜索做起","weekly":null,"link":null},"noPictureArticleList":[],"tmpCommonImgCdnBytes":22562,"tmpBodyImgCdnBytes":120349,"tmpBgImgCdnBytes":0,"extra4":{"start":1604383124120,"total":0,"statList":[{"spend":3483,"msg":"获取xml内容"},{"spend":14,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":14897,"msg":"正文链接上传到cdn"}]},"extra5":11,"extra6":11,"extra7ImgCdnFailResultVector":[],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://us-038.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-001.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-034.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe64.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-010.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-022.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-22.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-60.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-014.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-026.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202010/clip-sprites-cover.png","sourceStatusCode":200,"destWidth":480,"destHeight":309,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn25@2020_4/2020/11/03/05-59-01-287_ea324714c3d3724f.webp","sourceBytes":25947,"destBytes":22562,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":2029,"convertSpendMs":10,"createdTime":"2020-11-03 13:59:00","host":"europe-56*","referer":"https://www.zhangxinxu.com/wordpress/?p=9539","linkMd5ListStr":"dd92e33100d1a0820effcd3c76ecb1d3,dd92e33100d1a0820effcd3c76ecb1d3","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"25.3 KB","destSize":"22 KB","compressRate":"87%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202010/2020-10-30_010631.png","sourceStatusCode":200,"destWidth":130,"destHeight":112,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn53@2020_6/2020/11/03/05-59-02-583_487cdb9232d99e80.webp","sourceBytes":2533,"destBytes":3342,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":912,"convertSpendMs":5,"createdTime":"2020-11-03 13:59:02","host":"us-026*","referer":"https://www.zhangxinxu.com/wordpress/?p=9539","linkMd5ListStr":"dd92e33100d1a0820effcd3c76ecb1d3","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"2.5 KB","destSize":"3.3 KB","compressRate":"131.9%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202010/2020-10-29_234020.png","sourceStatusCode":200,"destWidth":285,"destHeight":105,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn57@2020_6/2020/11/03/05-59-03-194_d8a2ba9b33bc9818.webp","sourceBytes":3332,"destBytes":4490,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":1507,"convertSpendMs":4,"createdTime":"2020-11-03 13:59:02","host":"us-014*","referer":"https://www.zhangxinxu.com/wordpress/?p=9539","linkMd5ListStr":"dd92e33100d1a0820effcd3c76ecb1d3","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"3.3 KB","destSize":"4.4 KB","compressRate":"134.8%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202010/2020-10-29_233531.png","sourceStatusCode":200,"destWidth":228,"destHeight":107,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn29@2020_3/2020/11/03/05-59-03-228_6a6f47d9bbf352e1.webp","sourceBytes":3160,"destBytes":4494,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":1529,"convertSpendMs":12,"createdTime":"2020-11-03 13:59:02","host":"us-034*","referer":"https://www.zhangxinxu.com/wordpress/?p=9539","linkMd5ListStr":"dd92e33100d1a0820effcd3c76ecb1d3","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"3.1 KB","destSize":"4.4 KB","compressRate":"142.2%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202007/12-4_mask-image-origin-svg.png","sourceStatusCode":200,"destWidth":125,"destHeight":122,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn49@2020_3/2020/11/03/05-59-03-372_1630a4e50536a3db.webp","sourceBytes":1406,"destBytes":906,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":1721,"convertSpendMs":7,"createdTime":"2020-11-03 13:59:02","host":"us-038*","referer":"https://www.zhangxinxu.com/wordpress/?p=9539","linkMd5ListStr":"dd92e33100d1a0820effcd3c76ecb1d3","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.4 KB","destSize":"906 B","compressRate":"64.4%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202010/2020-10-30_005955.png","sourceStatusCode":200,"destWidth":668,"destHeight":353,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn34@2020_1/2020/11/03/05-59-03-321_0cecaf216d28c6b5.webp","sourceBytes":12505,"destBytes":20520,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":1721,"convertSpendMs":24,"createdTime":"2020-11-03 13:59:02","host":"us-022*","referer":"https://www.zhangxinxu.com/wordpress/?p=9539","linkMd5ListStr":"dd92e33100d1a0820effcd3c76ecb1d3","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"12.2 KB","destSize":"20 KB","compressRate":"164.1%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202010/icon-color-change.png","sourceStatusCode":200,"destWidth":337,"destHeight":428,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn41@2020_4/2020/11/03/05-59-03-224_6eb5060b53df7d95.webp","sourceBytes":12257,"destBytes":10080,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":1670,"convertSpendMs":9,"createdTime":"2020-11-03 13:59:02","host":"europe-22*","referer":"https://www.zhangxinxu.com/wordpress/?p=9539","linkMd5ListStr":"dd92e33100d1a0820effcd3c76ecb1d3","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"12 KB","destSize":"9.8 KB","compressRate":"82.2%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202010/2020-10-29_234351.png","sourceStatusCode":200,"destWidth":353,"destHeight":215,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn62@2020_2/2020/11/03/05-59-03-533_bbf33556b5fc6a2b.webp","sourceBytes":6306,"destBytes":10656,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":1845,"convertSpendMs":7,"createdTime":"2020-11-03 13:59:02","host":"us-001*","referer":"https://www.zhangxinxu.com/wordpress/?p=9539","linkMd5ListStr":"dd92e33100d1a0820effcd3c76ecb1d3","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"6.2 KB","destSize":"10.4 KB","compressRate":"169%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202010/2020-10-30_011925.png","sourceStatusCode":200,"destWidth":141,"destHeight":118,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn65@2020_2/2020/11/03/05-59-04-235_8b7f292c09cb563d.webp","sourceBytes":3001,"destBytes":3360,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":2542,"convertSpendMs":6,"createdTime":"2020-11-03 13:59:02","host":"europe64*","referer":"https://www.zhangxinxu.com/wordpress/?p=9539","linkMd5ListStr":"dd92e33100d1a0820effcd3c76ecb1d3","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"2.9 KB","destSize":"3.3 KB","compressRate":"112%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202010/2020-10-30_010145.png","sourceStatusCode":200,"destWidth":654,"destHeight":430,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn37@2020_1/2020/11/03/05-59-09-243_f7443886ba336cec.webp","sourceBytes":71998,"destBytes":62110,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":7782,"convertSpendMs":24,"createdTime":"2020-11-03 13:59:02","host":"us-010*","referer":"https://www.zhangxinxu.com/wordpress/?p=9539","linkMd5ListStr":"dd92e33100d1a0820effcd3c76ecb1d3","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"70.3 KB","destSize":"60.7 KB","compressRate":"86.3%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/emtion/emoji/2764.svg","sourceStatusCode":200,"destWidth":0,"destHeight":0,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn46@2020_2/2020/11/03/05-59-16-423_345d3ecc932d1a40.svg","sourceBytes":391,"destBytes":391,"feedId":5706,"totalSpendMs":14682,"convertSpendMs":0,"createdTime":"2020-11-03 13:59:02","host":"europe-60*","referer":"https://www.zhangxinxu.com/wordpress/?p=9539","linkMd5ListStr":"dd92e33100d1a0820effcd3c76ecb1d3","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"391 B","destSize":"391 B","compressRate":"100%"}],"successGithubMap":{"myreaderx7":1,"myreaderx16":1,"myreaderx6":1,"myreaderx10":1,"myreaderx4":1,"myreaderx32":1,"myreaderx22":1,"myreaderx24":1,"myreaderx29":1,"myreaderx19":1,"myreaderx":1},"failGithubMap":{}}