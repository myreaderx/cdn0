{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-10-10 03:11:26","updatedTime":"2020-10-10 03:11:26","title":"Amazon Aurora Multi-Primary First Impression","link":"https://www.percona.com/blog/?p=71900","description":"<img width=\"200\" height=\"112\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Amazon-Aurora-Multi-Primary-First-Impression-200x112.png\" class=\"webfeedsFeaturedVisual wp-post-image\" alt=\"Amazon Aurora Multi-Primary First Impression\" loading=\"lazy\" style=\"display: block; margin-bottom: 5px; clear:both;max-width: 100%;\" link_thumbnail=\"\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Amazon-Aurora-Multi-Primary-First-Impression-200x112.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/Amazon-Aurora-Multi-Primary-First-Impression-300x168.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/Amazon-Aurora-Multi-Primary-First-Impression-1024x572.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/10/Amazon-Aurora-Multi-Primary-First-Impression-367x205.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/10/Amazon-Aurora-Multi-Primary-First-Impression.png 1200w\" sizes=\"(max-width: 200px) 100vw, 200px\" /><p><img loading=\"lazy\" class=\"alignright size-medium wp-image-71971\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Amazon-Aurora-Multi-Primary-First-Impression-300x168.png\" alt=\"Amazon Aurora Multi-Primary First Impression\" width=\"300\" height=\"168\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Amazon-Aurora-Multi-Primary-First-Impression-300x168.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/Amazon-Aurora-Multi-Primary-First-Impression-1024x572.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/10/Amazon-Aurora-Multi-Primary-First-Impression-200x112.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/Amazon-Aurora-Multi-Primary-First-Impression-367x205.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/10/Amazon-Aurora-Multi-Primary-First-Impression.png 1200w\" sizes=\"(max-width: 300px) 100vw, 300px\" />For what reason should I use a real multi-primary setup?</p>\n<p>To be clear, not a multi-writer solution where any node can become the active writer in case of needs, as for <a target=\"_blank\" href=\"https://www.percona.com/software/mysql-database/percona-xtradb-cluster\">Percona XtraDB Cluster</a> (PXC) or <a target=\"_blank\" href=\"https://www.percona.com/software/mysql-database/percona-server\">Percona Server for MySQL</a> using Group_replication. No, we are talking about a multi-primary setup where I can write at the same time on multiple nodes. I want to insist on this “why?”.</p>\n<p>After having excluded the possible solutions mentioned above, both covering the famous 99.995% availability, which is 26.30 minutes of downtime in a year, what is left?</p>\n<p>Disaster Recovery? Well, that is something I would love to have, but to be a real DR solution we need to put several kilometers (miles for imperial) in the middle.</p>\n<p>And we know (see <a target=\"_blank\" href=\"https://www.slideshare.net/marcotusa/improving-enterprises-ha-and-disaster-recovery-solutions-reviewed\">here</a> and <a target=\"_blank\" href=\"https://www.slideshare.net/marcotusa/robust-ha-solutions-with-proxysql\">here</a>) that aside from some <strong>misleading advertising</strong>, we cannot have a tightly coupled cluster solution across geographical regions.</p>\n<p>So, what is left? I may need more HA, ok, that is a valid reason. Or I may need to scale the number of writes, which is a valid reason as well. This means, in the end, that I am looking to a multi-primary because:</p>\n<ul>\n<li>Scale writes (more nodes more writes)\n<ul>\n<li>Consistent reads (what I write on A must be visible on B)</li>\n</ul>\n</li>\n<li>Gives me 0 (zero) downtime, or close to that (5 nines is a maximum downtime of 864 milliseconds per day!!)</li>\n<li>Allow me to shift the writer pointer at any time from A to B and vice versa, consistently.</li>\n</ul>\n<p>Now, keeping myself bound to the MySQL ecosystem, my natural choice would be MySQL NDB cluster. But my (virtual) boss was at AWS re-invent and someone mentioned to him that Aurora Multi-Primary does what I was looking for. This (long) article is my voyage in discovering if that is true or … not.</p>\n<p>Given I am focused on the behavior first, and NOT interested in absolute numbers to shock the audience with millions of QPS, I will use low-level Aurora instances. And will perform tests from two EC2 in the same VPC/region of the nodes.</p>\n<p><a target=\"_blank\" href=\"https://www.percona.com/blog/wp-content/uploads/2020/10/instances.png\"><img loading=\"lazy\" class=\"aligncenter wp-image-71857 size-full\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/instances.png\" alt=\"\" width=\"948\" height=\"169\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/instances.png 948w, https://www.percona.com/blog/wp-content/uploads/2020/10/instances-300x53.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/instances-200x36.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/instances-367x65.png 367w\" sizes=\"(max-width: 948px) 100vw, 948px\" /></a></p>\n<p>You can find the details about the tests on GitHub <a target=\"_blank\" href=\"https://github.com/Tusamarco/blogs/tree/master/aurora_multi_primary\">here</a>.</p>\n<p>Finally, I will test:</p>\n<ul>\n<li>Connection speed</li>\n<li>Stale read</li>\n<li>Write single node for baseline</li>\n<li>Write on both node:\n<ul>\n<li>Scaling splitting the load by schema</li>\n<li>Scaling same schema</li>\n</ul>\n</li>\n</ul>\n<h2>Test Results</h2>\n<p>Let us start to have some real fun. The first test is …</p>\n<h3>Connection Speed</h3>\n<p>The purpose of this test is to evaluate the time taken in opening a new connection and time taken to close it. The action of the open/close connection can be a very expensive operation, especially if applications do not use a connection pool mechanism.</p>\n<p><a target=\"_blank\" href=\"https://www.percona.com/blog/wp-content/uploads/2020/10/a1.png\"><img loading=\"lazy\" class=\"aligncenter wp-image-71902 size-full\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/a1.png\" alt=\"Amazon Aurora Multi-Primary\" width=\"468\" height=\"301\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/a1.png 468w, https://www.percona.com/blog/wp-content/uploads/2020/10/a1-300x193.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/a1-200x129.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/a1-367x236.png 367w\" sizes=\"(max-width: 468px) 100vw, 468px\" /></a></p>\n<p><img loading=\"lazy\" class=\"aligncenter wp-image-71904 size-full\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/a3.png\" alt=\"\" width=\"757\" height=\"198\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/a3.png 757w, https://www.percona.com/blog/wp-content/uploads/2020/10/a3-300x78.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/a3-200x52.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/a3-367x96.png 367w\" sizes=\"(max-width: 757px) 100vw, 757px\" /><br />\nAs we can see, ProxySQL results to be the most efficient way to deal with opening connections, which was expected given the way it is designed to reuse open connections towards the backend.</p>\n<p><a target=\"_blank\" href=\"https://www.percona.com/blog/wp-content/uploads/2020/10/a2.png\"><img loading=\"lazy\" class=\"size-full wp-image-71903 aligncenter\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/a2.png\" alt=\"\" width=\"462\" height=\"301\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/a2.png 462w, https://www.percona.com/blog/wp-content/uploads/2020/10/a2-300x195.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/a2-200x130.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/a2-367x239.png 367w\" sizes=\"(max-width: 462px) 100vw, 462px\" /></a></p>\n<p><a target=\"_blank\" href=\"https://www.percona.com/blog/wp-content/uploads/2020/10/a4.png\"><img loading=\"lazy\" class=\"size-full wp-image-71905 aligncenter\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/a4.png\" alt=\"\" width=\"763\" height=\"186\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/a4.png 763w, https://www.percona.com/blog/wp-content/uploads/2020/10/a4-300x73.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/a4-200x49.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/a4-367x89.png 367w\" sizes=\"(max-width: 763px) 100vw, 763px\" /></a><br />\nDifferent is the close connection operation, in which ProxySQL seems to take a little bit longer.</p>\n<p>As a global observation, we can say that by using ProxySQL we have more consistent behavior. Of course, this test is a simplistic one, and we are not checking the scalability (from 1 to N connections) but it is good enough to give us the initial feeling. Specific connection tests will be the focus of the next blog on Aurora MM.</p>\n<h3>Stale Reads</h3>\n<p>Aurora multi-primary uses the same mechanism of the default Aurora to update the buffer pool:</p>\n<p><a target=\"_blank\" href=\"https://www.percona.com/blog/wp-content/uploads/2020/10/aurora_multi_master_sharing_BP.png\"><img loading=\"lazy\" class=\"aligncenter wp-image-71858 size-full\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/aurora_multi_master_sharing_BP.png\" alt=\"\" width=\"729\" height=\"413\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/aurora_multi_master_sharing_BP.png 729w, https://www.percona.com/blog/wp-content/uploads/2020/10/aurora_multi_master_sharing_BP-300x170.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/aurora_multi_master_sharing_BP-200x113.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/aurora_multi_master_sharing_BP-367x208.png 367w\" sizes=\"(max-width: 729px) 100vw, 729px\" /></a><br />\nUsing the Page Cache update, just doing both ways. This means that the Buffer Pool of Node2 is updated with the modification performed in Node1 and vice versa.</p>\n<p><span>To verify if an application would be really able to have consistent reads, I have run this test. This test is meant to measure if, and how many, stale reads we will have when writing on a node and reading from the other.</span></p>\n<p>Amazon Aurora multi-primary has two consistency models:<span><br />\n</span></p>\n<p><span><a target=\"_blank\" href=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Consistency_model.png\"><img loading=\"lazy\" class=\"aligncenter wp-image-71860 size-full\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Consistency_model.png\" alt=\"Aurora consistency model\" width=\"726\" height=\"411\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Consistency_model.png 726w, https://www.percona.com/blog/wp-content/uploads/2020/10/Consistency_model-300x170.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/Consistency_model-200x113.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/Consistency_model-367x208.png 367w\" sizes=\"(max-width: 726px) 100vw, 726px\" /></a><br />\n</span>As an interesting fact, the result was that with the default consistency model (INSTANCE_RAW),<strong> we got a 100% stale read</strong>.<br />\nGiven that I focused on identifying the level of the cost that exists when using the other consistency model (REGIONAL_RAW), that allows an application to have consistent reads.</p>\n<p>The results indicate an increase of 44% in total execution time, and of 95% (22 times slower) in write execution.</p>\n<p><img loading=\"lazy\" class=\"aligncenter size-large wp-image-71973\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-09-at-10.49.53-AM-1024x271.png\" alt=\"\" width=\"900\" height=\"238\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-09-at-10.49.53-AM-1024x271.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-09-at-10.49.53-AM-300x79.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-09-at-10.49.53-AM-200x53.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-09-at-10.49.53-AM-1536x407.png 1536w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-09-at-10.49.53-AM-367x97.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-09-at-10.49.53-AM.png 1790w\" sizes=\"(max-width: 900px) 100vw, 900px\" /></p>\n<p><a target=\"_blank\" href=\"https://www.percona.com/blog/wp-content/uploads/2020/10/a7.png\"><img loading=\"lazy\" class=\"aligncenter wp-image-71908 size-full\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/a7.png\" alt=\"\" width=\"917\" height=\"303\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/a7.png 917w, https://www.percona.com/blog/wp-content/uploads/2020/10/a7-300x99.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/a7-200x66.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/a7-367x121.png 367w\" sizes=\"(max-width: 917px) 100vw, 917px\" /></a></p>\n<p>It is interesting to note that the time taken is in some way predictable and consistent between the two consistency models.</p>\n<p>The graph below shows in yellow how long the application must wait to see the correct data on the reader node. In blue is the amount of time the application waits to get back the same consistent read because it must wait for the commit on the writer.</p>\n<p><a target=\"_blank\" href=\"https://www.percona.com/blog/wp-content/uploads/2020/10/a8.png\"><img loading=\"lazy\" class=\"aligncenter wp-image-71909 size-full\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/a8.png\" alt=\"lag time in nanoseconds\" width=\"995\" height=\"338\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/a8.png 995w, https://www.percona.com/blog/wp-content/uploads/2020/10/a8-300x102.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/a8-200x68.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/a8-367x125.png 367w\" sizes=\"(max-width: 995px) 100vw, 995px\" /></a></p>\n<p>As you can see, the two are more or less aligned.</p>\n<p>Given the performance cost imposed by using REGIONAL_RAW,  all the other tests are done with the default INSTANCE_RAW, unless explicitly stated.</p>\n<h2>Writing Tests</h2>\n<p>All tests run in this section were done using <a target=\"_blank\" href=\"https://github.com/Tusamarco/sysbench-tpcc\">sysbench-tpcc</a> with the following settings:<span><br />\n</span></p><pre class=\"crayon-plain-tag\">sysbench ./tpcc.lua --mysql-host=&#60;&#62; --mysql-port=3306 --mysql-user=&#60;&#62; --mysql-password=&#60;&#62; --mysql-db=tpcc --time=300 --threads=32 --report-interval=1 --tables=10 --scale=15  --mysql_table_options=\" CHARSET=utf8 COLLATE=utf8_bin\"  --db-driver=mysql prepare\n\n sysbench /opt/tools/sysbench-tpcc/tpcc.lua --mysql-host=$mysqlhost --mysql-port=$port --mysql-user=&#60;&#62; --mysql-password=&#60;&#62; --mysql-db=tpcc --db-driver=mysql --tables=10 --scale=15 --time=$time  --rand-type=zipfian --rand-zipfian-exp=0 --report-interval=1 --mysql-ignore-errors=all --histogram  --report_csv=yes --stats_format=csv --db-ps-mode=disable --threads=$threads run</pre><p></p>\n<h3>Write Single Node (Baseline)</h3>\n<p>Before starting the comparative analysis, I was looking to define what was the “limit” of traffic/load for this platform.</p>\n<p><a target=\"_blank\" href=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Picture-1.png\"><img loading=\"lazy\" class=\"aligncenter wp-image-71869 size-full\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Picture-1.png\" alt=\"baseline reads/writes\" width=\"541\" height=\"316\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Picture-1.png 541w, https://www.percona.com/blog/wp-content/uploads/2020/10/Picture-1-300x175.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/Picture-1-200x117.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/Picture-1-367x214.png 367w\" sizes=\"(max-width: 541px) 100vw, 541px\" /></a><br />\n<a target=\"_blank\" href=\"https://www.percona.com/blog/wp-content/uploads/2020/10/t1.png\"><img loading=\"lazy\" class=\"aligncenter wp-image-71885 size-large\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/t1-1024x447.png\" alt=\"\" width=\"900\" height=\"393\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/t1-1024x447.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/10/t1-300x131.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/t1-200x87.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/t1-367x160.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/10/t1.png 1157w\" sizes=\"(max-width: 900px) 100vw, 900px\" /></a> <a target=\"_blank\" href=\"https://www.percona.com/blog/wp-content/uploads/2020/10/t2.png\"><img loading=\"lazy\" class=\"aligncenter wp-image-71886 size-large\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/t2-1024x447.png\" alt=\"\" width=\"900\" height=\"393\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/t2-1024x447.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/10/t2-300x131.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/t2-200x87.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/t2-367x160.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/10/t2.png 1157w\" sizes=\"(max-width: 900px) 100vw, 900px\" /></a><br />\nFrom the graph above, we can see that this setup scales up to 128 threads and after that, the performance remains more or less steady.</p>\n<p>Amazon claims that we can mainly double the performance when using both nodes in write mode and use a different schema to avoid conflict.</p>\n<p><a target=\"_blank\" href=\"https://www.percona.com/blog/wp-content/uploads/2020/10/scalability.png\"><img loading=\"lazy\" class=\"aligncenter wp-image-71864 size-full\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/scalability.png\" alt=\"aurora scalability\" width=\"729\" height=\"411\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/scalability.png 729w, https://www.percona.com/blog/wp-content/uploads/2020/10/scalability-300x169.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/scalability-200x113.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/scalability-367x207.png 367w\" sizes=\"(max-width: 729px) 100vw, 729px\" /></a></p>\n<p>Once more, remember I am not interested in the absolute numbers here, but I am expecting the same behavior. Given that, our expectation is to see:</p>\n<p><a target=\"_blank\" href=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Picture-2.png\"><img loading=\"lazy\" class=\"aligncenter wp-image-71870 size-full\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Picture-2.png\" alt=\"expected scalability\" width=\"402\" height=\"216\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Picture-2.png 402w, https://www.percona.com/blog/wp-content/uploads/2020/10/Picture-2-300x161.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/Picture-2-200x107.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/Picture-2-367x197.png 367w\" sizes=\"(max-width: 402px) 100vw, 402px\" /></a></p>\n<h3>Write on Both Nodes, Different Schemas</h3>\n<p>So AWS recommend this as the scaling solution:<br />\n<span><br />\n<a target=\"_blank\" href=\"https://www.percona.com/blog/wp-content/uploads/2020/10/split_traffic_by_db_table_partition_to_avoid_conflicts.png\"><img loading=\"lazy\" class=\"aligncenter wp-image-71865 size-full\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/split_traffic_by_db_table_partition_to_avoid_conflicts.png\" alt=\"\" width=\"724\" height=\"408\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/split_traffic_by_db_table_partition_to_avoid_conflicts.png 724w, https://www.percona.com/blog/wp-content/uploads/2020/10/split_traffic_by_db_table_partition_to_avoid_conflicts-300x169.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/split_traffic_by_db_table_partition_to_avoid_conflicts-200x113.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/split_traffic_by_db_table_partition_to_avoid_conflicts-367x207.png 367w\" sizes=\"(max-width: 724px) 100vw, 724px\" /></a><br />\n</span></p>\n<p>And I diligently follow the advice. I used two EC2 nodes in the same subnet of the Aurora Node, writing to a different schema (tpcc &#38; tpcc2).</p>\n<h3>Overview</h3>\n<p>Let us make it short and go straight to the point. Did we get the expected scalability?</p>\n<p>Well, no:</p>\n<p><a target=\"_blank\" href=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Picture-3.png\"><img loading=\"lazy\" class=\"aligncenter wp-image-71871 size-full\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Picture-3.png\" alt=\"\" width=\"401\" height=\"228\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Picture-3.png 401w, https://www.percona.com/blog/wp-content/uploads/2020/10/Picture-3-300x171.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/Picture-3-200x114.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/Picture-3-367x209.png 367w\" sizes=\"(max-width: 401px) 100vw, 401px\" /></a><br />\nWe just had a 26% increase, quite far to be the expected 100% Let us see what happened in detail (if not interested just skip and go to the next test).</p>\n<p><strong>Node 1<br />\n</strong><b><br />\n<a target=\"_blank\" href=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Picture-5.png\"><img loading=\"lazy\" class=\"aligncenter wp-image-71873 size-full\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Picture-5.png\" alt=\"Schema read writes Aurora\" width=\"541\" height=\"316\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Picture-5.png 541w, https://www.percona.com/blog/wp-content/uploads/2020/10/Picture-5-300x175.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/Picture-5-200x117.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/Picture-5-367x214.png 367w\" sizes=\"(max-width: 541px) 100vw, 541px\" /></a><br />\n</b></p>\n<p><strong>Node 2<br />\n</strong><b><br />\n<a target=\"_blank\" href=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Picture-6.png\"><img loading=\"lazy\" class=\"aligncenter wp-image-71874 size-full\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Picture-6.png\" alt=\"\" width=\"541\" height=\"316\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Picture-6.png 541w, https://www.percona.com/blog/wp-content/uploads/2020/10/Picture-6-300x175.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/Picture-6-200x117.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/Picture-6-367x214.png 367w\" sizes=\"(max-width: 541px) 100vw, 541px\" /></a><br />\n</b>As you can see, Node1 was (more or less) keeping up with the expectations and being close to the expected performance. But Node2 was just not keeping up, and performances there were just terrible.</p>\n<p><strong>The graphs below show what happened.<br />\n</strong><b><br />\n</b>While Node1 was (again more or less) scaling up to the baseline expectations (128 threads), Node2 collapsed on its knees at 16 threads. Node2 was never able to scale up. <b><br />\n</b></p>\n<h3>Reads</h3>\n<p><strong>Node 1<br />\n</strong><span><br />\n</span><b><a target=\"_blank\" href=\"https://www.percona.com/blog/wp-content/uploads/2020/10/t4.png\"><img loading=\"lazy\" class=\"aligncenter wp-image-71888 size-large\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/t4-1024x447.png\" alt=\"\" width=\"900\" height=\"393\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/t4-1024x447.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/10/t4-300x131.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/t4-200x87.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/t4-367x160.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/10/t4.png 1157w\" sizes=\"(max-width: 900px) 100vw, 900px\" /></a><br />\n</b>Node1 is scaling the reads as expected, but also here and there we can see performance deterioration.<span><br />\n</span></p>\n<p><strong>Node 2<br />\n</strong><span><br />\n</span><b></b><span><a target=\"_blank\" href=\"https://www.percona.com/blog/wp-content/uploads/2020/10/t7.png\"><img loading=\"lazy\" class=\"aligncenter wp-image-71891 size-large\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/t7-1024x447.png\" alt=\"\" width=\"900\" height=\"393\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/t7-1024x447.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/10/t7-300x131.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/t7-200x87.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/t7-367x160.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/10/t7.png 1157w\" sizes=\"(max-width: 900px) 100vw, 900px\" /></a><br />\n</span>Node2 is not scaling Reads at all.</p>\n<h3>Writes</h3>\n<p><strong>Node 1<br />\n</strong><span><br />\n<a target=\"_blank\" href=\"https://www.percona.com/blog/wp-content/uploads/2020/10/t5.png\"><img loading=\"lazy\" class=\"aligncenter wp-image-71889 size-large\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/t5-1024x447.png\" alt=\"\" width=\"900\" height=\"393\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/t5-1024x447.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/10/t5-300x131.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/t5-200x87.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/t5-367x160.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/10/t5.png 1157w\" sizes=\"(max-width: 900px) 100vw, 900px\" /></a><br />\n</span>Same as Read.</p>\n<p><strong>Node 2<br />\n</strong><span><br />\n<a target=\"_blank\" href=\"https://www.percona.com/blog/wp-content/uploads/2020/10/t8.png\"><img loading=\"lazy\" class=\"aligncenter wp-image-71892 size-large\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/t8-1024x447.png\" alt=\"\" width=\"900\" height=\"393\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/t8-1024x447.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/10/t8-300x131.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/t8-200x87.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/t8-367x160.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/10/t8.png 1157w\" sizes=\"(max-width: 900px) 100vw, 900px\" /></a><br />\n</span>Same as read.</p>\n<p>Now someone may think I was making a mistake and I was writing on the same schema. I assure you I was not. Check the next test to see what happened if using the same schema.</p>\n<h3>Write on Both Nodes,  Same Schema</h3>\n<h3>Overview</h3>\n<p>Now, now, Marco, this is unfair. You know this will cause contention. Yes, I do! But nonetheless, I was curious to see what was going to happen and how the platform would deal with that level of contention.</p>\n<p>My expectations were to have a lot of performance degradation and an increased number of locks. About conflict I was not wrong, node2 after the test reported:<span><br />\n</span></p><pre class=\"crayon-plain-tag\">+-------------+---------+-------------------------+\n| table       | index   | PHYSICAL_CONFLICTS_HIST |\n+-------------+---------+-------------------------+\n| district9   | PRIMARY |                    3450 |\n| district6   | PRIMARY |                    3361 |\n| district2   | PRIMARY |                    3356 |\n| district8   | PRIMARY |                    3271 |\n| district4   | PRIMARY |                    3237 |\n| district10  | PRIMARY |                    3237 |\n| district7   | PRIMARY |                    3237 |\n| district3   | PRIMARY |                    3217 |\n| district5   | PRIMARY |                    3156 |\n| district1   | PRIMARY |                    3072 |\n| warehouse2  | PRIMARY |                    1867 |\n| warehouse10 | PRIMARY |                    1850 |\n| warehouse6  | PRIMARY |                    1808 |\n| warehouse5  | PRIMARY |                    1781 |\n| warehouse3  | PRIMARY |                    1773 |\n| warehouse9  | PRIMARY |                    1769 |\n| warehouse4  | PRIMARY |                    1745 |\n| warehouse7  | PRIMARY |                    1736 |\n| warehouse1  | PRIMARY |                    1735 |\n| warehouse8  | PRIMARY |                    1635 |\n+-------------+---------+-------------------------+</pre><p>Which is obviously a strong indication something was not working right. In terms of performance gain, if we compare ONLY the result with the 128 Threads:<br />\n<span><br />\n<a target=\"_blank\" href=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Picture-4-1.png\"><img loading=\"lazy\" class=\"aligncenter wp-image-71880 size-full\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Picture-4-1.png\" alt=\"\" width=\"401\" height=\"216\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Picture-4-1.png 401w, https://www.percona.com/blog/wp-content/uploads/2020/10/Picture-4-1-300x162.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/Picture-4-1-200x108.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/Picture-4-1-367x198.png 367w\" sizes=\"(max-width: 401px) 100vw, 401px\" /></a><br />\n</span>Also with the high level of conflict, we still have 12% of performance gain.</p>\n<p>The problem is that in general, we have the two nodes behaving quite badly. If you check the graph below you can see that the level of conflict is such to prevent the nodes not only to scale but to act consistently.<br />\n<span><br />\n</span><strong>Node 1<br />\n</strong><span><br />\n<a target=\"_blank\" href=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Picture-7-1.png\"><img loading=\"lazy\" class=\"aligncenter wp-image-71883 size-full\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Picture-7-1.png\" alt=\"Write on Both Nodes,  Same Schema\" width=\"670\" height=\"316\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Picture-7-1.png 670w, https://www.percona.com/blog/wp-content/uploads/2020/10/Picture-7-1-300x141.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/Picture-7-1-200x94.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/Picture-7-1-367x173.png 367w\" sizes=\"(max-width: 670px) 100vw, 670px\" /></a><br />\n</span></p>\n<p><strong>Node 2<br />\n</strong><span><br />\n<a target=\"_blank\" href=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Picture-8.png\"><img loading=\"lazy\" class=\"aligncenter wp-image-71884 size-full\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Picture-8.png\" alt=\"\" width=\"604\" height=\"316\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Picture-8.png 604w, https://www.percona.com/blog/wp-content/uploads/2020/10/Picture-8-300x157.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/Picture-8-200x105.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/Picture-8-367x192.png 367w\" sizes=\"(max-width: 604px) 100vw, 604px\" /></a><br />\n</span></p>\n<h3>Reads</h3>\n<p>In the following graphs, we can see how node1 had issues and it actually crashed three times, during tests with 32/64/512 threads. Node2 was always up but the performances were very low.</p>\n<p><strong>Node 1<br />\n</strong><span><br />\n<a target=\"_blank\" href=\"https://www.percona.com/blog/wp-content/uploads/2020/10/t10.png\"><img loading=\"lazy\" class=\"aligncenter wp-image-71894 size-large\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/t10-1024x447.png\" alt=\"\" width=\"900\" height=\"393\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/t10-1024x447.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/10/t10-300x131.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/t10-200x87.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/t10-367x160.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/10/t10.png 1157w\" sizes=\"(max-width: 900px) 100vw, 900px\" /></a><br />\n</span></p>\n<p><strong>Node 2<br />\n</strong><span><br />\n<a target=\"_blank\" href=\"https://www.percona.com/blog/wp-content/uploads/2020/10/t13.png\"><img loading=\"lazy\" class=\"aligncenter wp-image-71897 size-large\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/t13-1024x447.png\" alt=\"\" width=\"900\" height=\"393\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/t13-1024x447.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/10/t13-300x131.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/t13-200x87.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/t13-367x160.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/10/t13.png 1157w\" sizes=\"(max-width: 900px) 100vw, 900px\" /></a><br />\n</span></p>\n<h3>Writes</h3>\n<p><strong>Node 1<br />\n</strong><span><br />\n<a target=\"_blank\" href=\"https://www.percona.com/blog/wp-content/uploads/2020/10/t11.png\"><img loading=\"lazy\" class=\"aligncenter wp-image-71895 size-large\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/t11-1024x447.png\" alt=\"\" width=\"900\" height=\"393\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/t11-1024x447.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/10/t11-300x131.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/t11-200x87.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/t11-367x160.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/10/t11.png 1157w\" sizes=\"(max-width: 900px) 100vw, 900px\" /></a><br />\n</span></p>\n<p><strong>Node 2<br />\n</strong><span><br />\n<a target=\"_blank\" href=\"https://www.percona.com/blog/wp-content/uploads/2020/10/t14.png\"><img loading=\"lazy\" class=\"aligncenter wp-image-71898 size-large\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/t14-1024x447.png\" alt=\"\" width=\"900\" height=\"393\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/t14-1024x447.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/10/t14-300x131.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/t14-200x87.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/t14-367x160.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/10/t14.png 1157w\" sizes=\"(max-width: 900px) 100vw, 900px\" /></a><br />\n</span></p>\n<h2>Recovery From Crashed Node</h2>\n<p>About recovery time, reading the AWS documentation and listening to presentations, I often heard that Aurora Multi-Primary is a <strong>0 downtime solution</strong>. Or other statements like: <em>“in applications where you can&#8217;t afford even brief downtime for database write operations, a multi-master cluster can help to avoid an outage when a writer instance becomes unavailable. The multi-master cluster doesn&#8217;t use the failover mechanism, because it doesn&#8217;t need to promote another DB instance to have read/write capability”</em></p>\n<p>To achieve this the suggestion, the solution I found was to have applications pointing directly to the Nodes endpoint and not use the Cluster endpoint.</p>\n<p>In this context, the solution pointing to the Nodes should be able to failover within a second or so, while the cluster endpoint:<br />\n<span><br />\n<a target=\"_blank\" href=\"https://www.percona.com/blog/wp-content/uploads/2020/10/fail-over_times_using_mariadb_driver.png\"><img loading=\"lazy\" class=\"aligncenter wp-image-71862 size-full\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/fail-over_times_using_mariadb_driver.png\" alt=\"Recovery From Crashed Node\" width=\"725\" height=\"411\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/fail-over_times_using_mariadb_driver.png 725w, https://www.percona.com/blog/wp-content/uploads/2020/10/fail-over_times_using_mariadb_driver-300x170.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/fail-over_times_using_mariadb_driver-200x113.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/fail-over_times_using_mariadb_driver-367x208.png 367w\" sizes=\"(max-width: 725px) 100vw, 725px\" /></a><br />\n</span></p>\n<p>Personally, I think that designing an architecture where the application is responsible for the connection to the database and failover is some kind of refuse from 2001. But if you feel this is the way, well, go for it. <span><br />\n</span><span><br />\n</span>What I did for testing is to use ProxySQL, as plain as possible with nothing else, and the basic monitor coming from the native monitor. I then compared the results with the tests using the Cluster endpoint. In this way, I adopt the advice of pointing directly at the nodes, but I was doing things in our time.</p>\n<p>The results are below and they confirm (more or less) the data coming from Amazon.</p>\n<p><span><a target=\"_blank\" href=\"https://www.percona.com/blog/wp-content/uploads/2020/10/a10.png\"><img loading=\"lazy\" class=\"aligncenter wp-image-71911 size-full\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/a10.png\" alt=\"\" width=\"403\" height=\"216\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/a10.png 403w, https://www.percona.com/blog/wp-content/uploads/2020/10/a10-300x161.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/a10-200x107.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/a10-367x197.png 367w\" sizes=\"(max-width: 403px) 100vw, 403px\" /></a><br />\n</span></p>\n<p>A downtime of seven seconds is quite a long time nowadays, especially if I am targeting the 5 nines solution that I want to remember is 864 ms downtime per day. Using ProxySQL is going closer to that, but still too long to be called zero downtime.<br />\nI also have fail-back issues when using the AWS cluster endpoint, given it was not able to move the connection to the joining node seamlessly.</p>\n<p>Last but not least, when using the consistency level INSTANCE_RAW, I had some data issue as well as PK conflict:<span><br />\n</span><em>FATAL: mysql_drv_query() returned error 1062 (Duplicate entry &#8216;18828082&#8217; for key &#8216;PRIMARY&#8217;) </em></p>\n<h3>Conclusions</h3>\n<p>As state at the beginning of this long blog, the reasonable expectations to go for a multi-primary solution were:</p>\n<ul>\n<li>Scale writes (more nodes more writes)</li>\n<li>Gives me zero downtime, or close to that (5 nines is a maximum downtime of 864 milliseconds per day!!)</li>\n<li>Allow me to shift the writer pointer at any time from A to B and vice versa, consistently.</li>\n</ul>\n<p>Honestly, I feel we have completely failed the scaling point. Probably if I use the largest Aurora I will get much better absolute numbers, and it will take me more to encounter the same issues, but I will. In any case, if the multi-primary solution is designed to provide that scalability, and it should do that with any version.</p>\n<p>I did not have zero downtime, but I was able to failover pretty quickly with ProxySQL.</p>\n<p>Finally, unless the consistency model is REGIONAL_RAW, shifting from one node to the other is not prone to possible negative effects like stale reads. Given that I consider this requirement not satisfied in full.</p>\n<p>Given all the above, I think this solution <strong>could eventually be</strong> valid only for High Availability (close to being 5 nines), but given it comes with some <a target=\"_blank\" href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-multi-master.html#aurora-multi-master-limitations\">limitations</a> I do not feel comfortable in preferring it over others just for that, at the end <strong>default Aurora</strong> is already good enough as a High available solution.</p>\n<h4>References</h4>\n<p><a target=\"_blank\" href=\"https://www.youtube.com/watch?v=p0C0jakzYuc\">AWS re:Invent 2019: Amazon Aurora Multi-Master: Scaling out database write performance</a></p>\n<p id=\"aurora-multi-master\"><a target=\"_blank\" href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-multi-master.html\">Working with Aurora multi-master clusters</a></p>\n<p><a target=\"_blank\" href=\"https://www.slideshare.net/marcotusa/improving-enterprises-ha-and-disaster-recovery-solutions-reviewed\">Improving enterprises ha and disaster recovery solutions reviewed</a></p>\n<p><a target=\"_blank\" href=\"https://www.slideshare.net/marcotusa/robust-ha-solutions-with-proxysql\">Robust ha solutions with proxysql</a></p>\n<p id=\"aurora-multi-master-limitations\"><a target=\"_blank\" href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-multi-master.html#aurora-multi-master-limitations\">Limitations of multi-master clusters</a></p>\n","descriptionType":"html","publishedDate":"Fri, 09 Oct 2020 14:53:45 +0000","feedId":11,"bgimg":"","linkMd5":"6ef126106b2c3f613772c02e2ab90f2b","bgimgJsdelivr":"","metaImg":"","author":"Marco Tusa","articleImgCdnMap":{"https://www.percona.com/blog/wp-content/uploads/2020/10/Amazon-Aurora-Multi-Primary-First-Impression-200x112.png":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn35@2020_5/2020/10/09/19-11-45-590_7350ea33d501bdcd.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/Amazon-Aurora-Multi-Primary-First-Impression-300x168.png":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn68@2020_6/2020/10/09/19-12-12-308_85ed1bd01c4e833a.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/instances.png":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn87@2020_1/2020/10/09/19-11-45-336_23b6063a1a8b6a3b.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/a1.png":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn28@2020_3/2020/10/09/19-11-39-218_24fdcf413a668dd5.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/a3.png":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn10@2020_6/2020/10/09/19-11-51-303_e914f113dbda2c68.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/a2.png":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn35@2020_4/2020/10/09/19-11-40-876_f20aa9fe8bb69a96.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/a4.png":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn22@2020_2/2020/10/09/19-11-45-184_cdfaaaeed13b14b2.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/aurora_multi_master_sharing_BP.png":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn60@2020_3/2020/10/09/19-11-45-184_a2c5219b52acc72b.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/Consistency_model.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn21@2020_6/2020/10/09/19-11-27-472_8db34a4c508c885d.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-09-at-10.49.53-AM-1024x271.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn16@2020_2/2020/10/09/19-11-27-325_8f5263ae2c520327.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/a7.png":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn3@2020_2/2020/10/09/19-11-42-851_6f301cc9dbf7dac8.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/a8.png":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn99@2020_6/2020/10/09/19-11-44-944_cba23dfc493fc8b1.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/Picture-1.png":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn19@2020_3/2020/10/09/19-11-36-312_a077cbb52a5321ae.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/t1-1024x447.png":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn51@2020_1/2020/10/09/19-11-48-857_a2c064940a89ef26.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/t2-1024x447.png":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn11@2020_1/2020/10/09/19-11-55-023_fe6f3fc884ee44a2.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/scalability.png":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn75@2020_3/2020/10/09/19-11-27-230_9544791ccd53a97e.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/Picture-2.png":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn7@2020_1/2020/10/09/19-11-39-146_df1353f595d50fe8.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/split_traffic_by_db_table_partition_to_avoid_conflicts.png":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn11@2020_3/2020/10/09/19-11-51-809_8dd60ebbe3935a96.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/Picture-3.png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn13@2020_1/2020/10/09/19-11-48-770_46f3cb399dc15504.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/Picture-5.png":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn8@2020_3/2020/10/09/19-11-39-396_8c0a47236adb1726.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/Picture-6.png":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn26@2020_2/2020/10/09/19-11-43-521_dac04750ab427683.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/t4-1024x447.png":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn41@2020_6/2020/10/09/19-11-27-490_24a857945cd8ac7a.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/t7-1024x447.png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn3@2020_3/2020/10/09/19-11-32-514_64bcd33ecc85a30d.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/t5-1024x447.png":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn13@2020_6/2020/10/09/19-11-45-792_848ca6e31ebe89f4.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/t8-1024x447.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn79@2020_5/2020/10/09/19-11-59-664_b86d54eeceb6cb6e.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/Picture-4-1.png":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn64@2020_5/2020/10/09/19-11-39-153_fb62ba3b2a33605f.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/Picture-7-1.png":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn17@2020_1/2020/10/09/19-11-50-936_76d683a6f57c54c4.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/Picture-8.png":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn56@2020_1/2020/10/09/19-11-26-701_ce962605c2cf720d.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/t10-1024x447.png":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn69@2020_1/2020/10/09/19-11-40-955_61f73a5662763a1f.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/t13-1024x447.png":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn91@2020_4/2020/10/09/19-11-39-094_52efece8902c81f1.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/t11-1024x447.png":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn31@2020_4/2020/10/09/19-11-39-575_2a53a671c6081c1e.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/t14-1024x447.png":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn83@2020_3/2020/10/09/19-11-27-501_f94fba7c616ff839.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/fail-over_times_using_mariadb_driver.png":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn5@2020_6/2020/10/09/19-11-55-203_35cd7f14c2dddde3.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/a10.png":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn96@2020_3/2020/10/09/19-11-40-823_cd77f246de739a2f.webp"},"publishedOrCreatedDate":1602270686355}],"record":{"createdTime":"2020-10-10 03:11:26","updatedTime":"2020-10-10 03:11:26","feedId":11,"fetchDate":"Fri, 09 Oct 2020 19:11:26 +0000","fetchMs":672,"handleMs":557,"totalMs":49551,"newArticles":0,"totalArticles":40,"status":1,"type":0,"ip":"96c330f7a9d7d08f2adfacbb5227a07a","hostName":"europe61*","requestId":"c04011eaf9b34f59a07d204e464a515c_11","contentType":"application/rss+xml; charset=UTF-8","totalBytes":1394742,"bgimgsTotal":0,"bgimgsGithubTotal":0,"articlesImgsTotal":34,"articlesImgsGithubTotal":34,"successGithubMap":{"myreaderx14":1,"myreaderx7":1,"myreaderx15":1,"myreaderx16":1,"myreaderx6":1,"myreaderx32":1,"myreaderx4":2,"myreaderx10":1,"myreaderx11":1,"myreaderx3":1,"myreaderx33":1,"myreaderx2":1,"myreaderx12":1,"myreaderx13":1,"myreaderx1":1,"myreaderx30":1,"myreaderx31":1,"myreaderx18":2,"myreaderx19":2,"myreaderx":1,"myreaderx25":1,"myreaderx27":2,"myreaderx21":1,"myreaderx22":1,"myreaderx23":1,"myreaderx24":2,"myreaderx5oss":1,"myreaderx29":2},"failGithubMap":{}},"feed":{"createdTime":"2020-05-30 17:21:38","updatedTime":"2020-09-01 09:23:03","id":11,"name":"Percona Database Performance Blog","url":"https://www.percona.com/blog/feed/","subscriber":null,"website":null,"icon":"https://www.percona.com/blog/wp-content/uploads/2018/09/percona-32x32.png","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx63/cdn89@2020_6/2020/09/01/01-23-01-358_b72bb3b39c378fe6.png","description":"","weekly":null,"link":null},"noPictureArticleList":[],"tmpCommonImgCdnBytes":0,"tmpBodyImgCdnBytes":1394742,"tmpBgImgCdnBytes":0,"extra4":{"start":1602270684822,"total":0,"statList":[{"spend":979,"msg":"获取xml内容"},{"spend":557,"msg":"解释文章"},{"spend":3,"msg":"上传封面图到cdn"},{"spend":2,"msg":"修正封面图上传失败重新上传"},{"spend":47929,"msg":"正文链接上传到cdn"}]},"extra5":34,"extra6":34,"extra7ImgCdnFailResultVector":[],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://us-032.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-53.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-007.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe63.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-028.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-024.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-52.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-020.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-23.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-54.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe21.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-004.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe64.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-22.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-008.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-016.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-012.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-24.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-021.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-58.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-035.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-009.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-25.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-031.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-036.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-51.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe67.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-040.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/Picture-8.png","sourceStatusCode":200,"destWidth":604,"destHeight":316,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn56@2020_1/2020/10/09/19-11-26-701_ce962605c2cf720d.webp","sourceBytes":59418,"destBytes":25308,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1285,"convertSpendMs":15,"createdTime":"2020-10-10 03:11:26","host":"us-020*","referer":"https://www.percona.com/blog/?p=71900","linkMd5ListStr":"6ef126106b2c3f613772c02e2ab90f2b","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"58 KB","destSize":"24.7 KB","compressRate":"42.6%"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/scalability.png","sourceStatusCode":200,"destWidth":729,"destHeight":411,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn75@2020_3/2020/10/09/19-11-27-230_9544791ccd53a97e.webp","sourceBytes":64456,"destBytes":11522,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1376,"convertSpendMs":48,"createdTime":"2020-10-10 03:11:26","host":"us-024*","referer":"https://www.percona.com/blog/?p=71900","linkMd5ListStr":"6ef126106b2c3f613772c02e2ab90f2b","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"62.9 KB","destSize":"11.3 KB","compressRate":"17.9%"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-09-at-10.49.53-AM-1024x271.png","sourceStatusCode":200,"destWidth":1024,"destHeight":271,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn16@2020_2/2020/10/09/19-11-27-325_8f5263ae2c520327.webp","sourceBytes":145318,"destBytes":14690,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1796,"convertSpendMs":17,"createdTime":"2020-10-10 03:11:26","host":"europe-25*","referer":"https://www.percona.com/blog/?p=71900","linkMd5ListStr":"6ef126106b2c3f613772c02e2ab90f2b","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"141.9 KB","destSize":"14.3 KB","compressRate":"10.1%"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/t4-1024x447.png","sourceStatusCode":200,"destWidth":1024,"destHeight":447,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn41@2020_6/2020/10/09/19-11-27-490_24a857945cd8ac7a.webp","sourceBytes":506560,"destBytes":99388,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1840,"convertSpendMs":59,"createdTime":"2020-10-10 03:11:26","host":"us-51*","referer":"https://www.percona.com/blog/?p=71900","linkMd5ListStr":"6ef126106b2c3f613772c02e2ab90f2b","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"494.7 KB","destSize":"97.1 KB","compressRate":"19.6%"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/Consistency_model.png","sourceStatusCode":200,"destWidth":726,"destHeight":411,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn21@2020_6/2020/10/09/19-11-27-472_8db34a4c508c885d.webp","sourceBytes":108206,"destBytes":22544,"targetWebpQuality":75,"feedId":11,"totalSpendMs":2205,"convertSpendMs":17,"createdTime":"2020-10-10 03:11:26","host":"europe-23*","referer":"https://www.percona.com/blog/?p=71900","linkMd5ListStr":"6ef126106b2c3f613772c02e2ab90f2b","githubUser":"myreaderx14","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"105.7 KB","destSize":"22 KB","compressRate":"20.8%"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/t14-1024x447.png","sourceStatusCode":200,"destWidth":1024,"destHeight":447,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn83@2020_3/2020/10/09/19-11-27-501_f94fba7c616ff839.webp","sourceBytes":436454,"destBytes":90320,"targetWebpQuality":75,"feedId":11,"totalSpendMs":2387,"convertSpendMs":35,"createdTime":"2020-10-10 03:11:26","host":"europe-25*","referer":"https://www.percona.com/blog/?p=71900","linkMd5ListStr":"6ef126106b2c3f613772c02e2ab90f2b","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"426.2 KB","destSize":"88.2 KB","compressRate":"20.7%"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/t7-1024x447.png","sourceStatusCode":200,"destWidth":1024,"destHeight":447,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn3@2020_3/2020/10/09/19-11-32-514_64bcd33ecc85a30d.webp","sourceBytes":426160,"destBytes":85052,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1795,"convertSpendMs":46,"createdTime":"2020-10-10 03:11:31","host":"us-53*","referer":"https://www.percona.com/blog/?p=71900","linkMd5ListStr":"6ef126106b2c3f613772c02e2ab90f2b","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"416.2 KB","destSize":"83.1 KB","compressRate":"20%"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/Picture-1.png","sourceStatusCode":200,"destWidth":541,"destHeight":316,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn19@2020_3/2020/10/09/19-11-36-312_a077cbb52a5321ae.webp","sourceBytes":61948,"destBytes":17988,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1583,"convertSpendMs":23,"createdTime":"2020-10-10 03:11:35","host":"us-007*","referer":"https://www.percona.com/blog/?p=71900","linkMd5ListStr":"6ef126106b2c3f613772c02e2ab90f2b","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"60.5 KB","destSize":"17.6 KB","compressRate":"29%"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/Picture-4-1.png","sourceStatusCode":200,"destWidth":401,"destHeight":216,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn64@2020_5/2020/10/09/19-11-39-153_fb62ba3b2a33605f.webp","sourceBytes":32559,"destBytes":7158,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1629,"convertSpendMs":7,"createdTime":"2020-10-10 03:11:38","host":"europe21*","referer":"https://www.percona.com/blog/?p=71900","linkMd5ListStr":"6ef126106b2c3f613772c02e2ab90f2b","githubUser":"myreaderx23","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"31.8 KB","destSize":"7 KB","compressRate":"22%"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/Picture-2.png","sourceStatusCode":200,"destWidth":402,"destHeight":216,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn7@2020_1/2020/10/09/19-11-39-146_df1353f595d50fe8.webp","sourceBytes":31306,"destBytes":11168,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1699,"convertSpendMs":9,"createdTime":"2020-10-10 03:11:38","host":"europe67*","referer":"https://www.percona.com/blog/?p=71900","linkMd5ListStr":"6ef126106b2c3f613772c02e2ab90f2b","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"30.6 KB","destSize":"10.9 KB","compressRate":"35.7%"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/a1.png","sourceStatusCode":200,"destWidth":468,"destHeight":301,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn28@2020_3/2020/10/09/19-11-39-218_24fdcf413a668dd5.webp","sourceBytes":50491,"destBytes":19564,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1772,"convertSpendMs":12,"createdTime":"2020-10-10 03:11:38","host":"europe21*","referer":"https://www.percona.com/blog/?p=71900","linkMd5ListStr":"6ef126106b2c3f613772c02e2ab90f2b","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"49.3 KB","destSize":"19.1 KB","compressRate":"38.7%"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/t13-1024x447.png","sourceStatusCode":200,"destWidth":1024,"destHeight":447,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn91@2020_4/2020/10/09/19-11-39-094_52efece8902c81f1.webp","sourceBytes":415641,"destBytes":83348,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1636,"convertSpendMs":84,"createdTime":"2020-10-10 03:11:38","host":"us-040*","referer":"https://www.percona.com/blog/?p=71900","linkMd5ListStr":"6ef126106b2c3f613772c02e2ab90f2b","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"405.9 KB","destSize":"81.4 KB","compressRate":"20.1%"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/Picture-5.png","sourceStatusCode":200,"destWidth":541,"destHeight":316,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn8@2020_3/2020/10/09/19-11-39-396_8c0a47236adb1726.webp","sourceBytes":63176,"destBytes":18630,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1994,"convertSpendMs":53,"createdTime":"2020-10-10 03:11:38","host":"europe-24*","referer":"https://www.percona.com/blog/?p=71900","linkMd5ListStr":"6ef126106b2c3f613772c02e2ab90f2b","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"61.7 KB","destSize":"18.2 KB","compressRate":"29.5%"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/t11-1024x447.png","sourceStatusCode":200,"destWidth":1024,"destHeight":447,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn31@2020_4/2020/10/09/19-11-39-575_2a53a671c6081c1e.webp","sourceBytes":449559,"destBytes":91336,"targetWebpQuality":75,"feedId":11,"totalSpendMs":2565,"convertSpendMs":45,"createdTime":"2020-10-10 03:11:38","host":"europe-58*","referer":"https://www.percona.com/blog/?p=71900","linkMd5ListStr":"6ef126106b2c3f613772c02e2ab90f2b","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"439 KB","destSize":"89.2 KB","compressRate":"20.3%"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/a2.png","sourceStatusCode":200,"destWidth":462,"destHeight":301,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn35@2020_4/2020/10/09/19-11-40-876_f20aa9fe8bb69a96.webp","sourceBytes":48765,"destBytes":19370,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1181,"convertSpendMs":28,"createdTime":"2020-10-10 03:11:40","host":"us-036*","referer":"https://www.percona.com/blog/?p=71900","linkMd5ListStr":"6ef126106b2c3f613772c02e2ab90f2b","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"47.6 KB","destSize":"18.9 KB","compressRate":"39.7%"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/a10.png","sourceStatusCode":200,"destWidth":403,"destHeight":216,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn96@2020_3/2020/10/09/19-11-40-823_cd77f246de739a2f.webp","sourceBytes":31282,"destBytes":6496,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1122,"convertSpendMs":16,"createdTime":"2020-10-10 03:11:40","host":"us-028*","referer":"https://www.percona.com/blog/?p=71900","linkMd5ListStr":"6ef126106b2c3f613772c02e2ab90f2b","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"30.5 KB","destSize":"6.3 KB","compressRate":"20.8%"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/t10-1024x447.png","sourceStatusCode":200,"destWidth":1024,"destHeight":447,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn69@2020_1/2020/10/09/19-11-40-955_61f73a5662763a1f.webp","sourceBytes":443251,"destBytes":88788,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1346,"convertSpendMs":61,"createdTime":"2020-10-10 03:11:40","host":"us-036*","referer":"https://www.percona.com/blog/?p=71900","linkMd5ListStr":"6ef126106b2c3f613772c02e2ab90f2b","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"432.9 KB","destSize":"86.7 KB","compressRate":"20%"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/a7.png","sourceStatusCode":200,"destWidth":917,"destHeight":303,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn3@2020_2/2020/10/09/19-11-42-851_6f301cc9dbf7dac8.webp","sourceBytes":102098,"destBytes":49512,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1261,"convertSpendMs":48,"createdTime":"2020-10-10 03:11:42","host":"us-004*","referer":"https://www.percona.com/blog/?p=71900","linkMd5ListStr":"6ef126106b2c3f613772c02e2ab90f2b","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"99.7 KB","destSize":"48.4 KB","compressRate":"48.5%"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/Picture-6.png","sourceStatusCode":200,"destWidth":541,"destHeight":316,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn26@2020_2/2020/10/09/19-11-43-521_dac04750ab427683.webp","sourceBytes":59172,"destBytes":15690,"targetWebpQuality":75,"feedId":11,"totalSpendMs":2298,"convertSpendMs":14,"createdTime":"2020-10-10 03:11:42","host":"europe-22*","referer":"https://www.percona.com/blog/?p=71900","linkMd5ListStr":"6ef126106b2c3f613772c02e2ab90f2b","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"57.8 KB","destSize":"15.3 KB","compressRate":"26.5%"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/a8.png","sourceStatusCode":200,"destWidth":995,"destHeight":338,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn99@2020_6/2020/10/09/19-11-44-944_cba23dfc493fc8b1.webp","sourceBytes":135909,"destBytes":80984,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1502,"convertSpendMs":95,"createdTime":"2020-10-10 03:11:44","host":"us-016*","referer":"https://www.percona.com/blog/?p=71900","linkMd5ListStr":"6ef126106b2c3f613772c02e2ab90f2b","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"132.7 KB","destSize":"79.1 KB","compressRate":"59.6%"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/aurora_multi_master_sharing_BP.png","sourceStatusCode":200,"destWidth":729,"destHeight":413,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn60@2020_3/2020/10/09/19-11-45-184_a2c5219b52acc72b.webp","sourceBytes":155934,"destBytes":24082,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1388,"convertSpendMs":23,"createdTime":"2020-10-10 03:11:44","host":"us-008*","referer":"https://www.percona.com/blog/?p=71900","linkMd5ListStr":"6ef126106b2c3f613772c02e2ab90f2b","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"152.3 KB","destSize":"23.5 KB","compressRate":"15.4%"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/a4.png","sourceStatusCode":200,"destWidth":763,"destHeight":186,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn22@2020_2/2020/10/09/19-11-45-184_cdfaaaeed13b14b2.webp","sourceBytes":25353,"destBytes":14900,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1387,"convertSpendMs":18,"createdTime":"2020-10-10 03:11:44","host":"us-008*","referer":"https://www.percona.com/blog/?p=71900","linkMd5ListStr":"6ef126106b2c3f613772c02e2ab90f2b","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"24.8 KB","destSize":"14.6 KB","compressRate":"58.8%"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/instances.png","sourceStatusCode":200,"destWidth":948,"destHeight":169,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn87@2020_1/2020/10/09/19-11-45-336_23b6063a1a8b6a3b.webp","sourceBytes":28284,"destBytes":13324,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1698,"convertSpendMs":9,"createdTime":"2020-10-10 03:11:44","host":"europe63*","referer":"https://www.percona.com/blog/?p=71900","linkMd5ListStr":"6ef126106b2c3f613772c02e2ab90f2b","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"27.6 KB","destSize":"13 KB","compressRate":"47.1%"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/Amazon-Aurora-Multi-Primary-First-Impression-200x112.png","sourceStatusCode":200,"destWidth":200,"destHeight":112,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn35@2020_5/2020/10/09/19-11-45-590_7350ea33d501bdcd.webp","sourceBytes":29440,"destBytes":4334,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1901,"convertSpendMs":8,"createdTime":"2020-10-10 03:11:44","host":"europe64*","referer":"https://www.percona.com/blog/?p=71900","linkMd5ListStr":"6ef126106b2c3f613772c02e2ab90f2b","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"28.8 KB","destSize":"4.2 KB","compressRate":"14.7%"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/t5-1024x447.png","sourceStatusCode":200,"destWidth":1024,"destHeight":447,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn13@2020_6/2020/10/09/19-11-45-792_848ca6e31ebe89f4.webp","sourceBytes":519857,"destBytes":100762,"targetWebpQuality":75,"feedId":11,"totalSpendMs":2447,"convertSpendMs":45,"createdTime":"2020-10-10 03:11:44","host":"europe63*","referer":"https://www.percona.com/blog/?p=71900","linkMd5ListStr":"6ef126106b2c3f613772c02e2ab90f2b","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"507.7 KB","destSize":"98.4 KB","compressRate":"19.4%"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/Picture-3.png","sourceStatusCode":200,"destWidth":401,"destHeight":228,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn13@2020_1/2020/10/09/19-11-48-770_46f3cb399dc15504.webp","sourceBytes":32896,"destBytes":7282,"targetWebpQuality":75,"feedId":11,"totalSpendMs":977,"convertSpendMs":20,"createdTime":"2020-10-10 03:11:48","host":"us-032*","referer":"https://www.percona.com/blog/?p=71900","linkMd5ListStr":"6ef126106b2c3f613772c02e2ab90f2b","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"32.1 KB","destSize":"7.1 KB","compressRate":"22.1%"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/t1-1024x447.png","sourceStatusCode":200,"destWidth":1024,"destHeight":447,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn51@2020_1/2020/10/09/19-11-48-857_a2c064940a89ef26.webp","sourceBytes":491493,"destBytes":94266,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1294,"convertSpendMs":46,"createdTime":"2020-10-10 03:11:48","host":"us-032*","referer":"https://www.percona.com/blog/?p=71900","linkMd5ListStr":"6ef126106b2c3f613772c02e2ab90f2b","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"480 KB","destSize":"92.1 KB","compressRate":"19.2%"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/Picture-7-1.png","sourceStatusCode":200,"destWidth":670,"destHeight":316,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn17@2020_1/2020/10/09/19-11-50-936_76d683a6f57c54c4.webp","sourceBytes":64013,"destBytes":30398,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1183,"convertSpendMs":39,"createdTime":"2020-10-10 03:11:50","host":"us-009*","referer":"https://www.percona.com/blog/?p=71900","linkMd5ListStr":"6ef126106b2c3f613772c02e2ab90f2b","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"62.5 KB","destSize":"29.7 KB","compressRate":"47.5%"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/split_traffic_by_db_table_partition_to_avoid_conflicts.png","sourceStatusCode":200,"destWidth":724,"destHeight":408,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn11@2020_3/2020/10/09/19-11-51-809_8dd60ebbe3935a96.webp","sourceBytes":181669,"destBytes":30000,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1895,"convertSpendMs":90,"createdTime":"2020-10-10 03:11:50","host":"us-54*","referer":"https://www.percona.com/blog/?p=71900","linkMd5ListStr":"6ef126106b2c3f613772c02e2ab90f2b","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"177.4 KB","destSize":"29.3 KB","compressRate":"16.5%"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/a3.png","sourceStatusCode":200,"destWidth":757,"destHeight":198,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn10@2020_6/2020/10/09/19-11-51-303_e914f113dbda2c68.webp","sourceBytes":20367,"destBytes":13206,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1822,"convertSpendMs":111,"createdTime":"2020-10-10 03:11:50","host":"us-021*","referer":"https://www.percona.com/blog/?p=71900","linkMd5ListStr":"6ef126106b2c3f613772c02e2ab90f2b","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"19.9 KB","destSize":"12.9 KB","compressRate":"64.8%"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/t2-1024x447.png","sourceStatusCode":200,"destWidth":1024,"destHeight":447,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn11@2020_1/2020/10/09/19-11-55-023_fe6f3fc884ee44a2.webp","sourceBytes":499981,"destBytes":94220,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1336,"convertSpendMs":59,"createdTime":"2020-10-10 03:11:54","host":"us-031*","referer":"https://www.percona.com/blog/?p=71900","linkMd5ListStr":"6ef126106b2c3f613772c02e2ab90f2b","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"488.3 KB","destSize":"92 KB","compressRate":"18.8%"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/fail-over_times_using_mariadb_driver.png","sourceStatusCode":200,"destWidth":725,"destHeight":411,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn5@2020_6/2020/10/09/19-11-55-203_35cd7f14c2dddde3.webp","sourceBytes":63866,"destBytes":12254,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1421,"convertSpendMs":61,"createdTime":"2020-10-10 03:11:54","host":"us-52*","referer":"https://www.percona.com/blog/?p=71900","linkMd5ListStr":"6ef126106b2c3f613772c02e2ab90f2b","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"62.4 KB","destSize":"12 KB","compressRate":"19.2%"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/t8-1024x447.png","sourceStatusCode":200,"destWidth":1024,"destHeight":447,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn79@2020_5/2020/10/09/19-11-59-664_b86d54eeceb6cb6e.webp","sourceBytes":442152,"destBytes":89362,"targetWebpQuality":75,"feedId":11,"totalSpendMs":3933,"convertSpendMs":234,"createdTime":"2020-10-10 03:11:56","host":"us-012*","referer":"https://www.percona.com/blog/?p=71900","linkMd5ListStr":"6ef126106b2c3f613772c02e2ab90f2b","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"431.8 KB","destSize":"87.3 KB","compressRate":"20.2%"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/Amazon-Aurora-Multi-Primary-First-Impression-300x168.png","sourceStatusCode":200,"destWidth":300,"destHeight":168,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn68@2020_6/2020/10/09/19-12-12-308_85ed1bd01c4e833a.webp","sourceBytes":56325,"destBytes":7496,"targetWebpQuality":75,"feedId":11,"totalSpendMs":4227,"convertSpendMs":31,"createdTime":"2020-10-10 03:12:09","host":"us-035*","referer":"https://www.percona.com/blog/?p=71900","linkMd5ListStr":"6ef126106b2c3f613772c02e2ab90f2b","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"55 KB","destSize":"7.3 KB","compressRate":"13.3%"}],"successGithubMap":{"myreaderx14":1,"myreaderx7":1,"myreaderx15":1,"myreaderx16":1,"myreaderx6":1,"myreaderx32":1,"myreaderx4":2,"myreaderx10":1,"myreaderx11":1,"myreaderx3":1,"myreaderx33":1,"myreaderx2":1,"myreaderx12":1,"myreaderx13":1,"myreaderx1":1,"myreaderx30":1,"myreaderx31":1,"myreaderx18":2,"myreaderx19":2,"myreaderx":1,"myreaderx25":1,"myreaderx27":2,"myreaderx21":1,"myreaderx22":1,"myreaderx23":1,"myreaderx24":2,"myreaderx5oss":1,"myreaderx29":2},"failGithubMap":{}}