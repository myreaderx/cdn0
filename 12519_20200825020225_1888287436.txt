{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Tech Meetup at the White House","link":"http://www.zachleat.com/web/whitehouse/","description":"<p><em>Skip to: <a href=\"http://www.zachleat.com/web/whitehouse/#video\">Video</a>, <a href=\"http://www.zachleat.com/web/whitehouse/#thankyou\">Thank You Notes</a>, <a href=\"http://www.zachleat.com/web/whitehouse/#related\">Related Links</a>, or <a href=\"http://www.zachleat.com/web/whitehouse/#press\">Press</a>.</em></p> \n<p>About one month ago, I received the following e-mail:</p> \n<div class=\"printed-page\"> \n <img src=\"https://www.zachleat.com/web/img/posts/whmeetup/seal.svg\" onerror=\"this.src='/web/img/posts/whmeetup/seal.png'; this.onerror=null;\" alt=\"The White House Official Seal\"> <pre class=\"fullwidthexempt\">\nOn April 17, we’re hosting community organizers, city and state officials, and technology thought leaders for a Tech Meetup at the White House. Our goals in gathering are to support America’s innovators, to better bridge digital divides, to interconnect us on common topics, to better collaborate on challenging projects where we have deep need and passion to solve them, and figure out how to include all Americans everywhere in our #InnovationNation.\n<p>I hope you will be able to join us!</p>\n<p>Megan<br>\nU.S. Chief Technology Officer and Assistant to the President<br>\n</br></br></p></pre><p></p> </img>\n</div> \n<p>To which I promptly responded:</p> \n<div class=\"printed-page\"> \n <pre class=\"fullwidthexempt\">\nDear <span class=\"redacted\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>,\n<p>Please forgive my abruptness, but I’m sure I’m not the only one that has had this reaction—is this a real thing? Is it really at the White House?</p>\n<p>Thanks!<br>\nZach<br>\n</br></br></p></pre>\n <p></p> \n</div> \n<p>I received the following:</p> \n<div class=\"printed-page\"> \n <pre class=\"fullwidthexempt\">\nHello Zach! This is the real thing :) -- and no, you are not the only person to react this way. It's a very special invitation, and yes, we are all really, truly invited to the White House.\n</pre> \n</div> \n<p>Holy shit.</p> \n<ul> \n <li><a href=\"http://whitehouse.gov/\">Whitehouse.gov</a> Blog Post: <a href=\"https://www.whitehouse.gov/blog/2015/04/14/friday-tech-meetup-white-house-0\">This Friday: Tech Meetup at the White House</a></li> \n <li><a href=\"http://meetup.com/\">Meetup.com</a> Blog Post: <a href=\"http://blog.meetup.com/announcing-the-first-tech-meetup-at-the-white-house/\">Announcing the first Tech Meetup at the White House</a></li> \n</ul> \n<p>Later I discovered that they wanted me to do a very short talk (three minutes) about <a href=\"http://nebraskajs.com/\">NebraskaJS</a>.</p> \n<p>Holy shit.</p> \n<p><a href=\"https://www.zachleat.com/web/img/posts/whmeetup/schedule.jpg\">Holy shit—my name is on the schedule.</a></p> \n<figure> \n <img class=\"primary\" src=\"https://www.zachleat.com/web/img/posts/whmeetup/room.jpg\" alt=\"\"> \n  <figcaption>\n   Holy shit—I’m in the room.\n  </figcaption> </img>\n</figure> \n<figure> \n <img class=\"primary\" src=\"https://www.zachleat.com/web/img/posts/whmeetup/onstage.jpg\" alt=\"\"> \n  <figcaption>\n   Holy shit—I’m on the stage.\n  </figcaption> </img>\n</figure> \n<p><span id=\"video\"></span></p> \n<h2 id=\"video\">Video <a class=\"direct-link\" href=\"http://www.zachleat.com/web/whitehouse/#video\">#</a></h2> \n<p>Jump to the <strong>2h 23m 26s</strong> mark to see my portion.</p> \n<figure> \n <div class=\"fullwidth\">\n  <div class=\"fluid-width-video-wrapper\">\n   <iframe src=\"https://www.youtube.com/embed/DF_5NgLoZyI?t=2h23m26s\" frameborder=\"0\" allowfullscreen=\"\"></iframe>\n  </div>\n </div> \n <figcaption>\n  <a href=\"https://www.youtube.com/watch?v=DF_5NgLoZyI&amp;t=2h23m26s\">Tech Meetup at the White House — Zach Leatherman on NebraskaJS</a> on YouTube.\n </figcaption> \n</figure> \n<p>After my talk was over, I immediately posted this tweet:</p> \n<blockquote class=\"twitter-tweet\" lang=\"en\">\n <p>Holy shit.</p>— Zach Leatherman (@zachleat) \n <a href=\"https://twitter.com/zachleat/status/589090672306683904\">April 17, 2015</a>\n</blockquote> \n<p><span id=\"thankyou\"></span></p> \n<h2 id=\"thank-you-notes\">Thank You Notes <a class=\"direct-link\" href=\"http://www.zachleat.com/web/whitehouse/#thank-you-notes\">#</a></h2> \n<p>This was, without a doubt, one of the coolest opportunities I have ever had in my life. A huge thank you to the Meetup team that organized the event and <a href=\"https://twitter.com/USCTO\">Megan Smith</a> (US CTO) who I learned firsthand is one of the most amazing people on planet Earth.</p> \n<p>Another huge thank you to everyone that has helped out with NebraskaJS: especially the original founders <a href=\"https://twitter.com/jdsharp\">Jonathan Sharp</a>, <a href=\"https://twitter.com/amwirick\">Andrew Wirick</a>, and <a href=\"https://twitter.com/eliperelman\">Eli Perelman</a>; the current co-organizers <a href=\"https://twitter.com/nicknisi\">Nick Nisi</a> and <a href=\"https://twitter.com/blainekasten\">Blaine Kasten</a>; and <a href=\"http://nebraskajs.com/presenters/\">all the presenters</a>. I wouldn’t have gotten this opportunity if it hadn’t been for you all. Thank you.</p> \n<p><span id=\"related\"></span></p> \n<h2 id=\"related-links\">Related Links <a class=\"direct-link\" href=\"http://www.zachleat.com/web/whitehouse/#related-links\">#</a></h2> \n<ul> \n <li><a href=\"https://goo.gl/photos/4imPhedXuVyRS9168\">My photo album from the event</a></li> \n <li><a href=\"https://storify.com/zachleat/white-house-meetup\">My storify from the event</a></li> \n <li><a href=\"https://twitter.com/search?q=%23whmeetup\">#WHMeetup Hashtag</a></li> \n</ul> \n<p><span id=\"press\"></span></p> \n<h2 id=\"press\">Press <a class=\"direct-link\" href=\"http://www.zachleat.com/web/whitehouse/#press\">#</a></h2> \n<p>TechRepublic: <a href=\"http://www.techrepublic.com/article/white-house-plays-matchmaker-with-local-geeks-and-leaders-to-get-more-people-into-tech-jobs/\">White House plays matchmaker with local geeks and leaders to get more people into tech jobs</a></p> \n<blockquote> \n <p>Zach Leatherman from NebraskaJS talked about battling brain drain--losing top talent to other parts of the country--drawing the attention of companies to the local talent pool, and essentially making sure no one is held back by negative perceptions relating to their geographic location.</p> \n</blockquote> \n<p><a href=\"http://meetup.com/\">Meetup.com</a> Blog Post: <a href=\"http://blog.meetup.com/creating-opportunity/\">Celebrating opportunity at the first-ever Tech Meetup at the White House</a></p> \n<p>NextGov: <a href=\"http://www.nextgov.com/cio-briefing/2015/04/white-house-promotes-tech-meetups-economic-growth-drivers/110476/\">White House Promotes Tech Meetups</a></p> \n<p>CNN Money: <a href=\"http://money.cnn.com/2015/04/17/technology/white-house-tech-meetup-megan-smith/index.html\">First White House Tech Meetup: You are creating opportunity</a></p>","descriptionType":"html","feedId":12519,"bgimg":"https://www.zachleat.com/web/img/posts/whmeetup/seal.svg","linkMd5":"2d7f4729e0b81faaeb99688d00762170","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn65@2020_4/2020/08/25/02-02-02-683_24af62e7863381d2.svg","destWidth":0,"destHeight":0,"sourceBytes":121926,"destBytes":121926,"author":"","articleImgCdnMap":{"https://www.zachleat.com/web/img/posts/whmeetup/seal.svg":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn65@2020_4/2020/08/25/02-02-02-683_24af62e7863381d2.svg","https://www.zachleat.com/web/img/posts/whmeetup/room.jpg":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn40@2020_6/2020/08/25/02-02-17-804_7dc386cbe8c2f27f.webp","https://www.zachleat.com/web/img/posts/whmeetup/onstage.jpg":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn63@2020_3/2020/08/25/02-02-17-913_7e282b5ca85703ee.webp"},"publishedOrCreatedDate":1598320921765},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Eleventy Crash Course with Nick and Zach—NebraskaJS Omaha","link":"http://www.zachleat.com/web/eleventy-nebraskajs/","description":"\n\t\t\t\t<p><em>This content lives somewhere else. It was originally posted at: <a href=\"https://www.meetup.com/nebraskajs/events/dxndfdybccbkb/\">https://www.meetup.com/nebraskajs/events/dxndfdybccbkb/</a></em></p>\n\t\t\t\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"83fafa23cb160f14220de0dfab449820","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921772},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Use Speedlify to Continuously Measure Site Performance","link":"http://www.zachleat.com/web/speedlify/","description":"<p>When launching a brand new web site, it’s fairly common to run testing tools to ensure that the site is fast and follows best practices. One popular tool to accomplish these goals is <a href=\"https://developers.google.com/web/tools/lighthouse\">Google’s Lighthouse</a>. It works great and is pretty comprehensive.</p> \n<p>Here are some of the ways I’ve used Lighthouse to help test my sites:</p> \n<ul> \n <li>Chrome Developer Tools (this is where people usually start)</li> \n <li><a href=\"https://adactio.com/journal/16523\">Bookmarklet (for easy access in Firefox) via @adactio</a></li> \n <li><a href=\"https://lighthouse-metrics.com/\">Lighthouse Metrics (created by @chriswdmr)</a> for quick and easy worldwide testing</li> \n <li><a href=\"https://www.npmjs.com/package/lighthouse#using-the-node-cli\">Lighthouse CLI</a> via the <a href=\"https://github.com/zachleat/performance-leaderboard\"><code>performance-leaderboard</code></a> package, which will do multiple runs and select the median.</li> \n <li><a href=\"https://www.11ty.dev/leaderboard/\">Eleventy Leaderboards</a> allow the Eleventy community to compete on site performance and accessibility (also using <code>performance-leaderboard</code>).</li> \n <li><a href=\"https://googlechrome.github.io/lighthouse-ci/viewer/\">Lighthouse Viewer</a> can diff two different Lighthouse logs to see how the performance changed.</li> \n</ul> \n<p>Instantaneous measurement is a good first step. But how do we ensure that the site maintains good performance and best practices when deploys are happening every day? How do we keep the web site fast? The second step is continuous measurement. This is where Speedlify comes in. It’s an <a href=\"https://www.11ty.dev/\">\n  <picture>\n   <source type=\"image/webp\" srcset=\"https://www.zachleat.com/img/9d23164f-72.webp 72w\"><img alt=\"eleven_ty’s Avatar\" src=\"https://www.zachleat.com/img/9d23164f-72.jpeg\" width=\"72\" height=\"72\" class=\"z-avatar\" loading=\"lazy\" /></source>\n  </picture>Eleventy</a>-generated web site published as an open source repository to help automate continuous performance measurements.</p> \n<div class=\"primarylink\">\n <a href=\"https://www.speedlify.dev/ssg/\">Speedlify Demo, for Static Site Generator web sites</a>\n</div> \n<h2 id=\"source-code\">Source Code <a class=\"direct-link\" href=\"http://www.zachleat.com/web/speedlify/#source-code\">#</a></h2> \n<ul> \n <li> <p><strong><a href=\"http://github.com/zachleat/speedlify\">Speedlify on GitHub</a></strong></p> </li> \n <li> <p><strong>DIY</strong>: Run it manually, locally on your computer and check in the data to your repo.</p> </li> \n <li> <p><strong>Automated</strong>: If you want to automate it, Speedlify can run entirely self-contained on Netlify. Be aware that there’s a maximum of 15 minutes per build (if you do 3 runs each, I’d guess this will let you test a maximum of around 20 pages). <a href=\"https://www.netlify.com/pricing/\">Netlify’s free tier</a> gives you 300 build minutes per month.</p> </li> \n</ul> \n<div class=\"fullwidth\">\n <a href=\"https://www.speedlify.dev/ssg/\"><img src=\"https://www.zachleat.com/web/img/posts/speedlify/screenshot-1x.png\" srcset=\"https://www.zachleat.com/web/img/posts/speedlify/screenshot-1x.png 600w, https://www.zachleat.com/web/img/posts/speedlify/screenshot-2x.png 1400w\" sizes=\"(min-width: 60em) calc(100vw - 13.5rem), 100vw\" alt=\"A very zoomed out screenshot of Speedlify\" width=\"600\" height=\"540\" /></a>\n</div> \n<h2 id=\"next-steps\">Next Steps <a class=\"direct-link\" href=\"http://www.zachleat.com/web/speedlify/#next-steps\">#</a></h2> \n<p>Speedlify is intended as a stepping stone to more robust performance monitoring solutions like:</p> \n<ul> \n <li><a href=\"https://speedcurve.com/\">SpeedCurve</a></li> \n <li><a href=\"https://calibreapp.com/\">Calibre</a></li> \n</ul> \n<p>Use it to sell ’em on the benefits and if you have budget, pay for something better 😅</p>","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"00a20fbfa998f90bcf59e42fa7841570","bgimgJsdelivr":"","metaImg":"","author":"","articleImgCdnMap":{"https://www.zachleat.com/img/9d23164f-72.jpeg":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn81@2020_3/2020/08/25/02-02-13-525_21a73ffef3a3874c.webp","https://www.zachleat.com/web/img/posts/speedlify/screenshot-1x.png":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn64@2020_6/2020/08/25/02-02-20-281_9bd92499e639a8a6.webp"},"publishedOrCreatedDate":1598320921773},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"A Frugal and Simple Guide to Putting Lights on your Bike","link":"http://www.zachleat.com/web/bike-lights/","description":"<p>Last weekend I put up a tweet:</p> \n<blockquote class=\"twitter-tweet\" lang=\"en\">\n <p>I put about 5m (24W) of LEDs on my bike for the upcoming <a href=\"https://twitter.com/owlride\">@owlride</a>. The parts cost ~$15. Here’s me testing it out: <a href=\"http://t.co/sPOqCzUYN6\">http://t.co/sPOqCzUYN6</a></p>— Zach Leatherman (@zachleat) \n <a href=\"https://twitter.com/zachleat/statuses/483452979430060032\">June 30, 2014</a>\n</blockquote> \n<p>This, of course, is for Omaha’s upcoming <a href=\"http://owlride.org/\">OwL Ride</a>, a 16-mile nighttime bike ride on Omaha’s streets with thousands of other riders. Many riders decorate their bikes with bright lights and this year I wanted to get a little crazy with it.</p> \n<p>I received a few inquiries as to more detail on the setup, so please forgive the non-web development related post while I post the amazingly simple process of putting a blinding amount of seen-from-space light on your bike.</p> \n<h2 id=\"supplies%3A\">Supplies: <a class=\"direct-link\" href=\"http://www.zachleat.com/web/bike-lights/#supplies%3A\">#</a></h2> \n<ul> \n <li>Electrical Tape</li> \n <li>8 AA Batteries (Alkaline/Non-Rechargable, NIMH or Lithium batteries will last longer)</li> \n <li>$3 for <a href=\"http://www.amazon.com/gp/product/B00CQKCXXE/\">12V Battery Case with On/Off Switch</a> (This is optional, but makes things a lot easier. Otherwise you’ll have to tape batteries together, which is a huge pain.)</li> \n <li>$11 for <a href=\"http://www.amazon.com/gp/product/B00JX6SUWM/\">12V LED Strip</a></li> \n</ul> \n<p>This setup does not require any soldering.</p> \n<h2 id=\"build-steps\">Build Steps <a class=\"direct-link\" href=\"http://www.zachleat.com/web/bike-lights/#build-steps\">#</a></h2> \n<h3 id=\"step-1\">Step 1 <a class=\"direct-link\" href=\"http://www.zachleat.com/web/bike-lights/#step-1\">#</a></h3> \n<img src=\"https://www.zachleat.com/web/img/posts/bike-lights/ledstrip.jpg\"> <p>Decide how you’re going to attach the light strip to your bike. Here’s an image I had commissioned from a professional artist:</p> <img src=\"https://www.zachleat.com/web/img/posts/bike-lights/attachment.png\"> <p>Remove the strip on the back of the lights to expose the sticky 3M backing. Start sticking the lights to the frame at the bike seat, go to the front, loop around the side to the back wheel then go back and repeat on the other side. Pretty easy.</p> <h3 id=\"step-2\">Step 2 <a class=\"direct-link\" href=\"http://www.zachleat.com/web/bike-lights/#step-2\">#</a></h3> <img src=\"https://www.zachleat.com/web/img/posts/bike-lights/batterycase.jpg\"> <p>Make sure your batteries are not in the case and the power switch is in the <strong>off position</strong>.</p> <p>Attach the battery to the lights. Tape the red (positive) wire from the battery case to the red wire from the lights. Do the same with the black (negative) wires. Make sure you have a good connection. You may have to strip a bit of the plastic off the ends to expose the actual wires.</p> <p>Put your AA batteries into the case.</p> <h3 id=\"step-3\">Step 3 <a class=\"direct-link\" href=\"http://www.zachleat.com/web/bike-lights/#step-3\">#</a></h3> <p>Flip the battery case power switch to the on position. Your lights should illuminate. If they do not, turn it off again and recheck your wires.</p> <h3 id=\"step-4\">Step 4 <a class=\"direct-link\" href=\"http://www.zachleat.com/web/bike-lights/#step-4\">#</a></h3> <p>Attach the battery case to your bike. I have a little pouch under my bike seat that worked well for this but you could use duct/electrical tape or whatever.</p> <h2 id=\"usage-notes\">Usage Notes <a class=\"direct-link\" href=\"http://www.zachleat.com/web/bike-lights/#usage-notes\">#</a></h2> <p>Because the LED lights are so bright (may draw up to 2A) the battery isn’t going to last very long. A cheap battery (Duracell Coppertop) may <a href=\"http://www.powerstream.com/AA-tests.htm\">only last ~30 minutes discharging 2A</a> (.54 Amp-Hours for 2A draw) but a better battery will give you more time (up to 2.8 AH for 2A draw for the Energizer Lithium).</p> <h2 id=\"finished-product\">Finished Product <a class=\"direct-link\" href=\"http://www.zachleat.com/web/bike-lights/#finished-product\">#</a></h2> <p>I took a daytime picture since the nighttime video above didn’t really show much detail:</p> <img src=\"https://www.zachleat.com/web/img/posts/bike-lights/bikelights.jpg\" alt=\"LED strip lights on the bike, illuminated\"> <h2 id=\"extra-credit\">Extra Credit <a class=\"direct-link\" href=\"http://www.zachleat.com/web/bike-lights/#extra-credit\">#</a></h2> <h3 id=\"multicolor\">Multicolor <a class=\"direct-link\" href=\"http://www.zachleat.com/web/bike-lights/#multicolor\">#</a></h3> <img src=\"https://www.zachleat.com/web/img/posts/bike-lights/ledstripmulticolor.jpg\"> <p>I put a <a href=\"http://www.amazon.com/dp/B00IN4Y7VS/\">multicolor 12V LED Strip</a> on my wife’s bike which came with a handy infrared remote for changing the color. To hook this up to the battery I simply cut the power supply cord, tossed the AC adapter wall plug and hooked the positive wire to the positive of the battery and the negative wire to the negative of the battery.</p> <h3 id=\"caseless\">Caseless <a class=\"direct-link\" href=\"http://www.zachleat.com/web/bike-lights/#caseless\">#</a></h3> <p>In a pinch, you don’t have to use a battery case. You can just tape the batteries tightly together using electrical tape (+ to -, + to -, etc) and then tape the positive wire from the LED strip to the positive end of your first battery and the negative wire from the LED strip to the negative end of the last battery. This configuration will save you about $3 but it’s far too brittle and has no built in on-off switch. Just buy a battery case.</p> <h3 id=\"lower-voltage-led-strips\">Lower Voltage LED Strips <a class=\"direct-link\" href=\"http://www.zachleat.com/web/bike-lights/#lower-voltage-led-strips\">#</a></h3> <p>There are a bunch of 5V LED strips available but all of the ones I could find had individually addressable lights for programming. To be honest, I just wanted something bright and cheap so I went the 12V route. You’re looking at about $2.2/m for “dumb” lights versus $30/m for “smart” lights.</p> </img></img></img></img></img>","descriptionType":"html","feedId":12519,"bgimg":"https://www.zachleat.com/web/img/posts/bike-lights/ledstrip.jpg","linkMd5":"7236e308ceceb4822eb2ef1d1b0b109b","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn6@2020_1/2020/08/25/02-02-04-347_508259292746c0d5.webp","destWidth":600,"destHeight":600,"sourceBytes":49048,"destBytes":38206,"author":"","articleImgCdnMap":{"https://www.zachleat.com/web/img/posts/bike-lights/ledstrip.jpg":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn6@2020_1/2020/08/25/02-02-04-347_508259292746c0d5.webp","https://www.zachleat.com/web/img/posts/bike-lights/attachment.png":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn76@2020_5/2020/08/25/02-02-21-916_23aed885329535f1.webp","https://www.zachleat.com/web/img/posts/bike-lights/batterycase.jpg":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn73@2020_4/2020/08/25/02-02-10-057_e11ca43870b61bee.webp","https://www.zachleat.com/web/img/posts/bike-lights/bikelights.jpg":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn46@2020_3/2020/08/25/02-02-20-038_e5fc4ef9353c787b.webp","https://www.zachleat.com/web/img/posts/bike-lights/ledstripmulticolor.jpg":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn4@2020_6/2020/08/25/02-02-20-092_dec14881bb27e9d4.webp"},"publishedOrCreatedDate":1598320921764},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"JAMstack_conf_sf 2019","link":"http://www.zachleat.com/web/speaking/jamstack_conf_sf/","description":"\n\t\t\t\t<p><em>This content lives somewhere else. It was originally posted at: <a href=\"https://jamstackconf.com/sf/\">https://jamstackconf.com/sf/</a></em></p>\n\t\t\t\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"ca4ea666717cc1d068b6df265a39e017","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921772},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"SmashingConf London 2018","link":"http://www.zachleat.com/web/smashingconf/2018/","description":"\n\t\t\t\t<p><em>This content lives somewhere else. It was originally posted at: <a href=\"https://smashingconf.com/london-2018/\">https://smashingconf.com/london-2018/</a></em></p>\n\t\t\t\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"2f4570e668f102b0c6afc620f6e88a7b","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921769},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Internet Explorer Array.sort Unreliable","link":"http://www.zachleat.com/web/array-sort/","description":"<p>What would you expect to be the result of executing the following code?</p> \n<pre><code>// Create a medium size array, at least 100 items\nvar obj = [];\nfor(var j=0, k=150; j&lt;k; j++) {\n    // the value here doesn't matter.\n    obj.push('ABCD'+j);\n}\n \n// Sort the array alphabetically.\nobj.sort(function(m,p){\n    m=(''+m).toLowerCase();\n    p=(''+p).toLowerCase();\n \n    if(m &gt; p) return 1;\n    if(m &lt; p) return -1;\n    return 0;\n});\n</code></pre> \n<p>The <code>obj</code> Array should now be sorted, in alphabetical order based on value. <strong>BUT, in our best friend Internet Explorer, a <code>Number Expected</code> error may be the result.</strong> Don’t be fooled if your test array behaves correctly, it only happens intermittently for arrays of varying size!</p> \n<p>So, I <a href=\"http://www.zachleat.com/test/numberexpected/\">whipped up a quick test to check the damage</a>. Iterating over array sizes from 1 to 150, running the Array sort algorithm. The following failures resulted:</p> \n<table> \n <thead> \n  <tr> \n   <th>Browser</th> \n   <th>Failures *</th> \n  </tr> \n </thead> \n <tbody> \n  <tr> \n   <td>Internet Explorer 6</td> \n   <td>4 sizes out of 150</td> \n  </tr> \n  <tr> \n   <td>Internet Explorer 7</td> \n   <td>18 sizes out of 150</td> \n  </tr> \n  <tr> \n   <td>Internet Explorer 8 (and Compatibility Mode)</td> \n   <td>2 sizes out of 150</td> \n  </tr> \n  <tr> \n   <td>Internet Explorer 9 (and Compatibility Mode)</td> \n   <td>0 sizes out of 150 (Fixed!)</td> \n  </tr> \n </tbody> \n</table> \n<p>* Failures may vary to the specifications of the test machine.</p> \n<p>Of course, the <code>Number Expected</code> error is going to result whenever your code doesn’t return a number inside of the function callback. But the problem here is something deeper than simple application code failure. The problem is in JScript itself. Any modification to the sort arguments may result in the <code>Number Expected</code> error.</p> \n<pre><code>// modifies the argument m and is unreliable.\nm=(''+m).toLowerCase();\n</code></pre> \n<p>This problem will manifest itself more frequently if you use the Google Closure Compiler, which restructures JavaScript to reuse argument variables if possible, probably to save the 4 character penalty of a “var ” declaration.</p> \n<p>Normally, reusing argument variables is a safe practice for primitives, since they are passed by value and not by reference, as is the case in this Array sort example <sup><a href=\"http://www.zachleat.com/web/array-sort/#by-ref\">1</a></sup>. So, what exactly is going on here? One commenter at the <a href=\"http://code.google.com/p/closure-compiler/issues/detail?id=58\">Google Closure Compiler bug</a> seems to think that the actual array values are being passed by reference instead of by value. I’m not completely convinced that’s the case.</p> \n<h2 id=\"the-fix\">The Fix <a class=\"direct-link\" href=\"http://www.zachleat.com/web/array-sort/#the-fix\">#</a></h2> \n<p><strong>Don’t reuse the argument variables inside of an Array sort function.</strong></p> \n<pre><code>// Changing the above example\nobj.sort(function(m1,p1){\n    var m=(''+m1).toLowerCase(),\n        p=(''+p1).toLowerCase();\n \n    if(m &gt; p) return 1;\n    if(m &lt; p) return -1;\n    return 0;\n});\n</code></pre> \n<p><em>Check the <a href=\"http://www.zachleat.com/test/numberexpected/\">source code of the demo file</a> to see the different methods of modifying the arguments that I attempted.</em></p> \n<ol> \n <li>If you want to learn more about passing by value or reference, <a href=\"http://snook.ca/archives/javascript/javascript_pass\">Jonathan Snook has a nice explanation</a>.</li> \n</ol> \n<p><em>Internet Explorer can’t make you do anything, it can only make you wish you hadn’t.</em></p> \n<p><strong>Updated: Added note about Internet Explorer 9 and its Compatibility View. Looks like it’s fixed!</strong></p>","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"3bbefbb1b16875abac09447203d63289","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921762},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"“The Compromise”—a Modern but Compatible Font Loading Strategy","link":"http://www.zachleat.com/web/the-compromise/","description":"<style> ol ol { list-style: lower-alpha; } </style> \n<p>Let’s be frank: the next evolution in advanced web font loading is overdue. I’m not talking about <code>font-display</code>, which is great—a quick and easy win for introductory font loading. I’m talking about evolving our multi-stage font loading approaches to squeeze every last drop of performance out of our web font rendering.</p> \n<p>The next evolution will come when we <strong>retire our font loading polyfills</strong>.</p> \n<h2 id=\"retirement-benefits\">Retirement Benefits <a class=\"direct-link\" href=\"http://www.zachleat.com/web/the-compromise/#retirement-benefits\">#</a></h2> \n<p>Polyfill retirement is the next step and is especially important as these JavaScripts are usually inlined in the <em>critical path</em>. The time spent parsing and executing polyfill JavaScript is essentially wasted on browsers that support the native CSS Font Loading API. For example, take the following two examples from my <a href=\"https://github.com/zachleat/web-font-loading-recipes\"><code>web-font-loading-recipes</code> repository</a>:</p> \n<ul> \n <li><a href=\"https://github.com/zachleat/web-font-loading-recipes/blob/master/fout-with-class-polyfill.html\"><code>fout-with-class-polyfill.html</code></a> using a polyfill: <code>8.46 KB</code> (uncompressed)</li> \n <li><a href=\"https://github.com/zachleat/web-font-loading-recipes/blob/master/fout-with-class.html\"><code>fout-with-class.html</code></a> using only the CSS Font Loading API: <code>2.17 KB</code> (uncompressed)</li> \n</ul> \n<h2 id=\"no%E2%80%A6-please%E2%80%94don%E2%80%99t-go%3F\">No… Please—Don’t go? <a class=\"direct-link\" href=\"http://www.zachleat.com/web/the-compromise/#no%E2%80%A6-please%E2%80%94don%E2%80%99t-go%3F\">#</a></h2> \n<p>Can we just remove the polyfills wholesale and switch our code to use the CSS Font Loading API? Well, not quite yet. The browser-provided <a href=\"https://caniuse.com/#feat=font-loading\">CSS Font Loading API has pretty broad support</a> and has been around for a <em>long time</em> but is confoundedly still missing from all available versions of Microsoft Edge.</p> \n<table> \n <thead> \n  <tr> \n   <th>Web Browser</th> \n   <th>CSS Font Loading<br>Support Added</br></th> \n  </tr> \n </thead> \n <tbody> \n  <tr> \n   <td>Chrome v35</td> \n   <td>May 19, 2014</td> \n  </tr> \n  <tr> \n   <td>Opera v22</td> \n   <td>June 2, 2014</td> \n  </tr> \n  <tr> \n   <td>Firefox v41</td> \n   <td>September 21, 2015</td> \n  </tr> \n  <tr> \n   <td>Samsung Internet v4</td> \n   <td>April 18, 2016</td> \n  </tr> \n  <tr> \n   <td>UC Browser v11.8</td> \n   <td>August 16, 2016</td> \n  </tr> \n  <tr> \n   <td>Mobile Safari v10</td> \n   <td>September 12, 2016</td> \n  </tr> \n  <tr> \n   <td>Safari v10</td> \n   <td>September 19, 2016</td> \n  </tr> \n  <tr> \n   <td>Internet Explorer</td> \n   <td>🚫 <em>Not supported</em></td> \n  </tr> \n  <tr> \n   <td>Microsoft Edge</td> \n   <td>🚫 <em>Not supported</em></td> \n  </tr> \n </tbody> \n</table> \n<p><a href=\"https://developer.microsoft.com/en-us/microsoft-edge/platform/status/cssfontloadingapi/?q=css%20font%20loading\">Microsoft Platform status</a> has given no signals of intent to implement. At time of writing, the <a href=\"https://wpdev.uservoice.com/forums/257854-microsoft-edge-developer/suggestions/6509785-css-font-loading\">CSS Font Loading API UserVoice entry</a> (a voting platform for developers to help Microsoft prioritize features) has 796 votes, which is <a href=\"https://wpdev.uservoice.com/forums/257854-microsoft-edge-developer/filters/top?page=3\">#49 on the list</a> (ordered by total votes). That’s 350 votes behind the Web MIDI API and 553 votes behind Scrollbar Styling 🙄.</p> \n<p><strong><em>Ahem</em></strong>, I digress.</p> \n<h2 id=\"fonts-for-auction\">Fonts for Auction <a class=\"direct-link\" href=\"http://www.zachleat.com/web/the-compromise/#fonts-for-auction\">#</a></h2> \n<p>How do we go polyfill-less in modern browsers without completely sacrificing our web fonts on IE and Edge? This blog post would be pretty silly if it ended without answering that question…</p> \n<p>In September of 2017, eBay engineers Senthil Padmanabhan (<a href=\"https://twitter.com/senthil_hi\">@senthil_hi</a>) and Raja Ramu (<a href=\"https://twitter.com/rajaramu\">@rajaramu</a>) wrote a blog post titled <a href=\"https://www.ebayinc.com/stories/blogs/tech/ebays-font-loading-strategy/\">eBay’s Font Loading Strategy</a>. It may have been one of the most underrated font loading blog posts of 2017.</p> \n<p>The eBay strategy was novel for two reasons, the first being that it emulated <code>font-display: optional</code> using JavaScript. JavaScript was important because at that time <a href=\"https://caniuse.com/#feat=css-font-rendering-controls\">only Chrome supported the <code>font-display</code> descriptor</a>. Practically speaking, <code>font-display: optional</code> means that an empty-cache view kicks off requests for web fonts but doesn’t render them. Web fonts are only rendered when they are already in available in cache. This minimizes both FOIT and FOUT, as well as nasty text reflows.</p> \n<p>The second novelty was that it <em>took steps to partially eliminate polyfill usage</em>! Namely it did not inline a font loading polyfill! Instead it used the CSS Font Loading API if it was available and if not, asynchronously loaded the font loading polyfill to load the web fonts (again, only on IE and Edge).</p> \n<p class=\"primarylink primarylink-demo\"><a href=\"https://www.zachleat.com/web-fonts/demos/ebay-method.html\">The eBay Method</a></p> \n<p>I’ve also added the <a href=\"https://github.com/zachleat/web-font-loading-recipes#the-ebay-method\">eBay Method to <code>web-font-loading-recipes</code></a> if you want to check out the code.</p> \n<h2 id=\"the-compromise\">The Compromise <a class=\"direct-link\" href=\"http://www.zachleat.com/web/the-compromise/#the-compromise\">#</a></h2> \n<p>Senthil and Raja’s eBay method is great! However, I would make one small change to their approach (and this is also why I don’t prefer <code>font-display: optional</code>)—I like rendering web fonts on an empty cache load! Thus, the Compromise is born, borrowing <em>heavily</em> from eBay’s approach.</p> \n<p>If you’ve been following along at <a href=\"https://www.zachleat.com/web/comprehensive-webfonts/\">The Comprehensive Guide to Font Loading Strategies</a>, you may be aware that my personal favorite method is currently transitioning to <a href=\"https://www.zachleat.com/web/comprehensive-webfonts/#critical-foft-preload\">Critical FOFT with preload</a>, given that <a href=\"https://caniuse.com/#feat=link-rel-preload\">preload</a> support is on the cusp of widespread support.</p> \n<p><em>Curious what FOFT is? Check the <a href=\"https://www.zachleat.com/web/webfont-glossary/\">Web Font Loading Glossary</a>.</em></p> \n<p>Let’s Frankenstein the eBay method and the Critical FOFT method together:</p> \n<p class=\"primarylink primarylink-demo\"><a href=\"https://www.zachleat.com/web-fonts/demos/critical-foft-preload-fallback-optional.html\">“The Compromise”</a></p> \n<p>You can review the <a href=\"https://github.com/zachleat/web-font-loading-recipes/blob/master/critical-foft-preload-fallback-optional.html\">HTML</a> and <a href=\"https://github.com/zachleat/web-font-loading-recipes/blob/master/critical-foft-preload-fallback-optional.js\">Lazy loaded JavaScript</a> (only used if the CSS Font Loading API is not supported). The Compromise is also on <a href=\"https://github.com/zachleat/web-font-loading-recipes#the-compromise-critical-foft-with-preload-with-a-polyfill-fallback-emulating-font-display-optional\"><code>web-font-loading-recipes</code></a>.</p> \n<p>In this example, we used a traditional 4+1 Lato setup: Roman (plus a super subset <code>A-Za-z</code> Roman), Italic, Bold, Italic Bold.</p> \n<ol> \n <li>Preload the super subset Roman (WOFF2)</li> \n <li>If <code>sessionStorage</code> key exists for repeat views, add the <code>fonts-loaded-2</code> class and stop here!</li> \n <li>If CSS Font Loading API is supported, load the fonts: \n  <ol> \n   <li>Use CSS Font Loading API to load Stage 1: super subset Roman</li> \n   <li>Render super subset Roman (add <code>fonts-loaded-1</code> class)</li> \n   <li>Use CSS Font Loading API to load Stage 2: Roman, Italic, Bold, and Italic Bold.</li> \n   <li>Render Roman, Italic, Bold, and Italic Bold versions (add <code>fonts-loaded-2</code> class)</li> \n   <li>Skip to step 5.</li> \n  </ol> </li> \n <li>If CSS Font Loading API is <em>not</em> supported, load the fonts: \n  <ol> \n   <li>Asynchronously lazy load the polyfill (in this example <a href=\"https://github.com/zachleat/web-font-loading-recipes/blob/master/critical-foft-preload-fallback-optional.js\"><code>critical-foft-preload-fallback-optional.js</code></a>)</li> \n   <li>Use the polyfill to load only Stage 2: Roman, Italic, Bold, and Italic Bold.</li> \n   <li>Do not render these fonts (no classes added)</li> \n   <li>Skip to step 5.</li> \n  </ol> </li> \n <li>All the fonts have confirmed to be loaded, add the <code>sessionStorage</code> key for repeat views.</li> \n</ol> \n<h2 id=\"in-the-wild\">In the wild <a class=\"direct-link\" href=\"http://www.zachleat.com/web/the-compromise/#in-the-wild\">#</a></h2> \n<p>It’s frustrating that Microsoft browsers don’t support the CSS Font Loading API. But this is where The Compromise shines—it allows us to serve and render web fonts using the CSS Font Loading API (no polyfills) on an empty-cache page loads. If a browser doesn’t support the CSS Font Loading API (uh, IE and Edge) we take a more relaxed <code>font-display: optional</code>-ish repeat-view approach.</p> \n<p><em>The Compromise</em> has been battle tested. It has been in production on this web site for quite some time (<a href=\"http://zachleat.com/\">zachleat.com</a>) and is the strategy we used for the font loading on the lovely redesign of <a href=\"https://www.smashingmagazine.com/\">Smashing Magazine</a> (although with FOFT instead of Critical FOFT).</p> \n<p>Keep those web fonts frosty, y’all 👍.</p> \n<h2 id=\"addendum\">Addendum <a class=\"direct-link\" href=\"http://www.zachleat.com/web/the-compromise/#addendum\">#</a></h2> \n<p><em>If some of the terms in the above article were new to you, you may want to look them up on the <a href=\"https://www.zachleat.com/web/webfont-glossary/\">Web Font Loading Glossary</a>.</em></p>","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"dc75ad3663601c682274fd75564f2e27","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921770},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"HTML5 vs. Native Applications, The Presentation","link":"http://www.zachleat.com/web/html5-vs-native-applications/","description":"\n\t\t\t<p>This slide deck was prepared for my guest lecture at the University of Nebraska-Omaha’s spring course on Mobile Application Development (BSAD 8916-005). The course was developed <a href=\"http://googleresearch.blogspot.com/2009/07/app-inventor-for-android.html\">in partnership with Google’s University Relations program</a> and included a variety of business and management students with <em>limited programming experience</em>. My lecture was approximately six weeks into the course, and the students had already developed a few simple Android applications. My task was to convince them that HTML5 and Web Development is a viable alternative to native application development, for most use cases.</p>\n<p><em>(I appreciate the irony of sharing these slides using the flash plugin)</em></p>\n<p><object id=\"__sse7160947\" width=\"510\" height=\"426\"><param name=\"movie\" value=\"http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=presentation-110305125324-phpapp02&#038;stripped_title=html5-vs-native-applications&#038;userName=zachleat\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowScriptAccess\" value=\"always\"><embed name=\"__sse7160947\" src=\"http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=presentation-110305125324-phpapp02&#038;stripped_title=html5-vs-native-applications&#038;userName=zachleat\" type=\"application/x-shockwave-flash\" allowscriptaccess=\"always\" allowfullscreen=\"true\" width=\"510\" height=\"426\"></object></p>\n<ul>\n<li><a href=\"http://www.slideshare.net/zachleat/html5-vs-native-applications/download\">Download the original PDF (exported from Keynote)</a></li>\n<li><a href=\"http://www.zachleat.com/mobile/uno/Laundry-Timer/\">Download the source code</a></li>\n</ul>\n<p>If there’s demand, I do have a video of the talk. Let me know and I can do a bit more work to package the video and upload it.</p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"0ef434dccce5101650d54799d790cf5e","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921763},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Shop Talk Show #390: Eleventy with Zach Leatherman","link":"http://www.zachleat.com/web/eleventy-shoptalkshow/","description":"\n\t\t\t<p><a href=\"https://shoptalkshow.com/episodes/390/\">Listen to the Interview on Shop Talk Show</a> (1:02:19) <span class=\"tag audio\">Audio</span></p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"c4fc83007f737669f79aca67b15cb23f","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921772},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"A Web Developer Fumbling with Social Media","link":"http://www.zachleat.com/web/fumbling-with-social-media/","description":"<p>As a curious web developer that’s moderately obsessed with statistics, I decided to go back and look at my history of side projects, blog posts, and other junk I’ve posted on twitter to see what has had the biggest impact on my ‘social reach.’ Yeah, I know. It felt wrong typing ‘social reach’—I’ll put a dollar in the jar. I’ll probably owe a few of those before this post is done.</p> \n<p>It’s a common sentiment that as developers we should focus on <em>making cool stuff</em> and the rest will solve itself. While that has been my general plan for my career and side projects, in hindsight I don’t believe that to be the complete truth. I think developers should spend time on self marketing—larger professional networks (not just social networks) lead to more opportunities.</p> \n<p>So as a blind squirrel, I come to you with the nuts I’ve found: <strong>seven events that have bumped my network size and what I’ve learned from studying them</strong>. Note that Facebook is not mentioned here. I don’t use Facebook for career development.</p> \n<h2 id=\"share-and-be-shared\">Share and Be Shared <a class=\"direct-link\" href=\"http://www.zachleat.com/web/fumbling-with-social-media/#share-and-be-shared\">#</a></h2> \n<p>Out of those seven events, three were the direct result of Mr. Paul Irish. While I have no idea what I did to get in Paul’s good graces—I appreciate his concerted effort to share <a href=\"http://paulirish.com/2011/web-browser-frontend-and-standards-feeds-to-follow/\">RSS feeds</a> (Event 1), <a href=\"http://paulirish.com/2012/developers-we-admire/\">people to follow on Twitter</a> (Event 2), and <a href=\"https://plus.google.com/113127438179392830442/posts/T2VqiobsvLF\">Google circles</a> (Event 3). Paul increases the number of people consuming web development content which leads to more well informed developers. <em>A rising tide lifts all boats.</em> This is something we can all do. Look for some similar posts from me soon.</p> \n<h2 id=\"silos-are-lonely\">Silos are Lonely <a class=\"direct-link\" href=\"http://www.zachleat.com/web/fumbling-with-social-media/#silos-are-lonely\">#</a></h2> \n<p>Trailblazing can lead to isolation. Solve problems collaboratively or competitively—don’t solve your own problems alone.</p> \n<p>After <a href=\"http://www.zachleat.com/web/bigtext-makes-text-big/\">BigText</a> came out, I was getting <code>2</code> RSS subscribers per day. Four months later when Paravel released <a href=\"http://fittextjs.com/\">FitText</a> (Event #4) and linked to BigText that number jumped to <code>6</code>. Even though the two plugins were competitors, we were both trying to solve a similar problem and our growth became intertwined.</p> \n<h2 id=\"concentrate-on-the-right-network\">Concentrate on the Right Network <a class=\"direct-link\" href=\"http://www.zachleat.com/web/fumbling-with-social-media/#concentrate-on-the-right-network\">#</a></h2> \n<p>It’s a lot easier to get an RSS subscriber or get circled on Google than it is to get someone to follow you on Twitter. It would seem that Twitter users curate their Twitter friends very closely since it’s one big unconfigurable stream (don’t get me started about how useless lists are). RSS and Google both let you self-organize your incoming posts in such a way that makes it easier to ignore content without unsubscribing.</p> \n<p>If I had to choose, I’d take a Twitter follower over an RSS feed subscriber over a Google follower. But it ain’t a zero sum game.</p> \n<ul> \n <li>Average RSS feed subscribers per day (2.4 years): 4.1</li> \n <li>Average Google followers per day (1.1 years): 2.03</li> \n <li>Average Twitter followers per day (4.3 years): 1.09</li> \n</ul> \n<h2 id=\"name-drop-yourself\">Name-drop Yourself <a class=\"direct-link\" href=\"http://www.zachleat.com/web/fumbling-with-social-media/#name-drop-yourself\">#</a></h2> \n<p>Plaster your name on everything you do. Link to your Twitter account and RSS feeds.</p> \n<p>I’ve screwed the pooch on this quite often—most notably on <a href=\"https://github.com/filamentgroup/SocialCount\">SocialCount</a> and BigText especially. I’ve had people say to me: “Oh—SocialCount? You built that?” Obviously not ideal. Personally, I felt that both of those plugins were higher quality than <a href=\"http://zachleat.com/parseintimate/\">parseIntimate</a> (Event #5), but parseIntimate had my twitter handle right on the front which bumped my followers more than SocialCount or BigText (prior to FitText).</p> \n<h2 id=\"align-career-with-community\">Align Career with Community <a class=\"direct-link\" href=\"http://www.zachleat.com/web/fumbling-with-social-media/#align-career-with-community\">#</a></h2> \n<p>Despite my ghost town of a profile on Google , my circled count jumped when I joined Filament Group (Event #6). Of course, working for a company that is so heavily invested in the community and open source is great.</p> \n<h2 id=\"give-talks-and-encouragement\">Give Talks and Encouragement <a class=\"direct-link\" href=\"http://www.zachleat.com/web/fumbling-with-social-media/#give-talks-and-encouragement\">#</a></h2> \n<p>For the <a href=\"http://f2em.com/\">Front End Engineering Manifesto</a> (Event #7) I followed my own advice and put my twitter handle on both the top and bottom of the presentation and added SocialCount widgets for easy sharing. However, F2EM almost didn’t see the light of day.</p> \n<ol> \n <li>If <a href=\"https://twitter.com/rversaw\">Ryan Versaw</a> hadn’t personally encouraged me to present a topic at Nebraska Code Camp, I wouldn’t have created the presentation.</li> \n <li>After giving the talk I sat on the content because I felt it was a little too preachy and dogmatic and was nervous about publicizing it. About 17 months later, <a href=\"https://twitter.com/toddmparker\">Todd Parker</a> stumbled onto it and encouraged me to release it.</li> \n</ol> \n<p>Sometimes you just need a little push and I was lucky to get it from those guys. And at the end I’m very glad I posted it—F2EM was one of my most successful projects.</p> \n<p>While I haven’t dipped my toe into the professional speaking circuit, I should thank <a href=\"https://twitter.com/reybango\">Rey Bango</a> for encouraging me to submit a talk to the jQuery Conference awhile back. I’ll dive in some day Rey!</p> \n<p>I’ll keep my eyes open for someone that I can give a little push to and I encourage you to do the same. If you need my help or advice, I’d be glad to do what I can to help. Hit me up on <a href=\"https://twitter.com/zachleat\">Twitter</a> or on <a href=\"https://twitter.com/zachleat\">Google Plus</a>.</p> \n<p><a href=\"https://docs.google.com/spreadsheet/pub?key=0Alz1CG9ZSGbWdDZtUml2TmhWYXhGeFhUMU1CMmgyRGc&amp;single=true&amp;gid=5&amp;output=html\"><img src=\"https://www.zachleat.com/web/img/posts/fumbling-social-media/graph.png\" alt=\"Graph depicting history of RSS Subscribers, Twitter Followers, and Google+ Circles\" /></a></p> \n<p><em><a href=\"https://docs.google.com/spreadsheet/pub?key=0Alz1CG9ZSGbWdDZtUml2TmhWYXhGeFhUMU1CMmgyRGc&amp;single=true&amp;gid=5&amp;output=html\">Full data available on Google Spreadsheets</a>. RSS subscriber data provided by <a href=\"http://feedburner.google.com/\">Feedburner</a> (even though my first post was in 2007, I switched from naked RSS in 2010). Twitter data was provided by <a href=\"http://twittercounter.com/\">TwitterCounter</a> and Google data by <a href=\"http://socialstatistics.com/\">Social Statistics</a>.</em></p>","descriptionType":"html","feedId":12519,"bgimg":"https://www.zachleat.com/web/img/posts/fumbling-social-media/graph.png","linkMd5":"d7a0924ecf14efcbd84206a1a64c6f83","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn13@2020_4/2020/08/25/02-02-02-558_80683290d178786e.webp","destWidth":558,"destHeight":299,"sourceBytes":22087,"destBytes":11566,"author":"","articleImgCdnMap":{"https://www.zachleat.com/web/img/posts/fumbling-social-media/graph.png":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn13@2020_4/2020/08/25/02-02-02-558_80683290d178786e.webp"},"publishedOrCreatedDate":1598320921764},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"NEJS CONF 2016 Recap","link":"http://www.zachleat.com/web/nejsconf/2016/","description":"\n\t\t\t\t<p><em>This content lives somewhere else. It was originally posted at: <a href=\"https://nebraskajs.com/2016/nejsconf-2016/\">https://nebraskajs.com/2016/nejsconf-2016/</a></em></p>\n\t\t\t\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"8bfb4bcd8f5e574142a19c205608f544","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921767},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Double Whammy: OpenID and Microformats","link":"http://www.zachleat.com/web/double-whammy-openid-and-microformats/","description":"<h2 id=\"microformategery\">Microformategery <a class=\"direct-link\" href=\"http://www.zachleat.com/web/double-whammy-openid-and-microformats/#microformategery\">#</a></h2> \n<p><a href=\"http://www.ownyouridentity.com/2008/04/30/get-satisfactions-nice-import-profile-feature/\">Own your Identity had a great post today</a> detailing a great feature on the signup form of the <a href=\"http://getsatisfaction.com/people/new\">Get Satisfaction</a> site.</p> \n<p>They rely on the fact that sites like Twitter and Flickr publish an <a href=\"http://microformats.org/wiki/hcard\">hCard microformat</a> for all of their users publicly on their website. If you go to <a href=\"http://twitter.com/zachleat/\">my twitter page</a> and view the source, you’ll find the following code available to anyone (without authentication):</p> \n<pre><code>&lt;address&gt;\n   &lt;ul class=\"about vcard entry-author\"&gt;\n      &lt;li&gt;&lt;span class=\"label\"&gt;Name&lt;/span&gt; &lt;span class=\"fn\"&gt;Zach Leatherman&lt;/span&gt;&lt;/li&gt;\n      &lt;li&gt;&lt;span class=\"label\"&gt;Location&lt;/span&gt; &lt;span class=\"adr\"&gt;Omaha, NE USA&lt;/span&gt;&lt;/li&gt;\n      &lt;li&gt;&lt;span class=\"label\"&gt;Web&lt;/span&gt; &lt;a href=\"http://www.zachleat.com/\" class=\"url\" rel=\"me\"&gt;http://www.zachle...&lt;/a&gt;&lt;/li&gt;\n      &lt;li id=\"bio\"&gt;&lt;span class=\"label\"&gt;Bio&lt;/span&gt; &lt;span class=\"bio\"&gt;UI Programmer, JavaScript Enthusiast, Soccer Hooligan&lt;/span&gt;&lt;/li&gt;\n   &lt;/ul&gt;\n&lt;/address&gt;\n</code></pre> \n<p>The premise here is that hCard tells you how to parse this markup to get usable information. The <code>adr</code> CSS class tells you what my address is. The <code>fn</code> CSS class tells you what my name is, and so on. So, Get Satisfaction goes and spiders this page behind the scenes and autopopulates your profile with what it can find. Pretty sweet.</p> \n<p>Now, they don’t limit you to the services they provide, which are: Flickr, Technorati, Twitter, Upcoming, and <a href=\"http://last.fm/\">last.fm</a>. They provide an Other category for any hCard enabled URL (your personal homepage or perhaps an <a href=\"http://microformats.org/wiki/hresume\">hResume</a> you have posted on the web).</p> \n<h2 id=\"integrate-with-openid\">Integrate with OpenID <a class=\"direct-link\" href=\"http://www.zachleat.com/web/double-whammy-openid-and-microformats/#integrate-with-openid\">#</a></h2> \n<p>However, why not take it to the next level? Why not integrate this microformat functionality WITH an openid login system? You’d be able to kill two birds (not a twitter joke) with one stone in some cases, since both Twitter and Technorati are also OpenID producers (re-echo: We need more consumers).</p> \n<p>So, not only do you get the benefits of having OpenID authentication on your website, but you’d be able to prepopulate a certain amount of profile data with an hCard parser. And the best part is, if you already have a <a href=\"http://remysharp.com/2008/04/24/stop-using-openid-why-how/\">nice clean user interface</a> set up to handle different OpenID producers, there wouldn’t be any additional clutter on the interface to get this benefit. It’d be transparent to the user when it works, and fall back to a normal empty profile form when it doesn’t.</p> \n<p>What I’d like to see, is more sites that are OpenID producers, also serve hCard microformats as well. If we can get all the major producers on board, we’d have a nice tidy little system going.</p>","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"d85ada4dcb038acd93760f585ed1ca04","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921762},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Impostor Syndrome","link":"http://www.zachleat.com/web/impostor/","description":"\n\t\t\t<p>Related: <strong><a href=\"https://www.zachleat.com/web/pastrybox-impostor-syndrome/\"><em>Impostor Syndrome</em> was transcribed into a subsequent Pastry Box guest post</a>.</strong></p>\n<p>Ever since I attended my first <a href=\"http://barcampomaha.org/\">Barcamp Omaha</a> unconference last year, I wanted to give a talk. For this year, I had planned on recycling <a href=\"https://speakerdeck.com/zachleat/side-projects\">the talk I gave at Awesome Camp earlier this year</a> but I was inspired to speak on a different topic.</p>\n<p><em>Side note: Major props to <a href=\"http://grainandmortar.com/\">Grain &amp; Mortar</a> for the <a href=\"http://barcampomaha.org/\">Barcamp Omaha site</a>. Ridiculously good. Seems like <a href=\"https://twitter.com/RWD/status/376086131018067968\">@RWD liked it too</a>.</em></p>\n<p>Running <a href=\"http://nebraskajs.com/\">NebraskaJS</a> has been an interesting experience for me. NebraskaJS has always made an effort to <a href=\"http://nebraskajs.com/2013/call-for-new-speakers/\">encourage new speakers to give lightning talks</a> (and in that vein <a href=\"http://www.meetup.com/nebraskajs/events/118573952/\">our next session</a> will attempt to be only lightning talks from new speakers).</p>\n<p>I’ve noticed a common thread among people jumping into the deep end of speaking at our meetup. They’d often start their talks with “I’m not the most qualified person to speak on this topic,” or “I’m sure you guys are all smarter than me.”</p>\n<p>In response, I decided to give a talk about Impostor Syndrome. This talk is non-technical and short (only 7:01). Watch it below.</p>\n<ul>\n<li><a href=\"http://www.youtube.com/watch?v=F_aCFKA6C6Q\">Watch on YouTube</a></li>\n<li><a href=\"https://speakerdeck.com/zachleat/impostor-syndrome\">Slides on SpeakerDeck</a></li>\n</ul>\n<div class=\"fluid-width-video-wrapper\"><iframe src=\"https://www.youtube.com/embed/F_aCFKA6C6Q\" frameborder=\"0\" allowfullscreen=\"\"></iframe></div>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"0cf7a879e805cc2856d416a997eb2fca","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921764},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Making a Simple Web Site with the Simplest Static Site Generator, Level 2—Adding Filters","link":"http://www.zachleat.com/web/eleventy-tutorial-level-2/","description":"\n\t\t\t\n\n<p><em>Introducing </em><a href=\"https://github.com/11ty/eleventy/\" rel=\"nofollow noopener\"><em>Eleventy</em></a><em>, the simplest and most intuitive static site generator. With Eleventy, you can build data-driven sites quickly and easily — focused on long lasting content that’s easy to maintain. </em><strong><em>Make your website last 10 years, not 10 months.</em></strong></p>\n<ul>\n  <li><a href=\"https://www.zachleat.com/web/eleventy-tutorial-level-1/\">Level 1—Data driven templates</a></li>\n  <li>Level 2—Adding filters (You are here)</li>\n</ul>\n\n\n<hr>\n\n<p name=\"adaf\" id=\"adaf\" class=\"graf graf--p graf-after--p\">This is Part 2 in a continuing series describing the basics of the Eleventy static site generator. Read part one of the series: <a href=\"https://www.zachleat.com/web/eleventy-tutorial-level-1/\" class=\"markup--anchor markup--p-anchor\">Making a Simple Web Site with the Simplest Static Site Generator, Level 1</a>.</p>\n<p name=\"27fa\" id=\"27fa\" class=\"graf graf--p graf-after--p\">Last time on the show, we made a very simple template that looped over a few image files and displayed links to each. We’re making a web site for our GIF collection and we’re calling it Giffleball.</p>\n<p name=\"e3fc\" id=\"e3fc\" class=\"graf graf--p graf-after--p\">Full finished source code for Level 2 of this tutorial is <a href=\"https://github.com/11ty/giffleball/tree/level-2\" data-href=\"https://github.com/11ty/giffleball/tree/level-2\" class=\"markup--anchor markup--p-anchor\" rel=\"noopener\" target=\"_blank\">available on GitHub</a>.</p>\n<h3 name=\"9e45\" id=\"9e45\" class=\"graf graf--h3 graf-after--p\">Let’s add a filter</h3>\n<p name=\"8509\" id=\"8509\" class=\"graf graf--p graf-after--h3\">Let’s do something fancy. Let’s display the file size of each of the GIFs next to their link. To do this, we can make a filter. Filters are added inside of the config file, so let’s make one—an <code class=\"markup--code markup--p-code\">.eleventy.js</code> file. It should look like this:</p>\n\n<pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">eleventyConfig</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n\n<p name=\"04fd\" id=\"04fd\" class=\"graf graf--p graf-after--pre\">You don’t have to use <code class=\"markup--code markup--p-code\">.eleventy.js</code> but every time you run <code class=\"markup--code markup--p-code\">eleventy</code> you’ll have to pass in the config file name with <code class=\"markup--code markup--p-code\">--config=myConfig.js</code>. So, it’s easier to use the default.</p>\n<p name=\"1550\" id=\"1550\" class=\"graf graf--p graf-after--p\">Let’s add our filter with the <code class=\"markup--code markup--p-code\">.addFilter</code> method. We’ll call it <code class=\"markup--code markup--p-code\">filesize</code> and it will just return some dummy text.</p>\n\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"highlight-line\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">eleventyConfig</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><br><ins class=\"highlight-line highlight-line-add\"> eleventyConfig<span class=\"token punctuation\">.</span><span class=\"token function\">addFilter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"filesize\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">path</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></ins><br><ins class=\"highlight-line highlight-line-add\">  <span class=\"token keyword\">return</span> <span class=\"token string\">\"0 KB\"</span><span class=\"token punctuation\">;</span></ins><br><ins class=\"highlight-line highlight-line-add\"> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></ins><br><span class=\"highlight-line\"><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></code></pre>\n\n<p name=\"379e\" id=\"379e\" class=\"graf graf--p graf-after--pre\">Obviously this isn’t correct because we’re just returning <code class=\"markup--code markup--p-code\">&quot;0 KB&quot;</code> every time. But let’s get it working first.</p>\n<p name=\"2ada\" id=\"2ada\" class=\"graf graf--p graf-after--p\">Open up our <code class=\"markup--code markup--p-code\">index.html</code> template and look for our list loop. Here’s what it looked like when we finished last time:</p>\n\n<pre class=\"language-text\"><code class=\"language-text\">&lt;ul&gt;<br>{% for filename in images %}<br> &lt;li&gt;&lt;a href=&quot;img/{{ filename | url_encode }}&quot;&gt;{{ filename }}&lt;/a&gt;&lt;/li&gt;<br>{% endfor %}<br>&lt;/ul&gt;</code></pre>\n\n<p name=\"0618\" id=\"0618\" class=\"graf graf--p graf-after--pre\">Notice how we’re using a built-in filter <code class=\"markup--code markup--p-code\">url_encode</code> provided by the Liquid templating engine. Yeah, we made our own though, so let’s add some stuff to call the filter we made, like this:</p>\n\n<pre class=\"language-text\"><code class=\"language-text\"><span class=\"highlight-line\">&lt;ul&gt;</span><br><span class=\"highlight-line\">{% for filename in images %}</span><br><ins class=\"highlight-line highlight-line-add\"> {% capture path %}img/{{ filename }}{% endcapture %}</ins><br><ins class=\"highlight-line highlight-line-add\"> &lt;li&gt;&lt;a href=&quot;img/{{ filename | url_encode }}&quot;&gt;{{ filename }}&lt;/a&gt; {{ path | filesize }}&lt;/li&gt;</ins><br><span class=\"highlight-line\"> {% endfor %}</span><br><span class=\"highlight-line\">&lt;/ul&gt;</span></code></pre>\n\n<p name=\"9563\" id=\"9563\" class=\"graf graf--p graf-after--pre\">The magic part is <code class=\"markup--code markup--p-code\">{{ path | filesize }}</code>, of course. But also note that we’re using the <code class=\"markup--code markup--p-code\">{% capture %}</code> Liquid tag to create a new <code class=\"markup--code markup--p-code\">path</code> variable in Liquid that gets passed into our filter.</p>\n<p name=\"44fc\" id=\"44fc\" class=\"graf graf--p graf-after--p\">Now, run <code class=\"markup--code markup--p-code\">eleventy</code> to generate the templates.</p>\n\n<pre class=\"language-text\"><code class=\"language-text\">~/giffleball $ eleventy --formats=html,gif,jpg<br>Writing _site/index.html from ./index.html.<br>Wrote 1 file in 0.07 seconds</code></pre>\n\n<p name=\"d8ae\" id=\"d8ae\" class=\"graf graf--p graf-after--pre\">This outputs the following markup to <code class=\"markup--code markup--p-code\">_site/index.html</code> (we’re only showing the list output here and not the full HTML output for brevity):</p>\n\n<pre class=\"language-text\"><code class=\"language-text\">&lt;ul&gt;<br>  &lt;li&gt;&lt;a href=&quot;img/%3F%3F%3F.jpg&quot;&gt;???.jpg&lt;/a&gt; 0 KB&lt;/li&gt;<br>  &lt;li&gt;&lt;a href=&quot;img/%E2%80%A6.jpg&quot;&gt;….jpg&lt;/a&gt; 0 KB&lt;/li&gt;<br>  &lt;li&gt;&lt;a href=&quot;img/parrot.gif&quot;&gt;parrot.gif&lt;/a&gt; 0 KB&lt;/li&gt;<br>&lt;/ul&gt;</code></pre>\n\n<p name=\"fabc\" id=\"fabc\" class=\"graf graf--p graf-after--pre\">Okay, that’s close—but why does it have extra whitespace? <em class=\"markup--em markup--p-em\">(Take special care to note that this is a rhetorical question and if you keep reading I will provide you with the answer.)</em> When Liquid processes templates, it doesn’t remove line breaks and spacing around Liquid tags. Luckily, it does provide tools to control whitespace! Instead of<code class=\"markup--code markup--p-code\">{%</code>, use <code class=\"markup--code markup--p-code\">{%-</code> to remove the whitespace before the Liquid tag. And independently, instead of <code class=\"markup--code markup--p-code\">%}</code> you can also use <code class=\"markup--code markup--p-code\">-%}</code> at the end to remove whitespace after the Liquid tag. One or the other. Both. Personally, I think it looks the best with just <code class=\"markup--code markup--p-code\">{%-</code> at the beginning. A clean View Source is important to me, so let’s clean it up:</p>\n\n<pre class=\"language-text\"><code class=\"language-text\"><span class=\"highlight-line\">&lt;ul&gt;</span><br><ins class=\"highlight-line highlight-line-add\"> {%- for filename in images %}</ins><br><ins class=\"highlight-line highlight-line-add\"> {%- capture path %}img/{{ filename }}{% endcapture %}</ins><br><ins class=\"highlight-line highlight-line-add\"> &lt;li&gt;&lt;a href=&quot;img/{{ filename | url_encode }}&quot;&gt;{{ filename }}&lt;/a&gt; {{ path | filesize }}&lt;/li&gt;</ins><br><span class=\"highlight-line\"> {%- endfor %}</span><br><span class=\"highlight-line\"> &lt;/ul&gt;</span></code></pre>\n\n<p name=\"8a6d\" id=\"8a6d\" class=\"graf graf--p graf-after--pre\">This outputs:</p>\n\n<pre class=\"language-text\"><code class=\"language-text\">&lt;ul&gt;<br> &lt;li&gt;&lt;a href=&quot;img/%3F%3F%3F.jpg&quot;&gt;???.jpg&lt;/a&gt; 0 KB&lt;/li&gt;<br> &lt;li&gt;&lt;a href=&quot;img/%E2%80%A6.jpg&quot;&gt;….jpg&lt;/a&gt; 0 KB&lt;/li&gt;<br> &lt;li&gt;&lt;a href=&quot;img/parrot.gif&quot;&gt;parrot.gif&lt;/a&gt; 0 KB&lt;/li&gt;<br>&lt;/ul&gt;</code></pre>\n\n<p name=\"13c9\" id=\"13c9\" class=\"graf graf--p graf-after--pre\">Beautiful.</p>\n<h3 name=\"255e\" id=\"255e\" class=\"graf graf--h3 graf-after--p\">Don’t celebrate yet, our filter doesn’t work</h3>\n<p name=\"3fb3\" id=\"3fb3\" class=\"graf graf--p graf-after--h3\">Okay, let’s make our filter actually work instead of just returning <code class=\"markup--code markup--p-code\">&quot;0 KB&quot;</code> all the time. Change our <code class=\"markup--code markup--p-code\">.eleventy.js</code> file to this:</p>\n\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"highlight-line\"><span class=\"token keyword\">const</span> fs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fs\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><br><span class=\"highlight-line\"></span><br><span class=\"highlight-line\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">eleventyConfig</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><br><span class=\"highlight-line\"> eleventyConfig<span class=\"token punctuation\">.</span><span class=\"token function\">addFilter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"filesize\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">path</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><br><ins class=\"highlight-line highlight-line-add\">  <span class=\"token keyword\">let</span> stat <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">statSync</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></ins><br><ins class=\"highlight-line highlight-line-add\">  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> stat <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></ins><br><ins class=\"highlight-line highlight-line-add\">   <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>stat<span class=\"token punctuation\">.</span>size<span class=\"token operator\">/</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toFixed</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" KB\"</span><span class=\"token punctuation\">;</span></ins><br><ins class=\"highlight-line highlight-line-add\">  <span class=\"token punctuation\">}</span></ins><br><ins class=\"highlight-line highlight-line-add\">  <span class=\"token keyword\">return</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span></ins><br><span class=\"highlight-line\"> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><br><span class=\"highlight-line\"><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></code></pre>\n\n<p name=\"f5a0\" id=\"f5a0\" class=\"graf graf--p graf-after--pre\">This is the simplest thing that can work, it does not require any other dependencies with <code class=\"markup--code markup--p-code\">npm install</code>.</p>\n<h3 name=\"02fd\" id=\"02fd\" class=\"graf graf--h3 graf-after--p\">Go further with NPM</h3>\n<p name=\"a87d\" id=\"a87d\" class=\"graf graf--p graf-after--h3\">One of the best benefits of Eleventy over Static Site Generators like Jekyll or Hugo is access to the NPM ecosystem. So many great modules. So if you’re brave enough to do some <code class=\"markup--code markup--p-code\">npm</code> magic, run this to create a <code class=\"markup--code markup--p-code\">package.json</code> for our project:</p>\n\n<pre class=\"language-text\"><code class=\"language-text\">~/giffleball $ npm init -f</code></pre>\n\n<p name=\"c640\" id=\"c640\" class=\"graf graf--p graf-after--pre\">Now we can start installing cool modules to our project, like <a href=\"https://www.npmjs.com/package/file-size\" data-href=\"https://www.npmjs.com/package/file-size\" class=\"markup--anchor markup--p-anchor\" rel=\"noopener\" target=\"_blank\">file-size for better readable file sizes</a>.</p>\n\n<pre class=\"language-text\"><code class=\"language-text\">~/giffleball $ npm install --save file-size<br>+ file-size@1.0.0<br>added 1 package in 1.491s</code></pre>\n\n<p name=\"d635\" id=\"d635\" class=\"graf graf--p graf-after--pre\">Let’s use it in our <code class=\"markup--code markup--p-code\">.eleventy.js</code> filter code:</p>\n\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"highlight-line\"><span class=\"token keyword\">const</span> fs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fs\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><br><ins class=\"highlight-line highlight-line-add\"><span class=\"token keyword\">const</span> filesize <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"file-size\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></ins><br><span class=\"highlight-line\"></span><br><span class=\"highlight-line\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">eleventyConfig</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><br><span class=\"highlight-line\"> eleventyConfig<span class=\"token punctuation\">.</span><span class=\"token function\">addFilter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"filesize\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">path</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><br><span class=\"highlight-line\">  <span class=\"token keyword\">let</span> stat <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">statSync</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><br><span class=\"highlight-line\">  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> stat <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><br><ins class=\"highlight-line highlight-line-add\">   <span class=\"token keyword\">return</span> <span class=\"token function\">filesize</span><span class=\"token punctuation\">(</span>stat<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">human</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></ins><br><span class=\"highlight-line\">  <span class=\"token punctuation\">}</span></span><br><span class=\"highlight-line\">  <span class=\"token keyword\">return</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span></span><br><span class=\"highlight-line\"> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><br><span class=\"highlight-line\"><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></code></pre>\n\n<p name=\"9761\" id=\"9761\" class=\"graf graf--p graf-after--pre\">Outputs:</p>\n\n<pre class=\"language-text\"><code class=\"language-text\">&lt;ul&gt;<br>  &lt;li&gt;&lt;a href=&quot;img/%3F%3F%3F.jpg&quot;&gt;???.jpg&lt;/a&gt; 44.52 KiB&lt;/li&gt;<br>  &lt;li&gt;&lt;a href=&quot;img/%E2%80%A6.jpg&quot;&gt;&hellip;.jpg&lt;/a&gt; 55.39 KiB&lt;/li&gt;<br>  &lt;li&gt;&lt;a href=&quot;img/parrot.gif&quot;&gt;parrot.gif&lt;/a&gt; 2.05 KiB&lt;/li&gt;<br>&lt;/ul&gt;</code></pre>\n\n<p name=\"9250\" id=\"9250\" class=\"graf graf--p graf-after--pre\">Congratulations! You added a filter that tapped into the vast and wide NPM ecosystem.</p>\n<h3 name=\"fae5\" id=\"fae5\" class=\"graf graf--h3 graf-after--p\">Wrapping Up</h3>\n<p name=\"67c8\" id=\"67c8\" class=\"graf graf--p graf-after--h3\">I hope you see the great power in using filters in our templates. They can transform simple content with the great power of the NPM ecosystem. I know I said Level 2 would be Layouts, but we’ll make it to Layouts and multiple templates in Level 3.</p>\n\n<h2>Eleventy Tutorials</h2>\n<ul>\n  <li><a href=\"https://www.zachleat.com/web/eleventy-tutorial-level-1/\">Level 1—Data driven templates</a></li>\n  <li>Level 2—Adding filters (You are here)</li>\n</ul>\n\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"6fb427aabe8bb5d52a6d51c4a7edaca5","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921770},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Conservative Design: Hierarchical Select","link":"http://www.zachleat.com/web/conservative-design-hierarchical-select-boxes/","description":"\n\t\t\t<p>This is a post in a series entitled <a href=\"http://www.zachleat.com/web/2007/02/22/conservative-design-patterns-for-form-elements/\">Conservative Design Patterns for Form Elements</a>.</p>\n<p>For now, I’ll start off with an easy web component that a lot of you have probably already had some experience with. But, strangely enough, it is not included in any of the JavaScript libraries that are out there, that I’ve seen. If you know of one, go ahead and post it in the comments.</p>\n<p><strong>Hierarchical Select Boxes</strong> (sometimes called Dynamic Select Boxes if you’re doing a web search)</p>\n<p>Behavior: 2 or more select boxes working in parallel, where selection of an option in a parent dynamically adjusts the options of the child.</p>\n<p>Screenshot (Prior to any selection):<br>\n<img src=\"https://www.zachleat.com/web/wp-content/uploads/2007/02/hierselects1.jpg\" alt=\"Prior to any selection\"></p>\n<p>Screenshot (After an option is chosen in the first select box):<br>\n<img src=\"https://www.zachleat.com/web/wp-content/uploads/2007/02/hierselects2.jpg\" alt=\"After a selection is made\"></p>\n<p>Minimum Requirements for Acceptable Feature Set:</p>\n<ul>\n<li>Must be able to handle any (reasonable) number of select boxes in a linear structure: parent elements only have one child.</li>\n<li>Child select elements can be optional depending on parent selection. Maybe a continent doesn’t have any countries, so don’t display a child select element. It would be nice to have a visual indicator showing whether or not a parent option had children (triangle, folder(?), arrow or other customizable icon).</li>\n<li>Must have functionality that allows it to be reset with the form reset button, as <a href=\"http://www.mattkruse.com/javascript/dynamicoptionlist/\">Matt Kruse has done (Example 3)</a>.</li>\n<li>Load options in child select’s dynamically from multiple data sources (describe in <a href=\"http://www.bobbyvandersluis.com/articles/unobtrusivedynamicselect.php\">raw HTML code</a>, local JS file, remote JSON object or XML file using an XMLHTTPRequest)</li>\n</ul>\n<p>Luxury Feature Set:</p>\n<ul>\n<li>Must be able to nest select elements in a tree structure: selecting an option in a parent element could modify 2 child select elements.</li>\n<li>Could be able to modify the options for any element that displays options (Select1 or Select as described in the <a href=\"https://www.zachleat.com/web/2007/02/22/conservative-design-patterns-for-form-elements/\">Conservative Design Post</a>: Checkbox Group, Radio Group, Select Single or Multiple)</li>\n</ul>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"https://www.zachleat.com/web/wp-content/uploads/2007/02/hierselects1.jpg","linkMd5":"728758ac2e177d07ea9364302fe1999b","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn49@2020_2/2020/08/25/02-02-03-807_528f34eaba718b07.webp","destWidth":397,"destHeight":191,"sourceBytes":14761,"destBytes":7578,"author":"","articleImgCdnMap":{"https://www.zachleat.com/web/wp-content/uploads/2007/02/hierselects1.jpg":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn49@2020_2/2020/08/25/02-02-03-807_528f34eaba718b07.webp","https://www.zachleat.com/web/wp-content/uploads/2007/02/hierselects2.jpg":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn35@2020_3/2020/08/25/02-02-18-876_e76cf835b469964d.webp"},"publishedOrCreatedDate":1598320921760},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Performance and Responsive Web Design (2013)","link":"http://www.zachleat.com/web/rwd-perf/","description":"<p><strong>Updated: There is a <a href=\"https://www.zachleat.com/web/rwd-perf-3/\">newer version of this presentation available</a>.</strong></p> \n<p>The presentation was originally given to <a href=\"http://nebraskajs.com/2012/performance-in-rwd/\">NebraskaJS</a> in November of 2012. Unfortunately due to my own technical ineptitude with screen recording software I wasn’t able to publish the talk. So when I was asked to present on the topic again at the <a href=\"http://www.meetup.com/Omaha-Mobile-Group/events/104130942/\">Omaha Mobile Group</a>, I thought it would be a good opportunity to update the talk and get a second chance at recording it in front of an audience.</p> \n<h2 id=\"video\">Video <a class=\"direct-link\" href=\"http://www.zachleat.com/web/rwd-perf/#video\">#</a></h2> \n<div class=\"fluid-width-video-wrapper\">\n <iframe width=\"420\" height=\"315\" src=\"https://www.youtube.com/embed/Aw5wEdcUtz4\" frameborder=\"0\" allowfullscreen=\"\"></iframe>\n</div> \n<h2 id=\"view-the-slide-deck-(april-2013)\">View the <a href=\"https://speakerdeck.com/zachleat/performance-and-responsive-web-design\">Slide Deck (April 2013)</a> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/rwd-perf/#view-the-slide-deck-(april-2013)\">#</a></h2> \n<ul> \n <li>Or, <em>view <a href=\"https://speakerdeck.com/nebraskajs/performance-and-responsive-web-design\">the original Slide Deck (November 2012)</a>.</em></li> \n</ul> \n<h2 id=\"content\">Content <a class=\"direct-link\" href=\"http://www.zachleat.com/web/rwd-perf/#content\">#</a></h2> \n<ul> \n <li><code>0:00</code> Title and Personal Background</li> \n <li><code>3:04</code> Responsive Web Design Primer</li> \n <li><code>5:24</code> The Web has Responsive Roots</li> \n <li><code>6:24</code> Alternatives to RWD \n  <ul> \n   <li>Do nothing</li> \n   <li>Create separate mdot site</li> \n  </ul> </li> \n <li><code>14:44</code> <strong>Common RWD Performance Problems</strong> \n  <ul> \n   <li><code>16:03</code> Blocking JavaScript</li> \n   <li><code>18:27</code> Blocking CSS</li> \n   <li><code>30:07</code> Images \n    <ul> \n     <li><code>31:11</code> Manipulating Images with CSS</li> \n     <li><code>36:47</code> Responsive Images (in HTML)</li> \n    </ul> </li> \n  </ul> </li> \n <li>RWD Buzzkills \n  <ul> \n   <li><code>45:40</code> Advertising</li> \n   <li><code>46:47</code> Social Networking Widgets</li> \n  </ul> </li> \n <li><code>50:23</code> RWD Showcase Showdown</li> \n <li><code>54:21</code> Conclusion</li> \n <li><strong>Questions</strong> <em>(Some really great discussion here)</em> \n  <ul> \n   <li><code>56:19</code> How do Data URIs impact the critical path?</li> \n   <li><code>57:43</code> The difference between Responsive and Adaptive?</li> \n   <li><code>58:18</code> Do you have to start from scratch with RWD?</li> \n   <li><code>59:39</code> How would Jimmy Wales and Wikipedia implement RWD?</li> \n  </ul> </li> \n</ul> \n<p><em>(Side note: I wish there was an equivalent to <a href=\"https://github.com/davatron5000/TimeJump\">TimeJump</a> for YouTube embeds)</em></p> \n<h2 id=\"reactions%2C-reviews\">Reactions, Reviews <a class=\"direct-link\" href=\"http://www.zachleat.com/web/rwd-perf/#reactions%2C-reviews\">#</a></h2> \n<blockquote class=\"twitter-tweet\">\n <p>Performance &amp; Responsive Web Design <a href=\"https://t.co/EjZJugzu\" title=\"https://speakerdeck.com/nebraskajs/performance-and-responsive-web-design\">speakerdeck.com/nebraskajs/per…</a> great presentation from @<a href=\"https://twitter.com/zachleat\">zachleat</a></p>— Brad Frost (@brad_frost) \n <a href=\"https://twitter.com/brad_frost/status/269949833190715392\">November 17, 2012</a>\n</blockquote> \n<blockquote class=\"twitter-tweet\">\n <p>People of Omaha! You _want_ to hear @<a href=\"https://twitter.com/zachleat\">zachleat</a> talk about responsive design and performance. Trust me. <a href=\"http://t.co/gOphoOZ696\" title=\"http://www.meetup.com/Omaha-Mobile-Group/events/104130942/\">meetup.com/Omaha-Mobile-G…</a></p>— Responsive Design (@RWD) \n <a href=\"https://twitter.com/RWD/status/317747443531911168\">March 29, 2013</a>\n</blockquote> \n<blockquote class=\"twitter-tweet\">\n <p>The best RWD deck I've seen in a long time. The optimization section is a must read - <a href=\"https://t.co/NK1i0gpd6Z\" title=\"https://speakerdeck.com/nebraskajs/performance-and-responsive-web-design\">speakerdeck.com/nebraskajs/per…</a> by @<a href=\"https://twitter.com/nebraskajs\">nebraskajs</a></p>— Eric Snowden (@ericsnowden) \n <a href=\"https://twitter.com/ericsnowden/status/309389156902113280\">March 6, 2013</a>\n</blockquote>","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"39919464758e70c3d7f5a7cb67eb74a4","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921764},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"The Font Loading Checklist","link":"http://www.zachleat.com/web/font-checklist/","description":"<style> .post-checklist { transform: scale(2.5) translate(2px, -1.5px); margin-right: 1.5em; } </style> \n<p>When I look back at the last four years that I’ve spent learning everything I could about web fonts and how web fonts load, I can distill it all down to a small checklist of ideals that I continue to chase. Our goal as web developers is to maximize the experience and raise user expectations to the level of what the web is capable of delivering, but also to manage our performance budgets to ensure that we are fulfilling the promise of the web—it’s ubiquity. This checklist should help you deliver on those two often competing ideals.</p> \n<h2 id=\"the-font-loading-checklist\">The Font Loading Checklist <a class=\"direct-link\" href=\"http://www.zachleat.com/web/font-checklist/#the-font-loading-checklist\">#</a></h2> \n<h3 id=\"%F0%9F%9A%A6-start-important-font-downloads-earlier\"><label><input type=\"checkbox\" class=\"post-checklist\" checked=\"\"> 🚦 Start Important Font Downloads Earlier</input></label> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/font-checklist/#%F0%9F%9A%A6-start-important-font-downloads-earlier\">#</a></h3> \n<p><em>(Start a Web Font load)</em></p> \n<p>Web fonts don’t start downloading until they’re found to be used in content, so it’s often late in the page load. We need to tell the browser to start downloading our high priority web fonts sooner.</p> \n<ul> \n <li><em>Strategy:</em> Use <a href=\"https://www.zachleat.com/web/comprehensive-webfonts/#preload\"><code>preload</code></a></li> \n</ul> \n<h3 id=\"%F0%9F%8F%8E-prioritize-readable-text\"><label><input type=\"checkbox\" class=\"post-checklist\" checked=\"\"> 🏎 Prioritize Readable Text</input></label> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/font-checklist/#%F0%9F%8F%8E-prioritize-readable-text\">#</a></h3> \n<p><em>(Behavior while a Web Font is loading)</em></p> \n<p>This means absolutely <strong>no invisible text</strong>. This is known as the <a href=\"https://www.zachleat.com/web/webfont-glossary/#foit\">flash of invisible text, or FOIT</a>. We can use <a href=\"https://www.zachleat.com/web/webfont-glossary/#fout\">flash of unstyled text (FOUT)</a> strategies to prioritize system fonts during web font load.</p> \n<ul> \n <li><em>Strategy:</em> Use <a href=\"https://www.zachleat.com/web/comprehensive-webfonts/#font-display\"><code>font-display</code></a></li> \n <li><em>Strategy:</em> Use the <a href=\"https://www.zachleat.com/web/comprehensive-webfonts/#fout-class\">CSS Font Loading API</a></li> \n</ul> \n<h3 id=\"%F0%9F%90%A2%F0%9F%90%87-make-font-files-smaller\"><label><input type=\"checkbox\" class=\"post-checklist\" checked=\"\"> 🐢🐇 Make Font Files Smaller</input></label> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/font-checklist/#%F0%9F%90%A2%F0%9F%90%87-make-font-files-smaller\">#</a></h3> \n<p><em>(Reduce Web Font load time)</em></p> \n<p>Guess what: Smaller file downloads finish sooner.</p> \n<ul> \n <li><em>Strategy:</em> Use <code>WOFF2</code> formats (compression built in)</li> \n <li><em>Strategy:</em> Subset your fonts, if language and licensing requirements allow.</li> \n</ul> \n<p>Check out <a href=\"https://www.zachleat.com/web/glyphhanger/\">Glyphhanger</a> to help with both of these strategies.</p> \n<h3 id=\"%F0%9F%8F%81-reduce-movement-during-page-load\"><label><input type=\"checkbox\" class=\"post-checklist\" checked=\"\"> 🏁 Reduce Movement during Page Load</input></label> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/font-checklist/#%F0%9F%8F%81-reduce-movement-during-page-load\">#</a></h3> \n<p><em>(Behavior after a Web Font has loaded)</em></p> \n<p>Each independent <code>@font-face</code> block has its own loading life-cycle. Its own FOIT, its own FOUT, its own repaint and reflow. When using two or more web fonts for a single family, its important to group the repaints together to reduce reflow of text on your page.</p> \n<ul> \n <li><em>Strategy:</em> Use the <a href=\"https://www.zachleat.com/web/comprehensive-webfonts/#fout-class\">CSS Font Loading API</a> to group your repaints.</li> \n <li><em>Strategy:</em> Use <a href=\"https://medium.com/variable-fonts/https-medium-com-tiro-introducing-opentype-variable-fonts-12ba6cd2369\">Variable fonts</a> (Browser support at <a href=\"https://caniuse.com/#feat=variable-fonts\">Can I Use: Variable Fonts</a>)</li> \n</ul>","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"3a8342323d3f18d6397a4e4510e1d0de","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921771},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Faster YUI DataTable with 5 Lines of Code","link":"http://www.zachleat.com/web/faster-yui-datatable-with-5-lines-of-code/","description":"\n\t\t\t<p>Holy Reflows Batman! The typical usage of a DataTable in the Yahoo User Interface JavaScript library involves passing a string into the constructor signifying the ID attribute of the container you want to attach the DataTable to. However, the YUI DataTable loves the DOM and creating nodes individually using DOM methods. Normally that’d be fine, but one of the first things it does in the constructor is create the table element and attach it to the live DOM. This is a no-no. Now, every time they append a new node (for a new row or a new cell inside of a row), it causes a reflow in the browser! What does this mean? Really bad lag when you insert 40 or 50 rows. Recognize this piece of code?</p>\n<pre><code>var myDataTable = new YAHOO.widget.DataTable(&quot;myContainer&quot;, myColumnDefs, myDataSource);\n</code></pre>\n<p>Straight from the docs. No no no!</p>\n<p>Instead, you should pass in an unattached DOM node instead of a string!</p>\n<p>Try this code on for size:</p>\n<pre><code>var myDataTable = new YAHOO.widget.DataTable(document.createElement('div'), myColumnDefs, myDataSource); \nmyDataTable.subscribe('initEvent',function() {\n    // CHANGE THIS -- match the id of the container you want.\n    var d = document.getElementById('myContainer');\n    // remove previous DataTables\n    while(d.firstChild) { d.removeChild(d.firstChild); };\n    d.appendChild(this._elContainer); });\n}\n</code></pre>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"48bd7d294fd5f0c66582e7b0774079a9","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921761},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"An Update to The JavaScript Testing Challenge","link":"http://www.zachleat.com/web/javascript-tdd-update/","description":"\n\t\t\t<p><em><strong>Update</strong>: <a href=\"https://www.zachleat.com/web/2011/02/14/javascript-tdd-winner/\">The JavaScript Testing Challenge Winner</a></em></p>\n<p>In <a href=\"https://www.zachleat.com/web/2010/11/13/javascript-tdd/\">The JavaScript Testing Challenge</a>, I asked JavaScript developers of the world to change their heathen ways and embrace the future of automated testing for a healthier and brighter tomorrow.</p>\n<p>However, due to seasonal timing or otherwise real life related reasons, the challenge was greeted with a worldwide chorus of universally blank stares. So, in the true spirit of Christmas, I’m removing the deadline and <strong>will award the grand prize to the developer with the first correct and complete PrimeFactors code kata screencast</strong>. That’s right, be the first to answer the challenge will win a copy of Test-Driven JavaScript Development by Christian Johansen (PDF or Print version, your choice).</p>\n<p>If you have any questions or need help getting started, let me know! I’d be glad to help. Good luck!</p>\n<p><em>Time of entry will be based on the twitter at message sent to @zachleat. Full restrictions and rules posted <a href=\"https://www.zachleat.com/web/2010/11/13/javascript-tdd/\">here</a>.</em></p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"2b965d4ec68615221efaabf400ebd0a2","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921763},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Google Fonts is Adding font-display 🎉","link":"http://www.zachleat.com/web/google-fonts-display/","description":"<p class=\"sub\"><em>May 15, 2019 renamed URL parameter to <code>display</code>. Thank you <a href=\"https://mathiasbynens.be/\">Mathias</a>!</em></p> \n<p class=\"sub\"><em>May 22, 2019 added note about <code>display=swap</code> in the default code embed.</em></p> \n<p>At Google I/O this week, <a href=\"https://twitter.com/szynszyliszys\">Anna Migas</a> shared a photo of an <a href=\"https://addyosmani.com/\">Addy Osmani</a> and <a href=\"https://katiehempenius.com/\">Katie Hempenius</a> session that dropped a font loading bombshell on the world.</p> \n<blockquote>\n <p lang=\"en\" dir=\"ltr\">You will not have to self-host Google Fonts any more to get font-display: swap; 🙌 <a href=\"https://twitter.com/hashtag/io19?src=hash&amp;ref_src=twsrc%5Etfw\">#io19</a> <a href=\"https://t.co/SldOuoNInF\">pic.twitter.com/SldOuoNInF</a></p>— Anna Migas @ Google I/O (@szynszyliszys) \n <a href=\"https://www.zachleat.com/web/google-fonts-display/?ref_src=twsrc%5Etfw\">May 8, 2019</a>\n</blockquote> \n<p>Google Fonts <del>is adding</del> added support for <code>font-display</code>! 🎉🎉🎉🎉</p> \n<p><em><strong>Update My 15, 2019:</strong> although the I/O preview used the <code>font-display</code> URL parameter, <a href=\"https://twitter.com/addyosmani/status/1128548064287952896\">the final implementation uses <code>display</code> instead</a></em></p> \n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>https://fonts.googleapis.com/css?family=Lobster&amp;display=swap<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span></code></pre> \n<p><em><strong>Update May 22, 2019</strong>: <a href=\"https://twitter.com/hdjirdeh/status/1130895027712995329\">Houssein Djirdeh</a> also noticed that <code>display=swap</code> is now used by default when you copy and paste code from the Google Fonts site. This is a really big deal for visible text. Full credit to the Google Fonts team for this.</em></p> \n<p class=\"livedemo top\" data-demo-label=\"Learn more\">Want to learn more about <code>font-display</code>? Check out this <a href=\"https://font-display.glitch.me/\"><code>font-display</code> Playground demo on Glitch</a> from Monica Dinculescu.</p> \n<p>This is big news—it means developers now have more control over Google Fonts web font loading behavior. We can enforce instant rendering of fallback text (when using <code>font-display: swap</code>) rather than relying on the browser default behavior of invisible text for up to 3 seconds while the web font request is in-flight.</p> \n<p>It’s also a bit of trailblazing, too. To my knowledge, this is the first web font host that’s shipping support for this very important <code>font-display</code> feature. Yeah, the <a href=\"https://github.com/google/fonts/issues/358\">GitHub issue asking for this</a> was filed in August of 2016 (just short of three years ago), but Google Fonts is still ahead of the competition here.</p> \n<h2 id=\"timeline\">Timeline <a class=\"direct-link\" href=\"http://www.zachleat.com/web/google-fonts-display/#timeline\">#</a></h2> \n<table> \n <thead> \n  <tr> \n   <th>Date</th> \n   <th class=\"nowrap\">Behavior</th> \n   <th>Vendor</th> \n  </tr> \n </thead> \n <tbody> \n  <tr> \n   <td class=\"nowrap\">2017 <span class=\"hide-sm\"><abbr title=\"July\">Jul</abbr> 24</span></td> \n   <td class=\"yes\"><strong>font-display</strong> Supported</td> \n   <td>Chrome (v60) was first to implement.</td> \n  </tr> \n  <tr> \n   <td class=\"nowrap\">2017 <span class=\"hide-sm\"><abbr title=\"August\">Aug</abbr> 8</span></td> \n   <td class=\"yes\"><strong>font-display</strong> Supported</td> \n   <td>Opera (v47) was second to add support.</td> \n  </tr> \n  <tr> \n   <td class=\"nowrap\">2018 <span class=\"hide-sm\"><abbr title=\"January\">Jan</abbr> 22</span></td> \n   <td class=\"yes\"><strong>font-display</strong> Supported</td> \n   <td>Firefox (v58)</td> \n  </tr> \n  <tr> \n   <td class=\"nowrap\">2018 <span class=\"hide-sm\"><abbr title=\"March\">Mar</abbr> 28</span></td> \n   <td class=\"yes\"><strong>font-display</strong> Supported</td> \n   <td>Safari (v11.1)</td> \n  </tr> \n  <tr> \n   <td class=\"nowrap\">2018 <span class=\"hide-sm\"><abbr title=\"December\">Dec</abbr> 29</span></td> \n   <td class=\"yes\"><strong>font-display</strong> Supported</td> \n   <td>Samsung Internet (v8.2)</td> \n  </tr> \n  <tr> \n   <td class=\"nowrap\"><br>2019 <span class=\"hide-sm\"><abbr title=\"May\">May</abbr> 15</span></br></td> \n   <td class=\"yes\"><strong>font-display</strong> Supported</td> \n   <td>Google Fonts</td> \n  </tr> \n  <tr> \n   <td class=\"nowrap\"><em>Not yet</em></td> \n   <td class=\"no\"><strong>font-display</strong> Not supported</td> \n   <td>Adobe Fonts</td> \n  </tr> \n  <tr> \n   <td class=\"nowrap\"><em>Not yet</em></td> \n   <td class=\"no\"><strong>font-display</strong> Not supported</td> \n   <td>Typography.com (by Hoefler&amp;Co)</td> \n  </tr> \n  <tr> \n   <td class=\"nowrap\"><em>Not yet</em></td> \n   <td class=\"no\"><strong>font-display</strong> Not supported</td> \n   <td>fonts.com (by Monotype)</td> \n  </tr> \n </tbody> \n</table> \n<p><sub>(Monotype tip via <a href=\"https://twitter.com/thomasdeinhamer/status/1127213122517962753\">@thomasdeinhamer</a>)</sub></p> \n<p>Want a <a href=\"https://www.zachleat.com/web/fout-foit-history/\">full history of FOIT and FOUT</a>?</p> \n<h2 id=\"related\">Related <a class=\"direct-link\" href=\"http://www.zachleat.com/web/google-fonts-display/#related\">#</a></h2> \n<ul> \n <li><a href=\"https://www.youtube.com/watch?v=YJGCZCaIZkQ&amp;t=31m20s\">Video of the announcement at Google I/O</a></li> \n</ul> \n<h2 id=\"future-wishlist\">Future wishlist <a class=\"direct-link\" href=\"http://www.zachleat.com/web/google-fonts-display/#future-wishlist\">#</a></h2> \n<p><a href=\"https://github.com/google/fonts/issues/1067\">Stable font file URL in Google Fonts</a> so that we can embed the CSS in our sites directly. This would alleviate the two-hop penalty you’re paying to use these fonts (one render-blocking hop for the CSS and another to fetch the font files). Not only would this be fewer hops, but then you could use it with <code>preload</code> too, which would be incredible.</p> \n<blockquote> \n <p>Font URLs are cached for a year and CSS URLs are cached for only a day—<a href=\"https://twitter.com/googlefonts/status/862870935975714816\">@googlefonts</a></p> \n</blockquote> \n<p>This <code>font-display</code> change is great and means that things are improving! But self hosting will continue to be my preferred method for these typefaces until this issue is resolved.</p>","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"54c72d7ebb3f8988a666c04132e67f97","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921771},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Obnoxiously Readable Responsive Text with Viewport Units","link":"http://www.zachleat.com/web/obnoxiously-readable/","description":"<p>Ever since I created <a href=\"https://www.zachleat.com/web/bigtext-makes-text-big/\">BigText</a> over <em>seven years</em> ago, I’ve been a little bit obsessed with beautifully large text. Unfortunately my own blog had post titles that were—to be honest—a little bland. I wanted to spice it up a bit and move from fixed text sizes to dynamic text that grows with the viewport size. I’ve seen many iterations of this approach using <code>resize</code> handlers in JavaScript:</p> \n<ul> \n <li><a href=\"https://www.zachleat.com/web/bigtext-makes-text-big/\">BigText</a>, which uses JavaScript to find the right text size automatically (it’s a bit expensive and slow).</li> \n <li><a href=\"https://github.com/davatron5000/FitText.js\">FitText.js</a> (from <a href=\"https://github.com/davatron5000\">Dave Rupert</a>) uses a developer-specified scaling factor to linearly scale the text size for you (fast but requires configuration). \n  <ul> \n   <li><a href=\"https://github.com/adactio/FitText.js\">Non-jQuery version of FitText.js</a> from <a href=\"https://github.com/adactio\">Jeremy Keith</a></li> \n  </ul> </li> \n <li>Another popular one is <a href=\"http://simplefocus.com/flowtype/\">FlowType.JS</a>—the concept is very similar.</li> \n</ul> \n<p>There have been other incarnations of this style of JavaScript text resizing. But as far as I can tell, we had the option to retire all of these approaches when Viewport Units were well supported in 2012! <em>If CSS can do the job, do the job in CSS.</em> Delete your redundant JavaScripts, everyone!</p> \n<p>I can already anticipate the first retort to post: the JavaScript plugins can resize to element size and not viewport size! Okay—really this is just another vote for container queries. We can manage this with CSS—it just requires additional, annoyingly attentive care to maintain code for the boundaries at which our text should be resizable and when it should be fixed. <em>But</em>—it’s still better than a JavaScript resize-event handler (in my humble opinion). If we know where our components live in our layout, we can just adjust our Viewport Unit values accordingly to fake a sort of <em>Container Unit</em>.</p> \n<h2 id=\"example\">Example <a class=\"direct-link\" href=\"http://www.zachleat.com/web/obnoxiously-readable/#example\">#</a></h2> \n<p>The current layout specifications for my own blog post layout are:</p> \n<ul> \n <li>Baseline is 100% fluid width.</li> \n <li>Content has a <code>max-width: 589px</code> (<code>31em</code> at <code>font-size: 19px</code>) and maintains this <code>max-width</code> even when adding the right rail.</li> \n</ul> \n<p><em>(This layout specification reminds me of <code>sizes</code> from <code>srcset</code> with responsive images, hmm…)</em></p> \n<p>This is a pretty simple example—we have two boundaries: the breakpoint at which we’ll switch to using Viewport Units, and an upper bound when we hit the content <code>max-width</code> (at <code>589px</code>).</p> \n<div class=\"livedemo top\" data-demo-label=\"Using Bounded font-size: 6.25vw\"> \n <style> #demo-1 { font-size: 20px; line-height: 1; } @media (min-width: 20em) { /* 320px */ #demo-1 { font-size: 6.25vw; } } @media (min-width: 36.8125em) { /* 589px */ #demo-1 { font-size: 36.8125px; } } </style> \n <div id=\"demo-1\">\n  This text only scales when the container width changes.\n </div> \n</div> \n<p>You can customize breakpoints and minimum font-size to your use case:</p> \n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">#demo-1</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token comment\">/* Minimum font-size */</span><br>    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token comment\">/* Arbitrary minimum breakpoint */</span><br><span class=\"token comment\">/* Transition from 20px minimum font-size to vw using this formula: */</span><br><span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span><span class=\"token property\">min-width</span><span class=\"token punctuation\">:</span> 320px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span><br> <span class=\"token selector\">#demo-1</span> <span class=\"token punctuation\">{</span><br> <span class=\"token comment\">/* ( Minimum font-size / Breakpoint ) ✕ 100 */</span><br> <span class=\"token comment\">/* ( 20px / 320px ) ✕ 100 = 6.25vw */</span><br> <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 6.25vw<span class=\"token punctuation\">;</span><br> <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token comment\">/* Content max-width breakpoint */</span><br><span class=\"token comment\">/* Transition from vw to maximum font-size using this formula: */</span><br><span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span><span class=\"token property\">min-width</span><span class=\"token punctuation\">:</span> 589px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span><br> <span class=\"token selector\">#demo-1</span> <span class=\"token punctuation\">{</span><br> <span class=\"token comment\">/* Breakpoint ✕ ( Viewport Units / 100 ) */</span><br> <span class=\"token comment\">/* 589px ✕ ( 6.25vw / 100 ) = 36.8125px */</span><br> <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 36.8125px<span class=\"token punctuation\">;</span><br> <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></code></pre> \n<p><em>Caveat: I’m using <code>px</code> here in a few places where I’d normally use <code>ems</code> or <code>rems</code>, to make the example code easier to read.</em></p> \n<h3 id=\"formulas\">Formulas <a class=\"direct-link\" href=\"http://www.zachleat.com/web/obnoxiously-readable/#formulas\">#</a></h3> \n<h4 id=\"transition-from-fixed-minimum-font-size-to-viewport-units\">Transition from Fixed Minimum font-size to Viewport Units <a class=\"direct-link\" href=\"http://www.zachleat.com/web/obnoxiously-readable/#transition-from-fixed-minimum-font-size-to-viewport-units\">#</a></h4> \n<p>This is used in the above example at the <code>320px</code> breakpoint.</p> \n<pre><code>Viewport Units = ( font-size (px) / Breakpoint (px) ) ✕ 100\n</code></pre> \n<h4 id=\"transition-from-viewport-units-to-fixed-maximum-font-size\">Transition from Viewport Units to Fixed Maximum font-size <a class=\"direct-link\" href=\"http://www.zachleat.com/web/obnoxiously-readable/#transition-from-viewport-units-to-fixed-maximum-font-size\">#</a></h4> \n<p>This is used in the above example at the <code>589px</code> breakpoint.</p> \n<pre><code>font-size (px) = Breakpoint (px) ✕ ( Viewport Units / 100 )\n</code></pre> \n<p>After you have your pixels, of course you can convert to <code>rem</code> or <code>em</code> as desired.</p> \n<h3 id=\"smaller-delta\">Smaller Delta <a class=\"direct-link\" href=\"http://www.zachleat.com/web/obnoxiously-readable/#smaller-delta\">#</a></h3> \n<p>If you want the text to grow or shrink at a reduced rate, you can use <code>calc</code> to sum a <code>vw</code> unit with a fixed CSS unit (like <code>px</code> or <code>em</code>)—but getting your boundaries aligned properly is a bit more difficult and beyond the scope of what I’d like to cover here. An exercise left up to the reader 😇.</p> \n<p><em>Update on 2018 May 25</em>: There is an incredible article written by <a href=\"https://fvsch.com/\">Florens Verschelde</a> about <a href=\"https://fvsch.com/code/css-locks/\">The Math of CSS Locks</a> which covers this exact subject. Seriously, go read it—it’s amazing.</p> \n<h3 id=\"twin-props\">Twin Props <a class=\"direct-link\" href=\"http://www.zachleat.com/web/obnoxiously-readable/#twin-props\">#</a></h3> \n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">#demo-1</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token comment\">/* Minimum font-size */</span><br>    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span><br>    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 6.25vw<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span></br></br></br></br></code></pre> \n<p>I’ve seen some developers suggest forgoing the minimum media query altogether with the above code. This is <em>probably</em> fine but I don’t really like that an unbounded minimum font-size could quickly become unreadable at super small breakpoints. Get on that smart watch, y’all.</p> \n<h2 id=\"bikeshedding-a-new-unit\">Bikeshedding a New Unit <a class=\"direct-link\" href=\"http://www.zachleat.com/web/obnoxiously-readable/#bikeshedding-a-new-unit\">#</a></h2> \n<p>It does make me wonder how container queries (or similar) might work with Viewport Units. I’m starting to see now that the addition of a future Container Unit might be warranted to simplify the above code.</p> \n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">#demo-2</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span><span class=\"token property\">min-width</span><span class=\"token punctuation\">:</span> 320px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span><br>    <span class=\"token selector\">#demo-2</span> <span class=\"token punctuation\">{</span><br> <span class=\"token comment\">/* Beware: `cw` is not a real unit */</span><br> <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 6.25cw<span class=\"token punctuation\">;</span><br> <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span></br></br></br></br></br></br></br></br></code></pre> \n<p>This would alleviate the need for the second breakpoint altogether, as the font-size would be determined by the size of an arbitrary container, which already has an upper bound <code>max-width</code> on it.</p> \n<h2 id=\"anyway\">Anyway <a class=\"direct-link\" href=\"http://www.zachleat.com/web/obnoxiously-readable/#anyway\">#</a></h2> \n<p>All of this build-up is really just to say that I made all my blog post titles huge and it makes me really happy. I’m using Viewport Units with a minimum boundary only 😎.</p> \n<p>If your screen is wide enough (perhaps—say—a viewport size of 3440px), you can probably read them from space:</p> \n<img src=\"https://www.zachleat.com/web/img/posts/extra-readable-titles/big.png\" alt=\"Giant Viewport Preview of the Blog Post Title\" class=\"primary\"> <p>This is likely just the beginning of a long string of changes I’ll make to the super-wide layout for my blog.</p> \n <div class=\"callout\"> \n  <h3>Update</h3> \n  <p>One hefty drawback to this approach (using only <code>vw</code> units to scale text) noted by <a href=\"https://twitter.com/andrew__romanov/status/992482401053036544\">Andrew Romanov</a> is that the text no longer zooms appropriately with page zoom! He proposes using <code>calc</code> with a combination of fixed and viewport units for at least some text zooming. Read the <a href=\"https://fvsch.com/code/css-locks/\">The Math of CSS Locks</a> for more on that approach.</p> \n </div> </img>","descriptionType":"html","feedId":12519,"bgimg":"https://www.zachleat.com/web/img/posts/extra-readable-titles/big.png","linkMd5":"718d5f591cf7439924308d80057ede64","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn45@2020_3/2020/08/25/02-02-04-130_4815a65aa559c012.webp","destWidth":1834,"destHeight":756,"sourceBytes":244643,"destBytes":63474,"author":"","articleImgCdnMap":{"https://www.zachleat.com/web/img/posts/extra-readable-titles/big.png":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn45@2020_3/2020/08/25/02-02-04-130_4815a65aa559c012.webp"},"publishedOrCreatedDate":1598320921771},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"FOIT vs. FOUT, a Side by Side Comparison","link":"http://www.zachleat.com/web/fout-vs-foit/","description":"<p><em>Prerequisite: not sure what FOUT or FOIT are? Read the <a href=\"https://www.zachleat.com/web/webfont-glossary/#foit\">definitions on the Web Font Loading Glossary</a>.</em></p> \n<p><a href=\"https://www.zachleat.com/foitfout/\">\n  <video autoplay=\"\" muted=\"\" preload=\"\" src=\"https://www.zachleat.com/web/img/posts/foutvsfoit/demo.mp4\"></video></a></p> \n<p>Before we continue, check out <a href=\"https://www.zachleat.com/foitfout/\">this demo that showcases the difference between FOIT and FOUT</a>—side by side—in order to more easily compare and constrast the functional differences between the two. Decide for yourself—which feels faster? Which feels more stable? <em>(Keep reading for my opinion)</em></p> \n<p class=\"primarylink\"><a href=\"https://www.zachleat.com/foitfout/\">Check out FOIT vs. FOUT</a></p> \n<p>A few things stuck out to me after playing around with it:</p> \n<ol> \n <li>FOUT feels faster, obviously. Instant rendering is faster than a delay.</li> \n <li>FOIT feels more stable if you can guarantee your fonts will load before the timeout (note: you can’t). This is likely why I’m seeing more developers gravitating to a <code>font-display: optional</code> (render only if cached) approach.</li> \n <li>FOIT with fonts that hit the timeout and render using the fallback feel more unstable that FOUT!</li> \n <li>Page stability is <em>greatly increased</em> when you group your repaints (using the CSS Font Loading API or a polyfill).</li> \n</ol> \n<h2 id=\"related\">Related <a class=\"direct-link\" href=\"http://www.zachleat.com/web/fout-vs-foit/#related\">#</a></h2> \n<ul> \n <li><a href=\"https://github.com/zachleat/foitfout\">The source code for FOIT vs. FOUT is on GitHub</a></li> \n <li>Blog Post: <a href=\"https://www.zachleat.com/web/fout-foit-history/\">A Historical Look at FOUT and FOIT</a></li> \n <li>Blog Post: <a href=\"https://www.zachleat.com/web/webfont-glossary/\">The Web Font Loading Glossary</a></li> \n</ul> \n<h2 id=\"context\">Context <a class=\"direct-link\" href=\"http://www.zachleat.com/web/fout-vs-foit/#context\">#</a></h2> \n<p>In researching <a href=\"https://www.zachleat.com/web/fout-foit-history/\">the history of web font loading behavior</a>, I was struck by how much influence Apple had when they introduced FOIT to the world on WebKit. It’s almost as if two worlds collided, pitting the idealists that believe that a web page should only be rendered in its finished state against the realists that understand network conditions will always necessitate the construction of planes mid-air.</p> \n<p>For historical context, here are an anonymized quote from an Apple employee on the earliest discussion I could find (~2009, about six months after FOIT was first introduced):</p> \n<blockquote> \n <p>We might consider displaying something after a timeout, but no way are we going to draw the wrong thing immediately and then flicker to the right thing. That would look terrible.</p> \n</blockquote> \n<p>This quote seems to suggest that FOIT was not introduced to hide the “ugly” fallback fonts, as some developers have suggested. After all, Apple has invested heavily in their own <a href=\"https://developer.apple.com/videos/play/wwdc2015/804/\">system fonts</a>.</p> \n<p>Rather, FOIT was introduced to reduce the jarring visual impact of the transition that swapping to the web font introduces—reflowing text with new metrics (not all fonts are the same size—<em>gasp!</em>) and repainting with a new style. If the system font and web font are metric compatible (meaning they are the same size—which is very rare but <a href=\"https://en.wikipedia.org/wiki/Liberation_fonts\">some fonts are developed with this in mind</a>), reflow should be non-existent and I am very curious if those original FOIT advocates would still complain about the repaint. My hunch is that the answer is yes—but I’m not sure. If I ever meet them, I’ll be sure to ask!</p> \n<p>In retrospect the unintented side effects of hiding text are clear now, primarily because repaints amongst different web fonts for a single typeface are not grouped together by default. This creates race conditions leading to the <a href=\"https://www.zachleat.com/web/mitt-romney-webfont-problem/\">Mitt Romney Web Font Problem</a>, changing the actual meaning of sentences that mix two or more web fonts together.</p> \n<p class=\"primarylink\"><a href=\"https://www.zachleat.com/foitfout/#800,800,3000,3000\">Demo of The Mitt Romney Web Font Problem</a></p> \n<p>Where does this leave us? Hopefully the demo has convinced you that FOIT isn’t really a good default font loading behavior for web browsers. Note that the alternative doesn’t have to be FOUT. It isn’t a dichotomy. There are font loading strategies that eliminate FOIT and greatly reduce FOUT reflow. You can read about those out on my <a href=\"https://www.zachleat.com/web/comprehensive-webfonts/\">Comprehensive Guide to Font Loading Strategies</a>.</p>","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"b0da5f44d606336756d472532615d246","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921769},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"ALARMd 2 Beta, with Google Calendar Integration","link":"http://www.zachleat.com/web/alarmd-2-beta-with-google-calendar-integration/","description":"\n\t\t\t<p><a href=\"http://www.zachleat.com/Projects/alarmd-beta/\">Take a look: ALARMd 2 Beta</a></p>\n<p><em><strong>Update</strong>: added Metric and Unit Circle time formats.</em></p>\n<p>I know, some of you are reading this and thinking to yourself — genital herpes is more appealing than yet another online alarm clock. But to that I say, congratulations, that’s one of the new features in ALARMd 2!</p>\n<p>Why did I make another online alarm clock? Mostly due to missing features and limitations in the old version, but also because it’s a good exercise in JavaScript programming and User Interface design. Everyone likes to hone their skills, and this is my publicly viewable work desk. But the real reason I went back to rewrite the old version is that I’m hooked on <a href=\"http://jquery.com/\">jQuery</a>. I can’t get enough of that sweet, sweet, source code, and couldn’t stand to see my old, crusty, handwritten DOM manipulations polluting web browsers across the world. Users of the Yahoo User Interface Library (what I used for the original version of ALARMd) would do well to consider jQuery a nice plugin to be used alongside YUI. It will clean up your code MAX_INT-fold.</p>\n<p>Here are a few new features and addressed limitations in ALARMd 2.</p>\n<ul>\n<li>Easy Alarm Mode: No more fumbling around when you just want one simple easy-to-add alarm.</li>\n<li>Google Calendar Alarm Mode: Customize your alarm schedule to your heart’s content, it will load your alarms straight from a publicly available Google Calendar. There are some great features with this:\n<ul>\n<li>Load only the first calendar event of every day</li>\n<li>Day Limiter (Example: Only load calendar events within the next 3 days)</li>\n<li>Minute Adjuster (Example: Alarm me 90 minutes before work without adding a separate event)</li>\n<li>Google does a nice job of normalizing dates as well, so you don’t have to worry about calendar time syncing. If it says 8AM on your calendar, it’s going to alarm you at 8AM on your computer’s local time.</li>\n</ul>\n</li>\n<li>New Clock Formats:\n<ul>\n<li>Human Readable Clock Format: Think “Half Past Two”, or “Quarter Til Twelve”. This idea is from <a href=\"http://www.insightoutsight.co.uk/viewproject.php?cid=2&amp;pid=3&amp;iid=2\">Laurence Willmott’s Project “It’s about Time”</a>. I took some liberties with his labeling scheme, I hope he doesn’t mind too much.</li>\n<li><a href=\"http://zapatopi.net/metrictime/\">Metric Time Format</a>: Shows the measurement Centi-days in Local Metric Time. Basically, it’s a percentage of much of the day has passed. If it’s 80.000, 80 percent of the day has passed, which coincides with 7:12 PM.</li>\n<li>Unit Circle Time Format: Displays the time in radians that would be shown if a clock were <a href=\"http://www.cafepress.com/poofietomato.49111330\">pasted on top of a unit circle</a>. If it’s 12 o’clock, it will read π/2. After programming this one, it’s starting to seem normal in my brain. Oh, it’s 3π/2? Time to eat dinner. How the hell did it get 2π/3??</li>\n</ul>\n</li>\n<li><a href=\"http://www.zachleat.com/web/2008/03/23/yet-another-pretty-date-javascript/\">Human Readable Alarm Dates</a>: Think “29 Minutes”, “1 Hour”, “2 Days Ago”.</li>\n<li>Much cleaner interface, using a jQuery accordion to display the options.</li>\n<li>The old ALARMd required an internet connection for all sources, and provided no safeguard if your internet went down whilst you were sleeping. ALARMd 2 preloads all Youtube videos in the background when the page loads using the new <a href=\"http://apiblog.youtube.com/2008/03/something-to-write-home-about.html\">Youtube JavaScript API</a>. A nice benefit of this is that the browser window no longer requires focus to play the YouTube video.</li>\n<li>Less clunky interface for adding new alarm sources.</li>\n<li>Repeat option for YouTube videos and MP3′s. Turn infinite loop on or off. Careful with this one. Don’t leave ALARMd going if you’re not going to be home when it goes off.</li>\n<li>CSS Skins, Use the really simple ones I’ve included for Red, Green, or Blue, or include your own URL to your own hosted CSS file. Have a good skin? I’ll include it in the select list and give you some props here, just link to it in the comments below. Use some CSS class hooks to spice up your skins (they are mutually exclusive). These are CSS classes that are added to the body tag to allow you to style the alarm differently depending on the alarm clock’s current state. <em>Future enhancements</em> might include more than just alarm-based hooks: Year, day of the year, and hour of the day might be useful, that way you could style the clock to show a lighter background during the day and a darker background at night.\n<ul>\n<li>.alarmWithin30Minutes</li>\n<li>.alarmWithin15Minutes</li>\n<li>.alarmWithin5Minutes</li>\n<li>.alarmWithin1Minute</li>\n<li>.alarmActive (Alarm is being played)</li>\n</ul>\n</li>\n<li>Still has all the old favorites:\n<ul>\n<li>Test Button to make sure the video or source is working and to check your volume.</li>\n<li>Count Down mode to show the time between now and the first alarm.</li>\n<li>Store your own list of alarm sources, using YouTube, MP3, <a href=\"http://last.fm/\">Last.FM</a>, or any URL (Pandora is included).</li>\n<li>Military time (24 hour clock) and seconds toggle.</li>\n<li>Naked mode (get rid of the extras)</li>\n</ul>\n</li>\n</ul>\n<p>Finished reading? I’m surprised you didn’t click the link at the top: <a href=\"http://www.zachleat.com/Projects/alarmd-beta/\">ALARMd 2 Beta</a></p>\n<p>Remember, this is BETA. That means it’s new. I’ve done my best to test and code out all the kinks, but there may be a few that slipped through. Try it out and please report any bugs. And once again, this code is released under the BSD license.</p>\n<p>I’ll probably move this to the main <a href=\"http://alarmd.com/\">ALARMd.com</a> domain shortly.</p>\n<p>Alarmd has been personally tested with Firefox 2, Firefox 3, Internet Explorer 7, Safari 3.1, and Opera 9.27, all on Windows. Google GDATA reports an unsupported browser error on Safari and Opera, which you can hide using custom CSS.</p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"16827f7f87f9926fc3bd6b824512c02c","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921761},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"How we use web fonts responsibly, or, avoiding a @font-face-palm","link":"http://www.zachleat.com/web/filament-font-loading/","description":"\n\t\t\t<p><a href=\"http://www.filamentgroup.com/lab/font-loading.html\"><strong>Read <em>How we use web fonts responsibly, or, avoiding a @font-face-palm</em> on the Filament Group Lab.</strong></a></p>\n<blockquote>\n<p>Using @font-face to load custom web fonts is a great feature to give our sites a unique and memorable aesthetic. However, when you use custom fonts on the web using standard techniques, they can slow down page load speed and hamper performance—both real and perceived. Luckily, we've figured out some methods to apply them carefully to ensure your site correctly balances usability, performance and style.</p>\n</blockquote>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"5a228fa6aebaf1fc282c3fda9b03a0ff","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921765},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Selecthor: A Better way to Learn and Demo CSS Selectors","link":"http://www.zachleat.com/web/selecthor/","description":"\n\t\t\t<div class=\"fluid-width-video-wrapper\"><iframe class=\"youtube-player\" type=\"text/html\" width=\"640\" height=\"385\" src=\"https://www.youtube.com/embed/CwZniQc0zg0/\" frameborder=\"0\" allowfullscreen=\"\"></iframe></div>\n<p>I wanted a better way to live demo what nodes a CSS selector matches on the actual HTML source code (instead of the rendered view), so I built one. I show how it works in the video above.</p>\n<ul>\n<li><a href=\"https://www.zachleat.com/selecthor/\">Selecthor Live Demo</a></li>\n<li><a href=\"https://github.com/zachleat/selecthor\">Selecthor source code on GitHub</a></li>\n</ul>\n<div class=\"retweettoshare\">\n\t<h3 class=\"retweettoshare_title\">Retweet to share this post</h3>\n\t<div class=\"retweettoshare_widget\">\n\t\t<blockquote class=\"twitter-tweet\" data-conversation=\"none\" data-cards=\"hidden\" data-lang=\"en\"><p lang=\"en\" dir=\"ltr\">★ Selecthor helps you learn, test, and demo CSS Selectors.<br><br>Demo: <a href=\"https://t.co/Miia3PmKyl\">https://t.co/Miia3PmKyl</a><br>GitHub: <a href=\"https://t.co/snYOgSj8Xe\">https://t.co/snYOgSj8Xe</a></p>&mdash; Zach Leatherman (@zachleat) <a href=\"https://twitter.com/zachleat/status/855413012760588292\">April 21, 2017</a></blockquote>\n\t</div>\n</div>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"69033a140e53661e136026876f1e350b","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921767},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Nursery Rhyme Code Poem [PHP]","link":"http://www.zachleat.com/web/nursery-rhyme-design-patterns-php/","description":"\n\t\t\t<pre><code>&lt;?php\nclass I {\n    public __construct()\n    {\n        $star = new Star();\n        $star-&gt;size = 'little';\n        $star-&gt;twinkle();\n        $star-&gt;twinkle();\n \n        self::wonder($star, 'What are you?');\n \n        $world = new World();\n        $world-&gt;elevation = 'So High';\n        $star-&gt;setAbove($world);\n \n        $d = new Diamond();\n        $d-&gt;position = 'In the sky';\n        $star-&gt;setLike($d);\n \n        $star-&gt;twinkle();\n        $star-&gt;twinkle();\n        $star-&gt;size; // returns 'little'\n \n        self::wonder($star, 'What are you?');\n    }\n \n    public static function wonder($obj, $query)\n    {\n        $obj-&gt;query($query);\n    }\n}\n</code></pre>\n<p><em>The above <strong>code poem</strong> is released under the BSD license.</em> To use in production environment without error, please precede with the following command: <code>error_reporting(0);</code> Obviously I’m kidding, don’t use this code. Not even for enterprise software.</p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"d5f19061038f83fd969c6558fe833c35","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921761},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Conservative Design Patterns for Form Elements","link":"http://www.zachleat.com/web/conservative-design-patterns-for-form-elements/","description":"\n\t\t\t<p>Have you ever been to a web site that looks as though it has been built exclusively using pre-made bulky widgets cookie cuttered right onto the page? Lovely grid components, sweet over-featured WYSIWYG editors, maybe a Google or Yahoo map thrown in on the page for good measure. Conformist web sites using the conditioning forced upon them by time, executive, or work-ethic based constraints. The widgets on these websites either seem too bulky, reinventing the wheel with avant-garde user interaction for a confusing user experience, or they are just too lightweight to justify using at all.</p>\n<p>What I’m proposing is a standard set of Design Patterns for form input, as an extension to already existing HTML form elements. By describing the best practices for certain use cases of input, we can form a set of building blocks that can be used to enhance existing forms, instead of replacing them with totally new ways of user interaction.</p>\n<p>So keeping away from <a href=\"http://www.adaptivepath.com/publications/essays/archives/000385.php\">the spirit of inventing names for things that are already being done</a>, I won’t be trivializing this idea with a catch phrase. Instead I hope you will realize the value of <strong>BUILDING BLOCKS</strong> over <strong>cookie cutters</strong>.</p>\n<p>These components be used to handle the tween cases of GUI development, where the interaction doesn’t warrant a full blown widget, but requires more than a standard HTML form element. I would be excited to see work done at this level of GUI development inside of the JavaScript libraries that are out there instead of work on the overblown “Widget Set” that seems to be the buzz in the community.</p>\n<p><strong>Spectrum of GUI Elements</strong></p>\n<p>Raw HTML Inputs (Text, Password, Select…) -&gt; Smidgets -&gt; Full Blown Widgets (Editable Grid, Rich Text Editor)</p>\n<p><strong>Legend</strong></p>\n<ul>\n<li>Toggle Option On or Off (Toggle)</li>\n<li>Select 0-1 Options From a List (Select1)</li>\n<li>Select 0 Options From a List (Select )</li>\n<li>Input 0 Characters into an Element (InputX)</li>\n<li>Input is obfuscated to prevent from being read (Obfuscated)</li>\n</ul>\n<p>To describe what we want, let’s first see what we have.</p>\n<p><strong>Existing HTML Elements</strong></p>\n<ul>\n<li>Buttons (clicking performs a data altering action or form submission action)\n<ul>\n<li>Submit</li>\n<li>Reset</li>\n<li>Push (without attached behavior)</li>\n</ul>\n</li>\n<li>Checkbox (Toggle)</li>\n<li>Checkbox Group (Select )</li>\n<li>Radio Group (Select1)</li>\n<li>Select Single (Select1)</li>\n<li>Select Multiple (Select )</li>\n<li>Text (InputX)</li>\n<li>Textarea (<em>antiquated due to CSS styled word wrapping multi line Text input</em>) (InputX)</li>\n<li>Password (InputX, Obfuscated)</li>\n</ul>\n<p>And because this is going to be a series, I’ll continue with my first case of a Conservative Design Form Element in a new post.</p>\n<p>Let me just reiterate that I do hope you take the ideas for these GUI components and develop them in your favorite JavaScript library. The purpose of this is to come up with a set of feature-based standards so that people don’t have to keep developing their own components over and over again. Do you have an idea for a feature that you think should be included in the standard or luxury feature set of a component? Post it in the comments of that component blog post and I’ll certainly modify the post with your suggestions.</p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"aec315487b2f6d2a2522fa8b57bacd71","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921760},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Résumé/CV on the Jamstack","link":"http://www.zachleat.com/web/resume-on-the-jamstack/","description":"<p>When I applied to work at Netlify, I put in a little work to update my dusty old résumé. It’s considered best practice to continually update your résumé, but who does that?? I’ve since discovered that my résumé can do some of this work for me and keep itself updated with a little help from the Jamstack, pulling in data from my blog and other data sources from around the web.</p> \n<p>This post was inspired by a few other résumé helpers I found floating around the web past week:</p> \n<ul> \n <li><a href=\"https://ericwbailey.design/writing/how-to-not-make-a-resume-in-react.html\">How to not make a résumé in React by \n   <picture>\n    <source type=\"image/webp\" srcset=\"https://www.zachleat.com/img/959d3b4-72.webp 72w\"><img alt=\"ericwbailey’s Avatar\" src=\"https://www.zachleat.com/img/959d3b4-72.jpeg\" width=\"72\" height=\"72\" class=\"z-avatar\" loading=\"lazy\" /></source>\n   </picture>Eric Bailey</a></li> \n <li><a href=\"https://mxb.dev/blog/eleventy-resume-builder/\">Eleventy Résumé Builder by \n   <picture>\n    <source type=\"image/webp\" srcset=\"https://www.zachleat.com/img/cb4690eb-72.webp 72w\"><img alt=\"mxbck’s Avatar\" src=\"https://www.zachleat.com/img/cb4690eb-72.jpeg\" width=\"72\" height=\"72\" class=\"z-avatar\" loading=\"lazy\" /></source>\n   </picture>Max Böck</a></li> \n</ul> \n<h2 id=\"have-a-gander-at-the-ol%E2%80%99-r%C3%A9sum%C3%A9\">Have a gander at the ol’ résumé <a class=\"direct-link\" href=\"http://www.zachleat.com/web/resume-on-the-jamstack/#have-a-gander-at-the-ol%E2%80%99-r%C3%A9sum%C3%A9\">#</a></h2> \n<ul> \n <li>View <a href=\"https://www.zachleat.com/resume/\"><strong>Zach Leatherman’s Résumé</strong></a></li> \n <li>Have a peek at the <a href=\"https://github.com/zachleat/zachleat.com/blob/b2b538994cd7696839900a22acde3e72daf9f5ab/resume/index.liquid\">Source Code</a></li> \n <li>Look at the <a href=\"https://github.com/zachleat/zachleat.com/blob/b2b538994cd7696839900a22acde3e72daf9f5ab/resume/index.11tydata.js\">data sources</a></li> \n</ul> \n<h2 id=\"fed-by-blog-data\">Fed by blog data <a class=\"direct-link\" href=\"http://www.zachleat.com/web/resume-on-the-jamstack/#fed-by-blog-data\">#</a></h2> \n<blockquote> \n <p>Public Speaker in eight different countries: 15 conferences, 13 meetups, seven barcamps, 12 podcasts, and one University guest lecture.</p> \n</blockquote> \n<blockquote> \n <p>197 posts since February 2007, 57 entries on Web Fonts.</p> \n</blockquote> \n<p>The above statements are generated by blog posts and metadata from post front matter. By meticulously tagging posts on my blog with this metadata, it can generate how many conferences and meetups I’ve done. For example, here’s the relevant front matter from a Smashing Conference in Barcelona:</p> \n<pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span><br>  <span class=\"token key atrule\">speaking</span><span class=\"token punctuation\">:</span><br>    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> conference<br>    <span class=\"token key atrule\">country</span><span class=\"token punctuation\">:</span> Spain</br></br></br></code></pre> \n<h2 id=\"fed-by-social-media\">Fed by social media <a class=\"direct-link\" href=\"http://www.zachleat.com/web/resume-on-the-jamstack/#fed-by-social-media\">#</a></h2> \n<p>Twitter avatars are fetched for people, companies, and organizations for some nice visuals. These are cached in the build for four weeks before a new one is requested. Counts from social media networks are also updated from the build.</p> \n<blockquote> \n <p>1,530 members and growing, 50+ speakers, 90+ events.</p> \n</blockquote> \n<p>The number of members in NebraskaJS are fetched dynamically from Meetup.</p> \n<blockquote> \n <p>Eleventy (☆ 5,024)</p> \n</blockquote> \n<p>GitHub star counts for projects I’ve worked on are injected from real data.</p> \n<blockquote> \n <p>@eleven_ty (4,218 followers)</p> \n</blockquote> \n<p>Twitter follower counts are also retrieved and updated by the build.</p> \n<h2 id=\"update-your-r%C3%A9sum%C3%A9-for-the-last-time-(not-really)\">Update your résumé for the last time (not really) <a class=\"direct-link\" href=\"http://www.zachleat.com/web/resume-on-the-jamstack/#update-your-r%C3%A9sum%C3%A9-for-the-last-time-(not-really)\">#</a></h2> \n<p>Hopefully this has given you some inspiration to automate some of your résumé content so that you don’t have to keep it updated manually! As always, it’s important not to automate too much or it’ll appear robotic—but knowing what to automate and what to keep manual is part of the magic.</p>","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"c07cb84fd8c299e8c6710728b580b62b","bgimgJsdelivr":"","metaImg":"","author":"","articleImgCdnMap":{"https://www.zachleat.com/img/959d3b4-72.jpeg":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn31@2020_3/2020/08/25/02-02-20-595_e023ccecded7e4fa.webp","https://www.zachleat.com/img/cb4690eb-72.jpeg":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn97@2020_3/2020/08/25/02-02-10-002_072a003144c40ae9.webp"},"publishedOrCreatedDate":1598320921773},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"FitText + BigText: A Tale of Two Plugins","link":"http://www.zachleat.com/web/fittext-and-bigtext/","description":"\n\t\t\t<p>Earlier this week, <a href=\"http://twitter.com/trentwalton\">@TrentWalton</a> <a href=\"http://twitter.com/TrentWalton/status/67972022776508416\">tweeted</a>:</p>\n<blockquote>\n<p>We at <a href=\"http://twitter.com/paravelinc\">@paravelinc</a> happily present to you FitText—a jQuery plugin for inflating web type:</p>\n</blockquote>\n<p>Naturally, I wondered how it compared to BigText, a plugin of my own creation to Make Text Big. Trent <a href=\"http://twitter.com/TrentWalton/status/67989004427079682\">continued</a>:</p>\n<blockquote>\n<p>It’s in the GitHub readme, but I want to recognize BigText from <a href=\"http://twitter.com/zachleat\">@zachleat</a> as another font sizer for non-fluid sites:</p>\n</blockquote>\n<p>I was delighted to get some attribution from Trent, and even more delighted to see their plugin. It’s really a great piece of work. However, his statement that BigText is just for non-fluid sites is not quite accurate. Let’s dive in.</p>\n<p><a href=\"http://www.zachleat.com/web/bigtext-makes-text-big/\"><img src=\"https://www.zachleat.com/web/wp-content/uploads/2011/05/Screen-shot-2011-05-12-at-11.05.26-PM.png\" alt=\"\" title=\"BigText\"></a></p>\n<p><a href=\"http://fittextjs.com/\"><img src=\"https://www.zachleat.com/web/wp-content/uploads/2011/05/Screen-shot-2011-05-12-at-11.10.01-PM.png\" alt=\"\" title=\"FitText\"></a></p>\n<p>On the surface, BigText and FitText might seem very similar. In fact, they are quite different and approach what might seem to be a similar problem (resizing text to fit a container) in very different ways.</p>\n<p>At its simplest, we can boil it down like this: If you’re crafting a specific design with <strong>copy that is not going to change</strong>, use FitText. If your <strong>text is dynamic</strong> (maybe user generated), use BigText.</p>\n<p>Here’s more detail:</p>\n<table>\n<thead>\n<tr>\n<th>&#160;</th>\n<th>BigText</th>\n<th>FitText</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<th>Demos</th>\n<td><a href=\"http://jsfiddle.net/zachleat/anJpE/\">BigText Fiddle</a></td>\n<td><a href=\"http://jsfiddle.net/zachleat/ExhDC/\">FitText Fiddle</a></td>\n</tr>\n<tr>\n<th>&#160;</th>\n<td colspan=\"2\"><em>Try resizing the demo windows above.</em></td>\n</tr>\n<tr>\n<th>Algorithm</th>\n<td><strong>Sizes text automatically</strong> from a base up to fit the element width, regardless of initial font size.</td>\n<td>Uses the width of the element and a configurable JavaScript argument (the ratio) to <strong>scale text down</strong> to smaller widths. This ratio argument must be set manually.</td>\n</tr>\n<tr>\n<th>Responsive Design</th>\n<td colspan=\"2\">Both plugins work with <strong>responsive design techniques</strong>, operating correctly with media queries, fluid designs, and window resizing.</td>\n</tr>\n<tr>\n<th>Speed</th>\n<td>Fast</td>\n<td>Faster</td>\n</tr>\n<tr>\n<th>Text</th>\n<td>Works with user generated text, or any text isn&#8217;t cemented at design time. See the <a href=\"http://www.zachleat.com/bigtext/demo/\">BigText Demo Wizard</a>.</td>\n<td>Requires up front configuration to specific text.</td>\n</tr>\n<tr>\n<th>Resize Event</th>\n<td>Works with existing debounced resize libraries, if they exist on the page.</td>\n<td>Does not use a debounced resize event.</td>\n</tr>\n<tr>\n<th>Unobtrusive</th>\n<td>CSS and BigText font-sizes are independent of each other.</td>\n<td>FitText uses your CSS font-size as a maximum font size.</td>\n</tr>\n<tr>\n<th>&#160;</th>\n<td colspan=\"2\"><em>Don&#8217;t forget to set sane CSS font-size defaults when JavaScript isn&#8217;t available.</em></td>\n</tr>\n<tr>\n<th>Unit Tested</th>\n<td>Full Test Suite</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<p><strong>FitText is very lightweight and fast</strong>, even considering it doesn’t yet use a debounced resize event. The <a href=\"https://github.com/davatron5000/FitText.js/blob/master/jquery.fittext.js\">FitText algorithm</a> is <strong>quite beautiful</strong>. A huge well done to <a href=\"http://paravelinc.com/\">Paravel</a>.</p>\n<p>FitText relies on the fact that there is a <strong>linear relationship between font-sizes and element widths</strong>. Once you’ve established the ratio between the two, it’s off to the races. In fact, it would probably be technically possible to determine the ratio solely on the initial inner-width of the text and the initial font-size. I’ll have to play around with that approach but if it works it would give an amazing speed improvement to BigText.</p>\n<p><code>font-size = outer-width / configurable-ratio</code></p>\n<p>In a perfect world, BigText and FitText could be combined, to create a <em>mutant auto-text-sizing plugin baby</em> that gives the best of both worlds.</p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"https://www.zachleat.com/web/wp-content/uploads/2011/05/Screen-shot-2011-05-12-at-11.05.26-PM.png","linkMd5":"115a2f3c23ebf71a3fed1ab5138ffe42","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn15@2020_1/2020/08/25/02-02-02-756_d72e536fca89cefd.webp","destWidth":300,"destHeight":205,"sourceBytes":66941,"destBytes":11784,"author":"","articleImgCdnMap":{"https://www.zachleat.com/web/wp-content/uploads/2011/05/Screen-shot-2011-05-12-at-11.05.26-PM.png":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn15@2020_1/2020/08/25/02-02-02-756_d72e536fca89cefd.webp","https://www.zachleat.com/web/wp-content/uploads/2011/05/Screen-shot-2011-05-12-at-11.10.01-PM.png":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn91@2020_2/2020/08/25/02-02-16-759_b21b54393e8d595a.webp"},"publishedOrCreatedDate":1598320921763},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"CSS 3 Text: A Tale of writing-mode Woe","link":"http://www.zachleat.com/web/css3-text-writing-mode/","description":"<p>After reading an interesting article on using the <a href=\"http://www.thecssninja.com/css/real-text-rotation-with-css\">writing-mode CSS property</a> to display vertical text (I’m always interested in how to abuse what browsers currently support into something new and exciting), I decided to look into this <code>writing-mode</code> property and see what opportunities it might present.</p> \n<p>Generally when exploring a development opportunity, I tend to prioritize my adventures towards things that are supported in Internet Explorer first. This often has the biggest cross-browser payoff, since the other browser vendors tend to have a quicker draw than the Microsoft Team. However, surprisingly enough, this <code>writing-mode</code> study proved the opposite to be true. It seems very interesting that Microsoft has decided to implement a portion of the CSS 3 specification, given its general stance of moving slower than an iceberg to avoid “breaking the web.” But I, for one, welcome our new choose-your-own-adventure standards loving overlords.</p> \n<p>As far as my tests go, the only browser to support the <code>writing-mode</code> property at all is Internet Explorer, which was very surprising. At it’s heart, though, <code>writing-mode</code> is just shorthand for two other properties: <code>direction</code> and <code>block-progression</code>. Luckily, <strong>Firefox, Safari, Chrome and IE back through at least version 6 support the <code>direction</code> property</strong> and have proprietary options for rotation, which <strong>allows for emulation of a few of the unsupported <code>writing-mode</code>‘s</strong>, but not all of them. The missing piece of <code>writing-mode</code> emulation belongs to the <code>block-progression</code> property, which isn’t supported by anyone, and would allow elements to flow reverse vertically (start at the bottom of a block and flow upwards).</p> \n<p><em>It’s important to note that while <a href=\"http://blogs.msdn.com/ie/archive/2009/05/29/the-css-corner-writing-mode.aspx\">IE8 has really set the bar for implementation here</a> and has chosen to support <code>writing-mode: lr-bt</code> and <code>writing-mode: rl-bt</code>, they aren’t used to display any known language text. They’re just included for completeness, and aren’t a part of the <a href=\"http://www.w3.org/TR/2003/CR-css3-text-20030514/\">W3C CSS 3 Text Module specification.</a></em></p> \n<h2 id=\"view-the-demo-%2F-test-page\"><a href=\"http://zachleat.com/test/writing-mode/\">View the Demo / Test Page</a> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/css3-text-writing-mode/#view-the-demo-%2F-test-page\">#</a></h2> \n<h2 id=\"compatibility-table\">Compatibility Table <a class=\"direct-link\" href=\"http://www.zachleat.com/web/css3-text-writing-mode/#compatibility-table\">#</a></h2> \n<table class=\"compatibility\"> \n <thead> \n  <tr> \n   <th rowspan=\"2\">writing-mode</th> \n   <th colspan=\"3\">Internet Explorer<br>(Trident)</br></th> \n   <th>Mozilla Firefox<br>(Gecko)</br></th> \n   <th>Apple Safari<br>(Webkit)</br></th> \n   <th>Google Chrome<br>(Webkit)</br></th> \n  </tr> \n  <tr> \n   <th>6</th> \n   <th>7</th> \n   <th>8</th> \n   <th>3.6</th> \n   <th>4</th> \n   <th>4</th> \n  </tr> \n </thead> \n <tbody> \n  <tr> \n   <td><code>lr-tb</code></td> \n   <td class=\"yes\">yes</td> \n   <td class=\"yes\">yes</td> \n   <td class=\"yes\">yes</td> \n   <td class=\"yes\">yes</td> \n   <td class=\"yes\">yes</td> \n   <td class=\"yes\">yes</td> \n  </tr> \n  <tr> \n   <td><code>rl-tb</code></td> \n   <td class=\"emulate\">emulatable</td> \n   <td class=\"yes\">yes</td> \n   <td class=\"yes\">yes</td> \n   <td class=\"emulate\">emulatable</td> \n   <td class=\"emulate\">emulatable</td> \n   <td class=\"emulate\">emulatable</td> \n  </tr> \n  <tr style=\"background-color: #eee;\"> \n   <td><code>lr-bt</code></td> \n   <td class=\"no\">no</td> \n   <td class=\"no\">no</td> \n   <td class=\"yes\">yes</td> \n   <td class=\"no\">no</td> \n   <td class=\"no\">no</td> \n   <td class=\"no\">no</td> \n  </tr> \n  <tr style=\"background-color: #eee;\"> \n   <td><code>rl-bt</code></td> \n   <td class=\"no\">no</td> \n   <td class=\"no\">no</td> \n   <td class=\"yes\">yes</td> \n   <td class=\"no\">no</td> \n   <td class=\"no\">no</td> \n   <td class=\"no\">no</td> \n  </tr> \n  <tr> \n   <td><code>tb-lr</code></td> \n   <td class=\"no\">no</td> \n   <td class=\"no\">no</td> \n   <td class=\"yes\">yes</td> \n   <td class=\"no\">no</td> \n   <td class=\"no\">no</td> \n   <td class=\"no\">no</td> \n  </tr> \n  <tr> \n   <td><code>tb-rl</code></td> \n   <td class=\"yes\">yes</td> \n   <td class=\"yes\">yes</td> \n   <td class=\"yes\">yes</td> \n   <td class=\"emulate\">emulatable</td> \n   <td class=\"emulate\">emulatable</td> \n   <td class=\"emulate\">emulatable</td> \n  </tr> \n  <tr> \n   <td><code>bt-lr</code></td> \n   <td class=\"no\">no</td> \n   <td class=\"no\">no</td> \n   <td class=\"yes\">yes</td> \n   <td class=\"no\">no</td> \n   <td class=\"no\">no</td> \n   <td class=\"no\">no</td> \n  </tr> \n  <tr> \n   <td><code>bt-rl</code></td> \n   <td class=\"emulate\">emulatable</td> \n   <td class=\"yes\">yes</td> \n   <td class=\"yes\">yes</td> \n   <td class=\"emulate\">emulatable</td> \n   <td class=\"emulate\">emulatable</td> \n   <td class=\"emulate\">emulatable</td> \n  </tr> \n </tbody> \n</table> \n<h2 id=\"css-code-for-emulation\">CSS Code for Emulation <a class=\"direct-link\" href=\"http://www.zachleat.com/web/css3-text-writing-mode/#css-code-for-emulation\">#</a></h2> \n<h3 id=\"writing-mode%3A-lr-tb\">Writing Mode: <code>lr-tb</code> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/css3-text-writing-mode/#writing-mode%3A-lr-tb\">#</a></h3> \n<pre><code>// Do nothing, this is the default\n</code></pre> \n<h3 id=\"writing-mode%3A-rl-tb\">Writing Mode: <code>rl-tb</code> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/css3-text-writing-mode/#writing-mode%3A-rl-tb\">#</a></h3> \n<pre><code>direction: rtl;\n</code></pre> \n<h3 id=\"writing-mode%3A-lr-bt\">Writing Mode: <code>lr-bt</code> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/css3-text-writing-mode/#writing-mode%3A-lr-bt\">#</a></h3> \n<pre><code>// Not possible using W3C spec\n</code></pre> \n<h3 id=\"writing-mode%3A-rl-bt\">Writing Mode: <code>rl-bt</code> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/css3-text-writing-mode/#writing-mode%3A-rl-bt\">#</a></h3> \n<pre><code>// Not possible using W3C spec\n</code></pre> \n<h3 id=\"writing-mode%3A-tb-lr\">Writing Mode: <code>tb-lr</code> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/css3-text-writing-mode/#writing-mode%3A-tb-lr\">#</a></h3> \n<pre><code>// Not possible using W3C spec\n</code></pre> \n<h3 id=\"writing-mode%3A-tb-rl\">Writing Mode: <code>tb-rl</code> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/css3-text-writing-mode/#writing-mode%3A-tb-rl\">#</a></h3> \n<pre><code>-webkit-transform: rotate(90deg);\n-moz-transform: rotate(90deg);\nfilter: progid:DXImageTransform.Microsoft.BasicImage(rotation=1);\n</code></pre> \n<h3 id=\"writing-mode%3A-bt-lr\">Writing Mode: <code>bt-lr</code> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/css3-text-writing-mode/#writing-mode%3A-bt-lr\">#</a></h3> \n<pre><code>// Not possible using W3C spec\n</code></pre> \n<h3 id=\"writing-mode%3A-bt-rl\">Writing Mode: <code>bt-rl</code> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/css3-text-writing-mode/#writing-mode%3A-bt-rl\">#</a></h3> \n<pre><code>direction: rtl;\n-webkit-transform: rotate(90deg);\n-moz-transform: rotate(90deg);\nfilter: progid:DXImageTransform.Microsoft.BasicImage(rotation=1);\n</code></pre> \n<h2 id=\"conclusion\">Conclusion <a class=\"direct-link\" href=\"http://www.zachleat.com/web/css3-text-writing-mode/#conclusion\">#</a></h2> \n<p>Given that <strong>4 of the 6 known writing modes are available</strong> or available through CSS emulation means we’re in pretty good shape on the internationalization front. Consulting the Microsoft provided table for common use cases, we’re only in trouble when trying to use the “Mongolian script writing system” and an “Arabic script block quote embedded in Mongolian script document.”</p> \n<p>In some far fetched fantasy-world legacy application where a page may use tables for layout, I could see an application team possibly using the <code>direction</code> property to redistribute the tables for a print stylesheet. But that certainly wouldn’t be a common use case, since using CSS for layouts is going to give you much more flexibility in that regard. If you can think of any other off the wall uses for <code>writing-mode</code> or <code>direction</code>, I’d love to hear them!</p> \n<h2 id=\"related\">Related <a class=\"direct-link\" href=\"http://www.zachleat.com/web/css3-text-writing-mode/#related\">#</a></h2> \n<ul> \n <li>Very <a href=\"http://fantasai.inkedblade.net/style/discuss/vertical-text/#logical\">complete article on CSS 3 writing-mode</a>, including some <code>direction</code> properties that don’t exist in the specification (like <code>ttb</code>, <code>ltr-ttb</code>, and <code>ltr-btt</code>)</li> \n <li><a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=writing-mode\">Bugzilla Bug for writing-mode in Firefox</a></li> \n <li>As of the time of this writing, I was unable to find any results for writing-mode on the Webkit bug tracker.</li> \n</ul>","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"0bbe16708d2901f44dc2cb4faf701c2d","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921763},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Two Browsers Walked Into a Scrollbar","link":"http://www.zachleat.com/web/scrollbars/","description":"\n\t\t\t\t<p><em>This content lives somewhere else. It was originally posted at: <a href=\"https://www.filamentgroup.com/lab/scrollbars/\">https://www.filamentgroup.com/lab/scrollbars/</a></em></p>\n\t\t\t\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"21614943332a6b92ee020c3e270becb3","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921772},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"The Web Fonts: Preloaded","link":"http://www.zachleat.com/web/preload/","description":"<p><em><strong>Summary</strong>: If you’re not currently using a font loading strategy, using <code>preload</code> with web fonts will reduce the amount of FOIT visitors will see when they visit your site—paid for by sacrificing initial render time. Don’t preload too much or the cost to initial render will be too high. For devs using a font loading strategy, the same rules apply. Try to only preload a single web font, whether that be the only font in a single stage load or the subset font in the first stage of a two stage load. Further, <code>preload</code> is an improvement over Data URIs for two stage font loads in supporting browsers, and I will be happy to welcome it as a best practice when its browser support grows.</em></p> \n<p>After the recent release of <a href=\"https://github.com/filamentgroup/loadCSS#recommended-usage-pattern\"><code>loadCSS</code> 1.0</a> updated the utility into a <code>&lt;link rel=\"preload\"&gt;</code> polyfill for CSS and <a href=\"https://www.smashingmagazine.com/2016/02/preload-what-is-it-good-for/\">Yoav Weiss’ excellent Smashing Magazine post on <code>preload</code></a>, I decided to experiment with <code>preload</code> to see if it could improve the variety of web font loading approaches I’ve written about in the past.</p> \n<p>Here’s all you need to add to the <code>&lt;head&gt;</code> of your page to start preloading:</p> \n<pre><code>&lt;link rel=\"preload\" href=\"font.woff2\" as=\"font\" type=\"font/woff2\" crossorigin&gt;\n</code></pre> \n<p><span class=\"caption\">via <a href=\"https://www.smashingmagazine.com/2016/02/preload-what-is-it-good-for/\">Preload: What Is It Good For? by Yoav Weiss</a></span></p> \n<p><em>If you have WOFF2 formats in your <code>@font-face</code> block, make sure you preload the WOFF2 format. In fact, you should probably limit preload to the first format in your <code>@font-face</code> <code>src</code> stack. If you <code>preload</code> a WOFF file and have WOFF2 first in your stack, the browser will download both. This is undesirable.</em></p> \n<h2 id=\"benchmarks\">Benchmarks <a class=\"direct-link\" href=\"http://www.zachleat.com/web/preload/#benchmarks\">#</a></h2> \n<p>Let’s look first at the effect of <code>preload</code> on my own site without any font loading strategy:</p> \n<p><em>(Times generated using Chrome Canary’s Developer Tools Network Throttling in Regular 3G mode)</em></p> \n<table> \n <caption>\n  With \n  <code>&lt;link rel=\"preload\"&gt;</code>\n </caption> \n <thead> \n  <tr> \n   <th></th> \n   <th>No Preload</th> \n   <th>Preload Roman</th> \n   <th>and Preload Italic</th> \n   <th>and Preload Bold</th> \n   <th>and Preload Bold Italic</th> \n  </tr> \n </thead> \n <tbody> \n  <tr> \n   <th>Initial Render</th> \n   <td>573ms</td> \n   <td>795ms \n    <div class=\"worse\">\n     (+38%)\n    </div></td> \n   <td>980ms \n    <div class=\"worse\">\n     (+71%)\n    </div></td> \n   <td>1.23s \n    <div class=\"worse\">\n     (+114%)\n    </div></td> \n   <td>1.38s \n    <div class=\"worse\">\n     (+140%)\n    </div></td> \n  </tr> \n  <tr> \n   <th>Roman Loaded</th> \n   <td>2.12s</td> \n   <td>888ms \n    <div class=\"better\">\n     (-138%)\n    </div></td> \n   <td>1.18s \n    <div class=\"better\">\n     (-44%)\n    </div></td> \n   <td>1.42s \n    <div class=\"better\">\n     (-33%)\n    </div></td> \n   <td>1.75s \n    <div class=\"better\">\n     (-17%)\n    </div></td> \n  </tr> \n  <tr> \n   <th>Italic Loaded</th> \n   <td>2.12s</td> \n   <td>1.83s \n    <div class=\"better\">\n     (-13%)\n    </div></td> \n   <td>1.10s \n    <div class=\"better\">\n     (-48%)\n    </div></td> \n   <td>1.33s \n    <div class=\"better\">\n     (-37%)\n    </div></td> \n   <td>1.56s \n    <div class=\"better\">\n     (-26%)\n    </div></td> \n  </tr> \n  <tr> \n   <th>Bold Loaded</th> \n   <td>2.20s</td> \n   <td>1.96s \n    <div class=\"better\">\n     (-10%)\n    </div></td> \n   <td>1.92s \n    <div class=\"better\">\n     (-12%)\n    </div></td> \n   <td>1.46s \n    <div class=\"better\">\n     (-33%)\n    </div></td> \n   <td>1.75s \n    <div class=\"better\">\n     (-20%)\n    </div></td> \n  </tr> \n  <tr> \n   <th>Bold Italic Loaded</th> \n   <td><em>N/A</em></td> \n   <td><em>N/A</em></td> \n   <td><em>N/A</em></td> \n   <td><em>N/A</em></td> \n   <td>1.63s</td> \n  </tr> \n </tbody> \n</table> \n<p>Perhaps obviously, the more fonts you preload the more initial render time suffers. It’s even more interesting when you compare to the numbers I ran on <a href=\"https://www.zachleat.com/web/web-font-data-uris/\">Data URIs</a>.</p> \n<p><em>(Times generated using Chrome Canary’s Developer Tools Network Throttling in Regular 3G mode)</em></p> \n<table id=\"results-compare-preload-data-uri\"> \n <caption>\n  Compare \n  <code>preload</code> with Data URI\n </caption> \n <thead> \n  <tr> \n   <th></th> \n   <th>Default Behavior</th> \n   <th>Inline Roman Data URI</th> \n   <th>Preload Roman</th> \n  </tr> \n </thead> \n <tbody> \n  <tr> \n   <th>Initial Render</th> \n   <td>573ms</td> \n   <td>953ms</td> \n   <td>795ms \n    <div class=\"better\">\n     (-16%)\n    </div></td> \n  </tr> \n  <tr> \n   <th>Roman Loaded</th> \n   <td>2.12s</td> \n   <td>1.01s</td> \n   <td>888ms \n    <div class=\"better\">\n     (-12%)\n    </div></td> \n  </tr> \n  <tr> \n   <th>Italic Loaded</th> \n   <td>2.12s</td> \n   <td>2.05s</td> \n   <td>1.83s \n    <div class=\"better\">\n     (-10%)\n    </div></td> \n  </tr> \n  <tr> \n   <th>Bold Loaded</th> \n   <td>2.20s</td> \n   <td>2.11s</td> \n   <td>1.96s \n    <div class=\"better\">\n     (-7%)\n    </div></td> \n  </tr> \n  <tr> \n   <th>Bold Italic Loaded</th> \n   <td>N/A</td> \n   <td>N/A</td> \n   <td>N/A</td> \n  </tr> \n </tbody> \n</table> \n<p><code>preload</code> affects initial render less than Data URIs and from a maintenance perspective it operates much cleaner. <code>preload</code> improves the performance of all four drawbacks on listed on the <a href=\"https://www.zachleat.com/web/web-font-data-uris/\">Data URI post</a>:</p> \n<ol> \n <li>They don’t directly block render, although as shown above in low bandwidth situations they can delay initial render.</li> \n <li>You can add a <code>type</code> attribute to declare the font format to download. Right now only Chrome Canary has a working implementation of this feature and it also supports WOFF2. But this type attribute protects you if a browser implements <code>preload</code> without a newer font format (or vice versa).</li> \n <li>Works great with browser cache.</li> \n <li>Multiple preloaded fonts load in parallel (although I wouldn’t recommend preloading multiple web fonts).</li> \n</ol> \n<h2 id=\"best-practice%3F\">Best Practice? <a class=\"direct-link\" href=\"http://www.zachleat.com/web/preload/#best-practice%3F\">#</a></h2> \n<p>If the alternative is doing nothing (please don’t), then yes I would recommend preloading the most often used web font on your site. In the example above, <code>Lato-Regular.woff2</code> was 25KB. If you preload more file weight (or more fonts), the tradeoff in initial render time might make it more difficult to accept.</p> \n<h2 id=\"use-with-a-font-loading-strategy\">Use with a Font Loading Strategy <a class=\"direct-link\" href=\"http://www.zachleat.com/web/preload/#use-with-a-font-loading-strategy\">#</a></h2> \n<p><code>preload</code> isn’t a panacea because it’s not sufficient by itself as a font loading strategy. There are two major considerations to font loading: <em>(1)</em> Eliminating the Flash of Invisible Text (FOIT) by showing a Flash of Unstyled Text (FOUT) and <em>(2)</em> Speeding up font loading to minimize the amount of time that fallback text is shown. We want to reduce the jarring reflows that happen when content is re-rendered with our new, shiny web fonts. An ideal strategy would eliminate both FOIT <em>and</em> FOUT.</p> \n<p><code>preload</code> helps our second point but does nothing for the first. We still need to implement a FOUT strategy—of course, my favorite is still <a href=\"https://www.zachleat.com/web/critical-webfonts/\">Critical FOFT</a> with an <a href=\"https://www.zachleat.com/web/web-font-data-uris\">inline Data URI for the first stage</a>. This strategy has shown to eliminate FOIT and FOUT, but at a cost documented above (and in the Data URI post). Let’s see how <code>preload</code> plays out there:</p> \n<p><em>(Times generated using Chrome Canary’s Developer Tools Network Throttling in Regular 3G mode)</em></p> \n<table id=\"results-strategy\"> \n <caption>\n  2-Stage Font Loading Strategies\n </caption> \n <thead> \n  <tr> \n   <th></th> \n   <th>Critical FOFT</th> \n   <th>Critical FOFT Roman Data URI</th> \n   <th>Critical FOFT <code>preload</code></th> \n  </tr> \n </thead> \n <tbody> \n  <tr> \n   <th>Initial Render</th> \n   <td>588ms \n    <div>\n     &nbsp;\n    </div> 58.6KB HTML</td> \n   <td>619ms \n    <div class=\"worse\">\n     (+5%)\n    </div> 65.7KB HTML</td> \n   <td>675ms \n    <div class=\"worse\">\n     (+14%)\n    </div> 58.6KB HTML</td> \n  </tr> \n  <tr> \n   <th>Stage 1 Render \n    <div>\n     (Critical Roman)\n    </div></th> \n   <td>1.04s</td> \n   <td>619ms \n    <div class=\"better\">\n     (-40%)\n    </div></td> \n   <td>675ms \n    <div class=\"better\">\n     (-35%)\n    </div></td> \n  </tr> \n  <tr> \n   <th>Stage 2 Render \n    <div>\n     (Roman, Italic, Bold, Bold Italic)\n    </div></th> \n   <td>2.57s</td> \n   <td>2.44s \n    <div class=\"better\">\n     (-5%)\n    </div></td> \n   <td>2.29s \n    <div class=\"better\">\n     (-10%)\n    </div></td> \n  </tr> \n </tbody> \n</table> \n<p>The results are pretty good for a Two Stage font loading approach. If your web font requirements are a little simpler and you’re only loading a single web font (One Stage font loading), then <code>preload</code> will have a similar beneficial performance gain. However, if you’re loading multiple web fonts in a grouped load (again, One Stage) with a single repaint/reflow step, <code>preload</code> isn’t wise: if you <code>preload</code> one of the fonts, the repaint/reflow will not happen until all web fonts have completed and it will be wasted; if you <code>preload</code> all of them, the sacrifices to initial render are too costly.</p> \n<h2 id=\"conclusion\">Conclusion <a class=\"direct-link\" href=\"http://www.zachleat.com/web/preload/#conclusion\">#</a></h2> \n<p>The benefits to <code>preload</code> for fonts are numerous—especially over the Two Stage Data URI approach. The only nail in the <code>preload</code> coffin now is browser support. Once browser support for this is better, I will definitely switch from using Data URIs in the first stage of Critical FOFT to simply preloading the hosted first stage WOFF2 file (or similarly if you’re only loading a single web font). Always measure the sacrifice in initial render time to determine if this trade-off is worth it for your site.</p> \n<div class=\"retweettoshare\"> \n <h3 class=\"retweettoshare_title\">Retweet to share this post</h3> \n <div class=\"retweettoshare_widget\"> \n  <blockquote class=\"twitter-tweet\" data-lang=\"en\">\n   <p lang=\"en\" dir=\"ltr\">★ The Web Fonts: Preloaded <a href=\"https://t.co/Sk76FYXaIr\">https://t.co/Sk76FYXaIr</a> A look at using `&lt;link rel=\"preload\"&gt;` for web fonts.</p>— Zach Leatherman (@zachleat) \n   <a href=\"https://twitter.com/zachleat/status/720593422063525889\">April 14, 2016</a>\n  </blockquote> \n </div> \n</div>","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"7ef9e3fe6ca5f4e5504aee5280b0afdd","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921767},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Randsom: A Random Web Fonts Ransom Note","link":"http://www.zachleat.com/web/randsom/","description":"<p>This quote from <a href=\"https://twitter.com/sarah_edo\">Sarah Drasner (@sarah_edo)</a> floated into my stream.</p> \n<blockquote class=\"twitter-tweet\" data-lang=\"en\">\n <p lang=\"en\" dir=\"ltr\">“We wouldn’t want to use 30 different fonts and make it look like a ransom note,” — <a href=\"https://twitter.com/sarah_edo\">@sarah_edo</a> <a href=\"https://twitter.com/hashtag/SassSummit?src=hash\">#SassSummit</a></p>— E4H (@e4h) \n <a href=\"https://twitter.com/e4h/status/809128467837157376\">December 14, 2016</a>\n</blockquote> \n<p>I thought, wait—I <em>would</em> want to do that! Let’s build it!</p> \n<ul> \n <li>But instead of 30 web fonts, let’s use 100.</li> \n <li>And we’ll load them in a random order.</li> \n <li>And we’ll get rid of the FOIT for each one.</li> \n <li>And we’ll subset them so that our 100 web fonts only add up to ~100KB total weight.</li> \n <li>And we’ll use <code>vmax</code> (the larger of <code>1vw</code> or <code>1vh</code>) with <code>font-size</code> so the <a href=\"https://css-tricks.com/viewport-sized-typography/\">text scales with the viewport</a>.</li> \n</ul> \n<p><a href=\"https://www.zachleat.com/randsom/\" class=\"exempt\"><img src=\"https://www.zachleat.com/web/img/posts/randsom/screenshot.jpg\" alt=\"Screenshot of Randsom\" class=\"primary\" /></a></p> \n<p class=\"primarylink primarylink-demo\"><a href=\"https://www.zachleat.com/randsom/\">Read the Randsom Note</a></p> \n<p>Randsom has a white list of script-style typefaces gathered from the Google Web Fonts service. For each character in the sample text, we take a random typeface and load a web font containing only that character in the content. Each web font is approximately 1KB (on average).</p> \n<p>We use the CSS Font Loading API to prevent FOIT using the <a href=\"https://www.zachleat.com/web/comprehensive-webfonts/#fout-class\">FOUT with a Class method</a>. After a web font has loaded and displayed for a second, the process is repeated with a new typeface from the list. When all 100 web fonts have been used, no further action is taken on the page.</p> \n<p>Interestingly, originally the script was intended to re-use web fonts from the list, loading different characters with a new request every time in an infinite loop. This probably could have been achieved using <code>unicode-range</code> on the Google Web Fonts <code>@font-face</code> block and in the CSS Font Loading API, coupled with a unique class in the FOUT with a Class font loading method. However—I didn’t take this experiment that far. It simply quits when all the fonts have been used, which seems like a safer method anyway considering an infinite loop could be characterized as a Google Web Fonts DDoS.</p> \n<h2 id=\"with-thanks-to\">With thanks to <a class=\"direct-link\" href=\"http://www.zachleat.com/web/randsom/#with-thanks-to\">#</a></h2> \n<ul> \n <li><a href=\"https://fonts.google.com/\">Google Web Fonts</a> and especially their <a href=\"https://developers.google.com/fonts/docs/getting_started#optimizing_your_font_requests_beta\"><code>text</code> query parameter to subset</a> the web fonts.</li> \n <li><a href=\"https://github.com/filamentgroup/loadCSS/\">Filament Group’s loadCSS</a> to asynchronously load the stylesheets from Google Web Fonts. The web fonts are loaded asynchronously using the <a href=\"http://caniuse.com/#feat=font-loading\">CSS Font Loading API</a>. So if you’re wondering why this looks totally bland in Microsoft Edge—Edge doesn’t support the CSS Font Loading API.</li> \n <li><a href=\"https://github.com/yuanqing/charming\">Charming.js</a>, a no-dependency implementation of <a href=\"https://github.com/davatron5000/Lettering.js\">Lettering.js</a></li> \n</ul> \n<div class=\"retweettoshare\"> \n <h3 class=\"retweettoshare_title\">Retweet to share this post</h3> \n <div class=\"retweettoshare_widget\"> \n  <blockquote class=\"twitter-tweet\" data-conversation=\"none\" data-lang=\"en\">\n   <p lang=\"en\" dir=\"ltr\">★ Randsom, a random web fonts ransom note <a href=\"https://t.co/M0t9lpfpLq\">https://t.co/M0t9lpfpLq</a><br><br>Loading 100 Web Fonts in ~100KB.<br><br>See it at: <a href=\"https://t.co/3J5zG99cyw\">https://t.co/3J5zG99cyw</a></br></br></br></br></p>— Zach Leatherman (@zachleat) \n   <a href=\"https://twitter.com/zachleat/status/848876078353580032\">April 3, 2017</a>\n  </blockquote> \n </div> \n</div>","descriptionType":"html","feedId":12519,"bgimg":"https://www.zachleat.com/web/img/posts/randsom/screenshot.jpg","linkMd5":"28ff93e65c0959a85276b5aca5914618","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn69@2020_5/2020/08/25/02-02-04-021_5c0886276e9cf207.webp","destWidth":1900,"destHeight":1344,"sourceBytes":245156,"destBytes":90344,"author":"","articleImgCdnMap":{"https://www.zachleat.com/web/img/posts/randsom/screenshot.jpg":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn69@2020_5/2020/08/25/02-02-04-021_5c0886276e9cf207.webp"},"publishedOrCreatedDate":1598320921767},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"If the Menu Fitts, We Must Acquit","link":"http://www.zachleat.com/web/if-the-menu-fitts-we-must-acquit/","description":"<p>One of the first things you’ll learn when diving into a self-taught course on usability is the hugely popular Fitts’s Law. In a nutshell, Fitts’s Law tries to predict the time needed to move to a “target area” (usually a link, menu, button, or form element) as a function of the distance to the element and its size. <strong>The bigger/closer the element, the faster a user can move to it.</strong></p> \n<p>Now, upon discovering myself a newly minted Mac OS convert from the hugely popular World of Windows, I quickly discovered that the application menus (File, Edit, etc) were one of the glaring differences I’d have to adjust to. Mac OS had all menus separated from the application window, all the way at the top of the screen. Coming from the Windows environment, this seemed unintuitive. But after reading more about Fitts’s Law, I discovered the reasoning: the <a href=\"http://www.codinghorror.com/blog/2006/08/fitts-law-and-infinite-width.html\">edges of the screen are treated as an infinite height or width</a>! Which is just a way of modifying the Fitts’s Law to say: <strong>the easiest things to click on are at the edges of the screen.</strong> That’s why the close icon or the Start Menu is so easy to access on Windows, and <a href=\"http://www.asktog.com/basics/firstPrinciples.html#fittsLaw\">why the Application Menu is at the top of the screen in Mac OS</a>.</p> \n<p>We know about Fitts’s Law, but <strong>why aren’t we applying it to our web applications?</strong> Why aren’t we using the power of infinite height/width to help out on our designs? It seems like this crucial usability law has been overlooked on the web, and without good reason. Let’s look at a few applications that get it wrong (of course, in my humble opinion).</p> \n<p><img src=\"https://www.zachleat.com/web/wp-content/uploads/2010/02/Screen-shot-2010-02-15-at-11.08.15-PM.png\" alt=\"Wordpress Admin Menu\" title=\"Screen shot 2010-02-15 at 11.08.15 PM\"><img src=\"https://www.zachleat.com/web/wp-content/uploads/2010/02/Screen-shot-2010-02-15-at-11.12.57-PM.png\" alt=\"Google Mail Menu\" title=\"Screen shot 2010-02-15 at 11.12.57 PM\"><img src=\"https://www.zachleat.com/web/wp-content/uploads/2010/02/Screen-shot-2010-02-15-at-11.09.16-PM.png\" alt=\"Google Reader Menu\" title=\"Screen shot 2010-02-15 at 11.09.16 PM\" /></img></img></p> \n<p>All of these screenshots were taken from 100% width designs, with no real reason not to incorporate the ideas behind Fitts’s Law into the menuing system. At first glance when I brought up Google Reader, I was excited. The hover behavior appeared when the mouse cursor was positioned at the very far left of the screen, but was disappointed to discover that the although the hover background color had changed, the entire hover target was not clickable.</p> \n<p>Naturally, I decided to make a test of my own, to test which web browsers allowed <em>Fitts’s Law Menus</em>. The test case encompassed both left and bottom aligned menus, for completeness. A top menu was excluded, given that the top of the screen is reserved for browser chrome or application menuing. A right menu was also excluded as the right portion of the screen is reserved for the page scrollbar (which is the easiest scrollbar to manipulate with your mouse, per the same rules).</p> \n<p>Also, on the Mac OS 10.6 and Windows XP operating systems, a <em>Fitts’s Law Menu</em> at the bottom of the screen is not possible, given that the Dock and Taskbar in these operating systems occupy at least a 4 pixel trough of the bottom-most space on the monitor, even as a hover target in “auto-hide” mode. <strong>Everyone is fighting over these crucial and very useful edge pixels.</strong></p> \n<p>To test whether or not this behavior is working correctly, <strong>maximize your browser window</strong> and <strong>move the cursor as far left on the screen as possible</strong>, but still over the menu. If the links are still clickable, congratulations, your browser works!</p> \n<h2 id=\"view-the-demo-%2F-test-page-for-the-fitts%E2%80%99s-law-menu\"><a href=\"https://www.zachleat.com/test/fittmenu/\">View the Demo / Test Page for the Fitts’s Law Menu</a> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/if-the-menu-fitts-we-must-acquit/#view-the-demo-%2F-test-page-for-the-fitts%E2%80%99s-law-menu\">#</a></h2> \n<h2 id=\"compatibility-table\">Compatibility Table <a class=\"direct-link\" href=\"http://www.zachleat.com/web/if-the-menu-fitts-we-must-acquit/#compatibility-table\">#</a></h2> \n<table class=\"compatibility\"> \n <thead> \n  <tr> \n   <th>Browser</th> \n   <th>Operating System</th> \n   <th>Left Menu</th> \n   <th>Bottom Menu</th> \n   <th>Status Bar</th> \n   <th>Detail</th> \n  </tr> \n </thead> \n <tbody> \n  <tr> \n   <td>Internet Explorer 8</td> \n   <td>Windows XP</td> \n   <td class=\"no\">no</td> \n   <td class=\"no\">no</td> \n   <td>yes</td> \n   <td>IE8 has a small 3 pixel border on the left and right of each window.</td> \n  </tr> \n  <tr> \n   <td>Internet Explorer 7</td> \n   <td>Windows XP</td> \n   <td class=\"no\">no</td> \n   <td class=\"no\">no</td> \n   <td>yes</td> \n   <td>IE7 has a small 3 pixel border on the left and right of each window.</td> \n  </tr> \n  <tr> \n   <td>Internet Explorer 6</td> \n   <td>Windows XP</td> \n   <td class=\"no\">no</td> \n   <td class=\"no\">no</td> \n   <td>yes</td> \n   <td>IE6 has a small 3 pixel border on the left and right of each window.</td> \n  </tr> \n  <tr> \n   <td>Google Chrome</td> \n   <td>Windows XP and Mac OS 10.6</td> \n   <td class=\"yes\">yes</td> \n   <td class=\"no\">no</td> \n   <td>no</td> \n   <td></td> \n  </tr> \n  <tr> \n   <td>Mozilla Firefox 3.5 and 3.6</td> \n   <td>Windows XP and Mac OS 10.6</td> \n   <td class=\"yes\">yes</td> \n   <td class=\"no\">no</td> \n   <td>yes</td> \n   <td></td> \n  </tr> \n  <tr> \n   <td>Safari 4.0.4</td> \n   <td>Windows XP and Mac OS 10.6</td> \n   <td class=\"yes\">yes</td> \n   <td class=\"no\">no</td> \n   <td>no</td> \n   <td></td> \n  </tr> \n </tbody> \n</table> \n<p><em>The full screen mode of each individual browser was considered outside the scope of this study.</em></p> \n<h2 id=\"conclusion\">Conclusion <a class=\"direct-link\" href=\"http://www.zachleat.com/web/if-the-menu-fitts-we-must-acquit/#conclusion\">#</a></h2> \n<p>We should stand on the shoulders of giants and reuse the usability studies already completed on software that has gone before us. The left side of the browser window is the best place to utilize Fitts’s Law, and we should move our left-aligned menus on fluid width designs to occupy the space flush with the window’s edge to increase the speed at which those menus will be accessible by users. Having an infinite width menu is a big click target to hit.</p>","descriptionType":"html","feedId":12519,"bgimg":"https://www.zachleat.com/web/wp-content/uploads/2010/02/Screen-shot-2010-02-15-at-11.08.15-PM.png","linkMd5":"f9847c5aaa037c15d76aa35b45e10a30","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn21@2020_3/2020/08/25/02-02-03-244_5453494333a876bf.webp","destWidth":174,"destHeight":307,"sourceBytes":22660,"destBytes":6608,"author":"","articleImgCdnMap":{"https://www.zachleat.com/web/wp-content/uploads/2010/02/Screen-shot-2010-02-15-at-11.08.15-PM.png":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn21@2020_3/2020/08/25/02-02-03-244_5453494333a876bf.webp","https://www.zachleat.com/web/wp-content/uploads/2010/02/Screen-shot-2010-02-15-at-11.12.57-PM.png":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn33@2020_2/2020/08/25/02-02-10-077_4ce225197cc56720.webp","https://www.zachleat.com/web/wp-content/uploads/2010/02/Screen-shot-2010-02-15-at-11.09.16-PM.png":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn83@2020_1/2020/08/25/02-02-19-216_63437c61ff3794f3.webp"},"publishedOrCreatedDate":1598320921763},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"The JavaScript Testing Challenge","link":"http://www.zachleat.com/web/javascript-tdd/","description":"<p><em><strong>Update 2</strong>: <a href=\"https://www.zachleat.com/web/2011/02/14/javascript-tdd-winner/\">The JavaScript Testing Challenge Winner</a></em></p> \n<p><em><strong>Update</strong>: <a href=\"https://www.zachleat.com/web/2011/01/09/javascript-tdd-update/\">An Update to The JavaScript Testing Challenge</a></em></p> \n<p>Think back to the last time you wrote new code from scratch. Not autogenerated Dreamweaver image hovers or a pasted script from Dynamic Drive, but pure unadulterated new code. What was your process? I’m betting it’s probably similar to: (1) code, (2) switch to a browser, (3) confirm desired behavior for the change you’ve made, and (4) repeat.</p> \n<p>Comrades, let me assure you that there is a better way, and it starts with writing unit tests. As a Front End Engineer that’s been doing it bareback without tests since I started in 1997, let me assure you that adopting automated testing strategies is one of the <strong>single best changes I’ve made to my development cycle</strong> to make myself more productive. Enough fluff. Let’s get started!</p> \n<h2 id=\"testing-environment-setup-in-3-steps\">Testing Environment Setup in 3 Steps <a class=\"direct-link\" href=\"http://www.zachleat.com/web/javascript-tdd/#testing-environment-setup-in-3-steps\">#</a></h2> \n<p>Prerequisite: Java on the classpath</p> \n<ol> \n <li> <p>Download the <a href=\"https://github.com/zachleat/JavaScript-Code-Katas/zipball/master\">JavaScript-Code-Katas Source (ZIP)</a> (or checkout the code from the <a href=\"https://github.com/zachleat/JavaScript-Code-Katas\">Github Repository</a>, if you have git available)</p> </li> \n <li> <p>Extract and browse to it using your operating system’s command line.</p> </li> \n <li> <p>Run (Windows)</p> <p><code>&gt; JsTestDriver.bat Template</code></p> <p>Run (MacOS)</p> <p><code>$ ./JsTestDriver.sh Template</code><br> <em>This script will close Safari (be careful if you’re using Safari in other windows)</em></br></p> </li> \n</ol> \n<p>If a web browser popped up on your screen, congratulations! You have an automated testing environment set up and running. Easy, right?</p> \n<h2 id=\"writing-a-test\">Writing a Test <a class=\"direct-link\" href=\"http://www.zachleat.com/web/javascript-tdd/#writing-a-test\">#</a></h2> \n<p>Now, let’s write our first test!</p> \n<ol> \n <li> <p>Open up <code>templateTest.js</code> in your favorite IDE.</p> </li> \n <li> <p>Add the following: TemplateTest = TestCase('TemplateTest');<br> TemplateTest.prototype.testSample = function()<br> {<br> assertTrue(true);<br> assertFalse(false);<br> assertEquals(true, true);<br> };</br></br></br></br></br></br></p> </li> \n <li> <p>Re-run the JsTestDriver shell script from Step #3 above.</p> </li> \n</ol> \n<p>Now you should see something like the following:</p> \n<pre><code>Total 1 tests (Passed: 1; Fails: 0; Errors: 0) (2.00 ms)\n  Safari 533.18.5 Mac OS: Run 1 tests (Passed: 1; Fails: 0; Errors 0) (2.00 ms)\n</code></pre> \n<p><strong>Notice how you didn’t have to touch any HTML boilerplate code or manually bring up a web browser?</strong> Productivity ensues! You’ve made it this far, are you brave enough to dive into a Code Kata?</p> \n<h2 id=\"prime-factors-code-kata\">Prime Factors Code Kata <a class=\"direct-link\" href=\"http://www.zachleat.com/web/javascript-tdd/#prime-factors-code-kata\">#</a></h2> \n<p>Code Katas are just small programs used as practice. They’re a great way to introduce Test Driven Development and improve proficiency with your IDE.</p> \n<p>The Prime Factors Code Kata requires a function that takes a single integer argument and returns an array of prime factors of that argument in ascending numerical order. For example, passing in <code>8</code> should return <code>2, 2, 2</code>.</p> \n<ul> \n <li><a href=\"https://docs.google.com/present/edit?id=0AVz1CG9ZSGbWZG5iajc4c18zN2R2NzJnZmRq&amp;hl=en&amp;authkey=CO38t6gL\">Original Java version by Uncle Bob Martin</a> (see <a href=\"http://butunclebob.com/ArticleS.UncleBob.ThePrimeFactorsKata\">original post</a>).</li> \n <li><a href=\"https://github.com/zachleat/JavaScript-Code-Katas/blob/master/PrimeFactors/primeFactors.js\">JavaScript implementation of the Prime Factors algorithm</a></li> \n</ul> \n<p>I’ve recorded an unmodified single-take screencast of myself performing the kata below. I’m using the same source code I provided above, but with the <a href=\"http://code.google.com/p/js-test-driver/wiki/UsingTheEclipsePlugin\">JsTestDriver Eclipse plugin</a> instead of using the command line to run the tests. The plugin is great for the screencast, because it very easily shows when the tests are failing or passing. You might also notice that it reruns the tests automatically every time I save.</p> \n<div class=\"fluid-width-video-wrapper\">\n <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/zsCYkmAJBAY\" frameborder=\"0\" allowfullscreen=\"\"></iframe>\n</div> \n<h2 id=\"jstestdriver\">JsTestDriver <a class=\"direct-link\" href=\"http://www.zachleat.com/web/javascript-tdd/#jstestdriver\">#</a></h2> \n<p>If you want to learn more a about JsTestDriver, check out their <a href=\"http://code.google.com/p/js-test-driver/\">Google Code</a> page. “But I use QUnit!” you say. That’s fine, <a href=\"http://code.google.com/p/js-test-driver/wiki/QUnitAdapter\">there is an adaptor for that</a>. Using both tools together, you won’t need to launch each individual browser manually and trigger the tests to start. It will save you time.</p> \n<p>In the interest of full disclosure, here are the issues I’ve ran into so far using JsTestDriver:</p> \n<ul> \n <li>Doesn’t apply CSS in some browsers. <a href=\"http://code.google.com/p/js-test-driver/issues/detail?id=81\">Issue #81</a></li> \n <li>Defaults to quirks mode. <a href=\"http://code.google.com/p/js-test-driver/issues/detail?id=79\">Issue #79</a></li> \n</ul> \n<h2 id=\"challenge\">Challenge <a class=\"direct-link\" href=\"http://www.zachleat.com/web/javascript-tdd/#challenge\">#</a></h2> \n<p>Testing will help you. It will improve your the quality of your code and your productivity. I challenge you to practice the JavaScript Prime Factors Code Kata in your own IDE with your own automated testing process. Send a link to me on Twitter (<a href=\"http://twitter.com/zachleat\">@zachleat</a>) with an unmodified single-take screencast of you performing the kata (in JavaScript) by December 25, 2010 and <strong>the fastest kata screencast will win a copy of <a href=\"http://tddjs.com/\">Test-Driven JavaScript Development</a></strong> by <a href=\"http://twitter.com/cjno/\">Christian Johansen</a> (PDF or Print version, your choice*).</p> \n<p><a href=\"http://screenr.com/\">Screenr</a> is a great tool for recording screencasts, if you need one.</p> \n<p>Good luck!</p> \n<p><em>Coding must follow every step performed by myself in the above version. Templates and keyboard shortcuts can be used at your leisure, but no code can be generated specific to the kata itself (it must be a generic). Use your best judgement here, I reserve the right to disqualify any entries submitted that don’t follow the true spirit of the competition.</em></p> \n<p><em>Don’t fuck with the speed of the video. I’m spending my own money on this, so if you’re cheating then you’re just stealing from me. Just be cool about it, okay?</em></p> \n<p><em>The Print version of the prize is restricted to USA or Canada, PDF version is available internationally (unless you want to work something out for shipping costs).</em></p>","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"678a4bbfea985265598625aa1ff27d10","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921763},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Eleventy Quick Tip №7: Fetch GitHub Stargazers Count (and More) at Build Time","link":"http://www.zachleat.com/web/eleventy-quicktip-7/","description":"\n\t\t\t<blockquote>\n<p>Older iterations of this website used a third party JavaScript widget to show the number of GitHub Stars the project currently had. This was in fact the only <code>&lt;script&gt;</code> tag on the entire <a href=\"http://11ty.io/\">11ty.io</a> web site and it was from a third party. Naturally, it needed to be annihilated.</p>\n</blockquote>\n<p><em>Originally posted at: <a href=\"https://www.11ty.io/docs/quicktips/eliminate-js/\">https://www.11ty.io/docs/quicktips/eliminate-js/</a></em></p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"1cb5b11ef56fced6185b888484a1abcd","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921771},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Introducing Eleventy, a new Static Site Generator","link":"http://www.zachleat.com/web/introducing-eleventy/","description":"<p> \n <div class=\"primarylink\">\n  <a href=\"https://www.11ty.io/\">11ty.io</a>\n </div> \n <div class=\"primarylink\">\n  <a href=\"https://github.com/11ty/eleventy\">eleventy on GitHub</a>\n </div> </p> \n<hr> \n <p>Eleventy is a new static site generator.</p> \n <p><em>If you’re not familiar with static site generators and their benefits, check out this great Smashing Magazine post: <a href=\"https://www.smashingmagazine.com/2015/11/modern-static-website-generators-next-big-thing/\">Why Static Site Generators Are The Next Big Thing</a> from <a href=\"https://twitter.com/biilmann\">@biilmann</a>.</em></p> \n <p>Another static site generator? Yes. But why? Fair question.</p> \n <p>Eleventy was created for three reasons:</p> \n <ul> \n  <li>Flexibility</li> \n  <li>Betting on JavaScript</li> \n  <li>Not a JavaScript Framework</li> \n </ul> \n <h2 id=\"flexibility\">Flexibility <a class=\"direct-link\" href=\"http://www.zachleat.com/web/introducing-eleventy/#flexibility\">#</a></h2> \n <h3 id=\"templating-engine-flexibility\">Templating engine flexibility <a class=\"direct-link\" href=\"http://www.zachleat.com/web/introducing-eleventy/#templating-engine-flexibility\">#</a></h3> \n <p>Eleventy allows you to mix and match templating engines to allow easy migration of existing content. Your content templates can use a different templating engine than your layout files!</p> \n <p><em>Linda is a web developer that does client work (get that money, Linda). Linda maintains a set of cross-project docs that she delivers alongside her front end components and templates. Linda has coded her docs using the Liquid templating engine in Jekyll. Now Linda has a client that wants her to deliver her components as Mustache templates. Easy. Linda switches from Jekyll to Eleventy because Eleventy can do both side-by-side. Good job, Linda.</em></p> \n <table> \n  <thead> \n   <tr> \n    <th>Static Site Generator</th> \n    <th><a href=\"http://staticgen.com/\">staticgen.com</a> Rating</th> \n    <th>Templating Engine</th> \n   </tr> \n  </thead> \n  <tbody> \n   <tr> \n    <td>Jekyll</td> \n    <td>#1</td> \n    <td>Liquid</td> \n   </tr> \n   <tr> \n    <td>Hugo</td> \n    <td>#2</td> \n    <td>Go Templates</td> \n   </tr> \n   <tr> \n    <td>Hexo</td> \n    <td>#3</td> \n    <td>EJS, Pug</td> \n   </tr> \n   <tr> \n    <td>Gatsby</td> \n    <td>#4</td> \n    <td>React.js</td> \n   </tr> \n  </tbody> \n </table> \n <p>Eleventy currently supports:</p> \n <ul> \n  <li>HTML</li> \n  <li><a href=\"https://github.com/markdown-it/markdown-it\">Markdown</a></li> \n  <li><a href=\"https://www.npmjs.com/package/liquidjs\">Liquid</a> (used by Jekyll)</li> \n  <li><a href=\"https://mozilla.github.io/nunjucks/\">Nunjucks</a></li> \n  <li><a href=\"https://github.com/wycats/handlebars.js\">Handlebars</a></li> \n  <li><a href=\"https://github.com/janl/mustache.js/\">Mustache</a></li> \n  <li><a href=\"https://www.npmjs.com/package/ejs\">EJS</a></li> \n  <li><a href=\"https://github.com/tj/haml.js\">Haml</a></li> \n  <li><a href=\"https://github.com/pugjs/pug\">Pug</a></li> \n  <li>JavaScript Template Literals (ES2015)</li> \n </ul> \n <h3 id=\"directory-structure-flexibility\">Directory Structure Flexibility <a class=\"direct-link\" href=\"http://www.zachleat.com/web/introducing-eleventy/#directory-structure-flexibility\">#</a></h3> \n <p>Eleventy wants to work with your project’s existing directory structure. We don’t require your content files to live in a <code>_posts</code> directory or a <code>scaffold</code> or <code>source</code> folder (unless you want them to). You tell Eleventy where your files are and we’ll work with you.</p> \n <p>Just running <code>eleventy</code> will process files in the current directory and output to a <code>_site</code> folder. Customize this with <code>--input</code> and <code>--output</code>.</p> \n <h4 id=\"finds-files-in-current-directory-and-outputs-to-a-_site-folder\">Finds files in current directory and outputs to a _site folder <a class=\"direct-link\" href=\"http://www.zachleat.com/web/introducing-eleventy/#finds-files-in-current-directory-and-outputs-to-a-_site-folder\">#</a></h4> \n <pre class=\"language-bash\"><code class=\"language-bash\">eleventy</code></pre> \n <h4 id=\"finds-files-in-src-directory-and-outputs-to-a-_gh_pages-folder\">Finds files in src directory and outputs to a _gh_pages folder <a class=\"direct-link\" href=\"http://www.zachleat.com/web/introducing-eleventy/#finds-files-in-src-directory-and-outputs-to-a-_gh_pages-folder\">#</a></h4> \n <pre class=\"language-bash\"><code class=\"language-bash\">eleventy --input<span class=\"token operator\">=</span>src --output<span class=\"token operator\">=</span>_gh_pages</code></pre> \n <h4 id=\"finds-files-in-current-directory-and-outputs-to-current-directory\">Finds files in current directory and outputs to current directory <a class=\"direct-link\" href=\"http://www.zachleat.com/web/introducing-eleventy/#finds-files-in-current-directory-and-outputs-to-current-directory\">#</a></h4> \n <pre class=\"language-bash\"><code class=\"language-bash\">eleventy --input<span class=\"token operator\">=</span>. --output<span class=\"token operator\">=</span>.</code></pre> \n <h4 id=\"i-only-want-to-transform-one-file\">I only want to transform one file <a class=\"direct-link\" href=\"http://www.zachleat.com/web/introducing-eleventy/#i-only-want-to-transform-one-file\">#</a></h4> \n <p>Eleventy can work as a small utility function to do one-off files too. This will transform <code>README.md</code> into <code>README.html</code>.</p> \n <pre class=\"language-bash\"><code class=\"language-bash\">eleventy --input<span class=\"token operator\">=</span>README.md --output<span class=\"token operator\">=</span>.</code></pre> \n <h2 id=\"bet-on-javascript\">Bet on JavaScript <a class=\"direct-link\" href=\"http://www.zachleat.com/web/introducing-eleventy/#bet-on-javascript\">#</a></h2> \n <p>Always bet on JavaScript. JavaScript gives you access to npm. The npm ecosystem is large. Crazy large. And it’s only growing in popularity. According to <a href=\"http://www.modulecounts.com/\">modulecounts.com</a>, npm has almost three times the modules of its second place competitor, Maven Central (Java). When you want to add functionality, it’s a good bet that a module exists on npm.</p> \n <table> \n  <thead> \n   <tr> \n    <th>Static Site Generator</th> \n    <th>Language</th> \n    <th>Module Count</th> \n   </tr> \n  </thead> \n  <tbody> \n   <tr> \n    <td>Jekyll</td> \n    <td>Ruby</td> \n    <td>~140,000 on <a href=\"http://rubygems.org/\">rubygems.org</a></td> \n   </tr> \n   <tr> \n    <td>Hugo</td> \n    <td>Go</td> \n    <td>~20,000 on Gopm</td> \n   </tr> \n   <tr> \n    <td>Hexo</td> \n    <td>JavaScript</td> \n    <td>~580,000 on npm</td> \n   </tr> \n   <tr> \n    <td>Gatsby</td> \n    <td>JavaScript</td> \n    <td>~580,000 on npm</td> \n   </tr> \n  </tbody> \n </table> \n <h2 id=\"eleventy-is-not-a-javascript-framework\">Eleventy is not a JavaScript Framework <a class=\"direct-link\" href=\"http://www.zachleat.com/web/introducing-eleventy/#eleventy-is-not-a-javascript-framework\">#</a></h2> \n <p>While Eleventy uses JavaScript in node.js to transform templates into content, importantly (by default) it does not recommend nor force your HTML to include any Eleventy-specific client-side JavaScript. This is a core facet of the project’s intent and goals. We are not a JavaScript framework. We want our content decoupled as much as possible from Eleventy altogether, and because Eleventy uses templating engines that are Eleventy-independent, it gets us much closer to that goal.</p> \n <p>We may include some form of project-specific client-side JavaScript in the future but it will be opt-in only and <em>not a project default</em>. Of course, you may include your own project’s client-side JavaScript at the pleasure of your use case and requirements.</p> \n <p>Just a fair warning—always analyze the output of static site generators, especially ones that are tightly coupled to JavaScript frameworks. Most JavaScript frameworks include opinionated client-side JavaScript, even when using server-side rendering. Those libraries can be hefty, sometimes blocking your critical path or causing unnecessarily network congestion in your critical path with <code>preload</code>. Performance is critical. Static files can offer amazing performance. To maintain that performance edge, Eleventy allows you to have full control over what and how JavaScript is included in your content.</p> \n <h2 id=\"try-it-out!\">Try it out! <a class=\"direct-link\" href=\"http://www.zachleat.com/web/introducing-eleventy/#try-it-out!\">#</a></h2> \n <p>I hope you’ll give Eleventy a try! Install it!</p> \n <pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> -g @11ty/eleventy</code></pre> \n <p>Check out the tutorials on <a href=\"https://www.11ty.io/\">11ty.io</a>. Let me know what you like or don’t like about it! I’d love to hear your feedback.</p> \n <p>One of the smallest but nicest things you can do for the project is to <a href=\"https://github.com/11ty/eleventy\">star it on GitHub</a>. The big giant list of static site generators on <a href=\"https://www.staticgen.com/\">staticgen.com</a> is ordered by GitHub stars, so that will help our ranking out a lot. Thank you!</p> \n</hr>","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"18db6bc02fae171f5a6e4adc6a890943","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921770},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Using Custom Fonts Responsibly, an Akamai Animated Short","link":"http://www.zachleat.com/web/akamai-custom-fonts/","description":"\n\t\t\t<p>In this short animated feature that was created working with friends at Akamai, I describe some of the perceived performance issues associated with web fonts. Perhaps you might be able to tell: this is not my voice.</p>\n<div class=\"fullwidth\"><div class=\"fluid-width-video-wrapper\"><iframe class=\"youtube-player\" src=\"https://www.youtube.com/embed/7BqaqTkvC0I\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\"></iframe></div></div>\n<p><em>The <a href=\"https://www.youtube.com/watch?v=7BqaqTkvC0I\">video is hosted on YouTube</a>.</em></p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"7afdf7a540d5aab02dcd299c4a620101","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921765},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Don&#8217;t Let the Door Hit You Onunload and Onbeforeunload","link":"http://www.zachleat.com/web/dont-let-the-door-hit-you-onunload-and-onbeforeunload/","description":"\n\t\t\t<p>Many people attempt a last ditch effort to save page state in the browser by using the onunload or onbeforeunload events. This has been studied at great length by <a href=\"http://www.hunlock.com/blogs/Mastering_The_Back_Button_With_Javascript\">Patrick Hunlock</a>, who uses the perhaps now common knowledge of using a Synchronous Ajax call to perform the page state save.</p>\n<p>Another use for the onbeforeunload event to allow the user to cancel the action that initiated the user leaving in the first place. Gmail uses this technique when the user is in the middle of writing a draft of an e-mail and attempts to leave the page.</p>\n<p><img src=\"https://www.zachleat.com/web/wp-content/uploads/2008/04/gmail-confirm.png\" alt=\"\"></p>\n<p><em>Gmail pops up this prompt when the user attempts to leave the page while drafting an email.</em></p>\n<p>Worthy to note, however, is that Opera <a href=\"http://www.quirksmode.org/bugreports/archives/2004/11/load_and_unload.html\">doesn’t fire the unload event</a> when the browser refreshes the page, or uses the back/forward buttons to browse off of the page (I had no success with the fix posted in the comments on that page). What’s worse, Opera never fires the onbeforeunload event. This creates a serious problem with attempting to save page state prior to a user leaving your page.</p>\n<p>Browser support aside, I believe that the onbeforeunload prompt is not an ideal way to protect the user from lost work (or unsaved page state). Humanized has argued, and I agree, that <a href=\"http://www.alistapart.com/articles/neveruseawarning\">an undo operation is much easier on the end user than a warning message</a>. The strange thing is, Gmail could save the draft in a synchronous Ajax request in the onunload event. They aren’t using the prompt to save Opera users from losing their drafts, since the Opera web browser doesn’t even fire the onbeforeunload event. (Interestingly enough, they are using some sort of browser history management to fire a warning to the user when they press back, or forward, in Opera — but Reload can’t be caught using this method, so your draft email could be lost).</p>\n<p>From a User Interface design standpoint, I would recommend just sticking with onunload. You can still perform your synchronous Ajax call in the method to save the state of your page, so that the user can later resume their state or undo the operation. (Except for Back/Forward/Refresh in Opera, until they support a better onunload or any onbeforeunload). The onbeforeunload prompt is an unnecessary evil, and doesn’t do much besides annoy the end user with another warning message and a mouse click.</p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"https://www.zachleat.com/web/wp-content/uploads/2008/04/gmail-confirm.png","linkMd5":"2fb8e7d68f21e9930833e51d2f4526f5","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn21@2020_5/2020/08/25/02-02-02-649_75c0d1b2efb50680.webp","destWidth":455,"destHeight":157,"sourceBytes":13064,"destBytes":7864,"author":"","articleImgCdnMap":{"https://www.zachleat.com/web/wp-content/uploads/2008/04/gmail-confirm.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn21@2020_5/2020/08/25/02-02-02-649_75c0d1b2efb50680.webp"},"publishedOrCreatedDate":1598320921761},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Javascript Objects are NOT JSON","link":"http://www.zachleat.com/web/javascript-objects-are-not-json/","description":"<p><em>The headline should more accurately read “Javascript Objects are not <strong>necessarily</strong> JSON.” But that waters it down a bit, don’t you think?</em></p> \n<p>I know this has been posted a few times before, but this is not something I knew until recently, and after learning it, have noticed quite a few other people doing it wrong as well. So, to risk adding another reverb to the echo chamber, I’ll post a link to a <a href=\"http://www.thefutureoftheweb.com/blog/json-is-not-just-object-notation\">good explanation</a> by Jesse Skinner on the specifics of the JSON specification.</p> \n<p>The main point here is that <strong>all object keys and strings in JSON must have double quotes.</strong> I encourage you to look through the <a href=\"http://json.org/\">train track specification</a> to verify for yourself.</p> \n<p>If you try to use Captain <a href=\"http://www.json.org/json2.js\">Crockford’s JSON Parser</a>, it won’t parse your string with single quotes or (un/single)-quoted object keys. His parser has a nice regex checker built-in (and a walker callback to let you parse date strings into Date() objects). It’s a good way to verify that external data, or a data source not under your control, is safe to eval and use in your own code.</p> \n<p>Here are a few quick examples:</p> \n<h2 id=\"valid-json\">Valid JSON <a class=\"direct-link\" href=\"http://www.zachleat.com/web/javascript-objects-are-not-json/#valid-json\">#</a></h2> \n<pre><code>{\"myKey\": \"myString\"}\n</code></pre> \n<p>Don’t use single quotes. Don’t use unquoted object keys.</p> \n<h2 id=\"invalid-json\">Invalid JSON <a class=\"direct-link\" href=\"http://www.zachleat.com/web/javascript-objects-are-not-json/#invalid-json\">#</a></h2> \n<pre><code>{myKey: \"myString\"}\n{'myKey': 'myString'}\n</code></pre> \n<p>Credits to Jonathan Snook for the <a href=\"http://www.snook.ca/archives/javascript/json_is_a_subse/\">initial write-up</a> and Crockford for formalizing JSON.</p>","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"c427a521c8456dc230a5f8872503d852","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921761},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Conservative Design Example: Hierarchical Options","link":"http://www.zachleat.com/web/conservative-design-example-hierarchical-options/","description":"\n\t\t\t<p>Welcome, one and all, to the second installment of actual code examples for the Conservative Design series. The decision was made (by me) to rename the component in question from the original Hierarchical Select to Hierarchical Options, due to the fact that the hierarchy can consist of any multiple option component, and is not limited to just a select. And to this face, this particular component was documented in the original post entitled <a href=\"https://www.zachleat.com/web/2007/02/22/conservative-design-hierarchical-select-boxes/\">Conservative Design: Hierarchical Select Boxes</a>.</p>\n<p><a href=\"http://www.zachleat.com/Projects/valdi/hierarchicalOptions.html\" title=\"Hierarchical Options\"><img src=\"https://www.zachleat.com/web/wp-content/uploads/2007/03/hierarchical.gif\" alt=\"Hierarchical Options\"></a><br>\nClick the image above to go to the example.</p>\n<p>Notes on the example: The Tree structure is as follows:</p>\n<ul>\n<li>Primary\n<ul>\n<li>Secondary\n<ul>\n<li>Tertiary\n<ul>\n<li>Quaternary\n<ul>\n<li>Quinary</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>2nd Tertiary (is a static element that doesn’t hide)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>So without further adieu or out of place french, what do we have? 3 out of 4 requirements and 1 of 2 luxury items.</p>\n<ul>\n<li>Handles any number of select elements in a linear or tree (luxury item) like structure.</li>\n<li>Child select elements are optional based on parent selection. Can hide entire div element or display a message stating no options are available.</li>\n<li>Compliant with the Reset button.</li>\n<li>Right now only loads from standard HTML markup (not yet from JavaScript or JSON or an XMLHTTPRequest)</li>\n<li>Only supports Select elements for now, in the future should be abstracted to support Checkbox Lists or any multiple option component.</li>\n</ul>\n<p><strong>Outstanding Bugs</strong>:</p>\n<ul>\n<li>Opera button doesn’t reset properly with Reset Button</li>\n<li>Clicking off of the default and then back onto the default has the original selections downstream (but doesn’t propagate more than one level)</li>\n</ul>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"https://www.zachleat.com/web/wp-content/uploads/2007/03/hierarchical.gif","linkMd5":"7102210e78fb674afc8fbe9ea827bc93","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn30@2020_4/2020/08/25/02-02-03-790_05b78a2069a4c85c.webp","destWidth":449,"destHeight":418,"sourceBytes":11803,"destBytes":11442,"author":"","articleImgCdnMap":{"https://www.zachleat.com/web/wp-content/uploads/2007/03/hierarchical.gif":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn30@2020_4/2020/08/25/02-02-03-790_05b78a2069a4c85c.webp"},"publishedOrCreatedDate":1598320921760},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"A look back at NEJS CONF, 2015–2019","link":"http://www.zachleat.com/web/nejsconf/final/","description":"<p><em>Originally presented at NEJS CONF 2019 in Omaha, NE USA 🇺🇸 on August 8, 2019</em></p> \n<p>This was, sadly, NEJS CONF’s last year. Our incredible and fearless organizer team put on five amazing events. I wanted to do a short recap of the special things we’ve done at NEJS CONF over those five years as a capstone to our five year run.</p> \n<div class=\"fullwidth\">\n <div class=\"fluid-width-video-wrapper\">\n  <iframe class=\"youtube-player\" src=\"https://www.youtube.com/embed/dqT5sDhNK90\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\"></iframe>\n </div>\n</div> \n<h2 id=\"slides\">Slides <a class=\"direct-link\" href=\"http://www.zachleat.com/web/nejsconf/final/#slides\">#</a></h2> \n<p>Download a <a href=\"https://www.zachleat.com/presentations/2019-nejsconf-finale.pdf\">locally hosted PDF copy of the slides</a>.</p> \n<p>This talk is also <a href=\"https://noti.st/zachleat/UZNqr1/nejs-conf-2015-2019\">on Not.ist</a>, which you can preview below:</p> \n<div class=\"fullwidth\">\n <div class=\"fluid-width-video-wrapper\">\n  <iframe src=\"https://noti.st/zachleat/UZNqr1/embed\" frameborder=\"0\" allowfullscreen=\"\"></iframe>\n </div>\n</div>","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"0928a3caf94b32ee7f3f028c94c43ffb","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921772},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Namespaces in Ext DomQuery","link":"http://www.zachleat.com/web/namespaces-in-ext-domquery/","description":"\n\t\t\t<p>Do you want to use <a href=\"http://unspace.ca/discover/attributes/\">custom attributes</a> in your XHTML? Do you use the YUI Library and Jack Slocum’s wonderful <a href=\"http://www.jackslocum.com/blog/2007/01/11/domquery-css-selector-basic-xpath-implementation-with-benchmarks/\">DomQuery selector engine</a>?</p>\n<p>If you want to select attribute nodes with a namespace in your XHTML, DomQuery does not support namespaces as an option to do so. But by adding a small snippet of code to DomQuery, we can make it do so.</p>\n<p>As a standalone snippet executed after DomQuery is loaded.</p>\n<pre><code>Ext.DomQuery.matchers.push( {\n  re: /^(?:([\\[\\{])(?:@)?([\\w-]+(?:\\:[\\w-]+))\\s?(?:(=|.=)\\s?['&quot;]?(.*?)[&quot;']?)?[\\]\\}])/,\n  select: 'n = byAttribute(n, &quot;{2}&quot;, &quot;{4}&quot;, &quot;{3}&quot;, &quot;{1}&quot;);'\n} );\n</code></pre>\n<p><strong>OR</strong> by adding an array entry into the DomQuery code matchers array (paste <em>after</em> line 479 of the <a href=\"http://www.yui-ext.com/deploy/yui-ext.0.40-alpha/source/DomQuery.js\">17 January 2007 2:26:32 PM version</a>)</p>\n<pre><code>,{\n  re: /^(?:([\\[\\{])(?:@)?([\\w-]+(?:\\:[\\w-]+))\\s?(?:(=|.=)\\s?['&quot;]?(.*?)[&quot;']?)?[\\]\\}])/,\n  select: 'n = byAttribute(n, &quot;{2}&quot;, &quot;{4}&quot;, &quot;{3}&quot;, &quot;{1}&quot;);'\n}\n</code></pre>\n<p>I did not modify the existing matcher for attribute selection because I didn’t want to modify the speed of the existing code for non-namespaced attributes. So by appending another entry to the end of the array, it’ll be used as a last resort if the other entries aren’t matched.</p>\n<p>This approach relies on the assumption that when selecting an attribute with getAttribute, the browser interprets any namespace automatically: getAttribute(‘myNamespace:myAttributeName’), as documented by the <a href=\"http://blogger.xs4all.nl/peterned/archive/2005/12/11/70033.aspx\">peterned weblog</a>. This was tested in Firefox 2 and IE 6.</p>\n<p><strong>Usage:</strong></p>\n<pre><code>Ext.query( '#test-data span[myNameSpace:myAttribute=myValue]' );\n</code></pre>\n<p>on the following DOM</p>\n<pre><code>&lt;div id=&quot;test-data&quot;&gt;\n&lt;span myNameSpace:myAttribute=&quot;myValue&quot;&gt;&lt;/span&gt;\n&lt;/div&gt;\n</code></pre>\n<p>Other notes regarding DomQuery:</p>\n<p>To select a node with a non-empty attribute value:</p>\n<pre><code>Ext.query( '#test-data span[myNameSpace:myAttribute]' );\n</code></pre>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"1fe2d3dc0f7a66163f3cef06f4b27925","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921760},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Making a Simple Web Site with the Simplest Static Site Generator, Level 1","link":"http://www.zachleat.com/web/eleventy-tutorial-level-1/","description":"\n\t\t\t\n<p><em>Introducing </em><a href=\"https://github.com/11ty/eleventy/\" rel=\"nofollow noopener\"><em>Eleventy</em></a><em>, the simplest and most intuitive static site generator. With Eleventy, you can build data-driven sites quickly and easily — focused on long lasting content that’s easy to maintain. </em><strong><em>Make your website last 10 years, not 10 months.</em></strong></p>\n<ul>\n  <li>Level 1—Data driven templates (You are here)</li>\n  <li><a href=\"https://www.zachleat.com/web/eleventy-tutorial-level-2/\">Level 2—Adding filters</a></li>\n</ul>\n\n<hr>\n<div class=\"section-content\">\n\t<div class=\"section-inner sectionLayout--insetColumn\">\n\t\t<h3 class=\"graf graf--h3 graf-after--p\" id=\"2fc8\">Installation</h3>\n\t\t<ol class=\"postList\">\n\t\t\t<li class=\"graf graf--li graf-after--h3\" id=\"0d04\">If you don’t already have it, <a class=\"markup--anchor markup--li-anchor\" data-href=\"https://docs.npmjs.com/getting-started/installing-node\" href=\"https://docs.npmjs.com/getting-started/installing-node\" rel=\"noopener\" target=\"_blank\">install node.js and npm</a> (they’re available as a single package). Eleventy requires at least a<code class=\"markup--code markup--li-code\">node --version</code> of 8.0.0 or higher.\n\t\t\t</li>\n\t\t\t<li class=\"graf graf--li graf-after--li\" id=\"214f\">Next, install the Eleventy command line utility, available on the lovely <a class=\"markup--anchor markup--li-anchor\" data-href=\"https://www.npmjs.com/package/@11ty/eleventy\" href=\"https://www.npmjs.com/package/@11ty/eleventy\" rel=\"noopener\" target=\"_blank\">npm</a>: <code class=\"markup--code markup--li-code\">npm install -g @11ty/eleventy</code>\n\t\t\t</li>\n\t\t</ol>\n\t\t<h3 class=\"graf graf--h3 graf-after--li\" id=\"53d5\">Getting Started</h3>\n\t\t<p class=\"graf graf--p graf-after--h3\" id=\"4c96\">Let’s make a web site for our GIF collection. A front end for our own personal <a class=\"markup--anchor markup--p-anchor\" data-href=\"https://bukk.it/\" href=\"https://bukk.it/\" rel=\"noopener\" target=\"_blank\">bukk.it</a>. Let’s call it Giffleball.</p>\n\t\t<p class=\"graf graf--p graf-after--p\" id=\"16dd\">Full finished source code for Level 1 of this tutorial is <a class=\"markup--anchor markup--p-anchor\" data-href=\"https://github.com/11ty/giffleball/tree/level-1\" href=\"https://github.com/11ty/giffleball/tree/level-1\" rel=\"noopener\" target=\"_blank\">available on GitHub</a>.</p>\n\t\t<h4 class=\"graf graf--h4 graf-after--p\" id=\"69fe\">Create the&nbsp;files</h4>\n\t\t<p class=\"graf graf--p graf-after--h4\" id=\"aa1b\">Make a directory for our beautiful new web site. <em class=\"markup--em markup--p-em\">(Do not include the</em> <code class=\"markup--code markup--p-code\"><em class=\"markup--em markup--p-em\">~ $</em></code> <em class=\"markup--em markup--p-em\">when running the command)</em></p>\n<pre class=\"language-text\"><code class=\"language-text\">~ $ mkdir giffleball</code></pre>\n\t\t<p class=\"graf graf--p graf-after--pre\" id=\"6201\">Let’s add some images to our site. Attached here are a choice selection of bird-themed GIF-gems from the esteemed bukk.it itself.</p>\n\t</div>\n\n\t<div class=\"section-inner sectionLayout--insetColumn\">\n\t\t<figure class=\"graf graf--figure graf-after--figure\" id=\"3282\">\n\t\t\t<img class=\"graf-image\" data-height=\"25\" data-image-id=\"1*E9LIfVl7pcVu3_moXc743w.gif\" data-width=\"35\" src=\"https://cdn-images-1.medium.com/max/800/1*E9LIfVl7pcVu3_moXc743w.gif\">\n\t\t\t<figcaption class=\"imageCaption\">\n\t\t\t\tvia <a class=\"markup--anchor markup--figure-anchor\" data-href=\"https://bukk.it/parrot.gif\" href=\"https://bukk.it/parrot.gif\" rel=\"nofollow noopener\" target=\"_blank\">https://bukk.it/parrot.gif</a>\n\t\t\t</figcaption>\n\t\t</figure>\n\t\t<p class=\"graf graf--p graf-after--figure\" id=\"deca\">Save these image files into an <code class=\"markup--code markup--p-code\">img</code> folder inside of our<code class=\"markup--code markup--p-code\">giffleball</code> directory.</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"highlight-line\">giffleball/</span><br><ins class=\"highlight-line highlight-line-add\">  img/             *new</ins><br><ins class=\"highlight-line highlight-line-add\">    ???.jpg        *new</ins><br><ins class=\"highlight-line highlight-line-add\">    ….jpg          *new</ins><br><ins class=\"highlight-line highlight-line-add\">    parrot.gif     *new</ins></code></pre>\n\t\t<h4 class=\"graf graf--h4 graf-after--pre\" id=\"8627\">Create a&nbsp;template</h4>\n\t\t<p class=\"graf graf--p graf-after--h4\" id=\"d26f\">Let’s make a template! Create a file called <code class=\"markup--code markup--p-code\">index.html</code> in the <code class=\"markup--code markup--p-code\">giffleball</code> directory.</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"highlight-line\">giffleball/</span><br><ins class=\"highlight-line highlight-line-add\">  index.html       *new</ins><br><span class=\"highlight-line\">  img/</span><br><span class=\"highlight-line\">  \t???.jpg</span><br><span class=\"highlight-line\">    ….jpg</span><br><span class=\"highlight-line\">    parrot.gif</span></code></pre>\n\t\t<p class=\"graf graf--p graf-after--pre\" id=\"46a4\">Let’s add a list with some links to our GIFS to the <code class=\"markup--code markup--p-code\">index.html</code> file:</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"highlight-line\"><span class=\"token doctype\">&lt;!doctype html></span></span><br><span class=\"highlight-line\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></span><br><span class=\"highlight-line\"> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span></span><br><span class=\"highlight-line\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>utf-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></span><br><span class=\"highlight-line\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Giffleball<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span></span><br><span class=\"highlight-line\"> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span></span><br><span class=\"highlight-line\"> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span></span><br><span class=\"highlight-line\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>Giffleball<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span></span><br><span class=\"highlight-line\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span></span><br><mark class=\"highlight-line highlight-line-active\">   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>img/???.jpg<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>???.jpg<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span></mark><br><mark class=\"highlight-line highlight-line-active\">   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>img/….jpg<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>….jpg<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span></mark><br><mark class=\"highlight-line highlight-line-active\">   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>img/parrot.gif<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>parrot.gif<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span></mark><br><span class=\"highlight-line\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span></span><br><span class=\"highlight-line\"> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></span><br><span class=\"highlight-line\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></span></code></pre>\n\t\t<p class=\"graf graf--p graf-after--pre\" id=\"eac5\">So far, nothing special going on here. But, we can run <code class=\"markup--code markup--p-code\">eleventy</code> and generate our site anyway. We’ll pass in the extensions that we want eleventy to process with<code class=\"markup--code markup--p-code\">--formats</code>.</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><mark class=\"highlight-line highlight-line-active\">~ $ <span class=\"token builtin class-name\">cd</span> giffleball</mark><br><mark class=\"highlight-line highlight-line-active\">~/giffleball $ eleventy --formats<span class=\"token operator\">=</span>html,gif,jpg</mark><br><span class=\"highlight-line\">Writing _site/index.html from ./index.html.</span><br><span class=\"highlight-line\">Wrote <span class=\"token number\">1</span> <span class=\"token function\">file</span> <span class=\"token keyword\">in</span> <span class=\"token number\">0.07</span> seconds</span></code></pre>\n\t\t<p class=\"graf graf--p graf-after--pre\" id=\"c0a2\">This created our new web site in the <code class=\"markup--code markup--p-code\">_site</code> directory. If you want it to go somewhere else, simply pass a new directory to <code class=\"markup--code markup--p-code\">--output</code>:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><mark class=\"highlight-line highlight-line-active\">~/giffleball $ eleventy --output<span class=\"token operator\">=</span>somewhereelse</mark><br><span class=\"highlight-line\">Writing somewhereelse/index.html from ./index.html.</span><br><span class=\"highlight-line\">Wrote <span class=\"token number\">1</span> <span class=\"token function\">file</span> <span class=\"token keyword\">in</span> <span class=\"token number\">0.07</span> seconds</span></code></pre>\n\t\t<h3 class=\"graf graf--h3 graf-after--pre\" id=\"d1c2\">Make it Data&nbsp;Driven</h3>\n\t\t<p class=\"graf graf--p graf-after--h3\" id=\"071c\">Okay, so far we could have just loaded up our <code class=\"markup--code markup--p-code\">index.html</code> in the browser and it would have looked the same. The output matched the input. So, let’s layer on some <code class=\"markup--code markup--p-code\">eleventy</code> things. Let’s move some of the site data into our front matter:</p>\n<pre class=\"language-html\"><code class=\"language-html\"><ins class=\"highlight-line highlight-line-add\">---</ins><br><ins class=\"highlight-line highlight-line-add\">title: Giffleball</ins><br><ins class=\"highlight-line highlight-line-add\">images:</ins><br><ins class=\"highlight-line highlight-line-add\">  - ???.jpg</ins><br><ins class=\"highlight-line highlight-line-add\">  - ….jpg</ins><br><ins class=\"highlight-line highlight-line-add\">  - parrot.gif</ins><br><ins class=\"highlight-line highlight-line-add\">---</ins><br><span class=\"highlight-line\"><span class=\"token doctype\">&lt;!doctype html></span></span><br><span class=\"highlight-line\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></span><br><span class=\"highlight-line\"> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span></span><br><span class=\"highlight-line\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>utf-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></span><br><span class=\"highlight-line\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>{{ title }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span></span><br><span class=\"highlight-line\"> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span></span><br><span class=\"highlight-line\"> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span></span><br><span class=\"highlight-line\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>{{ title }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span></span><br><span class=\"highlight-line\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span></span><br><span class=\"highlight-line\">  {% for filename in images %}</span><br><span class=\"highlight-line\">   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>img/{{ filename }}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>{{ filename }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span></span><br><span class=\"highlight-line\">  {% endfor %}</span><br><span class=\"highlight-line\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span></span><br><span class=\"highlight-line\"> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></span><br><span class=\"highlight-line\"> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></span></code></pre>\n\t\t<p class=\"graf graf--p graf-after--pre\" id=\"659a\">We’ve moved our site’s title (used in two different places) to our front matter and the list of images as well.</p>\n\t\t<p class=\"graf graf--p graf-after--p\" id=\"b9fb\">By default in Eleventy, the <code class=\"markup--code markup--p-code\">liquid</code> templating engine syntax is available on HTML and Markdown files. Eleventy supports a wide variety of templating engine syntaxes (peep <a class=\"markup--anchor markup--p-anchor\" data-href=\"https://github.com/11ty/eleventy/#eleventy-\" href=\"https://github.com/11ty/eleventy/#eleventy-\" rel=\"noopener\" target=\"_blank\">the full list</a>), and those are available when you use specific file extensions. For example, our <code class=\"markup--code markup--p-code\">index.html</code> could have been named <code class=\"markup--code markup--p-code\">index.liquid</code> and it would be functionally equivalent:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><mark class=\"highlight-line highlight-line-active\">~/giffleball $ <span class=\"token function\">mv</span> index.html index.liquid</mark><br><mark class=\"highlight-line highlight-line-active\">~/giffleball $ eleventy --formats<span class=\"token operator\">=</span>liquid,html,jpg,gif</mark><br><span class=\"highlight-line\">Writing _site/index.html from ./index.liquid.</span><br><span class=\"highlight-line\">Wrote <span class=\"token number\">1</span> <span class=\"token function\">file</span> <span class=\"token keyword\">in</span> <span class=\"token number\">0.07</span> seconds</span></code></pre>\n\t\t<p class=\"graf graf--p graf-after--pre\" id=\"a00c\">We also allow you to change the defaults, of course, but we’ll get to that in a future tutorial (or you can skip ahead and <a class=\"markup--anchor markup--p-anchor\" data-href=\"https://github.com/11ty/eleventy/#configuration-optional\" href=\"https://github.com/11ty/eleventy/#configuration-optional\" rel=\"noopener\" target=\"_blank\">peep the README</a>).</p>\n\t\t<p class=\"graf graf--p graf-after--p\" id=\"a78a\">Using a templating engine has a few benefits:</p>\n\t\t<ol class=\"postList\">\n\t\t\t<li class=\"graf graf--li graf-after--p\" id=\"48b7\">Change your data in one place. To change our site’s name, we can do it in one place (the front matter) instead of two. To add or remove images, we don’t have to edit the template HTML.</li>\n\t\t\t<li class=\"graf graf--li graf-after--li\" id=\"121f\">Change the markup for your image links once. Say we wanted to modify the HTML for our list items. Because we’re data-driven here, we can modify our template HTML in our loop instead of having to modify threeor more <code class=\"markup--code markup--li-code\">&lt;li&gt;</code> entries individually. Three isn’t bad. But what if our site grows to 300 images?</li>\n\t\t\t<li class=\"graf graf--li graf-after--li\" id=\"247b\">Special characters in the file names. Looking in the browser, it seems like&nbsp;<code class=\"markup--code markup--li-code\">???.jpg</code> isn’t really playing nice with my web server. The file doesn’t show up correctly. What if our file names have weird characters that aren’t supported by our web browser or web server? We need to escape them! The Liquid templating syntax has just the thing: a <code class=\"markup--code markup--li-code\">url_encode</code> filter. Let’s update our template to use it:\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"highlight-line\">{% for filename in images %}</span><br><del class=\"highlight-line highlight-line-remove\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>img/{{ filename }}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>{{ filename }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span></del><br><span class=\"highlight-line\">{% endfor %}</span></code></pre>\nbecomes:\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"highlight-line\">{% for filename in images %}</span><br><ins class=\"highlight-line highlight-line-add\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>img/{{ filename | url_encode }}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>{{ filename }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span></ins><br><span class=\"highlight-line\">{% endfor %}</span></code></pre>\nAh, much better. Works perfectly.</li>\n\t\t</ol>\n\t\t<h3 class=\"graf graf--h3 graf-after--p\" id=\"ff9a\">Wrapping up</h3>\n\t\t<p class=\"graf graf--p graf-after--h3\" id=\"2f78\">I hope you see the benefit of using templating engines and a static site generator for your web sites. In upcoming tutorials, we’ll go over the benefits of using a static site generator with multiple templates. Specifically, how to use layouts (a wrapper to separate your HTML boilerplate from your actual content) and external data files (pair nicely with front matter to easily manage your data across multiple templates).</p>\n\t</div>\n</div>\n\n<h2>Eleventy Tutorials</h2>\n<ul>\n  <li>Level 1—Data driven templates (You are here)</li>\n  <li><a href=\"https://www.zachleat.com/web/eleventy-tutorial-level-2/\">Level 2—Adding filters</a></li>\n</ul>\n\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"https://cdn-images-1.medium.com/max/800/1*E9LIfVl7pcVu3_moXc743w.gif","linkMd5":"aa0692b67c86e3640972d898fce49bdf","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx/cdn66@2020_5/2020/08/25/02-02-03-609_c2bc2051c8c33d54.webp","destWidth":35,"destHeight":25,"sourceBytes":2285,"destBytes":6088,"author":"","articleImgCdnMap":{"https://cdn-images-1.medium.com/max/800/1*E9LIfVl7pcVu3_moXc743w.gif":"https://cdn.jsdelivr.net/gh/myreaderx/cdn66@2020_5/2020/08/25/02-02-03-609_c2bc2051c8c33d54.webp"},"publishedOrCreatedDate":1598320921770},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"The Infinity Hamburger Menu","link":"http://www.zachleat.com/web/infinity-burger/","description":"<p>A whimsical hamburger menu* that goes on forever.</p> \n<p>*<em>Not actually a functioning menu.</em></p> \n<p>Notably, this release marks my commitment as the first developer to make Open Source development a <a href=\"http://9to5mac.com/2015/12/07/apple-open-source-first/\">key part of my software strategy</a>, as I continue to use and release significant quantities of open source software.</p> \n<blockquote class=\"twitter-tweet\" lang=\"en\">\n <p lang=\"en\" dir=\"ltr\">Inspired by the hamburger menu on <a href=\"https://twitter.com/24ways\">@24ways</a>, I’ve added my own hamburger menu to <a href=\"https://t.co/ggcRs4arMN\">https://t.co/ggcRs4arMN</a> Have a look 😏</p>— Zach Leatherman (@zachleat) \n <a href=\"https://twitter.com/zachleat/status/673874730839965696\">December 7, 2015</a>\n</blockquote> \n<h2 id=\"demo\">Demo <a class=\"direct-link\" href=\"http://www.zachleat.com/web/infinity-burger/#demo\">#</a></h2> \n<p>Click or tap the hamburger menu icon on the top of this page. For bonus fun, click more than once.</p> \n<h2 id=\"get-it\">Get it <a class=\"direct-link\" href=\"http://www.zachleat.com/web/infinity-burger/#get-it\">#</a></h2> \n<ul> \n <li>Available on <a href=\"https://github.com/zachleat/infinity-burger\">GitHub</a></li> \n <li><code>npm install infinity-burger</code></li> \n</ul> \n<h3 id=\"related-reading%3A\">Related reading: <a class=\"direct-link\" href=\"http://www.zachleat.com/web/infinity-burger/#related-reading%3A\">#</a></h3> \n<ul> \n <li><a href=\"http://gizmodo.com/who-designed-the-iconic-hamburger-icon-1555438787\"><em>Who Designed the Hamburger Icon?</em></a> —Gizmodo</li> \n <li><a href=\"http://www.theatlantic.com/product/archive/2014/08/the-hamburger-menu-debate/379145/\"><em>The Hamburger Menu-Icon Debate</em></a> —The Atlantic</li> \n</ul>","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"b4d1284b32ff9256f6e953c746216b2f","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921766},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"NEJS CONF 2015 Recap","link":"http://www.zachleat.com/web/nejsconf/2015/","description":"\n\t\t\t\t<p><em>This content lives somewhere else. It was originally posted at: <a href=\"https://nebraskajs.com/2015/nejsconf-2015/\">https://nebraskajs.com/2015/nejsconf-2015/</a></em></p>\n\t\t\t\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"052095200a00efa7984db7c194607df1","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921765},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"SocialCount, Faster &#038; Lighter Social Networking Widgets","link":"http://www.zachleat.com/web/socialcount/","description":"<p>I’m excited to let you guys know that my first <a href=\"http://filamentgroup.com/\">Filament Group</a> open source project was released. I made the move to Filament to both allow more client/open-source crossover work and to collaborate with some great Front End Engineers. <em>SocialCount</em> is the first public evidence of that goal.</p> \n<blockquote> \n <p>SocialCount is a small jQuery plugin for progressively enhanced, lazy loaded, mobile friendly social networking widgets.</p> \n</blockquote> \n<p>Third party JavaScript is one of the biggest challenges we face in our quest for high performance web sites and hopefully SocialCount will help tame the slothful beast.</p> \n<p>Astute readers may recognize SocialCount from the implementation on <a href=\"http://f2em.com/\">A Front End Engineer’s Manifesto</a> (page 2 and the footer).</p> \n<h2 id=\"filament-group-lab-post\"><a href=\"http://filamentgroup.com/lab/socialcount/\">Filament Group Lab Post</a> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/socialcount/#filament-group-lab-post\">#</a></h2> \n<h2 id=\"contribute-on-github\"><a href=\"http://github.com/filamentgroup/socialcount/\">Contribute on GitHub</a> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/socialcount/#contribute-on-github\">#</a></h2>","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"926284cdbd45a945ba6f8cb8b45ab273","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921764},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Building Exclusive Features For Open Collective Contributors on Netlify","link":"http://www.zachleat.com/web/eleventy-contributors/","description":"<p>After the unbelievably gracious reception for <a href=\"https://www.11ty.dev/\">Eleventy</a> at the recent <a href=\"https://jamstackconf.com/\">JAMstack_conf</a> in San Francisco, I’ve been thinking about ways to invest more in the project’s longevity. It was surreal to see Eleventy get <em>as many</em> if not more grassroots mentions in the talks and in the hallway than many of the companies with booths, employing full time staff to support and develop their projects.</p> \n<p>Since then I have also been thinking a lot about what the next step for the Eleventy project might be, in terms of growth. We have a lot of lovely supporters on the <a href=\"https://opencollective.com/11ty\">Eleventy Open Collective</a> and it’s been growing slowly over time. But I would love to somehow grow the project’s financial base so that Eleventy is a project that can have dedicated development on time that <em>isn’t</em> nights and weekends. To achieve this goal, the unfortunate truth is that we need more donors.</p> \n<h2 id=\"premium-features\">Premium Features <a class=\"direct-link\" href=\"http://www.zachleat.com/web/eleventy-contributors/#premium-features\">#</a></h2> \n<p>One small step I’ve taken that I think will help incentivize donors to contribute is to start creating exclusive features on the documentation for open source patrons. The first of these such features is Eleventy documentation search.</p> \n<img src=\"https://www.zachleat.com/web/img/posts/pro-open-source/eleventy-search.jpg\" alt=\"Eleventy Contributor Account search for Pagination\" class=\"primary\"> <p>Notably this enhances from a baseline DuckDuckGo search experience that is served to non-authenticated users. It even includes <code>site:www.11ty.dev</code> in the search field so that the search is properly scoped without JavaScript.</p> <p>A few more roadmap-ish ideas for premium features:</p> \n <ul> \n  <li>Search an old version of the docs. This would be an easy add-on to what I’ve already built.</li> \n  <li>Hide advertisements (if your project documentation has advertisements, 11ty.dev does not)</li> \n  <li>Offline documentation. A PWA would be a nice feature.</li> \n  <li>Comic Sans Be Gone. I don’t remember where I saw this one originally but it was some old shareware project that used Comic Sans by default and then upgraded to a typeface that better matched the project. My typographic sensibilities prevent me from trying this.</li> \n  <li>Right now I don’t think charging for documentation content (premium tutorials) or code (premium plugins/themes/starter projects) is on the table but this may be something I’ll consider further down the line.</li> \n  <li>An Eleventy Visa credit card (just kidding 😈)</li> \n </ul> <p>For now these premium features are nice-to-haves. One might even frame this as charging for Progressive Enhancements.</p> <h2 id=\"want-this-for-your-open-source-project%3F\">Want this for your Open Source Project? <a class=\"direct-link\" href=\"http://www.zachleat.com/web/eleventy-contributors/#want-this-for-your-open-source-project%3F\">#</a></h2> <p>I am kinda proud of the implementation here—with Netlify’s help I was able to implement a fairly complex use case in a short amount of time. It isn’t fully automated but it’s close, again with the help of a few Netlify features. Here are the pieces with links to the code on the 11ty website GitHub:</p> \n <ul> \n  <li><strong>Auth on the account page</strong>: Adds the full <a href=\"https://github.com/netlify/netlify-identity-widget\">Netlify Identity widget</a> to <strong>one</strong> documentation page that acts as the home base for all account operations: the <a href=\"https://github.com/11ty/11ty-website/blob/5c621a65acbee055791f311cf98e48e0fdaeb9f0/docs/account.md\">Contributor Account page</a>. If the user logs in, logs out, needs to change or recover their password, they would do all of those actions on this one page. This widget is a bit hefty because it includes all of the UI bits for authentication, so I’ve limited it to one page only. \n   <ul> \n    <li>Notably because the Netlify Identity widget is only on one page, the URLs sent out for all Netlify Identity emails must be customized to include this path. You can see those <a href=\"https://github.com/11ty/11ty-website/tree/5c621a65acbee055791f311cf98e48e0fdaeb9f0/netlify-email\">email template customizations on the <code>netlify-email</code> folder</a>. Don’t forget to update your email templates on your Netlify Identity Settings page to point to <code>/netlify-email/invitation.html</code>, <code>/netlify-email/email-change.html</code>, and <code>/netlify-email/password-reset.html</code>.</li> \n   </ul> </li> \n  <li><strong>Auth on every page</strong>: Every other page uses the much smaller “closer to the metal” <a href=\"https://github.com/netlify/gotrue-js\">GoTrue JS</a> library. This lives on every page and makes sure the user is authenticated. \n   <ul> \n    <li>See <a href=\"https://github.com/11ty/11ty-website/blob/5c621a65acbee055791f311cf98e48e0fdaeb9f0/js/eleventy-js.njk\"><code>eleventy-js.njk</code></a> (includes the <code>gotrue.js</code> library and <code>auth.js</code> for the app code) and <a href=\"https://github.com/11ty/11ty-website/blob/5c621a65acbee055791f311cf98e48e0fdaeb9f0/_includes/layouts/base.njk\"><code>base.njk</code></a> for how that is referenced on the page (<code>type=module</code> browsers only! 😎).</li> \n    <li>The <a href=\"https://github.com/11ty/11ty-website/blob/5c621a65acbee055791f311cf98e48e0fdaeb9f0/_includes/components/auth/auth.js\"><code>auth.js</code> file is custom code that I wrote to check users and update content</a>.</li> \n   </ul> </li> \n  <li><strong>Invitation-only Identity</strong>: Netlify Identity accounts are set to Invite-only on the Netlify Identity settings page under Registration. When a new person becomes an Open Collective contributor, I use the <a href=\"https://github.com/11ty/11ty-website/blob/5c621a65acbee055791f311cf98e48e0fdaeb9f0/node-supporters.js\">Open Collective API to get that email</a> (by running <code>node node-supporters.js</code>) and invite the user by their Open Collective email account. This avoids confusion around matching identities across multiple services. Otherwise I’d have to tell people to register their accounts using their Open Collective email and that seems like a hassle to manage.</li> \n  <li><strong>Verifying Open Collective status</strong>: When a user logs in on the account page, a request is made to a <a href=\"https://github.com/11ty/11ty-website/blob/5c621a65acbee055791f311cf98e48e0fdaeb9f0/functions/user.js\">Netlify Function (<code>user.js</code>)</a> that checks whether their the current account is a contributor on Eleventy’s Open Collective. Netlify Identity and Netlify Functions work together here to verify the email in the serverless function is the same as the one currently authenticated.</li> \n </ul> <h2 id=\"go-forth\">Go forth <a class=\"direct-link\" href=\"http://www.zachleat.com/web/eleventy-contributors/#go-forth\">#</a></h2> <p>I hope this has given you some ideas that might help you invest in the longevity of your own open source projects. I’d love to hear if this was useful to you—let me know!</p> \n <blockquote class=\"twitter-tweet\">\n  <p lang=\"en\" dir=\"ltr\">spent like a week building auth and search for the <a href=\"https://twitter.com/eleven_ty\">@eleven_ty</a> web site but people like having their picture in the possum balloon the most 😭 <a href=\"https://t.co/cA2H6rk7h7\">pic.twitter.com/cA2H6rk7h7</a></p>— Zach Leatherman (@zachleat) \n  <a href=\"https://www.zachleat.com/twitter/1197601336294027265/\">November 21, 2019</a>\n </blockquote> </img>","descriptionType":"html","feedId":12519,"bgimg":"https://www.zachleat.com/web/img/posts/pro-open-source/eleventy-search.jpg","linkMd5":"af6cd5017a0cb7ff5c1ce69e7d90922c","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn33@2020_2/2020/08/25/02-02-04-766_3449926bb18397ea.webp","destWidth":1500,"destHeight":890,"sourceBytes":177231,"destBytes":83650,"author":"","articleImgCdnMap":{"https://www.zachleat.com/web/img/posts/pro-open-source/eleventy-search.jpg":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn33@2020_2/2020/08/25/02-02-04-766_3449926bb18397ea.webp"},"publishedOrCreatedDate":1598320921772},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Import your Disqus Comments to Eleventy","link":"http://www.zachleat.com/web/disqus-import/","description":"\n\t\t\t<p>I’m slowly <a href=\"https://twitter.com/zachleat/status/986619121403138051\">migrating off of Disqus</a>. I want to keep my existing comment content though.</p>\n<p>Migration is an easy sell:</p>\n<ul>\n<li>A few KB of static HTML is faster than the Disqus JavaScript. I lazy-load Disqus but it’s 430KB ⚠️.</li>\n<li>No third party JavaScript—no prying eyes!</li>\n<li>Comments available without JavaScript.</li>\n<li>Full control over markup and style of comments (samples provided below). Finally, I can use my web fonts 😎.</li>\n<li>No annoying loading delay when someone direct-links to a comment on your page.</li>\n</ul>\n<p>I wrote up the steps I took to import the Disqus export XML in my <code>eleventy</code> blog. This method:</p>\n<ul>\n<li>Properly maintains comment threading as shown in the Disqus interface.</li>\n<li>Uses gravatar for avatar images.</li>\n<li>Works with any existing links to Disqus comments in the wild (and no annoying delay waiting for Disqus to load and jump to the comment).</li>\n</ul>\n<p class=\"primarylink\">Check out the full tutorial steps at <a href=\"https://github.com/11ty/eleventy-import-disqus\"><code>eleventy-import-disqus</code> on GitHub</a></p>\n<p>As an intermediate step, I still allow users to load the Disqus interface to participate in the discussion but these comments will not be available statically until I do another export/import—this is super easy after you do it once.</p>\n<p>My goal is to add <a href=\"https://nicolas-hoizey.com/2017/07/so-long-disqus-hello-webmentions.html\">webmentions</a> (thanks Nicolas for the tip!), but full credit to <a href=\"https://staticman.net/\">Staticman</a> and <a href=\"https://utteranc.es/\">utterances</a> which look great too.</p>\n<hr>\n<p>Find out more about Eleventy:\n\t<ul>\n\t\t<li><a href=\"https://www.zachleat.com/web/introducing-eleventy/\">Introducing Eleventy, a new Static Site Generator</a></li>\n\t \t<li><a href=\"https://www.11ty.io/\">11ty.io</a></li>\n\t \t<li><a href=\"https://github.com/11ty/eleventy\">eleventy on GitHub</a></li>\n\t</ul>\n</p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"023e1634cecef2f359a2983c9b198152","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921770},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"CSS Naked Day","link":"http://www.zachleat.com/web/css-naked-day/","description":"\n\t\t\t<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">It’s been a few years since it was A Thing, true, but the most recent CSS Naked Day was held on the ninth of April. Anyone else interested in reviving the practice this Thursday? It’ll speed up your site! Temporarily. <a href=\"https://css-naked-day.github.io/\">https://css-naked-day.github.io/</a></p>&mdash; Eric Meyer, CSS Nerd (@meyerweb) <a href=\"https://twitter.com/meyerweb/status/1247641433223376898?ref_src=twsrc%5Etfw\">April 7, 2020</a></blockquote>\n<p class=\"primarylink\">\n\t<a href=\"https://css-naked-day.github.io/\">CSS naked day</a>\n</p>\n<p>While it seems that I’ve personally outgrown using “sexy” to describe anything related to web development <em>(eww)</em>, I do like the impetus behind the CSS naked day movement!</p>\n<p>So for today my site will be sans-CSS. Enjoy!</p>\n<hr>\n<p><em>Some of you may even remember the Naked checkbox on one of my earliest web development projects, <a href=\"https://www.zachleat.com/alarmd/\">ALARMd</a>.</em></p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"6fa12f3df146fb87fe6e4c9418863c79","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921772},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Managing Font Loading CSS Was Painful—Not Anymore","link":"http://www.zachleat.com/web/font-loading-classes/","description":"\n\t\t\t<p>One of the most painful pieces of maintaining a web font loading strategy is meticulously managing the CSS that goes with it. You have to carefully manage the CSS to make sure that any use of your web font <code>font-family</code> is protected by a class added by the JS after the fonts have loaded successfully.</p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">body</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> sans-serif<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><span class=\"token selector\">.fonts-loaded body</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> Lato<span class=\"token punctuation\">,</span> sans-serif<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span></code></pre>\n<p><span class=\"caption\">From <a href=\"https://github.com/zachleat/web-font-loading-recipes\"><code>zachleat/web-font-loading-recipes</code></a>, specifically the <a href=\"https://github.com/zachleat/web-font-loading-recipes/blob/master/fout-with-class.html\">FOUT with a Class example</a>.</span></p>\n<p>One slip up <em>anywhere</em> in your stylesheet and your web fonts could load with native browser behavior, meaning everything using Lato will FOIT for up to three seconds.</p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.whoops</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> Lato<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span></code></pre>\n<p>Well, not anymore. <a href=\"https://github.com/biilmann\">Mathias Biilmann</a> introduced me to a plugin from Netlify called <a href=\"https://github.com/netlify/postcss-fout-with-a-class\"><code>postcss-fout-with-a-class</code></a>. It post-processes your CSS and automatically transforms it to add the guarding classes. No more mess, no more manual maintenance, no more slip-ups. While Netlify’s excellent plugin was specifically designed to accommodate the FOUT with a Class approach, I wanted something that worked with one or more font loading stages (FOFT).</p>\n<p>It is with much 🎉 fanfare 🎉 that I introduce the <a href=\"https://github.com/zachleat/postcss-foft-classes\"><code>postcss-foft-classes</code></a> plugin.</p>\n<p><span class=\"primarylink\">Check out <a href=\"https://github.com/zachleat/postcss-foft-classes\"><code>postcss-foft-classes</code></a></span></p>\n<p>This will work with one stage font loading (FOUT with a Class) or two stage font loading (FOFT) or any number of loading stages. Gulp configuration examples are included with the README but really this plugin will work anywhere that <code>postcss</code> does.</p>\n<p>The magic here is that you no longer have any overhead managing the web font <code>font-family</code> properties in CSS. You simply write:</p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">body</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> Lato<span class=\"token punctuation\">,</span> sans-serif<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span></code></pre>\n<p>and <code>postcss-foft-classes</code> will export this code for a single stage approach (FOUT):</p>\n<pre class=\"language-css\"><code class=\"language-css\"><mark class=\"highlight-line highlight-line-active\"><span class=\"token selector\">body</span> <span class=\"token punctuation\">{</span></mark><br><mark class=\"highlight-line highlight-line-active\">  <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> sans-serif<span class=\"token punctuation\">;</span></mark><br><mark class=\"highlight-line highlight-line-active\"><span class=\"token punctuation\">}</span></mark><br><span class=\"highlight-line\"></span><br><span class=\"highlight-line\"><span class=\"token selector\">.fonts-loaded body</span> <span class=\"token punctuation\">{</span></span><br><span class=\"highlight-line\">  <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> Lato<span class=\"token punctuation\">;</span></span><br><span class=\"highlight-line\"><span class=\"token punctuation\">}</span></span></code></pre>\n<p>or <code>postcss-foft-classes</code> will export this code for a two stage approach (FOFT):</p>\n<pre class=\"language-css\"><code class=\"language-css\"><mark class=\"highlight-line highlight-line-active\"><span class=\"token selector\">body</span> <span class=\"token punctuation\">{</span></mark><br><mark class=\"highlight-line highlight-line-active\">  <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> sans-serif<span class=\"token punctuation\">;</span></mark><br><mark class=\"highlight-line highlight-line-active\"><span class=\"token punctuation\">}</span></mark><br><span class=\"highlight-line\"></span><br><span class=\"highlight-line\"><span class=\"token selector\">.fonts-loaded body</span> <span class=\"token punctuation\">{</span></span><br><span class=\"highlight-line\">  <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> LatoInitial<span class=\"token punctuation\">;</span></span><br><span class=\"highlight-line\"><span class=\"token punctuation\">}</span></span><br><span class=\"highlight-line\"></span><br><span class=\"highlight-line\"><span class=\"token selector\">.fonts-loaded-2 body</span> <span class=\"token punctuation\">{</span></span><br><span class=\"highlight-line\">  <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> Lato<span class=\"token punctuation\">;</span></span><br><span class=\"highlight-line\"><span class=\"token punctuation\">}</span></span></code></pre>\n<p>So much easier.</p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"38ad94f48165ddae924c1253ee37f2ee","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921769},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"The Simplest Web Site That Could Possibly Work Well","link":"http://www.zachleat.com/web/that-could-possibly-work/","description":"<p>This week we’ve launched the <a href=\"https://2018.nejsconf.com/\">new web site for NEJS CONF 2018</a> and I am so excited for our theme this year: ✨ outer space ✨.</p> \n<p><a href=\"https://2018.nejsconf.com/\" class=\"no-underline\"><img src=\"https://www.zachleat.com/web/img/posts/nejsconf/nejsconf-2018@620.png\" alt=\"2018.nejsconf.com\" class=\"primary\" srcset=\"https://www.zachleat.com/web/img/posts/nejsconf/nejsconf-2018@620.png 620w, https://www.zachleat.com/web/img/posts/nejsconf/nejsconf-2018@1240.png 1240w\" sizes=\"(min-width: 1253px) 930px, (min-width: 960px) 70vw, 100vw\" /></a></p> \n<h3 id=\"nejs-conf-2018\">NEJS CONF 2018 <a class=\"direct-link\" href=\"http://www.zachleat.com/web/that-could-possibly-work/#nejs-conf-2018\">#</a></h3> \n<ul> \n <li><strong><a href=\"https://register.nejsconf.com/\">Register for the Conference!</a></strong></li> \n <li>Go to <a href=\"https://2018.nejsconf.com/\">2018.nejsconf.com</a></li> \n <li><a href=\"https://2018.nejsconf.com/styleguide/\">Style Guide</a></li> \n <li><a href=\"https://github.com/NebraskaJS/2018.nejsconf.com\">GitHub repository</a></li> \n</ul> \n<h2 id=\"the-simplest-tooling-that-can-possibly-work-well\">The Simplest Tooling That Can Possibly Work Well <a class=\"direct-link\" href=\"http://www.zachleat.com/web/that-could-possibly-work/#the-simplest-tooling-that-can-possibly-work-well\">#</a></h2> \n<p>I <em>try</em> not to get carried away with tooling when working on these one-off side project sites. I want to implement best practices for front end web site performance but I also don’t want to spend a ton of bootstrap time getting the project infrastructure up before I can begin building.</p> \n<p>I’d like something that scales to a little bit more complex of a project than this (but not much):</p> \n<blockquote class=\"twitter-tweet\" data-conversation=\"none\" data-lang=\"en\">\n <p lang=\"en\" dir=\"ltr\">How to make a web page in 2017: <a href=\"https://t.co/80BpM1BM5x\">pic.twitter.com/80BpM1BM5x</a></p>— Zach Leatherman (@zachleat) \n <a href=\"https://twitter.com/zachleat/status/866398752722092032?ref_src=twsrc%5Etfw\">May 21, 2017</a>\n</blockquote> \n<p>That’s one of my favorite things about <a href=\"https://www.11ty.io/\">Eleventy</a>. It is flexible enough to work with any kind of project or directory structure, transforming data and templates into HTML content quickly and easily. It’s more of a tool than a framework.</p> \n<p>Find out more about Eleventy: \n <ul> \n  <li><a href=\"https://www.zachleat.com/web/introducing-eleventy/\">Introducing Eleventy, a new Static Site Generator</a></li> \n  <li><a href=\"https://www.11ty.io/\">11ty.io</a></li> \n  <li><a href=\"https://github.com/11ty/eleventy\">eleventy on GitHub</a></li> \n </ul> </p> \n<h2 id=\"the-simplest-critical-css-that-can-possibly-work-well\">The Simplest Critical CSS That Can Possibly Work Well <a class=\"direct-link\" href=\"http://www.zachleat.com/web/that-could-possibly-work/#the-simplest-critical-css-that-can-possibly-work-well\">#</a></h2> \n<p>Critical CSS can be one of the biggest wins a project can do to improve their time to first render. Critical CSS build tools (<a href=\"https://github.com/filamentgroup/criticalCSS\">Filament Group</a> has one, as well as <a href=\"https://github.com/addyosmani/critical\">Addy Osmani</a> and others) will find the CSS used in a stock <em>Above the Fold</em> viewport size and inject that right into the markup for near-instant rendering. However, we don’t really need to do this analysis at all if our stylesheets are small enough! The wins from this approach improve with stylesheet size. With a tiny stylesheet, we can just inject the whole CSS stylesheet right into the page. Good enough. 😇</p> \n<p>Here’s how that works in Eleventy using Nunjucks for a <a href=\"https://github.com/NebraskaJS/2018.nejsconf.com/blob/master/_includes/empty.njk#L7\">layout template</a>:</p> \n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token comment\">&lt;!-- capture the CSS content as a Nunjucks variable --&gt;</span><br>{% set css %}{% include \"theme.css\" %}{% endset %}<br><span class=\"token comment\">&lt;!-- feed it through a cssmin filter to minify --&gt;</span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token style\"><span class=\"token language-css\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> css | cssmin | safe <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">&gt;</span></span></br></br></br></code></pre> \n<p>Here we are using a <a href=\"https://github.com/NebraskaJS/2018.nejsconf.com/blob/master/.eleventy.js#L7\"><code>cssmin</code> filter in our eleventy Config</a> to minify the CSS too:</p> \n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> CleanCSS <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"clean-css\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>module<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">exports</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">eleventyConfig</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>\televentyConfig<span class=\"token punctuation\">.</span><span class=\"token function\">addFilter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cssmin\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">code</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>\t\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CleanCSS</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">minify</span><span class=\"token punctuation\">(</span>code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>styles<span class=\"token punctuation\">;</span><br> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></br></br></br></br></br></br></code></pre> \n<p><em>Don’t forget to <code>npm install clean-css</code>.</em></p> \n<h2 id=\"the-simplest-style-guide-that-can-possibly-work-well\">The Simplest Style Guide That Can Possibly Work Well <a class=\"direct-link\" href=\"http://www.zachleat.com/web/that-could-possibly-work/#the-simplest-style-guide-that-can-possibly-work-well\">#</a></h2> \n<p>I didn’t want to use a separate dedicated style guide tool for this small project, either. There are a bunch of good ones out there and they work great for longer, larger projects. But I wanted the simplest thing that could possibly work. So, I set up a single template to showcase all of the site’s components together. This is the same approach I took for <a href=\"https://www.zachleat.com/web/now-with-style-guide/\">my personal site</a>. Much like Sunday morning, easy.</p> \n<ul> \n <li><a href=\"https://2018.nejsconf.com/styleguide/\">The Super Formal NEJS CONF 2018 Style Guide</a></li> \n</ul> \n<h2 id=\"the-simplest-preview-that-can-possibly-work-well\">The Simplest Preview That Can Possibly Work Well <a class=\"direct-link\" href=\"http://www.zachleat.com/web/that-could-possibly-work/#the-simplest-preview-that-can-possibly-work-well\">#</a></h2> \n<p>About a week before launch, I decided that it would be good to put up a preview of the site online for some of the other organizers and our designer to look at and review. If we were <a href=\"https://www.netlify.com/\">using Netlify here</a> this would have been trivial without code changes. And truth-be-told, setting up an additional subdomain on our existing host for testing wouldn’t have been that hard. But one of the coolest things Eleventy has to help with this is it’s <a href=\"https://github.com/11ty/eleventy#configuration-optional\"><code>pathPrefix</code> configuration option</a>. The default is <code>/</code> but I was able to simply change this to <code>/preview/</code>, rebuild and upload the entire site to <code>2018.nejsconf.com/preview/</code> for a quick and easy public preview. No additional server configuration required.</p> \n<h2 id=\"the-simplest-brand-that-can-possibly-work-well\">The Simplest Brand That Can Possibly Work Well <a class=\"direct-link\" href=\"http://www.zachleat.com/web/that-could-possibly-work/#the-simplest-brand-that-can-possibly-work-well\">#</a></h2> \n<p>One of the intentional choices I made for NEJS CONF going into the second year was to maintain a consistent typeface throughout our different themes and redesigns. We’ve had three different designers working on the project in four years, but our typeface has remained constant. Using <a href=\"https://typekit.com/fonts/effra\">Effra</a> every year (loaded from TypeKit) keeps a thread of consistency across wildly varying themes and helps people recognize our community-run conference as we grow and build a larger audience. Somewhat relatedly, this is also why <a href=\"https://www.zachleat.com/web/about/\">I keep the green tint</a> when I change my avatar on social media. A bit of consistency in an inconsistent world.</p> \n<h3 id=\"2017\">2017 <a class=\"direct-link\" href=\"http://www.zachleat.com/web/that-could-possibly-work/#2017\">#</a></h3> \n<p><a href=\"https://2017.nejsconf.com/\" class=\"no-underline\"><img src=\"https://www.zachleat.com/web/img/posts/nejsconf/nejsconf-2017@620.png\" alt=\"2017.nejsconf.com\" class=\"primary\" srcset=\"https://www.zachleat.com/web/img/posts/nejsconf/nejsconf-2017@620.png 620w, https://www.zachleat.com/web/img/posts/nejsconf/nejsconf-2017@1240.png 1240w\" sizes=\"(min-width: 1253px) 930px, (min-width: 960px) 70vw, 100vw\" /></a></p> \n<h3 id=\"2016\">2016 <a class=\"direct-link\" href=\"http://www.zachleat.com/web/that-could-possibly-work/#2016\">#</a></h3> \n<p><a href=\"https://2016.nejsconf.com/\" class=\"no-underline\"><img src=\"https://www.zachleat.com/web/img/posts/nejsconf/nejsconf-2016@620.png\" alt=\"2016.nejsconf.com\" class=\"primary\" srcset=\"https://www.zachleat.com/web/img/posts/nejsconf/nejsconf-2016@620.png 620w, https://www.zachleat.com/web/img/posts/nejsconf/nejsconf-2016@1240.png 1240w\" sizes=\"(min-width: 1253px) 930px, (min-width: 960px) 70vw, 100vw\" /></a></p> \n<p><em>Excuse that dotted underline there, I swear the default browser styles for <code>abbr</code> changed after this launched 😇.</em></p> \n<h3 id=\"2015\">2015 <a class=\"direct-link\" href=\"http://www.zachleat.com/web/that-could-possibly-work/#2015\">#</a></h3> \n<p><a href=\"https://2015.nejsconf.com/\" class=\"no-underline\"><img src=\"https://www.zachleat.com/web/img/posts/nejsconf/nejsconf-2015@620.png\" alt=\"2015.nejsconf.com\" class=\"primary\" srcset=\"https://www.zachleat.com/web/img/posts/nejsconf/nejsconf-2015@620.png 620w, https://www.zachleat.com/web/img/posts/nejsconf/nejsconf-2015@1240.png 1240w\" sizes=\"(min-width: 1253px) 930px, (min-width: 960px) 70vw, 100vw\" /></a></p> \n<hr> \n <p>A special shout out to <a href=\"https://twitter.com/splitinfinities\">Will Riley</a> for his help with a <a href=\"https://github.com/NebraskaJS/2018.nejsconf.com/pull/1\">big pull request after the site’s launch</a>. Thanks Will!</p> \n</hr>","descriptionType":"html","feedId":12519,"bgimg":"https://www.zachleat.com/web/img/posts/nejsconf/nejsconf-2018@620.png","linkMd5":"2389d1fa727cddbb7b5c60a997552fbe","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn89@2020_1/2020/08/25/02-02-03-789_d4475be601dfec7e.webp","destWidth":640,"destHeight":285,"sourceBytes":159298,"destBytes":15952,"author":"","articleImgCdnMap":{"https://www.zachleat.com/web/img/posts/nejsconf/nejsconf-2018@620.png":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn89@2020_1/2020/08/25/02-02-03-789_d4475be601dfec7e.webp","https://www.zachleat.com/web/img/posts/nejsconf/nejsconf-2017@620.png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn66@2020_3/2020/08/25/02-02-11-689_0d2094bacb958074.webp","https://www.zachleat.com/web/img/posts/nejsconf/nejsconf-2016@620.png":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn79@2020_3/2020/08/25/02-02-21-194_3621f41b93d80563.webp","https://www.zachleat.com/web/img/posts/nejsconf/nejsconf-2015@620.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn28@2020_3/2020/08/25/02-02-18-172_b1ceaafde5649bc9.webp"},"publishedOrCreatedDate":1598320921771},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"In Case You Missed It: 2013","link":"http://www.zachleat.com/web/icymi/2013/","description":"<p>Rather than a bunch of individual “In Case You Missed It” tweets, I thought I’d just do one big yearly semi-comprehensive recap of the web community things that I contributed to this year. Enjoy!</p> \n<h2 id=\"tool-or-die-video\">Tool or Die <span class=\"tag video\">Video</span> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/icymi/2013/#tool-or-die-video\">#</a></h2> \n<p>If you only watch one web development talk I’ve done this year, make it this one. It’s a soup to nuts talk about a variety of topics and will show you how to build a future-proof, performance driven website from start to finish.</p> \n<div class=\"fluid-width-video-wrapper\"> \n <iframe width=\"420\" height=\"315\" src=\"https://www.youtube.com/embed/NkVmhe-vvAo\" frameborder=\"0\" allowfullscreen=\"\"></iframe> \n</div> \n<p><em>Related Blog Post: <a href=\"https://www.zachleat.com/web/tool-or-die/\">Tool or Die, a Web Developer’s Workflow</a></em></p> \n<h2 id=\"busyness-project\">Busyness <span class=\"tag project\">Project</span> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/icymi/2013/#busyness-project\">#</a></h2> \n<p><a href=\"http://busyness.io/\"><img src=\"https://www.zachleat.com/web/img/posts/hindsight/business.png\" alt=\"busyness.io\" /></a><br> <em>Related Blog Post: <a href=\"https://www.zachleat.com/web/busyness/\">You Should Follow Fewer People on Twitter</a></em></br></p> \n<h2 id=\"fixed-sticky-project\">fixed-sticky <span class=\"tag project\">Project</span> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/icymi/2013/#fixed-sticky-project\">#</a></h2> \n<p><a href=\"https://github.com/filamentgroup/fixed-sticky\"><img src=\"https://www.zachleat.com/web/img/posts/hindsight/fixed-sticky.png\" alt=\"fixed-sticky\" /></a> A <code>position: sticky</code> polyfill and <a href=\"https://github.com/filamentgroup/fixed-sticky\">Filament Group project</a>.</p> \n<h2 id=\"modernizr-%3Atarget-feature-test-blog-post\">Modernizr :target Feature Test <span class=\"tag blog-post\">Blog Post</span> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/icymi/2013/#modernizr-%3Atarget-feature-test-blog-post\">#</a></h2> \n<p>A <a href=\"https://www.zachleat.com/web/moving-target/\">blog post about creating a feature test for the <code>:target</code> pseudo-class</a> resulted in a <a href=\"https://github.com/Modernizr/Modernizr/commit/824e4d6a547e2cc59969faa5616c0eaf7e547788\">feature test added to Modernizr</a>.</p> \n<h2 id=\"a-tweet-highlight\">A <span class=\"tag tweet\">Tweet</span> Highlight <a class=\"direct-link\" href=\"http://www.zachleat.com/web/icymi/2013/#a-tweet-highlight\">#</a></h2> \n<blockquote class=\"twitter-tweet\" lang=\"en\">\n <p>If you use JavaScript to solve page layout problems your users are going to have a bad time.</p>— Zach Leatherman (@zachleat) \n <a href=\"https://twitter.com/zachleat/statuses/348161802389049344\">June 21, 2013</a>\n</blockquote> \n<h2 id=\"performance-and-responsive-web-design-video\"><a href=\"https://www.zachleat.com/web/rwd-perf/\">Performance and Responsive Web Design</a> <span class=\"tag video\">Video</span> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/icymi/2013/#performance-and-responsive-web-design-video\">#</a></h2> \n<p>This presentation was somewhat of a response to a few of the “RWD is slow” posts floating around. Related:</p> \n<blockquote class=\"twitter-tweet\" lang=\"en\">\n <p>If you mistakenly believe that “RWD sites are too large for mobile” try replacing that thought with “sites are too large.”</p>— Zach Leatherman (@zachleat) \n <a href=\"https://twitter.com/zachleat/statuses/394853543506501632\">October 28, 2013</a>\n</blockquote> \n<h2 id=\"fumbling-with-social-media-blog-post\"><a href=\"https://www.zachleat.com/web/fumbling-with-social-media/\">Fumbling with Social Media</a> <span class=\"tag blog-post\">Blog Post</span> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/icymi/2013/#fumbling-with-social-media-blog-post\">#</a></h2> \n<p>A bit of self-research looking at my own use of Social Media and struggle with the balancing act of self promotion.</p> \n<h2 id=\"impostor-syndrome-video\"><a href=\"https://www.zachleat.com/web/impostor/\">Impostor Syndrome</a> <span class=\"tag video\">Video</span> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/icymi/2013/#impostor-syndrome-video\">#</a></h2> \n<p>Don’t be afraid to share what you know.</p> \n<h2 id=\"a-tweet-highlight-2\">A <span class=\"tag tweet\">Tweet</span> Highlight <a class=\"direct-link\" href=\"http://www.zachleat.com/web/icymi/2013/#a-tweet-highlight-2\">#</a></h2> \n<blockquote class=\"twitter-tweet\" lang=\"en\">\n <p>In June 2013, Opera Mini/Mobile/Android had 251M unique users. No big deal. That’s only New York City times 30.</p>— Zach Leatherman (@zachleat) \n <a href=\"https://twitter.com/zachleat/statuses/361928822838403072\">July 29, 2013</a>\n</blockquote> \n<h2 id=\"a-tweet-highlight-3\">A <span class=\"tag tweet\">Tweet</span> Highlight <a class=\"direct-link\" href=\"http://www.zachleat.com/web/icymi/2013/#a-tweet-highlight-3\">#</a></h2> \n<blockquote class=\"twitter-tweet\" lang=\"en\">\n <p>Free bad idea of the day: “It’s like the Million Dollar Homepage but it’s responsive.”</p>— Zach Leatherman (@zachleat) \n <a href=\"https://twitter.com/zachleat/statuses/359695535298461698\">July 23, 2013</a>\n</blockquote> \n<h2 id=\"a-tweet-highlight-4\">A <span class=\"tag tweet\">Tweet</span> Highlight <a class=\"direct-link\" href=\"http://www.zachleat.com/web/icymi/2013/#a-tweet-highlight-4\">#</a></h2> \n<blockquote class=\"twitter-tweet\" lang=\"en\">\n <p>Browser Vendors should be embarrassed at how slow they’ve been to implement something for responsive images.</p>— Zach Leatherman (@zachleat) \n <a href=\"https://twitter.com/zachleat/statuses/337233815036624896\">May 22, 2013</a>\n</blockquote> \n<p>Reluctant to put this one on here because I felt like it was a little too snarky (even for me), but disappointly enough it’s been <a href=\"http://filamentgroup.com/lab/ricg_update/\">7 months since that tweet and we still don’t have consensus</a>.</p> \n<h2 id=\"nebraskajs\">NebraskaJS <a class=\"direct-link\" href=\"http://www.zachleat.com/web/icymi/2013/#nebraskajs\">#</a></h2> \n<p><a href=\"http://nebraskajs.com/\">NebraskaJS</a> added over 150 new members to the group and had its most successful meetup yet—<a href=\"http://www.meetup.com/nebraskajs/events/113451292/\">86 JavaScripters learning about AngularJS</a>! In 2013, we had 7 meetings averaging 65 registrations per meeting (not including our awesome Christmas party).</p> \n<h2 id=\"open-source\">Open Source <a class=\"direct-link\" href=\"http://www.zachleat.com/web/icymi/2013/#open-source\">#</a></h2> \n<p><em>Excluding Filament Group projects.</em></p> \n<ul> \n <li>Filed a ticket that got the minimium viewport size changed in Chrome: \n  <blockquote class=\"twitter-tweet\" lang=\"en\">\n   <p>Looks like they changed Chrome’s minimum viewport size from 400px to 320px. Great improvement! <a href=\"https://code.google.com/p/chromium/issues/detail?id=275686\">https://code.google.com/p/chromium/issues/detail?id=275686</a></p>— Zach Leatherman (@zachleat) \n   <a href=\"https://twitter.com/zachleat/statuses/381087403236007936\">September 20, 2013</a>\n  </blockquote></li> \n <li>A <a href=\"https://github.com/h5bp/html5please/commit/5eff35c47fefd6950092beeaeed932f9e5c5dde3\">crusade against using <code>placeholder</code> polyfills</a> resulted in a contribution to <a href=\"http://html5please.com/#placeholder\">html5please</a>.</li> \n <li>A crusade against vendor prefixes on <code>border-radius</code> resulted in contributions to <a href=\"https://github.com/stubbornella/csslint/commit/6fd5672e0b4ff09485de9990a127317cdf9a9afd\">csslint</a> and <a href=\"https://github.com/jquery/jquery-mobile/commit/eb42ca8116bad48e91679077551368b5bc2a9353\">jquery-mobile</a>.</li> \n <li>Added the <a href=\"https://github.com/voodootikigod/logo.js/commit/0aa3c656abd2781a039643e3cde5fcf08d296ef1\">NebraskaJS logo to logo.js</a>.</li> \n</ul> \n<h2 id=\"mini-projects\">Mini-Projects <a class=\"direct-link\" href=\"http://www.zachleat.com/web/icymi/2013/#mini-projects\">#</a></h2> \n<ul> \n <li>Published a <a href=\"https://gist.github.com/zachleat/5792681\">“Read in X Minutes” plugin for Jekyll</a>.</li> \n <li><a href=\"https://gist.github.com/zachleat/6386606\">AnchorsAway</a>, a bookmarklet to find and display anchor links to content on pages.</li> \n <li>Worked with <a href=\"https://twitter.com/jmhobbs\">John Hobbs</a> on <a href=\"https://chrome.google.com/webstore/detail/domain-swap/ngiiihlebepigjbefembddhdplmaghep/\">Domain Swap</a>, a Chrome Extension to easily switch between domains and keep the URL path.</li> \n <li>Worked with <a href=\"https://twitter.com/mattdsteele\">Matt Steele</a> to publish an <a href=\"https://github.com/zachleat/iliveinomaha-banner\">updated retina-friendly banner</a> for the <a href=\"https://twitter.com/iliveinomaha\">I Live in Omaha project</a>.</li> \n</ul>","descriptionType":"html","feedId":12519,"bgimg":"https://www.zachleat.com/web/img/posts/hindsight/business.png","linkMd5":"e9714ba5b38b41e3d9d7e9349bc6939b","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn93@2020_3/2020/08/25/02-02-04-240_1601d6b062e4b633.webp","destWidth":1122,"destHeight":684,"sourceBytes":125371,"destBytes":28516,"author":"","articleImgCdnMap":{"https://www.zachleat.com/web/img/posts/hindsight/business.png":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn93@2020_3/2020/08/25/02-02-04-240_1601d6b062e4b633.webp","https://www.zachleat.com/web/img/posts/hindsight/fixed-sticky.png":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn100@2020_3/2020/08/25/02-02-21-251_4757ff993d69759a.webp"},"publishedOrCreatedDate":1598320921764},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"TalkScript Episode #14","link":"http://www.zachleat.com/web/talkscript-podcast/","description":"\n\t\t\t<blockquote>\n<p>NEJS organizers, Lindsey Pfeifer and Zach Leatherman, join the TalkScript team to discuss the safari, train, wizard, and space themes of the past and present conferences, what on and off the record means, and why more tech conferences should take place in the midwest.</p>\n</blockquote>\n<p><a href=\"https://www.sitepen.com/blog/2018/08/15/episode-14-rick-risi-flying-cars-the-conference-was-excellent-live-at-nejs/\">Listen to the Interview (0:34:03) on sitepen.com</a></p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"4aed249b6a21afe646a7bf36f96d0aea","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921771},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Google Open Source Award for Eleventy","link":"http://www.zachleat.com/web/google-award/","description":"\n\t\t\t<p><em>Warning: In this post I will be tooting a horn that is my horn. The horn is mine and I will be the one that is tooting it. I know that when there is a horn, the person tooting the horn should ideally not be the person that owns the horn. I would be much more comfortable tooting a horn that is someone else’s horn. But I have been put into this uncomfortable position by someone taking my horn and tooting it. Mostly I just want Eleventy to be useful and this convinces people to try it out. Sorry (not sorry).</em></p>\n<hr>\n<p>Eleventy won a Google award! It’s great validation for the project and I sincerely appreciate it—<strong>thank you</strong>! Lots of great projects on that list and I’m delighted to see Eleventy mixed in there. 😍</p>\n<div class=\"primarylink\"><a href=\"https://opensource.googleblog.com/2018/03/congratulating-open-source-peer-bonus-winners.html\">Congratulating the latest Open Source Peer Bonus winners</a> (March 2, 2018)</div>\n<blockquote>\n<p>We’re pleased to introduce 2018’s first round of Open Source Peer Bonus winners. First started by the Google Open Source team seven years ago, this program encourages Google employees to express their gratitude to open source contributors.</p>\n</blockquote>\n<blockquote>\n<p>Twice a year Googlers nominate open source contributors outside of the company for their contributions to open source projects, including those used by Google. Nominees are reviewed by a team of volunteers and the winners receive our heartfelt thanks with a token of our appreciation.</p>\n</blockquote>\n<hr>\n<p>Find out more about Eleventy:\n\t<ul>\n\t\t<li><a href=\"https://www.zachleat.com/web/introducing-eleventy/\">Introducing Eleventy, a new Static Site Generator</a></li>\n\t \t<li><a href=\"https://www.11ty.io/\">11ty.io</a></li>\n\t \t<li><a href=\"https://github.com/11ty/eleventy\">eleventy on GitHub</a></li>\n\t</ul>\n</p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"19face5fb9a82c229fe1331b187fa19e","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921770},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"What Sound Does a Cow Make?  MooTools.","link":"http://www.zachleat.com/web/what-sound-does-a-cow-make-mootools/","description":"\n\t\t\t<p>Frameworks, Frameworks everywhere. There are the big six: Dojo, jQuery, prototype/scriptaculous, Ext, Mootools, and YUI. (Honorable meantion to Open Rico and Mochikit) I’ve had limited experience with all of these frameworks, but have actually worked on projects involving YUI and jQuery. So when I was shopping around for a framework that I didn’t have extensive experience with for my next project, I decided to with Mootools. They’ve been getting a lot of traffic lately for posting their <a href=\"http://mootools.net/slickspeed/\">SlickSpeed Selectors Test</a>, so I figured why not try their wares.</p>\n<p>Originally coming from the YUI Library (a strictly namespaced, well organized package), and then learning jQuery (a language with object chaining, a more object oriented approach, and a much larger community), the Mootools package definitely caught me off guard.</p>\n<p>My first surprise was that it put functions EVERYWHERE! The Core file puts approximately ten functions in the global namespace, with the only indicator that they belong to Mootools being that they had a dollar sign prefix (e.g. $extend). Couldn’t these go into one global Mootools object? $E, $ES? These are given shortcuts with the normal $ and $$ functions. It just seems all over the place.</p>\n<p>That being said, there is a lot of good functionality in the base Mootools distribution. A built in class to do Json communication (something YUI is lacking, although I’m sure it wouldn’t be too hard to port it in from Captain Crockford’s Code on his website), a class to Scroll to elements with nice transitions. It seems like everytime I would hit a “functional” snag in my project, I could find the exact code I needed already included in the core file.</p>\n<p>I love their download page! Autopackaged code using Dean Edwards’ Packer. One small complaint is that there is no option to disable automatic include of dependencies. They want you to package Mootools into one single file everytime (which is unwieldy, considering I have to maintain my own text file of which packages I put into the source code, if I don’t want everything), and don’t let you download just a certain package for separate inclusion. But when the whole thing weighs in at 40KB, why does it even matter? I would recommend just downloading all the Components together and just not worrying about it.</p>\n<p>All in all, I’m quite happy with my Mootools experience. I’ve definitely found that their SmoothScroll class and easy Color fading techniques are used pretty heavily by developers using Mootools, which gives you a sixth sense that the page you’re viewing is using the Mootools library. Sometimes I can just tell without even looking at the source files, which in this case is a good thing, given that we’re talking about animation techniques and not raw widget style. But I plan on writing more about my pet peeves with framework widget styles later on.</p>\n<p>If you’ve been using one framework for a really long time, I would recommend checking out Mootools. Or any other framework. The more frameworks that you’ve tried, the better your perspective is on JavaScript in general, and what your framework’s strengths and weaknesses are. Mix it up!</p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"b7eeee054dfab171e1b1683c153dbf66","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921760},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Device Independence on the Open Web","link":"http://www.zachleat.com/web/device-independence/","description":"<p>Open Web advocacy can get pretty lonely working in Big Enterprise. Armed with slow moving standards bodies, and held back by antiquated browser support, architectural battles over tools and frameworks can get pretty hairy if you don’t approach them with the right frame of mind.</p> \n<p>Big Enterprise is traditionally known for creating development environments that foster a “get it done” mentality, often rewarding results over correctness (mileage, of course, may vary).</p> \n<blockquote> \n <p>My company uses IE6, and the application works in IE6, so it’s done!</p> \n</blockquote> \n<p>This little quagmire is amplified by the fact that when using Open Web technology, there are many ways to get things done, and most of them are incorrect. But those mistakes don’t manifest themselves until the project is in the hands of the end user, whom we often punish for our oversight.</p> \n<p>But there is hope. Using the power of web standards and Open Web best practices, we can achieve something panoramically, not microscopically, beautiful.</p> \n<p>The secret sauce of building for the Web isn’t its distribution model, in which updates are managed on the web server without the need to update software on the client (although the Anti-IE6 vigilantes would tell you differently). It most certainly isn’t development efficiency, as most people new to the game will so readily inform you of. Cross browser quirks due to non-standard browser implementations of CSS and JavaScript, or vague standards specifications have seen to that.</p> \n<blockquote> \n <p>When I was writing Visual Basic, I got my job done so much quicker and easier!</p> \n</blockquote> \n<h2 id=\"the-power-of-the-open-web-is-device-independence.\">The power of the Open Web is Device Independence. <a class=\"direct-link\" href=\"http://www.zachleat.com/web/device-independence/#the-power-of-the-open-web-is-device-independence.\">#</a></h2> \n<p>Visitors to our sites <strong>shouldn’t be met with warnings</strong> about what device they’ve chosen to use.</p> \n<blockquote> \n <p>This site viewable only in IE7 , Firefox, Chrome, or Safari, and at minimum 1024×768 resolution.</p> \n</blockquote> \n<blockquote> \n <p>This site requires Flash or Silverlight</p> \n</blockquote> \n<p>I realize that this is a controversial stance, especially given that most sites are dropping support for IE6, and more are relying on Flash and Silverlight plugins. <strong>Architect applications to your client device usage statistics, and don’t let your tools shape the statistics for you.</strong> Using techniques like progressive enhancement, we can ensure that our sites degrade gracefully to the capabilities of the client device. At it’s truest form, this is basic accessibility. But, Device Independence might be a more accurate term, since accessibility is unfortunately an overloaded term scoped solely with devices tied to disabilities (screen readers, for example). While screen readers are a very important piece, there is a bigger picture.</p> \n<p>When the iPhone came out, there was an uproar because it didn’t support Flash, for battery life and other reasons. But the uproar was from developers who had designed applications specifically for Flash! Would you say that those Flash applications were designed with device independence in mind? YouTube got around this by encoding their videos in MP4 format, which arguably has a higher device independence rating than the Flash format.</p> \n<p>Keep in mind that we’re <strong>not attempting to handle every permutation of end user browser settings</strong>, since most don’t change the defaults. Instead we are trying to scoop up the largest base of supported devices with the least amount of effort! Who cares if an end user disabled JavaScript in their preferences? I’m more worried about the mobile browser that doesn’t even support JavaScript at all. But when you use Open Web properly, you get support for both!</p> \n<h2 id=\"output-device-independence\">Output Device Independence <a class=\"direct-link\" href=\"http://www.zachleat.com/web/device-independence/#output-device-independence\">#</a></h2> \n<ul> \n <li>Full Web Browsers: Does your site work in Opera? Don’t worry about pixel perfection, that’s something completely different — does it work?</li> \n <li>Web Browsers on Mobiles</li> \n <li>Search Engine Spiders and other Screen Scrapers</li> \n <li>Screen Readers</li> \n <li>Printers: Ever had to make an entirely separate page for print-friendly version of your application? Flash/Silverlight <strong>do not</strong> print well</li> \n <li>Televisions: Xbox 360, Wii, and Other Media Center Devices</li> \n <li>Projectors</li> \n <li><em>and more…</em></li> \n</ul> \n<p>Take a look at the <a href=\"http://www.w3.org/TR/CSS21/media.html#media-types\">CSS specification for media types</a>. The standards are there! Support for CSS media types isn’t fool proof by any means, but the end goal is clearly visible.</p> \n<h2 id=\"input-device-independence\">Input Device Independence <a class=\"direct-link\" href=\"http://www.zachleat.com/web/device-independence/#input-device-independence\">#</a></h2> \n<p>But I’m not just talking about output device independence either. User interfaces should be adaptable to different input devices as well.</p> \n<ul> \n <li>Mouse</li> \n <li>Keyboard (often overlooked in web applications)</li> \n <li>Touch Screens (Single and <a href=\"http://hacks.mozilla.org/2009/08/multi-touch-firefox/\">Multi-touch</a>)</li> \n <li>Voice, Motion Capture, and Facial Recognition (the standards and technology aren’t quite there yet, but <a href=\"http://hacks.mozilla.org/2009/06/connecting-html5-video/\">progress is being made</a>)</li> \n <li><em>and more…</em></li> \n</ul> \n<p>The world is developing the Open Web, and it isn’t limited by a single company’s goals and timelines. At times, Open Web may seem like it’s a very slow moving <strong>glacier</strong> headed our way, but what else can you do but laugh when companies try to <strong>power their Titanic right through it</strong>?</p> \n<p><em>Article originally inspired by <a href=\"http://developer.yahoo.com/yui/articles/gbs/#history\">Yahoo’s Graded Browser Support</a>.</em></p>","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"027624396538cc31327238cd5975430e","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921762},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"The Ten Twitter Commandments","link":"http://www.zachleat.com/web/twitter-guide/","description":"\n\t\t\t<!-- TO ADD: disable RTs on a specific user -->\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.002.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.002.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<p>Here’s Charlton as Moses.</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<div class=\"slide-image\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/carlton.gif\" alt=\"\">\n\t</div>\n\t<div class=\"slide-annotations\">\n\t\t<p>Not Carlton from Fresh Prince.</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.002.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.002.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<p>Charlton Heston</p>\n\t\t<p>He has these two tablets with a bunch of rules on them.</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.005.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.005.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<p>Tweetable rules, mind you—less than 140 characters here.</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.006.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.006.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<p>And I’m here to translate these rules for you and teach you a little bit about Twitter. How to use it, how to get the most out of it, and some advanced tricks you might not know.</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.007.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.007.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<p>This is The Ten Twitter Commandments.</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.009.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.009.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<p>Four categories: <ol><li>Your Account</li><li>Posting Tweets</li><li>Building an Audience</li><li>Privacy</li></ol></p>\n\t\t<p>First up, your account.</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.011.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.011.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<h2>Twitter Commandment #1</h2>\n\t\t<p>Thou shalt not use the default profile picture. Use a real profile picture, it’s more authentic.</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.012.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.012.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<p>The default used to be an egg, which was clever given Twitter’s bird theme.</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.013.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.013.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<p>That was too creative so the design had to be dampened with this literally-spineless abomination.</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.014.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.014.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<p>I think this one is great because I like my profile picture to look like I’ve just returned from your house and I’ve secretly licked one item in your refrigerator. You don’t know which one.</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.016.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.016.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<h2>Twitter Commandment #2</h2>\n\t\t<p>Thou shalt use your display name as a political weapon.</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.018.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.018.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<p>When you get retweeted by someone you don’t want to be retweeted by, change your display name. Then your new name will show up on their page. (via <a href=\"https://twitter.com/theshrillest/status/898618621609484288\" target=\"_blank\">@theshrillest</a>)</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.019.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.019.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t(via <a href=\"https://twitter.com/libbycwatson/status/898618066686398465\" target=\"_blank\">@libbycwatson</a>)\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.020.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.020.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<p><em>“cernovich is bad imo”</em></p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.021.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.021.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<p><em>“Thernovich Thucks”</em> via <a href=\"https://twitter.com/rachelmillman/status/899693584227676163\" target=\"_blank\">@rachelmillman</a></p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.023.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.023.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<h2>Twitter Commandment #3</h2>\n\t\t<p>Thou shalt not follow the Twitter default recommendations and shitty celebrities, like reality TV b-lister @realDonaldTrump.</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<video class=\"slide-image\" src=\"https://www.zachleat.com/presentations/twitter-commandments/hestonzoom1.mp4\" muted=\"\" loop=\"\" controls=\"\">\n\t\tSorry, your browser doesn't support embedded videos. Try <a href=\"https://www.zachleat.com/presentations/twitter-commandments/hestonzoom1.mp4\">downloading it</a> instead.\n\t</video>\n\t<div class=\"slide-annotations\"></div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.026.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.026.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<h2>Twitter Commandment #4</h2>\n\t\t<p>Thou shalt have very mixed feelings about Twitter verification, aka Twitter’s caste system.</p>\n\t\t<p>Sometimes you get benefits, like higher priority display on replies to big tweets. And verification is good for celebrities and brands™. But for everyone else it’s just kind of a Sneetches situation.</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.027.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.027.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<p>One of my favorite Dr. Seuss books, basically there are two types of Sneetches, ones with stars and ones without. Then this dude rolls up with a machine that can both tattoo stars and remove star tattoos (for a price) and mayhem ensues.</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.028.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.028.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\tNext section, posting tweets.\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.030.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.030.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<h2>Twitter Commandment #5</h2>\n\t\t<p>Thou shalt not tweet a picture of a wall of text that is clearly longer than 140 characters. If the 10 commandments can fit in a tweet, so can your hot take on Kendal Jenner’s Pepsi commercial.</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.031.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.031.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<p>140 characters be damned.</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.032.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.032.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<p>Be concise unlike this 4 hour monstrosity.</p>\n\t\t<p><strong>MORE LIKE BEN HURRY UP amirite</strong></p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.034.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.034.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<h2>Twitter Commandment #6</h2>\n\t\t<p>If thou dost post images, post with ALT text for maximum accessibility.</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.035.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.035.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<p>Open up your Settings, navigate to the Accessibility section and check the <em>Compose image descriptions</em> checkbox. You’ll now see an <em>Add description</em> button on images in the web UI. Available on <a href=\"https://support.twitter.com/articles/20174660\">other clients too</a>.</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.037.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.037.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<h2>Twitter Commandment #7</h2>\n\t\t<p>Thou shalt retweet thyself instead of posting a separate ICYMI tweet. Thou shalt only unretweet and re-retweet in emergency situations. While unretweet and re-retweet does show again in others timelines, but is generally considered poor form.</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<video class=\"slide-image\" src=\"https://www.zachleat.com/presentations/twitter-commandments/hestonzoom2.mp4\" muted=\"\" loop=\"\" controls=\"\">\n\t\tSorry, your browser doesn't support embedded videos. Try <a href=\"https://www.zachleat.com/presentations/twitter-commandments/hestonzoom2.mp4\">downloading it</a> instead.\n\t</video>\n\t<div class=\"slide-annotations\"></div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.040.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.040.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<h2>Twitter Commandment #8</h2>\n\t\t<p>Thou shalt understand the difference between a reply and an @-mention.</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.041.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.041.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<p>Find a tweet you want to reply to.</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.042.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.042.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<p>Then click the little word bubble icon below the tweet to expose a Reply textbox.</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.043.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.043.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<p>An @-mention is a tweet without context, from scratch, that has no prior tweets attached to it. It’s a new conversation.</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.044.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.044.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<p>If I @-mention someone, it shows up on all of my followers streams. If I reply to someone, it only shows up in the streams of the cross section of people that follow both of us.</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.045.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.045.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<p>Of course if people navigate to the tweet manually, they’ll see my reply. It’ll be higher up in the list if I’m verified. It may be hidden if I used a <em>NAUGHTY WORD</em>.</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.046.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.046.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<p>If I want to signal boost a reply to all of my followers, I can simply retweet it.</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.047.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.047.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<p>Another common pattern on Twitter is the Twitter thread, a long list of replies to your own tweets. It’s like a blog post, but harder to read and sometimes painfully non-linear (but definitely more atomically sharable).</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<video class=\"slide-image\" src=\"https://www.zachleat.com/presentations/twitter-commandments/hestonzoom3.mp4\" muted=\"\" loop=\"\" controls=\"\">\n\t\tSorry, your browser doesn't support embedded videos. Try <a href=\"https://www.zachleat.com/presentations/twitter-commandments/hestonzoom3.mp4\">downloading it</a> instead.\n\t</video>\n\t<div class=\"slide-annotations\"></div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.050.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.050.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<h2>Twitter Commandment #9</h2>\n\t\t<p>Thou shalt properly attribute source material when quoting someone or linking to something they wrote. @-mention them!</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.051.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.051.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<p>A quote tweet is like a retweet but with your own comment attached to it.</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.052.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.052.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<p>Retweets are the best way to credit the original author. Only use quote tweets if you have a unique perspective to add. “This is awesome” is not a unique perspective.</p>\n\t\t<p>Sometimes when I see an unnecessary quote tweet, I’ll retweet the original post instead. Or quote tweet the original and throw a (via…) in there to reward whoever shared it into my stream.</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.053.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.053.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<p>Retweets are better than quote tweets. Quote tweets divide the conversation.</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.054.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.054.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<p>(Embedded tweet, see original from <a href=\"https://twitter.com/badbanana/status/214090334177738752\" target=\"_blank\">@badbanana</a>)</p>\n\t\t<p>Don’t steal tweets. It’s easy to search for tweet text. If attribution is missing (for whatever reason), it’s very helpful to reply and add it to the conversation!</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.056.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.056.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<h2>Twitter Commandment #10</h2>\n\t\t<p>Thou shalt subtweet bad actors with the darkest shade.</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.057.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.057.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<p>(Embedded tweet, see original from <a href=\"https://twitter.com/zachleat/status/735921185569964032\">@zachleat</a>)</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.058.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.058.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<p>(Embedded tweet, see original from <a href=\"https://twitter.com/zachleat/status/783408416970596352\">@zachleat</a>)</p>\n\t\t<p>Apparently I’ve increased subtweet frequency from monthly to weekly. Watch out.</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.059.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.059.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<p>(Embedded tweet, see original from <a href=\"https://twitter.com/zachleat/status/573212883326246912\">@zachleat</a>)</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.061.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.061.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<p><em>Two months pass…</em></p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.062.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.062.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<p>(Embedded tweet, see original from <a href=\"https://twitter.com/zachleat/status/598269517215698944\">@zachleat</a>)</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.060.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.060.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<p>Another thing you can do to cast shade is the passive aggressive public list addition—which shows up in their notifications. I am a (now proud) member of <a href=\"https://twitter.com/hul/lists/the-worst-club\">The Worst Club</a> on Twitter.</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.063.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.063.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<p>How do you know if you’re a bad actor or if your tweet was worthy of shade?</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<video class=\"slide-image\" src=\"https://www.zachleat.com/presentations/twitter-commandments/hestonzoom4.mp4\" muted=\"\" loop=\"\" controls=\"\">\n\t\tSorry, your browser doesn't support embedded videos. Try <a href=\"https://www.zachleat.com/presentations/twitter-commandments/hestonzoom4.mp4\">downloading it</a> instead.\n\t</video>\n\t<div class=\"slide-annotations\">\n\t\t<p>Charlton Heston knows.</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.065.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.065.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<p>A writer for <a href=\"http://www.esquire.com/news-politics/news/a54440/twitter-ratio-reply/\">Esquire named Luke O’Neil has a working theory he’s calling The Ratio™</a>.</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.066.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.066.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<p>Compare the number of replies to the number of retweets. If your replies are greater, your tweet is suspect.</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.067.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.067.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<p>(Embedded tweet, see original from <a href=\"https://twitter.com/lukeoneil47/status/899026307480256512\">@lukeoneil47</a>)</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.069.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.069.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<h2>Twitter Commandment #10</h2>\n\t\t<p>Thou shalt use common tweet formulas (also known as memes) for maximum cultural relevance (just kidding—do it for the retweets).</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.070.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.070.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<blockquote>“Some people, when confronted with a problem, think ‘I know, I’ll use regular expressions.’ Now they have two problems.”—<a href=\"https://twitter.com/jwz\">@jwz</a></blockquote>\n\t\t<p>(via <a href=\"http://regex.info/blog/2006-09-15/247\">regex.info</a>)</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.071.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.071.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<p>Convert this well known quote into a reusable tweet formula.</p>\n\t\t<p><em>Some people, when confronted with a problem, think ‘I know, I’ll use _____.’ Now they have two problems.</em>—via <a href=\"https://twitter.com/jwz\">@jwz</a></p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.072.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.072.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<p>Good, fast, or cheap—pick two.</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.073.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.073.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<p>Convert this well known quote into a reusable tweet formula.</p>\n\t\t<p>(List three things that don’t go together)—pick two.</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.074.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.074.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<p>Here’s another commonly used pattern: <em>_____ is the hardest problem in computer science</em>.</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.076.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.076.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<p>(Embedded tweet, see original from <a href=\"https://twitter.com/DOGGEAUX/status/883297522269143040\">@DOGGEAUX</a>)</p>\n\t\t<p>This meme. I have no idea.</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.077.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.077.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<p>(Embedded tweet, see original from <a href=\"https://twitter.com/KrangTNelson/status/901235977540190209\">@KrangTNelson</a>)</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.078.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.078.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<p>This meme is derived from problematic binary gender selections on web forms.</p>\n\t\t<p>(Embedded tweet, see original from <a href=\"https://twitter.com/serendipetty/status/899276271821213696\">@serendipetty</a>)</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.079.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.079.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<p>(Embedded tweet, see original from <a href=\"https://twitter.com/decentbirthday/status/900406775953928192\">@decentbirthday</a>)</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.080.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.080.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<p>(Embedded tweet, see original from <a href=\"https://twitter.com/PFTompkins/status/877564631111286784\">@PFTompkins</a>)</p>\n\t\t<p>Paul F. Tompkins is great. Also this tweet is great. A nice side product of this tweet is that people replied to it with a lot of tweet memes 😎.</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.081.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.081.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<p>Alright, the next section is about Building an Audience.</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.083.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.083.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<h2>Twitter Commandment #10</h2>\n\t\t<p>Thou shalt not use skeevy methods to build your follower count.</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.084.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.084.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<p><del><span class=\"sr-only\">Do not</span> Buy followers.</del></p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.085.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.085.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<p><del><span class=\"sr-only\">Do not</span> Use meaningless growth hacking hashtags like #teamfollowback.</del></p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.086.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.086.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<p><del><span class=\"sr-only\">Do not</span> Follow mass amounts of people hoping they’ll reciprocate and then unfollow them later.</del></p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.087.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.087.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<p>Follower count means nothing if they’re all zombie bots that don’t engage with your tweets.</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.088.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.088.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<p>Cheap, fast, or good followers.</p>\n\t\t<p><del>Cheap, fast, or </del>good followers.</p>\n\t\t<p>Pick one.</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.089.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.089.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<p>Really the best way to build your follower count is to do things outside of Twitter. Popular tweets rarely earn followers.</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.090.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.090.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<p>(Embedded tweet, see original from <a href=\"https://twitter.com/pondsizedocean/status/888028743759011842\" target=\"_blank\">@pondsizedocean</a>)</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.091.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.091.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<p>22,234 Retweets.</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.092.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.092.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<p><em>One month passes…</em></p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.093.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.093.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<p>Only 473 followers. This isn’t a problem with @xenia. It’s a problem with Twitter. If you do a successful tweet, the least you should get out of it is a few followers. Twitter needs to make design changes to facilitate this.</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.094.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.094.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<p>The secret is that there really isn’t a secret. You have to make friends. Talk to people and be nice. Be liberal with your <del>likes</del> favorites.</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.095.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.095.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<p>Lastly, I want to talk about Privacy.</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.097.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.097.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<h2>Twitter Commandment #10</h2>\n\t\t<p>Thou shalt turn off read receipts on Direct Messages (gross). Twitter has made some nice changes to this—allowing you to choose to accept a conversation from someone you don’t know, but I’d still encourage disabling read receipts.</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.099.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.099.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<h2>Twitter Commandment #10</h2>\n\t\t<p>If thou wants to remove someone from your Twitter experience, prefer Mute to Block. If you block, the person you’ve blocked can find out. If that person is problematic—it’s better if they don’t know—mute does this.</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.101.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.101.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<h2>Twitter Commandment #10</h2>\n\t\t<p>If thou doest not want to mute or block, thee can hit the block button and then unblock to force someone to unfollow you. It’s called the Soft Block</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.102.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.102.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\"></div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.103.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.103.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<p>Side note, did you know that Charlton Heston starred in a movie called The Savage? Yeah, this movie poster kinda says it all.</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.104.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.104.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<p>104/104 In conclusion, hopefully this gives you a look at some of the more nuanced pieces of Twitter.</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.105.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.105.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<p>As Twitter has grown and aged, much like Charlton Heston did—it’s gotten worse and arguably more racist. But unlike Charlton Heston, Twitter still has the opportunity to grow and be better.</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.106.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.106.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<p>Yeah—in the mean time we might all die from thermonuclear war the President escalated on Twitter—but weren’t all of those sensible chuckles worth it?</p>\n\t</div>\n</div>\n<div class=\"slide\">\n\t<picture class=\"slide-image\">\n\t\t<source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/twitter-commandments/images.107.webp\">\n\t\t<img src=\"https://www.zachleat.com/presentations/twitter-commandments/images.107.jpg\" alt=\"\">\n\t</picture>\n\t<div class=\"slide-annotations\">\n\t\t<p>At the end of the day, Twitter—just like <a href=\"https://www.youtube.com/watch?v=9IKVj4l5GU4\">Soylent Green</a>—is people. It’s made out of people. If you follow good people, hopefully you’ll get good things out of it.</p>\n\t</div>\n</div>\n<p class=\"credits\">Created with <a href=\"https://www.keynote-extractor.com/\">Keynote Extractor</a>.</p>\n<div class=\"retweettoshare\">\n\t<h3 class=\"retweettoshare_title\">Retweet to share this post</h3>\n\t<div class=\"retweettoshare_widget\">\n\t\t<blockquote class=\"twitter-tweet\" data-lang=\"en\"><p lang=\"en\" dir=\"ltr\">★ The Ten Twitter Commandments <a href=\"https://t.co/f1ApEuZamm\">https://t.co/f1ApEuZamm</a><br><br>A talk full of advanced tips for using Twitter.</p>&mdash; Zach Leatherman (@zachleat) <a href=\"https://twitter.com/zachleat/status/902533984202235904\">August 29, 2017</a></blockquote>\n\t</div>\n</div>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"https://www.zachleat.com/presentations/twitter-commandments/images.002.jpg","linkMd5":"f5d29c8b7279e5c5f3cee357ec80b8cd","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn42@2020_1/2020/08/25/02-02-03-997_0a7a2e13a0d33fb8.webp","destWidth":1024,"destHeight":768,"sourceBytes":172859,"destBytes":68736,"author":"","articleImgCdnMap":{"https://www.zachleat.com/presentations/twitter-commandments/images.002.jpg":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn42@2020_1/2020/08/25/02-02-03-997_0a7a2e13a0d33fb8.webp","https://www.zachleat.com/presentations/twitter-commandments/carlton.gif":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn97@2020_6/2020/08/25/02-02-14-717_96eecaa5e64a3855.webp","https://www.zachleat.com/presentations/twitter-commandments/images.005.jpg":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn67@2020_5/2020/08/25/02-02-20-675_d0bd03c4fdcb868c.webp","https://www.zachleat.com/presentations/twitter-commandments/images.006.jpg":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn27@2020_3/2020/08/25/02-02-20-415_b1498ef6c1190843.webp","https://www.zachleat.com/presentations/twitter-commandments/images.007.jpg":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn51@2020_3/2020/08/25/02-02-22-898_b77d100416a44116.webp","https://www.zachleat.com/presentations/twitter-commandments/images.009.jpg":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn18@2020_4/2020/08/25/02-02-10-181_47728f2f67f4f0ef.webp","https://www.zachleat.com/presentations/twitter-commandments/images.011.jpg":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn55@2020_6/2020/08/25/02-02-18-286_3a3655775e8b3d17.webp","https://www.zachleat.com/presentations/twitter-commandments/images.012.jpg":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn44@2020_5/2020/08/25/02-02-14-886_0352122101129998.webp","https://www.zachleat.com/presentations/twitter-commandments/images.013.jpg":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn19@2020_4/2020/08/25/02-02-15-014_fcb0114d16ebe047.webp","https://www.zachleat.com/presentations/twitter-commandments/images.014.jpg":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn69@2020_4/2020/08/25/02-02-11-867_dd0e08cbeac81b8d.webp","https://www.zachleat.com/presentations/twitter-commandments/images.016.jpg":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn45@2020_1/2020/08/25/02-02-10-715_73ff33082e001987.webp","https://www.zachleat.com/presentations/twitter-commandments/images.018.jpg":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn30@2020_3/2020/08/25/02-02-12-079_bcbe52300b46b291.webp","https://www.zachleat.com/presentations/twitter-commandments/images.019.jpg":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn62@2020_1/2020/08/25/02-02-10-185_bb75875a532820cc.webp","https://www.zachleat.com/presentations/twitter-commandments/images.020.jpg":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn55@2020_3/2020/08/25/02-02-20-932_2a494926f3aa8bf9.webp","https://www.zachleat.com/presentations/twitter-commandments/images.021.jpg":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn92@2020_6/2020/08/25/02-02-20-651_ded8132b1e88bccf.webp","https://www.zachleat.com/presentations/twitter-commandments/images.023.jpg":"https://cdn.jsdelivr.net/gh/myreaderx/cdn90@2020_5/2020/08/25/02-02-10-726_fc46416e5a5d851f.webp","https://www.zachleat.com/presentations/twitter-commandments/images.026.jpg":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn25@2020_4/2020/08/25/02-02-10-639_dd06cc7853b6c4c1.webp","https://www.zachleat.com/presentations/twitter-commandments/images.027.jpg":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn27@2020_3/2020/08/25/02-02-14-722_1f90b712d6de9c38.webp","https://www.zachleat.com/presentations/twitter-commandments/images.028.jpg":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn95@2020_1/2020/08/25/02-02-17-866_e7c4a940dc15db09.webp","https://www.zachleat.com/presentations/twitter-commandments/images.030.jpg":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn11@2020_6/2020/08/25/02-02-19-566_093d4f71709026f8.webp","https://www.zachleat.com/presentations/twitter-commandments/images.031.jpg":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn73@2020_1/2020/08/25/02-02-10-324_de89f2da299199b9.webp","https://www.zachleat.com/presentations/twitter-commandments/images.032.jpg":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn41@2020_2/2020/08/25/02-02-17-617_41e983a44f3d277c.webp","https://www.zachleat.com/presentations/twitter-commandments/images.034.jpg":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn54@2020_6/2020/08/25/02-02-10-176_2522545f22d4fd03.webp","https://www.zachleat.com/presentations/twitter-commandments/images.035.jpg":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn16@2020_4/2020/08/25/02-02-21-637_41961cf1c462b664.webp","https://www.zachleat.com/presentations/twitter-commandments/images.037.jpg":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn19@2020_6/2020/08/25/02-02-20-683_48622b367a8cea9a.webp","https://www.zachleat.com/presentations/twitter-commandments/images.040.jpg":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn90@2020_6/2020/08/25/02-02-13-342_3cdefbb2acb187fa.webp","https://www.zachleat.com/presentations/twitter-commandments/images.041.jpg":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn3@2020_1/2020/08/25/02-02-15-883_ac10244ebcbce942.webp","https://www.zachleat.com/presentations/twitter-commandments/images.042.jpg":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn82@2020_6/2020/08/25/02-02-10-853_68da310116c21fe3.webp","https://www.zachleat.com/presentations/twitter-commandments/images.043.jpg":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn34@2020_2/2020/08/25/02-02-10-183_95f9db118f1a0ee3.webp","https://www.zachleat.com/presentations/twitter-commandments/images.044.jpg":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn57@2020_3/2020/08/25/02-02-10-208_49d722fa192eb4c6.webp","https://www.zachleat.com/presentations/twitter-commandments/images.045.jpg":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn42@2020_3/2020/08/25/02-02-13-305_cd3d8d7dafa4b122.webp","https://www.zachleat.com/presentations/twitter-commandments/images.046.jpg":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn72@2020_3/2020/08/25/02-02-19-251_7be372ca5dd5b94f.webp","https://www.zachleat.com/presentations/twitter-commandments/images.047.jpg":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn3@2020_6/2020/08/25/02-02-18-967_58b1665020c806d7.webp","https://www.zachleat.com/presentations/twitter-commandments/images.050.jpg":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn70@2020_4/2020/08/25/02-02-10-263_064df9285a8c3747.webp","https://www.zachleat.com/presentations/twitter-commandments/images.051.jpg":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn5@2020_3/2020/08/25/02-02-11-409_123527f89b2cfe15.webp","https://www.zachleat.com/presentations/twitter-commandments/images.052.jpg":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn21@2020_5/2020/08/25/02-02-18-676_aea9c2eefdd824d0.webp","https://www.zachleat.com/presentations/twitter-commandments/images.053.jpg":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn5@2020_1/2020/08/25/02-02-12-465_3cd20ed1d6c8a42a.webp","https://www.zachleat.com/presentations/twitter-commandments/images.054.jpg":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn54@2020_5/2020/08/25/02-02-19-947_3f98577b6bd2eaa5.webp","https://www.zachleat.com/presentations/twitter-commandments/images.056.jpg":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn28@2020_4/2020/08/25/02-02-16-230_247583084266c944.webp","https://www.zachleat.com/presentations/twitter-commandments/images.057.jpg":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn39@2020_2/2020/08/25/02-02-16-191_2845829a16345a2f.webp","https://www.zachleat.com/presentations/twitter-commandments/images.058.jpg":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn31@2020_3/2020/08/25/02-02-17-660_78f59edc7e35aba2.webp","https://www.zachleat.com/presentations/twitter-commandments/images.059.jpg":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn99@2020_4/2020/08/25/02-02-18-891_e73957b59fa0c345.webp","https://www.zachleat.com/presentations/twitter-commandments/images.061.jpg":"https://cdn.jsdelivr.net/gh/myreaderx/cdn60@2020_2/2020/08/25/02-02-20-049_5e3f030f219aea80.webp","https://www.zachleat.com/presentations/twitter-commandments/images.062.jpg":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn39@2020_3/2020/08/25/02-02-21-835_dc20dbc6b7bfb5bd.webp","https://www.zachleat.com/presentations/twitter-commandments/images.060.jpg":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn4@2020_3/2020/08/25/02-02-20-979_7829314d9c6d721a.webp","https://www.zachleat.com/presentations/twitter-commandments/images.063.jpg":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn51@2020_1/2020/08/25/02-02-21-265_477f5947eb24ec75.webp","https://www.zachleat.com/presentations/twitter-commandments/images.065.jpg":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn31@2020_1/2020/08/25/02-02-16-236_fdc574a264d8560f.webp","https://www.zachleat.com/presentations/twitter-commandments/images.066.jpg":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn59@2020_1/2020/08/25/02-02-19-155_c00929ecbdba9b87.webp","https://www.zachleat.com/presentations/twitter-commandments/images.067.jpg":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn87@2020_4/2020/08/25/02-02-18-142_904924c9ae3c44e5.webp","https://www.zachleat.com/presentations/twitter-commandments/images.069.jpg":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn78@2020_1/2020/08/25/02-02-13-212_c11cac7af073ac2c.webp","https://www.zachleat.com/presentations/twitter-commandments/images.070.jpg":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn42@2020_1/2020/08/25/02-02-13-175_86c8023186dd9f4c.webp","https://www.zachleat.com/presentations/twitter-commandments/images.071.jpg":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn92@2020_2/2020/08/25/02-02-18-157_7c9a5e185c39e477.webp","https://www.zachleat.com/presentations/twitter-commandments/images.072.jpg":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn55@2020_1/2020/08/25/02-02-19-026_218bc9440c71963a.webp","https://www.zachleat.com/presentations/twitter-commandments/images.073.jpg":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn7@2020_6/2020/08/25/02-02-19-574_4f2184d7be60409a.webp","https://www.zachleat.com/presentations/twitter-commandments/images.074.jpg":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn52@2020_4/2020/08/25/02-02-19-443_f586bc6c1ec19b16.webp","https://www.zachleat.com/presentations/twitter-commandments/images.076.jpg":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn87@2020_5/2020/08/25/02-02-20-527_2c5896b1ffd8b278.webp","https://www.zachleat.com/presentations/twitter-commandments/images.077.jpg":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn36@2020_5/2020/08/25/02-02-19-914_5be27c159320351b.webp","https://www.zachleat.com/presentations/twitter-commandments/images.078.jpg":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn19@2020_5/2020/08/25/02-02-21-781_a070c4b799a154f7.webp","https://www.zachleat.com/presentations/twitter-commandments/images.079.jpg":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn67@2020_6/2020/08/25/02-02-21-044_e88be965a63d6137.webp","https://www.zachleat.com/presentations/twitter-commandments/images.080.jpg":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn67@2020_3/2020/08/25/02-02-19-246_822553d3bc9210ed.webp","https://www.zachleat.com/presentations/twitter-commandments/images.081.jpg":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn35@2020_1/2020/08/25/02-02-16-568_9f33c7ce5c73c26d.webp","https://www.zachleat.com/presentations/twitter-commandments/images.083.jpg":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn19@2020_4/2020/08/25/02-02-13-773_20c29275a08a970c.webp","https://www.zachleat.com/presentations/twitter-commandments/images.084.jpg":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn68@2020_5/2020/08/25/02-02-16-514_9ee4fdea2bcb5a4c.webp","https://www.zachleat.com/presentations/twitter-commandments/images.085.jpg":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn13@2020_6/2020/08/25/02-02-12-354_40b1f7f074c778cf.webp","https://www.zachleat.com/presentations/twitter-commandments/images.086.jpg":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn73@2020_5/2020/08/25/02-02-13-260_35302d17630822b1.webp","https://www.zachleat.com/presentations/twitter-commandments/images.087.jpg":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn54@2020_1/2020/08/25/02-02-10-130_4622eafa98a9a8af.webp","https://www.zachleat.com/presentations/twitter-commandments/images.088.jpg":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn34@2020_3/2020/08/25/02-02-11-970_6c535a4bb8066678.webp","https://www.zachleat.com/presentations/twitter-commandments/images.089.jpg":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn97@2020_4/2020/08/25/02-02-11-272_b0573a7f6c3d9fed.webp","https://www.zachleat.com/presentations/twitter-commandments/images.090.jpg":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn91@2020_3/2020/08/25/02-02-21-564_04120daad0716b1d.webp","https://www.zachleat.com/presentations/twitter-commandments/images.091.jpg":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn87@2020_6/2020/08/25/02-02-21-381_2b214a40b9c73921.webp","https://www.zachleat.com/presentations/twitter-commandments/images.092.jpg":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn23@2020_4/2020/08/25/02-02-21-089_4d9065047c7f385a.webp","https://www.zachleat.com/presentations/twitter-commandments/images.093.jpg":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn52@2020_4/2020/08/25/02-02-20-666_f4332240ecfb25fe.webp","https://www.zachleat.com/presentations/twitter-commandments/images.094.jpg":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn26@2020_4/2020/08/25/02-02-11-569_a647c3308132d9a2.webp","https://www.zachleat.com/presentations/twitter-commandments/images.095.jpg":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn18@2020_6/2020/08/25/02-02-11-413_95fcb1e7606214bb.webp","https://www.zachleat.com/presentations/twitter-commandments/images.097.jpg":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn9@2020_1/2020/08/25/02-02-10-523_2637f6fc1c959a6c.webp","https://www.zachleat.com/presentations/twitter-commandments/images.099.jpg":"https://cdn.jsdelivr.net/gh/myreaderx/cdn24@2020_5/2020/08/25/02-02-18-364_987cefa2f532bf78.webp","https://www.zachleat.com/presentations/twitter-commandments/images.101.jpg":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn7@2020_3/2020/08/25/02-02-18-632_4c7cfac9b2cfee97.webp","https://www.zachleat.com/presentations/twitter-commandments/images.102.jpg":"https://cdn.jsdelivr.net/gh/myreaderx/cdn48@2020_5/2020/08/25/02-02-19-088_0302ee8b8805a2b0.webp","https://www.zachleat.com/presentations/twitter-commandments/images.103.jpg":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn15@2020_1/2020/08/25/02-02-19-596_c1ce39776581c6ce.webp","https://www.zachleat.com/presentations/twitter-commandments/images.104.jpg":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn71@2020_4/2020/08/25/02-02-20-204_2263f7ffb306b669.webp","https://www.zachleat.com/presentations/twitter-commandments/images.105.jpg":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn14@2020_2/2020/08/25/02-02-10-407_89ccdb072b68f806.webp","https://www.zachleat.com/presentations/twitter-commandments/images.106.jpg":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn85@2020_3/2020/08/25/02-02-10-798_e8ef5e64f46713e2.webp","https://www.zachleat.com/presentations/twitter-commandments/images.107.jpg":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn28@2020_1/2020/08/25/02-02-23-102_5c2aa0c3df28f3b6.webp"},"publishedOrCreatedDate":1598320921769},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"No @font-face Syntax will ever be Bulletproof, Nor Should It Be.","link":"http://www.zachleat.com/web/retire-bulletproof-syntax/","description":"<p><em>Originally posted as <a href=\"http://calendar.perfplanet.com/2016/no-font-face-bulletproof-syntax/\">No @font-face Syntax will ever be Bulletproof, Nor Should It Be</a> on the <a href=\"http://calendar.perfplanet.com/2016/\">perfplanet.com 2016 Performance Calendar</a>.</em></p> \n<hr> \n <p>When you’ve been in the web development game long enough, you see patterns repeat themselves. It wasn’t all that long ago that developers attempted the Sisyphean task of making all experiences identical for every user independent of their web browser or device’s technical capability. We’ve since learned to shed those shackles in pursuit of something far better: reach.</p> \n <p>But even after this shift occurred, we carried the baggage of our old ways forward with web fonts. We described our @font-face syntax with one of the heaviest-duty adjectives available: Bulletproof. This word almost became synonymous with @font-face syntax. You see it everywhere:</p> \n <ul> \n  <li><a href=\"https://www.paulirish.com/2009/bulletproof-font-face-implementation-syntax/\">Bulletproof @font-face Syntax (2009)</a></li> \n  <li><a href=\"http://blog.fontspring.com/2011/02/the-new-bulletproof-font-face-syntax/\">The New Bulletproof @font-face Syntax (2011)</a></li> \n  <li><a href=\"http://blog.fontspring.com/2011/02/further-hardening-of-the-bulletproof-syntax/\">Further Hardening of the Bulletproof @font-face Syntax (2011)</a>, with “Extra Bulletproofiness” 😀</li> \n  <li><a href=\"http://sixrevisions.com/css/font-face-web-fonts-issues/\">How to Bulletproof @font-face Web Fonts (2011)</a></li> \n  <li><a href=\"https://www.filamentgroup.com/lab/bulletproof_icon_fonts.html\">Bulletproof Icon Fonts (2014)</a> (eek, I wrote this one, see addendum below)</li> \n </ul> \n <p>The web font world has changed. It’s time to move the chains forward. Given that web fonts for readable content fall back to system fonts when formats are not supported, it’s ok to be progressive here. Here’s the modern @font-face syntax I’d recommend:</p> \n <pre class=\"language-css\"><code class=\"language-css\"><span class=\"highlight-line\"><span class=\"token atrule\"><span class=\"token rule\">@font-face</span></span> <span class=\"token punctuation\">{</span></span><br><span class=\"highlight-line\">  <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> Open Sans<span class=\"token punctuation\">;</span></span><br><ins class=\"highlight-line highlight-line-add\">  <span class=\"token property\">src</span><span class=\"token punctuation\">:</span> <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span>opensans.woff2<span class=\"token punctuation\">)</span></span> <span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">'woff2'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></ins><br><span class=\"highlight-line\">       <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span>opensans.woff<span class=\"token punctuation\">)</span></span> <span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">'woff'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><br><span class=\"highlight-line\"><span class=\"token punctuation\">}</span></span></br></br></br></br></code></pre> \n <p>Pretty simple, right? Just two formats. Much simpler than what we were using before:</p> \n <pre class=\"language-css\"><code class=\"language-css\"><span class=\"highlight-line\"><span class=\"token atrule\"><span class=\"token rule\">@font-face</span></span> <span class=\"token punctuation\">{</span></span><br><span class=\"highlight-line\">  <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> Open Sans<span class=\"token punctuation\">;</span></span><br><del class=\"highlight-line highlight-line-remove\">  <span class=\"token property\">src</span><span class=\"token punctuation\">:</span> <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span>'opensans.eot'<span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">;</span></del><br><del class=\"highlight-line highlight-line-remove\">  <span class=\"token property\">src</span><span class=\"token punctuation\">:</span> <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span>'opensans.eot?#iefix'<span class=\"token punctuation\">)</span></span> <span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">'embedded-opentype'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></del><br><span class=\"highlight-line\"> <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span>'opensans.woff'<span class=\"token punctuation\">)</span></span> <span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">'woff'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></span><br><del class=\"highlight-line highlight-line-remove\"> <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span>'opensans.ttf'<span class=\"token punctuation\">)</span></span> <span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">'truetype'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></del><br><del class=\"highlight-line highlight-line-remove\"> <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span>'opensans.svg#svgFontName'<span class=\"token punctuation\">)</span></span> <span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">'svg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></del><br><span class=\"highlight-line\"><span class=\"token punctuation\">}</span></span></br></br></br></br></br></br></br></code></pre> \n <p>We’ve eliminated the <a href=\"http://caniuse.com/#feat=eot\">Embedded OpenType (EOT) format</a> (supported only by Internet Explorer and is the format served to IE versions up to 11) which required a strange double <code>src</code> declaration to workaround a syntax bug. <a href=\"https://twitter.com/bram_stein\">Bram Stein</a>, renowned web font performance expert, notes that while EOT formats <em>can</em> be compressed they are often served uncompressed, which is less than optimal given that newer WOFF files include compression by default.</p> \n <p>We’ve eliminated the standalone <a href=\"http://caniuse.com/#feat=ttf\">TrueType/OpenType format</a> because most web browsers support both WOFF and [True|Open]Type. It’s also worth noting that WOFF is just a container format—it adds a wrapper around existing TrueType/OpenType files.</p> \n <p>Most importantly, we’ve eliminated the <a href=\"http://caniuse.com/#feat=svg-fonts\">SVG font format</a>. This archaic format is no longer necessary and using it over better formats like WOFF can be harmful. In fact, Chrome took the unusual step of removing SVG font format support from their web browser (with the exception of older Windows versions). How often do things get removed from the web platform? Rarely! You can read more about the history of issues with SVG fonts at <a href=\"https://github.com/scottjehl/Device-Bugs/issues/43\">@scottjehl’s Device Bugs repository</a>.</p> \n <p>So, that leaves us with only two font formats: WOFF2 and WOFF. The ordering here is very important: WOFF2 and then WOFF.</p> \n <p>To summarize, here is a list of browsers we’ve relegated to use system fonts with this reduced format syntax:</p> \n <ul> \n  <li>IE 8</li> \n  <li>Firefox 3.5</li> \n  <li>Chrome 4</li> \n  <li>Safari 3 through 5</li> \n  <li>Opera 10.1</li> \n  <li>Mobile Safari (iOS) 3.2 through 4.3</li> \n  <li>Android 2.2 through 4.3</li> \n </ul> \n <p>Android is perhaps the most contentious on this list: as of writing these operating system versions <a href=\"https://developer.android.com/about/dashboards/index.html\">make up about 16.4% of Android usage</a>. This does not count users of these operating systems that have installed Chrome on their devices manually—we’re specifically talking about users of the Android Browser here.</p> \n <p>But don’t cry for these users—content will still be readable.</p> \n <p>Simplified syntax is better for code health, cognitive load, and general software maintenance. Decreasing the number of formats also decreases the possibility that developers will list their font formats in the <code>src</code> attribute out of order. Remember that browsers use the first format they find that works—so if you don’t order them correctly the browser could waste resources (or render poorly) with a less-than optimal format.</p> \n <p>Decreasing the number of font formats also simplifies the self-hosting your web fonts. Self hosting can allow more advanced and fine-grained control over how your web fonts are loaded to achieve maximum rendering performance[1]. I’ve written a slew of <a href=\"https://www.zachleat.com/web/comprehensive-webfonts/\">web font loading articles that showcase advanced font loading techniques</a>, and the more advanced two-stage loading methods are easier to implement when self hosting.</p> \n <p><em>[1] Act now and buy two bottles of web font loading drink powder mix to achieve maximum rendering performance and the third bottle is free.</em></p> \n <h2 id=\"addendum%3A-okay%2C-but-what-about-icon-fonts%3F\">Addendum: Okay, but what about icon fonts? <a class=\"direct-link\" href=\"http://www.zachleat.com/web/retire-bulletproof-syntax/#addendum%3A-okay%2C-but-what-about-icon-fonts%3F\">#</a></h2> \n <p>I did contribute to the Bulletproof @font-face phenomenon. However, a closer read of <a href=\"https://www.filamentgroup.com/lab/bulletproof_icon_fonts.html\">the icon font article I wrote</a> reveals no discussion of @font-face syntax. Said differently: a bulletproof @font-face syntax won’t save your icon fonts. Just because the font format <em>can</em> be read and interpreted by an older web browser doesn’t mean that it won’t have loading issues, FOUT fallback inconsistencies, or that glyphs will be misread by screen readers. <strong>Unlike content fonts, icon fonts do not use progressive enhancement by default.</strong> They need additional care: to be paired with a font loading strategy and with default screen-reader-accessible fallback text. I’d recommend that you <a href=\"https://www.filamentgroup.com/lab/bulletproof_icon_fonts.html\">read the article</a> to learn more about the myriad of issues with icon fonts.</p> \n <p>Or, you could look toward the future and use SVG icons instead.</p> \n <h2 id=\"addendum%3A-thank-you\">Addendum: Thank You <a class=\"direct-link\" href=\"http://www.zachleat.com/web/retire-bulletproof-syntax/#addendum%3A-thank-you\">#</a></h2> \n <p>A big thank you to <a href=\"https://twitter.com/bram_stein\">Bram Stein</a> for reviewing and providing feedback on this post before publication.</p> \n</hr>","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"e815e7ec04a653ee5e76178e15f2902e","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921767},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"ALARMd Unix Time Format for 1234567890 Day","link":"http://www.zachleat.com/web/alarmd-unix-time-format-for-1234567890-day/","description":"\n\t\t\t<p>In honor of <a href=\"http://www.1234567890day.com/\">1234567890 day</a>, I’ve added the Unix time format to <a href=\"http://www.alarmd.com/\">ALARMd</a>.</p>\n<p>Hit <strong>Options</strong>, then the <strong>Clock Format tab</strong> to change to Unix Time. Enjoy!</p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"fb5414aa87fe46ca6effc4f63ab3b0e2","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921762},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"A Nodecopter Informercial (at HOW Conf)","link":"http://www.zachleat.com/web/nodecopter/","description":"\n\t\t\t<script async=\"\" class=\"speakerdeck-embed\" data-id=\"bbc239c04cbd013178de1eef186a2630\" data-ratio=\"1.33333333333333\" src=\"https://speakerdeck.com/assets/embed.js\"></script>\n<p>A presentation for <a href=\"http://mattdsteele.github.io/howconf/\">HOW Conf 2013</a>. Follow <a href=\"https://twitter.com/howconf\">@howconf on Twitter</a>.</p>\n<ul>\n<li><a href=\"https://speakerdeck.com/zachleat/nodecopter\">Slides on Speakerdeck</a></li>\n</ul>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"ad968df811e7ee23fc6992316047fd0c","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921764},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Conservative Design Example: Multiple Option List","link":"http://www.zachleat.com/web/conservative-design-example-multiple-option-list/","description":"\n\t\t\t<p>All of the posts in the Conservative Design series so far have been brainstorming of design patterns. But how about some real life examples, some actual code? Let’s dive in.</p>\n<p>The first example I decided to tackle was the <a href=\"http://www.zachleat.com/web/2007/02/26/conservative-design-option-list/\">Option List</a>, specifically the variant that allows multiple options to be selected. Let me start out by saying that I didn’t abstract out the type of source element that you could put into this example, I only programmed the element for a  element. For the impatient, let’s just start with the result:</p>\n<p><a href=\"https://www.zachleat.com/web/wp-content/uploads/2007/03/optionlist_multiple_real1.gif\"><img src=\"https://www.zachleat.com/web/wp-content/uploads/2007/03/optionlist_multiple_real1.gif\" alt=\"Multiple Option List Real Example\"></a><br>\nClick the image to see the actual example.</p>\n<p>[]: <a href=\"http://www.zachleat.com/Projects/valdi/multipleSelectList.html\">http://www.zachleat.com/Projects/valdi/multipleSelectList.html</a></p>\n<p>This element was constructed using the YUI Library and Jack Slocum’s DomQuery selector class, as well as using the new form validation CSS and JavaScript code I’m currently developing entitled ‘<strong>Valdi</strong>‘.</p>\n<p>It includes 3 of the 4 of the minimum features required as set in the original specification.</p>\n<p>Features:</p>\n<ul>\n<li><strong>Validation</strong>: there is no submit button, but if there were, it would validate if the form has been entry has a value.</li>\n<li><strong>Quick Links</strong>: Select All, Select None, and Sort the Options</li>\n<li><strong>Customizable Options</strong>: Allow the user to add their own options for selection.</li>\n<li>Does **not **abstract option types (checkbox, etc)</li>\n<li>Keyboard Support: CTRL A inside of the select box selects all options, Delete or Backspace removes the selected options, Enter key inside Add input field automatically adds option to the select.</li>\n<li>Can be <em>easily</em> transformed into a Single Option List by removing the multiple=”multiple” option in the html.</li>\n<li>Sort will toggle between Ascending and Descending and maintain the selected options</li>\n<li>When the number of options outweighs the select size, the number of options is displayed next to the Add button. Try adding 5 or more options to the select list.</li>\n</ul>\n<p>Screenshots for the Lazy People:</p>\n<p>Multiple Options are Added<br>\n<img src=\"https://www.zachleat.com/web/wp-content/uploads/2007/03/optionlist_multiple_real1.gif\" alt=\"Multiple Option List Real Example\"></p>\n<p>Validation when an Option is not selected:<br>\n<img src=\"https://www.zachleat.com/web/wp-content/uploads/2007/03/optionlist_multiple_real21.gif\" alt=\"Multiple Option List Real Example\"></p>\n<p>Success, they selected something and submitted:<br>\n<img src=\"https://www.zachleat.com/web/wp-content/uploads/2007/03/optionlist_multiple_real31.gif\" alt=\"Multiple Option List Real Example\"></p>\n<p>Watch for another separate article about Valdi later on.</p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"https://www.zachleat.com/web/wp-content/uploads/2007/03/optionlist_multiple_real1.gif","linkMd5":"62c3dbb36b5faca5301ac03ef70353c5","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn90@2020_2/2020/08/25/02-02-02-652_27402b4799e1477b.webp","destWidth":432,"destHeight":349,"sourceBytes":14069,"destBytes":12336,"author":"","articleImgCdnMap":{"https://www.zachleat.com/web/wp-content/uploads/2007/03/optionlist_multiple_real1.gif":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn90@2020_2/2020/08/25/02-02-02-652_27402b4799e1477b.webp","https://www.zachleat.com/web/wp-content/uploads/2007/03/optionlist_multiple_real21.gif":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn39@2020_3/2020/08/25/02-02-14-532_4e62228c0a22fc85.webp","https://www.zachleat.com/web/wp-content/uploads/2007/03/optionlist_multiple_real31.gif":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn72@2020_3/2020/08/25/02-02-16-411_a834f0ed318e99f3.webp"},"publishedOrCreatedDate":1598320921760},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"OMG SOA","link":"http://www.zachleat.com/web/omg-soa/","description":"\n\t\t\t<p>In today’s Web 2.0 world of <strong>ultimate abstraction</strong>, you don’t need to be bothered with the rudimentary low level programming functions of everyday languages. Client Side implementation of JavaScript functions across the browser landscape is unreliable at best, so why should you trust it for anything? So using forward thinking and futureproof compatibility design, naturally we will turn to the next great phase of web’s evolutionary growth, the Service Oriented Architecture (SOA). Using SOAP envelopes to package our function calls, I will now demo what is certainly to be the future of web development, and maybe, all programming endeavors. I call it: <strong>OMG SOA</strong>.</p>\n<p><a href=\"http://h-master.net/web2.0/index.php\" title=\"OMG SOA\"><img src=\"https://www.zachleat.com/web/wp-content/uploads/2007/03/reflectomg-soabeta.png\" alt=\"OMG SOA\"></a></p>\n<p>Are you programming a for loop? How do you know that the client will increment your integers through the loop correctly? That’s why you need to call our <strong>Incrementer Web Service</strong> to increment your loop counter.</p>\n<p><em>Sample Service Calls</em>:</p>\n<ul>\n<li><a href=\"http://www.zachleat.com/Projects/SOA/index.php/incrementer/0\">Increment 0</a></li>\n<li><a href=\"http://www.zachleat.com/Projects/SOA/index.php/incrementer/3920\">Increment 3920</a></li>\n<li><a href=\"http://www.zachleat.com/Projects/SOA/index.php/incrementer/98\">Increment 98</a></li>\n</ul>\n<p>Are you programming an array that needs to be magically combined into a string? Do you think you can reliably count on Internet Explorer to perform the function in the same way as your Firefox’s, or your Opera’s, or even your (God Forbid) Safari’s??? No, dare I say it, no.</p>\n<p>But don’t fear. We are here to comfort your pain, with a shot in the arm of standarditity. Welcome the <strong>String Concatenation Web Service</strong>.</p>\n<p><em>Sample Service Call</em>:</p>\n<ul>\n<li><a href=\"http://www.zachleat.com/Projects/SOA/index.php/concat/string1/string2/string3/\">Concatenate string1 with string2 with string3</a></li>\n</ul>\n<p>And finally, are you feeling lost in this sea of amorphous web technologies mixing and mashing together to form the gelatinous blob of money and media whores we know as Web 2.0? Don’t worry, OMG SOA is here for you again to solve all of your identity crisis problems. Ask our <strong>Are you Web 2.0 Web Service</strong> with your URL and the magic 8 ball service will answer your question.</p>\n<p><em>Sample Service Call</em>:</p>\n<ul>\n<li><a href=\"http://www.zachleat.com/Projects/SOA/index.php/am-i-web-2.0/www.zachleat.com/\">Is www.zachleat.com Web 2.0?</a></li>\n</ul>\n<p><strong>Update</strong>: apparently there is already a company called the Object Management Group with a <a href=\"http://h-master.net/web2.0/index.php\" title=\"OMG SOA\">website about SOA</a>. Whoops?</p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"https://www.zachleat.com/web/wp-content/uploads/2007/03/reflectomg-soabeta.png","linkMd5":"50c87e4fb8ef6105f2012161fd2fa03a","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn94@2020_5/2020/08/25/02-02-03-054_95837fab078e5241.webp","destWidth":251,"destHeight":90,"sourceBytes":17214,"destBytes":4660,"author":"","articleImgCdnMap":{"https://www.zachleat.com/web/wp-content/uploads/2007/03/reflectomg-soabeta.png":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn94@2020_5/2020/08/25/02-02-03-054_95837fab078e5241.webp"},"publishedOrCreatedDate":1598320921760},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Adobe Reverts Flex Store to Open Web","link":"http://www.zachleat.com/web/adobe-reverts-flex-store-to-open-web/","description":"\n\t\t\t<p>A few weeks ago in the process of doing some research about the Adobe Flex platform, I came across their online store, a dogfooded full page application using Flex.</p>\n<p>This morning I went back to the <a href=\"https://store1.adobe.com/cfusion/store/html/index.cfm?store=OLS-US&amp;#\">same URL</a> to find a site that was no longer using the full page Flex application I had been expecting. Instead it was now using native Open Web technology.</p>\n<p>Naturally, my first assumption was that I had hallucinated the original research. But as it turns out, I wasn’t the only one that noticed the Flex application. This blogger <a href=\"http://www.cfinternals.org/blog/2007/06/adobes_flashfle.html\">complained about the accessibility</a> of a full page Flash/Flex store. Another blogger had a <a href=\"http://www.abdulqabiz.com/blog/archives/adobe/adobe_store_is_still.php\">similar complaint</a>.</p>\n<p>I have no idea how long the Flash/Flex Adobe store experiment went on before they changed it back. I’m just glad I’m not crazy.</p>\n<p><strong>Update</strong>: Turns out they are using a whitelist/blacklist of user agents to decide whether or not to show the Flex store. The <a href=\"https://store1.adobe.com/cfusion/store/index.cfm\">original entry point</a> above is incorrect, and shouldn’t have the html subdirectory. If you go to the site in Chrome, it will redirect you to the HTML version. My apologies, Adobe, although I do think the HTML version is much more accessible.</p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"ee330259d31d72f9dd755cf1933ee675","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921762},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"In Case You Missed It: 2014","link":"http://www.zachleat.com/web/icymi/2014/","description":"<p>Rather than a bunch of individual “In Case You Missed It” tweets, I thought I’d repeat <a href=\"https://www.zachleat.com/web/icymi/2013/\">what I did last year</a> and just do one big yearly semi-comprehensive recap of the web community things that I contributed to this year. Enjoy!</p> \n<h2 id=\"font-family-reunion-project\">Font Family Reunion <span class=\"tag video\">Project</span> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/icymi/2014/#font-family-reunion-project\">#</a></h2> \n<blockquote class=\"twitter-tweet\" lang=\"en\">\n <p>★ Font Family Reunion—Compatibility tables for CSS font-family defaults. <a href=\"http://t.co/wIBJstPyiA\">http://t.co/wIBJstPyiA</a> Read more: <a href=\"http://t.co/LffbwRqYr8\">http://t.co/LffbwRqYr8</a></p>— Zach Leatherman (@zachleat) \n <a href=\"https://twitter.com/zachleat/status/516918414485762048\">September 30, 2014</a>\n</blockquote> \n<ul> \n <li>Go directly to <a href=\"http://fontfamily.io/\">fontfamily.io</a> (do not pass go, do not collect $200).</li> \n <li>Read the <a href=\"https://www.zachleat.com/web/font-family-reunion/\">Blog Post</a>.</li> \n <li>Watch the NebraskaJS recap: <a href=\"http://nebraskajs.com/2015/fontfamilyio/\">How and Why I built fontfamily.io</a></li> \n</ul> \n<div class=\"fluid-width-video-wrapper\"> \n <iframe width=\"420\" height=\"315\" src=\"https://www.youtube.com/embed/LbCT38Idhyk\" frameborder=\"0\" allowfullscreen=\"\"></iframe> \n</div> \n<ul> \n <li><a href=\"https://www.youtube.com/watch?v=LbCT38Idhyk\">Watch the talk on YouTube</a> (18:45) <span class=\"tag video\">Video</span></li> \n <li><a href=\"https://speakerdeck.com/zachleat/how-and-why-i-built-fontfamily-dot-io\">Slides on Speaker Deck</a> (44 slides)</li> \n</ul> \n<h2 id=\"bulletproof-accessible-icon-fonts-blog-post\">Bulletproof Accessible Icon Fonts <span class=\"tag blog-post\">Blog Post</span> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/icymi/2014/#bulletproof-accessible-icon-fonts-blog-post\">#</a></h2> \n<p>I’m lucky that Todd Parker asked me to research this topic for <a href=\"http://www.filamentgroup.com/lab/bulletproof_icon_fonts.html\">a Filament Group blog post</a>. This really set in motion a series of things that I was really excited to investigate: accessibility, font loading, mobile Unicode character support, et cetera. So many great things snowballed from this.</p> \n<blockquote class=\"twitter-tweet\" lang=\"en\">\n <p>☆ New post: Bulletproof Accessible Icon Fonts <a href=\"http://t.co/Ea8cQxHKLG\">http://t.co/Ea8cQxHKLG</a></p>— Zach Leatherman (@zachleat) \n <a href=\"https://twitter.com/zachleat/status/422799035070562304\">January 13, 2014</a>\n</blockquote> \n<p><em>See also this <a href=\"https://twitter.com/filamentgroup/status/422810535839944704\">tweet from @filamentgroup</a>.</em></p> \n<h2 id=\"cssconf-talk\">CSSConf Talk <a class=\"direct-link\" href=\"http://www.zachleat.com/web/icymi/2014/#cssconf-talk\">#</a></h2> \n<p>Luckily the success of the blog post above turned into a speaking opportunity! I had the honor of speaking about Icon Fonts at <a href=\"http://2014.cssconf.com/index.html#zach\">CSSConf in 2014</a>.</p> \n<div class=\"fluid-width-video-wrapper\"> \n <iframe width=\"420\" height=\"315\" src=\"https://www.youtube.com/embed/1EL4VpScnxE\" frameborder=\"0\" allowfullscreen=\"\"></iframe> \n</div> \n<ul> \n <li><a href=\"https://www.youtube.com/watch?v=1EL4VpScnxE\">Watch the talk on YouTube</a> (26:16) <span class=\"tag video\">Video</span></li> \n <li><a href=\"https://speakerdeck.com/zachleat/bulletproof-font-icons\">Slides on Speaker Deck</a> (106 slides)</li> \n <li><a href=\"https://storify.com/zachleat/cssconf-2014-bulletproof-icon-fonts-scrapbook\">Storify Scrapbook</a></li> \n</ul> \n<h2 id=\"dev.opera-blog-post\">Dev.Opera <span class=\"tag blog-post\">Blog Post</span> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/icymi/2014/#dev.opera-blog-post\">#</a></h2> \n<p>I transitioned from focusing on icon fonts with <code>@font-face</code> and instead moved to talk more about generic font loading. There was a fair amount of overlap between this and the CSSConf talk.</p> \n<blockquote class=\"twitter-tweet\" lang=\"en\">\n <p>★ Better @​font-face with Font Load Events: <a href=\"https://t.co/jj6eeViILT\">https://t.co/jj6eeViILT</a> Very grateful and excited for the opportunity to write for Dev.Opera.</p>— Zach Leatherman (@zachleat) \n <a href=\"https://twitter.com/zachleat/status/515503981901402112\">September 26, 2014</a>\n</blockquote> \n<h2 id=\"smashingconf-talk\">SmashingConf Talk <a class=\"direct-link\" href=\"http://www.zachleat.com/web/icymi/2014/#smashingconf-talk\">#</a></h2> \n<p>This was definitely the highlight of the year for me. A super professional conference in a beautiful location—Whistler! A huge thank you to <a href=\"https://twitter.com/smashingmag\">Vitaly</a> and <a href=\"https://twitter.com/tkadlec\">Tim</a> and all the staff for having me along. It was really a unique conference with lots of personality. The videos have not yet been published—but soon you’ll get to see me try to get a crowd of 300 people to do the flashback arm waving sequence from Wayne’s World.</p> \n<ul> \n <li><a href=\"https://speakerdeck.com/zachleat/remodeling-at-font-face\">Slides on Speaker Deck</a> (203 slides)</li> \n <li><a href=\"https://storify.com/zachleat/smashingconf-whistler-2014\">Storify Scrapbook</a></li> \n</ul> \n<h2 id=\"stop-using-svg-in-%40font-face\">Stop Using SVG in @font-face <a class=\"direct-link\" href=\"http://www.zachleat.com/web/icymi/2014/#stop-using-svg-in-%40font-face\">#</a></h2> \n<blockquote class=\"twitter-tweet\" lang=\"en\">\n <p>Chrome 37, Opera 24 support DirectWrite on Windows, which means we can FINALLY retire SVG @​font-face! Related: <a href=\"https://t.co/rxUTJJsWUk\">https://t.co/rxUTJJsWUk</a></p>— Zach Leatherman (@zachleat) \n <a href=\"https://twitter.com/zachleat/status/506809296336986112\">September 2, 2014</a>\n</blockquote> \n<blockquote class=\"twitter-tweet\" lang=\"en\">\n <p>SVG web fonts are dead—stop using them, Opera edition: <a href=\"https://t.co/Clh1yiEZlk\">https://t.co/Clh1yiEZlk</a></p>— Zach Leatherman (@zachleat) \n <a href=\"https://twitter.com/zachleat/status/522390693579620352\">October 15, 2014</a>\n</blockquote> \n<h2 id=\"the-pastry-box-blog-post\">The Pastry Box <span class=\"tag blog-post\">Blog Post</span> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/icymi/2014/#the-pastry-box-blog-post\">#</a></h2> \n<p>I wrote a guest blog post for <a href=\"https://the-pastry-box-project.net/zach-leatherman/2014-June-7\">The Pastry Box about Impostor Syndrome</a>. You might have noticed that the content of this post was very similar to <a href=\"http://www.zachleat.com/web/impostor/\">my 2013 talk at BarCamp Omaha</a>. See also this <a href=\"https://twitter.com/zachleat/status/476009474516611074\">tweet from June 9</a>.</p> \n<h2 id=\"barcamp-omaha-talk\">BarCamp Omaha Talk <a class=\"direct-link\" href=\"http://www.zachleat.com/web/icymi/2014/#barcamp-omaha-talk\">#</a></h2> \n<div class=\"fluid-width-video-wrapper\"> \n <iframe width=\"420\" height=\"315\" src=\"https://www.youtube.com/embed/6nGxIBMMaFw\" frameborder=\"0\" allowfullscreen=\"\"></iframe> \n</div> \n<ul> \n <li><a href=\"https://www.youtube.com/watch?v=6nGxIBMMaFw\">Watch the talk on YouTube</a> (11:15) <span class=\"tag video\">Video</span></li> \n <li>Read the <a href=\"http://www.zachleat.com/web/the-perfect-gif/\">Blog Post</a></li> \n <li>See also this <a href=\"https://twitter.com/zachleat/status/509670742091653120\">tweet from September 10</a></li> \n</ul> \n<h2 id=\"attended-thunderplains\">Attended <a href=\"http://thunderplainsconf.com/\">Thunderplains</a> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/icymi/2014/#attended-thunderplains\">#</a></h2> \n<p><a href=\"https://twitter.com/miketaylr\">Mike Taylor</a> was really on point with his suggestion to attend this one. It was a great event put on by some really special individuals.</p> \n<blockquote class=\"twitter-tweet\" lang=\"en\">\n <p>If you want to learn how to foster a tech community, follow <a href=\"https://twitter.com/amandaharlin\">@amandaharlin</a> and <a href=\"https://twitter.com/5imian\">@5imian</a>. What they’ve done with <a href=\"https://twitter.com/techlahoma\">@techlahoma</a> is amazing.</p>— Zach Leatherman (@zachleat) \n <a href=\"https://twitter.com/zachleat/status/527552608740061184\">October 29, 2014</a>\n</blockquote> \n<h2 id=\"guest-on-the-word-break-podcast\"><a href=\"http://word-break.com/episode/episode-01-with-zach-leatherman/\">Guest on the Word-Break Podcast</a> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/icymi/2014/#guest-on-the-word-break-podcast\">#</a></h2> \n<p>My first ever podcast interview!</p> \n<h2 id=\"filament-group-collaborations\">Filament Group Collaborations <a class=\"direct-link\" href=\"http://www.zachleat.com/web/icymi/2014/#filament-group-collaborations\">#</a></h2> \n<h3 id=\"font-loading\">Font Loading <a class=\"direct-link\" href=\"http://www.zachleat.com/web/icymi/2014/#font-loading\">#</a></h3> \n<p>A little bit different than the approach I’ve been putting into my presentations.There <em>may</em> just be an official Filament Group blog post forthcoming talking all about this.</p> \n<blockquote class=\"twitter-tweet\" lang=\"en\">\n <p>Wrote up a summary of the <a href=\"https://twitter.com/filamentgroup\">@filamentgroup</a> approach to avoid FOIT for content fonts using <a href=\"https://twitter.com/scottjehl\">@scottjehl</a>’s loadCSS: <a href=\"https://t.co/6U692qf63D\">https://t.co/6U692qf63D</a></p>— Zach Leatherman (@zachleat) \n <a href=\"https://twitter.com/zachleat/status/515317039670784000\">September 26, 2014</a>\n</blockquote> \n<p>In related news to support the Filament Group font loading approach, we worked on a WOFF2 feature test using the CSS Font Loading API:</p> \n<blockquote class=\"twitter-tweet\" lang=\"en\">\n <p>New in the lab: WOFF2 See the Wizard, a Wonderful JavaScript Feature Test by <a href=\"https://twitter.com/zachleat\">@zachleat</a> <a href=\"http://t.co/dbXYt2k8qb\">http://t.co/dbXYt2k8qb</a></p>— filamentgroup (@filamentgroup) \n <a href=\"https://twitter.com/filamentgroup/status/522850889795895297\">October 16, 2014</a>\n</blockquote> \n<h3 id=\"tablesaw\"><a href=\"https://github.com/filamentgroup/tablesaw\">Tablesaw</a> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/icymi/2014/#tablesaw\">#</a></h3> \n<p>A set of plugins for responsive tables (<a href=\"http://www.filamentgroup.com/lab/tablesaw.html\">Filament Group Blog Post</a>). This one kind of caught fire on GitHub, hitting #4 on GitHub’s most popular repositories (all programming languages) for the month of June 2014.</p> \n<blockquote class=\"twitter-tweet\" lang=\"en\">\n <p>Looking for ways to make tabular data responsive? Check out our Tablesaw plugin, thanks to <a href=\"https://twitter.com/zachleat\">@zachleat</a> - <a href=\"https://t.co/8haZb760f3\">https://t.co/8haZb760f3</a></p>— filamentgroup (@filamentgroup) \n <a href=\"https://twitter.com/filamentgroup/status/467396301181566976\">May 16, 2014</a>\n</blockquote> \n<h3 id=\"politespace\"><a href=\"https://github.com/filamentgroup/politespace\">Politespace</a> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/icymi/2014/#politespace\">#</a></h3> \n<p>An accessible alternative to input masks that adds whitespace for readability to form fields (<a href=\"http://www.filamentgroup.com/lab/politespace.html\">Filament Group Blog Post</a>).</p> \n<h3 id=\"shoestring\"><a href=\"https://github.com/filamentgroup/shoestring\">Shoestring</a> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/icymi/2014/#shoestring\">#</a></h3> \n<p>We worked hard on this lightweight DOM utility library that shares a subset of the jQuery API.</p> \n<blockquote class=\"twitter-tweet\" lang=\"en\">\n <p>How I'm using <a href=\"https://twitter.com/filamentgroup\">@filamentgroup</a>'s Shoestring + cutting the mustard to minimize JS bloat: <a href=\"http://t.co/r1veVyjYBO\">http://t.co/r1veVyjYBO</a></p>— Tim Kadlec (@tkadlec) \n <a href=\"https://twitter.com/tkadlec/status/527903596151857152\">October 30, 2014</a>\n</blockquote> \n<h2 id=\"top-five-jokes-(by-retweets)\">Top Five Jokes (by Retweets) <a class=\"direct-link\" href=\"http://www.zachleat.com/web/icymi/2014/#top-five-jokes-(by-retweets)\">#</a></h2> \n<blockquote class=\"twitter-tweet\" lang=\"en\">\n <p>If `grunt watch` is scrolling your terminal too fast to read, make it run in slow motion with `grunt baywatch`.</p>— Zach Leatherman (@zachleat) \n <a href=\"https://twitter.com/zachleat/status/423513224013574144\">January 15, 2014</a>\n</blockquote> \n<blockquote class=\"twitter-tweet\" lang=\"en\">\n <p>before you print that shell script, please think of the environment variables.</p>— Zach Leatherman (@zachleat) \n <a href=\"https://twitter.com/zachleat/status/474295063955394561\">June 4, 2014</a>\n</blockquote> \n<blockquote class=\"twitter-tweet\" lang=\"en\">\n <p>When two marketers decide to get married do their personal brands get engaged?</p>— Zach Leatherman (@zachleat) \n <a href=\"https://twitter.com/zachleat/status/491682283301384192\">July 22, 2014</a>\n</blockquote> \n<blockquote class=\"twitter-tweet\" lang=\"en\">\n <p>Is this the real life? Is this just font-family: fantasy?</p>— Zach Leatherman (@zachleat) \n <a href=\"https://twitter.com/zachleat/status/504748807184470016\">August 27, 2014</a>\n</blockquote> \n<blockquote class=\"twitter-tweet\" lang=\"en\">\n <p>senator tom cruise you were good in top gun but leave the internet to the experts</p>— Zach Leatherman (@zachleat) \n <a href=\"https://twitter.com/zachleat/status/531870144797356032\">November 10, 2014</a>\n</blockquote> \n<p><em>(In response to <a href=\"https://twitter.com/SenTedCruz/status/531834493922189313\">@SenTedCruz</a>)</em></p> \n<h2 id=\"thank-you!\">Thank You! <a class=\"direct-link\" href=\"http://www.zachleat.com/web/icymi/2014/#thank-you!\">#</a></h2> \n<p>I owe everyone a huge thank you for giving me the amazing opportunities that I had in 2014. To everyone at NebraskaJS—the community we have in Omaha (and growing in Lincoln) is amazing. To <a href=\"https://twitter.com/stubbornella\">Nicole Sullivan</a> and company for taking a chance on me at CSSConf. To <a href=\"https://twitter.com/tkadlec/\">Tim Kadlec</a> for also taking a chance on me for Smashing Conference. And most of all to my employer and coworkers at <a href=\"http://www.filamentgroup.com/\">Filament Group</a>. The list above would’ve been much shorter without their collaboration with and support of our great community. I’m feeling thankful—it was a great year.</p>","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"2ea053dc11b9813909a8f3a27136d3a8","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921765},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"A Brief History of that Time You Used Web Fonts—SmashingConf Barcelona","link":"http://www.zachleat.com/web/smashingconf/2015/","description":"<img src=\"https://www.zachleat.com/web/img/posts/barcelona/stage.jpg\" alt=\"About to go on stage at SmashingConf Barcelona\"> \n <ul> \n  <li><a href=\"http://smashingconf.com/barcelona-2015/\">SmashingConf Barcelona 2015</a></li> \n  <li><a href=\"http://smashingconf.com/barcelona-2015/speakers/zach-leatherman\">SmashingConf Barcelona 2015 Direct Session Link</a></li> \n </ul> <p>The title of the talk was a reference to a hugely popular book written by Stephen Hawking titled <a href=\"http://www.amazon.com/Brief-History-Time-Stephen-Hawking/dp/0553380168\"><em>A Brief History of Time</em></a>. I’m not sure this was clear enough, since I put a computer generated voice as an antagonist in a few of the slides and the reference fell pretty flat. Better luck next time I guess!</p> <h2 id=\"video\">Video <a class=\"direct-link\" href=\"http://www.zachleat.com/web/smashingconf/2015/#video\">#</a></h2> \n <figure> \n  <div class=\"fullwidth\">\n   <div class=\"fluid-width-video-wrapper\">\n    <iframe src=\"https://player.vimeo.com/video/145055818?title=0&amp;byline=0&amp;portrait=0\" frameborder=\"0\" webkitallowfullscreen=\"\" mozallowfullscreen=\"\" allowfullscreen=\"\"></iframe>\n   </div>\n  </div> \n  <figcaption>\n   <a href=\"https://vimeo.com/145055818\">SmashingConf Barcelona — Zach Leatherman on A Brief History of that Time You Used Web Fonts</a> from \n   <a href=\"https://vimeo.com/smashingmagazine\">Smashing Magazine</a>.\n  </figcaption> \n </figure> <h2 id=\"slides-on-speaker-deck-(144-slides)\"><a href=\"https://speakerdeck.com/zachleat/a-brief-history-of-that-time-you-used-web-fonts\">Slides on Speaker Deck</a> (144 slides) <a class=\"direct-link\" href=\"http://www.zachleat.com/web/smashingconf/2015/#slides-on-speaker-deck-(144-slides)\">#</a></h2> \n <blockquote class=\"twitter-tweet\" lang=\"en\">\n  <p lang=\"en\" dir=\"ltr\">Most !important thing learned at <a href=\"https://twitter.com/hashtag/SmashingConf?src=hash\">#SmashingConf</a> from <a href=\"https://twitter.com/zachleat\">@zachleat</a> <a href=\"https://t.co/OVOb6ao8Ef\">pic.twitter.com/OVOb6ao8Ef</a></p>— Tim Malabuyo (@malabooboo) \n  <a href=\"https://twitter.com/malabooboo/status/656846109286014976\">October 21, 2015</a>\n </blockquote> <h2 id=\"venue\">Venue <a class=\"direct-link\" href=\"http://www.zachleat.com/web/smashingconf/2015/#venue\">#</a></h2> <p>Paired nicely with the other amazing talks at SmashingConf, the event was held at Palau de la Musica Orfeo Catalana, rated as the <a href=\"http://www.tripadvisor.com/Attraction_Review-g187497-d190824-Reviews-Palau_de_la_Musica_Orfeo_Catalana-Barcelona_Catalonia.html\">#3 thing to see in all of Barcelona by TripAdvisor</a>. It was beautiful.</p> \n <blockquote class=\"twitter-tweet\" lang=\"en\">\n  <p lang=\"en\" dir=\"ltr\">Still blown away by this venue. <a href=\"https://twitter.com/hashtag/smashingconf?src=hash\">#smashingconf</a> <a href=\"https://t.co/vbmNCQZVmk\">pic.twitter.com/vbmNCQZVmk</a></p>— Zach Leatherman (@zachleat) \n  <a href=\"https://twitter.com/zachleat/status/656485663823499264\">October 20, 2015</a>\n </blockquote> <h2 id=\"links-(in-order-of-slide-appearance)\">Links (in order of slide appearance) <a class=\"direct-link\" href=\"http://www.zachleat.com/web/smashingconf/2015/#links-(in-order-of-slide-appearance)\">#</a></h2> \n <ul> \n  <li><a href=\"https://groups.google.com/a/chromium.org/forum/#!topic/chromium-dev/j27Ou4RtvQI/discussion\">Across all Google Web Fonts, WOFF2 is ~30% smaller than WOFF.</a></li> \n  <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/font-synthesis\"><code>font-synthesis</code> CSS property on MDN</a></li> \n  <li><a href=\"http://www.stateofwebtype.com/#font-synthesis\"><code>font-synthesis</code> on State of Web Type</a></li> \n  <li><a href=\"http://www.stateofwebtype.com/\">State of Web Type</a></li> \n  <li><a href=\"http://www.nytimes.com/2012/03/01/technology/impatient-web-users-flee-slow-loading-sites.html\"><em>“People will visit a Web site less often if it is slower than a close competitor by more than 250 milliseconds.”</em></a></li> \n  <li><a href=\"https://twitter.com/zoompf/status/578901383253995520\"><em>“If a page hasn’t loaded in 3 seconds, up to 40% of the users will abandon the site…”</em></a></li> \n  <li><a href=\"https://github.com/filamentgroup/loadCSS\">Load CSS Asynchronously using filamentgroup/loadCSS</a></li> \n  <li><a href=\"http://zachleat.com/web/mitt-romney-webfont-problem/\">The Mitt Romney Web Font Problem</a></li> \n  <li><a href=\"https://tabatkins.github.io/specs/css-font-display/\"><code>font-display</code> CSS descriptor</a></li> \n  <li><a href=\"http://dev.w3.org/csswg/css-font-loading/\">CSS Font Loading API</a></li> \n  <li>Font Loading Polyfills: <a href=\"http://github.com/zachleat/fontfaceonload\">FontFaceOnload</a> and <a href=\"http://github.com/bramstein/fontfaceobserver/\">FontFaceObserver</a></li> \n  <li><a href=\"http://fontfamily.io/\">fontfamily.io, Compatibility Tables for Default Installed Fonts</a></li> \n  <li><a href=\"http://ffffallback.com/\">FFFFallback</a></li> \n </ul> </img>","descriptionType":"html","feedId":12519,"bgimg":"https://www.zachleat.com/web/img/posts/barcelona/stage.jpg","linkMd5":"94d04dae46f863a2ac93e3bd3044a826","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn5@2020_6/2020/08/25/02-02-03-661_d0c2b39c412e417b.webp","destWidth":1024,"destHeight":420,"sourceBytes":105280,"destBytes":74260,"author":"","articleImgCdnMap":{"https://www.zachleat.com/web/img/posts/barcelona/stage.jpg":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn5@2020_6/2020/08/25/02-02-03-661_d0c2b39c412e417b.webp"},"publishedOrCreatedDate":1598320921766},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Forgive My Feed","link":"http://www.zachleat.com/web/forgive-my-feed/","description":"\n\t\t\t<p>This is going through a bit of maintenance. I’m tagging and recategorizing my old posts, so feel free to “mark all as read” if you get a bunch of new items.</p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"f833c3900cbfc5de49829fe3e8a7e3ad","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921761},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Relative URLs including the Domain","link":"http://www.zachleat.com/web/relative-urls-including-the-domain/","description":"\n\t\t\t<p>Just a neat little trick I saw while browsing the source code of Google Calendar. In some of their CSS files, they link to background-images using URLs that include everything but the protocol, which is something I hadn’t seen before.</p>\n<p>The most common usage of a relative URL is linked from the root (note the slash at the beginning), like so:</p>\n<p><img src=\"https://www.zachleat.com/web/wp-content/themes/hemingway/images/title.png\" alt=\"\"></p>\n<p>You can also use <code>../</code> to navigate up a directory in your path, but that’s boring. The interesting question is: what if I wanted to load content from a separate domain, while at the same time transparently using the protocol used on my page?</p>\n<p>Do what Google Calendar does and use the following style:<br>\n<img src=\"https://calendar.google.com/googlecalendar/images/calendar_sm2_en.gif\" alt=\"\"></p>\n<p>Note the lack of <code>http:</code> or <code>https:</code> from the URL. If this page <a href=\"https://www.zachleat.com/web/2008/10/16/relative-urls-including-the-domain/\">were hosted on https</a> (we don’t pay for certificates around here, so you’ll have to put up with the security warning), the last image source will load from https as well at no additional development cost.</p>\n<p>This seems like it would be especially useful if you were using the YDN Performance tip to <a href=\"http://developer.yahoo.com/performance/rules.html#split\">Split Components Across Domains</a>. Remember, we’re not just talking images. This involves how the browser resolves URLs, so could be used inside href tags, css urls (as Google Calendar did), etc.</p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"https://www.zachleat.com/web/wp-content/themes/hemingway/images/title.png","linkMd5":"79151f9f9b3d1713dec738ecb8d80a4d","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn1@2020_5/2020/08/25/02-02-02-693_178e4420fc0d70c1.webp","destWidth":617,"destHeight":153,"sourceBytes":35512,"destBytes":13728,"author":"","articleImgCdnMap":{"https://www.zachleat.com/web/wp-content/themes/hemingway/images/title.png":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn1@2020_5/2020/08/25/02-02-02-693_178e4420fc0d70c1.webp","https://calendar.google.com/googlecalendar/images/calendar_sm2_en.gif":"https://cdn.jsdelivr.net/gh/myreaderx/cdn0@2020_1/404.jpg"},"publishedOrCreatedDate":1598320921762},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Tablesaw: A Flexible Tool for Responsive Tables","link":"http://www.zachleat.com/web/tablesaw/","description":"<p><a href=\"http://www.filamentgroup.com/lab/tablesaw.html\"><strong>Originally posted as <em>Tablesaw: A Flexible Tool for Responsive Tables</em> on the Filament Group Lab.</strong></a></p> \n<blockquote> \n <p>Next to coming up with project names, managing tables in a responsive layout is one of the trickiest problems in web development. Semantically structured tables are notoriously difficult to style as anything other than… well… a table. On the other hand, cobbling together a pile of <code>div</code>s and <code>span</code>s into a table-like shape means giving up the semantic meaning, accessibility, and navigability of real <code>table</code> elements to represent tabular data, or it means jumping through hoops to recreate those features. When it comes down to it, the semantic benefits of real <code>table</code> elements make them our first and best choice.</p> \n</blockquote> \n<h2 id=\"available-on-github\"><a href=\"https://github.com/filamentgroup/tablesaw\">Available on GitHub</a> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/tablesaw/#available-on-github\">#</a></h2> \n<h2 id=\"demos\"><a href=\"http://filamentgroup.github.io/tablesaw/demo/kitchensink.html\">Demos</a> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/tablesaw/#demos\">#</a></h2> \n<h2 id=\"install-using-npm\">Install using NPM <a class=\"direct-link\" href=\"http://www.zachleat.com/web/tablesaw/#install-using-npm\">#</a></h2> \n<pre><code>npm install tablesaw\n</code></pre> \n<h2 id=\"install-using-bower\">Install using Bower <a class=\"direct-link\" href=\"http://www.zachleat.com/web/tablesaw/#install-using-bower\">#</a></h2> \n<pre><code>bower install filament-tablesaw\n</code></pre>","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"26e5bc264cf951641151d2cc732c9105","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921764},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Placeholder Title for Article about HTML5 Placeholders","link":"http://www.zachleat.com/web/placeholder/","description":"<p>When I’m not out fighting crime, I spend my days developing reusable components for the web. One of those reusable components I wrote was an implementation of a placeholder plugin. For the sake of privacy, all component names have been anonymized so I’ll refer to this home-grown implementation as The Mankini (if for no other reason than to drive some swimwear shopping traffic to my blog).</p> \n<p>The Mankini’s development predated the HTML5 specification but the end result was functionally similar. The difference being that in addition to operating on text inputs and textareas, it also worked with LF/CR and selects (injects an option with an empty value). The HTML5 specification requires that LF/CR be stripped from the placeholder value.</p> \n<p>One of the most important design considerations our interaction design team specified for The Mankini was that it was not to be used as a replacement for a form label. It was a complement to the form label and nothing more. The <a href=\"http://dev.w3.org/html5/spec/Overview.html#the-placeholder-attribute\">HTML5 specification came to the same conclusion</a>: <em>“The placeholder attribute should not be used as an alternative to a label.”</em> The reasoning is obvious: if the form field has a non-empty value, you need to be able to easily identify the value’s semantic meaning.</p> \n<p><img src=\"https://www.zachleat.com/web/wp-content/uploads/2012/02/Screen-Shot-2012-02-05-at-12.12.09-AM.png\" alt=\"\" title=\"An example of misused placeholders\"><br> Instead of putting the label text into the placeholder, use the placeholder to supplement the labels with an example e-mail and URL to provide more of a hint to the user for proper formatting. This example isn’t a huge usability issue since the three fields’ values would be easily identifiable, but it’s important to keep in mind.</br></img></p> \n<h2 id=\"placeholder-testing\">Placeholder Testing <a class=\"direct-link\" href=\"http://www.zachleat.com/web/placeholder/#placeholder-testing\">#</a></h2> \n<p>I decided to run a <a href=\"http://www.zachleat.com/test/placeholder.html\">few compatibility tests</a> on the placeholder attribute to see where I could reuse the HTML5 placeholder inside of The Mankini (the test results are also available on <a href=\"https://github.com/zachleat/Compatibility-Tests/blob/master/placeholder.html\">GitHub</a>). This yielded a few interesting things about some consistent and inconsistent cross-browser incompatibilities with the specification that I thought were worth sharing.</p> \n<ol> \n <li> <p>The HTML5 spec states that the placeholder should be visible when <em>“element’s value is the empty string and/or the control is not focused.”</em> The and/or presents the implementor with a decision. Do they keep the placeholder text visible when the field is focused but the value is still empty? Or do I remove the placeholder when focusing into an empty field?</p> <p>My personal preference is that the text remains until the user starts to type. Safari 5.1, iOS 5, and Chrome 17%2B were the only browser implementations to agree with this as of time of writing.</p> </li> \n <li> <p>The HTML5 spec has suggested (not required) that placeholders <em>only</em> apply to <code>&lt;input type=\"text, search, password, tel, url, email, number\"&gt;</code> and <code>&lt;textarea&gt;</code>. For some input types such as <code>hidden</code>, <code>radio</code>, or <code>checkbox</code> this limitation makes sense, the placeholder would add nothing to these elements. But for others like <code>datetime</code>, <code>date</code>, <code>month</code>, <code>week</code>, <code>time</code>, <code>datetime-local</code>, <code>color</code>, or <code>file</code> the argument can be made that it would be useful.</p> </li> \n <li> <p>There is <a href=\"https://bugs.webkit.org/show_bug.cgi?id=21286\">an open WebKit issue</a> to add placeholder support to contenteditable. Hopefully the specification gets modified and this gets added, as it would have been useful for my <a href=\"http://www.zachleat.com/web/bigtext-makes-text-big/\">BigText Demo Wizard</a> which manually implemented that same feature.</p> </li> \n <li> <p><code>&lt;input type=\"number\"&gt;</code> support is broken in Safari and it’s already been <a href=\"https://bugs.webkit.org/show_bug.cgi?id=61095\">reported and fixed</a>. “The future is here, just not evenly distributed.”</p> </li> \n</ol> \n<p>As a side note, it should be said that both Opera and iOS both have comprehensively badass support of the new HTML5 form element types.</p> \n<h2 id=\"overlooked-polyfill-considerations\">Overlooked Polyfill Considerations <a class=\"direct-link\" href=\"http://www.zachleat.com/web/placeholder/#overlooked-polyfill-considerations\">#</a></h2> \n<ul> \n <li> <p>For those browsers that did implement the placeholder, it was well supported in password fields, showing as plaintext and then converting to masked input when the user started to enter data. This was a nice surprise, but polyfilling that behavior in old Internet Explorers will require additional lifting since dynamically changing the type attribute is not permitted.</p> </li> \n <li> <p>Placeholder text should not be included with form submit.</p> </li> \n <li> <p>Placeholder text should reinitialize on form reset (note: there is no <code>delegate</code> event for <code>reset</code> in jQuery)</p> </li> \n <li> <p>Performance. Is the component required to iterate over all elements and add a class to initialize each one individually? For best performance, use CSS attribute selectors (<code>input[type=\"text\"][placeholder]</code>) for the default style and iterate only to remove the light gray color on form elements with non-empty values. This only requires a className modification for a much smaller set of elements, only the ones with non-empty values. Remember that the browsers we polyfill are often the slowest.</p> <p>Does the component modify the <code>className</code> property on <code>focus</code> and <code>blur</code>? I found this to be a huge performance issue for the Mankini in IE7 and IE8 on pages with large DOM trees and was a lot faster if the Mankini only modified one element’s style (think jQuery’s <code>$(this).css('color', '#000')</code>).</p> </li> \n <li> <p>Clear the values on page unload. After page refresh, some browsers will attempt to save unsubmitted form values and re-enter the values when the page reloads (added after reviewing <a href=\"https://github.com/mathiasbynens/jquery-placeholder\">Mathias Bynen’s jQuery-placeholder</a>).</p> </li> \n</ul> \n<h2 id=\"bathwater%2C-no-babies\">Bathwater, No Babies <a class=\"direct-link\" href=\"http://www.zachleat.com/web/placeholder/#bathwater%2C-no-babies\">#</a></h2> \n<p><a href=\"http://html5please.us/#placeholder\">HTML5 Please</a> recommends that we use the new and shiny responsibly and gives the go-ahead to use the placeholder polyfill on our pages. I humbly disagree. This seems to be the same trap we fell into for rounded corners and box shadows. We put extra effort into trying to get our sites to render and behave identically cross-browser, when we should have just let them render in old browsers without rounded corners or box-shadows at all. To test whether or not a polyfill is necessary, I created a super complex decision workflow called <strong>The Polyfill Test</strong>. It consists of 2 steps:</p> \n<ol> \n <li>Look at your own browser statistics. If the feature is at &gt;50%, continue to Step 2.</li> \n <li>Determine if the user will be able to complete their task without the feature. If the task is still completable without significant impairment, the polyfill isn’t necessary.</li> \n</ol> \n<p>Globally, placeholder support is sitting at 60% and growing. This particular feature has passed the tipping point. If your audience isn’t a representative sample of the global web browser statistics (big enterprise intranets with 97% Internet Explorer), your mileage may vary.</p> \n<p>If you’re already using validation on the form fields (client and/or server side) and you’re correctly using the placeholder to supplement (not replace) the field labels, I would argue that the polyfill isn’t needed. It’s an implementation nice-to-have, not a requirement.</p> \n<p><em>Update: Added note about Chrome 17+ support for placeholder text remaining on focus per Mathias’ feedback below.</em></p>","descriptionType":"html","feedId":12519,"bgimg":"https://www.zachleat.com/web/wp-content/uploads/2012/02/Screen-Shot-2012-02-05-at-12.12.09-AM.png","linkMd5":"cec797c3c652b2b5b119c7dc1b0f8927","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn13@2020_5/2020/08/25/02-02-04-413_6ae8e5e0bf8e1723.webp","destWidth":364,"destHeight":115,"sourceBytes":9113,"destBytes":1198,"author":"","articleImgCdnMap":{"https://www.zachleat.com/web/wp-content/uploads/2012/02/Screen-Shot-2012-02-05-at-12.12.09-AM.png":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn13@2020_5/2020/08/25/02-02-04-413_6ae8e5e0bf8e1723.webp"},"publishedOrCreatedDate":1598320921763},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"I added Lighthouse Scores to my Site’s Footer and You Can Too","link":"http://www.zachleat.com/web/lighthouse-in-footer/","description":"<p><a href=\"https://www.zachleat.com/web/speedlify/\">Speedlify</a> started with a very simple goal: make it easy to continuously check a site’s performance. As my friend <a href=\"https://scottjehl.com/\">Scott Jehl</a> has said, “it can be easier to make a site fast than to keep it that way.” And as a performance advocate, I feel that it’s important to keep myself honest and to have some transparency behind the sites I build.</p> \n<div class=\"primarylink\">\n <a href=\"https://www.speedlify.dev/zachleat.com/\">Speedlify for zachleat.com</a>\n</div> \n<p>In that vein, I decided to experiment with publishing Lighthouse scores of some of the pages on my personal web site onto the actual pages themselves. This does have a small performance cost associated with it, but eventually I hope to optimize it away when my personal site has a bit better Jamstack architecture behind it.</p> \n<h2 id=\"fetching-the-lighthouse-score\">Fetching the Lighthouse Score <a class=\"direct-link\" href=\"http://www.zachleat.com/web/lighthouse-in-footer/#fetching-the-lighthouse-score\">#</a></h2> \n<p>If you don’t care <em>how</em> this works and just want to set it up—skip to the next section!</p> \n<p>Obviously the costliest and most resource intensive piece of adding this feature to my site would be running the Lighthouse tests. I certainly wouldn’t want to run these on every page visit. Luckily Speedlify handles this for me—it’s already testing a bunch of pages on my site and it’s set up to only run once a day. All I needed to do was to add a static API, which is just a fancy way of saying that I used Eleventy to generate a bunch of static <code>JSON</code> files in an <code>/api/</code> directory.</p> \n<p>There are two API pieces here:</p> \n<ul> \n <li><a href=\"https://www.speedlify.dev/api/urls.json\"><code>https://www.speedlify.dev/api/urls.json</code></a> is the full list of all URLs tested by speedlify and their shorthash codes.</li> \n <li>A result file for each URL, e.g. <a href=\"https://www.speedlify.dev/api/bbfa43c1.json\"><code>https://www.speedlify.dev/api/bbfa43c1.json</code></a> <code>bbfa43c1</code> is the hash code supplied by <code>urls.json</code> and <code>bbfa43c1.json</code> contains the most recent run’s results.</li> \n</ul> \n<p>Speedlify tests once a day. I do not deploy my personal site every day (don’t tell my employer but my personal site is not yet on Netlify 😭—I wish it were but haven’t migrated it yet). This is a problem (for multiple reasons), right? If I consume the API data when I deploy my personal web site the results would be stale when Speedlify runs the next day! To workaround this temporary limitation I decided to use the Fetch API to grab the data client-side using JavaScript.</p> \n<p>This is marginally <em>okay</em> as the widget is hidden at the very bottom of the page in the footer. But <em>when</em> I migrate my personal site to Netlify, this won’t be necessary. Ideally I would add a webhook in Speedlify to re-build my personal site every time the results change and delete that client-side JavaScript altogether. <em>Yet another shining example of how a Jamstack architecture can improve front-end performance by making a chunk of clientside JavaScript no longer necessary.</em></p> \n<h2 id=\"adding-this-to-your-eleventy-site!\">Adding this to your Eleventy site! <a class=\"direct-link\" href=\"http://www.zachleat.com/web/lighthouse-in-footer/#adding-this-to-your-eleventy-site!\">#</a></h2> \n<p>I’ve hopefully streamlined the setup here enough that you can use this up for your own site too (if you’re already using Eleventy). Three steps here:</p> \n<ol> \n <li>Run your own Speedlify instance. You can learn more at <a href=\"https://github.com/zachleat/speedlify/\">the GitHub repository</a> or just click this button <a href=\"https://app.netlify.com/start/deploy?repository=https://github.com/zachleat/speedlify\"><img src=\"https://www.zachleat.com/img/deploy-to-netlify.svg\" width=\"146\" height=\"32\" /></a> \n  <ul> \n   <li>Modify the files in Speedlify’s <code>_data/sites/*.js</code> folder with your own URLs!</li> \n  </ul> </li> \n <li>Consume the Speedlify API data files—they are generated automatically with your Speedlify instance. \n  <ul> \n   <li>Use <a href=\"https://github.com/11ty/eleventy-cache-assets\">Eleventy’s Cache Assets plugin</a> <pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> @11ty/eleventy-cache-assets --save-dev</code></pre></li> \n   <li>Copy and paste the small <a href=\"https://github.com/zachleat/zachleat.com/blob/e6c9cc7eb3e05ba06d34c909bbf36eb9dea84273/_data/speedlify.js\"><code>speedlify.js</code> Eleventy global data file</a> to your global data directory. This tells us which URLs are speed tested in Speedlify. Change the URL in <code>speedlify.js</code> to point to your <code>/api/urls.json</code> file. Mine is <code>https://www.speedlify.dev/api/urls.json</code>.</li> \n  </ul> </li> \n <li>Use the <a href=\"https://github.com/zachleat/speedlify-score/\"><code>&lt;speedlify-score&gt;</code> Web Component</a>. (<em>These instructions were updated July 17, 2020</em>) \n  <ul> \n   <li><code>npm install speedlify-score</code></li> \n   <li>Add the <code>speedlify-score.js</code> JavaScript and the <code>speedlify-score.css</code> CSS to your page.</li> \n   <li>Add the <code>&lt;speedlify-score&gt;</code> markup to your page where you want the score to show up. I’d recommend putting it in the footer of your page.</li> \n   <li>Use the <code>speedlify.js</code> Eleventy global data file we added earlier to set the <code>hash</code> attribute. Have a look at <a href=\"https://github.com/zachleat/zachleat.com/blob/cb3ea00450be79d2b9233bac9fcbcf945ea72397/_includes/footer.html#L16-L21\">my <code>footer.html</code> to see how I did it using Liquid templates</a> (only lines 16 through 19).</li> \n   <li>Also set the <code>speedlify-url</code> attribute to point to your Speedlify instance. Mine is <pre class=\"language-html\"><code class=\"language-html\">speedlify-url=\"<a href=\"https://www.speedlify.dev/\">https://www.speedlify.dev</a>\"</code></pre></li> \n  </ul> </li> \n</ol> \n<h2 id=\"go-forth-and-speed-test!\">Go forth and speed test! <a class=\"direct-link\" href=\"http://www.zachleat.com/web/lighthouse-in-footer/#go-forth-and-speed-test!\">#</a></h2> \n<p>Hope you were able to stumble through those instructions okay—I would love to see examples of this in the wild if you do get it working. Please send them my way!</p>","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"cfea08d367a6c99f819a093048eb1763","bgimgJsdelivr":"","metaImg":"","author":"","articleImgCdnMap":{"https://www.zachleat.com/img/deploy-to-netlify.svg":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn48@2020_6/2020/08/25/02-02-15-893_615673eaa1146cee.svg"},"publishedOrCreatedDate":1598320921773},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Laissez-faire Font Smoothing and Anti-aliasing","link":"http://www.zachleat.com/web/font-smooth/","description":"<p><em>Recently, Twitter made a global anti-aliasing CSS change to their website. Before writing this post, I didn’t know very much about anti-aliasing—so I decided to learn everything I could about it to better understand the reasoning behind a decision like that. Here’s what I learned.</em></p> \n<p>Controlling anti-aliasing modes in CSS is easy. A little too easy <a href=\"https://en.wikipedia.org/wiki/Tin_foil_hat\"><img src=\"https://www.zachleat.com/web/img/posts/font-smooth/tinfoilhat.png\" alt=\"Tin foil hat\" style=\"height: 1em\" /></a>. There are two non-standardized, implemented vendor-prefixed properties to control anti-aliasing on text: <code class=\"nowrap\">-webkit-font-smoothing</code> and <code class=\"nowrap\">-moz-osx-font-smoothing</code>. The full browser support matrix is available under <a href=\"http://caniuse.com/#feat=font-smooth\"><code>font-smooth</code>on Can I Use</a>. But before we dive in, let’s level set on what the values for these properties are:</p> \n<ul> \n <li>Disabled: \n  <ul> \n   <li><code>-webkit-font-smoothing: none</code></li> \n   <li>In my tests, Firefox had no mechanism to disable font smoothing 👍</li> \n  </ul> </li> \n <li>Grayscale anti-aliasing (also known as Full pixel or Traditional anti-aliasing) \n  <ul> \n   <li><code>-webkit-font-smoothing: antialiased;</code></li> \n   <li><code>-moz-osx-font-smoothing: grayscale;</code></li> \n  </ul> </li> \n <li><a href=\"https://en.wikipedia.org/wiki/Subpixel_rendering\">Subpixel anti-aliasing</a> \n  <ul> \n   <li><code>-webkit-font-smoothing: subpixel-antialiased</code></li> \n  </ul> </li> \n <li>Let the browser decide (Uses subpixel anti-aliasing when available; this is the default) \n  <ul> \n   <li><code>-webkit-font-smoothing: auto</code></li> \n   <li><code>-moz-osx-font-smoothing: auto</code></li> \n  </ul> </li> \n</ul> \n<h3 id=\"try-it-out-on-this-page\">Try it out on this page <a class=\"direct-link\" href=\"http://www.zachleat.com/web/font-smooth/#try-it-out-on-this-page\">#</a></h3> \n<form class=\"livedemo\"> \n <fieldset class=\"fs-fieldset fs-choose\" id=\"fs-choose\">\n   Anti-aliasing: \n  <label><input type=\"radio\" name=\"choose\" value=\"fs-none\"><code>None</code></input></label> \n  <label><input type=\"radio\" name=\"choose\" value=\"fs-antialias\"><code>Grayscale</code></input></label> \n  <label><input type=\"radio\" name=\"choose\" value=\"fs-auto\" checked=\"\"><code>Auto</code></input></label> \n  <label><input type=\"radio\" name=\"choose\" value=\"fs-subpixel\"><code>Subpixel</code></input></label> \n </fieldset> \n</form> \n<h2 id=\"what%E2%80%99s-the-difference-between-these-modes%3F\">What’s the difference between these modes? <a class=\"direct-link\" href=\"http://www.zachleat.com/web/font-smooth/#what%E2%80%99s-the-difference-between-these-modes%3F\">#</a></h2> \n<p>To get a closer look, I strapped a cheap 25x macro lens to my smartphone and took some pictures. They’re pretty distorted around the edges because of the lens, but they’re good enough to see what’s going on.</p> \n<video controls=\"\" preload=\"metadata\" loop=\"\" src=\"https://www.zachleat.com/web/img/posts/font-smooth/antialiasing.mp4\">\n  Sorry, your browser doesn't support embedded videos. Try \n <a href=\"https://www.zachleat.com/web/img/posts/font-smooth/antialiasing.mp4\">downloading it</a> instead. \n</video> \n<p>When you zoom in on the image, you can see the individual pixels—each with their own red, green, and blue lights! Fascinating!</p> \n<p>Compare the three different modes below. <em>These photos were taken of 24px text using the Times typeface displayed on an LG UM95 Ultra Widescreen monitor (109dpi, a low DPI makes it easier to see).</em></p> \n<div class=\"grid-3\"> \n <figure> \n  <img src=\"https://www.zachleat.com/web/img/posts/font-smooth/disabled.jpg\" alt=\"\"> \n   <figcaption>\n    Anti-aliasing is disabled.\n   </figcaption> </img>\n </figure> \n <figure> \n  <img src=\"https://www.zachleat.com/web/img/posts/font-smooth/grayscale.jpg\" alt=\"\"> \n   <figcaption>\n    Grayscale or full pixel anti-aliasing.\n   </figcaption> </img>\n </figure> \n <figure> \n  <img src=\"https://www.zachleat.com/web/img/posts/font-smooth/subpixel.jpg\" alt=\"\"> \n   <figcaption>\n    Subpixel anti-aliasing.\n   </figcaption> </img>\n </figure> \n</div> \n<div class=\"grid-3\"> \n <figure> \n  <img src=\"https://www.zachleat.com/web/img/posts/font-smooth/disabled-zoom-annotated.jpg\" alt=\"\"> \n   <figcaption>\n    Anti-aliasing is disabled. Note that the pixel is either on or off. Not partially illuminated.\n   </figcaption> </img>\n </figure> \n <figure> \n  <img src=\"https://www.zachleat.com/web/img/posts/font-smooth/grayscale-zoom-annotated.jpg\" alt=\"\"> \n   <figcaption>\n    Grayscale or full pixel anti-aliasing. Note that the highlighted pixel is partially illuminated (with each red, green, and blue light illuminated the same amount).\n   </figcaption> </img>\n </figure> \n <figure> \n  <img src=\"https://www.zachleat.com/web/img/posts/font-smooth/subpixel-zoom-annotated.jpg\" alt=\"\"> \n   <figcaption>\n    Subpixel anti-aliasing. Note that in the highlighted pixel, the red and green lights are illuminated but the blue is not.\n   </figcaption> </img>\n </figure> \n</div> \n<p>Remember that hexadecimal color values have 2 hex digits for red, 2 digits for green, and 2 digits for blue? Note that when those values are all the same (<code>#eeeeee</code>, <code>#222222</code>, or <code>#666666</code>), the color is a shade of gray. The same principle applies for the pixels in grayscale anti-aliasing. When each red, green, and blue light are illuminated the same, the pixel appears to be gray.</p> \n<p>Subpixel anti-aliasing uses a similar technique, but with the full RGB color pallette. Making a pixel red means that only the left third of the pixel will be illuminated, which gives us additional rendering precision.</p> \n<p>While subpixel anti-aliasing is considered to be state of the art, hardware advancements are rendering <code>(͡° ͜ʖ ͡°)</code> it unnecessary. On HDPi or retina screens, subpixel anti-aliasing is increasingly unnecessary to render an accurate portrayal of a glyph. The more pixels you have to work with, the more effective grayscale anti-aliasing is. That’s why it’s unlikely that iOS will ever support subpixel anti-aliasing, saving them the work of supporting the <code>font-smooth</code> property.</p> \n<figure> \n <img src=\"https://www.zachleat.com/web/img/posts/font-smooth/apple-iphone-6-grayscale.jpg\" alt=\"\"> \n  <figcaption>\n   Apple’s iPhone 6 (326dpi), showing horizontal stripe pixel geometry, \n   <span style=\"background-color: #f00; color: #fff; padding: 0 .25em\">Red</span>\n   <span style=\"background-color: #0f0; color: #fff; padding: 0 .25em\">Green</span>\n   <span style=\"background-color: #00f; color: #fff; padding: 0 .25em\">Blue</span>, and grayscale anti-aliasing. Note that this display also \n   <a href=\"http://www.anandtech.com/show/8509/understanding-dual-domain-pixels-in-the-iphone-6-and-iphone-6-plus\">uses “Dual Domain” pixels, which are skewed at alternating angles</a>.\n  </figcaption> </img>\n</figure> \n<p>But not all screens share the same horizontal stripe <a href=\"https://en.wikipedia.org/wiki/Pixel_geometry#cite_note-1\">pixel geometry</a>. Here’s a Google Pixel smartphone, using a diamond subpixel shape called <a href=\"https://en.wikipedia.org/wiki/PenTile_matrix_family\">PenTile</a> (trademarked by Samsung). As the picture shows, PenTile clearly does support subpixel anti-aliasing, but does <em>not</em> support controlling it with the <code>-webkit-font-smoothing</code> property. A diamond configuration is likely to handle subpixel rendering in different orientations better than a horizontal stripe could.</p> \n<figure> \n <img src=\"https://www.zachleat.com/web/img/posts/font-smooth/google-pixel-subpixel.jpg\" alt=\"\"> \n  <figcaption>\n   Google’s Pixel (441dpi), showing \n   <a href=\"https://en.wikipedia.org/wiki/PenTile_matrix_family\">PenTile pixel geometry</a> (a diamond shape) with subpixel anti-aliasing.\n  </figcaption> </img>\n</figure> \n<h2 id=\"so%2C-twitter-made-a-change\">So, Twitter made a change <a class=\"direct-link\" href=\"http://www.zachleat.com/web/font-smooth/#so%2C-twitter-made-a-change\">#</a></h2> \n<p>Recently <a href=\"https://twitter.com/\">twitter.com</a> switched their website to force grayscale anti-aliasing on HiDPI screens:</p> \n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token atrule\"><span class=\"token rule\">@media</span> screen and <span class=\"token punctuation\">(</span><span class=\"token property\">-webkit-min-device-pixel-ratio</span><span class=\"token punctuation\">:</span> 2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> screen and <span class=\"token punctuation\">(</span><span class=\"token property\">min-resolution</span><span class=\"token punctuation\">:</span> 2dppx<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span><br>\t<span class=\"token selector\">body</span> <span class=\"token punctuation\">{</span><br>\t\t<span class=\"token property\">-moz-osx-font-smoothing</span><span class=\"token punctuation\">:</span> grayscale<span class=\"token punctuation\">;</span><br>\t\t<span class=\"token property\">-webkit-font-smoothing</span><span class=\"token punctuation\">:</span> antialiased<span class=\"token punctuation\">;</span><br>\t<span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span></br></br></br></br></br></code></pre> \n<p>Asthetically as we’ve seen, using grayscale anti-aliasing makes things appear lighter and thinner. It’s usually employed to lighten text or icons that are placed on dark backgrounds, almost as a shortcut to avoid loading an additional (but perhaps more appropriate) Light or Hairline web font. It is unusual to apply this change to a site globally but from a technical perspective it is consistent with iOS’ preference for grayscale anti-aliasing. Perhaps it would clash with Android’s embrace of subpixel anti-aliasing if <code>-webkit-font-smoothing</code> were supported there.</p> \n<p>To see more big players in the <code>font-smooth</code> game, <a href=\"https://developer.microsoft.com/en-us/microsoft-edge/platform/usage/css/-webkit-font-smoothing/\">check out the Microsoft Edge CSS Usage list</a>. <em>Related: <a href=\"https://twitter.com/zachleat/status/872073432883712000\">yahoo.com does some weird stuff.</a></em></p> \n<h2 id=\"conclusion\">Conclusion <a class=\"direct-link\" href=\"http://www.zachleat.com/web/font-smooth/#conclusion\">#</a></h2> \n<p>Taking a “smoke ’em if you got ’em” approach to subpixel anti-aliasing feels warranted here. It seems silly to opt-out of a technically superior subpixel approach if it’s supported on the user’s platform and browser.</p> \n<p>Platforms that support subpixel rendering may or may not support <code>font-smooth</code> to control it—Android is a prime example of this. After reading issues on web browser bug trackers, it almost seems like the browsers that did implement this now regret doing so. But independent of <code>font-smooth</code> support, subpixel anti-aliasing is not going away any time soon—even if iOS holds out forever.</p> \n<p>The safe bet here is to defer to browser and platform defaults and only use <code>font-smooth</code> overrides sparingly and as a last resort.</p> \n<h2 id=\"sources\">Sources <a class=\"direct-link\" href=\"http://www.zachleat.com/web/font-smooth/#sources\">#</a></h2> \n<ul> \n <li><a href=\"http://usabilitypost.com/2012/11/05/stop-fixing-font-smoothing/\">Please Stop “Fixing” Font Smoothing</a> (2012) from <a href=\"https://twitter.com/usabilitypost\">Dmitry Fadeyev</a></li> \n <li><a href=\"https://www.html5rocks.com/en/tutorials/internals/antialiasing-101/\">Anti-aliasing 101</a> (2013) from <a href=\"https://twitter.com/aerotwist\">Paul Lewis (@aerotwist)</a>. It appears that some of the layering criteria may be outdated here. The first three sections are great though.</li> \n <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/font-smooth\">MDN <code>font-smooth</code></a></li> \n <li><a href=\"http://szafranek.net/blog/2009/02/22/font-smoothing-explained/\">Font Smoothing Explained</a> (2009) from <a href=\"https://twitter.com/szafranek\">Krzysztof Szafranek</a></li> \n <li><a href=\"https://bjango.com/articles/subpixeltext/\">Sub-pixel text rendering</a> (2012) by <a href=\"https://twitter.com/bjango\">Bjango</a></li> \n <li><a href=\"http://alienryderflex.com/sub_pixel/\">Understanding Sub-Pixel (LCD Screen) Anti-Aliased Font Rendering</a> (2007) from Darel Rex Finley</li> \n <li><a href=\"https://daringfireball.net/2007/12/anti_aliasing_on_the_iphone\">Anti-Aliasing on the iPhone</a> (2007) from John Gruber</li> \n</ul> \n<h2 id=\"updates\">Updates <a class=\"direct-link\" href=\"http://www.zachleat.com/web/font-smooth/#updates\">#</a></h2> \n<ul> \n <li>Sub-pixel anti-aliasing reportedly removed in macOS Mojave: \n  <blockquote class=\"twitter-tweet\" data-lang=\"en\">\n   <p lang=\"en\" dir=\"ltr\">Subpixel antialiasing for text is gone in macOS Mojave.</p>— John Siracusa (@siracusa) \n   <a href=\"https://twitter.com/siracusa/status/1004143205078597633?ref_src=twsrc%5Etfw\">June 5, 2018</a>\n  </blockquote></li> \n</ul> \n<div class=\"retweettoshare\"> \n <h3 class=\"retweettoshare_title\">Retweet to share this post</h3> \n <div class=\"retweettoshare_widget\"> \n  <blockquote class=\"twitter-tweet\" data-lang=\"en\">\n   <p lang=\"en\" dir=\"ltr\">★ Laissez-Faire Font Smoothing and Anti-aliasing <a href=\"https://t.co/mIxWPADXel\">https://t.co/mIxWPADXel</a><br><br>Learn about `-webkit-font-smoothing` and `-moz-osx-font-smoothing`</br></br></p>— Zach Leatherman (@zachleat) \n   <a href=\"https://twitter.com/zachleat/status/874968707239297025\">June 14, 2017</a>\n  </blockquote> \n </div> \n</div> \n<style> .fs-choose { display: none; } @media ( max-width: 34.9375em /* 559px */ ) { .fs-choose label { display: block; } } .fs-fieldset { border: none; padding: .5em 0; } .fs-auto { -webkit-font-smoothing: auto; -moz-osx-font-smoothing: auto; } .fs-antialias { -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; } .fs-subpixel { -webkit-font-smoothing: subpixel-antialiased; } .fs-none { -webkit-font-smoothing: none; -moz-osx-font-smoothing: unset; } </style> \n<script> (function() { if( \"querySelectorAll\" in document &amp;&amp; \"classList\" in document.body ) { var chooser = document.getElementById( \"fs-choose\" ); chooser.style.display = \"block\"; // Radio picker var radios = Array.prototype.slice.call( chooser.querySelectorAll( 'input[type=\"radio\"]' ) ); var classes = []; var docEl = document.documentElement; radios.forEach(function( radio ) { classes.push( radio.value ); radio.addEventListener( \"click\", function( e ) { if( this.checked ) { classes.forEach(function( cls ) { docEl.classList.remove( cls ); }); docEl.classList.add( this.value ); } }, false ); }); } })(); </script>","descriptionType":"html","feedId":12519,"bgimg":"https://www.zachleat.com/web/img/posts/font-smooth/tinfoilhat.png","linkMd5":"a7e81be8d36b6404c23925a032318862","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn38@2020_5/2020/08/25/02-02-03-918_f9264592922213db.webp","destWidth":60,"destHeight":57,"sourceBytes":6990,"destBytes":1108,"author":"","articleImgCdnMap":{"https://www.zachleat.com/web/img/posts/font-smooth/tinfoilhat.png":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn38@2020_5/2020/08/25/02-02-03-918_f9264592922213db.webp","https://www.zachleat.com/web/img/posts/font-smooth/disabled.jpg":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn96@2020_1/2020/08/25/02-02-18-194_a7d16856e81d9eab.webp","https://www.zachleat.com/web/img/posts/font-smooth/grayscale.jpg":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn24@2020_4/2020/08/25/02-02-22-410_4cf6feb65c9f369c.webp","https://www.zachleat.com/web/img/posts/font-smooth/subpixel.jpg":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn57@2020_5/2020/08/25/02-02-14-837_ed4fe9103d7eafc3.webp","https://www.zachleat.com/web/img/posts/font-smooth/disabled-zoom-annotated.jpg":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn11@2020_1/2020/08/25/02-02-15-884_ea5b19fa50447b8e.webp","https://www.zachleat.com/web/img/posts/font-smooth/grayscale-zoom-annotated.jpg":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn82@2020_6/2020/08/25/02-02-10-174_88b05c7cf1122f45.webp","https://www.zachleat.com/web/img/posts/font-smooth/subpixel-zoom-annotated.jpg":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn12@2020_5/2020/08/25/02-02-17-268_2c9a9a0395301785.webp","https://www.zachleat.com/web/img/posts/font-smooth/apple-iphone-6-grayscale.jpg":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn68@2020_6/2020/08/25/02-02-17-874_30e78799124e961a.webp","https://www.zachleat.com/web/img/posts/font-smooth/google-pixel-subpixel.jpg":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn80@2020_4/2020/08/25/02-02-17-182_8b3c4423c65b26fe.webp"},"publishedOrCreatedDate":1598320921768},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Font Aliasing, or How to Rename a Font in CSS","link":"http://www.zachleat.com/web/rename-font/","description":"<p>Are you tired of developers abusing the smooth traditionalism of Helvetica? Do you wish your web page was a little bit more fun? Do you also want to avoid discussing things with your peers? Well, do I have some code for you. Add this little block into your project and it will globally alias (rename) Helvetica to Comic Sans MS (and Chalkboard SE, <a href=\"http://fontfamily.io/Comic_Sans_MS,Chalkboard_SE\">browser support</a>). <em>(Yes, I know I recently wrote a blog post about <a href=\"https://www.zachleat.com/web/font-smooth/\">anti-aliasing</a>—that’s a different thing.)</em></p> \n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">@​font-face</span> <span class=\"token punctuation\">{</span><br>\t<span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> Helvetica<span class=\"token punctuation\">;</span><br>\t<span class=\"token property\">src</span><span class=\"token punctuation\">:</span> <span class=\"token function\">local</span><span class=\"token punctuation\">(</span>Comic Sans MS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">local</span><span class=\"token punctuation\">(</span>Chalkboard SE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span></br></br></br></code></pre> \n<p>If you follow me on Twitter, you may have seen this idea before in <a href=\"https://twitter.com/zachleat/status/599600783399739392\">2015</a>, and, uh, also in <a href=\"https://twitter.com/zachleat/status/540267060702744576\">2014</a>.</p> \n<style> @font-face { font-family: Helvetica; src: local(Comic Sans MS), local(Chalkboard SE); } </style> \n<p class=\"livedemo\" style=\"font-family: Helvetica\">&lt;p style=\"font-family: Helvetica\"&gt;This is an end-around for any font family properties you have specified, no matter the block’s selector specificity. Think you can use <code>!important</code> to override? Think again.&lt;/p&gt;</p> \n<p>Let’s check <a href=\"https://www.w3.org/TR/css-fonts-3/#font-family-desc\">the specification</a>:</p> \n<blockquote> \n <p>If the font family name is the same as a font family available in a given user's environment, it effectively hides the underlying font for documents that use the stylesheet. This permits a web author to freely choose font-family names without worrying about conflicts with font family names present in a given user's environment.</p> \n</blockquote> \n<p>The specification allows for this because the alternative—worrying about naming conflicts on every user agent—would be horrific!</p> \n<h2 id=\"valid-local()%E2%80%99s\">Valid local()’s <a class=\"direct-link\" href=\"http://www.zachleat.com/web/rename-font/#valid-local()%E2%80%99s\">#</a></h2> \n<p>What are valid values for <code>local()</code>? If you’re think you can just add any <code>font-family</code> name—no, not quite. Let’s consult <a href=\"https://www.w3.org/TR/2013/WD-css3-fonts-20130212/#src-desc\">the specification</a> again:</p> \n<blockquote> \n <p>The locally installed &lt;font-face-name&gt; is a format-specific string that uniquely identifies a single font face within a larger family.</p> \n</blockquote> \n<blockquote> \n <p>For OpenType and TrueType fonts, this string is used to match only the Postscript name or the full font name in the name table of locally available fonts. Which is used varies by platform and font, so authors should include both of these names to assure proper matching across platforms.</p> \n</blockquote> \n<p>Okay, we feed <code>local()</code> a PostScript or Full Font name. How do we find those?</p> \n<p>If you have Mac OS, open up the default font browser—Font Book—and select a font. In the menu bar, select <code>View ➡ Show Font Info</code> and the right pane will show both the PostScript name and Full name values.</p> \n<picture> \n <source type=\"image/webp\" srcset=\"https://www.zachleat.com/web/img/posts/aliasing/font-info.webp\"> <img src=\"https://www.zachleat.com/web/img/posts/aliasing/font-info.png\" alt=\"How to find the Full Font and PostScript font names in Font Book\" class=\"primary\"> </img></source>\n</picture> \n<p>Keep in mind that you can’t override generic family keywords, like <code>serif</code>, <code>sans-serif</code>, <code>cursive</code>, <code>fantasy</code>, or <code>monospace</code>. Not even if you quote them in your <code>font-family</code> property, although pedantically speaking this should probably work since <code>font-family: \"serif\"</code> refers to something different than <code>font-family: serif</code>.</p> \n<h2 id=\"facebook%E2%80%99s-san-francisco-trick\">Facebook’s San Francisco Trick <a class=\"direct-link\" href=\"http://www.zachleat.com/web/rename-font/#facebook%E2%80%99s-san-francisco-trick\">#</a></h2> \n<p>Sometimes I casually browse how different web sites I’m visiting are using @font-face. I <a href=\"https://twitter.com/zachleat/status/872578935921545216\">stumbled upon Facebook using this trick</a> to their advantage in a clever way. Have a look:</p> \n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token atrule\"><span class=\"token rule\">@font-face</span></span> <span class=\"token punctuation\">{</span><br>\t<span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'San Francisco'</span><span class=\"token punctuation\">;</span><br>\t<span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> 300<span class=\"token punctuation\">;</span><br>\t<span class=\"token property\">src</span><span class=\"token punctuation\">:</span> <span class=\"token function\">local</span><span class=\"token punctuation\">(</span><span class=\"token string\">'-apple-system'</span><span class=\"token punctuation\">)</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token atrule\"><span class=\"token rule\">@font-face</span></span> <span class=\"token punctuation\">{</span><br> <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'San Francisco'</span><span class=\"token punctuation\">;</span><br> <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> 400<span class=\"token punctuation\">;</span><br> <span class=\"token property\">src</span><span class=\"token punctuation\">:</span> <span class=\"token function\">local</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.SFNSText-Regular'</span><span class=\"token punctuation\">)</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token atrule\"><span class=\"token rule\">@font-face</span></span> <span class=\"token punctuation\">{</span><br> <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'San Francisco'</span><span class=\"token punctuation\">;</span><br> <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> 500<span class=\"token punctuation\">;</span><br> <span class=\"token property\">src</span><span class=\"token punctuation\">:</span> <span class=\"token function\">local</span><span class=\"token punctuation\">(</span><span class=\"token string\">'-apple-system'</span><span class=\"token punctuation\">)</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token atrule\"><span class=\"token rule\">@font-face</span></span> <span class=\"token punctuation\">{</span><br> <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'San Francisco'</span><span class=\"token punctuation\">;</span><br> <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> 600<span class=\"token punctuation\">;</span><br> <span class=\"token property\">src</span><span class=\"token punctuation\">:</span> <span class=\"token function\">local</span><span class=\"token punctuation\">(</span><span class=\"token string\">'-apple-system'</span><span class=\"token punctuation\">)</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token atrule\"><span class=\"token rule\">@font-face</span></span> <span class=\"token punctuation\">{</span><br> <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'San Francisco'</span><span class=\"token punctuation\">;</span><br> <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> 700<span class=\"token punctuation\">;</span><br> <span class=\"token property\">src</span><span class=\"token punctuation\">:</span> <span class=\"token function\">local</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.SFNSText-Semibold'</span><span class=\"token punctuation\">)</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token atrule\"><span class=\"token rule\">@font-face</span></span> <span class=\"token punctuation\">{</span><br> <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'San Francisco'</span><span class=\"token punctuation\">;</span><br> <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> 800<span class=\"token punctuation\">;</span><br> <span class=\"token property\">src</span><span class=\"token punctuation\">:</span> <span class=\"token function\">local</span><span class=\"token punctuation\">(</span><span class=\"token string\">'-apple-system'</span><span class=\"token punctuation\">)</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token selector\">#facebook ._-kb.sf</span> <span class=\"token punctuation\">{</span><br> <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> San Francisco<span class=\"token punctuation\">,</span> -apple-system<span class=\"token punctuation\">,</span> BlinkMacSystemFont<span class=\"token punctuation\">,</span> <span class=\"token string\">'.SFNSText-Regular'</span><span class=\"token punctuation\">,</span> sans-serif<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></code></pre> \n<p>Very cool! They’ve aliased a bunch of <code>local</code> references in the @font-face sources to simplify their <code>font-family</code> property value a bit, varying local sources by <code>font-weight</code>. Let’s dive in with some reduced/separated demos and test cases to fully understand it.</p> \n<p><em>Update: I discovered later that the <a href=\"http://www.zachleat.com/web/rename-font/#system-font-css\">System Font CSS</a> project used this approach back in 2015, likely predating Facebook’s implementation.</em></p> \n<h2 id=\"live-demos\">Live Demos <a class=\"direct-link\" href=\"http://www.zachleat.com/web/rename-font/#live-demos\">#</a></h2> \n<p><em>Note: The fallbacks in the demos below are mapped to <code>fantasy</code>. If you see <code>fantasy</code>, the alias didn’t work. On Apple products (where San Francisco is likely to be available) <a href=\"http://fontfamily.io/fantasy\"><code>fantasy</code> renders as Papyrus</a>.</em></p> \n<h3 id=\"-apple-system\">-apple-system <a class=\"direct-link\" href=\"http://www.zachleat.com/web/rename-font/#-apple-system\">#</a></h3> \n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token atrule\"><span class=\"token rule\">@font-face</span></span> <span class=\"token punctuation\">{</span><br>\t<span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> San Francisco Apple System<span class=\"token punctuation\">;</span><br>\t<span class=\"token property\">src</span><span class=\"token punctuation\">:</span> <span class=\"token function\">local</span><span class=\"token punctuation\">(</span>-apple-system<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span></br></br></br></code></pre> \n<style> @font-face { font-family: San Francisco Apple System; src: local(-apple-system); } </style> \n<p><span class=\"livedemo\" style=\"font-family: San Francisco Apple System, fantasy;\">San Francisco aliased from <code>local(-apple-system)</code></span> <span class=\"caption\"><strong>Supported</strong> in Safari (Mobile and Desktop) and <strong>Not Supported</strong> in Chrome, Firefox (as of 54)</span></p> \n<h3 id=\"blinkmacsystemfont\">BlinkMacSystemFont <a class=\"direct-link\" href=\"http://www.zachleat.com/web/rename-font/#blinkmacsystemfont\">#</a></h3> \n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token atrule\"><span class=\"token rule\">@font-face</span></span> <span class=\"token punctuation\">{</span><br>\t<span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> San Francisco Blink<span class=\"token punctuation\">;</span><br>\t<span class=\"token property\">src</span><span class=\"token punctuation\">:</span> <span class=\"token function\">local</span><span class=\"token punctuation\">(</span>BlinkMacSystemFont<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span></br></br></br></code></pre> \n<style> @font-face { font-family: San Francisco Blink; src: local(BlinkMacSystemFont); } </style> \n<p><span class=\"livedemo\" style=\"font-family: San Francisco Blink, fantasy;\">San Francisco aliased from <code>local(BlinkMacSystemFont)</code></span> <span class=\"caption\"><strong>Not Supported</strong> in Chrome, Firefox (as of 54), Safari (as of 10.1)</span></p> \n<h3 id=\"postscript-names\">PostScript Names <a class=\"direct-link\" href=\"http://www.zachleat.com/web/rename-font/#postscript-names\">#</a></h3> \n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token atrule\"><span class=\"token rule\">@font-face</span></span> <span class=\"token punctuation\">{</span><br>\t<span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> San Francisco PostScript Name<span class=\"token punctuation\">;</span><br>\t<span class=\"token property\">src</span><span class=\"token punctuation\">:</span> <span class=\"token function\">local</span><span class=\"token punctuation\">(</span>.SFNSText-Regular<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span></br></br></br></code></pre> \n<style> @font-face { font-family: San Francisco PostScript Name; src: local(.SFNSText-Regular); } </style> \n<p><span class=\"livedemo\" style=\"font-family: San Francisco PostScript Name, fantasy;\">San Francisco aliased from <code>local(.SFNSText-Regular)</code></span> <span class=\"caption\"><strong>Not Supported</strong> in Chrome, Firefox (as of 54), Safari (as of 10.1)</span></p> \n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token atrule\"><span class=\"token rule\">@font-face</span></span> <span class=\"token punctuation\">{</span><br>\t<span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> San Francisco PostScript Name Quoted<span class=\"token punctuation\">;</span><br>\t<span class=\"token property\">src</span><span class=\"token punctuation\">:</span> <span class=\"token function\">local</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.SFNSText-Regular'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span></br></br></br></code></pre> \n<style> @font-face { font-family: San Francisco PostScript Name Quoted; src: local('.SFNSText-Regular'); } </style> \n<p><span class=\"livedemo\" style=\"font-family: San Francisco PostScript Name Quoted, fantasy;\">San Francisco aliased from <code>local('.SFNSText-Regular')</code></span> <span class=\"caption\"><strong>Supported</strong> in Firefox, Safari (Desktop) and <strong>Not Supported</strong> in Chrome, Mobile Safari</span></p> \n<h3 id=\"system-ui\">system-ui <a class=\"direct-link\" href=\"http://www.zachleat.com/web/rename-font/#system-ui\">#</a></h3> \n<p>Standardization is taking place around <a href=\"https://drafts.csswg.org/css-fonts-4/#system-ui-def\">the <code>system-ui</code> value</a>, hopefully coming soon to <a href=\"https://github.com/Fyrd/caniuse/issues/2918\">Can I Use</a>. Even better—looks like Chrome has moved forward with this!</p> \n<p><span class=\"livedemo\" style=\"font-family: system-ui, fantasy;\">Not aliased at all, just using <code>font-family: system-ui</code></span> <span class=\"caption\"><strong>Supported</strong> in Chrome and <strong>Not Supported</strong> in Firefox (as of 54), Safari (as of 10.1)</span></p> \n<p>And Chrome’s implementation supports using it as an alias source too! Given that <code>BlinkMacSystemFont</code> did not work as an alias source, I was delighted to see that <code>system-ui</code> did.</p> \n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token atrule\"><span class=\"token rule\">@font-face</span></span> <span class=\"token punctuation\">{</span><br>\t<span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> San Francisco System UI<span class=\"token punctuation\">;</span><br>\t<span class=\"token property\">src</span><span class=\"token punctuation\">:</span> <span class=\"token function\">local</span><span class=\"token punctuation\">(</span>system-ui<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span></br></br></br></code></pre> \n<style> @font-face { font-family: San Francisco System UI; src: local(system-ui); } </style> \n<p><span class=\"livedemo\" style=\"font-family: San Francisco System UI, fantasy;\">San Francisco aliased from <code>local(system-ui)</code></span> <span class=\"caption\"><strong>Supported</strong> in Chrome and <strong>Not Supported</strong> in Firefox (as of 54), Safari (as of 10.1)</span></p> \n<h3 id=\"final%2C-reduced-code\">Final, Reduced Code <a class=\"direct-link\" href=\"http://www.zachleat.com/web/rename-font/#final%2C-reduced-code\">#</a></h3> \n<p>Combining the above test cases results in a simplified version of the San Francisco alias that works in Chrome, Safari (Desktop and Mobile), and Firefox. Notably, this renders <code>BlinkMacSystemFont</code> unnecessary. It also doesn’t require any additional values in the <code>font-family</code> properties littered throughout your CSS. Clean and efficient!</p> \n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token atrule\"><span class=\"token rule\">@font-face</span></span> <span class=\"token punctuation\">{</span><br>\t<span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> My San Francisco Alias<span class=\"token punctuation\">;</span><br>\t<span class=\"token property\">src</span><span class=\"token punctuation\">:</span> <span class=\"token function\">local</span><span class=\"token punctuation\">(</span>system-ui<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">local</span><span class=\"token punctuation\">(</span>-apple-system<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">local</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.SFNSText-Regular'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><span class=\"token selector\">p</span> <span class=\"token punctuation\">{</span><br> <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> My San Francisco Alias<span class=\"token punctuation\">,</span> fantasy<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span></br></br></br></br></br></br></code></pre> \n<style> @font-face { font-family: My San Francisco Alias; src: local(system-ui), local(-apple-system), local('.SFNSText-Regular'); } </style> \n<p class=\"livedemo\" style=\"font-family: My San Francisco Alias, fantasy;\">This should work everywhere San Francisco is available.\n <!-- <span style=\"font-weight: 700\">Here is some bold.</span> <span style=\"font-style: italic;\">Here is some italic.</span> <span style=\"font-weight: 700; font-style: italic;\">Here is some italic bold.</span> --></p> \n<h2 id=\"further-explorations\">Further Explorations <a class=\"direct-link\" href=\"http://www.zachleat.com/web/rename-font/#further-explorations\">#</a></h2> \n<ul> \n <li>You could expand the San Francisco alias to support all of the weights Facebook listed above (and maybe even italic styles too). Check out the <a href=\"http://www.zachleat.com/web/rename-font/#system-font-css\">System Font CSS</a> project in the sources below.</li> \n <li>When a locally aliased font doesn’t find an exact match for weight/style, <a href=\"https://github.com/filamentgroup/faux-pas/issues/1\">does it use font-synthesis to render faux bold or faux italic</a>?</li> \n</ul> \n<h2 id=\"sources\">Sources <a class=\"direct-link\" href=\"http://www.zachleat.com/web/rename-font/#sources\">#</a></h2> \n<ul> \n <li><span id=\"system-font-css\"></span><a href=\"https://github.com/jonathantneal/system-font-css\">System Font CSS</a> by <a href=\"https://twitter.com/jon_neal\">Jonathan Neal</a>, an awesome project to polyfill <code>system-ui</code>. Although I discovered this late, it likely predates Facebook’s code above and may even be the origin of this aliased approach for system fonts. It’s certainly the earliest use of it that I’ve seen (commits from 2015).</li> \n <li><a href=\"https://css-tricks.com/snippets/css/system-font-stack/\">System Font Stack</a> by <a href=\"https://twitter.com/geoffreygraham\">Geoff Graham</a></li> \n <li><a href=\"https://www.smashingmagazine.com/2015/11/using-system-ui-fonts-practical-guide/\">Using UI System Fonts In Web Design: A Quick Practical Guide</a> by <a href=\"https://twitter.com/mwichary\">Marcin Wichary</a></li> \n <li><a href=\"http://furbo.org/2015/07/09/i-left-my-system-fonts-in-san-francisco/\">I Left My System Fonts in San Francisco</a> by <a href=\"https://twitter.com/chockenberry\">Craig Hockenberry</a></li> \n</ul> \n<div class=\"retweettoshare\"> \n <h3 class=\"retweettoshare_title\">Retweet to share this post</h3> \n <div class=\"retweettoshare_widget\"> \n  <blockquote class=\"twitter-tweet\" data-lang=\"en\">\n   <p lang=\"en\" dir=\"ltr\">★ Font Aliasing, or How to Rename a Font in CSS <a href=\"https://t.co/YFADzHxBSP\">https://t.co/YFADzHxBSP</a><br><br>…as a bonus: the best alias to use San Francisco as a system font.</br></br></p>— Zach Leatherman (@zachleat) \n   <a href=\"https://twitter.com/zachleat/status/880392657847160832\">June 29, 2017</a>\n  </blockquote> \n </div> \n</div>","descriptionType":"html","feedId":12519,"bgimg":"https://www.zachleat.com/web/img/posts/aliasing/font-info.png","linkMd5":"982820c1ff54f243db7aa2130c19cd4d","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn58@2020_6/2020/08/25/02-02-08-702_3ba68a14da153fee.webp","destWidth":1024,"destHeight":500,"sourceBytes":162458,"destBytes":56126,"author":"","articleImgCdnMap":{"https://www.zachleat.com/web/img/posts/aliasing/font-info.png":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn58@2020_6/2020/08/25/02-02-08-702_3ba68a14da153fee.webp"},"publishedOrCreatedDate":1598320921769},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Quick Demo: Animating on an Oval Path","link":"http://www.zachleat.com/web/demo-oval-animation/","description":"<p>I was experimenting with animating a planet for the <a href=\"https://2017.nejsconf.com/\">new NEJSCONF web site</a> <em>(early bird tickets now available)</em> and stumbled upon this amazingly detailed <a href=\"https://codepen.io/juliangarnier/pen/idhuG\">Codepen of our Solar System</a>. Fortunately, it did exactly what I wanted—so I set out to parse the CSS secrets (nay, Tricks) within. While the code didn’t make it in to the final site, I thought I’d publish a pared down version of the demo in case someone else might find the simplified CSS useful.</p> \n<h3 id=\"demo\"><a href=\"https://www.zachleat.com/demos/animate-oval-path/animate-oval-path.html\">Demo</a> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/demo-oval-animation/#demo\">#</a></h3> \n<h3 id=\"download-as-.zip\"><a href=\"https://www.zachleat.com/demos/animate-oval-path.zip\">Download as .zip</a> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/demo-oval-animation/#download-as-.zip\">#</a></h3> \n<p>This is the general idea, without any extra demo style junk:</p> \n<video controls=\"\" autoplay=\"\" loop=\"\" src=\"https://www.zachleat.com/demos/animate-oval-path-videos/loop-nodemostyles.mp4\">\n  Sorry, your browser doesn't support embedded videos. Try \n <a href=\"https://www.zachleat.com/demos/animate-oval-path-videos/loop-nodemostyles.mp4\">downloading it</a> instead. \n</video> \n<p>And this video is a really good, simple explanation of <em>how</em> it works. Look at that plane rotate.</p> \n<video controls=\"\" preload=\"metadata\" loop=\"\" src=\"https://www.zachleat.com/demos/animate-oval-path-videos/animation.mp4\">\n  Sorry, your browser doesn't support embedded videos. Try \n <a href=\"https://www.zachleat.com/demos/animate-oval-path-videos/animation.mp4\">downloading it</a> instead. \n</video> \n<p>Here’s a more polished view, with demo styles and images. These extra styles are separated out on the demo page, to make it easier to understand what’s going on.</p> \n<video controls=\"\" preload=\"metadata\" loop=\"\" src=\"https://www.zachleat.com/demos/animate-oval-path-videos/loop.mp4\">\n  Sorry, your browser doesn't support embedded videos. Try \n <a href=\"https://www.zachleat.com/demos/animate-oval-path-videos/loop.mp4\">downloading it</a> instead. \n</video> \n<h3 id=\"requirements\">Requirements <a class=\"direct-link\" href=\"http://www.zachleat.com/web/demo-oval-animation/#requirements\">#</a></h3> \n<p>This demo uses <a href=\"http://caniuse.com/#feat=css-variables\">CSS variables</a> because it makes it easier to read the code and see which pieces are related. I’d recommend removing those if you’re gonna put this into production.</p> \n<p><em>Update: sorry for the framerate of those videos. I’m using <a href=\"https://getkap.co/\">Kap</a> and I’ve bumped up the default FPS for next time.</em></p> \n<div class=\"retweettoshare\"> \n <h3 class=\"retweettoshare_title\">Retweet to share this post</h3> \n <div class=\"retweettoshare_widget\"> \n  <blockquote class=\"twitter-tweet\" data-lang=\"en\">\n   <p lang=\"en\" dir=\"ltr\">👀 Quick Demo: Animating on an Oval Path <a href=\"https://t.co/fd74SOncqN\">https://t.co/fd74SOncqN</a><a href=\"https://t.co/KKtbjSszg2\">https://t.co/KKtbjSszg2</a></p>— Zach Leatherman (@zachleat) \n   <a href=\"https://twitter.com/zachleat/status/865212928571707392\">May 18, 2017</a>\n  </blockquote> \n </div> \n</div>","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"0e54b2fb1a8e9f1d6a17dc51a3e9981f","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921768},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Beyond Code #4 at NEJS CONF 2015","link":"http://www.zachleat.com/web/beyond-code-interview/","description":"\n\t\t\t<p><a href=\"https://www.youtube.com/watch?v=WokZgLqX_e8\">Watch the Interview on YouTube</a> (2:52) (or embedded below)</p>\n<div class=\"fullwidth\"><div class=\"fluid-width-video-wrapper\"><iframe class=\"youtube-player\" src=\"https://www.youtube.com/embed/WokZgLqX_e8\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\"></iframe></div></div>\n<ul>\n<li>Check out the <a href=\"https://www.youtube.com/watch?v=opJvhfyz-Fo&amp;list=PLCzseuA9sYreUnA0HXg220O7eIr2NB1IY\">the Beyond Code Season 4 playlist</a></li>\n</ul>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"8efa303b02a4df0bc5f45934ae31be20","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921766},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Cloudflare’s Creative Corner with the Netlify team","link":"http://www.zachleat.com/web/cloudflaretv/","description":"\n\t\t\t<p><em>I log all of my speaking to my website. This post has no video to watch as no video is available—sorry!</em></p>\n<p>I had a lovely time chatting with <a href=\"https://twitter.com/jessperate\"><picture><source type=\"image/webp\" srcset=\"https://www.zachleat.com/img/5a94d511-72.webp 72w\"><img alt=\"jessperate’s Avatar\" src=\"https://www.zachleat.com/img/5a94d511-72.jpeg\" width=\"72\" height=\"72\" class=\"z-avatar\" loading=\"lazy\"></picture>Jess Rosenberg</a> about Netlify’s <a href=\"https://million-devs.netlify.com/\">1 Million Developers</a> microsite, which I’ve <a href=\"https://www.zachleat.com/web/1mdevs/\">written a little bit about already</a>.</p>\n<p>It doesn’t look like Cloudflare TV posted the video though, but if they do will show up here:</p>\n<p><a href=\"https://cloudflare.tv/schedule/2oE3CMuhkNwVrYL1Vb7xFM\">https://cloudflare.tv/schedule/2oE3CMuhkNwVrYL1Vb7xFM</a></p>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">Tune into cloudflare.tv on Monday 8/17 at 2pm PT where Dylan &amp; I will be joined by <a href=\"https://twitter.com/zachleat?ref_src=twsrc%5Etfw\">@zachleat</a> and <a href=\"https://twitter.com/laurensell?ref_src=twsrc%5Etfw\">@laurensell</a> from <a href=\"https://twitter.com/Netlify?ref_src=twsrc%5Etfw\">@netlify</a>. We&#39;ll be discussing the creation of the awesome 1 millionth developer landing page they created earlier this month. <a href=\"https://twitter.com/CloudflareTV?ref_src=twsrc%5Etfw\">@cloudflaretv</a> <a href=\"https://twitter.com/Cloudflare?ref_src=twsrc%5Etfw\">@Cloudflare</a> <a href=\"https://t.co/xxyZfwuJv2\">pic.twitter.com/xxyZfwuJv2</a></p>&mdash; <picture><source type=\"image/webp\" srcset=\"https://www.zachleat.com/img/5a94d511-72.webp 72w\"><img alt=\"jessperate’s Avatar\" src=\"https://www.zachleat.com/img/5a94d511-72.jpeg\" width=\"72\" height=\"72\" class=\"z-avatar\" loading=\"lazy\"></picture>Jess Rosenberg (@jessperate) <a href=\"https://twitter.com/jessperate/status/1294363247689314305?ref_src=twsrc%5Etfw\">August 14, 2020</a></blockquote>\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"1d328fb0a4ebfe6ace4edb83ad67534e","bgimgJsdelivr":"","metaImg":"","author":"","articleImgCdnMap":{"https://www.zachleat.com/img/5a94d511-72.jpeg":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn16@2020_4/2020/08/25/02-02-16-557_d21e0b778dc5843d.webp"},"publishedOrCreatedDate":1598320921773},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"WOFF2 See the Wizard, a Wonderful JavaScript Feature Test","link":"http://www.zachleat.com/web/woff2-see-the-wizard/","description":"\n\t\t\t<p><a href=\"http://www.filamentgroup.com/lab/woff2.html\"><strong>Read <em>WOFF2 See the Wizard, a Wonderful JavaScript Feature Test</em> on the Filament Group Lab.</strong></a></p>\n<blockquote>\n<p>We're always interested in ways to lessen the weight of the assets we serve on sites, which often means better performance for all. Thankfully, newer browsers are starting to support the new WOFF2 compression format, the successor to the widely implemented WOFF font format. On average, WOFF2 results in 30% smaller files compared to WOFF.</p>\n</blockquote>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"ebbac0fe90e4bdb0c7feaa21a02fc8d3","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921764},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"20/20 Hindsight, a Look Back at ALARMd","link":"http://www.zachleat.com/web/2020-hindsight-a-look-back-at-alarmd/","description":"\n\t\t\t<p>Now that the traffic has died down a little bit on ALARMd, I’d like to write a little bit about my experiences with something I don’t think anyone predicted would garner so much interest.</p>\n<p>The day I sent the link to the LifeHacker editor, I purchased the <a href=\"http://alarmd.com/\">alarmd.com</a> domain. My thoughts on the domain were that I should have it just in case I decided to host the clock on the domain for easy access, and I certainly didn’t want anyone else to have it. That turned out to be a good idea since an unnamed internet charlatan purchased a similar domain mere hours after I had purchased mine and pointed it to his website. This same person was going onto various blogs and websites where ALARMd had been posted saying that it was a ripoff of his site, which of course was not true. I’m sure he got some traffic from it, and certainly am curious about the liberties he takes with the truth just to make a buck. Obviously I am not going to post a link to his website, since I do not want him to receive any traffic to his Google Ads machine. I hope that you, as a reader of my website, will trust that anything linked to this guy’s name is not worth any of your time.</p>\n<p>The link was posted to LifeHacker, and my meager website went from an average of 50 hits a day to receiving 87000 hits in two weeks. In the end, I got more visitors from stumbleupon than LifeHacker, which is really a testament to that website’s popularity.</p>\n<p>It was on delicious popular bookmarks for a while. It actually also ended up being on television. I know, I know, it seems ridiculous to even put websites on television, but it was. A lady named Erin O’Hearn does a segment called “Right Now on the Net” for Channel 6 Action News in Philadelphia. She had a blurb about it and you can <a href=\"http://rightnow.6abc.com/2007/06/great-discoveri.html\">even watch it here</a> [Skip to 1:07]. I guess it was also on an internet radio show called “Techtalk Radio” and was featured as their site of the week. You can <a href=\"http://www.techtalkradio.com/podcast/07152007.mp3\">listen to that podcast here</a> [Skip to 47:09], even though they pronounce my name “Zach-A-Lot” and are obsessed with the “Naked” checkbox. But to be fair, who isn’t obsessed with Naked checkboxes?</p>\n<p>And just recently, I put up the <a href=\"http://alarmd.com/\">alarmd.com</a> domain as a redirect to the site for all the hard-core users still going to it and using it. It’s still getting a couple of hundred hits a day.</p>\n<p>So, hindsight. The alarm clock is a device that everyone uses and easily relates to, but also a device that people have low expectations for. Most alarms only have one or two times they go off for, and with only a few options for alerting: buzzer or radio. Most go off every day, even on the weekends when you want to sleep in. But people put up with their crappy alarm clocks because there is literally no good alarm clock hardware out there. And some of the features I’ve put into ALARMd can also be seen in alarm clocks that cost over $100 USD. Ridiculous. I would bet that there is a huge market for someone to come out with an alarm clock that doesn’t suck and costs $40, or maybe people just want to use their cell phones all the time. I wonder if the iPhone alarm is any good. Look for my next project, which will be just as, if not more, stupid as the Internet Alarm Clock.</p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"14a9123a88fcea950c9ff5fff7327c3b","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921760},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Should I Use JavaScript to Load My Web Fonts?","link":"http://www.zachleat.com/web/javascript-web-fonts/","description":"\n\t\t\t<p><a href=\"https://www.filamentgroup.com/lab/js-web-fonts.html\"><strong>Read <em>Should I Use JavaScript to Load My Web Fonts?</em> on the Filament Group Lab.</strong></a></p>\n<blockquote>\n<p>When they were first introduced, web fonts were primarily a CSS feature, and for many web developers they’ve always loaded them using CSS (and nothing more). But in the last decade, default web font loading behavior in many browsers made CSS-only methods a gamble with our page’s text render, and thoughtful developers switched to safer JavaScript methods. Recently, browser support for new and safer CSS-only strategies have left some developers wondering: are JavaScript methods to load web fonts necessary? Are they useful? Let’s dig in.</p>\n</blockquote>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"2b114738fc017267aaec3563338e4deb","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921771},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"The Performance and Usability of Web Fonts—Velocity New York City","link":"http://www.zachleat.com/web/velocity/2015-nyc/","description":"\n\t\t\t<ul>\n<li><a href=\"https://speakerdeck.com/zachleat/the-performance-and-usability-of-font-loading-velocity-nyc-2015\">Slides on Speakerdeck</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=8XSRgKIuUqo\">Video on YouTube</a></li>\n<li><a href=\"http://velocityconf.com/devops-web-performance-ny-2015/public/schedule/detail/46234\">Velocity Session Link</a></li>\n</ul>\n<figure>\n\t<div class=\"fullwidth\"><div class=\"fluid-width-video-wrapper\"><iframe src=\"https://www.youtube.com/embed/8XSRgKIuUqo\" frameborder=\"0\" webkitallowfullscreen=\"\" mozallowfullscreen=\"\" allowfullscreen=\"\"></iframe></div></div>\n\t<figcaption><a href=\"https://www.youtube.com/watch?v=8XSRgKIuUqo\">YouTube Video: Velocity Conference, The Performance and Usability of Font Loading</a></figcaption>\n</figure>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"41f64cca489186ca01a33bec7371e6fa","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921765},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Let’s Learn Eleventy!—Learn With Jason","link":"http://www.zachleat.com/web/learn-with-jason/","description":"<p class=\"primarylink\">Go to <a href=\"https://www.learnwithjason.dev/let-s-learn-eleventy\">Let’s Learn Eleventy! on Jason’s site, learnwithjason.dev</a>.</p> \n<h2 id=\"video\">Video <a class=\"direct-link\" href=\"http://www.zachleat.com/web/learn-with-jason/#video\">#</a></h2> \n<div class=\"fullwidth\">\n <div class=\"fluid-width-video-wrapper\">\n  <iframe class=\"youtube-player\" src=\"https://www.youtube.com/embed/j8mJrhhdHWc?start=57\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\"></iframe>\n </div>\n</div> \n<ul> \n <li><a href=\"https://www.youtube.com/watch?time_continue=57&amp;v=j8mJrhhdHWc\">View full video on YouTube</a>.</li> \n</ul>","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"c4002fa7bd0e7b2caab80861d1540ea0","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921772},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Concatenate Conference","link":"http://www.zachleat.com/web/concatenate/","description":"\n\t\t\t\t<p><em>This content lives somewhere else. It was originally posted at: <a href=\"https://concatenate.io/\">https://concatenate.io/</a></em></p>\n\t\t\t\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"cc8133e026b9440913211b298b0b856c","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921771},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Don&#8217;t Give Up on Internet Explorer Yet","link":"http://www.zachleat.com/web/dont-give-up-on-ie/","description":"\n\t\t\t<p>These days, the browser landscape is more fragmented than ever. Were times easier back when IE6 and Firefox ruled the internet? Easier perhaps in terms of the number of browsers you had to launch for testing, but <strong>not better</strong> for any user’s experience. We are in a new world, where more web browsers are causing developers to become <strong>increasingly pragmatic</strong> with their designs and code. Sure, standards have created a safe haven under the newest versions of the Big 3 (Firefox, IE, Safari), but the lay majority are still using whatever default has been installed onto their computer, and they probably can’t tell you <a href=\"http://googlesystem.blogspot.com/2009/06/browser-is-search-engine.html\">the difference between their web browser and a search engine</a>.</p>\n<p>We must be resilient to resist the transformation from development pragmatism to user abandonment, especially considering a developer’s trend of being insulated with the latest equipment. We use the newest hardware and download the most sophisticated browser software because we want the best experiences. We stack the cards in our favor. The difficulty lies with the populace that <strong>want a good experience</strong> (they can tell a fast site from a slow site), but they <strong>don’t want to buy new equipment or install a better browser.</strong> So the question has become: Where do you place your chips on the spectrum balancing modern hardware/software and the user experience?</p>\n<p><img src=\"https://www.zachleat.com/web/wp-content/uploads/2009/12/zombies.png\" alt=\"zombie\" title=\"zombie\"></p>\n<p>As web developers, it has become increasingly easy to become disenfranchised with the lay majority’s computing environment. I’ve witnessed this personally after purchasing my first Apple computer, a device curiously immune to the plague of IE 6/7 (8 as well, but I would hesitate to label it as a plague, more like a normal run of the mill flesh eating virus). It’s an interesting phenomenon, being cutoff from the Windows environment (save virtualization) during development. It’s delightfully tempting to declare damnation upon the plague ridden Internet Explorer Zombies, and develop your web presence to standards alone, allowing less focus on the harshest development environment imaginable and more on actual problem solving.</p>\n<p>When developers engage in quasi-web development, perhaps in the form of an iPhone specific web application or an Adobe AIR desktop application, it fosters similar feelings. The work shares many languages and technologies with real (wide-open) web development, but is targeted towards a single web browser. This benefits of this sort of tunnel vision device targeting must be carefully weighed against the penalties you’re paying in narrowed default-install client compatibility. At that point, it’s just <strong>friends with benefits</strong>.</p>\n<p><img src=\"https://www.zachleat.com/web/wp-content/uploads/2009/12/google-wave-ie8.png\" alt=\"Denial of Access with Internet Explorer Screenshot\" title=\"Denial of Access with Internet Explorer Screenshot\"><br>\nGoogle Wave, in fact, requires the use of Safari, Firefox, Chrome, or the Google Chrome Frame plugin (which doesn’t count as actual browser support). As of the time this article was written, as many as <strong>64% of all users</strong> (<a href=\"http://en.wikipedia.org/wiki/Usage_share_of_web_browsers\">source</a>) are met with the above screen when trying to access Google Wave. Let’s be clear: <strong>Ease of development is not an excuse to abandon users.</strong> Whatever happened to <a href=\"http://www.zachleat.com/web/2009/08/29/device-independence/\">Device Independence</a>?</p>\n<p>Not surprisingly, Google Wave’s stand against Internet Explorer <strong>has not started a trend</strong>. Instead of all out war, the community at large has decided that subtlety is what’s needed to win this fight. Let’s hold back the <a href=\"http://en.wikipedia.org/wiki/Sexual_Healing\">sexual healing</a> of rounded corners, even though perhaps users will call our design harsh or cold. Let’s give them plain buttons instead of nice three dimensional buttons with text and box shadows, even though they may be less actionable.</p>\n<p>Let’s make it easier on ourselves at the expense of the user experience of The Zombie Majority. We make this sacrifice because we assume that Zombies won’t be able to tell the difference between eating a big juicy Einstein brain and a smaller but nonetheless still tasty brush clearing George W. And you know what, <strong>I think we’re right.</strong></p>\n<p><em><strong>Updated</strong> to include a few more thoughts on Adobe AIR and the iPhone.</em></p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"https://www.zachleat.com/web/wp-content/uploads/2009/12/zombies.png","linkMd5":"03a393b7c7b40ba8521a2309ef98f277","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn77@2020_5/2020/08/25/02-02-02-627_5b79e3cd7d9321a8.webp","destWidth":200,"destHeight":234,"sourceBytes":16517,"destBytes":3946,"author":"","articleImgCdnMap":{"https://www.zachleat.com/web/wp-content/uploads/2009/12/zombies.png":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn77@2020_5/2020/08/25/02-02-02-627_5b79e3cd7d9321a8.webp","https://www.zachleat.com/web/wp-content/uploads/2009/12/google-wave-ie8.png":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn83@2020_5/2020/08/25/02-02-11-035_0cb80f5dd0053096.webp"},"publishedOrCreatedDate":1598320921762},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"In Case You Missed It: 2015","link":"http://www.zachleat.com/web/icymi/2015/","description":"<p>Rather than a bunch of individual “In Case You Missed It” tweets, I thought I’d repeat what I’ve done the last <a href=\"https://www.zachleat.com/web/icymi/2013/\">two</a> <a href=\"https://www.zachleat.com/web/icymi/2014/\">years</a> and just do one big yearly semi-comprehensive recap of the web community things that I did this year. Enjoy!</p> \n<h2 id=\"talks\">Talks <a class=\"direct-link\" href=\"http://www.zachleat.com/web/icymi/2015/#talks\">#</a></h2> \n<img src=\"https://www.zachleat.com/web/img/posts/whmeetup/stage.jpg\" alt=\"Holy shit—I’m on the stage at The Whitehouse.\" class=\"primary\"> <p>This was the year I really got into public speaking. I gave a total of six talks this year, the highlight of which was surely a <a href=\"https://www.zachleat.com/web/whitehouse/\">short talk at The White House</a> about <a href=\"http://nebraskajs.com/\">NebraskaJS</a>. This was something that I will never forget. It was amazing to be invited.</p> <p>My next favorite talk was an <a href=\"https://www.zachleat.com/web/public-speaking/\">un-talk at Barcamp Omaha about Public Speaking</a>. I spent a fair bit of time preparing a web site that would let me type and add GIFs to slides in real time. I thought it’d be fun to give a talk about public speaking without actually doing any speaking. It was a lot of fun.</p> <img src=\"https://www.zachleat.com/web/img/posts/barcelona/stage.jpg\" alt=\"About to go on stage at SmashingConf Barcelona\" class=\"primary\"> <p><a href=\"https://twitter.com/smashingmag\">Vitaly</a> was really great to invite me to give a <a href=\"https://www.zachleat.com/web/smashingconf/2015/\">talk at SmashingConf Barcelona</a> about Font Loading. Smashing Conferences continue to prove themselves as the best run conferences with enthusiastic and well informed attendees. I hope to do more of them in the future!</p> <p>Last but not least, I gave two talks at Velocity about Font Loading: in <a href=\"https://www.zachleat.com/web/velocity/2015/\">Santa Clara</a> and <a href=\"https://www.zachleat.com/web/velocity/2015-nyc/\">New York City</a>, a <a href=\"https://www.zachleat.com/web/rwd-perf-3/\">talk at NebraskaJS Lincoln on Performance and Responsive Web Design</a>, and a <a href=\"https://changelog.com/166/\">podcast episode of The Changelog</a>.</p> <h2 id=\"blog-posts\">Blog Posts <a class=\"direct-link\" href=\"http://www.zachleat.com/web/icymi/2015/#blog-posts\">#</a></h2> <p>Top five posts written in 2015, ordered by total page views.</p> \n  <ol> \n   <li><a href=\"https://www.filamentgroup.com/lab/font-loading.html\">Font Loading at Filament Group</a>: This post is now deprecated. We now use <a href=\"https://dev.opera.com/articles/better-font-face/\">Font Load Events</a>, also described on the <a href=\"https://www.filamentgroup.com/lab/font-events.html\">Filament Group blog</a>.</li> \n   <li><a href=\"https://www.zachleat.com/web/foft/\">Flash of Faux Text</a>: an approach I still use on this blog, I still consider it to a great way to reduce jarring reflow changes when your web fonts load. I have modified and upgraded this approach to be even better on slower connections, look for a post on that soon.</li> \n   <li><a href=\"https://www.zachleat.com/web/compatibility/\">Compatibility Table Compendium</a></li> \n   <li><a href=\"https://www.zachleat.com/web/infinity-burger/\">The Infinity Hamburger Menu</a></li> \n   <li><a href=\"https://www.zachleat.com/web/mitt-romney-webfont-problem/\">The Mitt Romney Web Font Problem</a></li> \n  </ol> <h2 id=\"nebraskajs\">NebraskaJS <a class=\"direct-link\" href=\"http://www.zachleat.com/web/icymi/2015/#nebraskajs\">#</a></h2> <p>It was over four years ago that I took over <a href=\"http://www.meetup.com/nebraskajs/\">NebraskaJS</a>, and in 2015 we had 17 different meetups in Lincoln and Omaha and 23 different speakers, not counting the two Omaha developer group co-op parties and NEJS CONF. We added 314 meetup members in 2015 to bring our total to 920, which is a big improvement over the 187 we added in 2014. We may hit 1000 total members in 2016!</p> <h2 id=\"nejs-conf\">NEJS CONF <a class=\"direct-link\" href=\"http://www.zachleat.com/web/icymi/2015/#nejs-conf\">#</a></h2> <p>The plan to run a conference was born, like so many conferences, out of a seed that was planted attending the amazing JSConf Conference in Amelia Island. It is bittersweet to see their <a href=\"http://lastcall.jsconf.us/about.html\">last event</a> come and go. I wish the Williams family the best and hope they return to full health soon!</p> <p>We had 200 attendees at the <a href=\"https://nejsconf.com/\">first ever NebraskaJS Conference</a>, a single day single track conference at the Omaha Henry Doorly Zoo and Aquarium. We were excited to have an open call for proposals, a live band at the after party, and speakers from all over the world including keynotes from <a href=\"https://nejsconf.com/2015/keynote-christian-heilmann/\">Christian Heilmann</a> and <a href=\"https://nejsconf.com/2015/keynote-ethan-marcotte/\">Ethan Marcotte</a>. Even though it was <a href=\"https://nejsconf.com/team/\">our team’s</a> first time running a conference, excitingly I think we can call it a success!</p> <h2 id=\"smashing-book-%235\"><a href=\"http://www.smashingmagazine.com/2015/03/real-life-responsive-web-design-smashing-book-5/\">Smashing Book #5</a> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/icymi/2015/#smashing-book-%235\">#</a></h2> <p>I was invited to be a technical reviewer for <a href=\"https://twitter.com/bram_stein\">Bram Stein’s</a> chapter about web fonts and font loading in the latest Smashing Book, #5. It turned out really well, his chapter really is a great comprehensive resource on font loading—I highly recommend it!</p> <h2 id=\"tweets\">Tweets <a class=\"direct-link\" href=\"http://www.zachleat.com/web/icymi/2015/#tweets\">#</a></h2> \n  <blockquote class=\"twitter-tweet\" data-cards=\"hidden\" lang=\"en\">\n   <p lang=\"en\" dir=\"ltr\">Elaine, an 81 year old woman doing open source etiquette right. She didn’t send an e-mail—she filed an issue: <a href=\"https://t.co/on486P2eP1\">https://t.co/on486P2eP1</a></p>— Zach Leatherman (@zachleat) \n   <a href=\"https://twitter.com/zachleat/status/559749841505755137\">January 26, 2015</a>\n  </blockquote> \n  <blockquote class=\"twitter-tweet\" lang=\"en\">\n   <p lang=\"en\" dir=\"ltr\">The font loading solution we’ve been waiting for, `font-display`, is now available on Chrome Canary! <a href=\"https://t.co/5eowg9rHZB\">https://t.co/5eowg9rHZB</a> via <a href=\"https://twitter.com/nattokirai\">@nattokirai</a></p>— Zach Leatherman (@zachleat) \n   <a href=\"https://twitter.com/zachleat/status/671699868436455424\">December 1, 2015</a>\n  </blockquote> \n  <blockquote class=\"twitter-tweet\" lang=\"en\">\n   <p lang=\"en\" dir=\"ltr\">Three designers cruise the city at night adjusting spacing between characters on signage in a new sitcom entitled THE KERN UNIT</p>— Zach Leatherman (@zachleat) \n   <a href=\"https://twitter.com/zachleat/status/573212883326246912\">March 4, 2015</a>\n  </blockquote> \n  <blockquote class=\"twitter-tweet\" lang=\"en\">\n   <p lang=\"en\" dir=\"ltr\">my body is a temple—only fresh, local, organic foods for me but my website is a garbage disposal full of ads, analytics, 3rd party widgets</p>— Zach Leatherman (@zachleat) \n   <a href=\"https://twitter.com/zachleat/status/627486171069874176\">August 1, 2015</a>\n  </blockquote> \n  <blockquote class=\"twitter-tweet\" lang=\"en\">\n   <p lang=\"en\" dir=\"ltr\">The web needs more librarians and historians and fewer glitter-chasers.</p>— Zach Leatherman (@zachleat) \n   <a href=\"https://twitter.com/zachleat/status/676517367556378624\">December 14, 2015</a>\n  </blockquote> \n  <blockquote class=\"twitter-tweet\" lang=\"en\">\n   <p lang=\"en\" dir=\"ltr\">when I'm waiting for a site to load on my phone I count out loud to myself: “one javascript, two javascript, three javascript…”</p>— Zach Leatherman (@zachleat) \n   <a href=\"https://twitter.com/zachleat/status/641980537544904704\">September 10, 2015</a>\n  </blockquote> <h2 id=\"open-source\">Open Source <a class=\"direct-link\" href=\"http://www.zachleat.com/web/icymi/2015/#open-source\">#</a></h2> \n  <ul> \n   <li><a href=\"https://github.com/zachleat/fontfaceonload/releases\">Four new versions of FontFaceOnload</a>, a simple utility to tell you when a webfont has successfully loaded.</li> \n   <li><a href=\"https://github.com/filamentgroup/tablesaw/releases\">Six new versions of Tablesaw</a>, plugins for responsive tables.</li> \n   <li>A <a href=\"https://github.com/filamentgroup/loadCSS\">few contributions to loadCSS</a>, a utility to load CSS without blocking render.</li> \n   <li><a href=\"https://github.com/filamentgroup/politespace/releases\">Four new versions of politespace</a>, mostly to accommodate the cross-browser mine field that is <code>input type=\"number\"</code> on mobile devices.</li> \n   <li>A bunch of other contributions to various Filament Group open source libraries that I won’t bother to list individually.</li> \n  </ul> <h2 id=\"personal\">Personal <a class=\"direct-link\" href=\"http://www.zachleat.com/web/icymi/2015/#personal\">#</a></h2> <p>So many personal things happened interleaved into my professional life that looking back on it seems crazy. My daughter was born in May of this year and adjusting to fatherhood has been the most challenging aspect of the year. Two weeks before she was born, I was at the White House. About four weeks after she was born, I was giving a talk in Silicon Valley. I was getting up every two hours for feedings while preparing for talks. We also moved to a new house the week before Velocity New York.</p> <p>It really drove home this year that so much of life happens in parallel. I may do my best work when I only have one iron in the fire (I know multitasking lowers my efficiency), but this would have been a real short post if I followed that constraint. I think it might be more accurate to say that I do my best work when I have a deadline, and when you have multiple tasks that need accomplished, deadlines are everywhere.</p> \n  <blockquote> \n   <p>“Life is what happens to you while you’re busy making other plans.”—<a href=\"https://en.wikiquote.org/wiki/John_Lennon#Double_Fantasy_.281980.29\">John Lennon and others</a></p> \n  </blockquote> <h2 id=\"thank-you-notes\">Thank You Notes <a class=\"direct-link\" href=\"http://www.zachleat.com/web/icymi/2015/#thank-you-notes\">#</a></h2> <p>Huge thank you to <a href=\"https://twitter.com/nicknisi\">Nick Nisi</a> and <a href=\"https://twitter.com/blainekasten\">Blaine Kasten</a>, my co-organizers for NebraskaJS; additionally the co-organizers of NEJS CONF, <a href=\"https://twitter.com/jerodsanto\">Jerod Santo</a>, <a href=\"https://twitter.com/jmhobbs\">John Hobbs</a>, <a href=\"https://twitter.com/mattdsteele\">Matt Steele</a>, and <a href=\"https://twitter.com/sandikbarr\">Sandi Barr</a>.<br> Thank you to everyone that put in a proposal to speak at NEJS CONF. Thank you to our keynote speakers that agreed to speak at a first-time conference and especially <a href=\"https://twitter.com/beep\">Ethan Marcotte</a> who agreed to come on early (I believe before we had launched our website). I also feel grateful for everyone involved in organizing the twice-a-year Omaha developer meetup co-op parties (<a href=\"https://twitter.com/kberryman\">Kevin Berry</a> especially).</br></p> <p>I’m also grateful to <a href=\"https://twitter.com/souders\">Steve Souders</a>, <a href=\"https://twitter.com/smashingmag\">Vitaly Friedman</a>, and <a href=\"https://twitter.com/Meetup\">Meetup</a> for giving me some really great speaking opportunities this year.</p> <p>And a huge thank you to Filament Group. I continue to learn from my amazing colleagues and was grateful to get paternity leave this year—it really meant a lot to our family.</p> <p>Of course, the biggest thank you goes to my wife. She has shown extreme patience with our busy schedule this year and I really can’t thank her enough. Only 44 years left until our 50th wedding anniversary!</p> \n  <div class=\"retweettoshare\"> \n   <h3 class=\"retweettoshare_title\">Retweet to share this post</h3> \n   <div class=\"retweettoshare_widget\"> \n    <blockquote class=\"twitter-tweet\" data-lang=\"en\">\n     <p lang=\"en\" dir=\"ltr\">★ In Case You Missed It: 2015 <a href=\"https://t.co/FliqnEHNTX\">https://t.co/FliqnEHNTX</a></p>— Zach Leatherman (@zachleat) \n     <a href=\"https://twitter.com/zachleat/status/684013794285096961\">January 4, 2016</a>\n    </blockquote> \n   </div> \n  </div> </img></img>","descriptionType":"html","feedId":12519,"bgimg":"https://www.zachleat.com/web/img/posts/whmeetup/stage.jpg","linkMd5":"769761bf5888c569abdebb311c3d309b","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn61@2020_4/2020/08/25/02-02-02-756_5aba39f0b956a34c.webp","destWidth":1022,"destHeight":426,"sourceBytes":124918,"destBytes":30918,"author":"","articleImgCdnMap":{"https://www.zachleat.com/web/img/posts/whmeetup/stage.jpg":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn61@2020_4/2020/08/25/02-02-02-756_5aba39f0b956a34c.webp","https://www.zachleat.com/web/img/posts/barcelona/stage.jpg":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn5@2020_6/2020/08/25/02-02-03-661_d0c2b39c412e417b.webp"},"publishedOrCreatedDate":1598320921766},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Surnamespacing","link":"http://www.zachleat.com/web/surnamespacing/","description":"\n\t\t\t<p>Everyone has a library. Everyone has their own utility classes and functions they’re using in their own personal and contracted projects. And now that everyone has a blog too, they’re all releasing their libraries as open source, using the commando underoo philosophy of wild, free, and unrestricted naming schemes for their code. Not anymore. Let’s surnamespace.</p>\n<p>What does surnamespacing give me?</p>\n<ul>\n<li><strong>Accountability</strong>: Your code is directly linked to your family honor. You’d be surprised how hard people work at test cases and increased code coverage when the respect of their lineage is at stake.</li>\n<li><strong>Connect</strong> with your Extended Family: Connect with programmers sharing your namespace, your family is now your development team.</li>\n<li><strong>Minimize Collisons</strong>: The ball and chain associated with an imposed naming scheme means that we won’t have everyone using foo and bar to hold their code, unless you’re the lucky son of a bitch that has inherited that top notch surnamespace real estate.</li>\n<li><strong>Faster</strong> Initial Development Cycle: Sometimes naming your library is the hardest part. Skip this step and just surnamespace it.<br>\nJesus Christ, please show me some examples:</li>\n</ul>\n<p><strong>JavaScript Surnamespacing</strong></p>\n<pre><code>var Christ = {\n    Jesus: {\n        walkOn: function(obj) {},\n        turn: function(from, to) {},\n        respawn: function() {}\n    }\n};\n// Sample Usage\nChrist.Jesus.walkOn('water');\nChrist.Jesus.turn('water', 'wine');\nChrist.Jesus.respawn();\n</code></pre>\n<p><strong>Java Surnamespacing</strong></p>\n<pre><code>package Christ;\npublic class Jesus {\n    public void walkOn(String s) {}\n    public void turn(String from, String to) {}\n    public void respawn() {}\n}\n</code></pre>\n<p><strong>PHP 6 Surnamespacing (<a href=\"http://php.net/~derick/meeting-notes.html\">projected usage</a>)</strong></p>\n<pre><code>namespace Christ {\n    class Jesus {\n        public function walkOn($obj) {}\n        public function turn($from, $to) {}\n        public function respawn() {}\n    }\n}\n</code></pre>\n<p><strong>Update</strong>: Apparently I can’t write Java code. Don’t tell work.</p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"a9d8de4fbe0c93868a40194915370d3e","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921761},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"YUI Button Lite","link":"http://www.zachleat.com/web/yui-button-lite/","description":"\n\t\t\t<p>Do you want the cool clean look of the new YUI Button component, but without all the seedy overhead of split buttons or button groups or components that shouldn’t even be pigeonholed into a button component to begin with? Keep in mind that this approach only works for the method called “<a href=\"http://developer.yahoo.com/yui/button/#buildingfromtemplate\">Using pre-defined Button Control HTML.</a>”</p>\n<p>Well, here’s the trick to do it.</p>\n<p>Create the button as the YUI Button Examples and Documentation say to do so. Include the Button CSS file button/assets/button.css. But just <strong>don’t</strong> include the YUI JavaScript file button-beta[-min].js.</p>\n<p>Instead, use the following JavaScript to replace the functions for button coloring for hover, focus, and active.</p>\n<pre><code>YAHOO.util.Event.addListener( window, 'load', function( e )\n{\n    var yuiButtons = YAHOO.util.Dom.getElementsByClassName( 'yuibutton', 'span' );\n    YAHOO.util.Event.addListener( yuiButtons, 'mouseover', function( e )\n    {\n        YAHOO.util.Dom.addClass( this, 'hover' );\n    } );\n    YAHOO.util.Event.addListener( yuiButtons, 'mouseout', function( e )\n    {\n        YAHOO.util.Dom.removeClass( this, 'hover' );\n    } );\n    YAHOO.util.Event.addListener( yuiButtons, 'mousedown', function( e )\n    {\n        YAHOO.util.Dom.addClass( this, 'active' );\n    } );\n    YAHOO.util.Event.addListener( yuiButtons, 'mouseup', function( e )\n    {\n        YAHOO.util.Dom.removeClass( this, 'active' );\n    } );\n    YAHOO.util.Event.addListener( yuiButtons, 'focus', function( e )\n    {\n        YAHOO.util.Dom.addClass( this, 'focus' );\n    } );\n    YAHOO.util.Event.addListener( yuiButtons, 'blur', function( e )\n    {\n        YAHOO.util.Dom.removeClass( this, 'focus' );\n    } );\n} );\n</code></pre>\n<p>If you’re just using the standard buttons anyway, you’re going to see a speed improvement in performance on hover color changes.</p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"dab77ac38b76db1019f4afc8df439051","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921760},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Trash that &#8220;Back to Top&#8221; Link","link":"http://www.zachleat.com/web/trash-that-back-to-top-link/","description":"\n\t\t\t<blockquote>\n<p>It would seem that perfection is attained not when no more can be added, but when no more can be removed.</p>\n<p>—Antoine de Saint Exupéry</p>\n</blockquote>\n<p>While most would argue that the principles espoused in the above quote might also be applied to the quote itself, it would serve us better to consider how we can <strong>attempt perfection in our User Interface designs</strong> instead.</p>\n<p>The most complete litany of reasons why you should spend your page weight on more useful bytes has been <a href=\"http://www.cs.tut.fi/~jkorpela/www/totop.html\">compiled by Jukka Korpela</a>, although he seems to both confirm that they are harmful and still use them on his site.</p>\n<p>The rules of engagement I find useful when dealing with the ill-fated “Back to Top” or its ugly stepsister “Top of Page” link are as follows:</p>\n<ol>\n<li><strong>Delete the link.</strong></li>\n</ol>\n<p>Really, you don’t need the link. It’s a <strong>sacred cow remnant</strong> of a time when people believed that all content needed to be positioned <a href=\"http://iampaddy.com/lifebelow600/\">above the page fold</a>.</p>\n<p>Guess what? <strong>People know how to scroll!</strong> They know how to scroll down, they know how to scroll up. Considering this prerequisite has been met, it becomes very apparent that the “Back to Top” link shares an <strong>unnecessary overlap in functionality with the scrollbar</strong> and is thus, unnecessary itself.</p>\n<p>If you have an incredibly long page with a full set of “Table of Contents” links, it would be better to position your <a href=\"http://jqueryfordesigners.com/fixed-floating-elements/\">table of contents fixed to the viewport</a>, so as to make it always available to the user. If the Table of Contents is always available, the user will never have to click a link as a shortcut to find it.</p>\n<p>While not a usability epidemic, the “Back to Top” link is still widely used. <a href=\"http://www.instantshift.com/2009/07/14/90-creative-back-to-top-links-and-best-practices/\">Instant Shift</a> and <a href=\"http://www.smashingmagazine.com/2008/11/27/short-story-about-top-links/\">Smashing Magazine</a> both have articles with hundreds of examples of sites with these links.</p>\n<p>Don’t agree? If you’re stubborn as hell and hate simplicity, you’re going to keep the link on your page no matter what reasons are presented. In that case, at the very least follow these two guidelines:</p>\n<ol>\n<li>\n<p>Use <strong>progressive enhancement</strong>:</p>\n<pre><code>&lt;a href=&quot;#&quot; id=&quot;back-to-top&quot;&gt;Back to Top&lt;/a&gt;\n\n// Requires jQuery\n$('#back-to-top').click(function() {\n    window.scrollTo(0,0);\n \n    // don't change the hash if not needed\n    return false;\n});\n</code></pre>\n</li>\n<li>\n<p><strong>Hide the link</strong> if the page doesn’t have a scrollbar. If no scrollbar exists, the user will <strong>always be “at the top.”</strong>     // Continuing with Previous Example</p>\n<pre><code>// Continuing with Previous Example\n$(function() {\n    $('#back-to-top').hide();\n});\n \n// If the page scrolls, we know there is a scrollbar.\n$(window).scroll(function() {\n    $('#back-to-top').show();\n});\n \n// For completeness, you may also want to\n//   add logic to the &quot;resize&quot; event.\n</code></pre>\n</li>\n</ol>\n<p>Really though, <strong>just delete the link.</strong></p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"4ebd5bcb6afcd769dba223e0afd54e04","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921762},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Jonathan Sharp at The Ajax Experience","link":"http://www.zachleat.com/web/jonathan-sharp-at-the-ajax-experience/","description":"\n\t\t\t<p>Former co-worker and all around good guy Jonathan Sharp gave a presentation at The Ajax Experience about a project that he developed, and subsequently passed onto me around 3Q2008. A custom built UI component library based on jQuery, used by 450+ developers on 80+ internal and external web applications. You wouldn’t think it, but railroads have pretty large IT departments. This presentation was <a href=\"http://ajaxian.com/archives/jquery-ajax-experience-framework-videos\">posted on Ajaxian</a> this week. Enjoy!</p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"6151b74e71ceda50781f33c1460fa810","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921762},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Using DOM Query Libraries in YUI","link":"http://www.zachleat.com/web/using-dom-query-libraries-in-yui/","description":"<p>Recently, I posted the top 8 things I thought the YUI Library needed to be a top tier JavaScript library again. One of those things included a CSS Selector DOM Querying class. Use one of these babies for awhile, and you’ll never be able to code without it again. They’re amazingly useful and will shorten your code quite beautifully.</p> \n<p>So, let’s plug one of them into YUI! Let’s get some of that power under the hood. And let’s make it work identically to how we write our code for YUI currently, instead of changing the coding style (a la Dustin Diaz’s great extension to YUI called <a href=\"http://dedchain.dustindiaz.com/\">DED|Chain</a>).</p> \n<p>How are we going to do this? Let’s dive into the shallow end of the pool.</p> \n<p>The include order of our javascript files is going to be important. So, first we’ll do the YUI library core file (either yahoo-dom-event.js or utilities.js depending on your need for animation). Next, we need to include a CSS Selector DOM Querying class. For this proof of concept, I’ve provided examples for my two favorites, the jQuery engine and Jack Slocum’s DomQuery. These files are released under the MIT license, so make sure that complies with your project. It’s pretty liberal, so you shouldn’t have any problems. If you find these querying libraries useful, please donate to these projects!</p> \n<p>For code simplicity, I’ve added a one liner to Jack’s DomQuery to make it work as a standalone file.</p> \n<pre><code>if( typeof Ext == 'undefined' ) var Ext = function(){};\n</code></pre> \n<p>If you want to read more about DomQuery, you can go to <a href=\"http://www.jackslocum.com/blog/2007/01/11/domquery-css-selector-basic-xpath-implementation-with-benchmarks/\">Jack’s site all about syntax and benchmarks</a>.</p> \n<p>Download: <a href=\"https://www.zachleat.com/Projects/Y2/DomQuery.js\">Jack Slocum’s DomQuery Standalone File (24 KB)</a> 1.0 Alpha 3 – Rev 4<br> Download: <a href=\"https://www.zachleat.com/Projects/Y2/DomQuery-packer.js\">Jack Slocum’s DomQuery Standalone File Packed (7 KB)</a> 1.0 Alpha 3 – Rev 4</br></p> \n<p>If you want to use jQuery’s selector engine, I’ve stripped out the functions unnecessary to the selector engine in the 1.1.3.1 release and packaged it up as jDomQuery. There are differences between these two package’s syntax, so make sure you keep that in mind, especially when looking at the pseudos, like :gt() and :lt() for example.</p> \n<p>Download: <a href=\"https://www.zachleat.com/Projects/Y2/jdomquery-1.1.3.1.js\">jDomQuery Standalone File (23 KB)</a> 1.1.3.1<br> Download: <a href=\"https://www.zachleat.com/Projects/Y2/jdomquery-1.1.3.1-packer.js\">jDomQuery Standalone File Packed (10 KB)</a> 1.1.3.1</br></p> \n<p>If you want to read about jQuery syntax, <a href=\"http://docs.jquery.com/Selectors\">go over to their documentation</a>. My current preference is the jQuery syntax, given that it <a href=\"https://www.zachleat.com/web/2007/07/10/javascript-frameworks-and-jsf/\">works with poorly implemented JSF ID attributes</a>. But that’s a different argument.</p> \n<p>If you want to use the full jQuery library, that should work too, but if you want to do that, you might just want to switch to using jQuery at that point (dare I say it).</p> \n<p>Next, we’ll extend the YAHOO.util.Dom class into a new Y2 namespace. This will map all of the functions from YAHOO.util.Dom into a new CSS Selector extension.</p> \n<h2 id=\"download%3A-y2.util.dom-(2-kb)\">Download: <a href=\"https://www.zachleat.com/Projects/Y2/Dom.js\">Y2.util.Dom (2 KB)</a> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/using-dom-query-libraries-in-yui/#download%3A-y2.util.dom-(2-kb)\">#</a></h2> \n<p>(pack at your own leisure, you can do it online at <a href=\"http://dean.edwards.name/packer/\">Dean Edward’s Packer</a>)</p> \n<h1 id=\"putting-it-all-together\">Putting It All Together <a class=\"direct-link\" href=\"http://www.zachleat.com/web/using-dom-query-libraries-in-yui/#putting-it-all-together\">#</a></h1> \n<pre><code>&lt;html&gt;\n  &lt;body&gt;\n    &lt;div&gt;\n      &lt;div class=\"first\"&gt;\n        &lt;span&gt;&lt;/span&gt;\n      &lt;/div&gt;\n      &lt;div class=\"second\"&gt;\n        &lt;b&gt;&lt;/b&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n    &lt;script type=\"text/javascript\" src=\"/Lib/yui/build/yahoo-dom-event/yahoo-dom-event.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\" src=\"jdomquery-1.1.3.1-packer.js\"&gt;&lt;/script&gt;\n    &lt;!-- &lt;script type=\"text/javascript\" src=\"DomQuery-packer.js\"&gt; --&gt;\n    &lt;script type=\"text/javascript\" src=\"Dom.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\"&gt;\n    Y2.util.Dom.addClass( 'div div:last', 'myClass' )\n    Y2.util.Dom.hasClass( 'div div:last', 'myClass' ); // returns true\n    var b = Y2.util.Dom.get( 'div div:last b' );\n    Y2.util.Dom.addClass( b, 'myOtherClass' );\n    &lt;/script&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> \n<p>One important thing to note is that when using the CSS Selector syntax, when only one node is selected, functions will return a scalar instead of an array. So if you’re expecting to select multiple nodes in your selector query and only one node results, make sure your code handling the result is prepared for such an instance.</p> \n<p>Have fun!</p>","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"81cb235ff7d372de3b0624e1a2eb5401","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921760},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Passing the Lead NebraskaJS Organizer Baton","link":"http://www.zachleat.com/web/passing-the-nebraskajs-baton/","description":"<p>As <a href=\"https://nebraskajs.com/\">NebraskaJS</a> continues into its ninth year (and sixth year under my tenure—starting in 2012), it is with a twinge of sadness that I must tell you that the time has come for me to step down as lead organizer of the group. I will still remain an organizer and participant! Practically speaking, perhaps the most visible change to the group here is that my ugly mug isn’t the one that shows up on <a href=\"https://www.meetup.com/nebraskajs/\">our meetup page</a>.</p> \n<p>Truth-be-told, the de-facto lead organizer has been Nick Nisi for some time and so this change was necessary to properly attribute Nick’s incredible contributions to the meetup. Everyone that knows Nick already knows that he’s a very talented community organizer and developer. A <a href=\"https://www.youtube.com/watch?v=5r6yzFEXajQ\">world renowned Vim expert</a>, Nick worked for <a href=\"https://www.sitepen.com/\">Sitepen</a> (Dojo did it first) for many years and was recently snapped up by local greats, <a href=\"https://getflywheel.com/\">Flywheel</a>. He is a professional conference emcee, shepherding three <a href=\"https://nejsconf.com/\">NEJS CONF events</a> and now a <a href=\"https://tsconf.io/\">TypeScriptConf in Seattle</a>!</p> \n<p class=\"primarylink\"><a href=\"https://twitter.com/nicknisi\">Follow @nicknisi on Twitter</a></p> \n<h2 id=\"%E2%9D%A4%EF%B8%8F-nebraskajs\">❤️ NebraskaJS <a class=\"direct-link\" href=\"http://www.zachleat.com/web/passing-the-nebraskajs-baton/#%E2%9D%A4%EF%B8%8F-nebraskajs\">#</a></h2> \n<p>NebraskaJS has a special place in my heart, truly. We’ve featured over 50 different speakers at about 90 events. We’ve held <a href=\"https://nejsconf.com/\">three conferences</a> (I’ll still be co-organizing there too, of course).</p> \n<p>Some of the absolute highlights for me have been:</p> \n<ul> \n <li>The unnamed speaker that called me out for the (now-fixed) sub-par font loading strategy on <a href=\"https://nebraskajs.com/\">nebraskajs.com</a> 😅😅😅</li> \n <li>Speaking at <a href=\"https://www.zachleat.com/web/whitehouse/\">The White House</a> about NebraskaJS</li> \n <li>Cooperating on great community events like a local screening of <a href=\"http://www.futureisnext.com/\">What Comes Next is the Future</a> and all of the <a href=\"http://techomaha.com/\">Tech Omaha</a> Developer parties</li> \n <li>Tank Battle tournaments: <a href=\"https://nebraskajs.com/2014/fightcodegame-two/\">2014</a> and <a href=\"https://nebraskajs.com/2013/fightcodegame/\">2013</a></li> \n <li>Our prestigious <a href=\"https://nebraskajs.com/presenters/\">Presenters Wall</a> where the number of borders around your photo represents the number of times you’ve presented at the meetup. If you hit a certain threshold where the CSS can’t handle any more borders you get the coveted yellow ring!</li> \n <li><a href=\"https://nebraskajs.com/2014/open-source-hack-night/\">Open Source Hack Night</a> when I helped get someone started on a PR to node.js core!</li> \n <li><a href=\"https://nebraskajs.com/2014/nebraskajs-lincoln/\">Branching out to Lincoln</a></li> \n <li>The after-meetup conversations that led to so many side projects. Both <a href=\"https://www.11ty.io/\">Eleventy</a> and <a href=\"http://fontspeed.io/\">fontspeed</a> were started after a conversation sparked at NebraskaJS.</li> \n</ul> \n<p>I am also super thankful to our rock-solid venue sponsor <a href=\"https://twitter.com/BCBSNebraska\">Blue Cross Blue Shield</a> and our unwavering food sponsor <a href=\"https://twitter.com/agape_red\">Agape Red</a>. The meetup would not be possible without them.</p> \n<table> \n <caption>\n  NebraskaJS Membership\n </caption> \n <thead> \n  <tr> \n   <th>Year</th> \n   <th>Membership</th> \n   <th>Change</th> \n  </tr> \n </thead> \n <tbody> \n  <tr> \n   <th>2009</th> \n   <td>Founded</td> \n   <td></td> \n  </tr> \n  <tr> \n   <th>2012</th> \n   <td>~220</td> \n   <td></td> \n  </tr> \n  <tr> \n   <th>2013</th> \n   <td>419</td> \n   <td><em class=\"better\">(+199)</em></td> \n  </tr> \n  <tr> \n   <th>2014</th> \n   <td>606</td> \n   <td><em class=\"better\">(+187)</em></td> \n  </tr> \n  <tr> \n   <th>2015</th> \n   <td>920</td> \n   <td><em class=\"better\">(+314)</em></td> \n  </tr> \n  <tr> \n   <th>2016</th> \n   <td>1127</td> \n   <td><em class=\"better\">(+207)</em></td> \n  </tr> \n  <tr> \n   <th>2017</th> \n   <td>1305</td> \n   <td><em class=\"better\">(+178)</em></td> \n  </tr> \n  <tr> \n   <th>2018 (partial)</th> \n   <td>1336</td> \n   <td><em class=\"better\">(+31)</em></td> \n  </tr> \n </tbody> \n</table> \n<p>Keep on JavaScripting, y’all! <a href=\"https://www.meetup.com/nebraskajs/events/249230237/\">Our next event is April 3rd!</a></p>","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"2e804c2494b006eb72fc2c5426123ad8","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921770},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"In Case You Missed It: 2016","link":"http://www.zachleat.com/web/icymi/2016/","description":"<p>Rather than a bunch of individual “In Case You Missed It” tweets, I thought I’d repeat what I’ve done the last three years (<a href=\"https://www.zachleat.com/web/icymi/2013/\">2013</a>, <a href=\"https://www.zachleat.com/web/icymi/2014/\">2014</a>, <a href=\"https://www.zachleat.com/web/icymi/2015/\">2015</a>) and just do one big yearly semi-comprehensive recap of the web community things that I did this year.</p> \n<h2 id=\"blog-posts\">Blog Posts <a class=\"direct-link\" href=\"http://www.zachleat.com/web/icymi/2016/#blog-posts\">#</a></h2> \n<p>Top five posts written in 2016 ordered by 2016 page views and a bonus post because I have no idea how much traffic perfplanet gets.</p> \n<ul> \n <li><span class=\"external\"><em>52,000 views</em></span> <a href=\"https://www.zachleat.com/web/comprehensive-webfonts/\">A Comprehensive Guide to Font Loading Strategies</a></li> \n <li><span class=\"external\"><em>25,341 views</em></span> <a href=\"https://www.zachleat.com/web/president-web-font/\">Web Fonts for President 2016</a>: evaluating the font loading strategies of the US Presidential candidates.</li> \n <li><span class=\"external\"><em>14,873 views</em></span> <a href=\"https://www.zachleat.com/web/critical-webfonts/\">Critical Web Fonts</a>: experimenting with a two stage approach to font loading.</li> \n <li><span class=\"external\"><em>11,953 views</em></span> <a href=\"https://www.filamentgroup.com/lab/type-number.html\">I Wanted to Type a Number</a>: A post about the pitfalls that come with using <code>&lt;input type=\"number\"&gt;</code> and mismatches that pit the specification against browser implementations.</li> \n <li><span class=\"external\"><em>8,351 views</em></span> <a href=\"https://www.zachleat.com/web/preload/\">The Web Fonts: Preloaded</a>: experimenting with <code>rel=\"preload\"</code> for web fonts.</li> \n <li><span class=\"external\"><em>Unknown</em></span> <a href=\"http://calendar.perfplanet.com/2016/no-font-face-bulletproof-syntax/\">No @font-face Syntax will ever be Bulletproof, Nor Should It Be</a> on the 2016 PerfPlanet Performance Calendar.</li> \n</ul> \n<h2 id=\"nejsconf\">NEJSCONF <a class=\"direct-link\" href=\"http://www.zachleat.com/web/icymi/2016/#nejsconf\">#</a></h2> \n<img src=\"https://www.zachleat.com/web/img/posts/2016-icymi/nejsconf-2016-crowd.jpg\" alt=\"The attendees at NEJSCONF 2016\" class=\"primary\"> <p>Our sophomore conference came after our <a href=\"http://2015.nejsconf.com/\">sold-out first event last year in 2015</a>. Our <a href=\"https://nejsconf.com/\">2016 train themed single day single track conference</a> sold out again with 200 attendees. We were excited to have an open call for proposals, a board game after party, and again blended both international and local speakers including keynotes from <a href=\"https://nejsconf.com/speakers/keynote-justin-searls/\">Justin Searls</a> and <a href=\"https://nejsconf.com/speakers/keynote-andrea-goulet/\">Andrea Goulet</a>. Check out these <a href=\"https://photos.google.com/share/AF1QipN4nlFYmhJASQMXNM5uQcrrPnST97uIsrF1BG30pRYOFdfTHDbucj0U7GrtegWywA?key=Qlh3NzlKSEFjb25GbGZKempNbVVVR283U3pTWm9n\">awesome event photos</a> from <a href=\"https://twitter.com/ravinglogic\">Andrew Neely</a>.</p> <h2 id=\"nebraskajs\">NebraskaJS <a class=\"direct-link\" href=\"http://www.zachleat.com/web/icymi/2016/#nebraskajs\">#</a></h2> <p>This is my fifth year as co-organizer of <a href=\"http://www.meetup.com/nebraskajs/\">NebraskaJS</a>. In 2015 we had 12 different meetups in Lincoln and Omaha, not counting the two <a href=\"http://techomaha.com/\">TechOmaha</a> developer group co-op parties, and a screening of <a href=\"http://www.futureisnext.com/\">What Comes Next is the Future</a> at the Alamo Drafthouse (with huge thanks to <a href=\"https://twitter.com/kathyia\">Kathy Andersen</a> for <a href=\"https://futureisnext.splashthat.com/\">spearheading the event</a>). We added 207 meetup members in 2016 and broke the 1,000 mark this year—amazing!</p> \n <table> \n  <caption>\n   NebraskaJS Membership\n  </caption> \n  <thead> \n   <tr> \n    <th>Year</th> \n    <th>Membership</th> \n    <th>Change</th> \n   </tr> \n  </thead> \n  <tbody> \n   <tr> \n    <th>2009</th> \n    <td>Founded</td> \n    <td></td> \n   </tr> \n   <tr> \n    <th>2012</th> \n    <td>~220</td> \n    <td></td> \n   </tr> \n   <tr> \n    <th>2013</th> \n    <td>419</td> \n    <td><em class=\"better\">(+199)</em></td> \n   </tr> \n   <tr> \n    <th>2014</th> \n    <td>606</td> \n    <td><em class=\"better\">(+187)</em></td> \n   </tr> \n   <tr> \n    <th>2015</th> \n    <td>920</td> \n    <td><em class=\"better\">(+314)</em></td> \n   </tr> \n   <tr> \n    <th>2016</th> \n    <td>1127</td> \n    <td><em class=\"better\">(+207)</em></td> \n   </tr> \n  </tbody> \n </table> <h2 id=\"talks\">Talks <a class=\"direct-link\" href=\"http://www.zachleat.com/web/icymi/2016/#talks\">#</a></h2> <p>This year I decided to slow it down on public speaking. Nonetheless I did two small talks this year (neither of which are available online). The first was a <a href=\"https://www.meetup.com/nebraskajs/events/235243306/\">NebraskaJS talk</a> which ended up being about the dangers of media queries in re-usable component libraries (spoiler: we need container/element queries, stat). The second was a <a href=\"https://twitter.com/zachleat/status/776789550420996096\">satirical talk at Barcamp Omaha</a> about the spread of misinformation online called “The Earth is Flat—Separating Fact from Fiction on the Internet.” I originally planned to publish this one but when some flat-earthers messaged me on Twitter hoping that I’d help their cause, I learned something valuable about satire and changed my mind. Y’all—we can’t even poke fun at Flat Earthers without signal boosting them. Ugh.</p> <h2 id=\"open-source\">Open Source <a class=\"direct-link\" href=\"http://www.zachleat.com/web/icymi/2016/#open-source\">#</a></h2> \n <ul> \n  <li>Created <a href=\"https://github.com/filamentgroup/faux-pas\">faux-pas</a>, a bookmarklet to highlight faux-rendered (bold or italic) and otherwise misconfigured webfonts (node/grunt/gulp components for this are coming soon).</li> \n  <li><a href=\"https://github.com/zachleat/browser-logo-icon-set\"><code>browser-logo-icon-set</code></a> is a grunticon icon set of multicolor vector/bitmap web browser logos (<a href=\"https://zachleat.github.io/browser-logo-icon-set/usage.html\">Demo</a>).</li> \n  <li>Contributed a tiny PR to <a href=\"https://github.com/bramstein/stateofwebtype\">bramstein/stateofwebtype</a>.</li> \n  <li>Researched and filed four new issues on <a href=\"https://github.com/scottjehl/Device-Bugs/issues/created_by/zachleat\">Scott Jehl’s <code>device-bugs</code> repo</a>.</li> \n  <li>Created a repo for people to <a href=\"https://github.com/zachleat/ama/\">AMA</a>.</li> \n  <li>A bunch of other contributions to various Filament Group open source libraries that I won’t list individually.</li> \n </ul> <h2 id=\"tweets\">Tweets <a class=\"direct-link\" href=\"http://www.zachleat.com/web/icymi/2016/#tweets\">#</a></h2> <p>I had some good tweets this year, Brent.</p> \n <blockquote class=\"twitter-tweet\" data-lang=\"en\">\n  <p lang=\"en\" dir=\"ltr\">please enter a password that has 8 characters or less <a href=\"https://t.co/ICtuHwR1uw\">pic.twitter.com/ICtuHwR1uw</a></p>— Zach Leatherman (@zachleat) \n  <a href=\"https://twitter.com/zachleat/status/778253134162382849\">September 20, 2016</a>\n </blockquote> \n <blockquote class=\"twitter-tweet\" data-cards=\"hidden\" data-lang=\"en\">\n  <p lang=\"en\" dir=\"ltr\">when the font-size is too small but they used maximum-scale=1 <a href=\"https://t.co/gr11m3xDYZ\">pic.twitter.com/gr11m3xDYZ</a></p>— Zach Leatherman (@zachleat) \n  <a href=\"https://twitter.com/zachleat/status/776534911180079108\">September 15, 2016</a>\n </blockquote> \n <blockquote class=\"twitter-tweet\" data-lang=\"en\">\n  <p lang=\"en\" dir=\"ltr\">proposal: make “framework” a standard unit of time<br><br>“I’ve been working at this job for 4.6 frameworks”</br></br></p>— Zach Leatherman (@zachleat) \n  <a href=\"https://twitter.com/zachleat/status/690191615852449792\">January 21, 2016</a>\n </blockquote> \n <blockquote class=\"twitter-tweet\" data-lang=\"en\">\n  <p lang=\"en\" dir=\"ltr\">as part of her job at a zoo my wife breeds bugs and releases them into the wild<br><br>I never realized how similar our jobs were before now</br></br></p>— Zach Leatherman (@zachleat) \n  <a href=\"https://twitter.com/zachleat/status/785495065913274369\">October 10, 2016</a>\n </blockquote> \n <blockquote class=\"twitter-tweet\" data-lang=\"en\">\n  <p lang=\"en\" dir=\"ltr\">Facebook ships an iOS app every 2 weeks—latest: 146MB<a href=\"https://t.co/lG5S2n9B5x\">https://t.co/lG5S2n9B5x</a> is 776KB, 40KB primed<br><br>App download == 266 website visits/day</br></br></p>— Zach Leatherman (@zachleat) \n  <a href=\"https://twitter.com/zachleat/status/766389127751143424\">August 18, 2016</a>\n </blockquote> \n <blockquote class=\"twitter-tweet\" data-cards=\"hidden\" data-lang=\"en\">\n  <p lang=\"en\" dir=\"ltr\">I guess we'll never know why people prefer to read news in apps over web sites.<br><br>re: <a href=\"https://t.co/FK02x7DKva\">https://t.co/FK02x7DKva</a> <a href=\"https://t.co/8Ig1n1BmJc\">pic.twitter.com/8Ig1n1BmJc</a></br></br></p>— Zach Leatherman (@zachleat) \n  <a href=\"https://twitter.com/zachleat/status/731659515154681857\">May 15, 2016</a>\n </blockquote> \n <blockquote class=\"twitter-tweet\" data-lang=\"en\">\n  <p lang=\"en\" dir=\"ltr\">“Millions are using unsupported browsers and can’t access our site”<br>“…meh”<br><br>“NPM broke our build for an hour”<br>*rewrites entire app*</br></br></br></br></p>— Zach Leatherman (@zachleat) \n  <a href=\"https://twitter.com/zachleat/status/712615054990925825\">March 23, 2016</a>\n </blockquote> \n <blockquote class=\"twitter-tweet\" data-lang=\"en\">\n  <p lang=\"en\" dir=\"ltr\">“I don’t think our users will…”<br><br>…want to hear the unsolicited generalization you’re about to make about them</br></br></p>— Zach Leatherman (@zachleat) \n  <a href=\"https://twitter.com/zachleat/status/732652820206256128\">May 17, 2016</a>\n </blockquote> \n <blockquote class=\"twitter-tweet\" data-cards=\"hidden\" data-lang=\"en\">\n  <p lang=\"en\" dir=\"ltr\">Twitter to Apple News, eight steps to read an article:<br><br>🔈 alt: <a href=\"https://t.co/4W87r330mV\">https://t.co/4W87r330mV</a> <a href=\"https://t.co/Cuvw0Ujc7u\">pic.twitter.com/Cuvw0Ujc7u</a></br></br></p>— Zach Leatherman (@zachleat) \n  <a href=\"https://twitter.com/zachleat/status/734764603645825025\">May 23, 2016</a>\n </blockquote> <h2 id=\"thank-you-notes\">Thank You Notes <a class=\"direct-link\" href=\"http://www.zachleat.com/web/icymi/2016/#thank-you-notes\">#</a></h2> <p>Huge thank you to <a href=\"https://twitter.com/nicknisi\">Nick Nisi</a> my co-organizer for NebraskaJS; additionally the co-organizers of NEJS CONF: <a href=\"https://twitter.com/jerodsanto\">Jerod Santo</a>, <a href=\"https://twitter.com/jmhobbs\">John Hobbs</a>, <a href=\"https://twitter.com/l_pfeifer18\">Lindsey Pfeifer</a>, <a href=\"https://twitter.com/mattdsteele\">Matt Steele</a>, and <a href=\"https://twitter.com/sandikbarr\">Sandi Barr</a>. Best co-organizers on the planet. Thank you to (<a href=\"https://twitter.com/zachleat/status/747779322757275648\">almost</a>) everyone that put in a proposal to speak at NEJS CONF. Thank you to everyone that volunteered or even attended NEJSCONF.</p> <p>Thank you to everyone involved in organizing the TechOmaha co-op parties (<a href=\"https://twitter.com/kberryman\">Kevin Berry</a> especially). Thank you to <a href=\"https://twitter.com/kathyia\">Kathy Andersen</a> for spearheading the screening of Matt Griffin’s <em>The Future is Next</em> in Omaha.</p> <p>And a huge thank you to Filament Group. I continue to feel as though I’m challenged to be a contributing citizen of the web development community as a part of this company and I love it.</p> <p>And lastly, but <a href=\"https://twitter.com/zachleat/status/816030712491114497\">most importantly to my wife and daughter</a>: I love you both, dearly.</p> \n <div class=\"retweettoshare\"> \n  <h3 class=\"retweettoshare_title\">Retweet to share this post</h3> \n  <div class=\"retweettoshare_widget\"> \n   <blockquote class=\"twitter-tweet\" data-lang=\"en\">\n    <p lang=\"en\" dir=\"ltr\">★ In Case You Missed It: 2016 <a href=\"https://t.co/qVmOzxLpQQ\">https://t.co/qVmOzxLpQQ</a></p>— Zach Leatherman (@zachleat) \n    <a href=\"https://twitter.com/zachleat/status/818455036170764289\">January 9, 2017</a>\n   </blockquote> \n  </div> \n </div> </img>","descriptionType":"html","feedId":12519,"bgimg":"https://www.zachleat.com/web/img/posts/2016-icymi/nejsconf-2016-crowd.jpg","linkMd5":"3bda99e16e73b85c4c64e40cd5c1ab37","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn98@2020_1/2020/08/25/02-02-05-442_f6b2a03c60fed0ca.webp","destWidth":1600,"destHeight":701,"sourceBytes":324373,"destBytes":194088,"author":"","articleImgCdnMap":{"https://www.zachleat.com/web/img/posts/2016-icymi/nejsconf-2016-crowd.jpg":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn98@2020_1/2020/08/25/02-02-05-442_f6b2a03c60fed0ca.webp"},"publishedOrCreatedDate":1598320921767},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Performance in Responsive Web Design (2012)","link":"http://www.zachleat.com/web/perf-rwd-0/","description":"\n\t\t\t<p><a href=\"https://nebraskajs.com/2012/performance-in-rwd/\">View this presentation and related content on NebraskaJS.com</a></p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"a89540c0b29ecb75e8c28e7e5c1e4987","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921763},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"The Scoville Scale of Web Font Loading Opinions","link":"http://www.zachleat.com/web/scoville-scale/","description":"<p><em>Originally presented at Beyond Tellerrand in Düsseldorf, Germany 🇩🇪 in May, 2019.</em></p> \n<p>This talk was a grab bag of personal font loading opinions that I’ve been collecting over quite some time to package up for a talk. <a href=\"http://www.davidcarsondesign.com/\">David Carson</a> said that it was a great talk but the kerning on a few of my slides was off 😎😱😇. I was so pleased that he took the time to attend—he was around for most of the conference!</p> \n<p>This conference really was something special. <a href=\"https://twitter.com/marcthiele\">Marc Thiele</a> is an amazing conference organizer. His attention to detail and willingness to promote other things happening in the community is incredible. If you get the chance to attend one of Marc’s conferences, <strong>do it</strong>.</p> \n<h2 id=\"video\">Video <a class=\"direct-link\" href=\"http://www.zachleat.com/web/scoville-scale/#video\">#</a></h2> \n<div class=\"fullwidth\">\n <div class=\"fluid-width-video-wrapper\">\n  <iframe src=\"https://player.vimeo.com/video/336091879\" width=\"640\" height=\"360\" frameborder=\"0\" allow=\"autoplay; fullscreen\" allowfullscreen=\"\"></iframe>\n </div>\n</div> \n<p><a href=\"https://vimeo.com/336091879\">The Scoville Scale of Web Font Loading Opinions - Zach Leatherman</a> from <a href=\"https://vimeo.com/beyondtellerrand\">beyond tellerrand</a> on <a href=\"https://vimeo.com/\">Vimeo</a>.</p> \n<h2 id=\"slides\">Slides <a class=\"direct-link\" href=\"http://www.zachleat.com/web/scoville-scale/#slides\">#</a></h2> \n<div class=\"fullwidth\">\n <div class=\"fluid-width-video-wrapper\">\n  <iframe src=\"https://noti.st/zachleat/Abp5Y7/embed\" frameborder=\"0\" allowfullscreen=\"\"></iframe>\n </div>\n</div> \n<p>The <a href=\"https://noti.st/zachleat/Abp5Y7/the-scoville-scale-of-web-font-loading-opinions\">full slide deck is available on Not.ist</a>.</p> \n<h3 id=\"slide-hyperlinks\">Slide Hyperlinks <a class=\"direct-link\" href=\"http://www.zachleat.com/web/scoville-scale/#slide-hyperlinks\">#</a></h3> \n<ol class=\"reference-links\"> \n <!-- <li id=\"test1\"><a href=\"#\" class=\"no-underline\">Some other thing</a></li> --> \n <li><a id=\"bwb\" href=\"https://docs.google.com/spreadsheets/d/1lXw1vtJUgouOgpiq2LeES4gOf0SLO7HylDKdVhlRJ04/edit?usp=sharing\" class=\"no-underline break\">The Best Web Browser for Web Fonts—Check my work on Google Sheets</a></li> \n</ol> \n<h2 id=\"resources\">Resources <a class=\"direct-link\" href=\"http://www.zachleat.com/web/scoville-scale/#resources\">#</a></h2> \n<ul> \n <li><a href=\"https://beyondtellerrand.com/events/duesseldorf-2019/speakers/zach-leatherman\">Talk description and video on Beyond Tellerrand</a></li> \n</ul> \n<h2 id=\"related-links-from-the-event\">Related Links from the Event <a class=\"direct-link\" href=\"http://www.zachleat.com/web/scoville-scale/#related-links-from-the-event\">#</a></h2> \n<ul> \n <li><a href=\"https://vimeo.com/336343651\">Beyond Tellerrand Düsseldorf 2019 Titles Video</a> from <a href=\"https://vimeo.com/bjdawes\">Brendan Dawes</a></li> \n <li><a href=\"http://brendandawes.com/projects/beyondtellerrand2019\">Read about Brendan Dawes’ incredible work in Houdini creating the Beyond Tellerrand titles and posters</a>.</li> \n <li><a href=\"https://florian.photo/2019-05-13/\">Day One Photos</a> and <a href=\"https://florian.photo/2019-05-15/#slide-9\">Day Two Photos from Florian Ziegler</a></li> \n <li><a href=\"https://robert.katzki.de/posts/beyond-tellerrand-2019-duesseldorf\">A lovely recap post from Robert Katzki</a></li> \n</ul> \n<div class=\"retweettoshare retweettoshare-m\"> \n <h3 class=\"retweettoshare_title\">Retweet to share this post</h3> \n <div class=\"retweettoshare_widget\"> \n  <blockquote class=\"twitter-tweet\" data-lang=\"en\">\n   <p lang=\"da\" dir=\"ltr\">The Scoville Scale of Web Font Loading Opinions 🌶🔥🥛<br><br>Slides, video: <a href=\"https://t.co/yXzUmC5MD6\">https://t.co/yXzUmC5MD6</a><br><br>Presented at <a href=\"https://twitter.com/btconf?ref_src=twsrc%5Etfw\">@btconf</a> Düsseldorf, 2019. <a href=\"https://twitter.com/hashtag/btconf?src=hash&amp;ref_src=twsrc%5Etfw\">#btconf</a></br></br></br></br></p>— Zach Leatherman @btconf 🇩🇪 (@zachleat) \n   <a href=\"https://twitter.com/zachleat/status/1129035256764485632?ref_src=twsrc%5Etfw\">May 16, 2019</a>\n  </blockquote> \n </div> \n</div>","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"bb898c3a8ae581230c5866e5739bb609","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921771},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"A Collection of Web Font Loading Recipes","link":"http://www.zachleat.com/web/recipes/","description":"\n\t\t\t<p>When I originally wrote <a href=\"https://www.zachleat.com/web/comprehensive-webfonts/\">A Comprehensive Guide to Font Loading Strategies</a>, each strategy included a link to a demo showcasing it working live. For my own maintenance and organizational sanity, I’ve cleaned these demos up a bit and moved them into their own repository on GitHub.</p>\n<p class=\"primarylink\"><a href=\"https://github.com/zachleat/web-font-loading-recipes\"><code>zachleat/web-font-loading-recipes</code> on GitHub</a></p>\n<p>A couple of improvements I’ve added on top of the original code:</p>\n<ul>\n<li>Each demo using a font loading polyfill (usually <a href=\"https://github.com/bramstein/fontfaceobserver\">fontfaceobserver</a>) is now paired with a native CSS Font Loading API demo. The native demos are usually easier to follow—the code is simpler and there isn’t a JavaScript library embedded in the head. As we move forward and support for the CSS Font Loading API increases, we can find more creative ways to serve web fonts to browsers that don’t support it.</li>\n<li>New experiments: Strategies I’m trying out that haven’t made it into The Guide yet.</li>\n<li>Failed experiments: Things I wish had worked. We can learn a lot from failures too. It’s important to document these so we don’t repeat our failures.</li>\n</ul>\n<p>Hopefully this is a helpful resource for you to understand the differences between the font loading strategies. It certainly will be a helpful resource for me to stay organized moving forward.</p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"9829c98966f871706f5e8847354230f9","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921769},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"NEJS CONF 2019","link":"http://www.zachleat.com/web/nejsconf/2019/","description":"\n\t\t\t\t<p><em>This content lives somewhere else. It was originally posted at: <a href=\"https://2019.nejsconf.com/\">https://2019.nejsconf.com/</a></em></p>\n\t\t\t\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"88f0e1ad2bac190394ddb5b42203251c","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921772},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Smashing Book #5","link":"http://www.zachleat.com/web/smashingbook5/","description":"\n\t\t\t<p>I had the honor of being the technical reviewer for the <a href=\"https://www.bramstein.com/\">Bram Stein</a> chapter on Web Fonts Performance in Smashing Book #5.</p>\n<blockquote>\n<p>Font formats • Font loading • Font-rendering • FOIT and FOUT • Font Loading API • Fallback fonts • Inlining fonts • Simulating swapping • Promises • Asynchronous loading and caching • Prioritized loading</p>\n</blockquote>\n<p class=\"primarylink\">Read more and purchase: <a href=\"https://www.smashingmagazine.com/printed-books/smashing-book-5/\">Smashing Book #5</a></p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"4967cd09a47487319b8ee40fe74d19cf","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921765},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"ALARMd is a Google Code Project","link":"http://www.zachleat.com/web/alarmd-is-a-google-code-project/","description":"\n\t\t\t<p><strong>Update: <a href=\"https://www.zachleat.com/web/alarmd-is-now-on-github/\">ALARMd has been moved to GitHub</a>.</strong></p>\n<p>I received a request this week to participate in development of the internet alarm clock I developed awhile back called <a href=\"http://www.alarmd.com/\">ALARMd</a>. It has gone through two major revisions, and my interest in contributing additional source code to the project is waning. I’ve got <a href=\"http://www.tournology.com/\">other projects</a>. So, I’ve decided to publish it to Google Code. I won’t be doing new development on the project, but will accept patches and commits to the repository. Feel free to ask me for project member status.</p>\n<p>See <a href=\"http://code.google.com/p/alarmd/\">ALARMd on Google Code</a>.</p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"8d43dbd43dd16acad1bd9706a439904b","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921762},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Web Fonts are ▢▢▢ Rocket Science","link":"http://www.zachleat.com/web/rocket-science/","description":"\n\t\t\t\t<p><em>This content lives somewhere else. It was originally posted at: <a href=\"https://www.filamentgroup.com/lab/rocket-science.html\">https://www.filamentgroup.com/lab/rocket-science.html</a></em></p>\n\t\t\t\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"24304c40e47d14ef1ef2f7d699aae3e9","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921769},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Filament Group is Agency of the Year at Net Awards","link":"http://www.zachleat.com/web/filamentgroup-award/","description":"\n\t\t\t\t<p><em>This content lives somewhere else. It was originally posted at: <a href=\"https://www.filamentgroup.com/lab/agency-of-year.html\">https://www.filamentgroup.com/lab/agency-of-year.html</a></em></p>\n\t\t\t\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"edbe2bb0745c6672079300b570bbe865","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921765},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Frameworks, not Blameworks","link":"http://www.zachleat.com/web/javascript-frameworks/","description":"<p>Earlier this week, Paul Lewis wrote a <a href=\"https://aerotwist.com/blog/the-cost-of-frameworks/\">great post gathering data on the performance of popular JavaScript frameworks on mobile devices</a>. It was a great conversation starter, evidenced by the many blog post responses it garnered from <a href=\"http://tomdale.net/2015/11/javascript-frameworks-and-mobile-performance/\">Tom Dale</a>, <a href=\"http://daverupert.com/2015/11/framework-cost/\">Dave Rupert</a>, and <a href=\"http://soledadpenades.com/2015/11/17/some-additional-thoughts-on-the-recent-discussion-about-frameworks-vs-vanilla-js-on-mobile/\">Soledad Penadés</a>.</p> \n<blockquote> \n <p>“It seems to me that developer ergonomics should be less important than our users’ needs.”—Paul Lewis</p> \n</blockquote> \n<p>One of the great things about Paul’s post is that his data clearly debunks a relationship between framework file size and JavaScript execution time. Notably, React and Polymer had similar results despite React having ~3.5x the file size.</p> \n<p><em>(Related: Scott Jehl’s <a href=\"https://www.filamentgroup.com/lab/weight-wait.html\">More Weight Doesn’t Mean More Wait</a>)</em></p> \n<p>It should also be noted that Paul’s data is a partial view of the big picture—it focuses only on JavaScript execution time and <a href=\"https://twitter.com/aerotwist/status/666278458775896064\">doesn’t include transfer time</a>. Including transfer time may contribute to a stronger relationship between framework file size and overall performance cost. This is an important piece of the puzzle given that <a href=\"https://twitter.com/raymondcamden/status/666674488495353856\">2G makes up 62% of mobile connections</a>.</p> \n<p>As much snark as I talk on twitter about frameworks, it isn’t difficult to see their allure.</p> \n<blockquote class=\"twitter-tweet\" lang=\"en\">\n <p lang=\"en\" dir=\"ltr\">check out my new javascript framework that works for space travel and your commute to work—don’t worry about speed <a href=\"https://t.co/IC6zDuZa9q\">pic.twitter.com/IC6zDuZa9q</a></p>— Zach Leatherman (@zachleat) \n <a href=\"https://twitter.com/zachleat/status/666711475608666112\">November 17, 2015</a>\n</blockquote> \n<p>At <a href=\"http://nebraskajs.com/\">NebraskaJS</a> we’ve had many great speakers talk about the utility of React, Angular, Ember, and many others. As a meetup organizer, it isn’t my job to filter these talks to topics that I personally agree with or would advocate for. It’s my job to attempt to learn and help others learn from the many different perspectives that exist in our community.</p> \n<h2 id=\"prior-art\">Prior Art <a class=\"direct-link\" href=\"http://www.zachleat.com/web/javascript-frameworks/#prior-art\">#</a></h2> \n<p>That being said, my Filament Group colleagues John Bender, Todd Parker, and Scott Jehl tackled this very same topic almost a year ago with the <a href=\"https://www.filamentgroup.com/lab/mv-initial-load-times.html\">Performance Impact of Popular JavaScript MVC Frameworks</a>. I’d recommend you read the whole thing—it’s very good. The data they gathered shows the big picture because it measures initial render on a variety of network connections.</p> \n<h2 id=\"miniscule-apps\">Miniscule Apps <a class=\"direct-link\" href=\"http://www.zachleat.com/web/javascript-frameworks/#miniscule-apps\">#</a></h2> \n<p>The counter-argument presented against these blog posts is that TodoMVC isn’t a great test case.</p> \n<blockquote> \n <p>“TodoMVC is a miniscule app and is in no way representative of the apps most developers work on day to day.”—Tom Dale</p> \n</blockquote> \n<p>However, a more complex application isn’t going to do anything to <em>improve</em> your initial render time. If you’re developing an application that is for a corporate employee intranet with captive users, your performance needs might be different. However if your code lives on the public internet, it is subject to consumer choice. You need to meet certain critical performance benchmarks of the impatient user or they will abandon your site. At time of writing, <a href=\"http://wpostats.com/\">wpostats.com documents 18 different high profile cases about the relationship between performance and user engagement</a>. Users don’t care about a developer ergonomics sob story—they want the site to load fast or they’ll go somewhere else.</p> \n<h2 id=\"it-depends\">It Depends <a class=\"direct-link\" href=\"http://www.zachleat.com/web/javascript-frameworks/#it-depends\">#</a></h2> \n<p>In my mind, the discussion here is <strong>not</strong> a cage match between frameworks and <em>vanilla</em> JavaScript. We can’t realistically make a blanket statement that you should or should not use frameworks. Attempting to frame it as such would take us down a yellow brick road trying to help our humble strawman find his brain.</p> \n<h2 id=\"less-is-more\"><s>Less is More</s> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/javascript-frameworks/#less-is-more\">#</a></h2> \n<blockquote> \n <p>“The bottom line is that I don’t think “reduce the amount of code” is a reasonable lesson for the average developer to follow.”—Tom Dale</p> \n</blockquote> \n<p>Oversimplifying to “less is more” does a disservice to the debate as well.</p> \n<blockquote class=\"twitter-tweet\" lang=\"en\">\n <p lang=\"en\" dir=\"ltr\">“There is no such thing as a performance budget… less is more” Wrong. Use CSS/JS? Our business is trading bytes for features, responsibly.</p>— Zach Leatherman (@zachleat) \n <a href=\"https://twitter.com/zachleat/status/609408429522845696\">June 12, 2015</a>\n</blockquote> \n<p>The trick is to pick the right framework (or lack thereof) that best meets the needs of our users. This includes making performance a priority, but on the users’ terms: on their device, their network connection, their web browser configured to their needs.</p> \n<blockquote class=\"twitter-tweet\" lang=\"en\">\n <p lang=\"en\" dir=\"ltr\">So much product development time is spent undoing complexity that should have been left out in the first place.</p>— Jason Fried (@jasonfried) \n <a href=\"https://twitter.com/jasonfried/status/666351638836326400\">November 16, 2015</a>\n</blockquote> \n<h2 id=\"competition-and-choice\">Competition and Choice <a class=\"direct-link\" href=\"http://www.zachleat.com/web/javascript-frameworks/#competition-and-choice\">#</a></h2> \n<p>Again, I wouldn’t and couldn’t credibly say that you should forgo frameworks altogether. That’s the wrong discussion to have. If you decide to spend valuable kilobytes on a framework, fortunately there are plenty of frameworks to choose from. Just like DOM libraries used to compete on selector engine performance, the onus is on framework authors to compete against each other on initial render performance.</p> \n<blockquote> \n <p>“The average Smartphone visitor to your business website will beat a hasty retreat if it doesn’t load inside 3 seconds.”—<a href=\"http://www.aykira.com.au/2014/04/importance-website-loading-speed-top-3-factors-limit-website-speed/\">Strangeloop Networks study</a></p> \n</blockquote> \n<p>Your framework choice sets the performance baseline that your application code will pile on top of. Visitors are impatient and choosing the wrong framework can set the performance baseline too high even for “miniscule” applications.</p> \n<p>Vote with your <code>npm install</code> and choose one that is focused on (mobile) performance. Frameworks exist that don’t prohibitively hamper the perceived performance of your site. Frameworks exist that have a fast initial (preferably server side) render. The data is clear. Choose wisely. Your users will stick around long enough to thank you for it.</p> \n<hr> \n <p><em>A previous version of this article stated that Polymer was 3.5x the file size of React. The reverse is true. Thanks <a href=\"https://twitter.com/notbrent/status/667740388279451649\">notbrent</a>.</em></p> \n</hr>","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"ea98880d54ac23144e1bbea966c9a593","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921766},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Eleventy’s New Performance Leaderboard","link":"http://www.zachleat.com/web/performance-dashboard/","description":"\n\t\t\t<p>Last week, the <a href=\"https://amp.dev/\">AMP project</a> and Eleventy crossed paths when AMP released an <a href=\"https://blog.amp.dev/2020/03/11/easier-amp-development-with-the-new-amp-optimizer/\">official AMP plugin for Eleventy</a>.</p>\n<p>Much has already been said about the <a href=\"http://ampletter.org/\">AMP project and how they exert influence over technology choices by setting up bad-for-the-web incentives via their power over search results</a>. The higher search ranking via AMP carousel placement and the special lightning icon for sites using AMP has led many to feel like they’re required to use AMP to compete in the search results space and it’s hard to argue with that line of thinking.</p>\n<p><em>Related: I’ve also created an <a href=\"https://www.zachleat.com/twitter/topic/amp/\">AMP topic page on my twitter archive</a> and avoid <a href=\"https://www.zachleat.com/twitter/amp/\">sharing AMP urls</a>.</em></p>\n<p>In light of all of this, last week I decided to <a href=\"https://twitter.com/zachleat/status/1237810370049441792\">poke a little fun</a> at the <a href=\"https://www.zachleat.com/web/performance-dashboard/amp.dev\">AMP</a> project. On the Eleventy site we allow developers to submit their site to be listed on our <em>Built With Eleventy</em> showcase. I created <a href=\"https://www.11ty.dev/docs/sites/#any-site-using-amp\">a special carousel for AMP sites</a> buried at the very bottom of our showcase. If AMP sites can be ranked higher on search results, they can be ranked lower in my little corner of the web. This is fun right? 😅 I’m having fun.</p>\n<p>As the week progressed, I thought more about AMP’s special treatment in search and how it could be applied to any sufficiently speedy site. But hey, I could practice what I preach here too! I don’t have a search engine but I do have a list of sites that are kind of like search results! (Have a look at what the <a href=\"https://v0-10-0.11ty.dev/docs/sites/\">showcase looked like before</a>.)</p>\n<p>I set to work. I used the <a href=\"https://github.com/GoogleChrome/lighthouse#readme\"><code>lighthouse</code> CLI plugin</a> to run performance tests on all sites listed on the showcase. Initially I did a single Lighthouse run (mobile, network and CPU throttled) which proved fairly reliable in terms of repeatability for the Performance score specifically. This is the primary rank. The tiebreaker is the SpeedIndex score. However, SpeedIndex scores were a <em>little</em> more variable than I would have liked. So, I switched to three runs for each site and picked the median of the three. The code for <a href=\"https://github.com/11ty/11ty-website/blob/4b898c72780e62afb50dee50af973a5ab07ee685/node-performance-rank.js\">these tests is all here</a>. It’d probably be worth moving into its own plugin, if others want to use it too.</p>\n<div class=\"primarylink\"><a href=\"https://www.11ty.dev/docs/sites/\">The Built With Eleventy Performance Leaderboard</a></div>\n<p>The top 11 sites are given a bit more prominent design treatment and screenshots are shown. But the real surprise here to me were the aggregate performance results across all of the sites. At time of writing:</p>\n<ul>\n<li><code>200</code> Sites Tested</li>\n<li><code>98</code> Median Lighthouse Performance Score</li>\n<li><code>93.7</code> Mean Lighthouse Performance Score</li>\n<li><code>2,082</code> Median Speed Index</li>\n<li><code>2,515</code> Mean Speed Index</li>\n<li><code>1,577</code> Median First Contentful Paint</li>\n<li><code>1,727</code> Mean First Contentful Paint</li>\n</ul>\n<p>Wow. A <strong>MEDIAN 98 LIGHTHOUSE PERFORMANCE SCORE</strong>. Staggering. I knew y’all were good—but wow. 161 of the 200 sites tested 90 or higher on Lighthouse performance tests. Incredible.</p>\n<p>After launch I’ve already received multiple reports of people updating their sites to be <em>even faster</em> to try and break into the Top Eleven results. I’ve also received <a href=\"https://twitter.com/starfalldocs/status/1239043864838766593\">a request to do Accessibility rankings too</a>, which I think is a lovely idea.</p>\n<p>Eleventy doesn’t do any special optimizations out of the box to make your sites fast. It doesn’t protect you from making a slow site. But importantly it also doesn’t add anything extra either. This sort of developer empowerment over the final product has seemed to attract an amazing group of performance oriented developers using the project and I am so grateful to every one of you.</p>\n<p>Keep it speedy, y’all. 🏆🏆🏆</p>\n<hr>\n<p><strong>Update:</strong> I’ve pulled the leaderboard code out from the 11ty website and created the <a href=\"https://github.com/zachleat/performance-leaderboard\"><code>performance-leaderboard</code> npm package</a>. Try it out! Build your own performance leaderboard!</p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"dfe747817ef5ded05d9b861cf6172be0","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921773},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"CSS Position Sticky","link":"http://www.zachleat.com/web/css-position-sticky/","description":"\n\t\t\t<p><a href=\"https://nebraskajs.com/2017/sticky/\">Watch the talk on NebraskaJS.com</a> (10:16) <span class=\"tag video\">Video</span></p>\n<p>Or watch here:</p>\n<div class=\"fluid-width-video-wrapper\"><iframe class=\"youtube-player\" type=\"text/html\" width=\"640\" height=\"385\" src=\"https://www.youtube.com/embed/r-fGoST-ckI/\" frameborder=\"0\" allowfullscreen=\"\"></iframe></div>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"b1626e5c683464fd1a43498e7b0d4fc2","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921766},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Registration Forms Suck, Let&#8217;s Mitigate Suckiness","link":"http://www.zachleat.com/web/registration-forms-suck-lets-mitigate-suckiness/","description":"\n\t\t\t<p><img src=\"https://www.zachleat.com/web/wp-content/uploads/2009/01/signup-form.png\" alt=\"Signup Form\" title=\"signup-form\"></p>\n<p>A lot of people <strong>complain about registration forms</strong>. Some people have suggested getting rid of them altogether, allowing users to utilize login credentials from accounts they already have through OpenID. But even with a highly technical audience, OpenID adoption is <a href=\"http://blog.stackoverflow.com/2008/10/stack-overflow-openid-case-study/\">problematic</a>.</p>\n<p>So, some sites have gone two ways, allowing OpenID, but also a proprietary registration system. This too, <a href=\"http://www.wetpaintcentral.com/page/OpenID?t=anon\">is problematic</a>. It would seem that given a choice, the <strong>John Doe the Plumber style user will choose a proprietary account</strong> over the confusing user experience presented to them through OpenID.</p>\n<p>But the annoyance doesn’t just lie with account registration for web applications. Typing your personal information on every blog you comment at is also repetitive and unnecessary. <a href=\"http://www.ajaxian.com/\">Some sites</a> even require account registration for something so minor and transient as a blog comment.</p>\n<p>Unfortunately, for the time being, it looks like <strong>registration forms are here to stay</strong>. So, what can we do to make those registration forms more usable, more efficient, and ultimately downright friendly? I know that you’re ahead of me on this one: <strong>Let’s auto-complete information for the user</strong>.</p>\n<p>Please keep in mind that this power can be used for both good and evil. Essentially what we’re discussing here is data mining available information from various social networking sites on the internet, trying to glean personal information about an end user that has volunteered a piece of their data already. What can we get from what we already have?</p>\n<p>Once a user has typed in their <strong>e-mail address</strong>, we can:</p>\n<ul>\n<li>Retrieve Twitter profile information (<a href=\"http://www.wait-till-i.com/2009/01/08/using-twitter-as-a-data-provider-to-automatically-fill-forms/\">example shown on Chris Heilmann’s blog</a>):\n<ul>\n<li>Full Name</li>\n<li>Short Personal Description</li>\n<li>Location</li>\n<li>Web site URL</li>\n<li>Time Zone</li>\n<li>Favorite Colors (used on their profile)</li>\n</ul>\n</li>\n<li>Retrieve an <strong>avatar</strong> if they’ve registered for the Gravatar web service (<a href=\"http://www.zachleat.com/web/2009/01/08/scare-your-visitors-with-this-javascript-gravatar-plugin/\">See my earlier post discussing this</a>).</li>\n<li>Get their <a href=\"http://gdata-javascript-client.googlecode.com/svn/trunk/samples/calendar/simple_sample/simple_sample.html\">upcoming calendar events</a> from a public Google Calendar. (Perhaps not as useful for autocompleting forms, but interesting)</li>\n<li>Find their <a href=\"http://www.flickr.com/services/api/flickr.people.findByEmail.html\">UID on Flickr</a>, which gives you <a href=\"http://www.flickr.com/services/api/flickr.people.getInfo.html\">a source</a> for:\n<ul>\n<li>Full Name</li>\n<li>Location</li>\n<li>Flickr Avatar</li>\n</ul>\n</li>\n</ul>\n<p>If you know any of their social networking usernames, you can:</p>\n<ul>\n<li><a href=\"http://developer.yahoo.com/mybloglog/V1/member_find_byservice.html\">find their MyBlogLog profile</a>, if they’ve linked the service to their account (<a href=\"http://mybloglog.yahooapis.com/v1/user/service/twitter/zachleat?AppId=YahooDemo&amp;format=xml\">Sample query, I added my twitter</a>). Now we have:\n<ul>\n<li>MyBlogLog Screen Name and ID, from which you get their <a href=\"http://developer.yahoo.com/mybloglog/V1/member_find_byid.html\">MyBlogLog profile</a>:\n<ul>\n<li>Nickname</li>\n<li>Picture</li>\n<li>Age</li>\n<li>Sex</li>\n<li>Location</li>\n<li>A list of tags they use to describe themselves.</li>\n</ul>\n</li>\n<li>MyBlogLog Avatar</li>\n</ul>\n</li>\n</ul>\n<p>Those are only some of the proof of concept API’s that I’ve listed here. The interesting piece of this, is that once you have a small piece of information, it <strong>opens up the door to other searches</strong>.</p>\n<p>One can only imagine how many leaves are in this tree. For example:</p>\n<ul>\n<li>\n<p>Facebook’s <a href=\"http://wiki.developers.facebook.com/index.php/Users.getInfo\">Users.getInfo</a> (<a href=\"http://wiki.developers.facebook.com/index.php/JavaScript_Client_Library\">in JavaScript</a>)</p>\n</li>\n<li>\n<p>Yahoo’s Social Tools, get an <a href=\"http://developer.yahoo.com/social/rest_api_guide/introspective-guid-resource.html\">end user’s GUID</a> and go to town on <a href=\"http://developer.yahoo.com/social/rest_api_guide/social_dir_api.html\">their profile</a>.</p>\n<ul>\n<li>Google Contacts, I didn’t even start to look through <a href=\"http://code.google.com/apis/contacts/\">their API’s</a>.<br>\nBefore you start jumping the privacy fence to a self induced heart attack, remember that <strong>all this information has been volunteered</strong> by each individual participating in each of these services. Remember, with great power comes great responsibility.</li>\n</ul>\n<p>What do you think? Scary or useful?</p>\n</li>\n</ul>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"https://www.zachleat.com/web/wp-content/uploads/2009/01/signup-form.png","linkMd5":"a6618845dc811c3e0a2ebcb6e9edd3bb","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn64@2020_3/2020/08/25/02-02-03-480_95b2b131161fc8b2.webp","destWidth":250,"destHeight":293,"sourceBytes":126220,"destBytes":8592,"author":"","articleImgCdnMap":{"https://www.zachleat.com/web/wp-content/uploads/2009/01/signup-form.png":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn64@2020_3/2020/08/25/02-02-03-480_95b2b131161fc8b2.webp"},"publishedOrCreatedDate":1598320921762},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"The JavaScript Testing Challenge Winner","link":"http://www.zachleat.com/web/javascript-tdd-winner/","description":"\n\t\t\t<p>Congratulations to <a href=\"http://twitter.com/stevelove\">Steve Love</a>, who was the first to complete <a href=\"https://www.zachleat.com/web/2010/11/13/javascript-tdd/\">The JavaScript Testing Challenge</a>.</p>\n<p><a href=\"http://tddjs.com/\"><img src=\"https://www.zachleat.com/web/wp-content/uploads/2011/02/ttdjs.png\" alt=\"\"></a></p>\n<p>He wins a copy of <a href=\"http://twitter.com/cjno\">Christian Johansen</a>‘s book, <a href=\"http://tddjs.com/\">Test-Driven JavaScript Development</a>.</p>\n<p>If you code for a living, testing will make your life easier. Even though the contest is over, I encourage you to go through the steps and complete the original challenge, if for no other reason than to see how easy it is to get a simple testing environment set up with JsTestDriver.</p>\n<p>Stay tuned for more coding challenges!</p>\n<p>Related: <a href=\"https://www.zachleat.com/web/2011/01/09/javascript-tdd-update/\">An Update to The JavaScript Testing Challenge</a></p>\n<p>Here’s Steve’s screencast (using, I assume, a mechanical keyboard?):</p>\n<p><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=9,0,115,0\" width=\"560\" height=\"345\"><param name=\"movie\" value=\"http://screenr.com/Content/assets/screenr_1116090935.swf\"><param name=\"flashvars\" value=\"i=170158\"><param name=\"allowFullScreen\" value=\"true\"><embed src=\"http://screenr.com/Content/assets/screenr_1116090935.swf\" flashvars=\"i=170158\" allowFullScreen=\"true\" width=\"560\" height=\"345\" pluginspage=\"http://www.macromedia.com/go/getflashplayer\"></object></p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"https://www.zachleat.com/web/wp-content/uploads/2011/02/ttdjs.png","linkMd5":"8c7ec7390d50149d2dab5c1a724ddefc","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn30@2020_4/2020/08/25/02-02-03-212_0ee57e6b5ff236f2.webp","destWidth":300,"destHeight":386,"sourceBytes":18004,"destBytes":21740,"author":"","articleImgCdnMap":{"https://www.zachleat.com/web/wp-content/uploads/2011/02/ttdjs.png":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn30@2020_4/2020/08/25/02-02-03-212_0ee57e6b5ff236f2.webp"},"publishedOrCreatedDate":1598320921763},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Screen Readers and Listening at the Speed of Sound","link":"http://www.zachleat.com/web/screen-readers-and-listening-at-the-speed-of-sound/","description":"\n\t\t\t<p>Here is a <a href=\"http://yuiblog.com/blog/2007/05/14/video-intro-to-screenreaders/\">presentation</a> given by a guy named Victor Tsaran on how he personally uses screen readers to browse the web. As web developers, accessibility is an important aspect of our work and cannot be ignored. How many websites have you browsed that had flash navigation? If you’re not a web developer, you need to skip ahead to time stamp 25:44 to see the mega-fast speed this guy uses the screen reader at. I couldn’t understand a single word coming out of my speaker.</p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"6cfd56415675746378c7b4f862a6c213","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921760},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"A Font Family Reunion","link":"http://www.zachleat.com/web/font-family-reunion/","description":"<p><em>Go directly to <a href=\"http://fontfamily.io/\">Font Family Reunion</a> or read more about it:</em></p> \n<p>For my last side project I decided to redo the <a href=\"https://www.zachleat.com/web/w3c-status-banners/\">iconic W3C specification status banners using CSS</a>. While that project went relatively well, with a side benefit of learning a little bit more about W3C process, one of the first questions I was asked was about the <a href=\"https://twitter.com/svgeesus/status/504262420203057153\">use of the local Gill Sans font</a> instead of a web font. I immediately wondered two things:</p> \n<ol> \n <li>How strict are the W3C brand standards?</li> \n <li>How well supported is Gill Sans across different operating system and browser combinations?</li> \n</ol> \n<p>Turns out the brand standards were not really strict, as <a href=\"https://twitter.com/svgeesus/status/506441366344568833\">Chris informed me later</a>—a fallback sans-serif webfont would work fine. For the second question, things were more ambiguous. There wasn't an easy way to lookup default font lists for different operating systems, especially not specifically for ones that needed to be available through CSS <code>font-family</code>. What I really wanted was a <a href=\"http://caniuse.com/\">caniuse.com</a> for default local fonts.</p> \n<h2 id=\"building-fontfamily.io\">Building <a href=\"http://fontfamily.io/\">fontfamily.io</a> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/font-family-reunion/#building-fontfamily.io\">#</a></h2> \n<p>I set out to build such a system. I already had a very nice head start, having built my own utility (<a href=\"https://github.com/zachleat/fontfaceonload\"><code>fontfaceonload</code></a>) to test if remote web fonts had loaded successfully. You might remember this utility from <a href=\"https://github.com/filamentgroup/a-font-garde\">my research into icon fonts</a>. It only required a few minor tweaks in order to test local fonts in addition to remote fonts. Of course, none of this is necessary if you have the CSS font loading API available to you, but I wanted to test operating system and web browsers that were older than the newly minted native API.</p> \n<p>If you’re curious how <code>fontfaceonload</code> works internally, <a href=\"https://github.com/zachleat/fontfaceonload#how-it-works\">documentation is available on GitHub</a>.</p> \n<p>But there was another hurdle. There is no API through which you can retrieve a list of all the installed fonts, so I had to compile a list manually. If you have access to the shell on the host operating system, *nix machines provide a <code>fc-list</code> command to retrieve a list of installed fonts. Also, most operating systems actually publish a <a href=\"https://github.com/zachleat/font-family-reunion/blob/master/artifacts/source-list.txt\">list of installed fonts on the web in their support pages</a>, so I compiled <a href=\"https://github.com/zachleat/font-family-reunion/blob/master/test/src/font-families.json\">one big giant list of font families</a> from a bunch of these sources.</p> \n<p>The test page then iterates through the list and tests over 1000 different font family names to see if the current browser supports them. I used <a href=\"https://www.zachleat.com/web/font-family-reunion/browserstack.com\">Browserstack</a> for most of this, as well as one of the best perks of working at <a href=\"http://filamentgroup.com/\">Filament Group</a>, a home device test lab. Running the test page on a bunch of devices and virtual machines gives us a nice list of results: the default installed fonts.</p> \n<h2 id=\"default-keywords-are-browser-madness\">Default Keywords are Browser Madness <a class=\"direct-link\" href=\"http://www.zachleat.com/web/font-family-reunion/#default-keywords-are-browser-madness\">#</a></h2> \n<p>But that’s not all. Font Family Reunion will also tell you what the five standard CSS keyword font-families are aliased to in each operating system. They are <code>serif</code>, <code>sans-serif</code>, <code>monospace</code>, and the lesser known <code>fantasy</code> and <code>cursive</code>. This is where browsers diverged from operating system standards into browser specific behavior. Browsers have made their own decisions about what the defaults should be and boy do they vary.</p> \n<p>Predictably, many browsers defer to the default web browser’s default fonts, especially on Mac OS and iOS (Safari). If you’re gonna use <a href=\"http://fontfamily.io/fantasy\"><code>font-family: fantasy</code></a> on an Apple device, it’s gonna be <a href=\"http://fontfamily.io/Papyrus\">Papyrus</a> (stylistically probably a bad choice, but at least it’s consistent).</p> \n<p>Then you open up Windows. On Windows, default fonts are a free-for-all, even between versions of their own browser, Internet Explorer.</p> \n<blockquote class=\"twitter-tweet\" data-cards=\"hidden\" lang=\"en\">\n <p>shout out to whoever changed `font-family: serif` from Times New Roman to the Korean typeface Batang in IE9 and IE10 <a href=\"http://t.co/ApjQsjXXYC\">http://t.co/ApjQsjXXYC</a></p>— Zach Leatherman (@zachleat) \n <a href=\"https://twitter.com/zachleat/status/514067972626087936\">September 22, 2014</a>\n</blockquote> \n<p><a href=\"http://fontfamily.io/fantasy\"><code>font-family: fantasy</code></a> is aliased to four different typefaces across six different browsers on Windows 7, and three different typefaces across four different browsers on Windows 8. Unless you think that Impact and Papyrus look alike (they don’t), I would stay away from <code>font-family: fantasy</code> for now.</p> \n<p><a href=\"http://fontfamily.io/cursive\"><code>font-family: cursive</code></a> is a little better, but not much. The aliases there range from <a href=\"http://fontfamily.io/Comic_Sans_MS\">Comic Sans</a> to <a href=\"http://fontfamily.io/Apple_Chancery\">Apple Chancery</a> to <a href=\"http://fontfamily.io/Snell_Roundhand\">Snell Roundhand</a>.</p> \n<p>It was also interesting to note that on Windows 7 and up, both Chrome and Opera decided to forgo the standard <a href=\"http://fontfamily.io/monospace\"><code>monospace</code></a> favorite of <a href=\"http://fontfamily.io/Courier_New\">Courier New</a> (on Windows) and instead go with <a href=\"http://fontfamily.io/Consolas\">Consolas</a>, a newer and better Microsoft creation. Given the free-for-all that is default keywords on Internet Explorer, I would have guessed that Microsoft would be more progressive with their <code>monospace</code> choice—but I’ll leave that to the missed connections section on Craigslist.</p> \n<p>The other little factoid that Font Family Reunion exposed is the Mac/Windows duel that is Helvetica/Arial and Times/Times New Roman. Did you know that on Windows, <a href=\"http://fontfamily.io/Helvetica\">Helvetica</a> is aliased to <a href=\"http://fontfamily.io/Arial\">Arial</a> but on Mac both Helvetica and Arial are available separately? Same with <a href=\"http://fontfamily.io/Times\">Times</a> (aliased to Times New Roman on Windows) and <a href=\"http://fontfamily.io/Times_New_Roman\">Times New Roman</a> (available on both). So, <a href=\"http://fontfamily.io/Helvetica,Arial\"><code>font-family: Helvetica, Arial</code></a> and <a href=\"http://fontfamily.io/Arial,Helvetica\"><code>font-family: Arial, Helvetica</code></a> operate much differently.</p> \n<p>And if all of that wasn’t confusing enough, Android tries to be tricky and uses typefaces that are not actually exposed through CSS font-family. It keeps them hidden behind aliases. <a href=\"http://fontfamily.io/Droid_Sans\">Droid Sans</a> is available as an explicit font-family name, but Droid Sans Mono (the default monospace) and Droid Serif (the default serif) are not.</p> \n<h2 id=\"a-manageable-mess\">A Manageable Mess <a class=\"direct-link\" href=\"http://www.zachleat.com/web/font-family-reunion/#a-manageable-mess\">#</a></h2> \n<p>So, what have we learned? The rules keep things pretty simple:</p> \n<ol> \n <li>Always specify a default CSS keyword fallback, don’t let the browser use its own default choice of serif (it doesn’t necessarily even match <code>font-family: serif</code>).</li> \n <li>Don’t use <code>fantasy</code> or <code>cursive</code>.</li> \n <li>Don’t go overboard with your stack. <code>font-family: Arial, \"Helvetica Neue\", Helvetica, sans-serif;</code> is the first stack listed on <a href=\"http://cssfontstack.com/\">CSSFontStack.com</a>. Running this through <a href=\"http://fontfamily.io/Arial,Helvetica_Neue,Helvetica,sans-serif\">fontfamily.io reveals</a> that Arial is used everywhere (and aliased on Android). The middle two families are never used.</li> \n</ol> \n<p>It would be interesting to test out the font-family stacks on <a href=\"http://css-tricks.com/snippets/css/font-stacks/\">CSS Tricks</a> or <a href=\"http://www.designer-daily.com/10-fonts-that-are-safe-to-use-with-css-34474\">Designer Daily</a> and see what comes out!</p> \n<p>Remember, when you’re using <code>@font-face</code> to load custom web fonts, the fallback font-family experience—what shows while the remote font is loading—is important too. Maybe you could even go without using a few custom web fonts, or not use any at all? It’s certainly worth asking the question.</p> \n<h2 id=\"go-to-your-font-family-reunion.\">Go to your <a href=\"http://fontfamily.io/\">Font Family Reunion</a>. <a class=\"direct-link\" href=\"http://www.zachleat.com/web/font-family-reunion/#go-to-your-font-family-reunion.\">#</a></h2>","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"a1eb98d4737c3fb4c7d0ad0e4b924a69","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921765},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Airing Out 2017’s Dirty Laundry","link":"http://www.zachleat.com/web/icymi/2017/","description":"<p>2017 was a year of highs and lows.</p> \n<p><em>Previously: <a href=\"https://www.zachleat.com/web/icymi/2016/\">2016</a>, <a href=\"https://www.zachleat.com/web/icymi/2015/\">2015</a>, <a href=\"https://www.zachleat.com/web/icymi/2014/\">2014</a>, <a href=\"https://www.zachleat.com/web/icymi/2013/\">2013</a></em></p> \n<p>I had an incredibly productive year of side projects, learning, and blog posts—I can attribute almost all of that rediscovered time and energy to quitting Facebook very early in the year. It’s also been amazing to see my daughter grow and learn—she turned two this year and I really love being a dad. We now have our own secret handshake and it’s my favorite thing.</p> \n<h2 id=\"dirty-laundry\">Dirty Laundry <a class=\"direct-link\" href=\"http://www.zachleat.com/web/icymi/2017/#dirty-laundry\">#</a></h2> \n<p>This year was also the year that a man who lives close to me, a man that has participated in our local development community, a man whom I have met in real life, a man with whom I’ve shaken hands, a man that I later discovered was a very public white supremacist, a man—by his own words—emboldened by shared values represented in The White House, decided to send multiple death threats to me through Twitter and other channels. The abuse was targeted towards the “feminist” organizers of NebraskaJS and NEJS CONF. To be perfectly clear, I was targeted for agreeing with the accusation that I am a feminist. <em>I am still a feminist.</em></p> \n<p>I was not the only organizer targeted. The abuse continued for about a month. <a href=\"https://medium.com/@no_violation_of_twitter_rules/abuse-98002aaf35d8\">As far as I know, to this day Twitter has taken no action in response to what happened.</a></p> \n<p>I’ve struggled with whether or not to talk about this publicly. I certainly didn’t want to call attention to it. Here we are almost 10 months later and I’m still struggling with the decision to post about it here. But as the year closed, I couldn’t help but reflect and try to take another positive away from it—lessons that I can share that might be useful for others too.</p> \n<p>Foremost, the experience gave me just a small sliver of insight into what <em>women</em> have to deal with when they exist in any public capacity online. If we want women to <em>exist</em>—we need to go the extra mile to make them feel welcome. This exaggerated but none-the-less Damore-esque poison existed in a latent form in our community for years—it almost certainly exists in your community too. As leaders and organizers we need to do the preparatory leg work to build rock-solid relationships with underrepresented community members before the poison reveals itself or the community will tear itself apart. That includes level setting expectations about acceptable behavior with an appropriately enforced code of conduct.</p> \n<figure> \n <img src=\"https://www.zachleat.com/web/img/posts/2017-icymi/feminist.jpg\"> \n  <figcaption>\n   Our first meetup back: “Good meetup tonight. Some of you understand why wearing this tonight was important to me.”\n  </figcaption> </img>\n</figure> \n<p>The experience has certainly strengthened my own resolve. It has made me realize that I need to be more outspoken as an advocate. It has also strengthened the relationships in our community. We have the <a href=\"https://twitter.com/zachleat/status/913059626018623488\">best and most supportive organizers</a>. Our members and sister city organizers continued to attend our meetup knowing what was going on behind the scenes. Venues stuck by us and helped with extra security. Nothing but love for everyone that helped—including emotional support. You all were and are <em>amazing</em>. Seriously.</p> \n<blockquote>\n <p>Just donated $5 per attendee of the last <a href=\"https://twitter.com/nebraskajs\">@nebraskajs</a> meetup to <a href=\"https://twitter.com/GirlsIncOmaha\">@GirlsIncOmaha</a>. Y’all know why. Onward, upward!</p>— \n <a href=\"https://twitter.com/zachleat/status/840223670110949376?ref_src=twsrc%5Etfw\">March 10, 2017</a>\n</blockquote> \n<p>Highs and lows, but onward and upward.</p> \n<h2 id=\"writing%2C-speaking%2C-conference-organizing\">Writing, Speaking, Conference Organizing <a class=\"direct-link\" href=\"http://www.zachleat.com/web/icymi/2017/#writing%2C-speaking%2C-conference-organizing\">#</a></h2> \n<p>This year marked my <strong>blog’s</strong> 10th anniversary. I wrote more posts this year (*<a href=\"https://www.zachleat.com/web/#2017\">23 posts</a>) than I have in any year since 2008. I did some work to <a href=\"https://www.zachleat.com/web/best-of/\">highlight the popular posts</a> on my site.</p> \n<p>I did three talks this year—by far my favorite was at <a href=\"http://css-minsk-js.by/\"><strong>CSS Minsk JS</strong></a> in Belarus. Belarus was amazing! The community there was so welcoming and really felt so similar to the community we have here in Omaha. <em>The best conferences are community conferences.</em></p> \n<p>We ran our <a href=\"https://2017.nejsconf.com/\">third <strong>NEJS CONF</strong></a> and it was one of our best. The magic theme and the amazing theater venue paired so well. Recap post is still pending but you can catch all the <a href=\"https://www.youtube.com/watch?v=WrbdNhPhkMM&amp;list=PLzcPHbGhqFeQAcdDNaaCLYeahx_223tzR\">videos online</a>! We’re already planning 2018. Follow along at <a href=\"https://twitter.com/nejsconf\">@nejsconf</a>.</p> \n<h2 id=\"projects-and-blog-posts\">Projects and Blog Posts <a class=\"direct-link\" href=\"http://www.zachleat.com/web/icymi/2017/#projects-and-blog-posts\">#</a></h2> \n<ul> \n <li>A bevy of <a href=\"https://www.zachleat.com/web/recipes/\">web font loading recipes</a> (<a href=\"https://github.com/zachleat/web-font-loading-recipes\">on GitHub</a>)</li> \n <li><a href=\"https://www.zachleat.com/web/font-loading-classes/\">PostCSS plugins to manage font loading classes</a> that have saved me so much time. Stop micromanaging your font loading CSS.</li> \n <li><a href=\"https://www.zachleat.com/web/webfont-glossary/\">The Web Font Loading Glossary</a> should help beginners to font loading with some jargon.</li> \n <li><a href=\"https://www.zachleat.com/web/fout-vs-foit/\">A visual comparison of FOIT vs. FOUT</a></li> \n <li><a href=\"https://www.zachleat.com/web/23-minutes/\">23 Minutes of Work for Better Font Loading</a> was a short post detailing some quick improvements you can make to the font loading of your site.</li> \n</ul> \n<p>I’m really far behind on my blog posts about projects. But… you get a sneak peek since you’re here. <em>(See everything first <a href=\"https://github.com/zachleat/\">on GitHub</a> or <a href=\"https://www.npmjs.com/~zachleat\">on npm</a>.)</em></p> \n<ul> \n <li>I worked on the font loading for <a href=\"https://www.smashingmagazine.com/\">smashingmagazine.com</a> (I’ll likely talk about this more).</li> \n <li><a href=\"https://github.com/zachleat/eleventy\">eleventy</a> is a static site generator.</li> \n <li><a href=\"https://github.com/filamentgroup/glyphhanger\">glyphhanger</a> helps you subset web fonts automatically.</li> \n <li><a href=\"https://github.com/filamentgroup/node-faux-pas\">node-faux-pas</a> tests a URL for <a href=\"https://www.zachleat.com/web/webfont-glossary/#font-synthesis\">faux web font rendering</a> and mismatched web font code.</li> \n <li><a href=\"http://donald-who.com/\">Donald Who?</a>. Follow Donald’s Twitter without following Donald on Twitter. See also <a href=\"https://twitter.com/realdonaldwho\">@realdonaldwho</a>. A therapeutic side project to cope with 2017. The cool thing about this project is that it’s architected as a completely static site that uploads a new static version automatically every 3 minutes. Quasi-real-time but also completely static. This was surely the catalyst for <a href=\"https://github.com/zachleat/eleventy\">eleventy</a>.</li> \n</ul> \n<h2 id=\"the-big-font-hosting-web-site\">The Big Font Hosting Web Site <a class=\"direct-link\" href=\"http://www.zachleat.com/web/icymi/2017/#the-big-font-hosting-web-site\">#</a></h2> \n<p>The most exciting thing I’m building right now is a web site with information about self-hosting web fonts with performance comparisons for loading strategies AND information about hosting with 3rd parties. Each web font will have easy code samples that you can use on your own pages! <a href=\"https://twitter.com/zachleat/status/946385112526217216\">Follow me on Twitter @zachleat for more information about this, as I’ll be iterating on it in public.</a></p> \n<h2 id=\"popular-tweets\">Popular Tweets <a class=\"direct-link\" href=\"http://www.zachleat.com/web/icymi/2017/#popular-tweets\">#</a></h2> \n<ol> \n <li><a href=\"https://twitter.com/zachleat/status/905054076408393729\"><em>“as a programmer and as a parent, I’m always…”</em></a></li> \n <li><a href=\"https://twitter.com/zachleat/status/875730854907179008\"><em>“Progressive Enhancement, in a diagram”</em></a></li> \n <li><a href=\"https://twitter.com/zachleat/status/910548190214213632\"><em>“loading six web fonts for a single typeface and…”</em></a></li> \n <li><a href=\"https://twitter.com/zachleat/status/923571836062982144\"><em>“Firebug was a watershed moment…”</em></a></li> \n <li><a href=\"https://twitter.com/zachleat/status/890242957386944516\"><em>“NOT A DRILL, <code>font-display</code> is…”</em></a></li> \n</ol> \n<!-- \n## NebraskaJS Membership\n\n<table>\n\t<thead>\n\t\t<tr>\n\t\t\t<th>Year</th>\n\t\t\t<th>Membership</th>\n\t\t\t<th>Change</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<th>2009</th>\n\t\t\t<td>Founded</td>\n\t\t\t<td></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<th>2012</th>\n\t\t\t<td>~220</td>\n\t\t\t<td></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<th>2013</th>\n\t\t\t<td>419</td>\n\t\t\t<td><em class=\"better\">(+199)</em></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<th>2014</th>\n\t\t\t<td>606</td>\n\t\t\t<td><em class=\"better\">(+187)</em></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<th>2015</th>\n\t\t\t<td>920</td>\n\t\t\t<td><em class=\"better\">(+314)</em></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<th>2016</th>\n\t\t\t<td>1127</td>\n\t\t\t<td><em class=\"better\">(+207)</em></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<th>2017</th>\n\t\t\t<td>1318</td>\n\t\t\t<td><em class=\"better\">(+191)</em></td>\n\t\t</tr>\n\t</tbody>\n</table>\n--> \n<h2 id=\"thank-you-notes\">Thank You Notes <a class=\"direct-link\" href=\"http://www.zachleat.com/web/icymi/2017/#thank-you-notes\">#</a></h2> \n<p>Thank you to all the new friends I’ve made on Twitter, at meetups, barcamps, and conferences. Y’all make it (still) worthwhile.</p> \n<p>Another huge thank you to <a href=\"https://twitter.com/nicknisi\">Nick Nisi</a> and the other <a href=\"https://www.meetup.com/nebraskajs/members/?op=leaders\">NebraskaJS organizers</a>; as well as the co-organizers of NEJS CONF: <a href=\"https://twitter.com/jerodsanto\">Jerod Santo</a>, <a href=\"https://twitter.com/jmhobbs\">John Hobbs</a>, <a href=\"https://twitter.com/l_pfeifer18\">Lindsey Pfeifer</a>, <a href=\"https://twitter.com/mattdsteele\">Matt Steele</a>, and <a href=\"https://twitter.com/sandikbarr\">Sandi Barr</a>. The best co-organizers on the planet. Thank you to everyone that put in a proposal to speak, to our wonderfully consistent sponsors, and to everyone that volunteered and attended our conference.</p> \n<p>Thank you to Filament Group. It really is a special company that understands the long arc of the web and I’m so glad to be a part of it.</p> \n<p>And lastly but most importantly to my wife and daughter: I love you both, dearly.</p>","descriptionType":"html","feedId":12519,"bgimg":"https://www.zachleat.com/web/img/posts/2017-icymi/feminist.jpg","linkMd5":"9fbf756a4c3c71009807463f885520da","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn77@2020_1/2020/08/25/02-02-04-941_6f42edb821df68e6.webp","destWidth":1080,"destHeight":1080,"sourceBytes":145114,"destBytes":125270,"author":"","articleImgCdnMap":{"https://www.zachleat.com/web/img/posts/2017-icymi/feminist.jpg":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn77@2020_1/2020/08/25/02-02-04-941_6f42edb821df68e6.webp"},"publishedOrCreatedDate":1598320921769},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"preload with font-display: optional is an Anti-pattern","link":"http://www.zachleat.com/web/preload-font-display-optional/","description":"\n\t\t\t<p>Most of the <em>quick win</em> font loading advice I’m seeing right now (and some <a href=\"https://www.zachleat.com/web/23-minutes/\">that I give out</a>) involves combining <code>preload</code> and the <code>font-display</code> CSS descriptor.</p>\n<p>Just to level-set, <code>preload</code> is a way to trigger your web font requests sooner, putting them higher in the network request waterfall. <code>font-display</code> is a way to declaratively control your font loading behavior by adding a descriptor to your <code>@font-face</code> block.</p>\n<p><em>Read more at <a href=\"https://www.zachleat.com/web/comprehensive-webfonts/\">The Comprehensive Guide to Font Loading Strategies</a></em></p>\n<p>Lately, I’ve seen a few developers recommend <code>font-display: optional</code>. <code>font-display: optional</code> puts your web fonts on the back burner and only renders them on repeat primed-cache visits. It’s a perfectly acceptable method if web fonts are lower on the priority list for your use case’s requirements. For the record, I’m not a huge fan of <code>optional</code> because I like to at least attempt to render web fonts on an empty-cache visit. <em>Caveat: in <a href=\"https://www.zachleat.com/web/the-compromise/\">“The Compromise,”</a> <code>font-display: optional</code> is emulated for browsers that do not support the CSS Font Loading API, a method to start moving away from using font loading polyfills for modern browsers.</em></p>\n<p>However, after seeing some confusion on Twitter, I think it’s probably worth noting that if you decide to use <code>font-display: optional</code>, it would be a waste of your page’s resources to also use <code>preload</code>. It won’t break anything, it’ll just trigger that web font request early (causing network congestion if you have other critical path resources that need to be fetched). An early request won’t buy you much if the web fonts aren’t going to render when they finish.</p>\n<ul>\n<li><code>preload</code> with <code>font-display: optional</code>: Not great ⚠️</li>\n<li><code>preload</code> with <code>font-display: swap</code>: Good ✅</li>\n<li><code>preload</code> with <code>font-display: fallback</code>: Good ✅</li>\n<li><code>font-display: block</code> with anything: Bad 🚫</li>\n</ul>\n<p>Hope that clears up some of the confusion!</p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"4b81b3faca228f8e8d8f64fcec504167","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921770},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Trying out a new Font Stack","link":"http://www.zachleat.com/web/a-new-font-stack/","description":"\n\t\t\t<p><em>Update: This was an April Fools’ Joke. While it was originally implemented site-wide, moving forward I’ve kept the code for this approach quarantined to this page. Don’t use this font loading strategy. Feel free to use Comic Neue though, it seems solid.</em></p>\n<p>I’ve decided to move away from my old, trusty, font stack foundation of Lato and try out a new font loading strategy with a new font stack. A few details:</p>\n<ol>\n<li>I’ve purposefully disabled the <code>sessionStorage</code> trick that optimized font loading for repeat views. This should ensure that every visitor receives a Flash of Unstyled Text, or FOUT.</li>\n<li>I’ve purposefully set a minimum FOUT delay of 3 seconds, to ensure that the FOUT is highly visible. Even if the font request finishes before 3 seconds have passed, the script will wait until the 3 second delay has completed to render the web font. This is a new strategy I’m calling <em>3G for Everyone</em>.</li>\n<li>The new system font stack is now: <code>Comic Sans MS, Chalkboard SE, sans-serif</code> (see full support on <a href=\"http://fontfamily.io/Comic_Sans_MS,Chalkboard_SE,sans-serif\">fontfamily.io</a>). Chalkboard SE was included to add support for iOS.</li>\n<li>The new webfont typeface is <a href=\"http://comicneue.com/\">Comic Neue</a>, a lovely open licensed (SIL) alternative to Comic Sans developed by <a href=\"https://twitter.com/craigrozynski\">Craig Rozynski</a>.</li>\n<li>I’m not using the latest and greatest font loading technique (which, in my opinion, is a combination of <a href=\"https://www.zachleat.com/web/critical-webfonts/\">Critical Web Fonts</a> and <a href=\"https://www.zachleat.com/web/web-font-data-uris/\">Data URIs</a>). Instead I am using the <a href=\"https://www.zachleat.com/web/foft/\">FOFT technique</a>. They’re all pretty similar to set up but the benefit to using the newest technique is that it all but eliminates FOUT (which is amazing). Given the first two points above, that is not the sort of beautiful user experience we want here.</li>\n</ol>\n<p>As you can clearly see, this technique pairs the great typography of system fonts with the beauty and control of web fonts. Hope you enjoyed it!</p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"475437c6c0de435ce55eba5278f0c9e0","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921766},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"DOMContentLoaded Inconsistencies (in Browsers and JavaScript Libraries)","link":"http://www.zachleat.com/web/domcontentloaded-inconsistencies/","description":"<p><strong>Quick Summary</strong></p> \n<ul> \n <li><em>Prototype and Dojo are the only major JavaScript frameworks that correctly time the DOMContentLoaded inside of an iframe in Internet Explorer. MooTools comes close and both YUI and jQuery both exhibit incorrect behavior.</em></li> \n <li><em>Usually, browsers that have a native DOMContentLoaded event will fire it after both JavaScript and CSS (external script, link tags) have loaded. But Opera fires prior to CSS link tags loading.</em></li> \n</ul> \n<p>We all know the problem, but we may not all call it the same thing. Every popular JavaScript library has its own name for the DOMContentLoaded event.</p> \n<table> \n <thead> \n  <tr> \n   <th>JavaScript Library</th> \n   <th>Event Name</th> \n  </tr> \n </thead> \n <tbody> \n  <tr> \n   <td>YUI</td> \n   <td><a href=\"http://developer.yahoo.com/yui/docs/YAHOO.util.Event.html#method_onDOMReady\">DOMReady</a></td> \n  </tr> \n  <tr> \n   <td>jQuery</td> \n   <td><a href=\"http://docs.jquery.com/Events/ready\">ready</a></td> \n  </tr> \n  <tr> \n   <td>MooTools</td> \n   <td><a href=\"http://mootools.net/docs/Utilities/DomReady\">domready</a></td> \n  </tr> \n  <tr> \n   <td>Prototype</td> \n   <td><a href=\"http://www.prototypejs.org/api/document/observe\">dom:loaded</a></td> \n  </tr> \n  <tr> \n   <td>Dojo</td> \n   <td><a href=\"http://api.dojotoolkit.org/jsdoc/dojo/1.2/dojo.addOnLoad\">addOnLoad</a></td> \n  </tr> \n </tbody> \n</table> \n<p>But the naming scheme isn’t the only part about this event that’s inconsistent. There are a few hacks strewn around the net that have been bastardized (read: modified to the will of library authors) into each individual framework. These have been posted time and time again, but for post completeness are the following:</p> \n<table> \n <thead> \n  <tr> \n   <th>IE DOMContentLoaded Hack</th> \n   <th>Description</th> \n  </tr> \n </thead> \n <tbody> \n  <tr> \n   <td><code><a href=\"http://javascript.nwbox.com/IEContentLoaded/\">doScroll</a></code> by Diego Perini</td> \n   <td>Uses a <code>doScroll</code> method call, which will throw an error if the <code>ondocumentready</code> event hasn’t fired on the <strong>primary document</strong> (take note of the usage of the word primary). Once <code>doScroll</code> doesn’t throw an error, it is assumed the DOM has loaded.</td> \n  </tr> \n  <tr> \n   <td><code><a href=\"http://msdn.microsoft.com/en-us/library/ms536957(VS.85).aspx\">onreadystatechange</a></code> and <code><a href=\"http://msdn.microsoft.com/en-us/library/ms534359.aspx\">readyState</a></code></td> \n   <td><code>onreadystatechange</code> <em>“fires when the state of the object has changed,”</em> and changes the <code>readyState</code> property of the object through the following states (not all apply to every type of element): <code>uninitialized</code>, <code>loading</code>, <code>loaded</code>, <code>interactive</code>, and <code>complete</code>. (source: MSDN) Usually set on the document object, or a script element (as used in the Script Defer method described next.</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://dean.edwards.name/weblog/2005/09/busted/\">Script Defer</a> by Dean Edwards</td> \n   <td>document.write’s a script tag with a <code>defer</code> attribute. Defer will cause the browser to delay execution of the script until the DOM has successfully loaded (using onreadystatechange on the script tag until its readyState is “complete”). Without defer, the browser would execute any script tag immediately.</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://dean.edwards.name/weblog/2005/09/busted2/\">HTC Behavior</a> by Dean Edwards</td> \n   <td>Much less popular approach using proprietary HTC Behavior files. Generally avoided due to the addition of an extra HTTP request to the page in order to download the external .htc file. As a side note, if using this approach, the <code><a href=\"http://msdn.microsoft.com/en-us/library/ms531021.aspx\">\"oncontentready\"</a></code> event will work better than the <a href=\"http://msdn.microsoft.com/en-us/library/ms531024.aspx\">“ondocumentready”</a> event used by Mr. Edwards.</td> \n  </tr> \n  <tr> \n   <td>Ghetto Method</td> \n   <td>Of course, the easiest way to do it is to put a script tag right above your ending <code>&lt;/body&gt;</code> tag that triggers the event manually. This really only works if you have full control of the content, and isn’t really a library solution. Worth noting though.</td> \n  </tr> \n </tbody> \n</table> \n<p><a href=\"http://zachleat.com/Projects/domcontentloaded/\"><img src=\"https://www.zachleat.com/web/wp-content/uploads/2008/12/domcontentloaded.png\" alt=\"Benchmark for Library DOMContentLoaded Implementations\" /></a></p> \n<p><a href=\"http://zachleat.com/Projects/domcontentloaded/\"><em>Benchmark for Library DOMContentLoaded Implementations</em></a></p> \n<p>I created a benchmark trying to answer the simple question: when does the DOMContentLoaded event fire? Each implementation has different effects, especially in iframes and with stylesheets.</p> \n<h2 id=\"what-works\">What Works <a class=\"direct-link\" href=\"http://www.zachleat.com/web/domcontentloaded-inconsistencies/#what-works\">#</a></h2> \n<p>The Internet Explorer hacks presented above are reliable when used on a standalone document (not inside of an iframe).</p> \n<p>Mozilla Firefox, Safari, Chrome, and Opera all contain a native DOMContentLoaded event that each framework uses to consistently fire at the correct time. So, it isn’t even worth summarizing the results for tests in every browser with a native DOMContentLoaded event, except Opera. Opera took a different design approach with their DOMContentLoaded event (certainly not wrong, just different), which we’ll analyze below.</p> \n<h3 id=\"internet-explorer-inside-an-iframe\">Internet Explorer inside an Iframe <a class=\"direct-link\" href=\"http://www.zachleat.com/web/domcontentloaded-inconsistencies/#internet-explorer-inside-an-iframe\">#</a></h3> \n<p><em>All libraries below did no branching based on IE versions, all used the same method for IE6, IE7, or IE8. I performed no tests in IE8, however.</em></p> \n<table> \n <thead> \n  <tr> \n   <th rowspan=\"2\">JavaScript Library</th> \n   <th rowspan=\"2\">Method</th> \n   <th colspan=\"4\">Waited for:</th> \n  </tr> \n  <tr> \n   <th>&lt;body&gt; &lt;script&gt;</th> \n   <th>&lt;head&gt; &lt;script&gt;</th> \n   <th>&lt;link&gt; CSS</th> \n   <th>&lt;img&gt;</th> \n  </tr> \n </thead> \n <tbody> \n  <tr> \n   <td>YUI 2.6.0</td> \n   <td>doScroll, setTimeout</td> \n   <td colspan=\"4\">Incorrect: Fires almost immediately (~20ms)</td> \n  </tr> \n  <tr> \n   <td>jQuery 1.2.6</td> \n   <td>window onload</td> \n   <td>X</td> \n   <td>X</td> \n   <td>X</td> \n   <td>X</td> \n  </tr> \n  <tr> \n   <td>Prototype 1.6.0.3</td> \n   <td>Script Defer</td> \n   <td>X</td> \n   <td>X</td> \n   <td>X</td> \n   <td></td> \n  </tr> \n  <tr> \n   <td>MooTools 1.2.1</td> \n   <td>doScroll and set innerHTML, setTimeout</td> \n   <td>*</td> \n   <td>X</td> \n   <td>X</td> \n   <td></td> \n  </tr> \n  <tr> \n   <td>Dojo 1.2.0</td> \n   <td>Script Defer</td> \n   <td>X</td> \n   <td>X</td> \n   <td>X</td> \n   <td></td> \n  </tr> \n  <tr> \n   <td><a href=\"http://javascript.nwbox.com/IEContentLoaded/\">IEContentLoaded</a></td> \n   <td>doScroll, document.onreadystatechange</td> \n   <td colspan=\"4\">Incorrect: JavaScript error.</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.thefutureoftheweb.com/blog/adddomloadevent\">addDOMLoadEvent</a></td> \n   <td>Script Defer</td> \n   <td>X</td> \n   <td>X</td> \n   <td>X</td> \n   <td></td> \n  </tr> \n </tbody> \n</table> \n<ul> \n <li><em>For some reason, not only did the MooTools library not wait for the body script to trigger DOMContentLoaded, the body script never executed at all.</em></li> \n</ul> \n<p>The <strong>most important takeaway</strong> from this blog post are the successful methods of faking DOMContentLoaded in Internet Explorer. The obvious <strong>library winners here are Prototype and Dojo</strong>, with the addDOMLoadEvent script also exhibiting correct behavior. MooTools is a close runner up, and I would be interested to find out why it didn’t execute the body script (that’s left for another day, or perhaps a generous commenter).</p> \n<h3 id=\"opera-9.6\">Opera 9.6 <a class=\"direct-link\" href=\"http://www.zachleat.com/web/domcontentloaded-inconsistencies/#opera-9.6\">#</a></h3> \n<table> \n <thead> \n  <tr> \n   <th rowspan=\"2\">JavaScript Library</th> \n   <th rowspan=\"2\">Method</th> \n   <th colspan=\"4\">Waited for:</th> \n  </tr> \n  <tr> \n   <th>&lt;body&gt; &lt;script&gt;</th> \n   <th>&lt;head&gt; &lt;script&gt;</th> \n   <th>&lt;link&gt; CSS</th> \n   <th>&lt;img&gt;</th> \n  </tr> \n </thead> \n <tbody> \n  <tr> \n   <td>YUI 2.6.0</td> \n   <td>Native DOMContentLoaded</td> \n   <td>X</td> \n   <td>X</td> \n   <td></td> \n   <td></td> \n  </tr> \n  <tr> \n   <td>jQuery 1.2.6</td> \n   <td>Native DOMContentLoaded + Code to wait for Stylesheets</td> \n   <td>X</td> \n   <td>X</td> \n   <td>X</td> \n   <td></td> \n  </tr> \n  <tr> \n   <td>Prototype 1.6.0.3</td> \n   <td>Native DOMContentLoaded</td> \n   <td>X</td> \n   <td>X</td> \n   <td></td> \n   <td></td> \n  </tr> \n  <tr> \n   <td>MooTools 1.2.1</td> \n   <td>Native DOMContentLoaded</td> \n   <td>X</td> \n   <td>X</td> \n   <td></td> \n   <td></td> \n  </tr> \n  <tr> \n   <td>Dojo 1.2.0</td> \n   <td>Native DOMContentLoaded</td> \n   <td>X</td> \n   <td>X</td> \n   <td></td> \n   <td></td> \n  </tr> \n  <tr> \n   <td><a href=\"http://javascript.nwbox.com/IEContentLoaded/\">IEContentLoaded</a></td> \n   <td>N/A to Opera</td> \n   <td>X</td> \n   <td>X</td> \n   <td>X</td> \n   <td></td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.thefutureoftheweb.com/blog/adddomloadevent\">addDOMLoadEvent</a></td> \n   <td>Native DOMContentLoaded</td> \n   <td>X</td> \n   <td>X</td> \n   <td></td> \n   <td></td> \n  </tr> \n </tbody> \n</table> \n<p>As you can see above, <strong>Opera typically will fire DOMContentLoaded prior to stylesheets loading</strong> successfully (ignoring the jQuery specific code to provide consistency cross-browser)</p> \n<p><em>Thanks to <a href=\"http://www.adamkoch.com/\">Adam Koch</a> for first pointing me in the direction of jQuery in an iframe ignoring DOMContentLoaded in IE.</em></p> \n<p><strong>Update:</strong> There is an open ticket for <a href=\"http://sourceforge.net/tracker/index.php?func=detail&amp;aid=2008289&amp;group_id=165715&amp;atid=836476\">YUI on Sourceforge</a>, and I’ve opened a ticket for <a href=\"http://dev.jquery.com/ticket/3693\">jQuery on their Trac site</a>.</p>","descriptionType":"html","feedId":12519,"bgimg":"https://www.zachleat.com/web/wp-content/uploads/2008/12/domcontentloaded.png","linkMd5":"4c44e717c6438019d21490207579dcb4","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn82@2020_3/2020/08/25/02-02-03-340_fd9a5c587e3adf20.webp","destWidth":609,"destHeight":273,"sourceBytes":20253,"destBytes":23026,"author":"","articleImgCdnMap":{"https://www.zachleat.com/web/wp-content/uploads/2008/12/domcontentloaded.png":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn82@2020_3/2020/08/25/02-02-03-340_fd9a5c587e3adf20.webp"},"publishedOrCreatedDate":1598320921762},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Web Font Anti-pattern: Data URIs","link":"http://www.zachleat.com/web/web-font-data-uris/","description":"<p>After I posted my <a href=\"https://www.zachleat.com/web/critical-webfonts/\">Critical Web Fonts</a> article on Twitter, I had an interesting conversation with a developer named <a href=\"https://twitter.com/wimleers/\">Wim Leers</a> about embedding Web Fonts as Data URIs.</p> \n<blockquote class=\"twitter-tweet\" data-conversation=\"none\" data-lang=\"en\">\n <p lang=\"en\" dir=\"ltr\"><a href=\"https://twitter.com/zachleat\">@zachleat</a> <a href=\"https://twitter.com/MarcDrummond\">@MarcDrummond</a> Why not just embed as a data URI in the critical CSS? Cached, no FOUT. Example: <a href=\"https://t.co/tqQ03G3dhf\">https://t.co/tqQ03G3dhf</a>.</p>— Wim Leers (@wimleers) \n <a href=\"https://twitter.com/wimleers/status/684874106962100224\">January 6, 2016</a>\n</blockquote> \n<p>His suggestion was to embed the font directly in a style block on the server rendered markup, something like:</p> \n<pre class=\"language-text\"><code class=\"language-text\">&lt;!doctype html&gt;<br>&lt;html lang=\"en\"&gt;<br>&lt;head&gt;<br>\t&lt;meta charset=\"utf-8\"&gt;<br>\t&lt;style&gt;<br> @font-face {<br> font-family: Open Sans;<br> src: url(\"data:font/woff;charset=utf-8;base64,…\") format(\"woff\");<br> font-weight: 400;<br> font-style: normal;<br> }<br> &lt;/style&gt;<br>&lt;/head&gt;<br>…<br>&lt;/html&gt;</br></br></br></br></br></br></br></br></br></br></br></br></br></br></code></pre> \n<p>This approach should not to be confused with the <a href=\"https://www.filamentgroup.com/lab/font-loading.html\">asynchronous <code>loadCSS</code> Data URI approach</a> documented (but deprecated) on the Filament Group blog.</p> \n<p>I’ve seen a similar variant of this Data URI approach used by <a href=\"http://alibaba.com/\">Alibaba.com</a>, although their approach used an external stylesheet rather than an inline style element. I talked a little bit about it at <a href=\"https://speakerdeck.com/zachleat/the-performance-and-usability-of-font-loading-velocity-santa-clara-2015?slide=159\">Velocity last year</a>.</p> \n<p>I consider this approach to be an anti-pattern for normal font loading scenarios for a few reasons:</p> \n<ol> \n <li>It puts a large Data URI in the critical path. Remember that CSS blocks rendering. The goal here is to avoid a Flash of Invisible Text (FOIT) and minimize our Flash of Unstyled Text (FOUT). It obviously isn’t a good tradeoff to delay the entire page render to avoid FOIT and FOUT. Since <a href=\"http://httparchive.org/interesting.php#bytesFont\">42% of web sites load more than 40KB of web font page weight</a>, many sites would need to put 40KB of Data URIs in their critical path, far exceeding the recommended 14KB window for critical content.</li> \n <li>The font format you embed is probably not optimal. If you embed a Data URI, you’ll probably embed the WOFF format to give you ubiquity (better browser support) even though the WOFF2 format usually has about a 30% smaller footprint. Embedding a single format removes the benefit of automatic format selection that a typical comma separated <code>src</code> attribute provides. You aren’t required to list only one <code>src</code> here, but for example let’s say you embed a WOFF2 format Data URI and list the WOFF format as an alternate external url in the <code>src</code> attribute. There are still quite a few modern browsers that don’t support WOFF2 and they would load that big Data URI and still have to resort to using a fallback format URL. <em>(See <a href=\"http://www.zachleat.com/web/web-font-data-uris/#appendix-1\">Appendix 1, Data URI and Fallback src</a> below.)</em></li> \n <li>Ability to cache fonts suffers. This approach worsens with repeat views because the Data URI is tightly coupled to the markup and will not be cached (unless the user visits the same destination twice).</li> \n <li>The other drawback <a href=\"https://speakerdeck.com/bramstein/web-fonts-performance?slide=103\">Bram Stein mentions in his latest presentation (and has a great waterfall showing it, too)</a>: if you have multiple web fonts, making them all Data URIs forces them to be loaded sequentially (bad) instead of in parallel (good).</li> \n</ol> \n<p><em><strong>Update</strong>: Wim Leers has since informed me that the approach he was proposing was not inlined critical CSS, but rather a blocking CSS stylesheet, a la the approach used by Alibaba and Medium. The above drawbacks still stand, save for #3. What’s more, this approach probably exacerbates drawback #1, given the performance gains we already know exist when using Critical CSS.</em></p> \n<p>For those reasons, <em>this method is considered to be an anti-pattern</em> and should not be utilized on a production site. It may seem superficially beneficial, but it’s actually <strong>bad for performance</strong>.</p> \n<p>But just for the sake of argument, let’s put it into action and see how it affects the fonts on my web site:</p> \n<p><em>(Times generated using Chrome Canary’s Developer Tools Network Throttling in Regular 3G mode)</em></p> \n<table id=\"results-default\"> \n <thead> \n  <tr> \n   <th></th> \n   <th>Default Font Loading</th> \n   <th>Roman Data URI</th> \n   <th>and Italic Data URI</th> \n   <th>and Bold Data URI</th> \n   <th>and Bold Italic Data URI</th> \n  </tr> \n </thead> \n <tbody> \n  <tr> \n   <th>Initial Render</th> \n   <td>573ms \n    <div>\n     &nbsp;\n    </div> 54KB HTML</td> \n   <td>953ms \n    <div class=\"worse\">\n     (+66%)\n    </div> 95.7KB HTML</td> \n   <td>1.27s \n    <div class=\"worse\">\n     (+121%)\n    </div> 133KB HTML</td> \n   <td>1.94s \n    <div class=\"worse\">\n     (+238%)\n    </div> 175KB HTML</td> \n   <td>2.30s \n    <div class=\"worse\">\n     (+301%)\n    </div> 212KB HTML</td> \n  </tr> \n  <tr> \n   <th>Roman Loaded</th> \n   <td>2.12s</td> \n   <td>1.01s \n    <div class=\"better\">\n     (-52%)\n    </div></td> \n   <td>1.53s \n    <div class=\"better\">\n     (-28%)\n    </div></td> \n   <td>2.03s \n    <div class=\"better\">\n     (-4%)\n    </div></td> \n   <td>2.38s \n    <div class=\"worse\">\n     (+12%)\n    </div></td> \n  </tr> \n  <tr> \n   <th>Italic Loaded</th> \n   <td>2.12s</td> \n   <td>2.05s \n    <div class=\"better\">\n     (-3%)\n    </div></td> \n   <td>1.53s \n    <div class=\"better\">\n     (-28%)\n    </div></td> \n   <td>2.03s \n    <div class=\"better\">\n     (-4%)\n    </div></td> \n   <td>2.38s \n    <div class=\"worse\">\n     (+12%)\n    </div></td> \n  </tr> \n  <tr> \n   <th>Bold Loaded</th> \n   <td>2.20s</td> \n   <td>2.11s \n    <div class=\"better\">\n     (-4%)\n    </div></td> \n   <td>2.16s \n    <div class=\"better\">\n     (-2%)\n    </div></td> \n   <td>2.03s \n    <div class=\"better\">\n     (-8%)\n    </div></td> \n   <td>2.38s \n    <div class=\"worse\">\n     (+8%)\n    </div></td> \n  </tr> \n  <tr> \n   <th>Bold Italic Loaded</th> \n   <td><em>N/A</em></td> \n   <td><em>N/A</em></td> \n   <td><em>N/A</em></td> \n   <td><em>N/A</em></td> \n   <td>2.38s</td> \n  </tr> \n </tbody> \n</table> \n<p>Interestingly enough, if you only inline the Roman version and you’re willing to sacrifice almost 400ms of extra time for initial render (wow, that is a big sacrifice), you can cut a whole second off the Roman web font rendering time. Initial render suffers even worse with a second inlined font, and if you inline more than two fonts (ignoring web font SPOF concerns) performance-wise you’re better off doing nothing (compare the 1st and 4th columns). Also note that I didn’t test repeat views in the above table because the data was conclusively negative without it.</p> \n<h2 id=\"but-wait%E2%80%A6\">But wait… <a class=\"direct-link\" href=\"http://www.zachleat.com/web/web-font-data-uris/#but-wait%E2%80%A6\">#</a></h2> \n<p>The discussion started with embedding the entire web font, but what if we apply this idea to the Critical FOFT approach? What if we only inline the critical subset font? My hunch is that the subset 11KB WOFF font file (much smaller than the 40KB average) is probably still too large to put into the critical path, but let’s test it out.</p> \n<p><em>(Times generated using Chrome Canary’s Developer Tools Network Throttling in Regular 3G mode)</em></p> \n<p><em><strong>Update March 17, 2016</strong>: Per a discussion with <a href=\"https://twitter.com/zachleat/status/710136938196443136\">@pixelambacht</a>, we were able to optimize the WOFF font file to only 5KB! I’ve updated the results below. This shaved about 5-10 more milliseconds off in the tests that I ran, so depending on your design preferences you should make your own choices about whether those optimizations are worth it.</em></p> \n<table id=\"results-foft\"> \n <caption>\n  Empty Cache Visit\n </caption> \n <thead> \n  <tr> \n   <th></th> \n   <th>Critical FOFT</th> \n   <th>Critical Roman Data URI</th> \n  </tr> \n </thead> \n <tbody> \n  <tr> \n   <th>Initial Render</th> \n   <td>570ms \n    <div>\n     &nbsp;\n    </div> 58.2KB HTML</td> \n   <td>580ms \n    <div class=\"worse\">\n     (+1.7%)\n    </div> 65.4KB HTML</td> \n  </tr> \n  <tr> \n   <th>Stage 1 Render \n    <div>\n     (Critical Roman)\n    </div></th> \n   <td>967ms</td> \n   <td>580ms \n    <div class=\"better\">\n     (-40%)\n    </div></td> \n  </tr> \n  <tr> \n   <th>Stage 2 Render \n    <div>\n     (Roman, Italic, Bold, Bold Italic)\n    </div></th> \n   <td>2.70s</td> \n   <td>2.42s \n    <div class=\"better\">\n     (-10%)\n    </div></td> \n  </tr> \n </tbody> \n</table> \n<p>Wow! No visible FOUT! This is a huge deal. The critical web font is available on first render with an empty cache on 3G. This is great! The only problem here, of course, is that for repeat views the Data URI is still inlined on the page. Let’s test that out:</p> \n<table> \n <caption>\n  Repeat Views\n </caption> \n <thead> \n  <tr> \n   <th></th> \n   <th>Critical FOFT</th> \n   <th>Critical Roman Data URI</th> \n  </tr> \n </thead> \n <tbody> \n  <tr> \n   <th>Initial Render</th> \n   <td>309ms</td> \n   <td>293ms \n    <div class=\"better\">\n     (-5.1%)\n    </div></td> \n  </tr> \n  <tr> \n   <th>Critical Roman Loaded</th> \n   <td>479ms</td> \n   <td>435ms \n    <div class=\"better\">\n     (-12%)\n    </div></td> \n  </tr> \n  <tr> \n   <th>Roman Loaded</th> \n   <td>479ms</td> \n   <td>435ms \n    <div class=\"better\">\n     (-9%)\n    </div></td> \n  </tr> \n  <tr> \n   <th>Italic Loaded</th> \n   <td>479ms</td> \n   <td>435ms \n    <div class=\"better\">\n     (-9%)\n    </div></td> \n  </tr> \n  <tr> \n   <th>Bold Loaded</th> \n   <td>479ms</td> \n   <td>435ms \n    <div class=\"better\">\n     (-9%)\n    </div></td> \n  </tr> \n  <tr> \n   <th>Bold Italic Loaded</th> \n   <td>479ms</td> \n   <td>435ms \n    <div class=\"better\">\n     (-9%)\n    </div></td> \n  </tr> \n </tbody> \n</table> \n<p>Times look marginally better here too. Huh. I think I’m gonna roll with this approach on my website and see how it plays out live. Thanks for the discussion Wim! I guess I learned here that just because something is an anti-pattern doesn’t mean you should throw the baby out with the bath water. You might get some benefit from using a piece of the approach. Data URI Critical FOFT!</p> \n<div id=\"appendix-1\" style=\"margin-top: 8em\"></div> \n<h2 id=\"appendix-1%2C-data-uri-and-fallback-src\">Appendix 1, Data URI and Fallback src <a class=\"direct-link\" href=\"http://www.zachleat.com/web/web-font-data-uris/#appendix-1%2C-data-uri-and-fallback-src\">#</a></h2> \n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"highlight-line\"><span class=\"token atrule\"><span class=\"token rule\">@font-face</span></span> <span class=\"token punctuation\">{</span></span><br><span class=\"highlight-line\">\t<span class=\"token comment\">/* In many browsers it loads the giant Data URI but isn’t able to use it */</span></span><br><mark class=\"highlight-line highlight-line-active\">\t<span class=\"token property\">src</span><span class=\"token punctuation\">:</span> <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span>\"data:font/woff2;charset=utf-8;base64,…\"<span class=\"token punctuation\">)</span></span> <span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"woff2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span> /path/to/webfont.woff <span class=\"token punctuation\">)</span></span> <span class=\"token function\">format</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"woff\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></mark><br><span class=\"highlight-line\"><span class=\"token punctuation\">}</span></span></br></br></br></code></pre> \n<div class=\"retweettoshare\"> \n <h3 class=\"retweettoshare_title\">Retweet to share this post</h3> \n <div class=\"retweettoshare_widget\"> \n  <blockquote class=\"twitter-tweet\" data-lang=\"en\">\n   <p lang=\"en\" dir=\"ltr\">★ Web Font Anti-pattern: Data URIs: <a href=\"https://t.co/518QDCoh2W\">https://t.co/518QDCoh2W</a> (or is it??)</p>— Zach Leatherman (@zachleat) \n   <a href=\"https://twitter.com/zachleat/status/709374507350249472\">March 14, 2016</a>\n  </blockquote> \n </div> \n</div>","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"ed66c03ecbbf75d4eee3a2d82ba8d864","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921767},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"NEJS CONF 2018","link":"http://www.zachleat.com/web/nejsconf/2018/","description":"\n\t\t\t\t<p><em>This content lives somewhere else. It was originally posted at: <a href=\"https://2018.nejsconf.com/\">https://2018.nejsconf.com/</a></em></p>\n\t\t\t\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"3f77e96694561af7556d8a59e0ae8375","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921771},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Changelog #166, NEJS CONF 2015","link":"http://www.zachleat.com/web/changelog-podcast/","description":"\n\t\t\t<p><a href=\"https://changelog.com/166/\">Listen to the Interview on changelog.com</a> (1:08:50) <span class=\"tag audio\">Audio</span></p>\n<blockquote>\n<p>#166: JavaScript in the Wild at NEJS Conf with Nick, Zach and Jerod. Our guests this week are Zach Leatherman, Nick Nisi, and Jerod Santo, 3 of 6 organizers behind NEJS Conf.</p>\n</blockquote>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"a16a5a77716ce8ccc7e00deced49ed3e","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921765},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Online Movie Rental Review &#8211; Amazon Unbox","link":"http://www.zachleat.com/web/online-movie-rental-review-amazon-unbox/","description":"\n\t\t\t<p>Renting movies online. Steve Jobs was hilariously excited about his new Apple TV product and being able to rent movies online and stream them directly to your television. So, with all this movie-watching titillation, I decided to check out if the hubbub was actually worthy of my attention. Turns out, not so much.</p>\n<p>Prior to deciding which movie rental service to use, I googled to find the main competitors. Apparently they are:</p>\n<ul>\n<li><a href=\"http://www.cinemanow.com/\">CinemaNow</a></li>\n<li><a href=\"http://www.movielink.com/\">Movielink</a></li>\n<li><a href=\"http://www.apple.com/itunes/store/movies.html\">iTunes Movies</a> (Ugh, what a name)</li>\n<li><a href=\"http://www.amazon.com/Unbox-Video-Downloads/b?ie=UTF8&amp;node=16261631\">Amazon Unbox</a></li>\n<li><a href=\"http://www.netflix.com/\">Netflix</a> (Barely)</li>\n</ul>\n<p>As of right now, I am not concerned with playing these movies on my television or any portable device. All I want to do is save myself a trip to the video store. Upon going to the CinemaNow and Movielink websites, they were both advertising the movie I wanted to rent on their home pages: Bourne Ultimatum. iTunes Movies didn’t even have the title — it would appear that they’re severely lacking in library quantity right now. But after a little bit more review reading, I finally found Amazon Unbox. Of course, I gravitated towards this service since I already had a consumer relationship with Amazon, and don’t want to spread my credit information all over the web. And it appeared that they had what I needed — the Bourne Ultimatum, the PC viewing experience, and an non-exorbitant price tag, at $3.99. More than ideal, but tonight I considered the trade off between not having to leave my house and letting Amazon use my bandwidth fair enough (although in a normal state, I would not consider $3.99 to be a fair price when the rental price is the same at the brick and mortar store, which should by all means include the cost of the building and the purchase of the actual DVD title I was carrying out of the store).</p>\n<p>So, considering my past dealings with Amazon, I went with their service. They already had all my information and renting the DVD was almost too easy (I don’t like the one click purchasing). To my surprise and disappointment, however, I have yet to start watching my movie 35 minutes after renting it. That’s, in fact, why I am here writing this review. I’m killing time. I realized upon launching the client is that it <strong>requires a download time of 90 minutes at 240 KB/s</strong> (average)! What??? What year is this? That’s almost 1.2 GB of movie! This isn’t P2P, this is an actual product that I spent money on. CinemaNow, MovieLink, and iTunes movies all claim to have pseudo-instant-play, which allows you to start watching the movie immediately after purchase (with a little bit of buffering, of course). Even <a href=\"http://www.netflix.com/\">Netflix </a> has pseudo-instant-play, with it’s online viewable library of pre-1990′s classics (and not much else – let me tell you; Netflix definitely wants you to rent their DVDs in the mail, their online library is pathetic).</p>\n<p>So, if you’re sitting at home by yourself, with at least $4 on your credit card, a broadband internet connection at your fingertips, Windows XP or Vista on your computer browsing with Internet Explorer and the willingness to download and install a proprietary client, and you don’t mind giving away your dignity and any self respect you have going against the ideals of capitalism and the reward a good product should receive by creating usable and <em>non-eye-gougable value</em> for the consumer in the form of a good trade off between hard earned money and the warm friendly glow of an entertaining movie, I would say that renting movies online is a great way to spend an evening. However, if you’re capable of sensing the least amount of dripping sarcasm from a well intentioned but entirely too wordy sentence, you’d be like me and wish you’d saved your money, because I still have 30 minutes to wait until my damn movie starts.</p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"127fcdaea762781128b64a61f938e7c5","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921761},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Eleventy Quick Tip №8: Trigger a Netlify Build Every Day with IFTTT","link":"http://www.zachleat.com/web/eleventy-quicktip-8/","description":"\n\t\t\t<p>Run your Eleventy build every day to update “static data” on your site.</p>\n<p><em>Originally posted at: <a href=\"https://www.11ty.io/docs/quicktips/netlify-ifttt/\">https://www.11ty.io/docs/quicktips/netlify-ifttt/</a></em></p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"f6f08835c0b983c21e2d2d90fdd98638","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921771},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"CSS3 Job Transition","link":"http://www.zachleat.com/web/css3-job-transition/","description":"\n\t\t\t<p>I’m extremely excited to announce that I have accepted a full time position with <a href=\"http://filamentgroup.com/\">Filament Group</a>. I will be working alongside web developer titans of industry <a href=\"http://twitter.com/toddmparker\">Todd Parker</a>, <a href=\"http://twitter.com/scottjehl\">Scott Jehl</a>, <a href=\"http://twitter.com/wilto\">Mat ‘Wilto’ Marquis</a>, <a href=\"http://twitter.com/pattytoland\">Patty Toland</a>, and <a href=\"http://twitter.com/maggiewachs\">Maggie Costello Wachs</a>.</p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">#zachleat</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token property\">transition-property</span><span class=\"token punctuation\">:</span> employment<span class=\"token punctuation\">;</span><br>  <span class=\"token property\">transition-delay</span><span class=\"token punctuation\">:</span> 1209600s<span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 14d */</span><br><span class=\"token punctuation\">}</span></code></pre>\n<p>If you’ve been living under a block-level element and aren’t familiar with Filament Group, I’m sure you’re familiar with a few of their contributions to the web development world. They’re well known for their advocacy and real world application of development practices that are important for the future of the web: Accessibility, Progressive Enhancement, and Responsive Design. They’ve literally <a href=\"http://filamentgroup.com/dwpe/\">written the book on Progressive Enhancement</a>, and their recent redesign of the <a href=\"http://bostonglobe.com/\">Boston Globe</a> was one of the first major large scale implementations of Responsive Design. If that weren’t enough, they are also leading the development of the <a href=\"http://jquerymobile.com/\">jQuery Mobile</a> project.</p>\n<p>Woooooo!</p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"4202c82be9c4d800f936e403680a99ae","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921763},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Spicy fonts and static sites 🌶️—JS Party Episode #79","link":"http://www.zachleat.com/web/jsparty/","description":"\n\t\t\t<p>Listen to the Interview (1:06:38) <span class=\"tag audio\">Audio</span> on:</p>\n<ul>\n<li><a href=\"https://changelog.com/jsparty/79\">changelog.com</a></li>\n</ul>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"3a41662f143ff74c476bba566fe4dbea","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921771},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"A Love Letter to Filament Group","link":"http://www.zachleat.com/web/filament-group/","description":"\n\t\t\t<p>It is with great sadness that I must announce that these next two weeks will be my last as a member of <a href=\"https://www.filamentgroup.com/\"><picture><source type=\"image/webp\" srcset=\"https://www.zachleat.com/img/d38346fb-72.webp 72w\"><img alt=\"filamentgroup’s Avatar\" src=\"https://www.zachleat.com/img/d38346fb-72.jpeg\" width=\"72\" height=\"72\" class=\"z-avatar\" loading=\"lazy\"></picture>Filament Group</a>.</p>\n<p>Filament Group, without a doubt, changed my life in the best way and I am so very grateful to have been a part of it for seven and a half years.</p>\n<p>Filament Group is truly unique in that the company offers what can only be described as super powers when you’re building for the web. When Robin Rendle eloquently says that <a href=\"https://css-tricks.com/no-absolutely-not/\">“what you need to build a great website is restraint”</a>, I simultaneously couldn’t agree more and can’t think of anyone who walks this walk better.</p>\n<p>Filament Group’s DNA <em>is</em> the web at all levels and building productively for the web is what they do. Their specialty has always been front of the front end on the web but they've never limited themselves to that definition. Should designers code? Should coders design? These questions have always seemed irrelevant in this environment. Those focused in code have always been relentlessly curious about how to improve their own design skills and learn from knowledgeable designers. The designers do the same with code.</p>\n<p>The focus is on making quality products, a mission to <strong>make a web that works for everyone</strong>. Considerations that stagnate in backlogs as mere afterthoughts at other companies are first class priorities at Filament Group:</p>\n<ul>\n<li>High performance experiences on varying network and hardware capabilities.</li>\n<li>A keen respect for prioritizing Accessibility up front, including respecting User Preferences like reducing on-screen motion, use of color and contrast, font sizes, among others.</li>\n<li>A pragmatic and inclusive take on Browser Support.</li>\n<li>Support for a variety of simultaneous input modes: keyboard, touch, mouse, voice, etc.</li>\n<li>Understanding that solutions must go with the grain of the web and not against it, even if that means a little leniency from the requirements.</li>\n<li>A unique understanding of how all of these factors blend together to facilitate some incredibly creative Responsive Design implementations.</li>\n</ul>\n<p>Consider how productive one can be when working with people that truly understand the benefits of working with the grain of the web and not against it. How far could you go if you didn’t have to proselytize these fundamentals? What interesting next-level problems could you solve?</p>\n<p>If you ever need their services, I highly recommend that you <a href=\"https://www.filamentgroup.com/workwithus/\">get in touch with their amazingly talented team</a>.</p>\n<p><span class=\"nowrap\"><a href=\"https://twitter.com/toddmparker\"><picture><source type=\"image/webp\" srcset=\"https://www.zachleat.com/img/3a999723-72.webp 72w\"><img alt=\"toddmparker’s Avatar\" src=\"https://www.zachleat.com/img/3a999723-72.jpeg\" width=\"72\" height=\"72\" class=\"z-avatar\" loading=\"lazy\"></picture>Todd</a></span>, <span class=\"nowrap\"><a href=\"https://twitter.com/pattytoland\"><picture><source type=\"image/webp\" srcset=\"https://www.zachleat.com/img/32c8d7a4-72.webp 72w\"><img alt=\"pattytoland’s Avatar\" src=\"https://www.zachleat.com/img/32c8d7a4-72.jpeg\" width=\"72\" height=\"72\" class=\"z-avatar\" loading=\"lazy\"></picture>Patty</a></span>, <span class=\"nowrap\"><a href=\"https://twitter.com/maggiewachs\"><picture><source type=\"image/webp\" srcset=\"https://www.zachleat.com/img/f9bc8eac-72.webp 72w\"><img alt=\"maggiewachs’s Avatar\" src=\"https://www.zachleat.com/img/f9bc8eac-72.jpeg\" width=\"72\" height=\"72\" class=\"z-avatar\" loading=\"lazy\"></picture>Maggie</a></span>, <span class=\"nowrap\"><a href=\"https://twitter.com/scottjehl\"><picture><source type=\"image/webp\" srcset=\"https://www.zachleat.com/img/ed5463c1-72.webp 72w\"><img alt=\"scottjehl’s Avatar\" src=\"https://www.zachleat.com/img/ed5463c1-72.jpeg\" width=\"72\" height=\"72\" class=\"z-avatar\" loading=\"lazy\"></picture>Scott</a></span>, and emeritus <span class=\"nowrap\"><a href=\"https://twitter.com/johnbender/\"><picture><source type=\"image/webp\" srcset=\"https://www.zachleat.com/img/ed7db326-72.webp 72w\"><img alt=\"johnbender’s Avatar\" src=\"https://www.zachleat.com/img/ed7db326-72.jpeg\" width=\"72\" height=\"72\" class=\"z-avatar\" loading=\"lazy\"></picture>John</a></span>, <span class=\"nowrap\"><a href=\"https://twitter.com/jefflembeck/\"><picture><source type=\"image/webp\" srcset=\"https://www.zachleat.com/img/86b26c32-72.webp 72w\"><img alt=\"jefflembeck’s Avatar\" src=\"https://www.zachleat.com/img/86b26c32-72.jpeg\" width=\"72\" height=\"72\" class=\"z-avatar\" loading=\"lazy\"></picture>Jeff</a></span>, <span class=\"nowrap\"><a href=\"https://twitter.com/wilto\"><picture><source type=\"image/webp\" srcset=\"https://www.zachleat.com/img/1b28bbc3-72.webp 72w\"><img alt=\"wilto’s Avatar\" src=\"https://www.zachleat.com/img/1b28bbc3-72.jpeg\" width=\"72\" height=\"72\" class=\"z-avatar\" loading=\"lazy\"></picture>Mat</a></span> and <a href=\"https://twitter.com/Aetherpoint\"><picture><source type=\"image/webp\" srcset=\"https://www.zachleat.com/img/99b155af-72.webp 72w\"><img alt=\"Aetherpoint’s Avatar\" src=\"https://www.zachleat.com/img/99b155af-72.jpeg\" width=\"72\" height=\"72\" class=\"z-avatar\" loading=\"lazy\"></picture>Andrew</a>: I have learned so much from you all. Your relentless work ethic and incredibly high standard of quality is nothing short of inspiring. It truly has been a pleasure.</p>\n<p><a href=\"https://www.filamentgroup.com/\"><img src=\"https://www.zachleat.com/img/fg-logo.svg\" alt=\"Filament Group\" style=\"max-width: 22em\"></a></p>\n<ul>\n<li><a href=\"https://www.filamentgroup.com/\"><strong>filamentgroup.com</strong></a></li>\n</ul>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"27504379fa6ba5cadb2a1d14c28f914b","bgimgJsdelivr":"","metaImg":"","author":"","articleImgCdnMap":{"https://www.zachleat.com/img/d38346fb-72.jpeg":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn48@2020_5/2020/08/25/02-02-21-071_91d9f715db3604d2.webp","https://www.zachleat.com/img/3a999723-72.jpeg":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn55@2020_1/2020/08/25/02-02-19-961_fa892c5fa39f7863.webp","https://www.zachleat.com/img/32c8d7a4-72.jpeg":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn8@2020_3/2020/08/25/02-02-21-443_7425da9c1e339d08.webp","https://www.zachleat.com/img/f9bc8eac-72.jpeg":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn27@2020_6/2020/08/25/02-02-21-002_54d3195f6176387c.webp","https://www.zachleat.com/img/ed5463c1-72.jpeg":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn27@2020_4/2020/08/25/02-02-19-116_dbede12eb6b078b1.webp","https://www.zachleat.com/img/ed7db326-72.jpeg":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn84@2020_3/2020/08/25/02-02-16-470_0e829006f08efe2c.webp","https://www.zachleat.com/img/86b26c32-72.jpeg":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn83@2020_5/2020/08/25/02-02-16-075_b76cfe37b420ed36.webp","https://www.zachleat.com/img/1b28bbc3-72.jpeg":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn43@2020_5/2020/08/25/02-02-19-051_7e53b528737aa48e.webp","https://www.zachleat.com/img/99b155af-72.jpeg":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn16@2020_2/2020/08/25/02-02-20-441_46fc36fe9f346913.webp","https://www.zachleat.com/img/fg-logo.svg":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn76@2020_3/2020/08/25/02-02-18-221_2afa9ec6440f3ccf.svg"},"publishedOrCreatedDate":1598320921772},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Writing a Front End Engineer&#8217;s Resume (or CV)","link":"http://www.zachleat.com/web/resume/","description":"\n\t\t\t<p><em>In the United States, we usually call this document a resume, but it would appear that the international term is actually CV. There are differences, but the tips used here can be applied to both.</em></p>\n<p>Everyone is trying to sell something nowadays, and the most important product you can sell is yourself. My high school counselor used to tell all of her students that same advice, and unfortunately most of them became hookers. But if you’re not into prostitution, by now you’ve probably realized why so many people have said that blogs are <a href=\"http://www.darowski.com/tracesofinspiration/2007/03/06/the-blog-is-the-new-resume/\">the</a> <a href=\"http://bokardo.com/archives/the-blog-is-the-new-resume/\">new</a> <a href=\"http://greengaloshes.cc/2007/04/the-blog-as-the-new-resume/\">resume</a>. It’s true – I’ve had a few pretty meaty hooks dangled in front of my fish brain since I started this web site, and a lot of large companies are using blogs as a means of finding new talent.</p>\n<p>But a blog will only get you in the front door, many employers still want to see a real resume prior to entry into the screening process. So, why not kick your resume up a notch? Let’s iron its pages, shave its hairy regions, and spray some web-based musk on that bad boy.</p>\n<p><strong>Tips for Putting your Resume on the Web</strong></p>\n<ol>\n<li>\n<p>Don’t use anything that generates code (that means no DreamWeaver or heaven forbid, Microsoft Word). You want your “view source” to look like a marine’s hair cut: everything should be indented uniformly.</p>\n</li>\n<li>\n<p>Sprinkle some microformats in there! There is even a specific <a href=\"http://microformats.org/wiki/hresume\">hresume</a> microformat. Some other good microformats to use are: <a href=\"http://microformats.org/wiki/hcard\">hcard</a> (like a personal business card, but can also be used to describe an organization as well), <a href=\"http://microformats.org/wiki/hcalendar\">hcalendar</a> (for any dates, or date ranges: like when you were employed), <a href=\"http://gmpg.org/xfn/\">XFN</a> (to describe relationships between people, think references), <a href=\"http://microformats.org/wiki/adr\">adr</a> (for addresses).<br>\nOf course, the good part about microformats it that there is overlap between them. hcard uses adr and hcalendar, and hresume uses hcard, etc.</p>\n<p>Some social web sites have already provided some microformats that you can use as a starting point: <a href=\"http://www.linkedin.com/pub/7/b8a/237\">Linked-in has an hresume</a> for every profile, and <a href=\"http://twitter.com/zachleat\">twitter has a hcard</a> that you can pilfer.</p>\n</li>\n<li>\n<p>Add a favicon. As the <a href=\"http://developer.yahoo.com/performance/rules.html#favicon\">Yahoo Performance team suggests</a>, the browser is still going to request one, even if one isn’t in the markup, so you might as well have one.</p>\n</li>\n<li>\n<p>Pick your DOCTYPE carefully. Make sure it’s not one of the “loose” ones, for obvious prostitution-based reasons described above — the stricter the better. Whatever DOCTYPE you decide to use, make sure your markup validates properly. No mistakes here. I chose to serve my document using HTML 4.01 Strict as text/html with UTF-8 encoding.</p>\n</li>\n<li>\n<p>Your handwritten CSS should validate as well. If you have some library code that misses the mark in a few places, I think that’s okay. Remember: <em>a good coder codes, a great coder re-uses.</em></p>\n</li>\n<li>\n<p>Make sure it looks good when your future employer prints out 500 copies to pass around the company as an example of the best resume he’s ever laid his eyes on. Add a media=”print” stylesheet to beautify the print layout.</p>\n</li>\n<li>\n<p>Make sure it all validates, loads fast, and doesn’t have any broken links. I like to use YSlow to test my page weight and see my ranking.</p>\n</li>\n</ol>\n<p>Bombs away! Those are the tips I followed to create <a href=\"http://www.zachleat.com/resume/\">my web-based resume</a>. It has a YSlow score of 89, is 17.2K in size with 5 HTTP requests, and validates as <a href=\"http://validator.w3.org/check?uri=http://www.zachleat.com/resume/\">HTML 4.01 Strict</a>, and my non-library CSS is valid <a href=\"http://jigsaw.w3.org/css-validator/validator?uri=http://www.zachleat.com/resume\">CSS 2.1</a> (I’m also using YUI CSS for layout, which doesn’t validate).</p>\n<p>Once you’re finished, hresume even has a <a href=\"http://microformats.org/wiki/hresume-examples-in-wild\">public wiki page</a> where they let you post your resume. Have fun, or get rich trying!</p>\n<p><strong>Update</strong>: grammar nazi cullination.</p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"63dfb001e6be05fde1f1766104cbeb23","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921762},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Et tu, X-UA-Compatible?","link":"http://www.zachleat.com/web/et-tu-x-ua-compatible/","description":"<p><a href=\"http://www.flickr.com/photos/jedibfa/5067647765/\"><img src=\"https://www.zachleat.com/web/wp-content/uploads/2011/02/juliusceasar.jpg\" alt=\"\" /></a></p> \n<p>Or, the story of how I learned that <strong>the X-UA-Compatible header/meta tag is NOT the same as the Internet Explorer 8 Compatibility View button</strong>.</p> \n<p><em>Please note that the following information may be common knowledge, as this behavior is as described in the pre-requisite <a href=\"http://blogs.msdn.com/b/ie/archive/2010/10/19/testing-sites-with-browser-mode-vs-doc-mode.aspx\">Microsoft documentation</a> on the subject. However, I feel this behavior to be unintuitive and requiring more explicit communication.</em></p> \n<p>Library developers live in a much different world from full stack developers. If you’re supplying code that will be used by others, you’re faced with a different set of priorities. As such, the library I manage provides certain user agent sniffing conveniences, namely classes to replace CSS Hacks (similar to the approach used in HTML Boilerplate to provide ie6 through ie9 classes on the <code>&lt;html&gt;</code> tag) and JavaScript booleans (similar to <a href=\"http://api.jquery.com/jQuery.browser\"><code>jQuery.browser</code></a>). Much like jQuery, <a href=\"http://docs.jquery.com/Release:jQuery_1.3#No_More_Browser_Sniffing\">these conveniences remain</a> for backwards compatibility.</p> \n<p>The purpose of this post is in fact not to convince you whether or not User Agent Sniffing is a <a href=\"http://infrequently.org/2011/01/cutting-the-interrogation-short/\">good tradeoff for performance</a> (even though, in some cases I believe it is), but instead to provide further evidence that using the User Agent alone is an unreliable method to determine the rendering engine of the web browser, and must be complemented with other approaches. <strong>If you’re going to sniff, you have to sniff harder.</strong></p> \n<h2 id=\"x-ua-compatible-breaks-navigator.useragent\">X-UA-Compatible Breaks navigator.userAgent <a class=\"direct-link\" href=\"http://www.zachleat.com/web/et-tu-x-ua-compatible/#x-ua-compatible-breaks-navigator.useragent\">#</a></h2> \n<p>Microsoft defines two terms to help communicate how new versions of Internet Explorer render a page: Browser Mode and Document Mode. Browser Modes are determined prior to any request made to the server (and cannot be changed by web developers). If the user triggers an IE7 Browser Mode using the Compatibility View Button, a new request is made to the server. Document Modes are determined in the page response.</p> \n<h3 id=\"compatibility-view-button-flow\">Compatibility View Button Flow <a class=\"direct-link\" href=\"http://www.zachleat.com/web/et-tu-x-ua-compatible/#compatibility-view-button-flow\">#</a></h3> \n<ol> \n <li>User presses the Compatibility View button. This changes the Browser Mode.</li> \n <li>Request sent (since the Browser Mode has changed, <strong>the User-Agent is also changed</strong> to MSIE 7.0)</li> \n <li>Response from Server</li> \n <li>Document Mode determined</li> \n</ol> \n<h3 id=\"x-ua-compatible-flow\">X-UA-Compatible Flow <a class=\"direct-link\" href=\"http://www.zachleat.com/web/et-tu-x-ua-compatible/#x-ua-compatible-flow\">#</a></h3> \n<ol> \n <li>Internet Explorer uses the default Browser Mode (newest available in the browser)</li> \n <li>Request sent (Browser Mode determines User-Agent to send, probably MSIE 8.0 or MSIE 9.0)</li> \n <li>Response from Server. Content may include X-UA-Compatible <code>&lt;meta&gt;</code> tag and/or Response HTTP headers such as X-UA-Compatible).</li> \n <li>Document Mode determined, using X-UA-Compatible and the DocType</li> \n</ol> \n<p>If a X-UA-Compatible header is sent back in the Compatibility View flow, it will take precedence but obviously will not change the request User-Agent HTTP header.</p> \n<p>It’s important to note that since the request has already gone before the Document Mode is determined, the Document Mode has no bearing on the request User-Agent HTTP header. While Microsoft probably could have changed <code>navigator.userAgent</code> to be different than the request User-Agent HTTP header, I feel they made the correct decision is keeping the same value. <code>navigator.userAgent</code> remains the same value as the request User-Agent HTTP header in IE8, but Microsoft changed this behavior in IE9. In IE9, <code>navigator.userAgent</code> represents the document mode, not the request User-Agent header.</p> \n<p><img src=\"https://www.zachleat.com/web/wp-content/uploads/2011/02/Screen-shot-2011-02-06-at-1.27.14-PM.png\" alt=\"\" title=\"Screenshot of Microsoft Documentation\" /></p> \n<p>The User Agent isn’t the only thing being determined. The prerequisite Microsoft documentation states that the Browser Mode determines the User Agent, Default Document Mode, and Conditional Comments. This is not accurate. <strong>The Document Mode determines which Conditional Comments execute, not the Browser Mode.</strong></p> \n<p>Also note that using IE’s <strong>Conditional Compilation</strong> feature to return the version of JScript will be the same, independent of Document Mode.</p> \n<pre><code>var ie = /*@cc_on @_jscript_version @*/0;\n// Always returns 5.8 in IE8, independent of Document Mode.\n</code></pre> \n<p><em>Example Code from <a href=\"https://github.com/scottjehl/Respond/blob/aedc482328a4cbd9d74c5de178eb2cb974b67af5/respond.src.js#L171\">Scott Jehl’s respond.js</a></em></p> \n<h3 id=\"test-pages\">Test Pages <a class=\"direct-link\" href=\"http://www.zachleat.com/web/et-tu-x-ua-compatible/#test-pages\">#</a></h3> \n<p>Try the following tests in Internet Explorer 8 to test for yourself.</p> \n<ul> \n <li><a href=\"https://www.zachleat.com/test/x-ua-compatible/index.html\">Stock Page</a></li> \n <li><a href=\"https://www.zachleat.com/test/x-ua-compatible/ie7.html\">Setting X-UA-Compatible IE=7 using a Meta Tag</a> (or <a href=\"https://www.zachleat.com/test/x-ua-compatible/emulateie7.html\">IE=EmulateIE7</a>)</li> \n <li><a href=\"https://www.zachleat.com/test/x-ua-compatible/header-ie7/ie7.html\">Setting X-UA-Compatible IE=7 using an HTTP Header</a> (or <a href=\"https://www.zachleat.com/test/x-ua-compatible/header-emulateie7/emulateie7.html\">IE=EmulateIE7</a>)</li> \n</ul> \n<h2 id=\"what-does-this-mean%3F\">What Does This Mean? <a class=\"direct-link\" href=\"http://www.zachleat.com/web/et-tu-x-ua-compatible/#what-does-this-mean%3F\">#</a></h2> \n<p>If you use X-UA-Compatible to change the Document Mode/IE Trident rendering engine, any client side code relying on <code>navigator.userAgent</code> (such as jQuery.browser) or server side code relying on the User-Agent HTTP Header will be incorrect. Since we can’t rely on the User Agent, what can we use? Microsoft does provide a <code>document.documentMode</code> integer we could use, pretty easily. But, I think there is a better approach.</p> \n<p>Consider <a href=\"https://gist.github.com/527683\">a great piece of JavaScript written by James Padosley</a> to find Internet Explorer version numbers using Conditional Comments. His code seemed to meld perfectly with the above realization that the Document Mode determines Conditional Comment execution. We can use this to fix <code>jQuery.browser</code>.</p> \n<pre><code>// Place this script after jQuery, but before any code that uses jQuery.browser\n// Modified to only test for IE 6 , since jQuery only supports 6 \n(function($)\n{\n    if(!$.browser.msie) {\n        return;\n    }\n\n    var v = 5,\n        div = document.createElement('div'),\n        all = div.getElementsByTagName('i');\n\n    while (\n        div.innerHTML = '',\n        all[0]\n    );\n\n    $.browser.version = v;\n})(jQuery);\n</code></pre> \n<p>Now, of course, since we’re creating nodes there is a small performance penalty in using the above script over Regular Expressions and document.documentMode. I feel this to be worthwhile, given that I’ve been <a href=\"https://www.zachleat.com/web/2008/10/19/jquery-bug-ie-reports-incorrect-browserversion/\">burned by Internet Explorer’s version number before</a>. But next time, I reserve the right to choose performance over simplicity.</p>","descriptionType":"html","feedId":12519,"bgimg":"https://www.zachleat.com/web/wp-content/uploads/2011/02/juliusceasar.jpg","linkMd5":"1ffc0d2dd1ab3095a6d3f9fa1f17148a","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn61@2020_2/2020/08/25/02-02-02-755_1f8bec4ae4d0f23d.webp","destWidth":375,"destHeight":500,"sourceBytes":183130,"destBytes":63112,"author":"","articleImgCdnMap":{"https://www.zachleat.com/web/wp-content/uploads/2011/02/juliusceasar.jpg":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn61@2020_2/2020/08/25/02-02-02-755_1f8bec4ae4d0f23d.webp","https://www.zachleat.com/web/wp-content/uploads/2011/02/Screen-shot-2011-02-06-at-1.27.14-PM.png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn42@2020_3/2020/08/25/02-02-10-479_e082936930a2eccf.webp"},"publishedOrCreatedDate":1598320921763},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"“A letter about Google AMP”","link":"http://www.zachleat.com/web/amp-letter/","description":"\n\t\t\t<p>On Twitter alone, AMP and I have a <a href=\"https://twitter.com/zachleat/status/908417702183735297\">long</a> <a href=\"https://twitter.com/zachleat/status/941375406095167489\">sordid</a> <a href=\"https://twitter.com/zachleat/status/950419903328215040\">history</a>.</p>\n<p><em>So many people</em> have lodged complaints about the AMP project and its influence on the web that it isn’t worth rehashing them here. <a href=\"https://adactio.com/journal/tags/amp\">Jeremy Keith</a>, <a href=\"https://ethanmarcotte.com/wrote/amplified/\">Ethan Marcotte</a>, <a href=\"https://timkadlec.com/tags/amp/\">Tim Kadlec</a>, and <a href=\"https://github.com/ampproject/amphtml/issues/13597\">Luke Stevens</a> are a few that immediately come to mind.</p>\n<p>In that vein, a broad coalition of web developers are collectively organizing around <a href=\"http://ampletter.org/\">“A letter about Google AMP”</a>. This is an open letter written to document and formalize complaints and opposition to AMP’s negative influence on the open web. If you’re interested, I recommend <a href=\"https://github.com/amp-letter/amp-letter\">adding your signature too</a>!</p>\n<p class=\"primarylink\"><a href=\"http://ampletter.org/\"><em>“A Letter about Google AMP”</em></a></p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"11fe999d310e08da7cac7da27a054ffd","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921770},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Eleventy Crash Course with Nick and Zach—NebraskaJS Omaha","link":"http://www.zachleat.com/web/nebraskajs-eleventy/","description":"\n\t\t\t<p><a href=\"https://www.youtube.com/watch?v=DC5fP_8Q8uQ\">Watch the talk on YouTube</a> (1:03:42) (or embedded below)</p>\n<div class=\"fullwidth\"><div class=\"fluid-width-video-wrapper\"><iframe class=\"youtube-player\" src=\"https://www.youtube.com/embed/DC5fP_8Q8uQ\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\"></iframe></div></div>\n<ul>\n<li>Check out the <a href=\"https://www.meetup.com/nebraskajs/events/dxndfdybccbkb/\">event on Meetup</a></li>\n</ul>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"f44f09aeda77b0a8d2d6de833857c3ad","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921772},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Nursery Rhyme Code Poem [CSS]","link":"http://www.zachleat.com/web/nursery-rhyme-code-poem-css/","description":"\n\t\t\t<p>Code Poems are fun! The trick is to take a <a href=\"http://en.wikipedia.org/wiki/List_of_nursery_rhymes_in_English\">nursery rhyme</a> (but really, it could be any commonplace work of writing – Famous Speeches, Bible Verses, Famous Quotes, etc.), and then turn it into pseudocode. The code must follow both the programming or markup language you’re using and the rhyme as closely as possible. See how precise you can make your rhyme fit. I accept critiques and suggestions for improving me rhyme code (or you could just rewrite my rhyme as you see fit).</p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">#theChurch</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><br><span class=\"token selector\">#theChurch #theSteeple</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><br><span class=\"token selector\">#theChurch .door[state=\"open\"] .people</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">visibility</span><span class=\"token punctuation\">:</span> visible<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><br><span class=\"token selector\">#theChurch #theParson</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><br><span class=\"token selector\">#theChurch > .upstairs #theParson:active</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> block<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><br><span class=\"token selector\">#theChurch #theParson:lang(prayers)</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> block<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span></code></pre>\n<p><em>The above code poem is released under the BSD license.</em> To use in production environment without error, do not include an element with an id attribute of “theChurch”. Obviously I’m kidding, don’t use this code. Not even for enterprise software.</p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"685da9c3f550122ac25296dcb335090d","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921761},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"23 Minutes of Work for Better Font Loading","link":"http://www.zachleat.com/web/23-minutes/","description":"<p>Last night I hopped on Twitter after my daughter went to sleep with a little bit of time to kill before a 9 PM <a href=\"https://twitter.com/nejsconf\">NEJS CONF</a> 2018 planning meeting. What greeted me was perhaps the most tailored, best targetted content I’ve seen on the platform since Donald’s Twitter account was deactivated for a blissful 11 minutes.</p> \n<h2 id=\"8%3A29-pm%2C-31-minutes-to-meeting\">8:29 PM, 31 minutes to meeting <a class=\"direct-link\" href=\"http://www.zachleat.com/web/23-minutes/#8%3A29-pm%2C-31-minutes-to-meeting\">#</a></h2> \n<blockquote class=\"twitter-tweet\" data-conversation=\"none\" data-lang=\"en\">\n <p lang=\"en\" dir=\"ltr\">i need to figure out that font situation. i really should be making someone load all that nonsense</p>— jenn-bit art (@jennschiffer) \n <a href=\"https://twitter.com/jennschiffer/status/932798087462088704?ref_src=twsrc%5Etfw\">November 21, 2017</a>\n</blockquote> \n<p><a href=\"https://www.youtube.com/watch?v=-rPEguSf35c\">I can do that! I can do that! Move move move move, I can do that I can do that!</a></p> \n<h2 id=\"8%3A33-pm%2C-27-minutes-to-meeting\">8:33 PM, 27 minutes to meeting <a class=\"direct-link\" href=\"http://www.zachleat.com/web/23-minutes/#8%3A33-pm%2C-27-minutes-to-meeting\">#</a></h2> \n<p>To confirm that code changes I made would be helpful, I asked:</p> \n<blockquote class=\"twitter-tweet\" data-conversation=\"none\" data-lang=\"en\">\n <p lang=\"en\" dir=\"ltr\">do u accept pull requests</p>— Zach Leatherman (@zachleat) \n <a href=\"https://twitter.com/zachleat/status/932799222847606785?ref_src=twsrc%5Etfw\">November 21, 2017</a>\n</blockquote> \n<p>She replied quickly with a confirmation.</p> \n<h2 id=\"8%3A37-pm%2C-23-minutes-to-meeting\">8:37 PM, <em>23 minutes</em> to meeting <a class=\"direct-link\" href=\"http://www.zachleat.com/web/23-minutes/#8%3A37-pm%2C-23-minutes-to-meeting\">#</a></h2> \n<blockquote class=\"twitter-tweet\" data-conversation=\"none\" data-lang=\"en\">\n <p lang=\"en\" dir=\"ltr\">hell yeah, fonts</p>— Zach Leatherman (@zachleat) \n <a href=\"https://twitter.com/zachleat/status/932800010923671553?ref_src=twsrc%5Etfw\">November 21, 2017</a>\n</blockquote> \n<p>Work was underway. I have not worked on this project before. I didn’t know anything about the project’s structure or build process—but as luck would have it, they were all tools I’d used before. I forked the repo. I pulled the code down using git. I set up a virtual host for localhost previews. It was all happening. I did a project search for <code>@font-face</code> and found two: <code>8bit Art Sans</code> and <code>VT323</code>.</p> \n<h3 id=\"let%E2%80%99s-make-some-changes\">Let’s make some changes <a class=\"direct-link\" href=\"http://www.zachleat.com/web/23-minutes/#let%E2%80%99s-make-some-changes\">#</a></h3> \n<ol> \n <li>Delete all of the web font files that aren’t TTF files from the project—we’re gonna make our own.</li> \n <li>Use <a href=\"https://github.com/filamentgroup/glyphhanger\"><code>glyphhanger</code></a> to subset the fonts automatically to the code points used on the actual site (while also including ASCII). I ran: \n  <ul> \n   <li><code>glyphhanger http://make8bitart.localhost/ --US_ASCII --subset=assets/fonts/*.ttf</code></li> \n   <li>Note that <code>glyphhanger</code> outputs optimized subset WOFF2, WOFF (with zopfli encoding for more savings), and TTF files.</li> \n  </ul> </li> \n <li>Update the <code>@font-face</code> CSS blocks to point to the new subset files and remove all of the other formats—we’re only using WOFF2, WOFF, and TTF here. Maybe <code>glyphhanger</code> needs a feature to help with this step too!</li> \n <li>Add <code>font-display: swap</code> for full FOUT on supporting browsers (just Chrome right now but support will grow over time).</li> \n <li><code>preload</code> both web fonts to make requests start earlier and reduce FOIT and FOUT: \n  <ul> \n   <li><code>&lt;link rel=\"preload\" href=\"FILE_PATH.woff2\" as=\"font\" type=\"font/woff2\" crossorigin&gt;</code></li> \n  </ul> </li> \n <li>Update the Service Worker to cache the WOFF2 versions only, since <a href=\"https://caniuse.com/#feat=serviceworkers\">Service Worker</a> is a browser support subset of <a href=\"https://caniuse.com/#feat=woff2\">WOFF2</a>.</li> \n <li>Check it all in and make a <a href=\"https://github.com/jennschiffer/make8bitart/pull/62\">pull request</a></li> \n</ol> \n<figure> \n <img src=\"https://www.zachleat.com/web/img/posts/make8bitart/glyphhanger.png\" alt=\"\" class=\"primary\"> \n  <figcaption>\n   <code>glyphhanger</code> command output, automatically subsetting both web fonts.\n  </figcaption> </img>\n</figure> \n<h2 id=\"9%3A01-pm%2C--1-minute-to-meeting\">9:01 PM, -1 minute to meeting <a class=\"direct-link\" href=\"http://www.zachleat.com/web/23-minutes/#9%3A01-pm%2C--1-minute-to-meeting\">#</a></h2> \n<p>Whew. Well—okay, so I was a little late to the meeting but the <a href=\"https://github.com/jennschiffer/make8bitart/pull/62\">pull request</a> was opened at 9:00 PM on the dot so I’m counting it.</p> \n<blockquote class=\"twitter-tweet\" data-cards=\"hidden\" data-lang=\"en\">\n <p lang=\"en\" dir=\"ltr\"><a href=\"https://twitter.com/jennschiffer?ref_src=twsrc%5Etfw\">@jennschiffer</a> here you go, a bunch of web font optimizations for make8bitart: <a href=\"https://t.co/G9VBC8TZ2Y\">https://t.co/G9VBC8TZ2Y</a></p>— Zach Leatherman (@zachleat) \n <a href=\"https://twitter.com/zachleat/status/932806240685690880?ref_src=twsrc%5Etfw\">November 21, 2017</a>\n</blockquote> \n<h2 id=\"performance\">Performance <a class=\"direct-link\" href=\"http://www.zachleat.com/web/23-minutes/#performance\">#</a></h2> \n<p><em>(Fast 3G network throttled, Chrome)</em></p> \n<p>Let’s see how the page loads before and after we made changes.</p> \n<h3 id=\"before\">Before <a class=\"direct-link\" href=\"http://www.zachleat.com/web/23-minutes/#before\">#</a></h3> \n<ul> \n <li>First paint: 773ms (screenshots do not include network time)</li> \n <li>Page weight: 296 KB (dang, Jenn—<em>nice work</em>)</li> \n <li>Font weight (TTF and WOFF): 7.1 KB + 84.8KB = 91.1 KB</li> \n <li>FOIT: \n  <ul> \n   <li>773ms -&gt; 1.91s for <code>8bit Art Sans</code>: 1.137s total</li> \n   <li>773ms -&gt; 3.72s for <code>VT323</code>: 2.947s total (just under that 3s FOIT timeout window)</li> \n  </ul> </li> \n <li>FOUT: none</li> \n</ul> \n<h3 id=\"after\">After <a class=\"direct-link\" href=\"http://www.zachleat.com/web/23-minutes/#after\">#</a></h3> \n<ul> \n <li>First paint: 763ms (similar)</li> \n <li>Page weight: 215 KB</li> \n <li>Font weight (WOFF2): 4.2 KB + 6.5 KB = 10.8 KB <strong>(11% of original, savings of 80.3KB)</strong></li> \n <li>FOIT: <strong>none</strong>, <code>font-display</code> would have kicked in if <code>preload</code> hadn’t beat it to the punch.</li> \n <li>FOUT: \n  <ul> \n   <li><strong>none</strong> for <code>8bit Art Sans</code>, <code>preload</code> is killing it.</li> \n   <li><strong>none</strong> for <code>VT323</code>, <code>preload</code> is killing it.</li> \n  </ul> </li> \n</ul> \n<h2 id=\"recap\">Recap <a class=\"direct-link\" href=\"http://www.zachleat.com/web/23-minutes/#recap\">#</a></h2> \n<p>Font loading can be daunting and even a little confusing at times. If you’re feeling overwhelmed by the topic, the above steps can serve as a shortlist of things you can quickly do to make an improvement to your site. It doesn’t have to be the best—just make it better!</p> \n<p>Jenn really has a nice site here. It was simple, easy to work on, and to be fair—fast already. But for web fonts, there were a few changes that helped. We saved 80KB of web font content by subsetting. We’ve <strong>eliminated FOUT and FOIT</strong> on a Fast 3G connection using <code>preload</code>. If on a slower connection, we’re using <code>font-display</code> in browsers that support it to FOUT instead of FOIT.</p> \n<p>Not bad for <em>23 minutes</em> worth of work.</p>","descriptionType":"html","feedId":12519,"bgimg":"https://www.zachleat.com/web/img/posts/make8bitart/glyphhanger.png","linkMd5":"466cac76ffae2f34478e1cc90729fd9a","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn41@2020_6/2020/08/25/02-02-02-808_8ef2501b42229ea0.webp","destWidth":2352,"destHeight":458,"sourceBytes":172127,"destBytes":137884,"author":"","articleImgCdnMap":{"https://www.zachleat.com/web/img/posts/make8bitart/glyphhanger.png":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn41@2020_6/2020/08/25/02-02-02-808_8ef2501b42229ea0.webp"},"publishedOrCreatedDate":1598320921769},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Lazy Loading Web Fonts Is Probably Not What You Want","link":"http://www.zachleat.com/web/lazy-loading-webfonts/","description":"<p>One month ago <a href=\"https://meowni.ca/posts/web-fonts/\">Monica Dinculescu wrote a blog post entitled <em>Web fonts, boy, I don’t know</em></a>. In it, she writes:</p> \n<blockquote> \n <p>Now think about fonts: is the critical path showing text, or styling it? I’d argue that unless your app is in the 1% it’s-all-a-magical-visual-experience bucket (in which case this post is not for you), it’s probably trying to communicate some content, and ugly content (that you prettify after) is better than no content.</p> \n</blockquote> \n<blockquote> \n <p>(Real talk: if you don’t think rendering text is a critical path, you’re whack and we need to have a chat.)</p> \n</blockquote> \n<p><strong>YES.</strong> Love it. 👍👍👍</p> \n<p>And on the Flash of Invisible Text (FOIT), which she refers to as FOIC (they are synonymous):</p> \n<blockquote> \n <p>I hate this with the fire of a thousand suns, because instead of looking at actual content, I’m looking at bullets and underlines and random text you forgot to style.</p> \n</blockquote> \n<p><strong>Yes again</strong>—kindred spirits here. We need to get web fonts off the critical rendering path.</p> \n<p>I also love the nod to <code>font-display</code> (praise be to <code>font-display</code>) and Chrome for reducing their Flash of Unstyled Text (FOUT) timeout on 2G from 3 seconds to 0 seconds. In Monica’s post she refers to this as FOUC<a href=\"http://www.zachleat.com/web/lazy-loading-webfonts/#note-1\" class=\"notes_link\" id=\"link-note-1\">1</a> (again, synonymous).</p> \n<p>Lots of great stuff in Monica’s post. However, in the introduction, she writes:</p> \n<blockquote> \n <p>Anyway, the thing about 2G is that I fully understand that it will take me 10 seconds to load a page. What sucks is the fresh rage of the following 4 seconds where instead of content I get phantom underlines, waiting for a slightly-different-sans-serif to download. Listen: it doesn’t have to be this way. You can lazy load your font.</p> \n</blockquote> \n<p>Hmm, alarm bells are starting to go off. Before I continue on, I want to say that I have an incredible amount of respect for Monica’s work. She builds <a href=\"https://twitter.com/notwaldorf/status/801138269719171073\">really great things</a>. I don’t want this post to feel like I’m singling her out—she does amazing work. The reason I’m writing this post: I’ve seen this exact mistake made by many before.</p> \n<p>One of the most confusing parts about web font loading is that the time in which the web font starts to download (and makes the text invisible using FOIT) requires more conditions to be satisfied than just a valid <code>@font-face</code> block. Whether or not a web font will download depends on a few things:</p> \n<ol> \n <li>The obvious, a valid <code>@font-face</code> block (with a <code>src</code> format that the browser supports)</li> \n <li>A node attached to the document that uses the same <code>font-family</code>.</li> \n <li>In WebKit and Blink, that attached node must also have content (not be empty).</li> \n <li>If the <code>@font-face</code> has a <code>unicode-range</code> descriptor (in <a href=\"http://caniuse.com/#feat=font-unicode-range\">browsers that support it</a>), the content must fall inside the declared Unicode range.</li> \n</ol> \n<p>The <code>font-weight</code>, <code>font-style</code>, and <code>font-stretch</code> descriptors inside the <code>@font-face</code> block do <em>not</em> need to match. But do note that if they don’t match you may see faux-bolding or faux-italic under certain conditions. Faux-bolding or faux-italic can be controlled with <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/font-synthesis\">font-synthesis</a> which is only supported in Firefox. So actually, when I said that it can be controlled—I meant that it can’t be controlled.</p> \n<p>Once all of these conditions are met, the browser will start downloading your font and render any matching content invisible per the browser’s default FOIT. <strong>The only time you see invisible text on the screen is when the web fonts are downloading.</strong> The stylesheet/<code>@font-face</code> block is only one piece of the puzzle—and it only happens before a FOIT would ever begin.</p> \n<p>So lazy loading your stylesheet (even if you do so asynchronously) only delays the initial time before your FOIT will begin. It doesn’t shorten the FOIT. It doesn’t minimize the time spent looking at invisible fonts. Lazy loading is actually much worse for readers than doing nothing—a reader could be a few paragraphs deep into your content before the text becomes invisible!</p> \n<p>If you’re looking for a better web font loading solution, I’ve written a <a href=\"https://www.zachleat.com/web/comprehensive-webfonts/\">Comprehensive Guide to Font Loading Strategies</a> which includes a bunch of different font loading approaches (that range from the simple to advanced). If you’re feeling overwhelmed, just go with the <a href=\"https://www.zachleat.com/web/comprehensive-webfonts/#fout-class\">FOUT with a Class</a> approach.</p> \n<h3 id=\"addendum\">Addendum <a class=\"direct-link\" href=\"http://www.zachleat.com/web/lazy-loading-webfonts/#addendum\">#</a></h3> \n<ol class=\"notes\"> \n <li class=\"notes_note\" id=\"note-1\">FOUC also refers to the scenario when your page renders before your CSS has successfully applied so I think it’d be better to stick with FOUT to avoid confusion. <a href=\"http://www.zachleat.com/web/lazy-loading-webfonts/#link-note-1\">Jump to original reference</a>.</li> \n</ol> \n<p>A big thank you for <a href=\"https://twitter.com/notwaldorf/\">Monica Dinculescu</a> for reviewing this post before publication and giving her blessing to post it!</p> \n<div class=\"retweettoshare\"> \n <h3 class=\"retweettoshare_title\">Retweet to share this post</h3> \n <div class=\"retweettoshare_widget\"> \n  <blockquote class=\"twitter-tweet\" data-lang=\"en\">\n   <p lang=\"en\" dir=\"ltr\">★ Lazy Loading Web Fonts Is Probably Not What You Want <a href=\"https://t.co/B6ffIrk8mG\">https://t.co/B6ffIrk8mG</a></p>— Zach Leatherman (@zachleat) \n   <a href=\"https://twitter.com/zachleat/status/804654337087700992\">December 2, 2016</a>\n  </blockquote> \n </div> \n</div>","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"04b81c020b321464b23aad8cf08066a6","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921767},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Tool or Die, a Web Developer’s Workflow","link":"http://www.zachleat.com/web/tool-or-die/","description":"<p>This is a talk I gave at <a href=\"http://www.nebraskacodecamp.com/Sessions/6\">Nebraska Code Camp 2013</a>.</p> \n<div class=\"fluid-width-video-wrapper\"> \n <iframe width=\"420\" height=\"315\" src=\"https://www.youtube.com/embed/NkVmhe-vvAo\" frameborder=\"0\" allowfullscreen=\"\"></iframe> \n</div> \n<blockquote> \n <p>“Tool and die makers are a class of machinists who work primarily in toolroom environments—…often in an environment with flexible, semipermeable boundaries from production work.”</p> \n <p>These are the people that make the tools to make the products. This was the environment I grew up in—watching my father work as a tool and die maker. He could make anything! But more importantly, he knew the value of good tools—even if you had to construct them yourself.</p> \n <p>Tools are important and tooling for Web Development is improving! I’ll go through a few of my favorites: Node.js, grunt.js, npm, yepnope, SASS, grunticon, Browser devtools, Testing tools, and others.</p> \n</blockquote> \n<h2 id=\"watch-on-youtube\"><a href=\"http://www.youtube.com/watch?v=NkVmhe-vvAo\">Watch on YouTube</a> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/tool-or-die/#watch-on-youtube\">#</a></h2> \n<h2 id=\"view-the-slides\"><a href=\"http://www.zachleat.com/toolordie/start-here.html\">View the Slides</a> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/tool-or-die/#view-the-slides\">#</a></h2> \n<h2 id=\"fork-the-slides-on-github\"><a href=\"https://github.com/zachleat/ToolOrDie\">Fork the Slides on GitHub</a> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/tool-or-die/#fork-the-slides-on-github\">#</a></h2> \n<h2 id=\"but-you-don%E2%80%99t-have-to-take-my-word-for-it\">But You Don’t Have to Take My Word For It <img src=\"https://www.zachleat.com/web/img/readingrainbow.png\" alt=\"Reading Rainbow Logo\"> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/tool-or-die/#but-you-don%E2%80%99t-have-to-take-my-word-for-it\">#</a></img></h2> \n<p>Cory House was quick off the blocks with a <a href=\"http://www.bitnative.com/2013/03/17/nebraska-code-camp-2013-lessons-learned/\">review of all the talks he attended</a>:</p> \n<blockquote> \n <p>Zach laid out his presentation in a unique way, relying totally on hand-made lean HTML markup that slowly blossomed as he walked us through topics. I really enjoyed this iterative and novel approach – it was the perfect choice for such a markup heavy session.</p> \n</blockquote>","descriptionType":"html","feedId":12519,"bgimg":"https://www.zachleat.com/web/img/readingrainbow.png","linkMd5":"3427e786524ff908ed72c41995401a37","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn33@2020_2/2020/08/25/02-02-02-633_29bfdf0a4d54afe8.webp","destWidth":79,"destHeight":35,"sourceBytes":3856,"destBytes":1356,"author":"","articleImgCdnMap":{"https://www.zachleat.com/web/img/readingrainbow.png":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn33@2020_2/2020/08/25/02-02-02-633_29bfdf0a4d54afe8.webp"},"publishedOrCreatedDate":1598320921764},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Architecture Choices: Callbacks and Events in JavaScript","link":"http://www.zachleat.com/web/architecture-choices-callbacks-and-events-in-javascript/","description":"\n\t\t\t<p><em>Warning: Blog Post written for Beginner and Intermediate JavaScript Developers</em></p>\n<p>Like any well intentioned programmer, you’re writing reusable code in JavaScript. Maybe it’s a simple widget, maybe it’s a higher level plug-in for your favorite JavaScript library. But now you want to provide a mechanism for your friendly neighborhood developer to extend your code by hooking into it with a little bit of code of their own. How do you accomplish this?</p>\n<p>Generally, it can be done one of two ways:</p>\n<ul>\n<li>A callback function</li>\n<li>A custom event</li>\n</ul>\n<p>A callback function is a function passed into your code as an argument that will be executed at the time the library code specifies. For instance, callback functions are usually supplied for for Ajax XmlHttpRequest’s to execute, one callback if the Ajax Request is successful, and another on failure. See the following code as an example:</p>\n<p>End-Developer’s Code:</p>\n<pre><code> $.ajax({\n   type: &quot;POST&quot;,\n   url: &quot;some.php&quot;,\n   data: &quot;name=John&amp;location=Boston&quot;,\n   success: function(msg){\n     alert( &quot;Data Saved: &quot; + msg );\n   }\n });\n</code></pre>\n<p>Library Code (from jQuery):</p>\n<pre><code>// taken out of context, just know that s stands for the options object passed into $.ajax() above.\nif ( s.success )\n  s.success( data, status );\n</code></pre>\n<p>In the above code example taken straight from the <a href=\"http://docs.jquery.com/Ajax/jQuery.ajax#options\">jQuery documentation</a>, the success key of the object being passed into the ajax() function is a callback function. It will be executed after the Ajax request has successfully completed.</p>\n<p>The other mechanism you can use for controlling dependent function execution is a custom event. Custom events provide more flexability because they use the publish/subscribe mechanism. That means, instead of the library author deciding how many callbacks he or she is going to allow you to pass into their method as arguments, he or she will just trigger a custom event, which will fire all functions the end-developer has said they want to subscribe to that event. See the following example from the jQuery documentation.</p>\n<p>End-Developer’s Code:</p>\n<pre><code>$(document).bind(&quot;myCustomEvent&quot;, function(e, msg){\n   alert( &quot;Data Saved: &quot; + msg );\n});\n$(document).bind(&quot;myCustomEvent&quot;, function(e, msg){\n   alert( &quot;More Data Saved: &quot; + msg );\n});\n// We can subscribe as many functions as we want to myCustomEvent.\n</code></pre>\n<p>Library Code:</p>\n<pre><code>// again, no context here\n$(document).trigger(&quot;myCustomEvent&quot;, [ &quot;My Message&quot; ]);\n</code></pre>\n<p>As you can see above, custom events are much more extensible and customizable to your needs. Want to attach 10 functions to myCustomEvent? Sure, go right ahead. Want to try to attach 10 callbacks to the ajax success method above, that’s going to be a bit more work. The benefit to using callbacks lies in their disposability and isolation. Perhaps you don’t want to publish to the world when your Ajax Request completes — maybe you just want to handle the completion and be done with it.</p>\n<p>Let’s Review.</p>\n<p><strong>Callback Functions</strong>: Private Disposable – Limited by Design of Parent Code (Number of callbacks)<br>\n<strong>Custom Events</strong>: Extensible (Any number of functions attached) – Public – Not Disposable (Functions stay attached after execution, and continue to fire when triggered)</p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"dd45fbd2d39aaa02b426f81fba4fb238","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921761},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Dear IE6: Please Cache my Images.","link":"http://www.zachleat.com/web/dear-ie6-please-cache-my-images/","description":"\n\t\t\t<p>A few months ago, I took on a new role at <a href=\"http://www.unionpacific.jobs/careers/explore/prof/index.shtml\">Union Pacific Railroad</a> as the lead architect for an internal project: a Union Pacific UI Library used in our IT department on all new web-based projects.  Based on <a href=\"http://jquery.com/\">jQuery</a>, it is similar to a project like <a href=\"http://ui.jquery.com/\">jQuery UI</a>, but it has a few more components and they’re branded to our color scheme and programmed to our usability requirements.</p>\n<p>The project has allowed me to expand my knowledge of browser quirks, improving my frontend-fu with every closed support ticket.  What does that mean for you?  More blogs posts.  Learn from my mistakes (and from those I’ve inherited).</p>\n<p>This week presented an interesting, albeit decreasingly relevant scenario, where a customer was seeing performance problems when loading a simple web page in Internet Explorer 6.  The only hint to the root cause was a claim that he witnessed “400 items remaining” in his status bar.  Naturally, this took awhile, but at least we had somewhere to start: Apache access logs.</p>\n<p>Consider the following (jQuery) code to <strong>add three new images</strong> to the page using JavaScript:</p>\n<pre><code>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Strict//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd&quot;&gt;\n&lt;html&gt;\n    &lt;head&gt;\n    &lt;script type=&quot;text/javascript&quot; src=&quot;jquery-1.2.6.min.js&quot;&gt;&lt;/script&gt;\n    &lt;style type=&quot;text/css&quot;&gt;\n    img.bacon { width: 100px; height: 67px; background-image: url(bacon.png); }\n    &lt;/style&gt;\n   &lt;/head&gt;\n    &lt;body&gt;\n        &lt;script type=&quot;text/javascript&quot;&gt;\n        jQuery(function() {\n          jQuery('body').append('&lt;img src=&quot;spacer.png&quot; class=&quot;bacon&quot;/&gt;');\n          jQuery('body').append('&lt;img src=&quot;spacer.png&quot; class=&quot;bacon&quot;/&gt;');\n          jQuery('body').append('&lt;img src=&quot;spacer.png&quot; class=&quot;bacon&quot;/&gt;');\n        });\n        &lt;/script&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n<p>Note how each image being added dynamically has a <strong>background-image</strong> as well.</p>\n<p>In a <strong>normal</strong> web browser (read: Internet Explorer 7+, Firefox *), this would result in the following Apache <code>access.log</code> (with an empty browser cache) with only <strong>4 HTTP requests</strong> (ignoring favicon.ico, which is irrelevant to this study):</p>\n<blockquote>\n<p>127.0.0.1 – - [18/Oct/2008:22:59:09 -0500] “GET /ie6cache/ HTTP/1.1″ 200 657</p>\n<p>127.0.0.1 – - [18/Oct/2008:22:59:09 -0500] “GET /ie6cache/jquery-1.2.6.min.js HTTP/1.1″ 200 55774</p>\n<p>127.0.0.1 – - [18/Oct/2008:22:59:09 -0500] “GET /ie6cache/spacer.png HTTP/1.1″ 200 207</p>\n<p>127.0.0.1 – - [18/Oct/2008:22:59:09 -0500] “GET /ie6cache/bacon.png HTTP/1.1″ 200 5416</p>\n</blockquote>\n<p>In Internet Explorer 6, however, this is the resulting Apache <code>access.log</code> (empty browser cache) with <strong>8 HTTP requests</strong>:</p>\n<blockquote>\n<p>127.0.0.1 – - [18/Oct/2008:22:57:48 -0500] “GET /ie6cache/ HTTP/1.1″ 200 657</p>\n<p>127.0.0.1 – - [18/Oct/2008:22:57:48 -0500] “GET /ie6cache/jquery-1.2.6.min.js HTTP/1.1″ 200 55774</p>\n<p>127.0.0.1 – - [18/Oct/2008:22:57:48 -0500] “GET /ie6cache/spacer.png HTTP/1.1″ 200 207</p>\n<p>127.0.0.1 – - [18/Oct/2008:22:57:48 -0500] “GET /ie6cache/spacer.png HTTP/1.1″ 200 207</p>\n<p>127.0.0.1 – - [18/Oct/2008:22:57:48 -0500] “GET /ie6cache/bacon.png HTTP/1.1″ 200 5416</p>\n<p>127.0.0.1 – - [18/Oct/2008:22:57:48 -0500] “GET /ie6cache/bacon.png HTTP/1.1″ 200 5416</p>\n<p>127.0.0.1 – - [18/Oct/2008:22:57:48 -0500] “GET /ie6cache/spacer.png HTTP/1.1″ 200 207</p>\n<p>127.0.0.1 – - [18/Oct/2008:22:57:48 -0500] “GET /ie6cache/bacon.png HTTP/1.1″ 200 5416</p>\n</blockquote>\n<p>When a web browser parses your markup and sees three image tags with identical src attributes, it makes only one HTTP request to the server for that image, and the rest of the images are loaded from the local web browser cache (no more HTTP requests are made).  This is standard behavior for all modern web browsers.  But in IE6, as you can see from the above log, made 3 requests to the server for both <code>spacer.png</code> and <code>bacon.png</code>.  Why?</p>\n<p>Turns out there are two independent issues at play here:</p>\n<ol>\n<li>\n<p>The classic <em><a href=\"http://www.mister-pixel.com/#Content__state=is_that_simple\">IE6 background-image flicker</a></em> problem.  This has been documented extensively, and the problem is that IE6 bypasses its local web browser cache for any image requests made for CSS background-images inserted on the page dynamically.  The good news for this one is that the fix is a simple one.</p>\n<pre><code>if(jQuery.browser.msie &amp;&amp; parseInt(jQuery.browser.version, 10) == 6) {\n  try {\n    document.execCommand(&quot;BackgroundImageCache&quot;, false, true);\n  } catch(err) {}\n}\n</code></pre>\n<p>Note the simple check for IE 6 execution only.  This is optional, but keep in mind that this problem is not present in IE7+.  During your testing, also keep in mind that Mister Pixel reports (and I can confirm) that once you run this command, this setting <strong>will persist in your browser</strong>, even if you empty your cache and remove the code from your scripts.  You’ll need to close your browser window to reset the setting to default.</p>\n<p><em>See also <a href=\"http://dean.edwards.name/my/flicker.html\">Dean Edwards’</a> and <a href=\"http://www.hedgerwow.com/360/bugs/dom-fix-ie6-background-image-flicker.html\">Hedger Wang’s</a> studies on this issue for more information.</em>  But this is really only half the problem.  This will fix the duplicate bacon.png HTTP requests, but we’ll still see 3 spacer.png HTTP requests in our logs.</p>\n</li>\n<li>\n<p>The other issue is a separate but equal problem with IE6 caching.  When inserting images with identical <code>src</code> attributes, IE6 will always go to the server (which means an extra HTTP request) for a new image.  This is a <a href=\"http://support.microsoft.com/default.aspx?scid=kb;en-us;319546\">documented <em>feature</em> in IE6</a>, and the fix they have listed on their page isn’t ideal.  The best solution here is to <strong>eliminate the need for <code>spacer.png</code></strong> altogether.  I can put these bacon background’s on a div tag just as easily, emphasizing pragmatism over semantics in this case (it’s a small sacrifice, you’ll live).  If you have an <code>&amp;lt;img&amp;gt;</code> tag with a source you actually need, why not move it to the background image on a div tag?  Unfortunately here, the takeaway is that <strong>your logic may need to be restructured</strong> to workaround this issue.<br>\nSee also <a href=\"http://www.bazon.net/mishoo/articles.epl?art_id=958\">Mihai Bazon’s study</a> for more information, but do keep in mind that grouping this issue with the background flicker problem is an incorrect categorization.  They are two separate issues and the fixes represented on that page don’t really fix the issue at all.  Implementing server side caching as a “fix” is like using a bandaid for a tourniquet. You don’t want an HTTP request to go to the server <strong>at all</strong>, I don’t care if the response is a 200 OK or a 304 Not Modified.  No HTTP request is always going to be faster than a server side cached response.</p>\n</li>\n</ol>\n<p>These issues will present themselves more frequently if you have the “Every visit to the page” caching option enabled in your Internet Tools in Internet Explorer.  Good luck.</p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"83fcd2b0df82dead565f2302f85526f9","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921762},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Web Standards Podcast #85","link":"http://www.zachleat.com/web/web-standards-podcast/","description":"\n\t\t\t<p>Listen to the Interview (1:26:16) <span class=\"tag audio\">Audio</span> on:</p>\n<ul>\n<li><a href=\"https://medium.com/web-standards/episode-85-7c6c6635b97e\">medium.com</a></li>\n<li><a href=\"https://soundcloud.com/web-standards/episode-85\">SoundCloud</a></li>\n<li><a href=\"https://itunes.apple.com/ru/podcast/veb-standarty/id1080500016\">iTunes</a></li>\n</ul>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"0813a83472866ee35da93908b5f83bdf","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921768},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Forward Compatibility and JavaScript","link":"http://www.zachleat.com/web/forward-compatibility-and-javascript/","description":"\n\t\t\t<p>Many developers (myself included) complain endlessly about the problematic ECMAScript implementation that Internet Explorer uses called JScript. And after reading <a href=\"http://blogs.msdn.com/dmassy/archive/2006/11/30/vpc-to-run-ie6-and-ie7-on-the-same-machine.aspx\">one such very detailed complaint</a> in the comments on Dave Massy’s website at MSDN, and reading <a href=\"http://blogs.msdn.com/ie/archive/2007/10/30/ecmascript-3-and-beyond.aspx\">Chris Wilson’s post about ECMAScript 3</a>, it has become increasingly obvious of Microsoft’s opinion on the subject of Forward Compatibility with JavaScript. It’s something they keep pounding their fists on the ground about, how they are adamant that new versions of their browser not “Break the Web.”</p>\n<p>Of course, “Breaking the Web” refers to the amount of code on the internet today that is an equal and opposite reaction to the broken bug-ridden JavaScript implementation of their browser. It describes the unimaginable future in which Internet Explorer fixed the many well documented <em>intricacies</em> of JScript and thereby ruins the code that was originally written to support the problem. What a conundrum.</p>\n<p>But haven’t we already been through this problem? Isn’t this the same exact thing we saw in the early days of CSS? And how did the major browser players react? By implementing both a <a href=\"http://www.quirksmode.org/css/quirksmode.html\">Quirks and Standards mode for CSS through DocType switching</a>. Now my question is:</p>\n<p><strong>Why haven’t we seen a Quirks and Standards Compatibility Mode for JavaScript?</strong></p>\n<p>I’m not necessarily encouraging the Quirks and Standards modes to be toggled with the DocType (as with CSS), but why not have these two modes? To enable your site to use the Standards mode of JavaScript, the browser might require a certain DocType to be declared, or it might require a different script type in the browser:</p>\n<pre><code>&lt;script type=&quot;text/javascript&quot; mode=&quot;standards&quot;&gt;\n</code></pre>\n<p>Either that, or <a href=\"http://dean.edwards.name/weblog/2007/03/yet-another/\">I could just use Base2</a>.</p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"1016036e458704bcd60d3a90ddb2d926","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921761},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"NebraskaJS Omaha","link":"http://www.zachleat.com/web/scoville-nebraskajs/","description":"\n\t\t\t\t<p><em>This content lives somewhere else. It was originally posted at: <a href=\"https://www.meetup.com/nebraskajs/events/dxndfdyzhbkb/\">https://www.meetup.com/nebraskajs/events/dxndfdyzhbkb/</a></em></p>\n\t\t\t\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"612203d8654ac9e0ad7489a10c226fab","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921771},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"NEJS CONF 2017","link":"http://www.zachleat.com/web/nejsconf/2017/","description":"\n\t\t\t\t<p><em>This content lives somewhere else. It was originally posted at: <a href=\"https://2017.nejsconf.com/\">https://2017.nejsconf.com/</a></em></p>\n\t\t\t\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"2aeaa06d6e0f5b8de5897e13a53b40f5","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921768},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Domain Swap: A Google Chrome Extension","link":"http://www.zachleat.com/web/domain-swap/","description":"<blockquote> \n <p>When in the Course of <s>human</s> DOM events it becomes necessary for one <s>people</s> developer to dissolve the <s>political bands</s> DNS bindings which have connected them with another and to assume among the powers of the earth, the separate and equal station to which the Laws of <s>Nature</s> Moore and of <s>Nature's</s> Source Code’s God entitle them, a decent respect to the opinions of <s>man</s>developerkind requires that they should declare the causes which impel them to the separation.</p> \n</blockquote> \n<p>In a normal development workflow your code can move through multiple development environments. Sometimes a coworker emails you a URL to a dev server but you want to check the same path on your local environment. Or maybe you want to more easily switch between your test servers and production.</p> \n<p>We must declare our independence from the shackles of our development domains! For far too long have they taxed us.</p> \n<h2 id=\"install-domain-swap\"><a href=\"https://chrome.google.com/webstore/detail/domain-swap/ngiiihlebepigjbefembddhdplmaghep/\">Install Domain Swap</a> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/domain-swap/#install-domain-swap\">#</a></h2> \n<p><a href=\"https://chrome.google.com/webstore/detail/domain-swap/ngiiihlebepigjbefembddhdplmaghep/\">Domain Swap</a> is a Google Chrome extension that allows you to easily toggle between and manage different sets of domains. It was created by the inimitable <a href=\"https://twitter.com/jmhobbs\">John Hobbs</a> with minor contributions from myself and <a href=\"https://twitter.com/mattdsteele\">Matt Steele</a>.</p> \n<p>It is also available on <a href=\"https://github.com/jmhobbs/domain-swap\">GitHub</a>.</p> \n<div class=\"fluid-width-video-wrapper\">\n <iframe class=\"youtube-player\" type=\"text/html\" width=\"640\" height=\"385\" src=\"https://www.youtube.com/embed/rBjWONjqwNg/\" frameborder=\"0\"></iframe>\n</div>","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"de3b8b35389ae12f756ac6fcbceb1884","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921764},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Pragmatic Progressive Enhancement","link":"http://www.zachleat.com/web/pragmatic/","description":"<p><img src=\"https://www.zachleat.com/web/wp-content/uploads/2011/05/juniper.jpg\" alt=\"\" title=\"Juniper Plant\" /></p> \n<p>A few weeks ago at the jQuery Conference (San Francisco 2011), Nicholas Zakas delivered a wildly entertaining presentation entitled <strong><a href=\"http://www.slideshare.net/nzakas/progressive-enhancement-20\">“Progressive Enhancement 2.0”</a></strong> (slides 65-79 are especially great), updating the basic rules of PE for a modern age. While prior Progressive Enhancement techniques included layering content, presentation, and behavior (conveniently represented as HTML, CSS, and JavaScript). PE 2.0 (not to be confused with our other 2nd generation friend, the Web) involves <strong>multiple layers of CSS</strong> for differing device capabilities (rounded corners for example) and <strong>multiple layers of JavaScript</strong> (ECMAScript 5 capable browsers, for example). He made the argument that this also included <strong>ignoring older browsers</strong> (in some cases) and only moving forward with new functionality for newer, more capable devices.</p> \n<p>Like any web developer that believes in getting actual work done, I agree with his argument but not without exemption.</p> \n<h2 id=\"pieces-of-flair\">Pieces of Flair <a class=\"direct-link\" href=\"http://www.zachleat.com/web/pragmatic/#pieces-of-flair\">#</a></h2> \n<p>The benefit of Progressive Enhancement pays off when your code encounters a device is <strong>incapable of interpreting the CSS or JavaScript correctly</strong> in a way the code was intended. This could be because of a bug in the rendering or JavaScript engine (or God-forbid an error in the code itself), or it could be because the feature being utilized is newer than the device itself and it could not have supported it without clairvoyance or a time machine.</p> \n<p>The example Nicholas used to display this case was the Twitter home page, which uses CSS border-radius to display rounded corners. In user agents that don’t support border-radius, such as IE&lt;9, the elements have sharp rectangular corners. Using Progressive Enhancement here is a no-brainer, especially for features (like rounded corners) that have no bearing on the actual meat of the page, the content.</p> \n<p>But <strong>when the feature is the content</strong> and degradation requires additional work, the decision is more complex. <strong>HTML5 <code>&lt;video&gt;</code> and <code>&lt;audio&gt;</code> probably aren’t an acceptible baseline</strong> for progressive enhancement yet (based on current web browser statistics), and (video/audio) may never be an acceptable baseline depending on your views on universal accessible content. The best baseline might be a text-only transcript of the media. It really depends on how much importance the video/audio is to the core functionality of the page.</p> \n<h2 id=\"input\">Input <a class=\"direct-link\" href=\"http://www.zachleat.com/web/pragmatic/#input\">#</a></h2> \n<p>Historically speaking, in order of mainstream application the progression of input devices used to interact with (even back before web) applications was: keyboard, mouse, touch, and (even more recently) speech (see the <a href=\"http://nooshu.com/experimenting-with-webkit-form-speech-input\">speech attribute on text inputs in Google Chrome</a>). Logical progression concludes that we’ll see gesture APIs (think Microsoft Kinect) available at some point as well. It’s very important to consider that the *<strong>the mechanism of input must also be carefully layered</strong>. Start with a good baseline of keyboard support for your application, then add mouse interactions, then layer any specific (multi-)touch interactions on top of that, and so on. You don’t want to skip any intermediate input layers.</p> \n<p>In Nicholas’ presentation, he presented an example of the Yahoo! homepage, specifically modified for tablet devices (slide 115). He went on to describe that the carousel functionality on the main image on the page was not available when viewing the page in Firefox. I think this is a good example of what happens when you skip layers of input interactions, moving straight to touch, without first layering mouse-based input. The approach the Yahoo! team took might be okay if you can afford to develop multiple independent code bases for a single home page, but most teams are going to want to get as much out of a single code-base as they can.</p> \n<h2 id=\"cutting-fat\">Cutting Fat <a class=\"direct-link\" href=\"http://www.zachleat.com/web/pragmatic/#cutting-fat\">#</a></h2> \n<p>A side benefit of targeting Progressive Enhancement to your core functionality allows you to easily add ancillary features that <strong>don’t need to span the entirety of your browser support spectrum</strong>. Some might argue that the Carousel functionality in the Yahoo! tablet example could be considered ancillary, but the positioning and screen real estate dedicated to it suggests otherwise. Facebook’s chat in IE6 is a good example of this (slide 114). Is chat part of the core functionality that Facebook wants to guarantee device independent access to? Apparently not. Making decisions in this realm involves a real cost benefit analysis, <strong>weighing the feature against user benefit, browser market share, and development/implementation time</strong>.</p> \n<h2 id=\"exceptions\">Exceptions <a class=\"direct-link\" href=\"http://www.zachleat.com/web/pragmatic/#exceptions\">#</a></h2> \n<p>It’s important to note that <strong>not all things can be developed using Progressive Enhancement</strong>. There are certain use cases in which viewing the content in a lower fidelity than the author originally intended would destroy the value of content altogether. While these use cases are rare for most sites, most artistic endeavors can be classified as such. Consider <a href=\"http://www.thewildernessdowntown.com/\">The Wilderness Downtown</a>, an amazing and beautiful interactive film built by Chris Milk using HTML5. The strong, vivid emotional connection between the film and the viewer would have been destroyed had the content been a text-based transcript, or just audio, or even just a video. <strong>Art must not be compromised</strong>.</p> \n<p>Now, some of you probably read the above paragraph and are thinking to yourself that your blog also qualifies under the above exemption (you’re the guy that doesn’t have full text feeds on his RSS aren’t you?). Just be real with yourself, most things probably don’t fit into the same level of interactivity as The Wilderness Downtown. <strong>Don’t use art as an excuse.</strong></p> \n<h2 id=\"conclusion\">Conclusion <a class=\"direct-link\" href=\"http://www.zachleat.com/web/pragmatic/#conclusion\">#</a></h2> \n<p>Start with the <strong>primary goal</strong> of each individual page, this <strong>must be universally accessible</strong>. If the goal is to display text content, the text must be available sans-JavaScript. If the goal is to show a video or play audio, consider a transcript as your baseline. If the goal is to solicit form input from the end user, don’t skip input interaction layers. But don’t be afraid to shirk best practices on things that aren’t necessary to that goal, like social media links, a real-time chat client, trends/statistics, etc. <strong>You’ll know what matters.</strong></p> \n<p><em>Update: Changed the title of the article.</em><br> <em>Update: Rather than My Yahoo!, Nicholas informed me that it was just the Yahoo! homepage.</em></br></p>","descriptionType":"html","feedId":12519,"bgimg":"https://www.zachleat.com/web/wp-content/uploads/2011/05/juniper.jpg","linkMd5":"c0f30c39bd361b2be70575f8c48c5f31","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn85@2020_2/2020/08/25/02-02-04-150_fbbffc3a4c3aebc8.webp","destWidth":680,"destHeight":474,"sourceBytes":51785,"destBytes":53250,"author":"","articleImgCdnMap":{"https://www.zachleat.com/web/wp-content/uploads/2011/05/juniper.jpg":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn85@2020_2/2020/08/25/02-02-04-150_fbbffc3a4c3aebc8.webp"},"publishedOrCreatedDate":1598320921763},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"A Featherweight Facepile","link":"http://www.zachleat.com/web/featherweight-facepile/","description":"<p>Ever since Eleventy started an Open Collective to take financial backing (by request, mind you), I’ve had it on my to-do list to add an Eleventy Supporters page to <a href=\"https://www.11ty.io/\">11ty.io</a>.</p> \n<p>Fortunately, this is super straightforward using Open Collective’s lovely JSON API (no authentication or tokens required: 😱 but mostly 🎉). Have a look at the <a href=\"https://opencollective.com/11ty/members/all.json\">members JSON for the 11ty organization</a>.</p> \n<p>As I created the <a href=\"https://www.11ty.io/docs/supporters/\">Supporters page</a> from this data I noticed the same recurring problem that had plagued me before when using third party social avatars on my web site: the image dimensions and file sizes varied by <em>a lot</em>.</p> \n<p>I wrote <a href=\"https://www.zachleat.com/web/facepile/\"><em>The Crushing Weight of the Facepile</em></a> about this exact issue.</p> \n<p>As an example, one individual image was over 500KB. This ballooned the supporters page up to 1.9MB of images—not good.</p> \n<p>For the webmention avatars on my own site, I had already implemented a <a href=\"https://www.zachleat.com/web/facepile/\">JavaScript solution using IntersectionObserver</a>. Specifically, the images would only be loaded when they were visible in the viewport. This was a nice solution for webmentions because they were supplementary to the main content of the page (the blog post). Using JavaScript seemed like a nice mitigation step. But it didn’t really <em>solve</em> the root issue: the images were <em>too damn big</em>.</p> \n<p>For the Eleventy Supporters page, the avatars <em>are</em> the primary content. I didn’t want to use JavaScript as a dependency to load these. I needed to solve the root issue: I needed smaller images.</p> \n<h2 id=\"enter-avatar-local-cache\">Enter Avatar Local Cache <a class=\"direct-link\" href=\"http://www.zachleat.com/web/featherweight-facepile/#enter-avatar-local-cache\">#</a></h2> \n<p>I created a plugin called <code>avatar-local-cache</code> to help solve this problem.</p> \n<div class=\"primarylink\">\n <a href=\"https://github.com/zachleat/avatar-local-cache\"><code>avatar-local-cache</code> on GitHub</a> and on \n <a href=\"https://www.npmjs.com/package/avatar-local-cache\">npm</a>\n</div> \n<p>Here’s the things that Avatar Local Cache does:</p> \n<ol> \n <li>Saves a remote image URL to the local file system (we no longer need to worry about broken images from a remote service).</li> \n <li>Resize it to a maximum width that you specify. It will not upscale smaller images.</li> \n <li>Automatically detect the format of the image and create <code>jpeg</code>, <code>png</code>, and <code>webp</code> versions of the image.</li> \n <li>Run jpegtran on <code>jpeg</code> files and pngquant on <code>png</code> files to optimize them.</li> \n <li>It then sorts these based on file size from smallest to largest. \n  <ul> \n   <li>If the <code>webp</code> format is <em>not</em> the smallest, it deletes the <code>webp</code> file from the file system.</li> \n   <li>Then it deletes the larger of the <code>png</code> versus the <code>jpeg</code>.</li> \n  </ul> </li> \n</ol> \n<p>The return object from the plugin is an array of the smallest possible files you can use to create an HTML <code>&lt;img&gt;</code> or <code>&lt;picture&gt;</code> tag from. It contains one of <code>webp, jpeg</code> or <code>webp, png</code> or <code>jpeg</code> or <code>png</code>.</p> \n<p>It might look something like (note that <code>webp</code> is first in the array):</p> \n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">[</span><br>    <span class=\"token punctuation\">{</span><br>        <span class=\"token string\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"splitinfinities\"</span><span class=\"token punctuation\">,</span><br>        <span class=\"token string\">\"path\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"img/avatar-local-cache/opencollective/william-riley.webp\"</span><span class=\"token punctuation\">,</span><br>        <span class=\"token string\">\"size\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1028</span><br> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br> <span class=\"token punctuation\">{</span><br> <span class=\"token string\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"splitinfinities\"</span><span class=\"token punctuation\">,</span><br> <span class=\"token string\">\"path\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"img/avatar-local-cache/opencollective/william-riley.jpg\"</span><span class=\"token punctuation\">,</span><br> <span class=\"token string\">\"size\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1594</span><br> <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">]</span></br></br></br></br></br></br></br></br></br></br></br></code></pre> \n<p>For <a href=\"http://11ty.io/\">11ty.io</a>, I then iterate over this data to create a <code>&lt;picture&gt;</code> file if the array has two entries (the first is guaranteed to be a <code>webp</code>). It ends up looking like:</p> \n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>picture</span><span class=\"token punctuation\">&gt;</span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>source</span> <span class=\"token attr-name\">srcset</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>/img/avatar-local-cache/opencollective/william-riley.webp<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>image/webp<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>/img/avatar-local-cache/opencollective/william-riley.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>William Riley<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">loading</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>lazy<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>picture</span><span class=\"token punctuation\">&gt;</span></span></br></br></br></code></pre> \n<p>If the array had only one item it would be guaranteed to be <code>png</code> or <code>jpeg</code> and I could create an <code>&lt;img&gt;</code> tag instead of using <code>&lt;picture&gt;</code>.</p> \n<h2 id=\"results\">Results <a class=\"direct-link\" href=\"http://www.zachleat.com/web/featherweight-facepile/#results\">#</a></h2> \n<p>For this particular avatar on the Supporters page, the <a href=\"https://opencollective-production.s3.us-west-1.amazonaws.com/3e53bc60-bd71-11e9-977d-87c4e0ce5473.jpeg\">original URL from the opencollective API JSON</a> was a 1240×1240 <code>jpeg</code> that weighed in at a whopping <strong>121KB</strong>.</p> \n<p>The maximum width I used for the <code>avatar-local-cache</code> images was 73px. Of course this smaller image would be a smaller file size (and it was): the <code>webp</code> format was only <strong>1028 bytes</strong> and the fallback <code>jpg</code> format was 1594 bytes.</p> \n<p><em>For a single image, dropping from 121KB to 1KB is some real nice savings.</em></p> \n<h3 id=\"aggregate-savings\">Aggregate Savings <a class=\"direct-link\" href=\"http://www.zachleat.com/web/featherweight-facepile/#aggregate-savings\">#</a></h3> \n<p>Before implementing <code>avatar-local-cache</code>, the Supporters page images weighed in at a total of <strong>1.9MB</strong>.</p> \n<ul> \n <li>Using <code>png</code> files only, the total weight dropped to 206KB.</li> \n <li>Using <code>jpg</code> files only, the total weight dropped to 122KB.</li> \n <li>Using <code>avatar-local-cache</code>’s smart image format selection (<code>webp,{jpg,png}</code> or <code>{jpg,png}</code>), the total weight dropped to <strong>107KB</strong>.</li> \n</ul> \n<p><em>For all of these images, dropping from 1.9MB to 107KB is pretty great!</em></p> \n<h3 id=\"rollout\">Rollout <a class=\"direct-link\" href=\"http://www.zachleat.com/web/featherweight-facepile/#rollout\">#</a></h3> \n<p>We use social avatars all over the place on <a href=\"http://11ty.io/\">11ty.io</a>. I ended up rolling out this solution to the entire site and it dropped the home page’s <a href=\"https://twitter.com/zachleat/status/1164905436950253569\">image weight from <strong>411KB to 102KB</strong></a>. There are <em>a lot</em> of avatars on the home page (111 😎 at time of writing).</p> \n<h2 id=\"try-it-out!\">Try it out! <a class=\"direct-link\" href=\"http://www.zachleat.com/web/featherweight-facepile/#try-it-out!\">#</a></h2> \n<p>Try this out (or at least some of the ideas presented here!) and I hope that it helps you create smaller sites. Third party images are tricky to manage, especially if the image providers have different priorities than you do. Take back control of those images and cache them locally (self-hosting is a running theme with me).</p> \n<p>You don’t necessarily need to use this for social avatars either. It could work with any image, really. I might extend this to be a more generic thing later.</p> \n<p>Let me know if this helps you out!</p>","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"27eea017c91ea8bdb24bcfb55b750013","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921772},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Checklist for Web Applications","link":"http://www.zachleat.com/web/checklist-for-web-applications/","description":"\n\t\t\t<p>As the first post in this new category of web development, I’ve decided to keep it simple and post the different components and architecture considerations a developer must consider when making a new application, especially in today’s world of in-page dynamic interaction and the complications that has put on the problems that were considered solved in yesterday’s page level world. Mostly this is a place to collect my thoughts on this subject.</p>\n<ul>\n<li><strong>Automatic Print Styling</strong>: Is the page going to be able to be printed properly without a “Printer friendly” link? CSS style sheets can be used to modify the output of the page using the @media print declaration. Are the widget components you’re using in your JavaScript library able to support easy printing?</li>\n<li><strong>Browser History Management</strong>: Will your application support the back button, especially with the increased usage of AJAX interactions on a full page application. Don’t use XMLHTTPRequest’s to fetch the entire content of a page. Just redirect them to a new page when you are only saving the header and the footer.</li>\n<li><strong>Graded Browser Support</strong>: support of the web browsers with a large percentage of market share using the ideas put forth by Nate Koechley in his Graded Browser Support descriptions.</li>\n<li><strong>Bookmark and Permanent Linking</strong>: is the behavior of your JavaScript application changing how data is being displayed? You’d better modify the URL to allow the user to bookmark link straight to the same view.</li>\n<li><strong>File Compression</strong>: Minimize your CSS and JavaScript for delivery. GZip your CSS and JavaScript for browsers that support it (most all modern browsers do).</li>\n<li><strong>Efficient Caching Mechanisms</strong>: server side caching of data is necessary for high volume traffic.</li>\n<li><strong>Internationalization</strong> (i18n): will your application be viewed in other countries by non-English speakers? Are your dates in an international format? How about 24 hour time formats? Time zones? Do they observe Daylight Saving Time?</li>\n<li><strong>Error Logging</strong>: Both server side and client side (using AJAX to log JavaScript errors can be very helpful)</li>\n</ul>\n<p><strong>Recommended Luxury Items</strong></p>\n<ul>\n<li><strong>Support mobile devices</strong>: How will your application look on a Blackberry? How does it render in Opera Mini?</li>\n<li><strong>Offline Mode</strong>: Add and modify data offline, with the ability to automatically synchronize changes when an internet connection becomes available.</li>\n<li><strong>Exportable data</strong>: PDF, Excel, RSS, even offline static HTML. JavaScript can sometimes give unknown results when using the browser to save the page locally. Make sure this is supported. Don’t force your users to save screenshots.</li>\n</ul>\n<p><strong>Enterprise Client Side Widgets</strong></p>\n<ul>\n<li><strong>Data Grid</strong>: businesses just love data grids. Nothing like a nice standard set of cookie cutter constraints to force upon your data.</li>\n<li><strong>Charts and Graphs</strong>: metrics are important. Existing client side JavaScript charting packages can be limited when it comes to printing, or even saving the chart as an image file. These are important.</li>\n</ul>\n<p>There are many facets that a developer must consider when designing a new application. I hope this list will at least make you think about some things that you may not have considered before. Thanks for reading.</p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"ea9f11123af5e0380d415f7cfe1397b3","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921760},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"BigText Makes Text Big","link":"http://www.zachleat.com/web/bigtext-makes-text-big/","description":"<p><em>I like shortcuts: Fork <a href=\"https://github.com/zachleat/BigText\">BigText on Github</a> or Check out the <a href=\"https://www.zachleat.com/bigtext/demo/\">BigText Demo Wizard</a></em></p> \n<p>It all began with a simple web foray to <a href=\"http://designingmonsters.com/\">Designing Monsters</a>. Their simple, typographic design was beautiful. But why? Their combination of the beautiful League Gothic font, use of <a href=\"http://letteringjs.com/\">Lettering.JS</a>, and some simple font scaling gave the page a wonderful consistent vertical alignment. Like the Million Dollar Homepage, I wanted to rebuild it — but I didn’t want to spend a lot of time manually adjusting font sizes. So I did what any programmer with the jQuery Golden Hammer would do, I turned my problem into a nail.</p> \n<p><img src=\"https://www.zachleat.com/web/wp-content/uploads/2011/01/Screen-shot-2011-01-11-at-7.37.54-PM.png\" alt=\"\" /></p> \n<p>At its simplest, the BigText jQuery plugin takes a single element and <strong>sizes the text inside of its child <code>&lt;div&gt;</code>s to fit the width of the parent element</strong>. Gives the text that lovely vertical alignment.</p> \n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>bigtext<span class=\"token punctuation\">\"</span></span><span class=\"token style-attr language-css\"><span class=\"token attr-name\"> <span class=\"token attr-name\">style</span></span><span class=\"token punctuation\">=\"</span><span class=\"token attr-value\"><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 300px</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span>The elusive<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span>BIGTEXT<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span>plugin exclusively<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span>captured on film<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span></br></br></br></br></br></code></pre> \n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#bigtext'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">bigtext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre> \n<h2 id=\"implementation-details\">Implementation Details <a class=\"direct-link\" href=\"http://www.zachleat.com/web/bigtext-makes-text-big/#implementation-details\">#</a></h2> \n<p>The plugin itself is more than just a simple font-size incrementer. I wasn’t happy with the performance of simply iterating through font sizes with a single fixed interval. I decided it would be better to test multiple decreasing intervals. For each line, it increments first by <code>16em</code> until it detects a line break, backs off an interval then increments by <code>8em</code>. It continues with <code>4em</code>, <code>2em</code>, <code>1em</code>, <code>0</code>.<code>1em</code>, until it finds the correct font-size to the nearest hundredth of an em. It’s noteworthy that Webkit does not respect font-sizes to the nearest hundredth, it’s precision is maxed out at tenths. This algorithm results in fewer tests in most cases, especially where the resulting font-size will be very large. Performance is always important. After font-size, it moves to word-spacing as a backup for extra precision, especially needed on Webkit.</p> \n<h2 id=\"the-bigtext-demo-wizard\"><a href=\"https://www.zachleat.com/bigtext/demo/\">The BigText Demo Wizard</a> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/bigtext-makes-text-big/#the-bigtext-demo-wizard\">#</a></h2> \n<p>This is where the magic happens.</p> \n<ul> \n <li>Editable text (<code>contenteditable</code>), and BigText will run on every keyup event to resize what you’re typing.</li> \n <li>Dynamic horizontal and vertical centering using <a href=\"http://infrequently.org/2009/08/css-3-progress/\">Alex Russell’s Flex Box CSS classes</a> (This is easy now, hooray!)</li> \n <li>3D transforms (browser support checked using <a href=\"http://www.modernizr.com/\">Modernizr</a>, currently only available in Safari. Note: Chrome flattens to 2D space)</li> \n <li>Custom fonts are loaded using <a href=\"http://code.google.com/apis/webfonts/docs/webfont_loader.html\">Google’s Font Loader JavaScript API</a></li> \n <li><a href=\"http://benalman.com/projects/jquery-throttle-debounce-plugin/\">Ben Alman’s Throttle Plugin</a></li> \n <li>The rest is mostly jQuery UI with the <a href=\"http://taitems.tumblr.com/post/482577430/introducing-aristo-a-jquery-ui-theme\">Aristo theme</a></li> \n</ul> \n<p>Turns out, the <em>BigText Demo Wizard</em> makes for really easy <a href=\"http://vimeo.com/channels/kinetictypography\">Kinetic Typography</a> screencasts (not amazing, but surely easy):</p> \n<div class=\"fullwidth\">\n <div class=\"fluid-width-video-wrapper\">\n  <iframe class=\"youtube-player\" type=\"text/html\" width=\"640\" height=\"385\" src=\"https://www.youtube.com/embed/OuqB6e6NPRM\" frameborder=\"0\"></iframe>\n </div>\n</div> \n<p>The above is simply the manual process of typing lyrics into the <em>BigText Demo Wizard</em>. You can easily make one of these too, with the help of the following keyboard shortcuts:</p> \n<ul> \n <li>CTRL + ALT + X: Set the text to a random 3D transform angle.</li> \n <li>CTRL + ALT + C: Toggles between white and black background.</li> \n <li>CTRL + ALT + R: Reset 3D to default state.</li> \n <li><strong>CTRL + ALT + SPACE: Fade out current text, clears the text, sets a random 3D transform angle, ready to type!</strong></li> \n <li>CTRL + ALT + ENTER: Same as CTRL + ALT + SPACE, but keeps the same 3D transform angle.</li> \n</ul> \n<p>The fun part about the <em>BigText Demo Wizard</em> for me was that it almost turned into a non-musical instrument when I used it real-time to complement music. Feel free to cruise Pandora and type lyrics to the music until your wrists get sore. <strong>What can you make with it?</strong></p> \n<p><em>The BigText Demo Wizard was tested manually in Safari 5, Chrome 8, Opera 11, Firefox 3.6, and Internet Explorer 8. The BigText jQuery plugin has a full JsTestDriver suite, available on <a href=\"https://github.com/zachleat/BigText\">GitHub</a>. Just run ./test.sh or test.bat</em></p>","descriptionType":"html","feedId":12519,"bgimg":"https://www.zachleat.com/web/wp-content/uploads/2011/01/Screen-shot-2011-01-11-at-7.37.54-PM.png","linkMd5":"c63d0603c9ae59c67e0a1e474c5fef96","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn29@2020_5/2020/08/25/02-02-04-567_9a72cc88936dd6e2.webp","destWidth":287,"destHeight":332,"sourceBytes":48653,"destBytes":10784,"author":"","articleImgCdnMap":{"https://www.zachleat.com/web/wp-content/uploads/2011/01/Screen-shot-2011-01-11-at-7.37.54-PM.png":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn29@2020_5/2020/08/25/02-02-04-567_9a72cc88936dd6e2.webp"},"publishedOrCreatedDate":1598320921763},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Point, Charset, Match: Character Encoding in JavaScript","link":"http://www.zachleat.com/web/charset/","description":"<p><em>If you’re not familiar with the principles of <strong>character encoding</strong>, read the prerequisite <a href=\"http://diveintohtml5.org/semantics.html#encoding\">Dive Into HTML 5 section</a> on the subject.</em></p> \n<p>When you see issues with Character Encoding, it’s traditionally in the form of text on your page that looks like this: <img src=\"https://www.zachleat.com/web/wp-content/uploads/2010/03/unencoded.png\" alt=\"\" title=\"unencoded\"> in Firefox or <img src=\"https://www.zachleat.com/web/wp-content/uploads/2010/03/unencoded-ie.png\" alt=\"\" title=\"unencoded-ie\"> in IE.</img></img></p> \n<p>Usually, those characters mean that the character encoding used on the page is either ambiguous (not specified), or incorrect. We can use Firefox to determine that Character Encoding of a web page (Right Click and go to View Page Info; or use the “Character Encoding” entry in the View menu). Check to make sure that the encoding reported by Firefox is the same encoding used in your IDE. For example, Eclipse 3.5 has a “Set Encoding” option in the Edit menu.</p> \n<p>The reason most English alphabetic and numeric characters are consistent independent of character encoding is due to consistency in the lower characters in each encoding. The characters making up the <a href=\"http://www.asciitable.com/\">ASCII character set</a> (0-127) are the same as the lowest 128 characters of <a href=\"http://en.wikipedia.org/wiki/ISO/IEC_8859-1#ISO-8859-1\">ISO-8859-1</a>, <a href=\"http://www.utf8-chartable.de/\">UTF-8</a>, and others.</p> \n<p>Managing your character encodings gets trickier as you add more architectural layers to your application. For example, character encodings may differ in your database, the properties files used to configure your application (java.util.Properties uses ISO-8859-1 by default), or maybe the XML or JSON file you’re loading from an external API.</p> \n<p>Ever heard of HTML character entities? That’s the primary reason they exist — as a sort of encoding independent reference to a particular character. So, for example, the Œ character does not exist in the ISO-8859-1 character set. To display this character in a document with ISO-8859-1 encoding, use the equivalent HTML character entity: <code>&amp;OElig;</code>. For an easier reference, check out this full table of <a href=\"http://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references\">HTML character entities</a>. If using ISO-8859-1 for your HTML document, any entity above Unicode index 255 will need to be escaped. If you’re using UTF-8 encoding, HTML character entities shouldn’t be required.</p> \n<h2 id=\"setting-the-character-encoding\">Setting the Character Encoding <a class=\"direct-link\" href=\"http://www.zachleat.com/web/charset/#setting-the-character-encoding\">#</a></h2> \n<p>To specify the character encoding for any file, you can set a <code>Content-Type</code> header <a href=\"http://www.w3.org/International/O-HTTP-charset\">by configuring your web server or application</a>. Apache lets you easily set different default character encodings for each individual file extension (<code>.js</code> for example). Using the <code>Content-Type</code> header is the most full proof and efficient <a href=\"http://www.zachleat.com/web/charset/#performance\">1</a> method to serve content.</p> \n<p>But without access to the Apache configuration, how do we specify the character encoding?</p> \n<h3 id=\"for-external-javascript-files\">For external JavaScript Files <a class=\"direct-link\" href=\"http://www.zachleat.com/web/charset/#for-external-javascript-files\">#</a></h3> \n<h4 id=\"in-the-html-file\">In the HTML File <a class=\"direct-link\" href=\"http://www.zachleat.com/web/charset/#in-the-html-file\">#</a></h4> \n<p>Just add the <code>charset</code> attribute. If not specified, the HTML document’s character encoding is used by default (specified in the <code>Content-Type</code> header or the appropriate meta tag, for example: <code>&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/&gt;</code>).</p> \n<pre><code>&lt;script type=\"text/javascript\" src=\"script.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n</code></pre> \n<h4 id=\"in-the-javascript-file\">In the JavaScript File <a class=\"direct-link\" href=\"http://www.zachleat.com/web/charset/#in-the-javascript-file\">#</a></h4> \n<p>To my knowledge, <strong>there is no way for a JavaScript file to report its own character encoding</strong>. To me, this seems like an omission. Each individual document should be able to report its own character encoding without a header. CSS files can do it (<code>@charset</code> at-rule). HTML files can do it (<code>&lt;meta&gt;</code> tag). Why not JavaScript files?</p> \n<h4 id=\"for-dynamically-created-script-tags\">For Dynamically Created Script Tags <a class=\"direct-link\" href=\"http://www.zachleat.com/web/charset/#for-dynamically-created-script-tags\">#</a></h4> \n<pre><code>var s = document.createElement('script');\ns.src = 'script.js';\ns.type = 'text/javascript';\ns.charset = 'utf-8';\n</code></pre> \n<p>If you’re using <a href=\"http://api.jquery.com/jQuery.ajax/\">jQuery’s Ajax</a> functions to load external JavaScript files, perhaps you might be inclined to use the <code>script dataType</code>. jQuery even provides a <code>scriptCharset</code> option for wrapping the above method for changing the charset on a dynamic script tag. <strong>Be warned</strong>, the jQuery Ajax function uses two different methods to load external script files (as of version 1.4.2). If a same-domain request, it uses an <code>XMLHttpRequest</code>. If a cross-domain request, it uses a dynamic <code>script</code> tag. So the <strong><code>scriptCharset</code> jQuery option only applies to cross-domain requests</strong>. We’ll need some other method to mitigate our character encoding issues (or just use dynamic script tags).</p> \n<h4 id=\"for-xmlhttprequest-objects\">For XMLHttpRequest Objects <a class=\"direct-link\" href=\"http://www.zachleat.com/web/charset/#for-xmlhttprequest-objects\">#</a></h4> \n<p>Our saving grace would be the <a href=\"https://developer.mozilla.org/en/XMLHttpRequest#overrideMimeType()\"><code>overrideMimeType</code></a> method, if it weren’t poetically unavailable in Internet Explorer. Using this method, we can override the mime type and character encoding.</p> \n<pre><code>var xhr = new XMLHttpRequest();\n// Not available in Internet Explorer (up to version 8 at time of writing)\nif (xhr.overrideMimeType) {\n    xhr.overrideMimeType('application/x-javascript; charset=utf-8');\n}\n</code></pre> \n<h3 id=\"portable-non-ascii-javascript\">Portable non-ASCII JavaScript <a class=\"direct-link\" href=\"http://www.zachleat.com/web/charset/#portable-non-ascii-javascript\">#</a></h3> \n<p>The best way to make non-ASCII characters in JavaScript files portable is to escape the characters properly. If the character is destined for HTML, use an HTML character entity (if available, not all Unicode or ISO-8559-1 characters have entities). Or, escape the characters using the proper Latin or <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Guide/Unicode\">Unicode escape sequence</a>.</p> \n<pre><code>// Raw characters\nvar string = \"ñó\";\n\n// HTML character entities\nvar string = \"&amp;ntilde;&amp;oacute;\";\n\n// Escaped to Latin\nvar string = \"xf1xf3\";\n\n// Escaped to Unicode\nvar string = \"u00f1u00f3\";\n</code></pre> \n<p>If you use the Google Closure Compiler, you’ll get the Unicode escape sequences for free (see issues <a href=\"http://code.google.com/p/closure-compiler/issues/detail?id=24\">24</a> and <a href=\"http://code.google.com/p/closure-compiler/issues/detail?id=68\">68</a>). Make sure to read the tickets for more benefits of serving your JavaScript files using Unicode escape sequences to output only ASCII characters.</p> \n<h2 id=\"summary\">Summary <a class=\"direct-link\" href=\"http://www.zachleat.com/web/charset/#summary\">#</a></h2> \n<p>The easiest way to preemptively solve a lot of character encoding issues is to use UTF-8 for everything, and configure your web server/application to serve the UTF-8 <code>Content-Type</code> header. If you’re writing JavaScript code that you’re going to distribute to the masses, convert any non-ASCII characters using the proper escape sequences. Your JavaScript will be more portable, and will work out of the box on more server configurations.</p> \n<h4 id=\"sources\">Sources <a class=\"direct-link\" href=\"http://www.zachleat.com/web/charset/#sources\">#</a></h4> \n<ol> \n <li><a href=\"http://www.kylescholz.com/blog/2010/01/performance_implications_of_charset.html\">Performance Implications of Charset, an article by Kyle Scholz</a></li> \n</ol>","descriptionType":"html","feedId":12519,"bgimg":"https://www.zachleat.com/web/wp-content/uploads/2010/03/unencoded.png","linkMd5":"922383d16571ca8e3a57f76806cfec2d","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn9@2020_5/2020/08/25/02-02-02-647_d532fb205a1cbe76.webp","destWidth":16,"destHeight":19,"sourceBytes":219,"destBytes":310,"author":"","articleImgCdnMap":{"https://www.zachleat.com/web/wp-content/uploads/2010/03/unencoded.png":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn9@2020_5/2020/08/25/02-02-02-647_d532fb205a1cbe76.webp","https://www.zachleat.com/web/wp-content/uploads/2010/03/unencoded-ie.png":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn2@2020_4/2020/08/25/02-02-12-201_99f1694ae5d4568f.webp"},"publishedOrCreatedDate":1598320921763},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"The 24 Clock on ALARMd","link":"http://www.zachleat.com/web/the-24-clock-on-alarmd/","description":"\n\t\t\t<p>If you’re only using @font-face for titles and text, you’re missing out on a whole <a href=\"http://www.zachleat.com/web/2010/01/03/css-sprites-using-font-face/\">wealth of use cases</a> that have yet to be explored. For instance, I created a very simple <a href=\"http://fontstruct.fontshop.com/fontstructions/show/282059\">7 Segment Display Numeric font</a> to be used for a skin on <a href=\"http://www.alarmd.com/\">alarmd.com</a> and changed the color using nothing but CSS to create the “24″ Clock (true fans will note that the actual font is italic and <a href=\"http://www.panopticist.com/2006/05/there_is_something_weird_going_on_with_the_clock_on_24.php\">has a serif on the 1</a>). Nonetheless, this is just another useful application of @font-face.</p>\n<p>Take a look at the <a href=\"http://www.fontsquirrel.com/fonts/list/style/Dingbat\">Dingbats section on fontsquirrel</a> to get your brain going in the same direction.</p>\n<p><img src=\"https://www.zachleat.com/web/wp-content/uploads/2010/01/Screen-shot-2010-01-24-at-1.22.39-AM.png\" alt=\"\" title=\"Screenshot of the 24 Clock on alarmd.com\"></p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"https://www.zachleat.com/web/wp-content/uploads/2010/01/Screen-shot-2010-01-24-at-1.22.39-AM.png","linkMd5":"63ade8cbe4f5634c3a4e4a914c6db6db","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn2@2020_6/2020/08/25/02-02-04-315_5e33dfdbf9a45b3f.webp","destWidth":764,"destHeight":348,"sourceBytes":38327,"destBytes":15120,"author":"","articleImgCdnMap":{"https://www.zachleat.com/web/wp-content/uploads/2010/01/Screen-shot-2010-01-24-at-1.22.39-AM.png":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn2@2020_6/2020/08/25/02-02-04-315_5e33dfdbf9a45b3f.webp"},"publishedOrCreatedDate":1598320921762},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Scare Your Visitors with this JavaScript Gravatar Plugin","link":"http://www.zachleat.com/web/scare-your-visitors-with-this-javascript-gravatar-plugin/","description":"<h2 id=\"see-the-demo\"><a href=\"https://www.zachleat.com/javascript/gravatar/index.html\">See the Demo</a> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/scare-your-visitors-with-this-javascript-gravatar-plugin/#see-the-demo\">#</a></h2> \n<h2 id=\"download-the-source-code\"><a href=\"https://www.zachleat.com/javascript/gravatar/jquery.gravatar.js\">Download the Source Code</a> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/scare-your-visitors-with-this-javascript-gravatar-plugin/#download-the-source-code\">#</a></h2> \n<p><img src=\"https://www.zachleat.com/web/wp-content/uploads/2009/01/blog-comment.png\" alt=\"Tournology Blog Comment Form\" title=\"blog-comment\" /></p> \n<p>Here’s a use case. An unregistered visitor visits your blog, and decides that your <strong>content is so good that it merits a comment</strong>! Congratulations, you’ve fooled them! Now you can <a href=\"http://www.centernetworks.com/twply-twitter-replies-auction\">twply their account details for $1200 on Sitepoint</a>! Just kidding. But generally, when you visit a blog’s commenting section (such as the <a href=\"http://www.tournology.com/blog/\">Tournology Blog</a> shown above), you’ll see a simple form to authenticate you’re not a spammer, generally including (among other things) an e-mail address field.</p> \n<p><img src=\"https://www.zachleat.com/web/wp-content/uploads/2009/01/blog-comment-after.png\" alt=\"Tournology Blog Comment Form With Gravatar\" title=\"blog-comment-after\" /></p> \n<p>Well, since they’re typing their e-mail address, wouldn’t it be cool if we could <strong>show them their gravatar</strong> right there, inline with the blog comment form? Well, that’s now possible with my new <strong><a href=\"http://www.zachleat.com/javascript/gravatar/jquery.gravatar.js\">JavaScript Gravatar Plugin</a></strong>! It doesn’t have any server side language dependencies.</p> \n<p><img src=\"https://www.zachleat.com/web/wp-content/uploads/2009/01/gravatar-signup.png\" alt=\"Gravatar Signup Page\" title=\"gravatar-signup\" /></p> \n<p>Hell, <a href=\"http://en.gravatar.com/\">gravatar.com</a> could even use this to <strong>improve the user experience of registering your e-mail account</strong>. Right now it does a full page refresh and doesn’t even show you a preview!</p> \n<h2 id=\"see-the-demo-2\"><a href=\"https://www.zachleat.com/javascript/gravatar/index.html\">See the Demo</a> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/scare-your-visitors-with-this-javascript-gravatar-plugin/#see-the-demo-2\">#</a></h2> \n<h2 id=\"download-the-source-code-2\"><a href=\"https://www.zachleat.com/javascript/gravatar/jquery.gravatar.js\">Download the Source Code</a> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/scare-your-visitors-with-this-javascript-gravatar-plugin/#download-the-source-code-2\">#</a></h2> \n<h2 id=\"licensing\">Licensing <a class=\"direct-link\" href=\"http://www.zachleat.com/web/scare-your-visitors-with-this-javascript-gravatar-plugin/#licensing\">#</a></h2> \n<p>Licensed under the <a href=\"http://sam.zoy.org/wtfpl/\">WTFPL</a>, as highly recommended by <a href=\"http://foohack.com/\">Isaac Schleuter</a> (<a href=\"https://www.zachleat.com/web/2007/04/05/google-using-yui-grids-css/\">see discussion</a>).</p> \n<h2 id=\"javascript-dependencies%3A\">JavaScript Dependencies: <a class=\"direct-link\" href=\"http://www.zachleat.com/web/scare-your-visitors-with-this-javascript-gravatar-plugin/#javascript-dependencies%3A\">#</a></h2> \n<ul> \n <li>Requires <a href=\"http://jquery.com/\">jQuery</a> (Feel free to port and post a link!)</li> \n <li>Requires <a href=\"http://pajhome.org.uk/crypt/md5/md5.js\">md5.js</a></li> \n</ul> \n<h2 id=\"example-usage%3A\">Example Usage: <a class=\"direct-link\" href=\"http://www.zachleat.com/web/scare-your-visitors-with-this-javascript-gravatar-plugin/#example-usage%3A\">#</a></h2> \n<p>Easiest form, onblur of email text input field:</p> \n<pre><code>$('#emailTextField').blur(function(event) {\n    $(this).after($.gravatar($(this).val()));\n});\n</code></pre> \n<p>Showing all options, again onblur of email text input field.</p> \n<pre><code>$('#email').blur(function(event) {\n    $('body').append($.gravatar($(this).val(), {\n        // integer size: between 1 and 512, default 80 (in pixels)\n        size: 200,\n        // maximum rating (in order of raunchiness, least to most): g (default), pg, r, x\n        rating: 'pg',\n        // url to define a default image (can also be one of: identicon, monsterid, wavatar)\n        image: 'identicon'\n    }));\n});\n</code></pre> \n<p><strong>Update:</strong> This script has been moved to <a href=\"http://github.com/zachleat/jQuery-Gravatar\">Github</a>.</p>","descriptionType":"html","feedId":12519,"bgimg":"https://www.zachleat.com/web/wp-content/uploads/2009/01/blog-comment.png","linkMd5":"889a7665bebe8a7b05b7e597ee91e063","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn49@2020_3/2020/08/25/02-02-03-208_d561f72c6bf5eb74.webp","destWidth":484,"destHeight":266,"sourceBytes":9024,"destBytes":6090,"author":"","articleImgCdnMap":{"https://www.zachleat.com/web/wp-content/uploads/2009/01/blog-comment.png":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn49@2020_3/2020/08/25/02-02-03-208_d561f72c6bf5eb74.webp","https://www.zachleat.com/web/wp-content/uploads/2009/01/blog-comment-after.png":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn43@2020_1/2020/08/25/02-02-21-893_76270bb90f360b1f.webp","https://www.zachleat.com/web/wp-content/uploads/2009/01/gravatar-signup.png":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn31@2020_6/2020/08/25/02-02-21-691_343e842bd9f546c2.webp"},"publishedOrCreatedDate":1598320921762},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Build your own Blog from Scratch using Eleventy","link":"http://www.zachleat.com/web/build-a-blog/","description":"\n\t\t\t\t<p><em>This content lives somewhere else. It was originally posted at: <a href=\"https://www.filamentgroup.com/lab/build-a-blog/\">https://www.filamentgroup.com/lab/build-a-blog/</a></em></p>\n\t\t\t\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"eaf73a7baaf6a327c3258fdb62da7279","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921771},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Quick Performance Tip: jQuery and addClass","link":"http://www.zachleat.com/web/quick-performance-tip-jquery-and-addclass/","description":"\n\t\t\t<p>Abstractions are helpful and dangerous. But the more we know about a library’s internals, the less danger we’ll be in later. Here’s an issue I ran into where I had assumed that jQuery would be optimized for this case, but it wasn’t. I’ll go over my bad assumption and how to workaround it.</p>\n<p>As of jQuery 1.3.2, adding multiple HTML classes to an element using jQuery’s addClass method will add them one at a time, modifying the className property of an element for each class.</p>\n<pre><code>$('#myElement').addClass('myFirstClass mySecondClass');\n</code></pre>\n<p>Here’s the original code inside of jQuery 1.3.2. Note how the classNames string is split, and elem.className is changed for each split entry.</p>\n<pre><code>add: function( elem, classNames ) {\njQuery.each((classNames || &quot;&quot;).split(/\\s+/), function(i, className){\n    if ( elem.nodeType == 1 &amp;&amp; !jQuery.className.has( elem.className, className ) )\n        elem.className += (elem.className ? &quot; &quot; : &quot;&quot;) + className;\n    });\n},\n// ...\n</code></pre>\n<p>This may cause longer than needed delays, as reflow may occur after every class is added individually. If absolutely necessary, you can always fall back to modifying the className yourself, like so:</p>\n<pre><code>$('#myElement').each(function() {\n   this.className += ' myFirstClass mySecondClass';\n});\n</code></pre>\n<p>Most likely, this isn’t a tip that will be needed, but it is useful to be aware of.</p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"e37a6366e886153d4d3dfe3be174f7f7","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921762},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"beyond tellerrand—Düsseldorf","link":"http://www.zachleat.com/web/btconf-duesseldorf/","description":"\n\t\t\t\t<p><em>This content lives somewhere else. It was originally posted at: <a href=\"https://beyondtellerrand.com/events/duesseldorf-2019\">https://beyondtellerrand.com/events/duesseldorf-2019</a></em></p>\n\t\t\t\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"7f9d7adb79324d9f45cd298714847309","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921771},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"A Hypocrite’s Guide to Public Speaking","link":"http://www.zachleat.com/web/public-speaking/","description":"\n\t\t\t<p>Speaking at Barcamp in Omaha has turned into something of a tradition for me. Even though we’ve been busy with a new baby and getting our house ready to sell, I made the foolhardy decision to keep the tradition alive this year.</p>\n<p>I love Barcamp because there is a palpable, scrappy energy to the unconference format, and you can experiment with things you wouldn’t do at a more traditional conference. In that vein, I decided to take a risk—instead of giving a normal talk with normal slides and normal speaking, I thought that it would be fun to experiment in something that was almost performance art.</p>\n<p>I crafted a presentation about public speaking in which I didn't say a single word aloud.  In fact, I purposefully did the opposite of many of the best practices I knew about public speaking, including but not limited to the 10 tips outlined in the talk. Thus, the title &quot;A Hypocrite’s Guide to Public Speaking.&quot;</p>\n<p>The web-based presentation tool I used was created explicitly for this talk (you may recognize <a href=\"https://www.zachleat.com/web/bigtext-makes-text-big/\">BigText</a>) and it allowed me to do a few special things (break the rules) in a way that would have been much more difficult with traditional presentation software like Apple’s Keynote. I don't think I'll give away any more than that, have a look at the video below.</p>\n<figure>\n\t<div class=\"fullwidth\"><div class=\"fluid-width-video-wrapper\"><iframe src=\"https://www.youtube.com/embed/uH_-_mrksV4\" frameborder=\"0\" webkitallowfullscreen=\"\" mozallowfullscreen=\"\" allowfullscreen=\"\"></iframe></div></div>\n\t<figcaption><a href=\"https://www.youtube.com/watch?v=uH_-_mrksV4\">Barcamp Omaha 2015 &mdash; Zach Leatherman on A Hypocrite’s Guide to Public Speaking</a>.</figcaption>\n</figure>\n<p>There is an additional <a href=\"https://www.youtube.com/watch?v=CKZNRzKNK70\">separate video that contains the Q&amp;A from the talk</a>. Sorry—some of the questions may be inaudible.</p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"7885f7e75b98354ec7d96b2b9c77cee1","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921765},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"8 Things the YUI Library Needs to Win Me Back","link":"http://www.zachleat.com/web/8-things-the-yui-library-needs-to-win-me-back/","description":"\n\t\t\t<p>I’ve been cheating on my first love.  When I first started seriously JavaScripting and not CopyPasteScripting, my first framework was the Yahoo User Interface Library.  I was just beginning to realize the power of a JavaScript framework, but at the time I also thought that the Dom was an actor in Hollywood’s <a href=\"http://www.domdeluise.com/\">The Cannonball Run</a>.  Hey, everyone’s gotta get their start somewhere.</p>\n<p><img src=\"https://www.zachleat.com/web/wp-content/uploads/2007/07/dom.jpg\" alt=\"Dom\"></p>\n<p>But now I’ve been learning advanced JavaScripting techniques.  I’m not a bad person… but I’ve been experimenting with new frameworks while YUI was out of town on business.  And ever since I’ve been going behind YUI’s back, I’ve been feeling guilty because it feels so good to cheat.  I am experiencing all these new JavaScript programming ideas that I’ve never felt before.  But at the same time, I feel regret.  We are still friends and I still hang out with YUI often, but I know she wants me back full time.  I am open to that possibility, but first I want her to change a few things.</p>\n<ol>\n<li>CSS Selector Engine:  All the major frameworks are doing it.  cssQuery started it (I think?).  jQuery was built on it.  Ext revolutionized it.  Even Mootools, Prototype, and Dojo have their own implementations.  Where is my baby?</li>\n<li>An <strong>official</strong> community driven plug-in system: No, I’m not talking about <a href=\"http://yazaar.org/\">yazaar.org</a>, although it is a good idea.  I want something official, to give credibility to plug-in contributors.  You can still have control of your main components, but why not open it up?</li>\n<li>An iterator?  I’m of course talking about the each() function in jQuery, which operates on both Array’s and Object’s without discretion.</li>\n<li>Easier Databinding.  Why do I have to program my own logic to iterate through the XML returned in my Ajax call?  At least something that allows me to query an XML document easier (see CSS Selector Engine)</li>\n<li>I know I probably shouldn’t be talking about the component controls, since those are really ancillary to the framework, but a DataTable that supports both horizontal and vertical scrolling while always showing the headers!</li>\n<li>Form Validation Utility, or at least a few convenience functions to deal with forms, especially radios and checkboxes.</li>\n<li>Of course, I would have said easier operations on HTMLElement’s, but the new YUI Element (Beta) Utility is doing wonders there.  But how about some sort of DOM Creation class?  Of course, I couldn’t mention this without plugging the DOM Creation class I built for YUI called <a href=\"https://www.zachleat.com/web/2007/07/07/domdom-easy-dom-element-creation/\">DOMDom</a>.</li>\n<li>Client Browser Detection.  While I would never encourage sniffing glue, sometimes sniffing the browser is unavoidable.  This would be a nice convenience when porting plug-in code from other libraries as well.</li>\n</ol>\n<p>Some might say Chaining, one of jQuery’s biggest features or a la Dustin Diaz’s extension to YUI called DED|Chain.  But to be quite honest, that doesn’t bother me too much.  Chaining might increase convenience a little bit, but perhaps at the sacrifice of a small amount of code readability.  Either way, it isn’t necessary to me.</p>\n<p>So, there you have it.  YUI, you will always have a piece of my heart.  But for now, you only have a piece.  Do you want me back or not?</p>\n<p>I’ll go over what I’m looking for in the new library I’ve been eyeing in a future article I’m tentatively calling “X Things jQuery Needs to Win Me Over.”  Stay tuned.</p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"https://www.zachleat.com/web/wp-content/uploads/2007/07/dom.jpg","linkMd5":"9954300604c45ab3d90d02e8a8c57363","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn86@2020_4/2020/08/25/02-02-03-200_073bb3e331f1fc90.webp","destWidth":131,"destHeight":108,"sourceBytes":11978,"destBytes":2876,"author":"","articleImgCdnMap":{"https://www.zachleat.com/web/wp-content/uploads/2007/07/dom.jpg":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn86@2020_4/2020/08/25/02-02-03-200_073bb3e331f1fc90.webp"},"publishedOrCreatedDate":1598320921760},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Tips for Programming JavaScript Functions","link":"http://www.zachleat.com/web/tips-for-programming-javascript-functions/","description":"<p><em>This article is about my personal coding style, given little tips and tricks that I use to make my code cleaner and more readable.</em></p> \n<h2 id=\"required-and-optional-arguments\">Required and Optional Arguments <a class=\"direct-link\" href=\"http://www.zachleat.com/web/tips-for-programming-javascript-functions/#required-and-optional-arguments\">#</a></h2> \n<p>There are generally two styles used when programming a new function in JavaScript. The first, most obvious, and least extensible method is putting each argument as its own argument in the function definition, as so:</p> \n<pre><code>// For our purposes, assume arg1 is required, and arg2 and arg3 are optional.\nfunction myFunction(arg1, arg2, arg3) {\n   arg2 = arg2 || 'defaultValue';\n   arg3 = arg3 || 'defaultValue';\n}\n</code></pre> \n<p>One obvious downside to this method is that it requires a line of code for each optional argument to define a default value. What if you want to pass in an arg3, but not an arg2? Your call could end up like: <code>myFunction('myArg1', null, 'myArg3');</code>. This might work in the beginning, but what about when you have more than 3 arguments defined? That’s going to get messier than a Dick Cheney hunting party.</p> \n<p>The next method people generally move to when they have a lot of optional arguments in their function definition is to put all the arguments into a single object argument, like the following:</p> \n<pre><code>// taken from jQuery\n $.ajax({\n   type: \"POST\",\n   url: \"some.php\",\n   data: \"name=John&amp;location=Boston\",\n   success: function(msg){}\n });\n</code></pre> \n<p>The benefit to this method is that you can populate all the defaults easily by using jQuery.extend, like so:</p> \n<pre><code>// simulated code, not from jQuery\n$.ajax = function(args)\n{\n    var defaultArgs = {\n        type: 'GET',\n        data: '',\n        dataType: 'text'\n    };\n    // overwrites defaultArgs with args values, stores result into args.\n    args = jQuery.extend({}, defaultArgs, args);\n    if(!args['url']) {\n          return;\n    }\n};\n</code></pre> \n<p>The args object would end up with the following value:</p> \n<pre><code>{\n   type: \"POST\",\n   url: \"some.php\",\n   data: \"name=John&amp;location=Boston\",\n   success: function(msg){},\n   dataType: 'text'\n}\n</code></pre> \n<p>This method can be easily seen as extensible. You could put a metric shit ton of optional arguments in your function (the option is there, I won’t judge you), and you could define them in any order inside of the object without having to put in null spacers like the previous method.</p> \n<p>But what about required arguments? The Ajax method above requires a URL, and the script can’t guess a default for that variable. But it isn’t immediately obvious to the end-user that URL is always required. And what’s more, you’ll have to put specific code inside your function to check that the required arguments were sent in the object. (Think <code>if(!args['url']) { return; }</code> as shown two code blocks up.)</p> \n<p>Which leads me to my favorite way to define functions: a combination of the two methods. Declare your required arguments as explicit arguments, and pile the rest into an optional arguments object. Here I’ll show you how I would define the Ajax function using this method:</p> \n<pre><code>// jQuery doesn't use this argument structure, so don't copy and paste this.\n $.ajax('some.php', {\n   type: \"POST\",\n   data: \"name=John&amp;location=Boston\",\n   success: function(msg){}\n });\n</code></pre> \n<p>This way, it is immediately obvious which is a required argument and which is optional, and your required arguments will never be accidentally assigned a default value in your code. If the end-user doesn’t send in all of the required arguments, the resulting error message will be obvious and easily fixed, without a ton of code inside of your function to check that the end-user obeyed the function defintion.</p> \n<h2 id=\"setting-default-values-for-optional-arguments\">Setting Default Values for Optional Arguments <a class=\"direct-link\" href=\"http://www.zachleat.com/web/tips-for-programming-javascript-functions/#setting-default-values-for-optional-arguments\">#</a></h2> \n<p>When developing code, sometimes it is obvious that the method described above for optional arguments may be overkill for a tiny little utility method. Sometimes you just want a boolean flag, or a single optional argument. When that occassion arrives, it’s time to put on your robe and coding hat, because we’re going to town.</p> \n<p>In the beginning of JavaScript maturity, my <code>&lt;body&gt;</code> was going through a lot of changes. I was confused about a lot of things, and you’d see a lot of lines of code like this (embarrassingly enough):</p> \n<pre><code>function myFunction(runDoSomething)\n{\n     if(runDoSomething == null) {\n          // never make your default true, as I'll show you below\n          runDoSomething = true;\n     }\n     if(runDoSomething) {\n          doSomething();\n     }\n}\n</code></pre> \n<p>Ugh, checking against null? Janet Reno looked better in the morning. But now that I’m a full grown man that can open his own pickle jars, I’ve got some guidelines:</p> \n<ol> \n <li> <p>When the argument is optional and might be left out, define it in your code in such a way that if it does have a value, it will not evaluate to boolean false (0, false, undefined, null, ”, NaN). In other words, don’t make the value the user passes in for this argument be false. False is the value it should have when it’s empty. See the example below:</p> <pre><code>// runDoSomething is still optional\nfunction myFunction(runDoSomething)\n{\n     if(runDoSomething) {\n          doSomething();\n     }\n}\n</code></pre> <p>We didn’t have to assign a default value to arg1, because if it’s <code>null</code>, then <code>doSomething()</code> won’t execute. Don’t ever use arg1 in a way that would have you passing in false, because false and null are the same in a boolean comparison.</p> </li> \n <li> <p>When using non-boolean optional arguments, another way to avoid assigning a default value to an optional argument is to use the OR operator to give you a default value where you’re using it. This is really only useful when you use the argument in one single place inside of your function. If you’re using it more than once, it’s best to define the default value at the top of the function.</p> <pre><code> function myFunction(arg1)\n {\n      // arg1 is used only once\n      jQuery('#myId').html(arg1 || 'myDefaultValue');\n }\n function myFunction(arg1)\n {\n      arg1 = arg1 || 'myDefaultValue;\n      // arg1 is used multiple times\n      jQuery('#myId').html(arg1);\n      jQuery('#myOtherId').html(arg1);\n }\n</code></pre> </li> \n</ol> \n<p>Hopefully you’ve learned something from this post. It is the byproduct of many mistakes and overcomplicated functions that I’ve refactored to end up with this result.</p>","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"e3d6dada5b0ca65ae947bcd53d550b10","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921761},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Deferreds and a Better Geolocation API","link":"http://www.zachleat.com/web/deferred-geolocation/","description":"\n\t\t\t<p><em>Warning, this article is intended for Deferred unbelievers to convince them that Deferred objects are both easy and useful. If you’re already a Deferred object expert, you might want to skip this one.</em></p>\n<p>Earlier this year I was given the opportunity to attend the jQuery Conference in San Francisco. I was delighted to go, able to finally meet some of the JavaScript greats I’d been stalking following online for years.</p>\n<p>Looking back on the conference, the one presentation that had the <strong>biggest impact on the way that I code</strong> had to have been <a href=\"https://twitter.com/danheberden\">Dan Heberden</a>‘s “<a href=\"http://danheberden.com/presentations/deferreds-putting-laziness-to-work/\">Deferreds, Putting Laziness to Work.</a>” (I would be remiss if I didn’t also mention inspiration from a <a href=\"http://speakerdeck.com/u/eliperelman/p/jquery-deferreds-and-promises\">recent presentation</a> by <a href=\"https://twitter.com/eliperelman\">Eli Perelman</a> at the <a href=\"http://www.meetup.com/jquery-omaha/\">Omaha jQuery Meetup</a>.)</p>\n<p>At first, Deferred objects sound scary. I can assure you that they’re actually incredibly easy and incredibly useful. Today we’ll go through the simple task of <strong>reworking the <a href=\"http://www.w3.org/TR/geolocation-API/\">Geolocation API</a> to use jQuery Deferred objects</strong>.</p>\n<p>Here is the standard Geolocation API to retrieve the user’s current position:</p>\n<pre class=\"language-js\"><code class=\"language-js\">navigator<span class=\"token punctuation\">.</span>geolocation<span class=\"token punctuation\">.</span><span class=\"token function\">getCurrentPosition</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">position</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token comment\">// success</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token comment\">// failure</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token comment\">// options</span><br>  enableHighAccuracy<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>When the above API is called, a prompt is shown to the user asking if they want to divulge their location information to the domain of the currently active web site. Typically this prompt is a non-blocking asynchronous operation (although not explicitly defined in the specification).</p>\n<p>Let’s go ahead and change it to use a jQuery Deferred object:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">getCurrentPositionDeferred</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">options</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">var</span> deferred <span class=\"token operator\">=</span> $<span class=\"token punctuation\">.</span><span class=\"token function\">Deferred</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  navigator<span class=\"token punctuation\">.</span>geolocation<span class=\"token punctuation\">.</span><span class=\"token function\">getCurrentPosition</span><span class=\"token punctuation\">(</span>deferred<span class=\"token punctuation\">.</span>resolve<span class=\"token punctuation\">,</span> deferred<span class=\"token punctuation\">.</span>reject<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">return</span> deferred<span class=\"token punctuation\">.</span><span class=\"token function\">promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Notice that the success callback is replaced by the deferred object’s resolve method and the error callback is replaced by the reject method. All of our function arguments are removed from the API. We’re left with one simple options argument.</p>\n<p>This allows us to do things like:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">getCurrentPositionDeferred</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><br>  enableHighAccuracy<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">done</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token comment\">// success</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">fail</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token comment\">// failure</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">always</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token comment\">// executes no matter what happens.</span><br>  <span class=\"token comment\">// I've used this to hide loading messages.</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token comment\">// You can add an arbitrary number of</span><br><span class=\"token comment\">// callbacks using done, fail, or always.</span></code></pre>\n<p>We could also use <code>$.when</code> to run code upon completion of two arbitrary and contrived operations like a Geolocation call and an Ajax request. Awesome.</p>\n<p>To coordinate between multiple Deferred objects, use $.when:</p>\n<pre class=\"language-js\"><code class=\"language-js\">$<span class=\"token punctuation\">.</span><span class=\"token function\">when</span><span class=\"token punctuation\">(</span><span class=\"token function\">getCurrentPositionDeferred</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> $<span class=\"token punctuation\">.</span><span class=\"token function\">ajax</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/someUrl\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">done</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token comment\">// both the ajax call and the geolocation call have finished successfully.</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>I wonder what other browser native APIs could be better served by using Deferred objects instead of function arguments.</p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"558cf2a2b5a905d0fa7d1ed747280ed1","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921763},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"The Crushing Weight of the Facepile","link":"http://www.zachleat.com/web/facepile/","description":"<p>I was cruising my own web site with DevTools open (as one does) and browsed to my latest blog post only to be <em>slapped in the face</em> with a 3.7MB web site. My web site (on a blog post page without content images) is normally about 400KB. What happened??</p> \n<p>Astute readers of blog post titles may already be ahead of me here—the more successful the blog post got on social media, the more webmentions it got, and the cluster of avatars below the post (<a href=\"https://indieweb.org/facepile\">the facepile</a>, as it is known) grew and grew.</p> \n<h2 id=\"what-should-i-do%3F\">What should I do? <a class=\"direct-link\" href=\"http://www.zachleat.com/web/facepile/#what-should-i-do%3F\">#</a></h2> \n<ol> \n <li>My first instinct was to make the images intrinsically smaller. Solve the problem at the root! Some of them came back from <a href=\"http://webmention.io/\">webmention.io</a>’s avatar cache as 256×256—one was 135KB 😱. I filed <a href=\"https://github.com/aaronpk/webmention.io/issues/126\">an issue upstream</a> for this. But I needed to solve this problem immediately, locally.</li> \n <li>Use <a href=\"https://cloudinary.com/\">Cloudinary</a> or <a href=\"https://www.imgix.com/\">imgix</a> or <a href=\"https://www.netlify.com/docs/image-transformation/\">Netlify Image transformations</a> or some other free-for-now or free-metered or fully paid service to resize these automatically. I started down this road and decided it was a little much for a personal site.</li> \n <li><em>“Zach, you’re just being vain—simply cap the list and only show a few of these images maximum.”</em> I mean, yeah, I guess. But I also like investing in showcasing webmentions fairly prominently on my site because I’m trying to be an advocate for <a href=\"https://indieweb.org/\">IndieWeb</a>.</li> \n <li>Use <code>loading=\"lazy\"</code> to lazy load these images. I was already doing this but <a href=\"https://caniuse.com/#feat=loading-lazy-attr\">browser support is non-existent</a>, currently.</li> \n <li>Take control of it myself and use <code>IntersectionObserver</code> to lazy load them only when they come into view. <code>IntersectionObserver</code> <a href=\"https://caniuse.com/#feat=intersectionobserver\">browser support</a> is pretty good now. I decided to go with this low hanging fruit for now (at least as a short term solution).</li> \n</ol> \n<h2 id=\"enter-intersectionobserver\">Enter <span class=\"cased\">IntersectionObserver</span> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/facepile/#enter-intersectionobserver\">#</a></h2> \n<h3 id=\"html\">HTML <a class=\"direct-link\" href=\"http://www.zachleat.com/web/facepile/#html\">#</a></h3> \n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>/web/img/webmention-avatar-default.svg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>https://webmention.io/avatar/…<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>Author name<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>webmentions__face<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span></code></pre> \n<h3 id=\"javascript\">JavaScript <a class=\"direct-link\" href=\"http://www.zachleat.com/web/facepile/#javascript\">#</a></h3> \n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">typeof</span> IntersectionObserver <span class=\"token operator\">!==</span> <span class=\"token string\">\"undefined\"</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token string\">\"forEach\"</span> <span class=\"token keyword\">in</span> <span class=\"token class-name\">NodeList</span><span class=\"token punctuation\">.</span>prototype <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>\t<span class=\"token keyword\">var</span> observer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IntersectionObserver</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">changes</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"connection\"</span> <span class=\"token keyword\">in</span> navigator <span class=\"token operator\">&amp;&amp;</span> navigator<span class=\"token punctuation\">.</span>connection<span class=\"token punctuation\">.</span>saveData <span class=\"token operator\">===</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>\t\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span><br>\t\t<span class=\"token punctuation\">}</span><br><br> changes<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">change</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>change<span class=\"token punctuation\">.</span>isIntersecting<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br> change<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"src\"</span><span class=\"token punctuation\">,</span> change<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"data-src\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br> observer<span class=\"token punctuation\">.</span><span class=\"token function\">unobserve</span><span class=\"token punctuation\">(</span>change<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br> <span class=\"token punctuation\">}</span><br> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"img[data-src]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">img</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br> observer<span class=\"token punctuation\">.</span><span class=\"token function\">observe</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></code></pre> \n<p>This means that if JavaScript hasn’t loaded yet or failed somewhere, these avatars would stick with the default image I’ve specified—I’m okay with that.</p> \n<p>I also added a little check to skip the load if the <a href=\"https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/save-data/\">Save-Data user preference</a> was enabled.</p> \n<h2 id=\"bonus%3A-details\">Bonus: Details <a class=\"direct-link\" href=\"http://www.zachleat.com/web/facepile/#bonus%3A-details\">#</a></h2> \n<p>The other great thing about using <code>IntersectionObserver</code> is that if the images aren’t visible they aren’t loaded. For example, I hide Replies and Mentions inside of closed <code>&lt;details&gt;</code> elements.</p> \n<div class=\"livedemo\"> \n <details> \n  <summary>1 REPLY</summary> \n  <ol class=\"static-comments static-comments-webmentions\"> \n   <li class=\"static-comments-reply static-comments-reply-salty h-cite\" id=\"webmention-623655\"> \n    <div class=\"static-comments-hed\"> \n     <img class=\"static-comments-img u-photo\" src=\"https://www.zachleat.com/web/img/webmention-avatar-default.svg\" data-src=\"https://webmention.io/avatar/pbs.twimg.com/0bcc1fa9d76d585952d16f48507fe6905723dacefa6dfe47930e79eb03af864a.jpg\" alt=\"Jeremy Swinnen\"><h3 class=\"static-comments-title p-name cased\" title=\"Jeremy Swinnen @jereswinnen\">Jeremy Swinnen <span class=\"static-comments-title-twitter\">@jereswinnen</span></h3> <em class=\"static-comments-date\"><a class=\"h-card u-url\" href=\"https://twitter.com/jereswinnen/status/1137642852794687488\" target=\"_blank\" rel=\"noopener noreferrer\"><time class=\"dt-published\" datetime=\"2019-06-09T08:49:27+00:00\">3:49AM<br>&nbsp;09 Jun 2019</br></time></a></em> </img>\n    </div> \n    <div class=\"static-comments-msg p-content\">\n     <p> TOTAlLy GOnNa STeAL THiS foR MY BLOg 😉<a href=\"http://www.zachleat.com/web/facepile/#webmention-623655\" class=\"static-comments-selflink exempt\">#</a> </p>\n    </div> </li>\n   <!-- /static-comments-reply --> \n  </ol> \n </details> \n</div> \n<p>If <code>&lt;details&gt;</code> is supported by the browser, the avatar images will only load on demand when the user expands <code>&lt;details&gt;</code> to show the content! I love it. And if <code>&lt;details&gt;</code> is not supported the avatars are lazy loaded just like any other content.</p>","descriptionType":"html","feedId":12519,"bgimg":"https://www.zachleat.com/web/img/webmention-avatar-default.svg","linkMd5":"f9dba87be6fdbf9beeb215938358551d","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn81@2020_3/2020/08/25/02-02-02-529_34230c1f5a7bfe56.svg","destWidth":0,"destHeight":0,"sourceBytes":370,"destBytes":370,"author":"","articleImgCdnMap":{"https://www.zachleat.com/web/img/webmention-avatar-default.svg":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn81@2020_3/2020/08/25/02-02-02-529_34230c1f5a7bfe56.svg"},"publishedOrCreatedDate":1598320921772},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"The Mitt Romney Web Font Problem","link":"http://www.zachleat.com/web/mitt-romney-webfont-problem/","description":"<figure> \n <img src=\"https://www.zachleat.com/web/img/posts/mittromney/face.jpg\" alt=\"Mitt Romney at Caster Concepts\"> \n  <figcaption>\n   <a href=\"https://www.flickr.com/photos/davelawrence8/6791949310\">Mitt Romney at Caster Concepts by Dave Lawrence, on Flickr</a>\n  </figcaption> </img>\n</figure> \n<p>If you’ve read <a href=\"https://dev.opera.com/articles/better-font-face/\">the</a> <a href=\"http://www.zachleat.com/web/foft/\">neverending</a> <a href=\"http://www.filamentgroup.com/lab/font-loading.html\">series</a> of blog posts I’ve written about how fonts load on the web, you’re probably already become very familiar with the The Flash of Invisible Text (FOIT), or how the browser hides the text while the web font is loading.</p> \n<p>I wanted to highlight a particular variant of FOIT, which I’ll forever refer to as the Mitt Romney Web Font Problem. This specific problem occurs when you use multiple weights and styles of the same typeface together.</p> \n<p>In January, <a href=\"https://twitter.com/jmuspratt\">James Muspratt</a> tweeted the following image:</p> \n<figure> \n <img src=\"https://www.zachleat.com/web/img/posts/mittromney/foit.jpg\" alt=\"Screenshot of a FOIT problem on slate.com\"> \n  <figcaption>\n   <a href=\"https://twitter.com/jmuspratt/status/561239961924403200\">A tweet from James Muspratt</a>\n  </figcaption> </img>\n</figure> \n<p>The headline from <a href=\"http://slate.com/\">Slate.com</a> was important breaking news about Mitt Romney’s intention to run for President. The headline was rendered using the <del><a href=\"http://www.fontbureau.com/fonts/Apres/\">Apres</a></del> <a href=\"http://www.fontbureau.com/fonts/TitlingGothicFB/\">Titling Gothing FB</a> typeface but using two different web fonts, one for bold and one for combination bold and italic. If you don’t see the italic variation above, I’ll explain why.</p> \n<p><em><strong>Correction: As <a href=\"http://www.zachleat.com/web/mitt-romney-webfont-problem/#comment-2055839587\">Stephen Coles notes in the comments</a> the typeface is Titling Gothic, not Apres.</strong></em></p> \n<p>This is how the page looks when all of the web fonts have finished loading:</p> \n<img src=\"https://www.zachleat.com/web/img/posts/mittromney/complete.jpg\" alt=\"The finished rendering for slate.com\"> <p>Why did this happen? As you may already be aware, each web font incurs its own separate FOIT. By combining two web fonts together in a single headline, the FOIT has created a race condition that alters the integrity of the content. A glance at the headline indicates that Mitt Romney is indeed running for President. When the page finishes loading, the real message is revealed: he is, in fact, not running for President. Obviously, this is bad, and especially so for a news organization that depends on clarity and accuracy.</p> <h2 id=\"what-can-web-developers-do%3F\">What can web developers do? <a class=\"direct-link\" href=\"http://www.zachleat.com/web/mitt-romney-webfont-problem/#what-can-web-developers-do%3F\">#</a></h2> \n <ol> \n  <li>You can use the font loading solution I’ve been prescribing and documented <a href=\"https://dev.opera.com/articles/better-font-face/\">over at Dev.Opera</a>. This is by far the easiest method and will eliminate FOIT by switching to unstyled fallback text while the font is loading.</li> \n  <li>If you aren’t comfortable with eliminating FOIT, you can also group your font loads into a single repaint, shown in the Appendix 1 code sample below.</li> \n  <li>You can also use the previously documented <a href=\"https://www.zachleat.com/web/foft/\">Flash of Faux Text</a> approach, utilizing font-synthesis to show browser generated bold and italic fallbacks while the real web fonts load.</li> \n </ol> <h2 id=\"what-should-web-browsers-do%3F\">What should web browsers do? <a class=\"direct-link\" href=\"http://www.zachleat.com/web/mitt-romney-webfont-problem/#what-should-web-browsers-do%3F\">#</a></h2> <p>I only feel more strongly now that web browsers should fix this problem natively. They should apply the blocking font-rendering behavior in a smarter way. The browser knows when it is loading multiple <code>@font-face</code> fonts of the same typeface that have matching <code>font-family</code> properties and vary only by <code>font-weight</code> and <code>font-style</code>. It could use this information to assign a smarter priority level to each <code>@font-face</code> block.</p> \n <ul> \n  <li><code>font-weight</code> priority list: <code>400</code>, <code>500</code>, <code>300</code>, <code>200</code>, <code>100</code>, <code>600</code>, <code>700</code>, <code>800</code>, <code>900</code></li> \n  <li><code>font-style</code> priority list: <code>normal</code>, <code>italic</code>, <code>oblique</code></li> \n </ul> <p>Coincidentally, this matches the order in which the <code>@font-face</code> matching algorithm looks for a <code>@font-face</code> block to match up with a default styled element (<code>font-weight: 400; font-style: normal</code>).</p> <p>For example, if the browser is loading <code>@font-face</code> blocks for the Roman and Bold variations of a typeface, place a higher priority on the lighter weight web font (maybe even treating the heavier weights similar to how the browser treats non-matching <code>media</code> stylesheets like <code>print</code>). If the lighter Roman version finishes first, the browser can then use <code>font-synthesis</code> to also remove the FOIT for the Bold variation, showing more text sooner. When the Bold variation finishes, it can swap in to replace the Faux Bold version.</p> <p>This proposed browser default behavior would solve the Mitt Romney Web Font Problem without web developers having to apply fixes to their own sites individually.</p> <h2 id=\"what-should-mitt-romney-do%3F\">What should Mitt Romney do? <a class=\"direct-link\" href=\"http://www.zachleat.com/web/mitt-romney-webfont-problem/#what-should-mitt-romney-do%3F\">#</a></h2> <p>Those of us that remember <a href=\"http://www.washingtonpost.com/blogs/the-fix/wp/2013/03/04/why-mitt-romneys-47-percent-comment-was-so-bad/\">Mitt Romney’s sordid remarks about 47% of Americans</a> know that his words may have cost him the 2012 US Presidential Election.</p> <p>It is unlikely to be coincidence that just a few short weeks after the Mitt Romney Web Font Problem was documented on Twitter, HTTP Archive reported that <a href=\"http://httparchive.org/trends.php?s=Top1000&amp;minlabel=May+15+2014&amp;maxlabel=May+15+2015#perFonts\">web font usage among the top 1000 web sites grew to 47%</a>.</p> <p>The 47% continue to plague his legacy. I expect that we’ll see a press release from his media team shortly.</p> <h2 id=\"appendix-1%3A-keeping-foit%2C-grouping-repaints\">Appendix 1: Keeping FOIT, Grouping Repaints <a class=\"direct-link\" href=\"http://www.zachleat.com/web/mitt-romney-webfont-problem/#appendix-1%3A-keeping-foit%2C-grouping-repaints\">#</a></h2> <p>Example variable names are for the <a href=\"https://www.google.com/fonts/specimen/Raleway\">Raleway typeface</a> but are easily changed for any web font.</p> <h3 id=\"css\">CSS <a class=\"direct-link\" href=\"http://www.zachleat.com/web/mitt-romney-webfont-problem/#css\">#</a></h3> <pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.raleway-loading body</span> <span class=\"token punctuation\">{</span><br>\t<span class=\"token property\">color</span><span class=\"token punctuation\">:</span> transparent<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><span class=\"token selector\">.raleway-fallback body,<br>.raleway-loaded body</br></span> <span class=\"token punctuation\">{</span><br>\t<span class=\"token property\">color</span><span class=\"token punctuation\">:</span> inherit<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><span class=\"token selector\">.raleway-fallback body</span> <span class=\"token punctuation\">{</span><br> <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> serif<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><span class=\"token selector\">.raleway-loaded body</span> <span class=\"token punctuation\">{</span><br> <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> Raleway<span class=\"token punctuation\">,</span> serif<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span></br></br></br></br></br></br></br></br></br></br></br></code></pre> <h3 id=\"javascript\">JavaScript <a class=\"direct-link\" href=\"http://www.zachleat.com/web/mitt-romney-webfont-problem/#javascript\">#</a></h3> <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> docEl <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">;</span><br>docEl<span class=\"token punctuation\">.</span>className <span class=\"token operator\">+=</span> <span class=\"token string\">\" raleway-loading\"</span><span class=\"token punctuation\">;</span><br><br><span class=\"token comment\">// This example uses a 1 second timeout,</span><br><span class=\"token comment\">// adjust as needed.</span><br>window<span class=\"token punctuation\">.</span><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br> docEl<span class=\"token punctuation\">.</span>className <span class=\"token operator\">+=</span> <span class=\"token string\">\" raleway-fallback\"</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br><span class=\"token comment\">// Using the CSS Font Loading API</span><br>Promise<span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><br> document<span class=\"token punctuation\">.</span>fonts<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"400 1em Raleway\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br> document<span class=\"token punctuation\">.</span>fonts<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"700 1em Raleway\"</span><span class=\"token punctuation\">)</span><br><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br> docEl<span class=\"token punctuation\">.</span>className <span class=\"token operator\">+=</span> <span class=\"token string\">\" raleway-loaded\"</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br><span class=\"token comment\">// Converting this to use a Polyfill syntax</span><br><span class=\"token comment\">// is an exercise left to the reader.</span></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></code></pre> \n <div class=\"retweettoshare\"> \n  <h3 class=\"retweettoshare_title\">Retweet to share this post</h3> \n  <div class=\"retweettoshare_widget\"> \n   <blockquote class=\"twitter-tweet\" data-lang=\"en\">\n    <p lang=\"en\" dir=\"ltr\">★ The Mitt Romney Web Font Problem <a href=\"http://t.co/isHBqCaTdb\">http://t.co/isHBqCaTdb</a> or why loading multiple web fonts for a single typeface is dangerous.</p>— Zach Leatherman (@zachleat) \n    <a href=\"https://twitter.com/zachleat/status/605364712663093248\">June 1, 2015</a>\n   </blockquote> \n  </div> \n </div> </img>","descriptionType":"html","feedId":12519,"bgimg":"https://www.zachleat.com/web/img/posts/mittromney/face.jpg","linkMd5":"4e1e863b40ad8e9fa3dbe71962c1799d","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn25@2020_5/2020/08/25/02-02-04-681_43e415652a16cbb7.webp","destWidth":1024,"destHeight":683,"sourceBytes":280882,"destBytes":46488,"author":"","articleImgCdnMap":{"https://www.zachleat.com/web/img/posts/mittromney/face.jpg":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn25@2020_5/2020/08/25/02-02-04-681_43e415652a16cbb7.webp","https://www.zachleat.com/web/img/posts/mittromney/foit.jpg":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn56@2020_4/2020/08/25/02-02-22-086_c0c8e029b98182ae.webp","https://www.zachleat.com/web/img/posts/mittromney/complete.jpg":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn94@2020_6/2020/08/25/02-02-18-306_61712e3ad83e1b5c.webp"},"publishedOrCreatedDate":1598320921765},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Web Engineering Düsseldorf","link":"http://www.zachleat.com/web/web-engineering-duesseldorf/","description":"\n\t\t\t\t<p><em>This content lives somewhere else. It was originally posted at: <a href=\"https://www.meetup.com/Web-Engineering-Duesseldorf/events/260995020/\">https://www.meetup.com/Web-Engineering-Duesseldorf/events/260995020/</a></em></p>\n\t\t\t\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"8f7a3be951311248a808c413a4278126","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921771},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Minor Annoyances with Firefox Development","link":"http://www.zachleat.com/web/minor-annoyances-with-firefox-development/","description":"\n\t\t\t<p>When you’re developing web applications in Firefox, do you find yourself constantly clearing your cache? Cache is a useful facet of web browsing for everything but the continuous testing environment of web development. Here’s a nice alternative so that you don’t have to disable your cache entirely:</p>\n<p>Use the Firefox Plug-In called (humorously enough) <a href=\"https://addons.mozilla.org/en-US/firefox/addon/3817\"><strong>JohnnyCache</strong></a>. I added the pattern ‘<a href=\"http://localhost/%E2%80%99\">http://localhost/’</a> to my preferences and now I don’t have to worry about cache on my local machine anymore. Simple, easy, effective.</p>\n<p>Now only if I knew how to disable the Firefox preference that autopopulates form fields with default values when F5 is hit to refresh the page. Try creating a page with a single text field, type a value into the form, and then hit F5 to refresh the page. Your value will be prefilled into the form.</p>\n<p>I find myself always hitting “CTRL L” (goes to the Location Bar) and “Enter” to avoid that one. I looked through about:config, but only found: signon.prefillForms (related to usernames and passwords), and browser.formfill.enable (related to autocomplete dropdowns for forms, not default values).</p>\n<p>Anyone know an easier method?</p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"55f5d1e68df4ac4a2433b88ebe7e1132","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921761},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Happy Birthday Eleventy! 🎉","link":"http://www.zachleat.com/web/eleventy-birthday/","description":"<p>Eleventy’s <a href=\"https://github.com/11ty/eleventy/commit/00ad9192605d5d501de6aae193701c5a2297ef2c\">very first commit</a> was on November 26, 2017—which makes today Eleventy’s first birthday!</p> \n<p>Not familiar with Eleventy? Read more about <a href=\"https://www.zachleat.com/web/introducing-eleventy/\">the project’s goals</a>.</p> \n<p>In one short year, Eleventy has released <a href=\"https://www.11ty.io/docs/versions/\">40 different versions</a>, collected <a href=\"https://github.com/11ty/eleventy/stargazers\">~1100 GitHub stars</a>, closed 257 issues, and written 535 unit tests! We have historical documentation for <a href=\"https://www.11ty.io/docs/versions/\">all versions of the project</a>.</p> \n<p>The <a href=\"https://www.11ty.io/docs/testimonials/\">reviews and feedback so far</a> have been really lovely. The project won a <a href=\"https://www.zachleat.com/web/google-award/\">Google Open Source Award</a>. It’s being used to build the <a href=\"https://v8.dev/\">official Google V8 JavaScript engine web site</a> (and <a href=\"https://www.11ty.io/docs/sites/\">many other sites</a>).</p> \n<h2 id=\"project-naming\">Project Naming <a class=\"direct-link\" href=\"http://www.zachleat.com/web/eleventy-birthday/#project-naming\">#</a></h2> \n<p>Astute observers will note that the <a href=\"https://github.com/11ty/eleventy/commit/00ad9192605d5d501de6aae193701c5a2297ef2c\">first version</a> was actually called <code>elevenisland</code>. I had intended to use the abbreviation <code>11Il</code>, three distinct characters noted for their typographic confusion. Looking back on this, I think I made the right decision not to take this path.</p> \n<p>Some might think that the name Eleventy is an homage to Spinal Tap (<em>turn it up to eleven</em>) or more directly, Lord of the Rings. I chose it because of a story my grandma Nonnie loved to tell about how I learned to count. Rather than move from ten to eleven like a normal child, I felt it appropriate to use the <code>teen</code> suffix for the numbers eleven and twelve, counting “ten, eleventy-teen, twelvety-teen, thirteen, …” I always liked that story and it seemed as appropriate a reason as any.</p> \n<h2 id=\"a-few-tips-for-open-source-project-management\">A Few Tips for Open Source Project Management <a class=\"direct-link\" href=\"http://www.zachleat.com/web/eleventy-birthday/#a-few-tips-for-open-source-project-management\">#</a></h2> \n<p>Keep in mind that this is a side project for me. I work on this after my kid goes to sleep and not when she wants to play with me (which is all the time 😀). How does this work?</p> \n<blockquote> \n <p>May your open source projects be just successful enough but not too successful<br> —<a href=\"https://twitter.com/zachleat/status/953740453505052672\">January 17, 2018</a></br></p> \n</blockquote> \n<h3 id=\"don%E2%80%99t-push-yourself\">Don’t Push Yourself <a class=\"direct-link\" href=\"http://www.zachleat.com/web/eleventy-birthday/#don%E2%80%99t-push-yourself\">#</a></h3> \n<p>This is probably the most important thing I’ve learned from managing an open source side project. If you’re not feeling it, don’t force yourself to work on it! If you force it, you’ll burn out. Let it go and don’t feel bad about it 😇. Open source is a marathon, not a sprint. Time off from the project is an investment in the project’s longevity.</p> \n<h3 id=\"obsessively-write-tests\">Obsessively Write Tests <a class=\"direct-link\" href=\"http://www.zachleat.com/web/eleventy-birthday/#obsessively-write-tests\">#</a></h3> \n<p>Tests are an investment in things I don’t want to waste time on later. I wrote a lot of tests and have been getting really good mileage out of the <a href=\"https://github.com/avajs\">Ava JavaScript test runner</a>.</p> \n<h3 id=\"issues-are-a-gift\">Issues are a Gift <a class=\"direct-link\" href=\"http://www.zachleat.com/web/eleventy-birthday/#issues-are-a-gift\">#</a></h3> \n<p>I do want to say thank you to everyone that opened an issue with a question or a bug or a feature request. I know many open source maintainers will complain that issues are a distraction but they are truly the most valuable signal of how a project is doing. Every question is an opportunity to find the confusing parts of the software. Every bug report can expose a test that is missing from your test suite. Every feature request is a tiny sliver of hope for what the project could be!</p> \n<p>This tweet made me so happy:</p> \n<blockquote> \n <p>This here is just a shoutout to <a href=\"https://twitter.com/zachleat\">@zachleat</a> not only for the great work on <a href=\"https://twitter.com/eleven_ty\">@eleven_ty</a>, but for being super polite, supportive, and <em>nice</em> in responses to issues and questions on GH. All of open source should be so pleasant! 12/10, would buy a beverage of choice.<br> —sylvia villegas (@svillegastweets) <a href=\"https://twitter.com/svillegastweets/status/1064561995142197248\">November 19, 2018</a></br></p> \n</blockquote> \n<h3 id=\"close-all-feature-requests\">Close All Feature Requests <a class=\"direct-link\" href=\"http://www.zachleat.com/web/eleventy-birthday/#close-all-feature-requests\">#</a></h3> \n<p>All that being said, the best thing any open source project can do is to close all feature requests. I first saw this from <a href=\"https://twitter.com/samselikoff/status/991395669016436736\">the Lodash project in a tweet thread about how they manage their GitHub issues</a> and I decided to take a similar tact.</p> \n<p>Simply, feature request issues are closed and put into an <em>Enhancement queue</em>. I add the following macro comment to the issue (and a <code>Needs Votes</code> label) so that everyone knows what’s going on.</p> \n<blockquote> \n <p>This repository is now using <a href=\"https://twitter.com/samselikoff/status/991395669016436736\">lodash style issue management</a> for enhancements. This means enhancement issues will now be closed instead of leaving them open.</p> \n</blockquote> \n<blockquote> \n <p>The enhancement backlog can be found here: <a href=\"https://github.com/11ty/eleventy/issues?utf8=%E2%9C%93&amp;q=label%3Aneeds-votes+sort%3Areactions-%2B1-desc+\">https://github.com/11ty/eleventy/issues?utf8=✓&amp;q=label%3Aneeds-votes+sort%3Areactions-%2B1-desc+</a></p> \n</blockquote> \n<blockquote> \n <p>Don’t forget to upvote the top comment with 👍!</p> \n</blockquote> \n<p>When a feature request is completed, the <code>Needs Votes</code> label is removed.</p> \n<p>I’ve managed open source projects before and they all inevitably fall prey to scope creep. A project designed to solve a specific need is suddenly exposed to the world, a world full of people with slightly different needs. It is a net-positive that those needs are communicated, but enhancements are often the most time consuming type of issue one can open. You can’t please everyone and even letting those requests occupy brain-time can be damaging to a project’s momentum. So, closing feature request issues is a lovely way to mitigate that drag and has the side effect of letting bug issues quickly rise to the top, increasing bug fix momentum.</p> \n<p>I really believe that this is the best decision any open source project can make for a maintainer’s well-being.</p> \n<h2 id=\"thank-you!\">Thank You! <a class=\"direct-link\" href=\"http://www.zachleat.com/web/eleventy-birthday/#thank-you!\">#</a></h2> \n<p>Thank you to everyone that has supported my little project. Thank you to everyone that has tried it out, left some feedback, recommended it to a friend, or sent out a tweet about Eleventy. Thank you to everyone that has gifted us <a href=\"https://github.com/11ty/eleventy\">a star on GitHub</a>.</p> \n<p>I still have big plans for Eleventy—stay tuned!</p>","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"c5445eebb7e59ac99487dcc3d3d48ccb","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921771},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Smashing TV: The Five Whys of Web Font Loading Performance","link":"http://www.zachleat.com/web/smashingtv/","description":"<p class=\"primarylink\">Go to <a href=\"https://www.smashingmagazine.com/smashing-tv/five-whys-of-web-font-loading-performance/\">Smashing TV: The Five Whys Of Web Font Loading Performance</a></p> \n<h2 id=\"slides\">Slides <a class=\"direct-link\" href=\"http://www.zachleat.com/web/smashingtv/#slides\">#</a></h2> \n<div class=\"fullwidth\">\n <div class=\"fluid-width-video-wrapper\">\n  <iframe src=\"https://noti.st/zachleat/xPa1on/embed\" frameborder=\"0\" allowfullscreen=\"\"></iframe>\n </div>\n</div> \n<ul> \n <li>View on <a href=\"https://noti.st/zachleat/xPa1on/the-five-whys-of-web-font-loading-performance\">notist</a></li> \n <li><a href=\"https://noti.st/deck-c2be1cca67c57702.pdf\">Download PDF from notist</a></li> \n</ul>","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"eb7f310996fa4c1c39860a62e7e89486","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921771},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"The Web Font Loading Glossary","link":"http://www.zachleat.com/web/webfont-glossary/","description":"<p>After publishing <a href=\"https://www.zachleat.com/web/comprehensive-webfonts/\">The Comprehensive Guide to Font Loading Strategies</a>, I had a few requests to define a few terms used there. This document is a response to those requests. If something is missing below, please <a href=\"https://twitter.com/zachleat\">let me know on Twitter @zachleat</a> or in the comments.</p> \n<ul> \n <li><a href=\"http://www.zachleat.com/web/webfont-glossary/#foft\">FOFT</a></li> \n <li><a href=\"http://www.zachleat.com/web/webfont-glossary/#foit\">FOIT</a></li> \n <li><a href=\"http://www.zachleat.com/web/webfont-glossary/#descriptor\">@font-face Descriptors</a></li> \n <li><a href=\"http://www.zachleat.com/web/webfont-glossary/#font-face-matching\">Font Matching Algorithm</a></li> \n <li><a href=\"http://www.zachleat.com/web/webfont-glossary/#font-synthesis\">Font Synthesis, also Faux-bold and Faux-italic</a></li> \n <li><a href=\"http://www.zachleat.com/web/webfont-glossary/#fout\">FOUT</a></li> \n <li><a href=\"http://www.zachleat.com/web/webfont-glossary/#roman\">Roman font</a></li> \n <li><a href=\"http://www.zachleat.com/web/webfont-glossary/#subsetting\">Subsetting</a></li> \n <li><a href=\"http://www.zachleat.com/web/webfont-glossary/#system-fonts\">System Fonts</a></li> \n</ul> \n<hr> \n <dl> \n  <dt id=\"descriptor\">\n   @font-face Descriptors\n  </dt> \n  <dd>\n   Descriptors are key-value pairs inside of the \n   <code>font-face</code> block. Often incorrectly referred to as properties (properties are on the DOM elements themselves). Examples include \n   <code>font-display</code>, \n   <code>font-weight</code>, \n   <code>font-style</code>, and a few others.\n  </dd> \n  <dt id=\"font-face-matching\">\n   Font Matching Algorithm\n  </dt> \n  <dd>\n   How the browser matches a \n   <code>font-family</code> CSS property on an element to an appropriate \n   <code>@font-face</code> block. Not all the properties have to match exactly to descriptors—just the \n   <code>font-family</code>. The rest are fuzzy-matched. If there isn’t an exact match, this may result in \n   <a href=\"http://www.zachleat.com/web/webfont-glossary/#font-synthesis\">font synthesis</a>. Read more at \n   <em><a href=\"https://www.zachleat.com/web/lazy-loading-webfonts/\">Lazy Loading Web Fonts is Probably Not What You Want</a></em> and the \n   <a href=\"https://www.w3.org/TR/css-fonts-3/#font-matching-algorithm\">W3C specification</a>.\n  </dd> \n  <dt id=\"font-synthesis\">\n   Font Synthesis, also Faux-bold and Faux-italic\n  </dt> \n  <dd>\n   Controls how bold and italic variations of a roman web font are rendered, if independent web fonts for these variations don’t have appropriately matched @font-face blocks. Also known as \n   <strong>Faux-bold</strong> or \n   <strong>Faux-italic</strong> rendering. Use the \n   <a href=\"https://github.com/filamentgroup/faux-pas\">Faux-pas</a> project to highlight when this happens on your site. A few browsers support the \n   <code>font-synthesis</code> CSS property to control this (see the \n   <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/font-synthesis#Browser_Compatibility\">MDN Browser Compatibility for <code>font-synthesis</code></a>). Read more at the \n   <a href=\"https://www.w3.org/TR/css-fonts-3/#font-synthesis-prop\">W3C Specification</a>.\n  </dd> \n  <dt id=\"system-fonts\">\n   System Fonts\n  </dt> \n  <dd>\n   Fonts that are available locally on an operating system without making any network requests. Think Helvetica or Arial, Times or Times New Roman. Availability varies by operating system. Search \n   <a href=\"http://fontfamily.io/\">fontfamily.io</a> for compatibility information.\n  </dd> \n  <dt id=\"subsetting\">\n   Subsetting\n  </dt> \n  <dd>\n   Modifying the font file to include only a small portion of the original glyphs and features, typically used to optimize a font file for a single language on the web. This can be dangerous because no language is an island—proper nouns can crop up in many different places! This results in smaller font files but may also violate your font’s license agreement. Use with the \n   <code>unicode-range</code> descriptor for even better results. The \n   <a href=\"https://github.com/filamentgroup/glyphhanger\">glyphhanger</a> tool can help you diagnose what characters you need on a statically generated site to better subset your web font files.\n  </dd> \n  <dt id=\"roman\">\n   Roman font\n  </dt> \n  <dd>\n   Traditionally lowercased, roman is used to mean non-italic but in my experience (while perhaps not pedantically correct) it’s usually extended to non-bold as well. The “regular” font. Read a \n   <a href=\"https://english.stackexchange.com/questions/16090/whats-the-most-appropriate-name-for-non-italicized-text-roman-or-upright\">Non-italicized FAQ on Stack Exchange</a> or \n   <a href=\"https://en.wikipedia.org/wiki/Emphasis_(typography)#Design\">Emphasis on Wikipedia</a>.\n  </dd> \n </dl> \n <h2 id=\"acronyms\">Acronyms <a class=\"direct-link\" href=\"http://www.zachleat.com/web/webfont-glossary/#acronyms\">#</a></h2> \n <dl> \n  <dt id=\"foit\">\n   FOIT\n  </dt> \n  <dd>\n   Flash of Invisible Text: Default browser behavior to render text invisible while the web font is loading. In modern browsers, FOIT lasts a maximum of three seconds. Sometimes when I’m being incredibly accurate (pedantic), I’ll differentiate between FOIT ∞ and FOIT 3s by including the timeout as a suffix. When people say that web fonts are blocking resources, they are likely referring to FOIT. FOIT is our enemy.\n  </dd> \n  <dt id=\"fout\">\n   FOUT\n  </dt> \n  <dd>\n   Flash of Unstyled Text: Default behavior to render text with the fallback \n   <a href=\"http://www.zachleat.com/web/webfont-glossary/#system-fonts\">system font</a> while the web font has loaded. Fallback text renders after the FOIT timeout has passed—usually three seconds. Internet Explorer and Edge don’t wait—they render fallback text \n   <em>immediately</em> ❤️. FOUT is preferable to FOIT but care must be taken to minimize its reflow effect.\n  </dd> \n  <dt id=\"foft\">\n   FOFT\n  </dt> \n  <dd>\n   <a href=\"https://www.zachleat.com/web/foft/\">Flash of Faux Text</a>: A font loading strategy to render a roman web font first, and then use \n   <code>font-synthesis</code> to render bold and italic variations immediately while the remaining true bold and true italic web font variations continue to load.\n  </dd> \n </dl> \n <div class=\"retweettoshare\"> \n  <h3 class=\"retweettoshare_title\">Retweet to share this post</h3> \n  <div class=\"retweettoshare_widget\"> \n   <blockquote class=\"twitter-tweet\" data-lang=\"en\">\n    <p lang=\"en\" dir=\"ltr\">★ The Web Font Loading Glossary, a companion to the Font Loading Strategies Guide <a href=\"https://t.co/RRzVWDrPMB\">https://t.co/RRzVWDrPMB</a><br><br>Hopefully more beginner-friendly!</br></br></p>— Zach Leatherman (@zachleat) \n    <a href=\"https://twitter.com/zachleat/status/897092905617281024\">August 14, 2017</a>\n   </blockquote> \n  </div> \n </div> \n</hr>","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"e16a12f6269969826c922b5522914ed5","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921768},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Don’t Stop Learning <del>Frameworks</del>","link":"http://www.zachleat.com/web/dont-stop-learning/","description":"<p>A few days ago, I read <a href=\"https://sizovs.net/2018/12/17/stop-learning-frameworks/\">an article</a>. I liked it. I <a href=\"https://twitter.com/zachleat/status/1074776108422307840\">shared it on Twitter</a>. Some of the feedback to it was pretty negative. This post is a response to that feedback.</p> \n<p>First and foremost, I should say that I didn’t agree with everything in the blog post. If total agreement were a prerequisite to tweet, I would share zero things on Twitter (don’t get your hopes up 😇).</p> \n<blockquote> \n <p>More fundamentals! Less frameworks!<br><br>Skills with long shelf lives (unordered):<br><br>* HTML<br>* CSS<br>* JavaScript<br>* Progressive Enhancement<br>* Accessibility<br>* Typography<br>* Usability<br>* Design<br>* Clean Code and writing Testable Code<br><br>Lots of gold here: <a href=\"https://sizovs.net/2018/12/17/stop-learning-frameworks/\">https://sizovs.net/2018/12/17/stop-learning-frameworks/</a><br><br>via <a href=\"https://twitter.com/nicknisi\">@nicknisi</a><br> <br><a href=\"https://twitter.com/zachleat/status/1074776108422307840\">December 17, 2018</a></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></p> \n</blockquote> \n<p>Coming back to the article and re-reading a few days later, save for the headline it still reads as a fairly measured take. Don’t spend too much of your non-work time learning the <em>framework du jour</em> and spend time learning skills that will provide a good return on your investment and still be useful when the next thing comes along.</p> \n<blockquote> \n <p>One of the most important pieces of professional web development is prioritizing what to learn and when. It’s kind of like buying stocks. <br><a href=\"https://twitter.com/zachleat/status/860163324675227653\">May 4, 2017</a></br></p> \n</blockquote> \n<p>One caveat—I don’t think that learning a framework is a waste of time. Any act of creation is a learning opportunity, independent of your particular constraints.</p> \n<ul> \n <li>If you’re a beginner you don’t have insight into the nuances of library/framework/tool selection—maybe you’ll try out your hand at Vue. Why not? (Do it—Vue is good.)</li> \n <li>If you’re trying to find a job and the job listing requirements all say “React experience,” you’re going to want to learn React.</li> \n <li>If you already have a job and the senior developers/architects have decided that the official stack uses Angular, you’re going to want to learn Angular.</li> \n</ul> \n<blockquote> \n <p>Learn fundamentals for a career! Learn frameworks for a job! <br><a href=\"https://twitter.com/cajunAA/status/1075170373841367041\">@cajunAA on December 18, 2018</a></br></p> \n</blockquote> \n<h2 id=\"my-own-experience\">My Own Experience <a class=\"direct-link\" href=\"http://www.zachleat.com/web/dont-stop-learning/#my-own-experience\">#</a></h2> \n<p>My own web development experience has in fact traveled through a fair number of such JavaScript-specific tools. Early on in my career I learned a ton from the Yahoo! User Interface libraries. But perhaps the most idyllic example of this came early on in my web development career at the advent of Web 2.0.</p> \n<p>The year was 2006. Internet Explorer 7 was but a newborn baby and Internet Explorer 6 was the default browser on the mega-corp beige boxes adorning every matching beige box cubicle. I had just started at the company and was placed on a project that already had the software stack laid out (coupled with a very lengthy requirements document). Due to various corporate agreements, the company had purchased a suite of tools that included an “AJAX/Web 2.0” framework called TIBCO General Interface. <a href=\"https://www.zachleat.com/web/specific-inheritance-with-tibcos-general-interface/\">I wrote a blog post about this tool ten years ago</a>.</p> \n<p>I pored over this thing—I learned it inside and out. Even though it was closed source and we only had access to obfuscated/minified JavaScript, I rewrote some of the internals to eek out some additional performance. I got in touch with the authors to contribute my changes back into the core package. I learned that XSLT could be quite speedy on Internet Explorer compared to direct DOM Node manipulation (<code>appendChild</code> et al). I learned a ton about debugging and performance profiling. Shout out to DynaTrace Ajax Edition, which had a really lovely performance profiler for old versions of Internet Explorer. It rivaled modern Chrome DevTools in a lot of ways and was way ahead of its time.</p> \n<p>Looking back on this project—even though this framework never really came out of obscurity (and certainly passed back into it very quickly), I was able to take away some very beneficial skills independent of the framework and the project software stack. Not just skills about things that worked well, but insight into things that didn’t work well too. Perhaps unsurprisingly XSLT didn’t last 😎 but you get the idea. I picked up some skills that would be valuable moving forward. That’s the key and perhaps the nuance that the original article was missing—if and when your circumstances dictate that you’re going to be knee deep in a framework, look for those opportunities to learn something that will be useful to you on the next project using the next <em>framework du jour</em>.</p> \n<blockquote> \n <p>Been studying React’s source lately. Double buffering, lazy initialisation, singly linked lists, requestIdleCallback...you can learn a ton by reading the code of a popular open source project. <br><a href=\"https://twitter.com/CarlMungazi/status/1075912692685332480\">@CarlMungazi on December 21, 2018</a></br></p> \n</blockquote> \n<p>(See, Carl gets it.)</p> \n<h2 id=\"good-investments\">Good Investments <a class=\"direct-link\" href=\"http://www.zachleat.com/web/dont-stop-learning/#good-investments\">#</a></h2> \n<p>Some other tech-specific and framework independent skills might include:</p> \n<ul> \n <li>How to get the most out of the <em>HTML</em> you write.</li> \n <li>How to write maintainable <em>CSS</em>.</li> \n <li>How to write unobtrusive, future-friendly, testable <em>JavaScript</em>.</li> \n <li>Proper <em>Accessibility</em> and <em>Usability principles</em>.</li> \n <li>How to measure <em>Performance</em> and familiarity with Web Browser DevTools.</li> \n <li>How to use <em>Progressive Enhancement</em> to wrangle the wide variety of device, browser, and network environments on the web.</li> \n <li><em>Design principles</em> like the value of well-placed whitespace and contrast.</li> \n <li><em>Typographic</em> improvements to the readability/usability of your text.</li> \n</ul> \n<p><em>This list is not meant to be exhaustive, but hopefully it can give you a few clues as to what bigger picture items to look for.</em></p> \n<p>Are these things baseline requirements? Are they required fundamentals to build a thing for the web? For beginners: No, of course not! But for some professional use cases, some of them may be! It depends on what you’re building (and who for). A heaping dose of nuance for y’all.</p> \n<p>My original tweet was only making the claim that investing time in some of the things on this list is a good long-bet. They’re good investments that can survive a framework-reset.</p> \n<blockquote> \n <p>​1. 👏 Hire someone that’s good at HTML and CSS to build components independent of JS frameworks 👏<br>2. Plug components into a JS framework and layer on behavior later<br>3. Pay HTML/CSS devs what they deserve for giving part of your codebase longer shelf life than unpasteurized milk<br><a href=\"https://twitter.com/zachleat/status/982251377010270210\">April 6, 2018</a></br></br></br></p> \n</blockquote> \n<h2 id=\"hot-drama\">Hot Drama <a class=\"direct-link\" href=\"http://www.zachleat.com/web/dont-stop-learning/#hot-drama\">#</a></h2> \n<p>It’s tough to communicate all of this nuance in a single tweet. Unfortunately, I think my words were misunderstood and/or misconstrued on Twitter in a few Quote Tweet threads. Quote Tweets can be devastating, especially when they come from high profile people. The devastation compounds when the threads begin to argue against positions that you didn’t say and wouldn’t take. Hopefully this blog post has clarified my position on the matter.</p> \n<p>If we still disagree, that’s okay. I have hope that we can disagree productively.</p> \n<p><strong>Keep on building, learning, and be excellent to each other.</strong> 👍👍👍</p>","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"211848f7e6209aacd102fa8aa71929f6","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921771},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"performance.now(); the Web Performance Conference","link":"http://www.zachleat.com/web/performance.now/","description":"\n\t\t\t\t<p><em>This content lives somewhere else. It was originally posted at: <a href=\"https://perfnow.nl/\">https://perfnow.nl/</a></em></p>\n\t\t\t\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"eba36f1244b37018eaa89346f7805748","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921771},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"CSS-Minsk-JS","link":"http://www.zachleat.com/web/css-minsk-js/","description":"\n\t\t\t\t<p><em>This content lives somewhere else. It was originally posted at: <a href=\"http://css-minsk-js.by/\">http://css-minsk-js.by/</a></em></p>\n\t\t\t\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"54f0b641b8b393ea79e52809129c7320","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921768},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"The Elusive :target Feature Test","link":"http://www.zachleat.com/web/moving-target/","description":"<p><strong>Update: I rewrote this post after determining my feature test was unnecessarily complex. Check out the <a href=\"https://github.com/zachleat/zachleat.com/commit/54b7cc7f4e26bacc849696dfa58fadec5dad5709\">post diff</a>.</strong></p> \n<p><strong>Update #2: This has <a href=\"https://github.com/Modernizr/Modernizr/pull/1107\">made its way into Modernizr</a>.</strong></p> \n<p><em>If you’re not familiar with <code>:target</code>, check out <a href=\"http://www.zachleat.com/test/css-target-feature-test/control.html\">this very simple example</a> before reading this post.</em></p> \n<p><code>:target</code> is a CSS pseudo-class that is often overlooked. It’s a very useful tool in the performance toolkit for moving content hiding from JavaScript up the toolchain into CSS. <em>“Anything CSS can do, JavaScript can do worse”</em>.</p> \n<p>With proper Progressive Enhancement, using <code>:target</code> can unfairly feel like it’s creating additional work for you to do since you’ll often still have to write that JavaScript for browsers that don’t support <code>:target</code> (<a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/:target#Browser_compatibility\">IE8 and below don’t support it—but surpringly Android 2.1+ and Windows Phone 7.5 do</a>). The benefit of using <code>:target</code> is perceived performance. The non-primary content (non-active pages/tabs/menus/et cetera) is hidden higher in the waterfall (assuming a best practice of loading your CSS at the top of the page) than they would’ve been if the hiding code lived in JavaScript.</p> \n<p>Another great benefit to using target is that it allows you to use history entries when navigating around on the page (and direct linking to specific content) unless you opt-out of this feature using JavaScript. Chris Coyier describes this is in his post <em><a href=\"http://css-tricks.com/on-target/\">On Target</a></em> (see the section titled ‘Fighting the Jump’). One limitation of this approach is the current <a href=\"https://bugs.webkit.org/show_bug.cgi?id=83490\">WebKit (and Blink)</a> and Gecko bugs that do not reevaluate CSS when the hash is updated using <code>replaceState</code> (without modifying history) or <code>pushState</code> (to add a history entry) (<a href=\"http://jsbin.com/esunoh/2\">JSBin Example</a>).</p> \n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a[href^=#]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>  e<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  history<span class=\"token punctuation\">.</span><span class=\"token function\">pushState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>href<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></br></br></br></code></pre> \n<p>There are two issues with this method of Fighting the Jump:</p> \n<ul> \n <li>The page jumps to the newly targetted content.</li> \n <li>The CSS rules are not re-evaluated.</li> \n</ul> \n<p>We can eliminate the second issue with the long forgotten <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Location.replace\"><code>location.replace()</code></a> method (or it’s twin brother <code>location.hash</code>). You can use <code>replace</code> in lieu of <code>replaceState</code> (or <code>hash</code> instead of <code>pushState</code>) to update the hash and re-evaluate CSS.</p> \n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Will re-evaluate CSS.</span><br><span class=\"token comment\">// Yes, including any newly applicable :target rules.</span><br>location<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span> <span class=\"token string\">'#myhash'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></br></br></code></pre> \n<p>Sadly, this method does not resolve the first issue with “Fighting the Jump.” The page will still scroll to the newly targetted content. But it does allow us to avoid adding a history entry. (If you are fine with the history entry, don’t add any JavaScript at all.)</p> \n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a[href^=#]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>  e<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token comment\">// Basically the same as doing nothing except we bypass a history entry.</span><br>  location<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span> <span class=\"token string\">'#'</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>href<span class=\"token punctuation\">.</span><span class=\"token function\">substr</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>href<span class=\"token punctuation\">.</span><span class=\"token function\">lastIndexOf</span><span class=\"token punctuation\">(</span> <span class=\"token string\">'#'</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></br></br></br></br></code></pre> \n<p>However, we won’t use the same mechanism for our feature test. As it turns out, a <code>:target</code> feature test is much simpler.</p> \n<h2 id=\"feature-test\">Feature Test <a class=\"direct-link\" href=\"http://www.zachleat.com/web/moving-target/#feature-test\">#</a></h2> \n<p>Requirements for a good <code>:target</code> feature test:</p> \n<ul> \n <li>Must be able to execute prior to DOMContentLoaded.</li> \n <li>Must be unobtrusive and <strong>not</strong> add a history entry.</li> \n</ul> \n<p>A previous version of this blog post included a feature test that attempted to set the hash and measure the updated CSS rules to see if <code>:target</code> applied. This turned out to be woefully overcomplicated. We can exploit the fact that <code>querySelector</code> will throw an error if you feed it an unsupported selector (<code>:target</code>, for example). This means we don’t have to modify the hash at all, which is much safer. (Credit to <a href=\"https://twitter.com/wilto\">@wilto</a> for showing me this method.)</p> \n<ul> \n <li><a href=\"https://github.com/zachleat/Compatibility-Tests/tree/master/css-target-feature-test\">Code is also available on GitHub</a> (both the new <code>querySelector</code> method and the old <code>insertNode</code> method)</li> \n</ul> \n<h3 id=\"demos\">Demos <a class=\"direct-link\" href=\"http://www.zachleat.com/web/moving-target/#demos\">#</a></h3> \n<h4 id=\"the-new-document.queryselectorall('%3Atarget')-method\"><a href=\"http://www.zachleat.com/test/css-target-feature-test/querySelector.html\">The new <code>document.querySelectorAll(':target')</code> Method</a> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/moving-target/#the-new-document.queryselectorall('%3Atarget')-method\">#</a></h4> \n<ul> \n <li>Chrome 31: Passes</li> \n <li>Firefox 25: Passes</li> \n <li>IE7, IE8: Fails Correctly (Not supported)</li> \n <li>IE9, IE10: Passes</li> \n <li>Safari 7: Passes</li> \n <li>Android 2.3: Passes</li> \n <li>Windows Phone 7.5: Passes</li> \n <li>BB6.1, BB7: Passes</li> \n <li><strong>BB5: Passes Correctly</strong> and does not require an opt-out like the other method.</li> \n <li><strong>Kindle 3.4: Passes</strong> and does not add a history entry like the other method.</li> \n <li><strong>Opera Mini: Passes correctly (unlike the other method) but <a href=\"https://github.com/Modernizr/Modernizr/pull/1107\">requires a server refresh to repaint the page</a>.</strong></li> \n <li>Opera 9.10: Fails Correctly (Not supported)</li> \n <li>Opera 12: Passes</li> \n</ul> \n<h4 id=\"the-old-location.replace-method\"><a href=\"http://www.zachleat.com/test/css-target-feature-test/insertNode.html\">The old <code>location.replace</code> Method</a> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/moving-target/#the-old-location.replace-method\">#</a></h4> \n<p><em>(Included for posterity)</em></p> \n<ul> \n <li>Chrome 31: Passes</li> \n <li>Firefox 3.6: Opts out of the test to use document.scripts. Otherwise, would pass.</li> \n <li>Firefox 25: Passes</li> \n <li>IE6, IE7, IE8: Fails Correctly (Not supported)</li> \n <li>IE9, IE10: Passes</li> \n <li>Safari 4, 5, 5.1, 6, and 7: Passes</li> \n <li>Opera Mobile: Passes</li> \n <li>Android 2.3: Passes</li> \n <li>Android 4.1: Passes</li> \n <li>Windows Phone 7.5: Passes</li> \n <li>iOS 7: Passes</li> \n <li>BB6.1, BB7: Passes</li> \n <li>BB5: Opt-ed out of the test using a <a href=\"https://gist.github.com/jdalton/812950\">weak inference</a>. This test caused BB5 to go all infinite redirect, so the feature test hard-returns false for any non-WebKit Blackberry.</li> \n <li>Kindle 3.4: Passes (But adds a history entry)</li> \n <li>Opera Mini: Fails Incorrectly (Is supported, but buggy)</li> \n <li>Opera 9.10: Fails Correctly (Not supported)</li> \n <li>Opera 12: Passes</li> \n</ul> \n<h2 id=\"related\">Related <a class=\"direct-link\" href=\"http://www.zachleat.com/web/moving-target/#related\">#</a></h2> \n<ul> \n <li>A <a href=\"https://github.com/Modernizr/Modernizr/issues/440\">Modernizr issue requesting a <code>:target</code> feature test</a>, note that Opera Mini fails the above test correctly and does not false positive as discussed in this issue.</li> \n</ul>","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"19510550505774c133057a14c2c90130","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921764},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"HTTP Archive’s Web Almanac 2019—Web Fonts Edition","link":"http://www.zachleat.com/web/web-almanac-fonts/","description":"\n\t\t\t\t<p><em>This content lives somewhere else. It was originally posted at: <a href=\"https://almanac.httparchive.org/en/2019/fonts\">https://almanac.httparchive.org/en/2019/fonts</a></em></p>\n\t\t\t\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"bf5ad0874d2e5657902aafc0694f9955","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921772},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Making a PWA out of the 1996 Space Jam Web Site","link":"http://www.zachleat.com/web/space-jam/","description":"<p><em>Originally presented at Barcamp Omaha 2018 in Omaha, NE USA 🇺🇸 on August 4, 2018</em></p> \n<p class=\"primarylink primarylink-demo\"> Check out the <a href=\"https://www.zachleat.com/space-jam/\">updated Space Jam web site</a> </p> \n<p>As part of a Barcamp talk, I made some improvements to the original 1996 Space Jam web site (Space JAMstack, anyone??? Oh, just me—okay):</p> \n<ul> \n <li>Responsive! Change that viewport size y’all</li> \n <li>Manifest and Service Worker for PWA and offline goodness!</li> \n <li>Removed tracking and advertisements</li> \n <li>Proper character encoding</li> \n <li>Standards and not quirks rendering mode</li> \n <li>Meta viewport for zooooooom</li> \n <li>Improved semantic markup (some, not all)</li> \n <li>Accessibility improvements</li> \n <li>Use some CSS instead of old-school HTML presentation attributes</li> \n <li>Show an example of pulling the Planet B-Ball text out of the navigation image and into the HTML content.</li> \n <li>Use SVG where we can (for crisp scaling)</li> \n <li>Add <code>preload</code> for a few assets to help maintain original page speed</li> \n <li>Lighthouse results: <img src=\"https://www.zachleat.com/web/img/posts/space-jam-lighthouse.png\" alt=\"Lighthouse results of the new Space Jam site: 97 performance, 100 accessibility, 100 best practices, 100 SEO\" /></li> \n</ul> \n<h2 id=\"video\">Video <a class=\"direct-link\" href=\"http://www.zachleat.com/web/space-jam/#video\">#</a></h2> \n<p>There <em>is</em> video of this but just a fair warning—this may be one of the worst talks I’ve ever given. It took me over a year of it sitting around before I was sufficiently <em>over it</em> to post it up here. In retrospect, I bit off way too much live coding for 30 minutes. I also had a few tech-failures, most notably with the new Touchbar and Voiceover 😱 (I usually use an external keyboard and my muscle memory was off).</p> \n<p>Anyway, if you’re sufficiently brave or enjoy cringing you can check out the video on either <a href=\"https://techomaha.com/2018/09/zach-leatherman-space-jam/\">Tech Omaha</a> or <a href=\"https://www.youtube.com/watch?v=30LR5hQT4Qk\">YouTube</a>.</p> \n<h2 id=\"related\">Related <a class=\"direct-link\" href=\"http://www.zachleat.com/web/space-jam/#related\">#</a></h2> \n<ul> \n <li><a href=\"https://github.com/zachleat/space-jam\"><em>Raw</em> Source code on GitHub</a></li> \n <li><a href=\"https://twitter.com/shannondotpizza/status/1025775678065659904\">Shannon took a lovely picture of me</a></li> \n</ul>","descriptionType":"html","feedId":12519,"bgimg":"https://www.zachleat.com/web/img/posts/space-jam-lighthouse.png","linkMd5":"61172e4037aaa3a8ab6a53517e12982c","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn70@2020_2/2020/08/25/02-02-03-994_3952d4b24a378b8d.webp","destWidth":1160,"destHeight":406,"sourceBytes":29844,"destBytes":23422,"author":"","articleImgCdnMap":{"https://www.zachleat.com/web/img/posts/space-jam-lighthouse.png":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn70@2020_2/2020/08/25/02-02-03-994_3952d4b24a378b8d.webp"},"publishedOrCreatedDate":1598320921772},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"I made a style guide for my personal web site and you should too.","link":"http://www.zachleat.com/web/now-with-style-guide/","description":"\n\t\t\t<p>As my own little corner of the web uncermoniously turned <em>ten years old</em> this year, it’s really starting to feel more like a garden than a piece of software. I certainly enjoy tending to it. I can plant what I like and with proper care it can grow into something useful.</p>\n<p>After ten years, it’s time to stop tearing open seed packets and carelessly throwing seeds around. It’s time to get out a trowel (or whatever people use for gardening) and organize the components I’ve built for this garden into a <a href=\"https://www.zachleat.com/web/style-guide/\">style guide</a>. It isn’t an elaborate design system like the fancy ones on <a href=\"http://styleguides.io/\">styleguides.io</a>, but it’s mine and I am getting a lot of use out of it all the same.</p>\n<p class=\"primarylink\"><a href=\"https://www.zachleat.com/web/style-guide/\">Check out the zachleat.com Style Guide</a></p>\n<p>Not only has it helped collate all of the components I’ve built for individual blog posts in the past, it’s a great way to test larger CSS changes I make to my site. In a way, it provides a worry-reducing comfort much in the same way that unit testing does, albeit less automated.</p>\n<p>There are a few cool things in there:</p>\n<ul>\n<li>Shows the different stages in web font loading and how they each render.</li>\n<li>Tests for hyphenation and ligatures on web fonts.</li>\n<li><code>text-decoration-skip-ink: auto</code> on links (to avoid overlap between descenders and link underlines) with feature tested fallback to a gradient approach.</li>\n<li>Fluid (and breakout full width) images, videos (including third party players) using only CSS.</li>\n<li>Inline resizable demos.</li>\n</ul>\n<p>Having a style guide, in my mind, has little to do with the size, scope, or scale of your web site. Style guides are about code consistency and—more importantly—code longevity.</p>\n<blockquote class=\"twitter-tweet\" data-lang=\"en\"><p lang=\"en\" dir=\"ltr\">Say you took a client and they said &quot;design me a website that will look great with no changes in 10 years&quot;. You would ______</p>&mdash; Chris Coyier (@chriscoyier) <a href=\"https://twitter.com/chriscoyier/status/890650132143906820\">July 27, 2017</a></blockquote>\n<p>Software will always require changes, but speaking from someone who has maintained a web site for ten years running I’m happy to have a style guide to assist with any future changes I make. If your web site is in it for the long haul (and why wouldn’t that be your goal?), I highly encourage you to make a style guide of your own!</p>\n<hr>\n<p class=\"caption\">(Read—but don’t judge—my <a href=\"https://www.zachleat.com/web/checklist-for-web-applications/\">first post from February 2007</a>.)</p>\n<div class=\"retweettoshare\">\n\t<h3 class=\"retweettoshare_title\">Retweet to share this post</h3>\n\t<div class=\"retweettoshare_widget\">\n\t\t<blockquote class=\"twitter-tweet\" data-lang=\"en\"><p lang=\"en\" dir=\"ltr\">★ I made a style guide for my personal web site and you should too. <a href=\"https://t.co/RJqcBPFYUx\">https://t.co/RJqcBPFYUx</a><br><br>Style guide: <a href=\"https://t.co/kh7gR5CA8X\">https://t.co/kh7gR5CA8X</a></p>&mdash; Zach Leatherman (@zachleat) <a href=\"https://twitter.com/zachleat/status/892719561191153664\">August 2, 2017</a></blockquote>\n\t</div>\n</div>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"7cebe60fa85d6527b0fdc1f686aa41c5","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921768},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"A Comprehensive Guide to Font Loading Strategies","link":"http://www.zachleat.com/web/comprehensive-webfonts/","description":"<p><em>This guide is not intended for use with font icons, which have different loading priorities and use cases. Also, SVG is probably a better long term choice.</em></p> \n<p><strong>Updated July 27, 2017</strong> with new information on <code>font-display</code>.<br> <strong>Updated August 14, 2017</strong> with a link to a <a href=\"https://www.zachleat.com/web/webfont-glossary/\">glossary page</a>.</br></p> \n<h2 id=\"jump-to%3A\">Jump to: <a class=\"direct-link\" href=\"http://www.zachleat.com/web/comprehensive-webfonts/#jump-to%3A\">#</a></h2> \n<ul> \n <li><a href=\"http://www.zachleat.com/web/comprehensive-webfonts/#font-face\">Unceremonious @font-face</a></li> \n <li><a href=\"http://www.zachleat.com/web/comprehensive-webfonts/#font-display\"><code>font-display</code></a></li> \n <li><a href=\"http://www.zachleat.com/web/comprehensive-webfonts/#preload\"><code>preload</code></a></li> \n <li><a href=\"http://www.zachleat.com/web/comprehensive-webfonts/#abstain\">Don’t use web fonts</a></li> \n <li><a href=\"http://www.zachleat.com/web/comprehensive-webfonts/#inline-data-uri\">Inline Data URI</a></li> \n <li><a href=\"http://www.zachleat.com/web/comprehensive-webfonts/#async-data-uri\">Asynchronous Data URI</a></li> \n <li><a href=\"http://www.zachleat.com/web/comprehensive-webfonts/#fout-class\">FOUT with a Class</a></li> \n <li><a href=\"http://www.zachleat.com/web/comprehensive-webfonts/#foft\">FOFT, or FOUT with Two Stage Render</a></li> \n <li><a href=\"http://www.zachleat.com/web/comprehensive-webfonts/#critical-foft\">Critical FOFT</a></li> \n <li><a href=\"http://www.zachleat.com/web/comprehensive-webfonts/#critical-foft-data-uri\">Critical FOFT with Data URI</a></li> \n <li><a href=\"http://www.zachleat.com/web/comprehensive-webfonts/#critical-foft-preload\">Critical FOFT with <code>preload</code></a></li> \n</ul> \n<style> #webfont-strategies-chart { padding: 1em; } @media ( min-width: 43.75em ) { #webfont-strategies-chart { padding-left: 2em; padding-right: 2em; } } </style> \n<img src=\"https://www.zachleat.com/web/img/posts/comprehensive-webfonts/strategies.svg\" alt=\"A diagram describing the relationship between the font loading strategies\" class=\"primary\" id=\"webfont-strategies-chart\"> <h2 id=\"glossary\">Glossary <a class=\"direct-link\" href=\"http://www.zachleat.com/web/comprehensive-webfonts/#glossary\">#</a></h2> <p>If you run into a term that you don’t know, please consult the <a href=\"https://www.zachleat.com/web/webfont-glossary/\">glossary of web font loading terms</a> I’ve prepared. If a term is missing in the glossary, please <a href=\"https://twitter.com/zachleat\">let me know on Twitter @zachleat</a> or in the comments.</p> <h2 id=\"quick-guide\">Quick Guide <a class=\"direct-link\" href=\"http://www.zachleat.com/web/comprehensive-webfonts/#quick-guide\">#</a></h2> <p>If you’re looking for a specific approach, I’ve prepared some handy links that will take you to the section you need. Let’s say you want an approach that:</p> \n <ul> \n  <li> <p><strong>is the most well rounded approach that will be <em>good enough</em> for most use cases</strong>: <a href=\"http://www.zachleat.com/web/comprehensive-webfonts/#fout-class\">FOUT with a Class</a>.</p> </li> \n  <li> <p><strong>is the easiest possible thing to implement</strong>: I’ve learned a lot about web fonts and at time of writing this article the current browser support is lacking for the easiest methods for effective/robust web font implementation. It is with that in mind that I will admit—if you’re looking for the easy way out already, you should consider <a href=\"http://www.zachleat.com/web/comprehensive-webfonts/#abstain\">not using web fonts</a>. If you don’t know what web fonts are doing to improve your design, they may not be right for you. Don’t get me wrong, web fonts are <strong>great</strong>. But educate yourself on the benefit first. (<a href=\"https://robinrendle.com/notes/in-defense-of-webfonts/#the-value-of-a-webfont\">In Defense of Web Fonts, <em>The Value of a Web Font</em> by Robin Rendle</a> is a good start. If you have others, please leave a comment below!)</p> </li> \n  <li> <p><strong>is the best performance-oriented approach</strong>: Use one of the Critical FOFT approaches. Personally, at time of writing my preference is <a href=\"http://www.zachleat.com/web/comprehensive-webfonts/#critical-foft-data-uri\">Critical FOFT with Data URI</a> but will shift toward <a href=\"http://www.zachleat.com/web/comprehensive-webfonts/#critical-foft-preload\">Critical FOFT with <code>preload</code></a> as browser support for <code>preload</code> increases.</p> </li> \n  <li> <p><strong>will work well with a large number of web fonts</strong>: If you’re web font obsessed (anything more than 4 or 5 web fonts or a total file size of more than 100KB) this one is kind of tricky. I’d first recommend trying to pare your web font usage down, but if that isn’t possible stick with a standard <a href=\"http://www.zachleat.com/web/comprehensive-webfonts/#foft\">FOFT, or FOUT with Two Stage Render</a> approach. Use separate FOFT approaches for each typeface (grouping of roman, bold, italic, et cetera).</p> </li> \n  <li> <p><strong>will work with my existing cloud/web font hosting solution</strong>: FOFT approaches generally require self hosting, so stick with the tried and true <a href=\"http://www.zachleat.com/web/comprehensive-webfonts/#fout-class\">FOUT with a Class</a> approach.</p> </li> \n </ul> <h2 id=\"criteria\">Criteria <a class=\"direct-link\" href=\"http://www.zachleat.com/web/comprehensive-webfonts/#criteria\">#</a></h2> \n <ol> \n  <li><strong>Ease of Implementation</strong>: sometimes, simple is what makes the deadline.</li> \n  <li><strong>Rendering Performance</strong>: FOUT is a feature that will allow you to render fallback fonts immediately and render the web font when it loads. We can take additional steps to reduce amount of time a fallback font is shown and reduce the impact of FOUT or even eliminate it altogether.</li> \n  <li><strong>Scalability</strong>: some font loading approaches encourage serial loading of web fonts. We want the requests to happen in parallel. We’ll evaluate how well each approach works with a growing web font budget.</li> \n  <li><strong>Future Friendly</strong>: will it require additional research and maintenance if a new font format comes out or will it be easily adaptable?</li> \n  <li><strong>Browser Support</strong>: is it sufficient to work with a wide enough base to meet most projects’ browser support requirements?</li> \n  <li><strong>Flexibility</strong>: does the approach easily facilitate grouping web font requests and their repaints and reflows? We want control over which fonts load and when.</li> \n  <li><strong>Robustness</strong>: What happens if a web font request hangs? Will the text be readable or will the web font be a single point of failure (SPOF)?</li> \n  <li><strong>Hosting</strong>: does the approach require self hosting or is it adaptable to work with various web font loaders provided by cloud providers/font foundries?</li> \n  <li><strong>Subsetting</strong>: some font licenses don’t allow subsetting. Some approaches below require subsetting for optimal performance.</li> \n </ol> <h2 id=\"unceremonious-%40font-face\"><span id=\"font-face\">Unceremonious @font-face</span> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/comprehensive-webfonts/#unceremonious-%40font-face\">#</a></h2> <p>Throw a naked @font-face block on your page and hope for the best. This is the default approach recommended by <a href=\"https://fonts.google.com/\">Google Fonts</a>.</p> \n <ul> \n  <li><strong><a href=\"https://www.zachleat.com/web-fonts/demos/unceremonious-font-face.html\">Demo: Unceremonious <code>@font-face</code></a></strong></li> \n </ul> <h4 id=\"pros\">Pros <a class=\"direct-link\" href=\"http://www.zachleat.com/web/comprehensive-webfonts/#pros\">#</a></h4> \n <ul> \n  <li>Very simple: add a CSS <code>@font-face</code> block with WOFF and WOFF2 formats (maybe even an OpenType format too, if you want better Android &lt; 4.4 support—Compare <a href=\"http://caniuse.com/#feat=woff\">WOFF</a> with <a href=\"http://caniuse.com/#feat=ttf\">TTF/OTF</a> on Can I Use).</li> \n  <li>Very future friendly: this is the default web font behavior. You’re in the web font mainstream here. Adding additional font formats is as simple as including another URL in your <code>@font-face</code> comma separated <code>src</code> attribute.</li> \n  <li>Good rendering performance in Internet Explorer and Edge: no FOIT, no hidden or invisible text. I fully support this by-design decision made my Microsoft.</li> \n  <li>Does not require modification of the fonts (through subsetting or otherwise). Very license friendly.</li> \n </ul> <h4 id=\"cons\">Cons <a class=\"direct-link\" href=\"http://www.zachleat.com/web/comprehensive-webfonts/#cons\">#</a></h4> \n <ul> \n  <li>Bad rendering performance everywhere else: Maximum three second FOIT in most modern browsers, switches to FOUT if load takes longer. While requests may finish earlier, we know how unreliable the network can be—three seconds is a long time for invisible unreadable content.</li> \n  <li>Not very robust, yet: Some WebKits have no maximum FOIT timeout (although WebKit has very recently fixed this and I believe it will be included with Safari version 10), which means web font requests may be a single point of failure for your content (if the request hangs, content will never display).</li> \n  <li>No easy way to group requests or repaints together. Each web font will incur a separate repaint/reflow step and its own FOIT/FOUT timeouts. This can create undesirable situations like the <a href=\"https://www.zachleat.com/web/mitt-romney-webfont-problem/\">Mitt Romney Web Font Problem</a>.</li> \n </ul> <h4 id=\"verdict%3A-do-not-use.\">Verdict: Do not use. <a class=\"direct-link\" href=\"http://www.zachleat.com/web/comprehensive-webfonts/#verdict%3A-do-not-use.\">#</a></h4> <h2 id=\"font-display\"><span id=\"font-display\">font-display</span> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/comprehensive-webfonts/#font-display\">#</a></h2> <p>Add a new <code>font-display: swap</code> descriptor to your <code>@font-face</code> block to opt-in to FOUT on browsers that support it. Optionally, <code>font-display: fallback</code> or <code>font-display: optional</code> can be used if you consider web fonts to be unnecessary to the design. <s>At time of writing, this feature is not available in any stable web browsers.</s> <em>Update: on July 25, 2017 Chrome 60 was released on the Chrome stable release channel which includes support for <code>font-display</code>.</em></p> \n <ul> \n  <li><strong><a href=\"https://www.zachleat.com/web-fonts/demos/font-display.html\">Demo: <code>font-display</code></a></strong>: note browser support for this is very limited.</li> \n  <li>Read more: <a href=\"https://tabatkins.github.io/specs/css-font-display/\"><code>font-display</code> Specification</a></li> \n </ul> <h4 id=\"pros-2\">Pros <a class=\"direct-link\" href=\"http://www.zachleat.com/web/comprehensive-webfonts/#pros-2\">#</a></h4> \n <ul> \n  <li>Very Simple: Only a single CSS descriptor added to your <code>@font-face</code> block.</li> \n  <li>Good rendering performance: if this approach had ubiquitous browser support, this would give us FOUT without any JavaScript. A CSS-only approach would be ideal.</li> \n  <li>Super future friendly: is orthogonal to web font formats. No other changes are required if you add new formats to your stack.</li> \n  <li>Very robust: a FOUT approach will show your fallback text in supported browsers even if the web font request hangs. Even better—your web fonts are not dependent on a JavaScript polyfill—which means if the JavaScript fails, users are still eligible for the web fonts.</li> \n  <li>Does not require modification of the fonts (through subsetting or otherwise). Very license friendly.</li> \n </ul> <h4 id=\"cons-2\">Cons <a class=\"direct-link\" href=\"http://www.zachleat.com/web/comprehensive-webfonts/#cons-2\">#</a></h4> \n <ul> \n  <li>Only available on Chrome (version 60+ on Desktop and Android, see <a href=\"https://www.chromestatus.com/feature/4799947908055040\">Chrome Platform Status</a>). In progress and behind a flag on <a href=\"https://platform-status.mozilla.org/#css-font-display\">Firefox Platform Status</a> but not yet documented at all on <a href=\"https://developer.microsoft.com/en-us/microsoft-edge/platform/status/\">Edge Platform Status</a>. Until support is ubiquitous across A-grade browsers, developers will need to pair this with a JavaScript approach.</li> \n  <li>In fact, pairing this with a JavaScript approach doesn’t really buy you all that much on an empty-cache load, given that the JavaScript FOUT approaches documented on this page usually require modification of your CSS to avoid using any web fonts prior to font loading classes added by JavaScript. When the two approaches are paired together and the JavaScript fails you won’t get web fonts even though <code>font-display</code> is a CSS-only approach. It’ll help for repeat view optimizations though.</li> \n  <li>Limited flexibility: No way to group requests or repaints. This isn’t as bad as it sounds—if you FOUT everything you’ll avoid the Mitt Romney Web Font problem but grouping can be useful for other reasons—we’ll go into that later.</li> \n  <li>Hosting: No control of this property on any known web font host. It’s not included in the Google Fonts CSS, for example. This will probably change when browser support improves.</li> \n </ul> <h4 id=\"verdict%3A-definitely-add-it-to-your-%40font-face-blocks%2C-but-by-itself-it%E2%80%99s-not-sufficient.\">Verdict: Definitely add it to your <code>@font-face</code> blocks, but by itself it’s not sufficient. <a class=\"direct-link\" href=\"http://www.zachleat.com/web/comprehensive-webfonts/#verdict%3A-definitely-add-it-to-your-%40font-face-blocks%2C-but-by-itself-it%E2%80%99s-not-sufficient.\">#</a></h4> <h2 id=\"preload\"><span id=\"preload\">Preload</span> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/comprehensive-webfonts/#preload\">#</a></h2> <p>Add <code>&lt;link rel=\"preload\" href=\"font.woff2\" as=\"font\" type=\"font/woff2\" crossorigin&gt;</code> to fetch your font sooner. Pairs nicely with an unceremonious <code>@font-face</code> block and feel free to also throw in the <code>font-display</code> descriptor as well for bonus points.</p> \n <ul> \n  <li><strong><a href=\"https://www.zachleat.com/web-fonts/demos/preload.html\">Demo: <code>preload</code></a></strong></li> \n  <li>Read more: <a href=\"https://www.smashingmagazine.com/2016/02/preload-what-is-it-good-for/\">Preload: What is it Good For?</a></li> \n  <li>Read more: <a href=\"https://www.zachleat.com/web/preload/\">The Web Fonts: Preloaded</a> <em>(the first half)</em></li> \n </ul> <p>Keep in mind: The pros and cons for this approach are heavily dependent on the font loading strategy you pair it with, whether it be <a href=\"http://www.zachleat.com/web/comprehensive-webfonts/#font-face\">Unceremonious <code>@font-face</code></a> or <a href=\"http://www.zachleat.com/web/comprehensive-webfonts/#font-display\"><code>font-display</code></a>.</p> <h3 id=\"pros-3\">Pros <a class=\"direct-link\" href=\"http://www.zachleat.com/web/comprehensive-webfonts/#pros-3\">#</a></h3> \n <ul> \n  <li>Super easy to implement, one <code>&lt;link&gt;</code> and you’re off.</li> \n  <li>Better rendering performance than a <code>@font-face</code> block. Web fonts are requested higher up in the waterfall.</li> \n  <li>Future friendly if you use the <code>type</code> attribute to specify the font format. At this point it’s still possible (although it looks unlikely) that a web browser will implement <a href=\"http://caniuse.com/#feat=link-rel-preload\">preload</a> before <a href=\"http://caniuse.com/#feat=woff2\">WOFF2</a> for example, and without this attribute you could be looking at a wasted request. So, make sure you include <code>type</code>.</li> \n  <li>Does not require modification of the fonts (through subsetting or otherwise). Very license friendly.</li> \n </ul> <h3 id=\"cons-3\">Cons <a class=\"direct-link\" href=\"http://www.zachleat.com/web/comprehensive-webfonts/#cons-3\">#</a></h3> \n <ul> \n  <li>Scalability: The more you preload, the more you can block initial render (note data for this comparison was gathered on a site that was using Critical CSS). Try to limit usage to the most important one or two web fonts.</li> \n  <li>Limited browser support—only Blink support right now, but more coming soon.</li> \n  <li>Flexibility: no way to group repaints/reflows.</li> \n  <li>You probably wouldn’t be able to use this with a third party host. You’d need to know at markup render the URL of the web font you’re requesting. Google Fonts, for example, generates these in the CSS request you make to their CDN.</li> \n </ul> <h4 id=\"verdict%3A-not-sufficient-by-itself.\">Verdict: Not sufficient by itself. <a class=\"direct-link\" href=\"http://www.zachleat.com/web/comprehensive-webfonts/#verdict%3A-not-sufficient-by-itself.\">#</a></h4> <h2 id=\"don%E2%80%99t-use-web-fonts\"><span id=\"abstain\">Don’t use Web Fonts</span> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/comprehensive-webfonts/#don%E2%80%99t-use-web-fonts\">#</a></h2> <p>I won’t go into this approach too much because, well, it isn’t technically a font loading strategy. <em>But I will say that it’s better than using web fonts incorrectly.</em> You are missing out on many new typographic features and improvements in readability that a web font can give you, but it is your option to opt-out.</p> \n <ul> \n  <li><strong><a href=\"https://www.zachleat.com/web-fonts/demos/dont.html\">Demo: Don’t use Web Fonts</a></strong>: yeah, I included this. The title says comprehensive, remember?</li> \n </ul> <h4 id=\"pros-4\">Pros <a class=\"direct-link\" href=\"http://www.zachleat.com/web/comprehensive-webfonts/#pros-4\">#</a></h4> \n <ul> \n  <li>Not sure it could be simpler: just use <code>font-family</code> without <code>@font-face</code>.</li> \n  <li>Near instant rendering performance: No worries about FOUT or FOIT.</li> \n </ul> <h4 id=\"cons-4\">Cons <a class=\"direct-link\" href=\"http://www.zachleat.com/web/comprehensive-webfonts/#cons-4\">#</a></h4> \n <ul> \n  <li>Limited availability. Very few system fonts are available cross platform. Check <a href=\"http://fontfamily.io/\">fontfamily.io</a> to see if a system font has acceptable browser support for your needs.</li> \n </ul> <h4 id=\"verdict%3A-sure%2C-i-guess%2C-but-i-wouldn%E2%80%99t-be-excited-about-it.\">Verdict: Sure, I guess, but I wouldn’t be excited about it. <a class=\"direct-link\" href=\"http://www.zachleat.com/web/comprehensive-webfonts/#verdict%3A-sure%2C-i-guess%2C-but-i-wouldn%E2%80%99t-be-excited-about-it.\">#</a></h4> <h2 id=\"inline-data-uri\"><span id=\"inline-data-uri\">Inline Data URI</span> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/comprehensive-webfonts/#inline-data-uri\">#</a></h2> <p>There are typically two kinds of inlining covered by this method: in a blocking <code>&lt;link rel=\"stylesheet\"&gt;</code> request or in a <code>&lt;style&gt;</code> element in the server rendered markup. Both <a href=\"http://www.alibaba.com/\">alibaba.com</a> (two web fonts embedded in a blocking CSS request) and <a href=\"https://medium.com/\">medium.com</a> (seven web fonts) use this approach.</p> \n <ul> \n  <li><strong><a href=\"https://www.zachleat.com/web-fonts/demos/inline-data-uri.html\">Demo: Inline Data URI</a></strong></li> \n  <li>Read more: <a href=\"https://www.zachleat.com/web/web-font-data-uris/\">Web Font Anti-Pattern: Data URIs</a> <em>(the first half)</em></li> \n </ul> <h4 id=\"pros-5\">Pros <a class=\"direct-link\" href=\"http://www.zachleat.com/web/comprehensive-webfonts/#pros-5\">#</a></h4> \n <ul> \n  <li>Seemingly great rendering performance: this approach has <em>no FOUT or FOIT</em>. This is a big deal.</li> \n  <li>Flexibility: Don’t need to worry about grouping repaints/reflows—this approach has no FOUT or FOIT.</li> \n  <li>Robustness: inlining puts all your eggs into your initial server request basket.</li> \n </ul> <h4 id=\"cons-5\">Cons <a class=\"direct-link\" href=\"http://www.zachleat.com/web/comprehensive-webfonts/#cons-5\">#</a></h4> \n <ul> \n  <li>A catch with rendering performance: while this approach doesn’t FOUT, it can significantly delay initial render time. On the other hand it will render “finished.” But keep in mind that even a single WOFF2 web font is probably going to be around 10KB—15KB and inlining just one as a Data URI will likely take you over the HTTP/1 recommendation of only having 14KB or less in the critical rendering path.</li> \n  <li>Browser support: Doesn’t take advantage of the comma separated format list in <code>@font-face</code> blocks: this approach only embeds one format type. Usually in the wild this has meant WOFF, so using this method forces you to choose between ubiquity (WOFF) and much narrower user agent support but smaller file sizes (WOFF2).</li> \n  <li>Bad scalability: Requests don’t happen in parallel. They load serially.</li> \n  <li>Self hosting: Required, of course.</li> \n </ul> <h4 id=\"verdict%3A-only-use-this-method-if-you-really-despise-fout%E2%80%94i-wouldn%E2%80%99t-recommend-it.\">Verdict: Only use this method if you really despise FOUT—I wouldn’t recommend it. <a class=\"direct-link\" href=\"http://www.zachleat.com/web/comprehensive-webfonts/#verdict%3A-only-use-this-method-if-you-really-despise-fout%E2%80%94i-wouldn%E2%80%99t-recommend-it.\">#</a></h4> <h2 id=\"asynchronous-data-uri-stylesheet\"><span id=\"async-data-uri\">Asynchronous Data URI Stylesheet</span> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/comprehensive-webfonts/#asynchronous-data-uri-stylesheet\">#</a></h2> <p>Use a tool like <a href=\"https://github.com/filamentgroup/loadCSS/\"><code>loadCSS</code></a> to fetch a stylesheet with all of the fonts embedded as Data URIs. Often you’ll see this coupled with a localStorage method of storing the stylesheet on the user agent for repeat views.</p> \n <ul> \n  <li><strong><a href=\"https://www.zachleat.com/web-fonts/demos/async-data-uri.html\">Demo: Asynchronous Data URI Stylesheet</a></strong></li> \n  <li>Read more: <a href=\"https://www.filamentgroup.com/lab/font-loading.html\">How we use web fonts responsibly, or, avoiding a @font-face-palm on the Filament Group Lab</a></li> \n </ul> <h4 id=\"pros-6\">Pros <a class=\"direct-link\" href=\"http://www.zachleat.com/web/comprehensive-webfonts/#pros-6\">#</a></h4> \n <ul> \n  <li>Rendering performance: <em>Mostly eliminates FOIT</em> (see note in the Cons)</li> \n  <li>Flexibility: Easy to group requests into a single repaint (put multiple Data URIs in one stylesheet).</li> \n  <li>Ease: Does not require any additional CSS changes to use. This is a big benefit. However, implementation isn’t all candy and roses.</li> \n  <li>Robust: If the asynchronous request fails, fallback text continues to be shown.</li> \n </ul> <h4 id=\"cons-6\">Cons <a class=\"direct-link\" href=\"http://www.zachleat.com/web/comprehensive-webfonts/#cons-6\">#</a></h4> \n <ul> \n  <li>Rendering performance: Has a very noticeable, but short FOIT while the stylesheet and Data URIs are being parsed. It’s quite distracting. I see this method often enough that I can recognize the approach without looking into the source code.</li> \n  <li>Flexibility and Scalability: Grouped requests and repaints are coupled together. If you group multiple Data URIs together (which will cause loading to occur in serial and not in parallel), they will repaint together. With this method, you can’t load in parallel and group your repaints.</li> \n  <li>Not maintenance friendly. Requires you to have your own method to determine font format support. Your JavaScript loader will need to determine which font format is supported (WOFF2 or WOFF) before fetching the Data URI stylesheet. This means if a new font format comes out, you’ll need to develop a feature test for it.</li> \n  <li>Browser support: You can bypass the maintenance of the loader step and hard-code to WOFF2 or WOFF but this will either incur larger than necessary or potentially throwaway requests (the same drawback we talked about for Inline Data URIs).</li> \n  <li>Self Hosting: Required.</li> \n </ul> <h4 id=\"verdict%3A-it%E2%80%99s-ok-but-we-can-do-better.\">Verdict: It’s OK but we can do better. <a class=\"direct-link\" href=\"http://www.zachleat.com/web/comprehensive-webfonts/#verdict%3A-it%E2%80%99s-ok-but-we-can-do-better.\">#</a></h4> <h2 id=\"fout-with-a-class\"><span id=\"fout-class\">FOUT with a Class</span> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/comprehensive-webfonts/#fout-with-a-class\">#</a></h2> <p>Use the CSS Font Loading API with a polyfill to detect when a specific font has loaded and only apply that web font in your CSS after it has loaded successfully. Usually this means toggling a class on your <code>&lt;html&gt;</code> element. Use with SASS or LESS mixins for easier maintenance.</p> \n <ul> \n  <li><strong><a href=\"https://www.zachleat.com/web-fonts/demos/fout-with-class-polyfill.html\">Demo: FOUT with a Class</a></strong> (includes sessionStorage trick for repeat view optimization)</li> \n  <li>Read more: <a href=\"https://dev.opera.com/articles/better-font-face/\">Better @font-face with Font Load Events on Dev.Opera</a> and <a href=\"https://www.filamentgroup.com/lab/font-events.html\">Font Loading Revisited with Font Events on the Filament Group Lab</a></li> \n </ul> <h3 id=\"pros-7\">Pros <a class=\"direct-link\" href=\"http://www.zachleat.com/web/comprehensive-webfonts/#pros-7\">#</a></h3> \n <ul> \n  <li>Rendering performance: Eliminates FOIT. This method is tried and tested. It’s <a href=\"https://helpx.adobe.com/typekit/using/embed-codes.html#Advancedembedcode\">one of the approaches recommended by TypeKit</a>.</li> \n  <li>Flexibility: Easy to group requests into a single repaint (use one class for multiple web font loads)</li> \n  <li>Scalability: Requests happen in parallel</li> \n  <li>Robust: if the request fails, fallback text is still shown.</li> \n  <li>Hosting: Works independent of font loader (easy to implement with third party hosts or with existing <code>@font-face</code> blocks)</li> \n  <li>Great browser support, polyfills typically work everywhere that web fonts are supported.</li> \n  <li>Future friendly: polyfills aren’t coupled to font formats and should work with existing <code>@font-face</code> blocks. That means when a new format comes out, you can just change your <code>@font-face</code> as normal.</li> \n  <li>Does not require modification of the fonts (through subsetting or otherwise). Very license friendly.</li> \n </ul> <h3 id=\"cons-7\">Cons <a class=\"direct-link\" href=\"http://www.zachleat.com/web/comprehensive-webfonts/#cons-7\">#</a></h3> \n <ul> \n  <li>Requires strict maintenance/control of your CSS. A single use of a web font font-family in your CSS without the guarding <code>loaded</code> class will likely trigger a FOIT.</li> \n  <li>Typically requires you to hard code which web fonts you want to load on the page. This can mean that you end up loading more web font content than a page needs. Remember that with unceremonious <code>@font-face</code> usage, newer browsers only download web fonts that are actually used on your page. This is given to you for free. This is why the <a href=\"https://twitter.com/zachleat/status/746732627319623689\">New York Times can get away with 100 different <code>@font-face</code> blocks on their home page</a>—the browser only downloads a fraction of those. With this approach, you must tell the browser which fonts to download independent of usage.</li> \n </ul> <h3 id=\"verdict%3A-this-is-the-baseline-standard.-this-will-work-for-most-use-cases.\">Verdict: This is the baseline standard. This will work for most use cases. <a class=\"direct-link\" href=\"http://www.zachleat.com/web/comprehensive-webfonts/#verdict%3A-this-is-the-baseline-standard.-this-will-work-for-most-use-cases.\">#</a></h3> <h2 id=\"foft%2C-or-fout-with-two-stage-render\"><span id=\"foft\">FOFT, or FOUT with Two Stage Render</span> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/comprehensive-webfonts/#foft%2C-or-fout-with-two-stage-render\">#</a></h2> <p>This approach builds on the <a href=\"http://www.zachleat.com/web/comprehensive-webfonts/#fout-class\">FOUT with a Class</a> method and is useful when you’re loading multiple weights or styles of the same typeface, <em>e.g.</em> roman, bold, italic, bold italic, book, heavy, and others. We split those web fonts into two stages: the roman first, which will then also immediately render faux-bold and faux-italic content (using <a href=\"https://www.igvita.com/2014/09/16/optimizing-webfont-selection-and-synthesis/\">font synthesis</a>) while the real web fonts for heavier weights and alternative styles are loading.</p> \n <ul> \n  <li><strong><a href=\"https://www.zachleat.com/web-fonts/demos/foft.html\">Demo: FOFT, or FOUT with Two Stage Render</a></strong> (includes sessionStorage trick for repeat view optimization)</li> \n  <li><a href=\"https://gist.github.com/zachleat/3b9414a4be8565999a5d483039cf82d1/revisions?diff=split#diff-0\">Compare source code for FOFT against FOUT with a Class</a></li> \n  <li>Read more: <a href=\"https://www.zachleat.com/web/foft/\">Flash of Faux Text—Still More on Font Loading</a></li> \n </ul> <h3 id=\"pros-8\">Pros <a class=\"direct-link\" href=\"http://www.zachleat.com/web/comprehensive-webfonts/#pros-8\">#</a></h3> \n <ul> \n  <li><em>All the existing Pros of the <a href=\"http://www.zachleat.com/web/comprehensive-webfonts/#fout-class\">FOUT with a Class</a> approach.</em></li> \n  <li>Rendering performance: Greatly reduces the amount of content jumping that occurs when the web font has loaded. Given that we divide our web font loads into two stages, this allows the first stage (the roman font—the one that will incur the most reflow) much quicker than if we had grouped all our fonts together into a single repaint.</li> \n </ul> <h3 id=\"cons-8\">Cons <a class=\"direct-link\" href=\"http://www.zachleat.com/web/comprehensive-webfonts/#cons-8\">#</a></h3> \n <ul> \n  <li><em>All the existing Cons of the <a href=\"http://www.zachleat.com/web/comprehensive-webfonts/#fout-class\">FOUT with a Class</a> approach.</em></li> \n  <li>Some designers are highly allergic to font synthesis. Objectively, synthesized variations are less useful than their real counterparts but that isn’t a fair comparison. Keeping in mind that the synthesized versions are only a temporary placeholder, the question we need to ask is: are they more or less useful than the fallback font? More. The answer is more.</li> \n </ul> <h3 id=\"verdict%3A-great-for-those-interested-in-extra-performance-but-can%E2%80%99t-subset-with-critical-foft.\">Verdict: Great for those interested in extra performance but can’t subset with Critical FOFT. <a class=\"direct-link\" href=\"http://www.zachleat.com/web/comprehensive-webfonts/#verdict%3A-great-for-those-interested-in-extra-performance-but-can%E2%80%99t-subset-with-critical-foft.\">#</a></h3> <h2 id=\"critical-foft\"><span id=\"critical-foft\">Critical FOFT</span> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/comprehensive-webfonts/#critical-foft\">#</a></h2> <p>The only difference between this method and standard FOFT approach is that instead of the full roman web font in the first stage, we use a subset roman web font (usually only containing A-Z and optionally 0-9 and/or punctuation). The full roman web font is instead loaded in the second stage with the other weights and styles.</p> \n <ul> \n  <li><strong><a href=\"https://www.zachleat.com/web-fonts/demos/critical-foft-polyfill.html\">Demo: Critical FOFT</a></strong> (includes sessionStorage trick for repeat view optimization)</li> \n  <li><a href=\"https://gist.github.com/zachleat/1c2ee3c30ded23922cf4a9720283edfe/revisions?diff=split#diff-0\">Compare source code for Critical FOFT against FOFT</a></li> \n  <li>Read more: <a href=\"https://www.zachleat.com/web/critical-webfonts/\">Critical Web Fonts</a></li> \n </ul> <h3 id=\"pros-9\">Pros <a class=\"direct-link\" href=\"http://www.zachleat.com/web/comprehensive-webfonts/#pros-9\">#</a></h3> \n <ul> \n  <li><em>All the existing Pros of the <a href=\"http://www.zachleat.com/web/comprehensive-webfonts/#foft\">FOFT</a> approach</em></li> \n  <li>Rendering performance: The first stage loads even faster (more noticeable on slower connections) further minimizing the time to first stage web font repaint, making your most used web font reflow occur sooner rather than later.</li> \n </ul> <h3 id=\"cons-9\">Cons <a class=\"direct-link\" href=\"http://www.zachleat.com/web/comprehensive-webfonts/#cons-9\">#</a></h3> \n <ul> \n  <li><em>All the existing Cons of the <a href=\"http://www.zachleat.com/web/comprehensive-webfonts/#foft\">FOFT</a> approach.</em></li> \n  <li>Introduces a small amount overhead in that the subset roman font loaded in the first stage is duplicated by the full roman web font loaded in the second stage. This is the price we’re paying to minimize reflow.</li> \n  <li>License restriction: Requires subsetting.</li> \n </ul> <h3 id=\"verdict%3A-use-one-of-the-improved-critical-foft-variations-below.\">Verdict: Use one of the improved Critical FOFT variations below. <a class=\"direct-link\" href=\"http://www.zachleat.com/web/comprehensive-webfonts/#verdict%3A-use-one-of-the-improved-critical-foft-variations-below.\">#</a></h3> <h2 id=\"critical-foft-with-data-uri\"><span id=\"critical-foft-data-uri\">Critical FOFT with Data URI</span> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/comprehensive-webfonts/#critical-foft-with-data-uri\">#</a></h2> <p>This variation of the Critical FOFT approach simply changes the mechanism through which we load the first stage. Instead of using our normal font loading JavaScript API to initiate a download, we simply embed the web font as a inline Data URI directly in the markup. As previously discussed, this will block initial render but since we’re only embedding a very small subset roman web font this is a small price to pay to mostly eliminate FOUT.</p> \n <ul> \n  <li><strong><a href=\"https://www.zachleat.com/web-fonts/demos/critical-foft-data-uri-polyfill.html\">Demo: Critical FOFT with Data URI</a></strong> (includes sessionStorage trick for repeat view optimization)</li> \n  <li><a href=\"https://gist.github.com/zachleat/b57b7fce3e1eb6d8c301221607d53c34/revisions?diff=split#diff-0\">Compare source code for Critical FOFT with Data URI against Critical FOFT</a></li> \n  <li>Read more: <a href=\"https://www.zachleat.com/web/web-font-data-uris/#but-wait\">Web Font Anti-Pattern: Data URIs—<em>But Wait</em></a></li> \n </ul> <h3 id=\"pros-10\">Pros <a class=\"direct-link\" href=\"http://www.zachleat.com/web/comprehensive-webfonts/#pros-10\">#</a></h3> \n <ul> \n  <li><em>All the existing Pros of the <a href=\"http://www.zachleat.com/web/comprehensive-webfonts/#critical-foft\">Critical FOFT</a> approach.</em></li> \n  <li>Eliminates FOIT and greatly reduces FOUT for the roman font. A small reflow will occur for additional characters loaded in the second stage and when the other weights and styles are loaded, but it will have a much smaller impact.</li> \n </ul> <h3 id=\"cons-10\">Cons <a class=\"direct-link\" href=\"http://www.zachleat.com/web/comprehensive-webfonts/#cons-10\">#</a></h3> \n <ul> \n  <li><em>All the existing Cons of the <a href=\"http://www.zachleat.com/web/comprehensive-webfonts/#critical-foft\">Critical FOFT</a> approach.</em></li> \n  <li>The small inlined Data URI will marginally block initial render. We’re trading this for highly reduced FOUT.</li> \n  <li>Self hosting: Required.</li> \n </ul> <h3 id=\"verdict%3A-this-is-the-current-gold-standard%2C-in-my-opinion.\">Verdict: This is the current gold standard, in my opinion. <a class=\"direct-link\" href=\"http://www.zachleat.com/web/comprehensive-webfonts/#verdict%3A-this-is-the-current-gold-standard%2C-in-my-opinion.\">#</a></h3> <h2 id=\"critical-foft-with-preload\"><span id=\"critical-foft-preload\">Critical FOFT with <code>preload</code></span> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/comprehensive-webfonts/#critical-foft-with-preload\">#</a></h2> <p>This variation of the Critical FOFT approach simply changes the mechanism through which we load the first stage. Instead of using our normal font loading JavaScript API to initiate a download, we use the new <code>preload</code> web standard as described above in the <a href=\"http://www.zachleat.com/web/comprehensive-webfonts/#preload\"><code>preload</code> method</a>. This should trigger the download sooner than previously possible.</p> \n <ul> \n  <li><strong><a href=\"https://www.zachleat.com/web-fonts/demos/critical-foft-preload-polyfill.html\">Demo: Critical FOFT with <code>preload</code></a></strong> (includes sessionStorage trick for repeat view optimization)</li> \n  <li><a href=\"https://gist.github.com/zachleat/b651f6bdbc47c563affbfbed16d2d922/revisions?diff=split#diff-0\">Compare source code for Critical FOFT with preload against Critical FOFT</a></li> \n  <li>Read more: <a href=\"https://www.zachleat.com/web/preload/#use-with-a-font-loading-strategy\">The Web Fonts: Preloaded, Use With a Font Loading Strategy section</a></li> \n </ul> <h3 id=\"pros-11\">Pros <a class=\"direct-link\" href=\"http://www.zachleat.com/web/comprehensive-webfonts/#pros-11\">#</a></h3> \n <ul> \n  <li><em>All the existing Pros of the <a href=\"http://www.zachleat.com/web/comprehensive-webfonts/#critical-foft\">Critical FOFT</a> approach.</em></li> \n  <li>Rendering performance: Downloads should trigger higher up in the waterfall than with previous methods. I’d guess this is even more dramatic with HTTP headers but haven’t yet confirmed this hunch. This method is better than <a href=\"http://www.zachleat.com/web/comprehensive-webfonts/#critical-foft-data-uri\">Critical FOFT with Data URI</a> in that it can use the browser cache for repeat requests, rather than re-requesting the same web font data with every server markup request.</li> \n </ul> <h3 id=\"cons-11\">Cons <a class=\"direct-link\" href=\"http://www.zachleat.com/web/comprehensive-webfonts/#cons-11\">#</a></h3> \n <ul> \n  <li><em>All the existing Cons of the <a href=\"http://www.zachleat.com/web/comprehensive-webfonts/#critical-foft\">Critical FOFT</a> approach.</em></li> \n  <li>Use only with a single web font format.</li> \n  <li>As stated above, <a href=\"http://caniuse.com/#feat=link-rel-preload\">browser support is limited</a>—only Blink at time of writing.</li> \n  <li><code>preload</code> can marginally delay initial render (note data for this comparison was gathered on a site that was using Critical CSS)</li> \n  <li>Self hosting: Probably required.</li> \n </ul> <h3 id=\"verdict%3A-this-will-be-the-new-gold-standard-when-browser-support-improves.\">Verdict: This will be the new gold standard when browser support improves. <a class=\"direct-link\" href=\"http://www.zachleat.com/web/comprehensive-webfonts/#verdict%3A-this-will-be-the-new-gold-standard-when-browser-support-improves.\">#</a></h3> \n <div class=\"retweettoshare\"> \n  <h3 class=\"retweettoshare_title\">Retweet to share this post</h3> \n  <div class=\"retweettoshare_widget\"> \n   <blockquote class=\"twitter-tweet\" data-lang=\"en\">\n    <p lang=\"en\" dir=\"ltr\">★ A Comprehensive Guide to Font Loading Strategies <a href=\"https://t.co/5LI0HZINku\">https://t.co/5LI0HZINku</a></p>— Zach Leatherman (@zachleat) \n    <a href=\"https://twitter.com/zachleat/status/753220402134999042\">July 13, 2016</a>\n   </blockquote> \n  </div> \n </div> </img>","descriptionType":"html","feedId":12519,"bgimg":"https://www.zachleat.com/web/img/posts/comprehensive-webfonts/strategies.svg","linkMd5":"eb1e26f7d139ffc15e2d28f345c27283","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn74@2020_5/2020/08/25/02-02-02-622_af9fd91f36a74858.svg","destWidth":0,"destHeight":0,"sourceBytes":14502,"destBytes":14502,"author":"","articleImgCdnMap":{"https://www.zachleat.com/web/img/posts/comprehensive-webfonts/strategies.svg":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn74@2020_5/2020/08/25/02-02-02-622_af9fd91f36a74858.svg"},"publishedOrCreatedDate":1598320921767},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Side Projects (at Awesome Camp)","link":"http://www.zachleat.com/web/side-projects/","description":"\n\t\t\t<script async=\"\" class=\"speakerdeck-embed\" data-id=\"559ebfc065bf01304e0e123138154d90\" data-ratio=\"1.33333333333333\" src=\"https://speakerdeck.com/assets/embed.js\"></script>\n<p>A presentation for Awesome Camp 2013. Follow <a href=\"https://twitter.com/awesomecamp\">@awesomecamp on Twitter</a>.</p>\n<ul>\n<li><a href=\"https://speakerdeck.com/zachleat/side-projects\">Slides on Speakerdeck</a></li>\n</ul>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"961938890ae97424dfb2c38ef10ae737","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921764},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Bulk Generating OG Images","link":"http://www.zachleat.com/web/bulk-og/","description":"<p>While working on the <a href=\"https://million-devs.netlify.com/\">1 Million Developers</a> site for Netlify (which is <a href=\"https://github.com/netlify/million-devs\">open source</a>, by the way), I was tasked with generating the images that would appear on tweets shared out from the site.</p> \n<p>For a first draft, I was given a bunch of static images of varying sizes and I wanted to generate a bulk set of Open Graph images out of these. While I didn’t end up using this in the final product (<a href=\"https://twitter.com/1mdevs\">we went with videos instead</a>), I thought it was worthwhile to share in case someone else found this useful (and for future me, too).</p> \n<p>This shell script uses <code>imagemagick</code>.</p> \n<ol> \n <li>Uses a directory of input images. It doesn’t matter what size they are, but the bigger the better.</li> \n <li>Resizes each image to the expected OpenGraph image canvas size (with padding).</li> \n <li>Adds a background color.</li> \n <li>Adds watermark image of your choosing to the bottom right corner.</li> \n <li>Writes them all to the output directory.</li> \n</ol> \n<h3 id=\"code\">Code <a class=\"direct-link\" href=\"http://www.zachleat.com/web/bulk-og/#code\">#</a></h3> \n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Uses imagemagick.\"</span><br><br><span class=\"token assign-left variable\">images</span><span class=\"token operator\">=</span><span class=\"token string\">\"input/*.png\"</span><br><span class=\"token assign-left variable\">watermark</span><span class=\"token operator\">=</span><span class=\"token string\">\"watermark.png\"</span><br><span class=\"token assign-left variable\">outputDir</span><span class=\"token operator\">=</span><span class=\"token string\">\"output/\"</span><br><span class=\"token assign-left variable\">bgColor</span><span class=\"token operator\">=</span><span class=\"token string\">\"#00dc9e\"</span><br><br><span class=\"token function\">mkdir</span> tmp/<br><span class=\"token function\">mkdir</span> <span class=\"token variable\">$outputDir</span><br><br>convert <span class=\"token string\">\"<span class=\"token variable\">$watermark</span>\"</span> -resize x60 -gravity center -background <span class=\"token string\">\"transparent\"</span> <span class=\"token string\">\"tmp/watermark.png\"</span><br><br><span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">i</span> <span class=\"token keyword\">in</span> <span class=\"token variable\">$images</span><br><span class=\"token keyword\">do</span><br> <span class=\"token comment\"># resize image</span><br> convert <span class=\"token string\">\"<span class=\"token variable\">$i</span>\"</span> -resize x530 -background <span class=\"token variable\">$bgColor</span> -gravity center -extent 1200x630 <span class=\"token string\">\"tmp/<span class=\"token variable\">${i<span class=\"token operator\">##</span>*<span class=\"token operator\">/</span>}</span>\"</span><br> <span class=\"token comment\"># add watermark</span><br> composite -gravity SouthEast -geometry +20+20 <span class=\"token string\">\"tmp/watermark.png\"</span> <span class=\"token string\">\"tmp/<span class=\"token variable\">${i<span class=\"token operator\">##</span>*<span class=\"token operator\">/</span>}</span>\"</span> <span class=\"token string\">\"<span class=\"token variable\">${outputDir}</span><span class=\"token variable\">${i<span class=\"token operator\">##</span>*<span class=\"token operator\">/</span>}</span>\"</span><br><span class=\"token keyword\">done</span><br><br><span class=\"token function\">rm</span> -rf tmp/</br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></code></pre> \n<h3 id=\"sample-input\">Sample Input <a class=\"direct-link\" href=\"http://www.zachleat.com/web/bulk-og/#sample-input\">#</a></h3> \n<img src=\"https://www.zachleat.com/web/img/posts/bulk-og-images/input.png\" alt=\"\" width=\"624\" height=\"1229\" style=\"max-width: 300px\"> <h3 id=\"sample-output\">Sample Output <a class=\"direct-link\" href=\"http://www.zachleat.com/web/bulk-og/#sample-output\">#</a></h3> <img src=\"https://www.zachleat.com/web/img/posts/bulk-og-images/output.png\" alt=\"\" width=\"1200\" height=\"630\"> </img></img>","descriptionType":"html","feedId":12519,"bgimg":"https://www.zachleat.com/web/img/posts/bulk-og-images/input.png","linkMd5":"7edaa166c8e2dd6edacdae8587d2056f","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn22@2020_1/2020/08/25/02-02-05-175_f18872a59973a5de.webp","destWidth":624,"destHeight":1229,"sourceBytes":90551,"destBytes":66334,"author":"","articleImgCdnMap":{"https://www.zachleat.com/web/img/posts/bulk-og-images/input.png":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn22@2020_1/2020/08/25/02-02-05-175_f18872a59973a5de.webp","https://www.zachleat.com/web/img/posts/bulk-og-images/output.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn2@2020_6/2020/08/25/02-02-14-227_a032a69069d92b72.webp"},"publishedOrCreatedDate":1598320921773},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"ALARMd is now on Github","link":"http://www.zachleat.com/web/alarmd-is-now-on-github/","description":"\n\t\t\t<p>In an effort to <s>mindlessly copy what everyone else on the internet is doing</s> keep current on the latest and greatest Source Code Management tools, I decided that it would be good practice to move my open source project ALARMd (as seen on <a href=\"http://lifehacker.com/271043/wake-up-to-a-youtube-video-with-alarmd\">Lifehacker</a>) from <a href=\"https://www.zachleat.com/web/2008/10/08/alarmd-is-a-google-code-project/\">Google Code</a> to Github.</p>\n<p>Feel free to fork/contribute at your leisure.</p>\n<p><a href=\"http://github.com/zachleat/ALARMd\">http://github.com/zachleat/ALARMd</a></p>\n<p>If you’re new, you can check out <a href=\"http://www.alarmd.com/\">ALARMd.com</a> to see what I’m talking about.</p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"c18c22b5ae941ace88e8a4da97287e9e","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921763},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"The Making of fontfamily.io","link":"http://www.zachleat.com/web/making-fontfamilyio/","description":"<h2 id=\"video\">Video <a class=\"direct-link\" href=\"http://www.zachleat.com/web/making-fontfamilyio/#video\">#</a></h2> \n<div class=\"fluid-width-video-wrapper\">\n <iframe src=\"https://www.youtube.com/embed/LbCT38Idhyk\" frameborder=\"0\" allowfullscreen=\"\"></iframe>\n</div> \n<p><a href=\"https://www.youtube.com/watch?v=LbCT38Idhyk\">Watch the talk on YouTube</a> (18:45) <span class=\"tag video\">Video</span></p> \n<h2 id=\"slides\">Slides <a class=\"direct-link\" href=\"http://www.zachleat.com/web/making-fontfamilyio/#slides\">#</a></h2> \n<script async=\"\" class=\"speakerdeck-embed\" data-id=\"7a4e30104ead013264a512c8f4a94aec\" data-ratio=\"1.33333333333333\" src=\"https://speakerdeck.com/assets/embed.js\"></script> \n<p><a href=\"https://speakerdeck.com/zachleat/how-and-why-i-built-fontfamily-dot-io\">Slides on Speaker Deck</a> (44 slides)</p> \n<p><a href=\"http://nebraskajs.com/2015/fontfamilyio/\"><strong>Originally posted on nebraskajs.com.</strong></a></p>","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"70883210125e6855337230be4420e339","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921765},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Screen Printing, Fake Interfaces Part 1","link":"http://www.zachleat.com/web/screen-printing-a-dreaming-exercise/","description":"\n\t\t\t<p>Why not error messages that tell you when your internet has been disconnected? How about one that tells you when you’ve been logged out (maybe in another window) and allow you to reauthenticate to the server right there? I don’t believe there are any architecture problems with these two ideas.</p>\n<p><a href=\"https://www.zachleat.com/web/wp-content/uploads/2007/02/image2.jpg\" title=\"Error Messages\"><img src=\"https://www.zachleat.com/web/wp-content/uploads/2007/02/image2.jpg\" alt=\"Error Messages\" title=\"Error Messages\"></a></p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"https://www.zachleat.com/web/wp-content/uploads/2007/02/image2.jpg","linkMd5":"520e5d6e094ad68935ac67cb9a3381e3","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn58@2020_1/2020/08/25/02-02-04-691_b414a7020c3fde24.webp","destWidth":1280,"destHeight":972,"sourceBytes":153444,"destBytes":86058,"author":"","articleImgCdnMap":{"https://www.zachleat.com/web/wp-content/uploads/2007/02/image2.jpg":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn58@2020_1/2020/08/25/02-02-04-691_b414a7020c3fde24.webp"},"publishedOrCreatedDate":1598320921760},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Flash of Faux Text—still more on Font Loading","link":"http://www.zachleat.com/web/foft/","description":"<p><em><strong>Summary</strong>: After we’ve defeated the Flash of Invisible Text, we also want to decrease the amount of reflow a user sees when the font switches from fallback to <code>@font-face</code>. We already split our CSS into critical and deferred, why not fonts? Prioritize your fonts by <strong>loading only your roman (or plain/normal) font first, which will cause the browser to use font synthesis to create faux-bold/italic versions automatically</strong>. Next, trigger requests for the real bold and italic fonts. This will minimize the amount of reflow while the user is reading the content.</em></p> \n<br> <p>By now you’re no doubt tired of hearing my endless blathering about the perils of using the default font loading behavior. The phenomenon known as the Flash of Invisible Text, or hiding the content while the Web font loads, is terrible for the perceived performance of the web.</p> <h2 id=\"minimizing-reflow\">Minimizing Reflow <a class=\"direct-link\" href=\"http://www.zachleat.com/web/foft/#minimizing-reflow\">#</a></h2> <p>One technique to solve this problem uses the CSS Font Loading API to add classes signifying that our fonts have successfully loaded. We can then use those classes in our CSS selectors to kill the FOIT altogether. Usually this involves a class (and a repaint/reflow) for each individual font that loads. You can read more about this technique at <a href=\"https://dev.opera.com/articles/better-font-face/\">Dev.Opera</a>.</p> <p>Another technique to solve this problem involves embedding fonts as Data URIs inside of a single CSS file that we load asynchronously. This method groups our fonts into one large request that only triggers a single combined repaint/reflow for your font bundle. You can read more about this technique in the <a href=\"http://www.filamentgroup.com/lab/font-loading.html\">Filament Group Lab</a>.</p> <p>Of course, the amount of repaint/reflow is really up to you and is not tied to either method. You could use a single class addition (one repaint/reflow) when all of the fonts have successfully loaded using the CSS Font Loading API or you could load individual CSS files with Data URIs (multiple repaints/reflows). If you’d like code snippets showing how to achieve this, please ask me on <a href=\"https://twitter.com/zachleat/\">twitter</a>.</p> <h2 id=\"font-variants\">Font Variants <a class=\"direct-link\" href=\"http://www.zachleat.com/web/foft/#font-variants\">#</a></h2> <p>An important piece of this puzzle is that the fonts that we choose to load are sometimes different weights and styles of the same typeface. For example, this site uses Lato (with a roman font-weight, 400, and normal font-style), but also Lato (bold), Lato (italic), and Lato (bold italic). This is four different font files.</p> \n <table> \n  <thead> \n   <tr> \n    <th>Lato Font Format</th> \n    <th>Combined Size of Four Variants</th> \n   </tr> \n  </thead> \n  <tbody> \n   <tr> \n    <td>TrueType</td> \n    <td>254 KB</td> \n   </tr> \n   <tr> \n    <td>WOFF</td> \n    <td>128 KB</td> \n   </tr> \n   <tr> \n    <td>WOFF2</td> \n    <td>102 KB</td> \n   </tr> \n  </tbody> \n </table> <p>Remember that after we’ve defeated the Flash of Invisible Text, we’ve decreased the delay in which a user must suffer before they can become a reader of our content. So what happens when the web fonts finish loading while the user is in the middle of reading a particularly juicy paragraph on our page? If your fallback font has a different <code>line-height</code> than your web font, it could reflow your user’s viewport to a completely different location in the text.</p> <p>Of course, one way to attempt to solve this problem is to fiddle with the <code>line-height</code> and <code>letter-spacing</code> of your fallback font. <a href=\"http://blog.fonts.com/2011/08/web-font-tune-up-time-a-fun-font-fallback-event/\">Jason Pamental has covered this topic extensively in his Fonts.com post: <em>Web Font Tune-up Time: A Fun Font Fallback Event</em></a>.</p> <h2 id=\"prioritize-your-fonts\">Prioritize Your Fonts <a class=\"direct-link\" href=\"http://www.zachleat.com/web/foft/#prioritize-your-fonts\">#</a></h2> <p>However, here I’m proposing that we split our font bundles into two separate packages. First, we would just load the Roman weight (<code>font-weight: normal;</code> and <code>font-style: normal;</code>). This would cause the biggest reflow to our content. <strong>This will also trigger the browser to use <a href=\"https://www.igvita.com/2014/09/16/optimizing-webfont-selection-and-synthesis/\"><code>font-synthesis</code></a> to create faux-bold and faux-italic versions of our web font</strong>. We’ll use these fake variants while we trigger the second request for our real Bold, Italic, and Bold Italic variants.</p> \n <table> \n  <thead> \n   <tr> \n    <th>Lato Font Format</th> \n    <th>Stage 1:<br>Roman Size</br></th> \n    <th>Stage 2:<br>Combined Size of Bold, Italic, Bold Italic Variants</br></th> \n   </tr> \n  </thead> \n  <tbody> \n   <tr> \n    <td>TrueType</td> \n    <td>63 KB</td> \n    <td>191 KB</td> \n   </tr> \n   <tr> \n    <td>WOFF</td> \n    <td>31 KB</td> \n    <td>97 KB</td> \n   </tr> \n   <tr> \n    <td>WOFF2</td> \n    <td>25 KB</td> \n    <td>77 KB</td> \n   </tr> \n  </tbody> \n </table> <p>On slower connections, this purposefully moves from a single delayed reflow to a two-stage reflow, the first of which should be the most jarring to our reader. We move that first reflow up the waterfall to happen as soon as possible and the likely more minimal faux-bold/italic to real-bold/italic reflow would happen later.</p> <p>Try it out on this page, I’ve implemented this approach on my site. Open up the Chrome DevTools with device mode enabled and throttle your Network connection down to EDGE. Try reloading this page and watch the three stages:</p> <p><a href=\"https://www.zachleat.com/web/img/posts/foft/fout.png\"><img src=\"https://www.zachleat.com/web/img/posts/foft/fout.png\" alt=\"Flash of Unstyled Text for zachleat.com\" /></a><br> <em>Stage 0 <strong>FOUT</strong>: Flash of Unstyled Text, zero web fonts loaded.</em></br></p> <p><a href=\"https://www.zachleat.com/web/img/posts/foft/foft.png\"><img src=\"https://www.zachleat.com/web/img/posts/foft/foft.png\" alt=\"Flash of Faux-Text for zachleat.com\" /></a><br> <em>Stage 1 <strong>FOFT</strong>: Flash of Faux Text, only one web font loaded.</em></br></p> <p><a href=\"https://www.zachleat.com/web/img/posts/foft/finished.png\"><img src=\"https://www.zachleat.com/web/img/posts/foft/finished.png\" alt=\"Finished screenshot of zachleat.com\" /></a><br> <em>Stage 2 <strong>Finished</strong>: All web fonts loaded.</em></br></p> <h2 id=\"the-code\">The Code <a class=\"direct-link\" href=\"http://www.zachleat.com/web/foft/#the-code\">#</a></h2> <p>As mentioned, my blog is currently using this experiment in font loading. Here is the JavaScript and CSS I used to implement it, using the <a href=\"https://github.com/zachleat/fontfaceonload\"><code>fontfaceonload</code> polyfill</a>.</p> <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">FontFaceOnload</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"Lato\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><br>\t<span class=\"token function-variable function\">success</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>\t\t<span class=\"token keyword\">var</span> docEl <span class=\"token operator\">=</span> doc<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">;</span><br>\t\t<br>\t\t<span class=\"token comment\">// Stage 1 Complete</span><br> <span class=\"token comment\">// FOFT engaged</span><br> docEl<span class=\"token punctuation\">.</span>className <span class=\"token operator\">+=</span> <span class=\"token string\">\" lato-loaded\"</span><span class=\"token punctuation\">;</span><br><br> <span class=\"token keyword\">var</span> counter <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span><br> <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">success</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br> counter<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><br> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> counter <span class=\"token operator\">===</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br> <span class=\"token comment\">// Stage 2 Complete</span><br> <span class=\"token comment\">// All Fonts Loaded</span><br> docEl<span class=\"token punctuation\">.</span>className <span class=\"token operator\">+=</span> <span class=\"token string\">\" lato-b-loaded\"</span><span class=\"token punctuation\">;</span><br> <span class=\"token punctuation\">}</span><br> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br> <span class=\"token function\">FontFaceOnload</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"LatoBold\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><br> weight<span class=\"token operator\">:</span> <span class=\"token number\">700</span><span class=\"token punctuation\">,</span><br> success<span class=\"token operator\">:</span> success<br> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br> <span class=\"token function\">FontFaceOnload</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"LatoItalic\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><br> style<span class=\"token operator\">:</span> <span class=\"token string\">'italic'</span><span class=\"token punctuation\">,</span><br> success<span class=\"token operator\">:</span> success<br> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br> <span class=\"token function\">FontFaceOnload</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"LatoBoldItalic\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><br> weight<span class=\"token operator\">:</span> <span class=\"token number\">700</span><span class=\"token punctuation\">,</span><br> style<span class=\"token operator\">:</span> <span class=\"token string\">'italic'</span><span class=\"token punctuation\">,</span><br> success<span class=\"token operator\">:</span> success<br> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br> <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></code></pre> <p><a href=\"https://github.com/zachleat/zachleat.com/blob/e7912017032a731cf6f958c94cacaae35b23a839/web/js/initial.js#L42\"><em>See the full JavaScript for the zachleat.com Implementation of the FOFT.</em></a></p> <pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">body</span> <span class=\"token punctuation\">{</span><br>\t<span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> sans-serif<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><span class=\"token comment\">/* Stage 1 */</span><br><span class=\"token selector\">.lato-loaded body</span> <span class=\"token punctuation\">{</span><br> <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> Lato<span class=\"token punctuation\">,</span> sans-serif<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token comment\">/* <br> * Stage 2<br> * The rest of this CSS is to work around<br> * the separate font-family limitation<br> * described below.<br> */</br></br></br></br></br></span><br><br><span class=\"token selector\">.lato-b-loaded h1,<br>.lato-b-loaded h2,<br>.lato-b-loaded h3,<br>.lato-b-loaded h4,<br>.lato-b-loaded h5,<br>.lato-b-loaded strong</br></br></br></br></br></span> <span class=\"token punctuation\">{</span><br> <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> LatoBold<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><span class=\"token selector\">.lato-b-loaded em,<br>.lato-b-loaded blockquote</br></span> <span class=\"token punctuation\">{</span><br> <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> LatoItalic<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><span class=\"token selector\">.lato-b-loaded strong em,<br>.lato-b-loaded strong blockquote,<br>.lato-b-loaded em strong,<br>.lato-b-loaded blockquote strong</br></br></br></span> <span class=\"token punctuation\">{</span><br> <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> LatoBoldItalic<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></code></pre> <p><em><a href=\"https://github.com/zachleat/zachleat.com/blob/e7912017032a731cf6f958c94cacaae35b23a839/web/css/_buttsweater.scss\">See the full CSS for the zachleat.com Implementation of the FOFT</a> with the <a href=\"https://github.com/zachleat/zachleat.com/blob/e7912017032a731cf6f958c94cacaae35b23a839/web/css/_buttsweater.scss#L636\"><code>@font-face</code> blocks hidden at the bottom</a>.</em></p> <p><em><strong>Important Note</strong>: you have to use different aliased <code>font-family</code> names for each <code>@font-face</code> block used here. If not, your second stage (the Flash of Faux-Text) will suffer the same Flash of Invisible Text problem that we’re trying to avoid with font loading.</em></p> <p>This does make one wonder if it would be useful to have Browsers use this internally by making bold and italic variants a lower priority than roman. Blink already uses a similar approach with non-applicable <code>media</code> queries on <code>&lt;link&gt;</code> elements for CSS, why not fonts?</p> \n <div class=\"retweettoshare\"> \n  <h3 class=\"retweettoshare_title\">Retweet to share this post</h3> \n  <div class=\"retweettoshare_widget\"> \n   <blockquote class=\"twitter-tweet\" data-lang=\"en\">\n    <p lang=\"en\" dir=\"ltr\">★ The Flash of Faux-Text—still more on Font Loading: <a href=\"http://t.co/1ubntrjKgd\">http://t.co/1ubntrjKgd</a> Load normal weight first; show faux-bold while real bold loads.</p>— Zach Leatherman (@zachleat) \n    <a href=\"https://twitter.com/zachleat/status/558608085309468672\">January 23, 2015</a>\n   </blockquote> \n  </div> \n </div> </br>","descriptionType":"html","feedId":12519,"bgimg":"https://www.zachleat.com/web/img/posts/foft/fout.png","linkMd5":"963707961441eed6e5b16001e0e8f225","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn81@2020_2/2020/08/25/02-02-04-262_d23b222f01582425.webp","destWidth":2542,"destHeight":746,"sourceBytes":90807,"destBytes":66406,"author":"","articleImgCdnMap":{"https://www.zachleat.com/web/img/posts/foft/fout.png":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn81@2020_2/2020/08/25/02-02-04-262_d23b222f01582425.webp","https://www.zachleat.com/web/img/posts/foft/foft.png":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn72@2020_5/2020/08/25/02-02-15-055_d6f76be711e8ffbd.webp","https://www.zachleat.com/web/img/posts/foft/finished.png":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn69@2020_5/2020/08/25/02-02-11-028_7d21bd7d0ecdf480.webp"},"publishedOrCreatedDate":1598320921765},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"A Mobile Web Divided","link":"http://www.zachleat.com/web/a-mobile-web-divided/","description":"<p>Unless you’ve been living comfortably under an elaborate dwelling constructed entirely out of rock, you’re aware of the growing popularity of smartphones and other mobile devices. With that growth we’ve witnessed a bumper crop of component libraries and frameworks to enable us to create mobile web sites and applications.</p> \n<h2 id=\"one-web%2C-two-web-primer\">One Web, Two Web Primer <a class=\"direct-link\" href=\"http://www.zachleat.com/web/a-mobile-web-divided/#one-web%2C-two-web-primer\">#</a></h2> \n<p>There are two different approaches one can take when developing a mobile web site. The first approach has been assigned the delightfully inclusive moniker <a href=\"http://www.w3.org/TR/mobile-bp/#OneWeb\">‘<em>One Web</em>’</a>. <em>One Web</em> involves creating a single web site accessible from both mobile and desktop web browsers and the site’s presentation is custom tailored at run time to the capabilities of the user’s device.</p> \n<p>The second approach involves creating two completely separate web sites, one for mobile and one for the desktop. The advantage with this approach is that content and the user interface can be tailored specifically for mobile, as the user’s context while using each site is likely to be drastically different. An obvious nickname for this approach might be <em>‘Two Web’</em>.</p> \n<p><em>Two Web</em> involves a white list of mobile User Agents that server side code uses to detect mobile devices and redirects them to a mobile specific site. The remaining User Agents are left to view the desktop version. An improvement to this approach allows end users to opt-out of the mobile version by simply clicking on a link that redirects to the desktop version and persists the setting (often using a cookie).</p> \n<p>With <em>One Web</em> the site is customized and adapted based primarily on screen dimension, orientation, and pixel density. Contrast that to <em>Two Web</em>, which usually divides touch screen and non touch screen devices. While this may make it easier on developers, it’s awkward for users. For example, consider Google Plus on an iPad. The entire experience feels like it was intended for a small screen, and feels barren and feature-poor on the larger tablet screen. The full Google Plus web site would be better for the iPad.</p> \n<p>Other downsides to <em>Two Web</em> include maintenance of two separate code bases, maintenance of the User Agent white list as new devices are released, and dependency on server side code to redirect mobile User Agents to the mobile site.</p> \n<p>Developers should also be aware of the historical precedence of browser vendors <em>borrowing</em> User Agent strings from other devices as they become popular. That’s why almost all User Agents in existence today contain the string “Mozilla” and why WebKit User Agents contain “like Gecko.” Come to think of it, User Agent theft happens most often when the target is Netscape or Netscape progeny.</p> \n<h2 id=\"make-your-choice\">Make Your Choice <a class=\"direct-link\" href=\"http://www.zachleat.com/web/a-mobile-web-divided/#make-your-choice\">#</a></h2> \n<p>An informed reader might already be aware of the choice between One and <em>Two Web</em>. What you might not be aware of is that your mobile JavaScript libraries and toolkits may have already made this choice for you. The mobile web development space is clouded with tools that don’t document their requirement of <em>Two Web</em>.</p> \n<p>Most of the tools that have been reviewed below have focused on WebKit support only. It is not the author’s desire to simply suggest that these tools should work on non-WebKit mobile browsers. <strong>The tools we use should not create a web divided between mobile and desktop.</strong> In a theoretical world where WebKit has a global monopoly on both mobile and desktop web browsing, it would still create problems if sites are restricted to mobile only or desktop only. Developers must be aware of the compromises we’ve inherited from our tools.</p> \n<p>As of June 2011, mobile web browsing is <a href=\"http://en.wikipedia.org/wiki/Usage_share_of_web_browsers#Summary_table\">only 6.5% of all web browsing</a>, while 24.5% of all web browsing is desktop WebKit (non-mobile browsers like Chrome or Safari). While evidence would suggest that the share of mobile web browsing will increase, we should be very cautious to assume that WebKit (mobile or desktop) will ever reach anything close to 100% market share.</p> \n<p>Let’s look at how a few sample pages render in a few desktop browsers. (<em>Keep in mind that I did not test in the other major rendering engine, Presto currently used by Opera 11.5</em>)</p> \n<h3 id=\"sencha-touch-1.1.0\"><a href=\"http://dev.sencha.com/deploy/touch/examples/nestedlist/\">Sencha Touch 1.1.0</a> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/a-mobile-web-divided/#sencha-touch-1.1.0\">#</a></h3> \n<p>Trident (IE9): Not Supported</p> \n<p><img src=\"https://www.zachleat.com/web/wp-content/uploads/2011/07/Screen-Shot-2011-07-26-at-10.48.51-PM.png\" alt=\"\" /></p> \n<p>Gecko (Firefox 5): Not Supported</p> \n<p><img src=\"https://www.zachleat.com/web/wp-content/uploads/2011/07/Screen-Shot-2011-07-26-at-10.31.41-PM.png\" alt=\"\" title=\"Sencha Touch in Firefox\" /></p> \n<p>Instead of a nice list with large click targets, we’re greeted with a simple white screen. No error messages detailing a JavaScript error occurred on the page. No warning saying the web browser being used here isn’t supported (the bane of Progressive Enhancement advocates). Really bad user experience here.</p> \n<p>Officially, Sencha Touch support is not “anything WebKit” as some have suggested. It officially supports Apple iOS 3 , Android 2.1 , and BlackBerry 6 devices. It does not include WebOS, which is a WebKit browser, <strong>nor does it include any desktop web browsers.</strong></p> \n<h3 id=\"dhtmlx-touch-v.1.0-rc\"><a href=\"http://www.dhtmlx.com/touch/samples/apps/uidemo/index.html\">DHTMLx Touch v.1.0 RC</a> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/a-mobile-web-divided/#dhtmlx-touch-v.1.0-rc\">#</a></h3> \n<p>Trident (IE9): Not Supported</p> \n<p><img src=\"https://www.zachleat.com/web/wp-content/uploads/2011/07/Screen-Shot-2011-07-27-at-6.26.50-PM.png\" alt=\"\" title=\"DHTMLx Touch in IE9\" /></p> \n<p>Gecko (Firefox 5): Not Supported</p> \n<p><img src=\"https://www.zachleat.com/web/wp-content/uploads/2011/07/Screen-Shot-2011-07-26-at-10.16.48-PM.png\" alt=\"\" title=\"DHTMLx Touch in Firefox\" /></p> \n<p>DHTMLx Touch operated much better than Sencha Touch on desktop browsers. Despite the fact that many of the demos on their website are hidden behind QR codes. You can use a <a href=\"http://zxing.org/w/decode.jspx\">QR decoder</a> to get the URLs for viewing on your desktop device. As for official web browser support, the DHTMLx Touch web site states:</p> \n<blockquote> \n <p>While browsing the demos of DHTMLX Touch, note that the framework requires a mobile device to display and work correctly. You can also run the demos on standard PCs in Firefox 3.6 and above, and WebKit browsers (Safari, Chrome, etc.), but there still can be some issues since DHTMLX Touch is optimized for mobile devices.</p> \n</blockquote> \n<p>Unfortunately, even though it works for the most part, desktop web browsers are still unsupported. It should also be noted that DHTMLx isn’t full WebKit either, as Blackberry 6 is not yet officially supported.</p> \n<h3 id=\"dojo-mobile-0.2\"><a href=\"http://chrism.dojotoolkit.org/mobile-0.2/make_samples/dojo-samples/demos/mobile-gallery/demo.html\">Dojo Mobile 0.2</a> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/a-mobile-web-divided/#dojo-mobile-0.2\">#</a></h3> \n<p>Trident (IE9): Supported</p> \n<p><img src=\"https://www.zachleat.com/web/wp-content/uploads/2011/08/Screen-Shot-2011-08-08-at-9.51.41-PM.png\" alt=\"\" title=\"Dojo Mobile in IE9\" /></p> \n<p>Gecko (Firefox 5): Supported</p> \n<p><img src=\"https://www.zachleat.com/web/wp-content/uploads/2011/07/Screen-Shot-2011-07-26-at-10.18.51-PM.png\" alt=\"\" title=\"Dojo Mobile in Firefox\" /></p> \n<p>Dojo Mobile also did fairly well. There were a few minor rendering issues with WebKit prefixed gradients (and no background color fallback) which I would consider to be very minor bugs. Here’s the good news from the <a href=\"http://dojotoolkit.org/reference-guide/dojox/mobile.html#id5\">Dojo documentation</a>:</p> \n<blockquote> \n <p>Dojox.mobile supports not only webkit-based mobile browsers, but also non-CSS3 desktop browsers such as IE and (older) Firefox.</p> \n</blockquote> \n<h3 id=\"jquery-mobile-1.0b2\"><a href=\"http://jquerymobile.com/demos/1.0b2/#/demos/1.0b2/docs/lists/index.html\">jQuery Mobile 1.0b2</a> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/a-mobile-web-divided/#jquery-mobile-1.0b2\">#</a></h3> \n<p>Trident (IE9): Supported</p> \n<p><img src=\"https://www.zachleat.com/web/wp-content/uploads/2011/08/Screen-Shot-2011-08-08-at-10.05.50-PM.png\" alt=\"\" title=\"jQuery Mobile in IE9\" /></p> \n<p>Gecko (Firefox 5): Supported</p> \n<p><img src=\"https://www.zachleat.com/web/wp-content/uploads/2011/07/Screen-Shot-2011-07-26-at-10.08.24-PM.png\" alt=\"\" title=\"jQuery Mobile in Firefox\" /></p> \n<p>In most of the other frameworks, cross browser compatibility documentation felt like an afterthought mentioned in passing. Not jQuery Mobile. It has the most complete <a href=\"http://jquerymobile.com/gbs/\">web browser support documentation</a> of any mobile component framework. Not only is their documentation the best, their device support is the most comprehensive. The project officially supports Internet Explorer all the way back to version 7, which speaks volumes to their commitment to allow the developer to make the choice between <em>One Web</em> and <em>Two Web</em>.</p> \n<h2 id=\"conclusion\">Conclusion <a class=\"direct-link\" href=\"http://www.zachleat.com/web/a-mobile-web-divided/#conclusion\">#</a></h2> \n<p>If you’re developing Hybrid Native applications using software like <a href=\"http://www.phonegap.com/\">PhoneGap</a>, desktop web browser support doesn’t matter here. Feel free to disregard this entire article.</p> \n<p>However, if you are developing for the web I would encourage you to look strongly at <em>One Web</em> as the default choice, and use <em>Two Web</em> as the exception when your content and context require drastically different non-adaptable versions of the site for mobile devices. Certainly I’m not suggesting that either <em>One or Two Web</em> are silver bullets. But we should all be aware of how the tools we choose weigh on our decision, and how this decision will affect our users in the future.</p>","descriptionType":"html","feedId":12519,"bgimg":"https://www.zachleat.com/web/wp-content/uploads/2011/07/Screen-Shot-2011-07-26-at-10.48.51-PM.png","linkMd5":"237f1aec1ef9fc7dddec0f4b3fb1c69d","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn46@2020_1/2020/08/25/02-02-03-361_58e3eedfa4afe449.webp","destWidth":275,"destHeight":362,"sourceBytes":22899,"destBytes":3636,"author":"","articleImgCdnMap":{"https://www.zachleat.com/web/wp-content/uploads/2011/07/Screen-Shot-2011-07-26-at-10.48.51-PM.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn46@2020_1/2020/08/25/02-02-03-361_58e3eedfa4afe449.webp","https://www.zachleat.com/web/wp-content/uploads/2011/07/Screen-Shot-2011-07-26-at-10.31.41-PM.png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn48@2020_3/2020/08/25/02-02-22-407_8a84518affb8ccc3.webp","https://www.zachleat.com/web/wp-content/uploads/2011/07/Screen-Shot-2011-07-27-at-6.26.50-PM.png":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn87@2020_6/2020/08/25/02-02-17-661_e1188fdbb74f87de.webp","https://www.zachleat.com/web/wp-content/uploads/2011/07/Screen-Shot-2011-07-26-at-10.16.48-PM.png":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn74@2020_3/2020/08/25/02-02-12-422_3f1db138b53a0229.webp","https://www.zachleat.com/web/wp-content/uploads/2011/08/Screen-Shot-2011-08-08-at-9.51.41-PM.png":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn80@2020_1/2020/08/25/02-02-18-306_0a623def1a22dcbe.webp","https://www.zachleat.com/web/wp-content/uploads/2011/07/Screen-Shot-2011-07-26-at-10.18.51-PM.png":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn75@2020_1/2020/08/25/02-02-20-788_5e8f68185aea96b3.webp","https://www.zachleat.com/web/wp-content/uploads/2011/08/Screen-Shot-2011-08-08-at-10.05.50-PM.png":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn22@2020_4/2020/08/25/02-02-12-438_38781d9b26dd1c8c.webp","https://www.zachleat.com/web/wp-content/uploads/2011/07/Screen-Shot-2011-07-26-at-10.08.24-PM.png":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn49@2020_6/2020/08/25/02-02-11-579_fc1f065c72fafc75.webp"},"publishedOrCreatedDate":1598320921763},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Namespacing outside of the YAHOO Namespace","link":"http://www.zachleat.com/web/namespacing-outside-of-the-yahoo-namespace/","description":"\n\t\t\t<p>YAHOO.namespace(). A lovely little utility function subject that <a href=\"http://www.zachleat.com/web/2007/08/09/yui-code-review-yahoonamespace/\">I’ve written about before</a>. If you’ve never heard of YAHOO.namespace or aren’t even familiar with namespacing, I’d read that article first.</p>\n<p>I’ll be honest, using the YAHOO namespace to store my own code makes my bunghole tighten just a little bit. What if I had written code stored under YAHOO.tool, which was unused prior to YUI 2.3.0? What would I do now? I’d have to rewrite my code, or never include any of the wonderful <code>YAHOO.tool.TestCase</code>, put together by <a href=\"http://www.nczonline.net/\">Nicholas Zakas</a>. As is traditional with most of my weblog posts, I try not to just complain about a problem without giving you a solution (but let’s be honest, only if it doesn’t take too much work).</p>\n<p>Let’s rewrite the YAHOO.namespace function to work outside of the YAHOO Namespace, so we can do things like this:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">namespace</span><span class=\"token punctuation\">(</span> <span class=\"token string\">'zachsWorld.partyTime'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>zachsWorld<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">partyTime</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span> <span class=\"token string\">'Excellent.'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br>zachsWorld<span class=\"token punctuation\">.</span><span class=\"token function\">partyTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// obviously would alert: Excellent.</span></code></pre>\n<p>Here’s some code:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">namespace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">var</span> a<span class=\"token operator\">=</span>arguments<span class=\"token punctuation\">,</span> o<span class=\"token operator\">=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>a<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">=</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        d<span class=\"token operator\">=</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        o<span class=\"token operator\">=</span>window<span class=\"token punctuation\">;</span><br>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">&lt;</span>d<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> j<span class=\"token operator\">=</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>            o<span class=\"token punctuation\">[</span>d<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>o<span class=\"token punctuation\">[</span>d<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br>            o<span class=\"token operator\">=</span>o<span class=\"token punctuation\">[</span>d<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br>        <span class=\"token punctuation\">}</span><br>    <span class=\"token punctuation\">}</span><br>    <span class=\"token keyword\">return</span> o<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Obviously this is just a modification of the YAHOO.namespace function. I’d recommend putting this under your own namespace (I’m trying to put most of the code I write on this website under the Y2 namespace, but everyone should have their own parent namespace), like so (any namespaces you create using this function won’t use the parent namespace assigned here by default):</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> <span class=\"token constant\">Y2</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"undefined\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">var</span> <span class=\"token constant\">Y2</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token constant\">Y2</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">namespace</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">/* copy function contents from above. */</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre>\n<p>But you can do whatever you want. This is one of the functions that I think separates YUI from the other frameworks out there, giving an easy utility to organize your code. This is something I think jQuery seriously lacks, noting from the code inside the many jQuery plugins contributed by end users. Many jQuery contributors do not organize their code, putting multiple unnecessary top level functions into jQuery.fn as methods, or into the jQuery object itself as functions. People whine about polluting the global namespace… I suppose it might be considered nitpickey to whine about the jQuery namespace. Okay you whiney bastard, let’s help out and put this into jQuery!</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// include jQuery first.</span><br>jQuery<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">namespace</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">var</span> a<span class=\"token operator\">=</span>arguments<span class=\"token punctuation\">,</span> o<span class=\"token operator\">=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>a<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">=</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        d<span class=\"token operator\">=</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        o<span class=\"token operator\">=</span>window<span class=\"token punctuation\">;</span><br>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">&lt;</span>d<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> j<span class=\"token operator\">=</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>            o<span class=\"token punctuation\">[</span>d<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>o<span class=\"token punctuation\">[</span>d<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br>            o<span class=\"token operator\">=</span>o<span class=\"token punctuation\">[</span>d<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br>        <span class=\"token punctuation\">}</span><br>    <span class=\"token punctuation\">}</span><br>    <span class=\"token keyword\">return</span> o<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Please note, this method does NOT work using jQuery methods with an element context, such as jQuery(‘div’).myNamespace.myMethod(). Your element context won’t be carried through to myMethod().</p>\n<p>However, you can use it for jQuery functions, such as this:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// definition</span><br>jQuery<span class=\"token punctuation\">.</span><span class=\"token function\">namespace</span><span class=\"token punctuation\">(</span> <span class=\"token string\">'jQuery.debug'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>jQuery<span class=\"token punctuation\">.</span>debug<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">test1</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><br><span class=\"token punctuation\">{</span><br>    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span> <span class=\"token string\">'test1 function'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br>jQuery<span class=\"token punctuation\">.</span>debug<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">test2</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><br><span class=\"token punctuation\">{</span><br>    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span> <span class=\"token string\">'test2 function'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><span class=\"token comment\">// usage</span><br>jQuery<span class=\"token punctuation\">.</span>debug<span class=\"token punctuation\">.</span><span class=\"token function\">test1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>jQuery<span class=\"token punctuation\">.</span>debug<span class=\"token punctuation\">.</span><span class=\"token function\">test2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>For more information, you can read <a href=\"http://yuiblog.com/blog/2006/06/01/global-domination/\">Global Domination</a>, an article written by Douglas Crockford, or <a href=\"http://docs.jquery.com/Plugins/Authoring\">Best Practices for Writing jQuery plugins</a>.</p>\n<p><strong>Updated</strong>: fixed some weird source parsing errors introduced by the code formatting plugin.</p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"605c72befed7bb9d80e07648bb105da7","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921761},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Maiden Voyage of the DOM Sailbloat","link":"http://www.zachleat.com/web/dom-sailbloat/","description":"<p><img src=\"https://www.zachleat.com/web/wp-content/uploads/2010/07/typhoon-in-macao.jpg\" alt=\"\" title=\"typhoon-in-macao\" /></p> \n<p>As many of you may already know, my day job includes managing a large and complex enterprise jQuery-based user interface component library. It’s used by all new web applications at the company, which boasts over an IT department of approximately 1500 people and hundreds of web applications. Needless to say, I get a fair volume of interesting support tickets that come my way. A few weeks ago, I had the pleasure of receiving one such ticket.</p> \n<p>The support ticket’s symptoms included a oft-heard complaint: poor performance. On the web, poor performance can be attributed to a great many things, but most often can be boiled down to a bottleneck in JavaScript code using the DOM API. This time, strangely enough, the culprit was something else entirely.</p> \n<p>One of the first things I check when an application complains of poor performance is the total size of the document, or how many nodes it has. One of the best ways to ensure good performance is to keep your document small, especially on projects using heavy dynamic element selection and filtering (think jQuery, Mootools, Prototype, Dojo, or any code using a selector engine like Sizzle). Any JavaScript library emulating CSS selectors executing over a very large document is going to take quite a bit longer than querying a small document, especially when the user’s browser doesn’t support native <code>querySelector</code> or <code>getElementsByClassName</code>.</p> \n<p>To get an idea of what the size of a large document is, I usually go to a site with some fairly advanced JavaScript and query their size.</p> \n<pre><code>// Returns the total number of nodes in the document\ndocument.getElementsByTagName('*').length;\n// note: this number will not include any child nodes inside of iframes.\n</code></pre> \n<table> \n <thead> \n  <tr> \n   <th>URL</th> \n   <th>Total Element Count</th> \n  </tr> \n </thead> \n <tbody> \n  <tr> \n   <td><code>maps.google.com</code></td> \n   <td><code>731</code></td> \n  </tr> \n  <tr> \n   <td><code>my.yahoo.com</code></td> \n   <td><code>1508</code></td> \n  </tr> \n  <tr> \n   <td><code>calendar.google.com (Authenticated)</code></td> \n   <td><code>681</code></td> \n  </tr> \n  <tr> \n   <td><code>reader.google.com (Authenticated)</code></td> \n   <td><code>4866</code></td> \n  </tr> \n </tbody> \n</table> \n<p>Getting back to the support ticket in question. After querying the document, I quickly found that the page contained over <strong>50000 nodes</strong>. Wow. So, we’ve caught a big one. You’re going to be telling your grandkids about this some day. But, now what?</p> \n<p>I decided it would be beneficial to find out where and what all of those nodes were. After clicking around the live document in the Firebug’s HTML tab for awhile, looking at View Source, and Ajax requests in the Console, I successfully determined the culprit. This particular application was using <a href=\"http://wicket.apache.org/\">Wicket</a>, a popular Java library for web applications, which includes its own <em>Ajax Logger</em> component (similar to my favorite <a href=\"http://log4javascript.org/\">log4javascript</a>; or something like the <a href=\"http://developer.yahoo.com/yui/logger/\">YUI Logger</a>), used to keep track of an application’s Ajax calls and JavaScript page manipulations with an inline GUI embedded in the parent document. On one page load, this application’s Ajax logger component had <strong>created 40000 nodes of log content</strong>.</p> \n<p>It’s important to realize that embedding unnecessary content of that magnitude on the page can be very detrimental to performance. <strong>JavaScript loggers should log to a new child window, rather than be embedded in the parent document.</strong> This way they won’t bloat the document, but still provide you with much needed logging information.</p> \n<p>But, in the future, how might this type of problem be more easily diagnosed and prevented? Ideally, when confronted with large documents, we want to see where in the document the majority of those nodes are located. But there isn’t an easy way to see which portion of the document is using the largest number of nodes, especially if the culprit is deep into the document tree. We can go through the source code manually, but that isn’t very efficient.</p> \n<p>So in the spirit of exploratory development to help troubleshoot real-world problems, I decided to make a Firebug Lite plugin. This would give me an easy cross-browser tool to diagnose my problem in a familiar interface. Load up Firebug Lite, load the <em>DOM Sailbloat</em> JavaScript file, and easily spot the HTML love handles.</p> \n<p>Here’s what it looks like in action:<br> <img src=\"https://www.zachleat.com/web/wp-content/uploads/2010/07/Screen-shot-2010-07-19-at-9.59.49-PM.png\" alt=\"\" title=\"Screen shot of the DOM Sailbloat Firebug Lite plugin\" /></br></p> \n<h2 id=\"go-forth\">Go Forth <a class=\"direct-link\" href=\"http://www.zachleat.com/web/dom-sailbloat/#go-forth\">#</a></h2> \n<ol> \n <li><a href=\"http://www.zachleat.com/domsailbloat/\">See the demo</a></li> \n <li><a href=\"http://www.zachleat.com/domsailbloat/domsailbloat.js\">Download the source</a></li> \n <li><a href=\"http://github.com/zachleat/DOM-Sailbloat\">Fork the Sailbloat on GitHub</a></li> \n</ol> \n<p><em>Note: there is currently an undiagnosed issue with the Sailbloat and it fails to load intermittently. If you know why, I’d be happy to put your name in the source code credits.</em></p>","descriptionType":"html","feedId":12519,"bgimg":"https://www.zachleat.com/web/wp-content/uploads/2010/07/typhoon-in-macao.jpg","linkMd5":"fdb72e8f3f8811dfc9eb4dda17f13bc8","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn37@2020_5/2020/08/25/02-02-02-801_ce5aae886d524a02.webp","destWidth":680,"destHeight":503,"sourceBytes":95768,"destBytes":125108,"author":"","articleImgCdnMap":{"https://www.zachleat.com/web/wp-content/uploads/2010/07/typhoon-in-macao.jpg":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn37@2020_5/2020/08/25/02-02-02-801_ce5aae886d524a02.webp","https://www.zachleat.com/web/wp-content/uploads/2010/07/Screen-shot-2010-07-19-at-9.59.49-PM.png":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn46@2020_3/2020/08/25/02-02-18-792_628797232c3f0666.webp"},"publishedOrCreatedDate":1598320921763},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Web Fonts for President 2016","link":"http://www.zachleat.com/web/president-web-font/","description":"<blockquote class=\"twitter-tweet\" data-lang=\"en\">\n <p lang=\"en\" dir=\"ltr\">US presidential candidates ordered by best font loading strategy<br><br>yes I’m a single issue voter</br></br></p>— Zach Leatherman (@zachleat) \n <a href=\"https://twitter.com/zachleat/status/722480571390107648\">April 19, 2016</a>\n</blockquote> \n<p><em>Ha ha</em>. You thought I wouldn’t do it.</p> \n<p><em>Ha.</em></p> \n<h2 id=\"hillary-clinton\">Hillary Clinton <a class=\"direct-link\" href=\"http://www.zachleat.com/web/president-web-font/#hillary-clinton\">#</a></h2> \n<p>Before we begin, let’s just get it out of the way—yes, Hillary has her own CDN servers and self hosts her web fonts. I think we’re all sick and tired of hearing about Hillary’s damn web fonts. Well—before we move on from that, let’s also get it out of the way that <a href=\"https://www.whoisxmlapi.com/#whoisserver/WhoisService?domainName=hrc.onl&amp;target=raw&amp;domainName=hrc.onl&amp;outputFormat=xml\">Hillary’s CDN domain name privacy provider</a> is based in Panama. That country sounds familiar for some vaguely topical reason. Anyway, font loading.</p> \n<ul> \n <li><strong>-5 points</strong> for using stock browser behavior (not using any font loading strategy). This is very bad. On some web browsers this makes web font requests a single point of failure. Since WebKit does not have a FOIT timeout, hanging web font requests could abandon users with invisible text until they reload the entire page.</li> \n <li><strong>-1 point</strong> for average web font weight &gt; 30KB. (95.8KB total for 2 web fonts) This is likely why her site used the full Chrome FOIT timeout of 3 seconds. My web font spidey sense says there is big savings to be had here, probably by subsetting the fonts.</li> \n <li><strong>+1 point</strong> for using three or less web fonts (2 total).</li> \n <li><strong>+2 points</strong> for <a href=\"https://medium.com/@pinwale/more-on-hillary-clinton-s-custom-typeface-called-unity-7e601dc050f8\">commissioning your own typeface variant</a>.</li> \n <li>A small bug: the same font file is listed for both the WOFF2 and WOFF formats. See below:</li> \n</ul> \n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token atrule\"><span class=\"token rule\">@font-face</span></span> <span class=\"token punctuation\">{</span><br>  <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'SharpUnity'</span><span class=\"token punctuation\">;</span><br>  <span class=\"token comment\">/* This should be SharpUnity-Book.woff2 */</span><br>  <span class=\"token property\">src</span><span class=\"token punctuation\">:</span> <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span>\"../fonts/SharpUnity-Book.woff\"<span class=\"token punctuation\">)</span></span> <span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"woff2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>       <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span>\"../fonts/SharpUnity-Book.woff\"<span class=\"token punctuation\">)</span></span> <span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"woff\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span></br></br></br></br></br></code></pre> \n<h4 id=\"candidate-web-font-score%3A--3\">Candidate Web Font Score: -3 <a class=\"direct-link\" href=\"http://www.zachleat.com/web/president-web-font/#candidate-web-font-score%3A--3\">#</a></h4> \n<h2 id=\"bernie-sanders\">Bernie Sanders <a class=\"direct-link\" href=\"http://www.zachleat.com/web/president-web-font/#bernie-sanders\">#</a></h2> \n<ul> \n <li><strong>+5 points</strong> for going full FOUT. This is a better alternative to using stock browser behavior for font loading. This gives the user immediately readable text on first render and very minimal invisible text during the loading process. Bernie is using TypeKit here, which loads a <a href=\"https://www.filamentgroup.com/lab/font-loading.html\">stylesheet full of Web Font Data URIs</a>.</li> \n <li><strong>+1 point</strong> for average web font weight &lt; 30KB. (204KB total for 7 web fonts)</li> \n <li><strong>-4 points</strong> for using 7 web fonts total. <em>Insert (performance) budget joke here</em>. (-1 point for each web font over 3)</li> \n <li><strong>-1 point</strong> for using a serif fallback for a sans-serif web font. Likely he’s trying to reach across the aisle and unite the two major font-family parties, but this makes for an awkward transition.</li> \n</ul> \n<p><em>Note the TypeKit load time here is approximate. Both WebPageTest and Chrome Canary’s Filmstrip modes failed to capture the full Bernie render filmstrip due to a premature onload event.</em></p> \n<p>It should also be noted that because Bernie is using TypeKit, he gets a bunch of font loading benefits for free. And when I say free, I mean that he’s likely paying the experts at TypeKit a fee for which he receives their expertise in font loading and his site sees performance benefits from that.</p> \n<h4 id=\"candidate-web-font-score%3A-1\">Candidate Web Font Score: 1 <a class=\"direct-link\" href=\"http://www.zachleat.com/web/president-web-font/#candidate-web-font-score%3A-1\">#</a></h4> \n<h2 id=\"donald-trump\">Donald Trump <a class=\"direct-link\" href=\"http://www.zachleat.com/web/president-web-font/#donald-trump\">#</a></h2> \n<ul> \n <li><strong>+1 point</strong> for attempting to use a font loading strategy by using <code>loadCSS</code> to load a stylesheet from Google Web Fonts, an approach I will now refer to as the <strong>Donald Trump Hail Mary</strong> strategy.</li> \n <li><strong>-5 points</strong> for not using a real font loading strategy. Remember that loading the stylesheet asynchronously only prevents the initial CSS request from blocking. You’ll still incur default browser behavior when the fonts themselves begin loading. The mechanics of how he loads <code>loadCSS</code> using <code>&lt;script async&gt;</code> combined with an automatic performance optimizer called <a href=\"https://www.cloudflare.com/features-optimizer/\">Rocket Loader from Cloudflare</a> put the web font request almost at the end of his performance waterfall. This is very interesting, primarily for the fact that for most of the waterfall the fallback text is rendered. This is good (<strong>+1 point</strong>). However, the delayed load means that FOIT will occur long after the user has started interacting with the page. Note also that default browser behavior is still in play and web font requests will still be a single point of failure on some web browsers (WebKit, for example, with no FOIT timeout).</li> \n <li><strong>+1 point</strong> for average web font weight &lt; 30KB. (62.3KB total for 5 web fonts)</li> \n <li><strong>-2 points</strong> for using 5 web fonts total. (-1 point for each web font over 3)</li> \n <li>While he doesn’t use <a href=\"https://www.zachleat.com/web/web-font-data-uris/\">blocking Data URIs</a> for his web fonts, he does use them for a font icon for his video player. I won’t deduct points for this since it’s outside the scope of the study—but still a <em>yuge anti-pattern</em>.</li> \n <li>I will also note that Donald uses YouTube <code>&lt;iframe&gt;</code> embeds on his page, which also loads a Roboto web font. This would be a much better case for system fonts, but that’s a third-party/Google problem. Should a leader be responsible for his entire page, including third party content? Yes—however, it still feels harsh to deduct for this. But I will anyway (<strong>-1 point</strong>), since Donald is a racist, a misogynist, and a horrible human being.</li> \n</ul> \n<h4 id=\"candidate-web-font-score%3A--5\">Candidate Web Font Score: -5 <a class=\"direct-link\" href=\"http://www.zachleat.com/web/president-web-font/#candidate-web-font-score%3A--5\">#</a></h4> \n<h2 id=\"ted-cruz\">Ted Cruz <a class=\"direct-link\" href=\"http://www.zachleat.com/web/president-web-font/#ted-cruz\">#</a></h2> \n<p>Ted Cruz’s web site is… well, it’s 17MB with 167 requests and took 36 seconds to load on throttled 3G.That says most of what needs saying.</p> \n<ul> \n <li><strong>-5 points</strong> for using stock browser behavior (no font loading strategy)</li> \n <li><strong>-1 point</strong> for average web font weight &gt; 30KB. (312.6KB total for 5 web fonts) This likely causes Chrome to hit its FOIT timeout of 3 seconds. The web fonts were larger than Hillary’s and more numerous. If you’re going to spend a lot on web fonts, at least have Bernie’s decency and give your users a web font safety net with a FOUT strategy. Even though his hero text hits the FOIT timeout and should be readable at that point, it in fact is not readable without the background image because it’s <code>color: #fff</code>.</li> \n <li><strong>-2 points</strong> for using 5 web fonts total. (-1 point for each web font over 3) 5 different weights of Museo Sans, which according to the licensing means he <a href=\"http://www.fontspring.com/fonts/exljbris/museo-sans\">paid for his fonts</a>.</li> \n <li><strong>-1 point</strong> for using a serif fallback for sans-serif web fonts. Again, another awkward transition.</li> \n</ul> \n<h4 id=\"candidate-web-font-score%3A--9\">Candidate Web Font Score: -9 <a class=\"direct-link\" href=\"http://www.zachleat.com/web/president-web-font/#candidate-web-font-score%3A--9\">#</a></h4> \n<h2 id=\"results\">Results <a class=\"direct-link\" href=\"http://www.zachleat.com/web/president-web-font/#results\">#</a></h2> \n<p><em>(Times generated using Chrome Canary’s Developer Tools Network Throttling in Regular 3G mode)</em></p> \n<table id=\"results\"> \n <thead> \n  <tr> \n   <th>Candidate</th> \n   <th>Text Readable</th> \n   <th>Web Font Render</th> \n   <th>FOIT</th> \n   <th>Web Font Weight</th> \n  </tr> \n </thead> \n <tbody> \n  <tr> \n   <th>Hillary Clinton</th> \n   <td>7.42s</td> \n   <td>\n    <div class=\"better\">\n     8.09s \n     <span aria-hidden=\"true\">★</span>\n     <span class=\"a11y-only\">Best</span>\n    </div></td> \n   <td><em>Max</em></td> \n   <td>\n    <div>\n     95.8KB\n    </div> (~47.9KB each)</td> \n  </tr> \n  <tr> \n   <th>Bernie Sanders</th> \n   <td>\n    <div class=\"better\">\n     5.69s \n     <span aria-hidden=\"true\">★</span>\n     <span class=\"a11y-only\">Best</span>\n    </div></td> \n   <td>~10.95s</td> \n   <td>\n    <div class=\"better\">\n     ~0s \n     <span aria-hidden=\"true\">★</span>\n     <span class=\"a11y-only\">Best</span>\n    </div></td> \n   <td>\n    <div>\n     204KB\n    </div> (~29.1KB each)</td> \n  </tr> \n  <tr> \n   <th>Donald Trump</th> \n   <td>2.44s to 13.38s</td> \n   <td>14.16s-14.32s</td> \n   <td>0.8s</td> \n   <td>\n    <div class=\"better\">\n     62.3KB \n     <span aria-hidden=\"true\">★</span>\n     <span class=\"a11y-only\">Best</span>\n    </div>(~12.5KB each)</td> \n  </tr> \n  <tr> \n   <th>Ted Cruz</th> \n   <td>22.26s \n    <div>\n     <em>(Wow.)</em>\n    </div></td> \n   <td>27.78s-28.27s</td> \n   <td><em>Max</em></td> \n   <td>\n    <div>\n     312.6KB\n    </div>(~62.52KB each)</td> \n  </tr> \n </tbody> \n</table> \n<h2 id=\"conclusion\">Conclusion <a class=\"direct-link\" href=\"http://www.zachleat.com/web/president-web-font/#conclusion\">#</a></h2> \n<p>Bernie Sanders was the one candidate that had a font loading strategy (using TypeKit). Donald Trump was the one candidate that tried to have a font loading strategy but it ended up being more bravado than actual results. The other two candidates had no font loading strategy.</p> \n<p>Donald Trump was also the only candidate that did not pay money for his fonts in any form, using Google Web Fonts. He built a web site and Google is paying for it. At presidential website scale Bernie likely paid for TypeKit, Hillary paid for her own typeface (awesome), and Ted Cruz probably paid somewhere between $60 and $90 for variants of Museo Sans.</p> \n<p>It’s interesting to note that the candidates that self hosted their fonts (Hillary and Cruz) had the highest individual web font file sizes. This isn’t too surprising, the tools to optimize local font files are fairly esoteric and complex. In this regard, using a font foundry may be better than self hosting despite the sacrifices in control over font loading.</p> \n<p>What did we learn here? Web Font loading is far too complex to draw conclusions about the quality of a web site based on where you load your web fonts. Using a web font service doesn’t necessarily mean that your web site will use best practices. We must be knowledgeable about the internals of the tools we use in order to best utilize them to our advantage. At the end of the day if you don’t want to put any effort into it, it’s safer to use TypeKit.</p> \n<div class=\"retweettoshare\"> \n <h3 class=\"retweettoshare_title\">Retweet to share this post</h3> \n <div class=\"retweettoshare_widget\"> \n  <blockquote class=\"twitter-tweet\" data-conversation=\"none\" data-lang=\"en\">\n   <p lang=\"en\" dir=\"ltr\">★Web Fonts for President 2016 <a href=\"https://t.co/wOLHuZH5CY\">https://t.co/wOLHuZH5CY</a> A look at the font loading strategies of websites for US presidential candidates.</p>— Zach Leatherman (@zachleat) \n   <a href=\"https://twitter.com/zachleat/status/722860263750258688\">April 20, 2016</a>\n  </blockquote> \n </div> \n</div>","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"e27ecd7b4ef27fc85b6872b76f4bc032","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921766},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"20000 Leagues Under the API: YouTube JavaScript","link":"http://www.zachleat.com/web/20000-leagues-under-the-api-youtube-javascript/","description":"\n\t\t\t<p>Today, children, we’ll be exploring the wonderful world of the official JavaScript API published by YouTube a few weeks ago. I read a <a href=\"http://apiblog.youtube.com/2008/03/something-to-write-home-about.html\">few</a> <a href=\"http://blogoscoped.com/archive/2008-03-14-n11.html\">interesting</a> <a href=\"http://www.wait-till-i.com/2008/03/12/video-captioning-made-easy-with-the-youtube-javascript-api/\">posts</a> on the subject when it first came out, and it’s been on my list of things to explore for the next (and hopefully last) version of <a href=\"http://www.alarmd.com/\">Alarmd</a>. This isn’t going to be a long post so much as a laundry list of points worth mentioning and limitations there-of regarding the API itself.</p>\n<ol>\n<li>If you want to change videos dynamically by loading a new video into an existing player, you must use the Chromeless player (which requires an API key). The loadVideoById() method is only available in the Chromeless player. Whatever you do, don’t try to dynamically destroy and create a new player, this will cause JavaScript errors in Internet Explorer (although not Firefox).</li>\n<li>CSS properties: When the player has the css <code>display: none</code> applied, it will not play. When the css <code>visibility: hidden</code> is applied, the video will still play, but will not be shown on the screen. If you wanted a headless player, like what the music search engine <a href=\"http://humanized.com/weblog/2007/11/13/songza-launch/\">Songza</a> does, you’d want to take this approach. Word of warning, there’s some tricky shit going on when you try to dynamically change these properties on a player and run commands on the player at the same time (or close to the same). For instance, I got into a sticky situation where I’d try to show the player and load a new video into the player in the same method. I had to separate these with a timeout to get both to run without error.</li>\n<li>To load, you must play. Unfortunately, I wanted to pre-load the video without actually playing the video. This is unsupported. To handle this, I had to play, then pause after a timeout (using window.setTimeout). Not the prettiest, but it seems to work. Obviously the API in this case has very low cohesion, as the loadVideoById method ALSO plays the video, not simply doing ONLY what the method name suggests.</li>\n<li>Forcing a global? When the player first loads after you’ve used the SWFObject embedSWF() command, it will call the function onYouTubePlayerReady(), which you can’t customize. It must be that function name, and it must be in the global namespace. Keep in mind that onYouTubePlayerReady() is called every time the player is shown (when it was otherwise hidden using the css <code>display: none</code>)</li>\n</ol>\n<p>Unfortunately, there is some voodoo going on here that I don’t fully understand. I’m not a flash guru, nor have I ever claimed to be. But there have been a few bugs in my experience with the API that have led me to believe that it’s not quite there yet. Maybe my use cases were a bit unique, but they weren’t that extreme. I should be able to hide and show the player without error. I should be able to destroy the player without error. I should be able to load a video without playing it.</p>\n<p>But hey, it works.</p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"1a7cf5a4fc6059ff286025fbe6cb6693","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921761},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Critical Web Fonts","link":"http://www.zachleat.com/web/critical-webfonts/","description":"<p>The history of web font loading has included many different iterations:</p> \n<ol> \n <li><em>Doing nothing</em>: including a <code>@font-face</code> CSS block and using it in your CSS without qualification. I consider this to be an anti-pattern. It introduces a Flash of Invisible Text (FOIT) in some browsers and worse, creates a single point of failure in browsers that do not have a font loading timeout (WebKit).</li> \n <li><em>Data URIs</em> for the Flash of Unstyled Text (FOUT): Loading a <a href=\"https://www.filamentgroup.com/lab/font-loading.html\">CSS stylesheet asynchronously</a> (or using an AJAX Request) with the web fonts embedded as Data URIs (and putting it into localStorage for repeat views). This approach is deprecated because it can introduce a short Flash of Invisible Text (FOIT) on some older lower powered devices.</li> \n <li><em>A Scoped Class</em> for the Flash of Unstyled Text (FOUT): Using the CSS Font Loading API (or a polyfill to do the same, like <a href=\"https://github.com/zachleat/fontfaceonload/\">FontFaceOnload</a> or <a href=\"https://github.com/bramstein/fontfaceobserver\">fontfaceobserver</a>) to <a href=\"https://dev.opera.com/articles/better-font-face/\">add a scoping class protecting our content from our web fonts before they load</a> (also documented on the <a href=\"https://www.filamentgroup.com/lab/font-events.html\">Filament Group Lab</a>). This is what I’d consider to be a bare minimum best practice, or Intro to Font Loading 101.</li> \n <li><em>Two Scoped Classes</em> for the Flash of Faux Text (FOFT): This method complicates things a little bit more and uses two different stages of scoped classes. The first stage loads only the Roman font, then any variations of that are loaded in the second stage: Bold, Italic, Bold Italic. It’s great for slower connections in that it puts the biggest amount of reflow later in your page load waterfall to make it less noticeable and less impactful to end users. I’d classify this approach as Intermediate Font Loading 201.</li> \n</ol> \n<h2 id=\"the-next-iteration%3A-critical-foft\">The Next Iteration: Critical FOFT <a class=\"direct-link\" href=\"http://www.zachleat.com/web/critical-webfonts/#the-next-iteration%3A-critical-foft\">#</a></h2> \n<p>This method builds on the Flash of Faux Text (FOFT) using a two stages loading process (sounds like, but is not actually rocket science), but instead of a full Roman web font in the first stage, it loads a small subset of the Roman web font, in this case with only the upper case and lower case alphabetic characters. You could optionally include numbers here as well.</p> \n<p>I have implemented this technique live on my web site. Here I use four webfonts: Lato Roman, Lato Bold, Lato Italic, and Lato Bold Italic.</p> \n<ul> \n <li>The original Lato Roman is 25KB in WOFF2 format.</li> \n <li>Lato Roman with only the <code>A-Za-z</code> glyphs is only 9KB in WOFF2 format (<strong>36% of the original</strong>)</li> \n</ul> \n<p>The shrinks the first stage quite significantly.</p> \n<h2 id=\"filmstrip-comparisons\">Filmstrip Comparisons <a class=\"direct-link\" href=\"http://www.zachleat.com/web/critical-webfonts/#filmstrip-comparisons\">#</a></h2> \n<p>The yellow frame highlights when the roman web font (used for most body content) has loaded and rendered. Note that all of these film strips were captured on <a href=\"http://www.zachleat.com/web/\">zachleat.com</a> using Chrome’s “Regular 3G” network throttling feature.</p> \n<h3 id=\"default\">Default <a class=\"direct-link\" href=\"http://www.zachleat.com/web/critical-webfonts/#default\">#</a></h3> \n<img src=\"https://www.zachleat.com/web/img/posts/critical-fonts/default-3.png\" alt=\"Default Font Loading Filmstrip showing FOIT\" class=\"primary\"> <h3 id=\"scoped-class-for-fout\">Scoped class for FOUT <a class=\"direct-link\" href=\"http://www.zachleat.com/web/critical-webfonts/#scoped-class-for-fout\">#</a></h3> <img src=\"https://www.zachleat.com/web/img/posts/critical-fonts/fout-1.png\" alt=\"Font Loading Filmstrip showing FOUT\" class=\"primary\"> <h3 id=\"two-scoped-classes-for-foft\">Two scoped classes for FOFT <a class=\"direct-link\" href=\"http://www.zachleat.com/web/critical-webfonts/#two-scoped-classes-for-foft\">#</a></h3> <img src=\"https://www.zachleat.com/web/img/posts/critical-fonts/foft-1.png\" alt=\"Font Loading Filmstrip showing FOFT\" class=\"primary\"> <h3 id=\"two-scoped-classes-for-critical-foft\">Two scoped classes for Critical FOFT <a class=\"direct-link\" href=\"http://www.zachleat.com/web/critical-webfonts/#two-scoped-classes-for-critical-foft\">#</a></h3> <img src=\"https://www.zachleat.com/web/img/posts/critical-fonts/critical-foft-2.png\" alt=\"Font Loading Filmstrip showing Critical + FOFT\" class=\"primary\"> <h2 id=\"performance-comparison\">Performance Comparison <a class=\"direct-link\" href=\"http://www.zachleat.com/web/critical-webfonts/#performance-comparison\">#</a></h2> <img src=\"https://www.zachleat.com/web/img/posts/critical-fonts/benchmarks.svg\" onerror=\"this.src='/web/img/posts/critical-fonts/benchmarks.png'; this.onerror=null;\" alt=\"A visual comparison showing the waterfalls for Default, FOUT, FOFT, and Critical FOFT\"> <p>We’re essentially lengthening the load complete time at the end of the waterfall to reduce the jarring reflow shown to the user. Once <code>font-size-adjust</code> is implemented in more than just Firefox, the need for this technique will be reduced, if not rendering it unnecessary. But until then, I consider this approach essential to reducing interruption to the user’s reading flow.</p> <p>Enable 3G throttling in your favorite web browser (some of you may not have to enable anything to have a slow connection) and watch the page render. The web fonts do feel faster, even if the total time spent loading web fonts is greater.</p> <h2 id=\"the-code\">The Code <a class=\"direct-link\" href=\"http://www.zachleat.com/web/critical-webfonts/#the-code\">#</a></h2> <p>The <a href=\"https://github.com/zachleat/zachleat.com/blob/5369a74e3edf32e861d5b0bfdbf0177dbc3e596f/web/js/fonts.js\">code used to implement this approach can be viewed on GitHub</a>. It’s using FontFaceOnload for the font loading polyfill.</p> <p>If you’re interested, I’ve also implemented the <a href=\"https://github.com/zachleat/zachleat.com/blob/5369a74e3edf32e861d5b0bfdbf0177dbc3e596f/web/js/fonts-fontfaceobserver.js\">same approach using promises and Bram Stein’s FontFaceObserver</a>.</p> <p>For repeat views, you can continue using the same mechanism you were using before. I use <a href=\"https://speakerdeck.com/bramstein/web-fonts-performance?slide=115\">Bram Stein’s <code>sessionStorage</code> trick</a> so that I don’t have to do anything server-side. You can see the implementation in code on GitHub in <a href=\"https://github.com/zachleat/zachleat.com/blob/0bf3acde8ad9c7ad99bcd32e2332465004c765ce/web/js/initial.js#L27\">initial.js</a> and <a href=\"https://github.com/zachleat/zachleat.com/blob/5369a74e3edf32e861d5b0bfdbf0177dbc3e596f/web/js/fonts.js#L6\">fonts.js</a> (also lines <a href=\"https://github.com/zachleat/zachleat.com/blob/5369a74e3edf32e861d5b0bfdbf0177dbc3e596f/web/js/fonts.js#L15\">15</a> and <a href=\"https://github.com/zachleat/zachleat.com/blob/5369a74e3edf32e861d5b0bfdbf0177dbc3e596f/web/js/fonts.js#L37\">37</a>).</p> <h2 id=\"ideas-for-improvement\">Ideas for Improvement <a class=\"direct-link\" href=\"http://www.zachleat.com/web/critical-webfonts/#ideas-for-improvement\">#</a></h2> <p>Some font loading services already provide mechanisms to subset and modify your web fonts dynamically. <a href=\"http://www.ascendercorp.us/services/screen-imaging-solutions/dynamicsubsetting\">Dynamic Subsetting</a> generates a subset of a font on the fly using only the glyphs used on a page. <a href=\"http://blog.typekit.com/2015/06/15/announcing-east-asian-web-font-support/\">Dynamic Augmentation</a> add glyphs to an already loaded font on the fly, sort of like font streaming.</p> <p>You could use extend this approach using something similar to the Critical CSS workflow and scan the page to find out what actual characters are used in a fixed viewport (<code>grunt-criticalcss</code> uses <code>1200x900</code>) to subset the web font more accurately to perhaps an even smaller size. This will require more care, given that it would need to run ahead of time for every unique URL on static content. Or, it could run dynamically using JavaScript on page load which would probably require a hefty library and a performance hit.</p> <p>In fact, you could wire up something similar to this using the amazing <a href=\"http://www.pluminjs.com/\">Plumin.js</a> but unfortunately the library is too large (~<code>400KB</code> minimized) for this use case. For now, I’ll just stick with a simple <code>9KB</code> baseline WOFF2 that gets replaced with a <code>25KB</code> full version. The library would need to at least be smaller than your baseline to get good mileage out of a dynamic font (but I would never dream of equating a web font KB with a JavaScript KB—they have different performance impacts).</p> <p><a href=\"http://alistapart.com/article/live-font-interpolation-on-the-web\">Live Font Interpolation on the Web</a>, an article written for A List Apart by <a href=\"https://twitter.com/aetherpoint\">Andrew Johnson</a> is also worth mentioning. Keep an eye on this approach—it would allow us to dynamically generate weights and styles from font masters, hopefully saving bytes on the wire for designs using a wide variety of weights and styles. I’d love to see this web-standardized.</p> \n     <div class=\"retweettoshare\"> \n      <h3 class=\"retweettoshare_title\">Retweet to share this post</h3> \n      <div class=\"retweettoshare_widget\"> \n       <blockquote class=\"twitter-tweet\" data-lang=\"en\">\n        <p lang=\"en\" dir=\"ltr\">★ Critical Web Fonts, a two stage font loading approach to further minimize reflow impact from web fonts: <a href=\"https://t.co/vWNVagaGmr\">https://t.co/vWNVagaGmr</a></p>— Zach Leatherman (@zachleat) \n        <a href=\"https://twitter.com/zachleat/status/684747486397779969\">January 6, 2016</a>\n       </blockquote> \n      </div> \n     </div> </img></img></img></img></img>","descriptionType":"html","feedId":12519,"bgimg":"https://www.zachleat.com/web/img/posts/critical-fonts/default-3.png","linkMd5":"92548b5e72c0394fc18762e2e7dbc4bd","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn10@2020_1/2020/08/25/02-02-04-287_ba90681593444350.webp","destWidth":1120,"destHeight":156,"sourceBytes":18268,"destBytes":11584,"author":"","articleImgCdnMap":{"https://www.zachleat.com/web/img/posts/critical-fonts/default-3.png":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn10@2020_1/2020/08/25/02-02-04-287_ba90681593444350.webp","https://www.zachleat.com/web/img/posts/critical-fonts/fout-1.png":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn79@2020_6/2020/08/25/02-02-15-505_9049913218fd739e.webp","https://www.zachleat.com/web/img/posts/critical-fonts/foft-1.png":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn38@2020_3/2020/08/25/02-02-13-343_a4a6c8d2d17293e6.webp","https://www.zachleat.com/web/img/posts/critical-fonts/critical-foft-2.png":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn50@2020_2/2020/08/25/02-02-10-140_11b8ccfecb76663e.webp","https://www.zachleat.com/web/img/posts/critical-fonts/benchmarks.svg":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn63@2020_2/2020/08/25/02-02-19-097_a95f57e1fa98d1b4.svg"},"publishedOrCreatedDate":1598320921766},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Fundamental Problem with YUI Button","link":"http://www.zachleat.com/web/fundamental-problem-with-yui-button/","description":"\n\t\t\t<p>Buttons! Let’s make them obvious and good looking. Let’s make them have inline images and cool hover colors. Let’s make them three dimensional. Especially so, let’s make them from markup so that we don’t take functionality away from technology disabled users.</p>\n<p>Ruh roh Shaggy! The <a href=\"http://yuiblog.com/blog/2007/02/20/yui-220-released/\">YUI Button</a> component is misbehaving. It is taking away the submit event fired when the button is clicked and firing the submit() function programmatically.</p>\n<p>So, how do you fire the listener functions that are waiting for the submit event to fire, while at the same time using the sleek buttons provided by YUI?</p>\n<p>Try this plug and play function:</p>\n<pre><code>YAHOO.widget.Button.prototype._submitForm = function() {\n    var oForm = this.getForm();\n    if(oForm) {\n        YAHOO.widget.Button.addHiddenFieldsToForm(oForm);\n        this.createHiddenField();\n    var listeners = YAHOO.util.Event.getListeners( oForm, 'submit' );\n    var submitForm = true;\n    for( var j = 0; j &lt; listeners.length; j++ )\n    {\n      if( listeners[ j ].fn.apply( listeners[ j ].adjust ) == false ) submitForm = false;\n    }\n        if( submitForm ) oForm.submit();\n    }\n};\n</code></pre>\n<p>(Make sure you include this after you’ve loaded the YUI Button javascript file.) There are a few caveats to this approach.</p>\n<p>First, you’ll have to remove any references to the event object inside your listener function (most of the examples use the variable e). For example:</p>\n<pre><code>YAHOO.util.Event.addListener( myForm, 'submit', function( e ) {} );\n</code></pre>\n<p>Inside my submit listener functions, I just check to make sure e is not null prior to using it.</p>\n<p>Second, if you wish to cancel the submit, you’ll have to return false inside of your submit listener function.</p>\n<p>A sleeker approach would be to revert back to having the button fire the ‘submit’ event. But I’ll leave that as an exercise to the original developer, Mr. Todd Kloots (props).</p>\n<p>Update: After a little more code searching, it would seem like the submit event is never being canceled by the YUI Button javascript. However, when you comment out the line that that fires the submit programmatically (oForm.submit();), the form still isn’t submitted. I’ll have to research a bit more.</p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"81a19a57de13d54e0ec665322e92a48f","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921773},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"jQuery Bug: IE reports incorrect $.browser.version","link":"http://www.zachleat.com/web/jquery-bug-ie-reports-incorrect-browserversion/","description":"\n\t\t\t<p><strong>Update: This is now fixed in jQuery.</strong></p>\n<p>I’ve witnessed installations of IE where the navigator.userAgent reported both MSIE 6.0 and MSIE 7.0 in the same string, when Internet Explorer 7 is the one that’s really installed. Turns out, this is problematic for jQuery version 1.2.6, as it parses the double version userAgent as Internet Explorer 6, which may cause problems with your code if you’re using $.browser.version.</p>\n<p>You can monitor the <a href=\"http://dev.jquery.com/ticket/3169\">jQuery bug</a> in the bug tracker, or see the original research performed by <a href=\"http://jamazon.co.uk/web/2008/03/14/jquerybrowserversion-doesnt-recognise-ie7/\">Jamie Thompson</a>. Here’s a better workaround that merges two different approaches used on Jamie’s page, which fixes $.browser.version instead of using $.browser.msie6. This is to be considered temporary until the next (fixed) version of jQuery comes out.</p>\n<pre><code>jQuery.browser.version = jQuery.browser.msie &amp;&amp; /msie 7\\.0/i.test(navigator.userAgent) ?\n  &quot;7.0&quot; :\n  jQuery.browser.version;\n</code></pre>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"05688e22715e553df2f24729e9ec775c","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921762},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Separating Fact from Fiction on the Internet","link":"http://www.zachleat.com/web/fact-from-fiction/","description":"\n\t\t\t<p>I did a talk at Barcamp Omaha on September 17, 2016 about how to find verifiable trustworthy information on the web. I didn’t publish it online because it contained some jokes about people that think the Earth isn’t sphere-ish and those people started crashing my Twitter mentions. I decided not to give them any more attention.</p>\n<p>Guess you had to be there! Sorry!</p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"ab20e16548e62051c86f649ac9532fa1","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921767},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Enlarging your YUI DataTable in 29 Seconds or Less!","link":"http://www.zachleat.com/web/enlarging-your-yui-datatable-in-29-seconds-or-less/","description":"<p><em>This is an updated version of the <a href=\"https://www.zachleat.com/web/2007/06/07/enlarging-your-yui-datatable-in-30-seconds-or-less/\">Enlarging your YUI DataTable in 30 Seconds or Less!</a> modified for the newly released YUI 2.3.0.</em></p> \n<p>This method adds an extra row to the YUI DataTable when a row is selected, below the selected row. This allows the developer to add additional content that might not be applicable to the column constraints of a typical datatable or grid and allow that content be displayed more fluidly inside a single row spanning all of the viewable columns.</p> \n<p>I know you’re anxious for an example, so let’s see some screenshots of a simple YUI DataTable:</p> \n<p><a href=\"https://www.zachleat.com/Lib/ymod/ymod-tableExtension-2.3.0.html\"><img src=\"https://www.zachleat.com/web/wp-content/uploads/2007/08/default-datatable.gif\" alt=\"Default DataTable\" /></a></p> \n<p>Turns into this when a row is selected:</p> \n<p><a href=\"https://www.zachleat.com/Lib/ymod/ymod-tableExtension-2.3.0.html\"><img src=\"https://www.zachleat.com/web/wp-content/uploads/2007/08/datatable-selected.gif\" alt=\"Row selected\" /></a></p> \n<p>Click any of the above images for a live example.</p> \n<p>Any HTML can be added. You can make an AJAX call and put the result into the newly inserted row (that will be left as an exercise for the reader [you]).</p> \n<p>I know you’re asking yourself, how the hell do I add this to my YUI DataTable? WHERE IS THE DAMN SOURCE CODE? Calm down, you know I’m getting to it.</p> \n<h3 id=\"how-to\">How To <a class=\"direct-link\" href=\"http://www.zachleat.com/web/enlarging-your-yui-datatable-in-29-seconds-or-less/#how-to\">#</a></h3> \n<ol> \n <li>Include the <a href=\"http://www.zachleat.com/Lib/ymod/ymod-tableExtension-2.3.0.js\">ymod-tableExtension-2.3.0.js</a> file.</li> \n <li>Create your DataTable. If you don’t know how to do this, go to the <a href=\"http://developer.yahoo.com/yui/datatable/\">official documentation for help and examples</a>.</li> \n <li>Make sure your DataTable has the selectionMode parameter set to ‘single’. This can be achieved by passing in <code>{ selectionMode: 'single' }</code> in as the 4th argument to the DataTable constructor.</li> \n <li>Use the following code to setup your table extension:</li> \n</ol> \n<pre><code>    // myDataTable is your DataTable object\n    YAHOO.ymod.tableExtension.setup( myDataTable, function( contentDiv )\n    {\n        var myContent = '';\n        var selectedRows = this.getSelectedRows();\n        if( selectedRows.length &gt; 0 )\n        {\n            myContent += 'Do something based on&lt;br /&gt;the row that is selected!';\n        }\n        contentDiv.innerHTML = myContent;\n    } );\n\nThe setup function is basically a convenience method to add the event listeners. You can just as easily do this yourself manually:\n\n    // myDataTable is your DataTable object.\n    myDataTable.subscribe( 'headerRowMousedownEvent', YAHOO.ymod.tableExtension.cleanUp );\n    myDataTable.subscribe( 'rowClickEvent', YAHOO.ymod.tableExtension.selectRow, function( contentDiv ) { /* same as function appears above */ } );\n</code></pre> \n<h2 id=\"css\">CSS <a class=\"direct-link\" href=\"http://www.zachleat.com/web/enlarging-your-yui-datatable-in-29-seconds-or-less/#css\">#</a></h2> \n<p>Here’s some CSS hooks to do some styling. The expanded row will include the yui-dt-selected class by default.</p> \n<pre><code>/* The original table row clicked on */\ntr.ymod-expanded {}\n/* Row containing the expanded content */\ntr.ymod-expandedData {}\n/* Div containing the expanded content inside the row */\ntr.ymod-expandedData div.ymod-expandedDataContent { background-color: navy; padding: 2px 6px; }\n</code></pre> \n<h2 id=\"limitations\">Limitations <a class=\"direct-link\" href=\"http://www.zachleat.com/web/enlarging-your-yui-datatable-in-29-seconds-or-less/#limitations\">#</a></h2> \n<ul> \n <li>Resorting removes the expanded content. Otherwise it was messing with the sort.</li> \n <li>It only works with single row selection mode, which allows only one row to be selected at a time. This is not the default (standard), which allows multiple rows to be selected with SHIFT or CTRL. Feel free to modify this to work with other modes!</li> \n</ul> \n<h3 id=\"download-ymod-tableextension-2.3.0.js\"><a href=\"http://www.zachleat.com/Lib/ymod/ymod-tableExtension-2.3.0.js\">Download ymod-tableExtension-2.3.0.js</a> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/enlarging-your-yui-datatable-in-29-seconds-or-less/#download-ymod-tableextension-2.3.0.js\">#</a></h3>","descriptionType":"html","feedId":12519,"bgimg":"https://www.zachleat.com/web/wp-content/uploads/2007/08/default-datatable.gif","linkMd5":"4c038d5f97a8a72559a05fc4bd5b7003","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn1@2020_1/2020/08/25/02-02-02-645_8bf93176d182ecfc.webp","destWidth":238,"destHeight":219,"sourceBytes":4452,"destBytes":5652,"author":"","articleImgCdnMap":{"https://www.zachleat.com/web/wp-content/uploads/2007/08/default-datatable.gif":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn1@2020_1/2020/08/25/02-02-02-645_8bf93176d182ecfc.webp","https://www.zachleat.com/web/wp-content/uploads/2007/08/datatable-selected.gif":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn7@2020_5/2020/08/25/02-02-20-443_b7a29f352d989bfb.webp"},"publishedOrCreatedDate":1598320921761},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"I Wanted to Type a Number","link":"http://www.zachleat.com/web/filament-type-number/","description":"\n\t\t\t<p><a href=\"http://www.filamentgroup.com/lab/type-number.html\"><strong>Read <em>I Wanted to Type a Number</em> on the Filament Group Lab.</strong></a></p>\n<p>Let’s learn how to opt-in to big-button numeric keyboards on touch screens, safely and reliably.</p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"fa153f249ff6df35a93c4ff5e3440fac","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921767},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Progressive Enhancement (at jQuery Omaha)","link":"http://www.zachleat.com/web/jquery-omaha/","description":"\n\t\t\t<p>A presentation for the jQuery Omaha meetup group, later transformed into NebraskaJS.</p>\n<ul>\n<li><a href=\"https://www.slideshare.net/zachleat/progressive-enhancement-8766538\">Slides on Slideshare</a></li>\n<li><a href=\"https://www.meetup.com/nebraskajs/events/25042581/\">Event on Meetup</a></li>\n</ul>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"01718e3f3ccc1f45501e44473ec70501","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921763},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Specific Inheritance with TIBCO&#8217;s General Interface","link":"http://www.zachleat.com/web/specific-inheritance-with-tibcos-general-interface/","description":"\n\t\t\t<p><em>Sorry about the title, I couldn’t resist.</em></p>\n<p>TIBCO created the General Interface (GI) toolkit for one-page in-browser applications back before I was in my JavaScript diapers. I hadn’t even graduated from high school yet when they were building Rich Internet Applications using some of the most feature crippled browsers in Internet history, back when cross browser meant Internet Explorer and Netscape Navigator, not the Firefox/WebKit/Opera’s of today. But when I did finally start to get my feet wet in the world of JavaScript, this is the tool I started on. I learned what a DOM was, earned my stripes in XSL, and discovered the power of the browser.</p>\n<p>But just like any programmer nearing the end of their relationship with a tool, I must take a few moments to evaluate my experiences with it, not only for my benefit, but so that you, the reader, might also gain a golden nugget of wisdom from the treasure troves of its sparkling source code.</p>\n<p>When I first started using General Interface almost two years ago (~June 2006) on version 3.1, it wasn’t a cross browser tool. It had support for Internet Explorer 6, and that was it. Truthfully, it was an executive decision to use the tool, and we were using it for an intranet application. Looking back on that decision raises a huge red flag now — internally supported web browsers are subject to change, and so are audiences — applications may turn out to be more external that previously suggested. And while Firefox support was included with version 3.2, to this day I hear complaints that the application doesn’t work on the Safari browser (or, in turn, the iPhone).</p>\n<p>General Interface relies heavily on a JavaScript XSLT interface (this is why they won’t ever have support for Safari 2, or the iPhone, neither of which support a JavaScript XSLT interface), leveraging XSLT stylesheets to generate markup for the page, which turns out to be quite the speed demon when generating large amounts of markup from XML documents (or GUI components serialized into XML documents). However, a large chunk of that speediness is lost due to a heavy reliance on inline CSS. A majority of the style associated with components is generated on the fly and inserted inline using the browser native style attribute. This can cause a lot of problems when attempting to do a simple restyling of a GUI component using CSS. For example, in a DataTable/Grid component, there is no option to style the background-color of a selected row. The only option for the style of a selected row is a background-image, which I believe resulted from the inline style limitation and the background color already being specified for zebra-stripe row coloring. If you specified the background-color for the selected row, it wouldn’t know which background-color to go back to when the row was unselected, due to an unfortunate avoidance of the CSS class construct.</p>\n<p>Another drawback to General Interface is development of the GUI. I won’t get into it too much, but will just meantion that to create interfaces in GI, you must create your GUI components and layouts using the an in-browser IDE developed using the power of dog food. That’s right, it’s written in GI itself.</p>\n<p>However, General Interface has got it right in some cases. They were (I believe) the first JavaScript library/toolkit to include a mechanism for large result set DataTables/Grids. In fact, their Matrix component (the equivalent of a YUI DataTable, or a Dojo Grid) supports more features that most libraries have even begun to plan for: complete inline editing with great keyboard navigation support, clientside sorting, column reordering, dynamic column hiding and adding, hierarchical tree grids, easy options for pagination caching, as well as 4 different rendering modes (the latest YUI DataTable 2.5.0 just added their first rendering mode, what GI calls “Chunked” rendering). They were the first toolkit to include a very sophisticated client side charting package, with support for more charting types than you’d even want to put into a single demo. They’ve been developing the package with a clearly object oriented methodology in mind, and that can be easily seen in their source code. They have taken the package open source and released it with a BSD license (which is a delight of course, muddling through that obfuscated source the first year was a pain).</p>\n<p>If nothing else, TIBCO is a company with some great ideas, and you can see those ideas represented in General Interface. This tool has shaped a lot of my views on clientside development, and I’ve learned a lot from its developers. For instance, I feel like XSLT is one of the most underrated tools for speed improvements in clientside DOM manipulation (using innerHTML to insert the result of an XSL transform), especially with Safari 3 including a JavaScript XSLT interface. If you’re developing an application that deals a lot with XML web services (SOA) and you want to create a single-page in-browser application (RIA), why not give it a look? Just keep those caveats I’ve meantioned in mind and you’ll be fine. Trying something new can change your perspective, and if you keep an open mind, you might learn something.</p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"21e924cf08c7d047ebb10268b458749e","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921761},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"The Life Expectancy of Digital Content","link":"http://www.zachleat.com/web/digital-longevity/","description":"\n\t\t\t<p>I snuck back on to Twitter for a few moments this morning and was presented with a fascinating video from <a href=\"https://www.youtube.com/watch?v=i-5NhxYRqUI\"><strong>Anthony Bourdain’s series Raw Craft on the Arion Press</strong></a>, a magical and fascinating little business in San Francisco that hand-crafts books. Thank you so much <a href=\"https://twitter.com/robinrendle/status/1005176531075780608\">Robin Rendle</a> for sharing this.</p>\n<p>Watching these master craftspeople in their element left me <strong>in awe of the amount of respect</strong> that goes into a single book. The typesetting, the printing, the sewing and binding, the proofreading. It’s reminiscent of monastic scribes carefully and artfully crafting every page, spending their waking lives crafting manuscripts comprised of words written by other people. I pray their work always have enough demand to justify their continued existence.</p>\n<p>I particularly enjoyed this gem:</p>\n<blockquote>\n<p>“If ever there were a time to be making books, that’s exciting, say within the last century—I would say now is that moment. The interweb has really relieved the burden of the encyclopedia from the book. So we’re in this very unique moment now where it can be restored to it’s certain sparkly self. It’s kind of up to all of us to figure out what that book will look like in the 21st century.”—Blake Riley</p>\n</blockquote>\n<p>“Relieved the burden of the encyclopedia from the book.” Wow.</p>\n<p>Seeing this bookmaking in action has me <strong>wondering about the longevity of digital content</strong>, too. The web was an antidote to closed document formats and revolutionary because of its ubiquitous accessibility. But when you’re thinking on a bigger scale, in comparison to a lovingly crafted book, even the most open of digital formats—raw HTML on the web—sacrifices longevity for access and ubiquity. It’s tough to imagine that any digital content that you or I create or maybe even consume will be around in the same way that an intergenerational book lives on, passed from parents to children.</p>\n<p>On my bookshelf lives a copy of Macbeth printed in 1905, aged out of the small town local library where my grandmother spent her time as a lover of books—a job title known to most in the town as librarian. It seems both inevitable that the <em>text</em> Macbeth still exist today and unlikely that this particular printed copy of Macbeth survived 113 years.</p>\n<p>On the same note it seems overwhelmingly unlikely that jumping ahead the same interval of time—to the year 2131—that any modern day digital copies of Macbeth will still exist. Would any current digital incarnation of the text survive? What about the darling of openness, the HTML file? I want to believe! But I’m skeptical.</p>\n<p>Macbeth will continue to be re-encoded and resold in new formats with new annotations and metadata as the locomotive of capitalism chugs forward, and I see nothing wrong with that. It’s a little strange given that Macbeth (and all plays of Shakespeare) are available in the public domain. Yes, free. Yet the demand to pay for the content exists—you can buy MacBeth on the Kindle store right now for hard earned cash—but it’s the accoutrement (the value-add if you nasty) that has modern day monetary value.</p>\n<p>Don’t get me wrong, <strong>accessibility to content is a benefit to society</strong>, even when couched deep in the cushions of the Amazon loose-change money-making machine. Any Macbeth is better than no Macbeth, as if those were the only options. However, dear reader, you may already know that our options are not limited to these extremes!</p>\n<p>We may be trapped in a web of competing formats, open and closed, standardized and proprietary, single vendor controlled and community driven, available for all and tightly held in app stores and behind walled gardens. We’re trapped in a continuum of open and closed continuously exploited for profit that plays a huge role in the longevity of our digital files.</p>\n<p>Digital content longevity will continue to be highly variable, depending only <em>in part</em> on the file format used.  HTML has existed for about 27 years and I wouldn’t venture a guess to say how much longer it’ll go. I can say that a reduction in ceremony around opening and reading a file is better for that file’s longevity. Relatedly, the ubiquity of software necessary to read a file lends to its future proofing as well. And <strong>what software has been historically and continues to be more ubiquitous than the lowly web browser?</strong> I’m not sure such software exists.</p>\n<p>So feel free to keep creating your content in Microsoft Word or in Markdown or using JSX or Mustache templates or in your WordPress database. <strong>But if you want the content to live a full and happy life, publish it in HTML on the web</strong>.</p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"20af16ef89bb7cac44b6a260d3eea996","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921771},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"The Co-opetition of Team Web","link":"http://www.zachleat.com/web/team-web/","description":"<p>Much earlier in my career I created and open sourced a jQuery plugin called <a href=\"https://www.zachleat.com/web/bigtext-makes-text-big/\">BigText</a>. I worked hard on it. I made a cool <a href=\"https://www.zachleat.com/bigtext/demo/\">demo page</a> to show it off (in 3D, even). Then, <a href=\"https://daverupert.com/\">Dave Rupert</a> made a plugin called <a href=\"http://fittextjs.com/\">FitText</a>. His was simple. It was efficient. It was a thing of beauty. But my first reaction was that FitText was a competitor to my precious 💍 BigText. I’ll be honest, it got my competitive blood going. I sat down to pen a furiously competitive blog post about how BigText was better and through the therapeutic magic of research-writing I learned that these two things were in fact not competitors—they were partners. I like to think that the blog post even came out a bit <a href=\"https://www.zachleat.com/web/fittext-and-bigtext/\">magnanimous</a> at the end. These two plugins not only performed subtly different tasks, but complemented each other.</p> \n<p>Most of this is irrelevant now, except I learned an important lesson that day that continues to serve me well even today. I no longer view alternatives to projects I’ve developed as competition. In fact, quite the opposite. FitText brought more attention to the problem of responsive text. It elevated BigText and hopefully vice versa.</p> \n<p>Often when we feel threatened by competition, we are harboring a <a href=\"https://en.wikipedia.org/wiki/Zero-sum_thinking\">zero-sum mentality</a>. <em>“If you do well, then it takes from my slice of the pie.”</em> Most situations are not like this, especially not at the scale at which we often operate.</p> \n<h2 id=\"team-static-web\">Team Static Web <a class=\"direct-link\" href=\"http://www.zachleat.com/web/team-web/#team-static-web\">#</a></h2> \n<p>I develop a static site generator called <a href=\"https://www.11ty.io/\">Eleventy</a> but do not see Gatsby or Hugo or Jekyll (et al) as competition, per say. We’re all part of an ecosystem that is fighting to elevate static sites as a viable architecture pattern. As evidence of this, if an alternative static site generator works better for your use case—please switch! That’s why <a href=\"https://www.11ty.io/docs/#competitors\">we link to our “competition” right on the front of our documentation</a>.</p> \n<h2 id=\"team-web-type\">Team Web Type <a class=\"direct-link\" href=\"http://www.zachleat.com/web/team-web/#team-web-type\">#</a></h2> \n<p>Last week I had the pleasure of giving a talk at the legendary <a href=\"https://www.zachleat.com/web/scoville-scale/\">Beyond Tellerrand</a> conference. As preparation for that talk I researched a fair number of web font providers and hosts and highlighted the benefits and drawbacks of a few of them. I recognize that a tension exists between free providers (Google Fonts) that some may see as competition to Paid pricing models. Additional tension is added when services want to encourage use of their hosting CDN.</p> \n<p>I see free type services in the same light—they are elevating the use of type on the web. They are often the <em>gateway</em> to paid services, introducing and increasing the overall audience of people interested in using type on the web. All of the hardworking people supporting these services (free or paid) are on Team Web Type.</p> \n<h2 id=\"team-web-standards\">Team Web Standards <a class=\"direct-link\" href=\"http://www.zachleat.com/web/team-web/#team-web-standards\">#</a></h2> \n<p>Web browser vendors are at their best when they embrace this world view. Eliminating a <em>Best Viewed In</em> mentality by developing and standardizing behavior together with “competing” browser vendors not only helps increase the quality of experiences on the web but ideally will get more people using the web.</p> \n<h2 id=\"team-web\">Team Web <a class=\"direct-link\" href=\"http://www.zachleat.com/web/team-web/#team-web\">#</a></h2> \n<p>I think y’all know where I’m going here. The biggest picture is that we’re all web developers. I have my opinions (some strongly, some weakly held) but independent of your framework choice, where you put your CSS (please not in your runtime JavaScript), or even where your paycheck comes from—we’re on the same team: Team Web.</p> \n<p>Give those native app developers hell, y’all 😇 (and don’t use AMP).</p>","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"7393ffe71448b1327c14a781e5333358","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921771},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Code Like the Big Boys: Flickr","link":"http://www.zachleat.com/web/code-like-the-big-boys-flickr/","description":"\n\t\t\t<p><em>Code like the Big Boys is a series of posts about code solutions used by major websites. What can we learn from these professional websites to use in our own code?</em></p>\n<p><strong>JavaScript</strong></p>\n<p>Looking at the source code of the Flickr home page is actually pretty strange. For one, there is only one JavaScript source code file (other than the advertising scripts), a solution for <a href=\"http://webfx.eae.net/dhtml/pngbehavior/pngbehavior.html\">PNG Alpha Transparency in Internet Explorer</a>, included as an <a href=\"http://msdn2.microsoft.com/en-us/library/ms531018(VS.85).aspx\">HTML Component</a>. The source for the PNG Behavior script (credit to Erik Arvidsson) is unchanged, with the exception of the removal of some extraneous comments, but curiously enough no whitespace removed (a suggestion to save them a few bucks in bandwidth). Looking at their HTML source, they seem to emphasize whitespace and readability over bandwidth savings, which seems fine to me. At least their visitors (you and I) can more easily learn something from their code.</p>\n<p><strong>CSS</strong><br>\nThey’ve taken the same route as one of the tips from <a href=\"http://snook.ca/archives/html_and_css/top_css_tips/\">Jonathan Snook</a>, and declared all styles for an element on a single line. They use your standard css to reset to a base starting point, much like YUI’s Reset CSS we’re all familiar with. One interesting declaration I noticed prominently inside of their CSS was the .Butt css class, declared on their primary Search form button. I’m curious to know the semantic meaning behind that one.</p>\n<p>They use the <a href=\"http://www.info.com.ph/~etan/w3pantheon/style/starhtmlbug.html\">tan hack</a> as well to isolate a CSS declaration for IE browsers:</p>\n<pre><code>* html #featured-image cite {bottom: -1px;}\n</code></pre>\n<p>This is to workaround for an IE limitation to absolutely positioning content at the bottom of a relatively positioned div, in this case the black box containing the credits (or citation, hence the cite tag) inside of the feature image.</p>\n<p><img src=\"https://www.zachleat.com/web/wp-content/uploads/2008/03/flickr_cite.jpg\" alt=\"Flickr Citation Tag\" title=\"flickr_cite\"></p>\n<p>Another interesting CSS Hack they’ve employed involves the line-height for  tags containing Unicode characters to select different languages. It starts out like <a href=\"http://www.dustindiaz.com/min-height-fast-hack/\">Dustin Diaz’s min-height hack</a>, but throws a loop.</p>\n<pre><code>height: 0px !important;\nheight /**/:13px;\n</code></pre>\n<p>I’m not familiar with the <code>/**/</code> syntax, and would really appreciate any information someone has on what platform this is targeting. A comment would be nice!</p>\n<p><em>Editors Note (2013): The <code>/**/</code> syntax is to target <a href=\"http://browserhacks.com/\">everything but IE6</a>.</em></p>\n<p><strong>HTML</strong></p>\n<p>Standard here, and they have some nice meta tags for the I-phone:</p>\n<pre><code>&lt;meta name=&quot;viewport&quot; content=&quot;width=950&quot; /&gt;\n</code></pre>\n<p>All in all, it’s short and sweet code for a home page. It’s nice to see such clean code with an eye towards standards on a commercially successful site, many props to their programmers. I’m scared to do my next in the series, because I’m 100% sure it won’t be as nice of a read as Flickr was.</p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"https://www.zachleat.com/web/wp-content/uploads/2008/03/flickr_cite.jpg","linkMd5":"4e03dc80be7519e70e11e43fa1414f0c","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn6@2020_4/2020/08/25/02-02-02-586_06d83f7fa4158784.webp","destWidth":503,"destHeight":232,"sourceBytes":35411,"destBytes":26092,"author":"","articleImgCdnMap":{"https://www.zachleat.com/web/wp-content/uploads/2008/03/flickr_cite.jpg":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn6@2020_4/2020/08/25/02-02-02-586_06d83f7fa4158784.webp"},"publishedOrCreatedDate":1598320921761},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"W3C Status Banners","link":"http://www.zachleat.com/web/w3c-status-banners/","description":"<p>Browsing the World Wide Web this weekend on a fancy HDPi screen, I noticed the iconic W3C Status Banners on the <a href=\"http://www.w3.org/TR/CSS2/\">W3C specification documents were blurry images</a>. In true first world problem fashion, I decided to improve them and recreate the banners using CSS.</p> \n<ul> \n <li><a href=\"http://zachleat.github.io/w3c-banners/\">Demo</a></li> \n <li><a href=\"https://github.com/zachleat/w3c-banners/\">Code on GitHub</a></li> \n</ul> \n<img src=\"https://www.zachleat.com/web/img/posts/w3c-banners/comparison.png\" alt=\"A comparison of the current and newly recreated banner\" style=\"max-height: 397px; float: left;\"> <p>For really no reason whatsoever, I’ve generated a random status banner on each visit to one of my blog posts that can be seen in the top left corner of the viewport (above a 42em width).</p> <p>I’d be chuffed if the W3C actually used this code. I created a <a href=\"https://github.com/zachleat/w3c-banners\">repo for it on GitHub</a>. Usage instructions and browser compatibility are included there.</p> <h2 id=\"performance\">Performance <a class=\"direct-link\" href=\"http://www.zachleat.com/web/w3c-status-banners/#performance\">#</a></h2> <p>While it should be noted that switching from image content to CSS means that you’re shifting from non-blocking to blocking content, care can be taken to load the CSS in <a href=\"https://github.com/filamentgroup/loadCSS/\">an asynchronous fashion</a> to minimize the impact on initial page render.</p> <p>It should be noted that after I wrote this, I discovered that all of the images were in fact also available in <a href=\"http://www.w3.org/StyleSheets/TR/\">SVG format</a>.</p> <h3 id=\"file-sizes\">File Sizes <a class=\"direct-link\" href=\"http://www.zachleat.com/web/w3c-status-banners/#file-sizes\">#</a></h3> <p>I’ve included the smallest and the largest SVG image file sizes below.</p> \n <table> \n  <thead> \n   <tr> \n    <th>Status</th> \n    <th>PNG</th> \n    <th>SVG</th> \n   </tr> \n  </thead> \n  <tfoot> \n   <tr> \n    <td><em>Mean (of 13 images)</em></td> \n    <td><em>1.4 KB</em></td> \n    <td><em>7.5 KB</em></td> \n   </tr> \n  </tfoot> \n  <tbody> \n   <tr> \n    <td>W3C Note</td> \n    <td>0.7 KB</td> \n    <td>2.8 KB</td> \n   </tr> \n   <tr> \n    <td colspan=\"3\"><em>…</em></td> \n   </tr> \n   <tr> \n    <td>W3C Proposed Edited Recommendation</td> \n    <td>1.5 KB</td> \n    <td>11 KB</td> \n   </tr> \n  </tbody> \n </table> <p>Take note that the <strong>single CSS file size for all of the banners, currently 1.5 KB</strong> (or 506 B after minimization and gzip), <strong>is almost half the size of the smallest SVG banner image.</strong> And the CSS has better browser support than raw SVG too, including Android 2.x (which does not support SVG).</p> <p>So, yeah, take that SVG. You ain’t the best at everything.</p> <p><strong>Update</strong>: Take note that the original idea behind this was probably born from the <a href=\"https://github.com/zachleat/iliveinomaha-banner\">iliveinomaha banner rewrite</a> first introduced by <a href=\"http://www.matthew-steele.com/a-fresh-coat-of-paint/\">Matt Steele in his blog post A Fresh Coat of Paint</a>.</p> </img>","descriptionType":"html","feedId":12519,"bgimg":"https://www.zachleat.com/web/img/posts/w3c-banners/comparison.png","linkMd5":"e15b1f4aa9a696c4af2459b50cf49fdc","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn90@2020_2/2020/08/25/02-02-04-227_53a515b0a81e267c.webp","destWidth":212,"destHeight":794,"sourceBytes":46694,"destBytes":9638,"author":"","articleImgCdnMap":{"https://www.zachleat.com/web/img/posts/w3c-banners/comparison.png":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn90@2020_2/2020/08/25/02-02-04-227_53a515b0a81e267c.webp"},"publishedOrCreatedDate":1598320921764},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"The Origin Story of Container Queries","link":"http://www.zachleat.com/web/origin-container-queries/","description":"\n\t\t\t<p>Container Queries are an often requested feature of the web platform. It has become almost cliché to mention it when talking about problems we’d like the web platform to solve. Container Queries would go a long way toward helping web developers do their jobs better and its omission is a huge limitation when developing component-based code for the web.</p>\n<p>Everyone wants it, but it sure seems like no one is actively working on it. But I’m not here to soapbox about that. Here I only mean to discover the earliest mention of Container Queries (or Element Queries or any implementations of this similar idea) to learn <em>how long</em> this feature has been requested by web developers. I’m curious: is this length of time customary for a new feature of the web platform? Or is something else going on?</p>\n<p>Here are the earliest mentions of Container Queries that the community was able to dig up (in reverse chronological order):</p>\n<dl class=\"dl-inline\">\n    <dt>2014 December 8</dt>\n    <dd>\n        <a href=\"https://github.com/eqcss/eqcss\"><picture><source type=\"image/webp\" srcset=\"https://www.zachleat.com/img/57b02d05-72.webp 72w\"><img alt=\"innovati’s Avatar\" src=\"https://www.zachleat.com/img/57b02d05-72.jpeg\" width=\"72\" height=\"72\" class=\"z-avatar\" loading=\"lazy\"></picture>Tommy Hodgins’ <code>eqcss</code></a>\n        <ul class=\"via\">\n            <li><em>via <a href=\"https://twitter.com/equinusocio/status/1230774576453341187\"><picture><source type=\"image/webp\" srcset=\"https://www.zachleat.com/img/aca40ae4-72.webp 72w\"><img alt=\"equinusocio’s Avatar\" src=\"https://www.zachleat.com/img/aca40ae4-72.jpeg\" width=\"72\" height=\"72\" class=\"z-avatar\" loading=\"lazy\"></picture>Mattia Astorino</a></em></li>\n        </ul>\n    </dd>\n    <dt>2013 April 1</dt>\n    <dd>\n        <a href=\"https://ianstormtaylor.com/media-queries-are-a-hack/\"><picture><source type=\"image/webp\" srcset=\"https://www.zachleat.com/img/cb3fd21d-72.webp 72w\"><img alt=\"ianstormtaylor’s Avatar\" src=\"https://www.zachleat.com/img/cb3fd21d-72.jpeg\" width=\"72\" height=\"72\" class=\"z-avatar\" loading=\"lazy\"></picture>Ian Storm Taylor’s <em>Media Queries are a Hack</em> blog post</a>\n        <ul class=\"via\">\n            <li><em>via <a href=\"https://twitter.com/patrickfulton/status/1204490285536952321\"><picture><source type=\"image/webp\" srcset=\"https://www.zachleat.com/img/7482662b-72.webp 72w\"><img alt=\"patrickfulton’s Avatar\" src=\"https://www.zachleat.com/img/7482662b-72.jpeg\" width=\"72\" height=\"72\" class=\"z-avatar\" loading=\"lazy\"></picture>Patrick Fulton</a></em></li>\n        </ul>\n    </dd>\n    <dt>2013 March 17</dt>\n    <dd>\n        <a href=\"https://github.com/joecritch/container-queries\"><picture><source type=\"image/webp\" srcset=\"https://www.zachleat.com/img/c5a2c3a6-72.webp 72w\"><img alt=\"joecritch’s Avatar\" src=\"https://www.zachleat.com/img/c5a2c3a6-72.jpeg\" width=\"72\" height=\"72\" class=\"z-avatar\" loading=\"lazy\"></picture>Joe Critch’s <code>container-queries</code></a>\n        <ul class=\"via\">\n            <li><em>via <a href=\"https://twitter.com/innovati/status/1204484977938726912\"><picture><source type=\"image/webp\" srcset=\"https://www.zachleat.com/img/57b02d05-72.webp 72w\"><img alt=\"innovati’s Avatar\" src=\"https://www.zachleat.com/img/57b02d05-72.jpeg\" width=\"72\" height=\"72\" class=\"z-avatar\" loading=\"lazy\"></picture>Tommy Hodgins</a></em></li>\n        </ul>\n    </dd>\n    <dt>2013 March 8</dt>\n    <dd>\n        <a href=\"https://github.com/mlrawlings/containerqueries\"><picture><source type=\"image/webp\" srcset=\"https://www.zachleat.com/img/3a9d1813-72.webp 72w\"><img alt=\"mlrawlings’s Avatar\" src=\"https://www.zachleat.com/img/3a9d1813-72.jpeg\" width=\"72\" height=\"72\" class=\"z-avatar\" loading=\"lazy\"></picture>Michael Rawlings’ <code>containerqueries</code></a>\n    </dd>\n    <dt>2013 February 7</dt>\n    <dd>\n        <a href=\"http://web.archive.org/web/20130212075053/http://www.jonathantneal.com/blog/thoughts-on-media-queries-for-elements/\"><picture><source type=\"image/webp\" srcset=\"https://www.zachleat.com/img/cfd4da86-72.webp 72w\"><img alt=\"jon_neal’s Avatar\" src=\"https://www.zachleat.com/img/cfd4da86-72.jpeg\" width=\"72\" height=\"72\" class=\"z-avatar\" loading=\"lazy\"></picture>Jon Neal’s (now ⛔️ deleted) <em>Thoughts on Media Queries for Elements</em></a>\n        <ul class=\"via\">\n            <li><em>via <a href=\"https://twitter.com/jay_hoffmann/status/1204508530025349121\"><picture><source type=\"image/webp\" srcset=\"https://www.zachleat.com/img/1a8cbae3-72.webp 72w\"><img alt=\"jay_hoffman’s Avatar\" src=\"https://www.zachleat.com/img/1a8cbae3-72.jpeg\" width=\"72\" height=\"72\" class=\"z-avatar\" loading=\"lazy\"></picture>Jay Hoffman</a></em></li>\n        </ul>\n    </dd>\n    <dt>2013 February 7</dt>\n    <dd>\n        <a href=\"http://web.archive.org/web/20140415001721/https://twitter.com/necolas/status/299573744307941376\"><picture><source type=\"image/webp\" srcset=\"https://www.zachleat.com/img/e984f372-72.webp 72w\"><img alt=\"necolas’s Avatar\" src=\"https://www.zachleat.com/img/e984f372-72.jpeg\" width=\"72\" height=\"72\" class=\"z-avatar\" loading=\"lazy\"></picture>Nicolas Gallagher’s (now ⛔️ deleted) tweet</a>\n        <ul class=\"via\">\n            <li><em>via <a href=\"https://twitter.com/etportis/status/1204492164836675584\"><picture><source type=\"image/webp\" srcset=\"https://www.zachleat.com/img/47eaedee-72.webp 72w\"><img alt=\"etportis’s Avatar\" src=\"https://www.zachleat.com/img/47eaedee-72.jpeg\" width=\"72\" height=\"72\" class=\"z-avatar\" loading=\"lazy\"></picture>Eric Portis</a> and <a href=\"https://twitter.com/jay_hoffmann/status/1204508530025349121\"><picture><source type=\"image/webp\" srcset=\"https://www.zachleat.com/img/7a8ae6e3-72.webp 72w\"><img alt=\"jayhoffman’s Avatar\" src=\"https://www.zachleat.com/img/7a8ae6e3-72.jpeg\" width=\"72\" height=\"72\" class=\"z-avatar\" loading=\"lazy\"></picture>Jay Hoffman</a></em></li>\n        </ul>\n    </dd>\n    <dt>2012 April 21</dt>\n    <dd>\n        <a href=\"https://github.com/jonathantneal/MediaClass\"><picture><source type=\"image/webp\" srcset=\"https://www.zachleat.com/img/cfd4da86-72.webp 72w\"><img alt=\"jon_neal’s Avatar\" src=\"https://www.zachleat.com/img/cfd4da86-72.jpeg\" width=\"72\" height=\"72\" class=\"z-avatar\" loading=\"lazy\"></picture>Jon Neal’s <code>MediaClass</code></a>\n    </dd>\n    <dt>2012 January 23</dt>\n    <dd>\n        <a href=\"https://twitter.com/paul_irish/status/161664213054533633\"><picture><source type=\"image/webp\" srcset=\"https://www.zachleat.com/img/ff5d4161-72.webp 72w\"><img alt=\"paul_irish’s Avatar\" src=\"https://www.zachleat.com/img/ff5d4161-72.jpeg\" width=\"72\" height=\"72\" class=\"z-avatar\" loading=\"lazy\"></picture>Paul Irish’s tweet reply to a (now ⛔️ deleted) <picture><source type=\"image/webp\" srcset=\"https://www.zachleat.com/img/cb3fd21d-72.webp 72w\"><img alt=\"ianstormtaylor’s Avatar\" src=\"https://www.zachleat.com/img/cb3fd21d-72.jpeg\" width=\"72\" height=\"72\" class=\"z-avatar\" loading=\"lazy\"></picture>Ian Storm Taylor tweet (date unknown)</a>\n    </dd>\n    <dt>2011 September 1</dt>\n    <dd>\n        <a href=\"https://stackoverflow.com/questions/7271818/media-query-like-behaviour-on-width-of-a-specific-div\">A question posted by user <code>Damon</code> on Stack Overflow</a>\n        <ul class=\"via\">\n            <li><em>via <a href=\"https://twitter.com/jay_hoffmann/status/1204508888730603526\"><picture><source type=\"image/webp\" srcset=\"https://www.zachleat.com/img/7a8ae6e3-72.webp 72w\"><img alt=\"jayhoffman’s Avatar\" src=\"https://www.zachleat.com/img/7a8ae6e3-72.jpeg\" width=\"72\" height=\"72\" class=\"z-avatar\" loading=\"lazy\"></picture>Jay Hoffman</a></em></li>\n        </ul>\n    </dd>\n    <dt>2011 July 15</dt>\n    <dd>\n        <a href=\"http://web.archive.org/web/20160325052109/http://blog.andyhume.net/responsive-containers/\"><picture><source type=\"image/webp\" srcset=\"https://www.zachleat.com/img/c3afeec0-72.webp 72w\"><img alt=\"andyhume’s Avatar\" src=\"https://www.zachleat.com/img/c3afeec0-72.jpeg\" width=\"72\" height=\"72\" class=\"z-avatar\" loading=\"lazy\"></picture>Andy Hume’s (now ⛔️ deleted) <em>Responsive Containers</em> blog post</a>\n        <ul class=\"via\">\n            <li><em>via <a href=\"https://vimeo.com/223432117\"><picture><source type=\"image/webp\" srcset=\"https://www.zachleat.com/img/47eaedee-72.webp 72w\"><img alt=\"etportis’s Avatar\" src=\"https://www.zachleat.com/img/47eaedee-72.jpeg\" width=\"72\" height=\"72\" class=\"z-avatar\" loading=\"lazy\"></picture>Eric Portis’ Contain Your Excitement talk</a></em></li>\n        </ul>\n    </dd>\n    <dt>2011 July 14</dt>\n    <dd>\n        <a href=\"https://github.com/ahume/selector-queries\"><picture><source type=\"image/webp\" srcset=\"https://www.zachleat.com/img/c3afeec0-72.webp 72w\"><img alt=\"andyhume’s Avatar\" src=\"https://www.zachleat.com/img/c3afeec0-72.jpeg\" width=\"72\" height=\"72\" class=\"z-avatar\" loading=\"lazy\"></picture>Andy Hume’s <code>selector-queries</code></a>\n    </dd>\n</dl>\n<p>Andy Hume’s work, thus far, seems to be the original! If you have others that pre-date 2014 (even if they aren’t before Andy’s), please <a href=\"https://twitter.com/zachleat/status/1204488622386417665\">reply to this tweet</a>.</p>\n<p class=\"livedemo livedemo-sm top\" data-demo-label=\"Get out your wallet\">Look at all this link rot! We’re so lucky that many of these entries were preserved by The Wayback Machine. You too can <a href=\"https://archive.org/donate/\">donate to the Internet Archive</a> to support their obviously valuable mission.</p>\n<h1><span class=\"text-highlight\" style=\"background-color: #333; color: #fff\">The Container Queries idea was planted <span class=\"timeago\" data-date=\"14 Jul 2011 11:40:00 CDT\">9.1 years</span> ago</span></h1>\n<p>For comparison, Ethan Marcotte’s original A List Apart article on Responsive Web Design was published <span class=\"timeago\" data-date=\"25 May 2010 00:00:00 GMT\">10.3 years</span> ago on May 25, 2010.</p>\n<p>The first large-scale <a href=\"https://www.filamentgroup.com/lab/introducing-the-new-responsive-designed-bostonglobecom.html\">Responsive Web Design project at the Boston Globe</a> was launched <em>after container queries were planted</em> <span class=\"timeago\" data-date=\"9 Sep 2011 00:00:00 GMT\">9 years</span> ago on September 9, 2011. The Boston Globe launch further planted the seeds for <a href=\"https://alistapart.com/article/responsive-images/\">responsive image approaches</a> that would result in web browser implementations of both <code>&lt;img srcset&gt;</code> and <code>&lt;picture&gt;</code> just three years later in 2014.</p>\n<p>In conclusion, 🤷‍♂️.</p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"9f7852323d5be88cf08514dcd23cf123","bgimgJsdelivr":"","metaImg":"","author":"","articleImgCdnMap":{"https://www.zachleat.com/img/57b02d05-72.jpeg":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn43@2020_4/2020/08/25/02-02-16-531_4787288828f2070d.webp","https://www.zachleat.com/img/aca40ae4-72.jpeg":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn7@2020_5/2020/08/25/02-02-17-717_f8d593846086ca03.webp","https://www.zachleat.com/img/cb3fd21d-72.jpeg":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn65@2020_4/2020/08/25/02-02-12-862_e1f9bf4e7e0b5ec9.webp","https://www.zachleat.com/img/7482662b-72.jpeg":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn3@2020_6/2020/08/25/02-02-17-232_894050fcbd99e8e6.webp","https://www.zachleat.com/img/c5a2c3a6-72.jpeg":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn57@2020_5/2020/08/25/02-02-09-986_b477f261c89f67ac.webp","https://www.zachleat.com/img/3a9d1813-72.jpeg":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn75@2020_3/2020/08/25/02-02-19-462_e0a7a2fa859f6313.webp","https://www.zachleat.com/img/cfd4da86-72.jpeg":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn65@2020_4/2020/08/25/02-02-10-045_7817c0615d4e63b9.webp","https://www.zachleat.com/img/1a8cbae3-72.jpeg":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn66@2020_2/2020/08/25/02-02-10-407_6a16e558e8334fc5.webp","https://www.zachleat.com/img/e984f372-72.jpeg":"https://cdn.jsdelivr.net/gh/myreaderx/cdn72@2020_6/2020/08/25/02-02-21-376_1a69bbf1714bd46a.webp","https://www.zachleat.com/img/47eaedee-72.jpeg":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn75@2020_3/2020/08/25/02-02-16-717_c48702eef2483e78.webp","https://www.zachleat.com/img/7a8ae6e3-72.jpeg":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn32@2020_2/2020/08/25/02-02-19-740_12064db2040b0cda.webp","https://www.zachleat.com/img/ff5d4161-72.jpeg":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn53@2020_1/2020/08/25/02-02-11-890_de1b78e88d04ea0d.webp","https://www.zachleat.com/img/c3afeec0-72.jpeg":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn89@2020_5/2020/08/25/02-02-09-992_a2740582386efab5.webp"},"publishedOrCreatedDate":1598320921772},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Shop Talk Show #247: The Performance Equation","link":"http://www.zachleat.com/web/show-talk-show/","description":"\n\t\t\t<p><a href=\"http://shoptalkshow.com/episodes/247-performance-equation/\">Listen to the Interview on Shop Talk Show</a> (1:11:54) <span class=\"tag audio\">Audio</span></p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"548c6669bea5bdb0252b4879692eb36c","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921767},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Nursery Rhyme Code Poem [JavaScript]","link":"http://www.zachleat.com/web/nursery-rhyme-code-poem-js/","description":"\n\t\t\t<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><br><span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">function</span> <span class=\"token function\">BlindMouse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><br>    <span class=\"token class-name\">BlindMouse</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>tail <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span><br>    <span class=\"token class-name\">BlindMouse</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">run</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">after</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br> <br>    <span class=\"token keyword\">function</span> <span class=\"token function\">Mice</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">mouse1<span class=\"token punctuation\">,</span> mouse2<span class=\"token punctuation\">,</span> mouse3</span><span class=\"token punctuation\">)</span><br>    <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mice <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mice<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>mouse1<span class=\"token punctuation\">,</span> mouse2<span class=\"token punctuation\">,</span> mouse3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">declare</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><br>        <span class=\"token punctuation\">{</span><br>            <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mice<span class=\"token punctuation\">.</span>length <span class=\"token operator\">+</span> <span class=\"token string\">' Blind Mice'</span><span class=\"token punctuation\">;</span><br>        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">run</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">after</span><span class=\"token punctuation\">)</span><br>        <span class=\"token punctuation\">{</span><br>            <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>k<span class=\"token operator\">=</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mice<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>j<span class=\"token operator\">&lt;</span>k <span class=\"token punctuation\">;</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mice<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span>after<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>            <span class=\"token punctuation\">}</span><br>        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">cutOff</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">prop<span class=\"token punctuation\">,</span> weapon</span><span class=\"token punctuation\">)</span><br>        <span class=\"token punctuation\">{</span><br>            <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>k<span class=\"token operator\">=</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mice<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>j<span class=\"token operator\">&lt;</span>k<span class=\"token punctuation\">;</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mice<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>prop<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span><br>            <span class=\"token punctuation\">}</span><br>        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br> <br>    <span class=\"token keyword\">var</span> mice <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Mice</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">BlindMouse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BlindMouse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BlindMouse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>mice<span class=\"token punctuation\">.</span><span class=\"token function\">declare</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>mice<span class=\"token punctuation\">.</span><span class=\"token function\">declare</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br> <br>    <span class=\"token keyword\">function</span> <span class=\"token function\">seeHow</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">they<span class=\"token punctuation\">,</span> func</span><span class=\"token punctuation\">)</span><br>    <span class=\"token punctuation\">{</span><br>        they<span class=\"token punctuation\">[</span>func<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br> <br>    <span class=\"token function\">seeHow</span><span class=\"token punctuation\">(</span>mice<span class=\"token punctuation\">,</span> <span class=\"token string\">'run'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token function\">seeHow</span><span class=\"token punctuation\">(</span>mice<span class=\"token punctuation\">,</span> <span class=\"token string\">'run'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br> <br>    <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">farmersWife</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><br>    <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">var</span> weapon <span class=\"token operator\">=</span> <span class=\"token string\">'Carving Knife'</span><span class=\"token punctuation\">;</span><br>        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><br>            <span class=\"token function-variable function\">cutOff</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">creatures<span class=\"token punctuation\">,</span> prop</span><span class=\"token punctuation\">)</span><br>            <span class=\"token punctuation\">{</span><br>                creatures<span class=\"token punctuation\">.</span><span class=\"token function\">cutOff</span><span class=\"token punctuation\">(</span><span class=\"token string\">'tail'</span><span class=\"token punctuation\">,</span> weapon<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>            <span class=\"token punctuation\">}</span><br>        <span class=\"token punctuation\">}</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br> <br>    mice<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span>farmersWife<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br> <br>    farmersWife<span class=\"token punctuation\">.</span><span class=\"token function\">cutOff</span><span class=\"token punctuation\">(</span>mice<span class=\"token punctuation\">,</span> <span class=\"token string\">'tail'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br> <br>    <span class=\"token keyword\">function</span> <span class=\"token function\">haveYouSeen</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">obj<span class=\"token punctuation\">,</span> timeSpan</span><span class=\"token punctuation\">)</span><br>    <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br> <br>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">haveYouSeen</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Such a Thing'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Your Life'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'as '</span> <span class=\"token operator\">+</span> mice<span class=\"token punctuation\">.</span><span class=\"token function\">declare</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'?'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p><em>The above <strong>code poem</strong> is released under the BSD license. To use in production environment without error, please enclose with a try-catch block. Obviously I’m kidding, don’t use this code. Not even for enterprise software.</em></p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"151c5c59e1922bb6a31556ee3c00bc53","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921761},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Conservative Design: Command Line Interface","link":"http://www.zachleat.com/web/conservative-design-command-line-interface/","description":"\n\t\t\t<p>This is another post in the series entitled <a href=\"http://www.zachleat.com/web/2007/02/22/conservative-design-patterns-for-form-elements/\">Conservative Design Patterns for Form Elements</a>.</p>\n<p>The argument has existed since the dawn of the Graphical User Interface (GUI). Which is better, keyboard-exclusive Command Line or mouse-intensive GUI’s? As more enterprise architectures are moving from terminals to web interfaces for their products, and as time is moving forward with the everyman user desiring an interface that looks pretty and easy to use, we’re seeing a drastic reduction in the utilization of the keyboard.</p>\n<p>But with the exception of form input, we’ve almost completely moved away from the keyboard as a means to execute functions and navigation. I’m proposing that we bring back the power of the keyboard. Obviously we can’t get rid of the GUI altogether, but instead complement it with a powerful command line.</p>\n<p>This component could exist as a standalone command line interface component or as a supplement to any search bar your page may contain. The basic premise of the Command Line Interface component is to provide a standardized method of navigating your website using nothing but the keyboard. It could fulfill more complex operations, but the scope of this article will just cover command line rudimentary navigation.</p>\n<p>Screen Printing: Fake Command Line Example<br>\n<img src=\"https://www.zachleat.com/web/wp-content/uploads/2007/03/commandline.gif\" alt=\"Command Line\"></p>\n<p>Screen Printing: Fake Command Line Example of AutoComplete Capabilities<br>\n<img src=\"https://www.zachleat.com/web/wp-content/uploads/2007/03/commandline_f.gif\" alt=\"Command Line AutoComplete\"></p>\n<p><strong>Minimum Feature Set</strong>: (<a href=\"http://jfulton.org/?page=Software&amp;file=gui.php\">source</a>)</p>\n<ul>\n<li>Autocomplete: must be able to finish the current command being typed by presenting a list of available options to the user. Must be compatible with keyboard navigation:\n<ul>\n<li>UP and DOWN arrows to select from list</li>\n<li>TAB autocompletes to first option</li>\n</ul>\n</li>\n<li>Markup Scanning for Applicable Links: scan the current dom for  tags with a href element that could be used in autocomplete.</li>\n<li>Quick commands: markup options (custom attributes?) to allow the programmer to define commands in the html. These are one to three character combinations that execute a link or event.</li>\n<li>Standardized Command Set: standardized hot key to force focus to the command line. Also, for navigation options that are standardized between every website, have a standard set of commands that will execute with the same behavior, regardless of navigation implementation (Home [H], Login [L], Register [R], Forgotten Password [FP], Contact Us Page [C], Privacy Policy [PRIV], Terms of Service [TOS])</li>\n</ul>\n<p><strong>Luxury Feature Set</strong>:</p>\n<ul>\n<li>Markup Scanning for Events: sometimes navigation is executed through event handling. Scan the events assigned to nodes for any available options that could be executed in navigation.</li>\n</ul>\n<p><strong>Limitations</strong>:</p>\n<ul>\n<li>Limitations on any sort of mouse-required interface: drag and drop</li>\n<li>Interaction with flash?</li>\n</ul>\n<p><strong>Idea Credits</strong>:</p>\n<ul>\n<li><a href=\"http://www.softpanorama.org/OFM/gui_vs_command_line.shtml\">GUI vs Command line interface</a></li>\n<li><a href=\"http://www.humanized.com/weblog/2007/02/24/your_grandmothers_command_line_the_command_line_co/\">Command Line for the Common Man: The Command Line Comeback</a></li>\n</ul>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"https://www.zachleat.com/web/wp-content/uploads/2007/03/commandline.gif","linkMd5":"791f89017d3a48c30e13de0411afb65e","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn93@2020_4/2020/08/25/02-02-02-665_336d86d7147cc478.webp","destWidth":447,"destHeight":243,"sourceBytes":9106,"destBytes":10108,"author":"","articleImgCdnMap":{"https://www.zachleat.com/web/wp-content/uploads/2007/03/commandline.gif":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn93@2020_4/2020/08/25/02-02-02-665_336d86d7147cc478.webp","https://www.zachleat.com/web/wp-content/uploads/2007/03/commandline_f.gif":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn13@2020_4/2020/08/25/02-02-11-672_9327450a330a64b4.webp"},"publishedOrCreatedDate":1598320921760},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Bridgy for Webmentions with Brotli","link":"http://www.zachleat.com/web/bridgy-brotli/","description":"\n\t\t\t<p><strong>Summary</strong>: Just a fair warning if you use the amazing <a href=\"https://brid.gy/\">Bridgy</a> service to gather webmentions from social networking sites. It won’t actually work with your site if you’re using Brotli compression. Use gzip for your HTML requests instead of Brotli and it will work fine.</p>\n<hr>\n<p>On June 11, 2019 I tweeted:</p>\n<blockquote class=\"twitter-tweet\" data-lang=\"en\"><p lang=\"en\" dir=\"ltr\">Upgraded zachleat.com from Zopfli to Brotli compression this morning (only used if the browser supports it).<br><br>Saves a few more KB to spend frivolously on web fonts and facepiles 😇</p>&mdash; Zach Leatherman (@zachleat) <a href=\"https://twitter.com/zachleat/status/1138427969326723073?ref_src=twsrc%5Etfw\">June 11, 2019</a></blockquote>\n<p>Unfortunately, I would learn much later that this would cause my webmentions to stop working too!</p>\n<p>I logged into <a href=\"https://webmention.io/\">webmention.io</a> and had zero new webmentions from Twitter coming in. My webmentions from Twitter come from <a href=\"https://brid.gy/\">Bridgy</a>. I logged into my <a href=\"https://brid.gy/twitter/zachleat\">Bridgy admin panel</a> and saw a bunch of errors:</p>\n<blockquote>\n<p>No webmention support: <span class=\"break\"><a href=\"https://www.zachleat.com/web/css-tricks-web-fonts/\">https://www.zachleat.com/web/css-tricks-web-fonts/</a></span></p>\n</blockquote>\n<p>Apparently this stopped working when I added Brotli compression to my web site. Bridgy doesn’t support Brotli compression so when it fetches my site it can’t decompress my HTML content for parsing. My site <em>does</em> correctly fallback to uncompressed output when Brotli support is not advertised in the request’s <code>Accept-Encoding</code> header, but unfortunately Google App Engine assumes that all applications support Brotli compression and always includes this in request headers made on the service 😱. <a href=\"https://issuetracker.google.com/issues/112277350\">Star this issue to ask Google App Engine developers to fix this!</a></p>\n<p>Anyway, <a href=\"https://github.com/zachleat/zachleat.com/commit/583b0a2d9d4113807524dedd766d3c468e75b6e3\">I modified my site to compress gzip on HTML requests and use Brotli for everything else</a> (if supported). I’ll go back to <a href=\"https://github.com/snarfed/bridgy/issues/878\">full Brotli after this issue is fixed 🏆</a>.</p>\n<p>Hope this helps someone else!</p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"5618013ff0a769898e640f87e5a0782a","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921772},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Enlarging your YUI DataTable in 30 Seconds or Less!","link":"http://www.zachleat.com/web/enlarging-your-yui-datatable-in-30-seconds-or-less/","description":"\n\t\t\t<p><strong>Please note that this post has been updated to the new version of YUI, 2.3.0 in an article called <a href=\"https://www.zachleat.com/web/2007/08/28/enlarging-your-yui-datatable-in-29-seconds-or-less/\">“Enlarging your YUI DataTable in 29 Seconds or Less!”</a></strong></p>\n<p>Do you want to fit more content onto your DataTable, but don’t know how? Do you wish that you had fewer columns, or more horizontal screen-estate? Well now you can enlarge your table easily with these simple functions! Instead of adding more information into additional columns, we have used our patented method of not actually patenting anything to bring you a secret formula that will allow you to dynamically insert rows into your table, designed for holding additional, non-constrained customizable content!</p>\n<p>Do you mean to tell me that your formula will give that special lady in your life the DataTable that she has always wanted?</p>\n<p>Of course! In fact, we guarantee this DataTable to satisfy all of the women you know and don’t know in the world or we’ll give you a full refund of the purchase price!</p>\n<p>Wow! How does it work?</p>\n<p>Click here for an example!</p>\n<p>![Normal DataTable][3]</p>\n<p>![Expanded DataTable][4]</p>\n<p>When you click on a row in the DataTable, it inserts a child row beneath the row with an HTML string passed in to populate the dynamic content. When you click on the parent row or the new row that was inserted, the content disappears! It’s that easy! You don’t have to apply any gross awful smelling creams, or take any large horse-sized pills for this to work! You literally only use the following code to do it:</p>\n<p>Usage Code:</p>\n<pre><code>var myDataTable = new YAHOO.widget.DataTable(&quot;myContainer&quot;,myColumnSet,myDataSource);  \nmyDataTable.subscribe(&quot;cellClickEvent&quot;, myDataTable.onEventSelectRow); // make sure you're firing the row selection event\nmyDataTable.subscribe(&quot;cellClickEvent&quot;, function( e ) {\n   var myCustomHtml = 'Hello, this is my expanded content.&lt;br /&gt;:-)&lt;br /&gt;'; // generate the string, could use an ajax call if you wanted.\n   YAHOO.ymod.datatable.clickAndExpand.call( this, e, myCustomHtml ); // if you do use an ajax call, this function returns a reference to the newly created div that you can put the ajax results into.\n} );\n</code></pre>\n<p>Library Code:</p>\n<pre><code>YAHOO.namespace( 'YAHOO.ymod.datatable' );\nYAHOO.ymod.datatable.clickAndExpand = function( e, expandedHtml )\n{\n    var selectedRows = this.getSelectedRows();\n    if( selectedRows.length &gt; 0 )\n    {\n        if( YAHOO.util.Dom.hasClass( selectedRows[ 0 ], 'ymod-expandedData' ) )\n        {\n            YAHOO.util.Dom.removeClass( selectedRows[ 0 ].previousSibling, 'expanded' );\n            selectedRows[ 0 ].parentNode.removeChild( selectedRows[ 0 ] );\n        } else if( !YAHOO.util.Dom.hasClass( selectedRows[ 0 ], 'ymod-expanded' ) ) {\n            var newRow = document.createElement( 'tr' );\n            var newCell = document.createElement( 'td' );\n            var newDiv = document.createElement( 'div' );\n            YAHOO.util.Dom.addClass( newDiv, 'ymod-expandedDataContent' );\n            if( expandedHtml != null ) newDiv.innerHTML = expandedHtml;\n            newCell.appendChild( newDiv );\n            newCell.colSpan = selectedRows[ 0 ].childNodes.length;\n            newRow.appendChild( newCell );      \n            YAHOO.util.Dom.addClass( newRow, 'ymod-expandedData' );\n            if( YAHOO.util.Dom.hasClass( selectedRows[ 0 ], 'yui-dt-odd' ) ) YAHOO.util.Dom.addClass( newRow, 'yui-dt-odd' );\n            else if( YAHOO.util.Dom.hasClass( selectedRows[ 0 ], 'yui-dt-even' ) ) YAHOO.util.Dom.addClass( newRow, 'yui-dt-even' );\n            YAHOO.util.Dom.addClass( selectedRows[ 0 ], 'ymod-expanded' );\n            selectedRows[ 0 ].parentNode.insertBefore( newRow, selectedRows[ 0 ].nextSibling );\n            YAHOO.util.Event.addListener( newRow, 'click', function( e )\n            {\n                YAHOO.ymod.datatable.collapseRow( this );\n                YAHOO.util.Event.stopEvent( e );\n            } );\n            YAHOO.util.Dom.removeClass( selectedRows[ 0 ], 'yui-dt-selected' );\n            YAHOO.util.Event.stopEvent( e );\n            return newDiv;\n        } else {\n            selectedRows[ 0 ].parentNode.removeChild( selectedRows[ 0 ].nextSibling );\n            YAHOO.util.Dom.removeClass( selectedRows[ 0 ], 'ymod-expanded' );\n            YAHOO.util.Dom.removeClass( selectedRows[ 0 ], 'yui-dt-selected' );\n            YAHOO.util.Event.stopEvent( e );\n        }\n    }\n};\n \n// pass in the expanded content, NOT the parent row.\nYAHOO.ymod.datatable.collapseRow = function( row )\n{\n    YAHOO.util.Dom.removeClass( row.previousSibling, 'ymod-expanded' );\n    YAHOO.util.Dom.removeClass( row.previousSibling, 'yui-dt-selected' );\n    row.parentNode.removeChild( row );\n};\n</code></pre>\n<p>Customize the CSS, if desired.</p>\n<pre><code>.yui-dt-table tr.ymod-expandedData { background-color: #bdcede; cursor: pointer; }\n.yui-dt-table tr.ymod-expandedData td { padding-right: 5px; padding-bottom: 5px; white-space: normal; overflow: visible; }\n.yui-dt-table tr.ymod-expanded { background-color: #bdcede; }\n.yui-dt-table tr.ymod-expanded td { border-bottom: 0; }\n.yui-dt-table div.ymod-expandedDataContent { background-color: #f4f4f4; border: 1px inset #aaa; padding: 2px 5px; white-space: normal; zoom: 1; overflow: hidden; }\n</code></pre>\n<p>You might even want to put a little + and – into the first column of each row to give a visual cue that there is more information for display available on click.</p>\n<p>[]: <a href=\"http://www.zachleat.com/Projects/valdi/__test_yui_datatable_expandable.html\">http://www.zachleat.com/Projects/valdi/__test_yui_datatable_expandable.html</a><br>\n[3]: /web/wp-content/uploads/2007/06/datatable.gif<br>\n[4]: /web/wp-content/uploads/2007/06/datatableexpanded.gif</p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"2db644f6e1fec6e728cb8494313dc0fd","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921760},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"I-Frame Shims or How I Learned to Stop Worrying and Love the Bomb","link":"http://www.zachleat.com/web/adventures-in-i-frame-shims-or-how-i-learned-to-love-the-bomb/","description":"\n\t\t\t<p>So again, I show up late to the party. IE7 is already out, but my target customers are still using IE6. So today, boys and girls, we’re going to discover the magical world of using I-Frame shims to hide those bleeding heart select boxes from showing through our layered elements.</p>\n<p>Typically, when creating an I-Frame shim, you’re going to create the i-frame dynamically using document.createElement. Let’s start out with some successful code.</p>\n<pre><code>var iframeShim = document.createElement( 'iframe' );\niframeShim.setAttribute( 'src', 'javascript:&quot;&quot;;' );\niframeShim.setAttribute( 'frameBorder', '0' );\n</code></pre>\n<p>Now for some caveats you might have encountered with code not matching the above:</p>\n<p><strong>I-Frame frameBorder attribute</strong><br>\nAre you trying to get rid of that nasty i-frame border in Internet Explorer 6 (IE6)? Tried CSS properties? Tried setting the frameBorder attribute? It turns out that when setting the frameBorder attribute, the name of the attribute is case sensitive. Using frameborder will not work correctly, but using frameBorder (with a capital B) will give the desired result. [Source: <a href=\"http://www.visible-form.com/blog/createelement-and-events-and-iframe-borders/\">FlashApe</a>]</p>\n<p><strong>HTTPS and I-Frame src attribute</strong><br>\nIs your page hosted on a secure domain (https instead of just http)? Is the dynamically created iframe causing the following error message in Internet Explorer?</p>\n<p><em>This page contains both secure and nonsecure items. Do you want to display the nonsecure items?</em></p>\n<p>Some have suggested that changing the src attribute to point to a blank html page with no content is the solution, but that’s an extra http request on your page that is unnecessary. Others have suggested that that changing the src attribute to javascript:false works. It does, in fact, but writes the text ‘false’ to your iframe content. Others have suggested javascript:void(0) as your src attribute value [Source: <a href=\"http://ewbi.blogs.com/develops/2004/07/ie_iframe_and_h.html\">ewbi.develops</a>], but some Internet Explorer clients still have secure and nonsecure items alert popup. I have not figured out the factors that separate these Internet Explorer clients.</p>\n<p><strong>Update</strong>: <s>The correct solution is in face setting “javascript:false;document.write(“”);” as your src value, as I found in the <a href=\"http://malsup.com/jquery/block/\">jQuery BlockUI</a> plugin. This is a silver bullet fix that will avoid all the problems I have encountered.</s></p>\n<p><strong>Update Again</strong>: I have revisited this problem and it looks like (as mentioned in the comments) there is a problem with the solution presented in the first update (infinite load). After researching some DOMContentLoaded solutions, I thought to try the “//:” source they were attempting for their deferred script source. Alas, it didn’t work. However, <code>javascript:&quot;&quot;;</code> <strong>does work</strong>, so the above solution has been modified. Keep in mind, the whole point of this solution is to <strong>avoid</strong> an additional unnecessary HTTP request.</p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"25b4ea47cf78efdb0e113cfe9bc41aad","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921760},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Selecting XML Nodes with JavaScript, or the Peril of getElementsByTagName","link":"http://www.zachleat.com/web/selecting-xml-with-javascript/","description":"<p><em>There are two popular camps for ajax data formats right now: XML and JSON. Both have their (dis-)advantages. The purpose of this article is to show you how to effectively parse XML in the browser.</em></p> \n<h3 id=\"super-fast-beginner%E2%80%99s-primer\">Super Fast Beginner’s Primer <a class=\"direct-link\" href=\"http://www.zachleat.com/web/selecting-xml-with-javascript/#super-fast-beginner%E2%80%99s-primer\">#</a></h3> \n<ul> \n <li>Case 1: <strong>Node</strong> (or un-namespaced node, null-namespaced node): a node without a prefix, such as child here:<br> <code>&lt;child/&gt;</code></br></li> \n <li>Case 2: <strong>Default namespaced node</strong>: a node without a prefix, but a parent node (or itself) has a xmlns attribute, like both root and child here:<br> <code>&lt;root xmlns=\"http://example.com/\"&gt;&lt;child/&gt;&lt;/root&gt;</code></br></li> \n <li>Case 3: <strong>Namespaced node</strong>: a node with a prefix, and a parent node (or itself) declaring a xmlns with that prefix attached, like both child and root here:<br> <code>&lt;prefix:root xmlns:prefix=\"http://example.com/\"&gt;&lt;prefix:child/&gt;&lt;/root&gt;</code></br></li> \n</ul> \n<h3 id=\"%2Fend-primer\">/End Primer <a class=\"direct-link\" href=\"http://www.zachleat.com/web/selecting-xml-with-javascript/#%2Fend-primer\">#</a></h3> \n<p>Parsing XML in the browser can be a tricky beast. There are many different wrong ways to do it, which can leave you cold and naked in a snowstorm if you’re not careful. So, let’s put on the metaphorical electric one-sie of standards based code and let the power of Edison heat our JavaScript code like the innards of a <a href=\"http://starwars.wikia.com/wiki/Tauntaun\">tauntaun</a>.</p> \n<p>If there is one thing you can take away from this article, its that the problems with XML in JavaScript have already been solved, and there is library code out there to do the job for you. But libraries aren’t a substitute for knowledge (abstraction is a dangerous thing during education), so let’s learn <strong>why</strong> these problems are occurring so we can wrinkle our gray matter and increase our productivity at the same time.</p> \n<h2 id=\"use-cases\">Use Cases <a class=\"direct-link\" href=\"http://www.zachleat.com/web/selecting-xml-with-javascript/#use-cases\">#</a></h2> \n<p>These are the main use cases that takes place when selecting a node inside of an XML document:</p> \n<ol> \n <li> <p><strong>Case 1</strong>: Selecting un-namespaced nodes (or nodes in the null namespace):</p> <pre><code>&lt;root&gt;&lt;child/&gt;&lt;/root&gt;\n</code></pre> <p>This one is easy. If you can guarantee that your XML will never have any namespaces, you’re home free. Take your get out of jail free card and run for the hills. Using this assumption, you can query nodes inside of your XML Document object using nothing other than <code>getElementsByTagName()</code>. Lucky bastard.</p> <pre><code>// assume oDocEl is the documentElement inside of an XML Document \nvar correctForCase1 = oDocEl.getElementsByTagName('child');\n</code></pre> </li> \n <li> <p><strong>Case 2</strong>: Selecting default namespaced nodes:</p> <pre><code>&lt;root xmlns=\"http://example.com/\"&gt;&lt;child/&gt;&lt;/root&gt;\n</code></pre> <p>Tread lightly, this is about to get serious. In most cases, historically I had thought that using the solution described for Case 1 would be sufficient in this case. I had learned awhile back that Internet Explorer treats node names (including namespace prefix and local name together) as one string. So, the method for Case 1 should work for Internet Explorer, especially in the case of node sans prefix. In Firefox, you’d have to use getElementsByTagNS(), but that would be just a simple wrapper.</p> <p>Then I met an Internet Explorer exception. The only unique thing about this installation of Internet Explorer 7 was that it had MSXML 6 installed, when all the other computers I had tested on were using MSXML 3. The obvious conclusion here is that MSXML 6 won’t select child nodes for Case 2.</p> <pre><code>var incorrectForCase2 = oDocEl.getElementsByTagName('child');\n</code></pre> <p>Here’s the right way to select nodes for Case 2. Fair warning, to keep the code examples here simple, this solution requires Sarissa (sarissa.js and sarissa_ieemu_xpath.js) to be included on the page prior to usage.</p> <pre><code>// assume oDoc is an XML Document object.\noDoc.setProperty(\"SelectionNamespaces\", \"xmlns:whatever='http://example.com/'\");\nvar oDocEl = oDoc.documentElement;\nvar correctForCase2A = oDocEl.selectNodes('whatever:child');\nvar correctForCase2B = oDocEl.selectSingleNode('whatever:child');\n</code></pre> <p>Note how we’ve mapped what was the default namespace (without a prefix) to be a namespace WITH a prefix during the node selection.</p> <p>It should be noted that when the resultant XML has a namespace attached (Case 2 and 3), Firefox works fine using getElementsByTagNameNS. IE doesn’t include support for that method, however, so we’re forced to find a more complete solution.</p> </li> \n</ol> \n<ul> \n <li> <p><strong>Case 3</strong>: Select a non-default namespaced node:</p> <pre><code>&lt;root prefix:xmlns=\"http://example.com/\"&gt;&lt;prefix:child/&gt;&lt;/root&gt;\n</code></pre> <p>As I mentioned in Case 2, normally (pre-MSXML 6), you’d be able to perform a <code>getElementsByTagName('prefix:child')</code> in IE and use getElementsByTagNameNS in Firefox as usual. But that has changed now. We need to set up the SelectionNamespaces property for IE, and we’ll use Sarissa to take it cross-browser for us.</p> <pre><code>// assume oDoc is an XML Document object.\noDoc.setProperty(\"SelectionNamespaces\", \"xmlns:whatever='http://example.com/'\");\nvar oDocEl = oDoc.documentElement;\nvar correctForCase3A = oDocEl.selectNodes('whatever:child');\nvar correctForCase3B = oDocEl.selectSingleNode('whatever:child');\n// Note, this is the same code as Case 2 (which is a good thing)\n</code></pre> <p>Note that we did <em>not</em> have to use the same prefix that was defined by the result XML. We can map it to whatever we want (literally).</p> </li> \n</ul> \n<h2 id=\"why-is-this-important%3F\">Why is this important? <a class=\"direct-link\" href=\"http://www.zachleat.com/web/selecting-xml-with-javascript/#why-is-this-important%3F\">#</a></h2> \n<p>Because most libraries don’t handle Case 2 and Case 3, which are important parts of XML. Here’s some code straight from YUI 2.5.1 (DataSource component):</p> \n<pre><code>// Line 1394\nvar xmlNode = result.getElementsByTagName(key);\nif(xmlNode &amp;&amp; xmlNode.item(0) &amp;&amp; xmlNode.item(0).firstChild) {\n    data = xmlNode.item(0).firstChild.nodeValue;\n}\nelse {\n       data = \"\";\n}\n</code></pre> \n<p>Notice how they just do getElementsByTagName. For shame :( jQuery doesn’t handle Case 2 or Case 3 either. (Proof is an exercise to the reader :P) So, if you have XML data sources with namespaces, it would do you well to use the solution presented in this article, or you’re going to have headaches later.</p> \n<h2 id=\"springer%E2%80%99s-final-word\">Springer’s Final Word <a class=\"direct-link\" href=\"http://www.zachleat.com/web/selecting-xml-with-javascript/#springer%E2%80%99s-final-word\">#</a></h2> \n<p>Don’t use getElementsByTagName. If you do, PLEASE include a note saying that your code isn’t going to support namespaced XML. Branch your selection code to check if Sarissa has been included on the page, and use Sarissa for namespaced XML if it’s there. It’s not fun to be pidgin-holed into the simplest case of XML.</p>","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"b97771ffa7ca9aa70da6f157c47a0a3b","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921762},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"You Should Follow Fewer People on Twitter","link":"http://www.zachleat.com/web/busyness/","description":"<p><em>After a good four year run, BUSYNESS is now offline. You can still see <a href=\"https://www.zachleat.com/busyness-sample/\">a sample of the output</a>. Thanks Heroku for hosting!</em></p> \n<hr> \n <p>In high school, one of the most important lessons I learned was to <strong>choose your friends wisely</strong>. The people you spend time with can influence your mood and even your behavior. While this may seem extreme, I treat my virtual friends in much the same way.</p> \n <p>It probably goes without saying that Twitter is my favorite social network. The status update length constraint and bi-directional follower/friend relationships have created a tool that allows for really interesting self policing networks and communities to form.</p> \n <p><em>(In the Twitter lexicon, a follower is someone whom has subscribed to your updates and a friend is someone you have subscribed to.)</em></p> \n <p>It’s fascinating to see the different ways that people use Twitter. When I first joined and had only a few friends, I would read all of the updates in my stream. While I sincerely doubt that any Twitter user reads every single tweet that floats down their stream, as time goes on and your network grows using Twitter in this way quickly becomes unsustainable.</p> \n <p>When you hit this upper limit, you’re left with a few options:</p> \n <ol> \n  <li>Stop reading most of your stream. When you get into the 400+ friend region, this likely means that you’re missing a lot of content.</li> \n  <li>Stick with a specific brand of client and use that client’s mute or filter functionality. I use a variety of clients on different platforms, so this doesn’t really work for me.</li> \n  <li>Instead of following, use <a href=\"http://zachholman.com/posts/shit-work/\">Twitter’s list functionality</a>. I attempted to use lists in this way for awhile, but largely my lists have gone unmaintained and ignored.</li> \n  <li>Use Twitter’s built in feature to hide retweets from certain users.</li> \n  <li>Unfollow people to reduce your stream down to a more manageable pace (especially celebrities, companies, and brands using twitter purely for marketing).</li> \n </ol> \n <p>While a combination of the above methods (especially the last two) is probably wise, I started to notice that I had a few friends that were really noisy tweeters. They were venturing into massive tweet count totals and hadn’t been on Twitter more than a year or two.</p> \n <p>An extreme example of this is Twitter user <a href=\"https://twitter.com/YOUGAKUDAN_00\"><code>YOUGAKUDAN_00</code></a>. This particular user has over 32 million tweets and averages over 26,000 per day. While you’d easily notice this amount of pollution in your stream, you may not notice someone continually averaging 50-100 daily tweets.</p> \n <p>I decided to build a tool to solve this problem. It would <strong>find the noisiest twitter friends</strong> in my stream so I could make a better informed decision whether or not their volume was worth following. Thus, with the help of my brother <a href=\"https://twitter.com/danleatherman\">Dan Leatherman</a> (a talented designer and web developer), BUSYNESS was born.</p> \n <h2 id=\"you-can-use-busyness-to-find-your-noisiest-twitter-friends.\">You can use BUSYNESS to find your noisiest twitter friends. <a class=\"direct-link\" href=\"http://www.zachleat.com/web/busyness/#you-can-use-busyness-to-find-your-noisiest-twitter-friends.\">#</a></h2> \n <p>If you have any feedback (comments or suggestions), please feel free to send a tweet to <a href=\"https://twitter.com/zachleat\">@zachleat</a>. I’d love to hear it.</p> \n <div class=\"fluid-width-video-wrapper\">\n  <iframe width=\"420\" height=\"315\" src=\"https://www.youtube.com/embed/h4cnyYb5XBc\" frameborder=\"0\" allowfullscreen=\"\"></iframe>\n </div> \n <p><em>BUSYNESS is hosted on Heroku and uses Express with EJS templates. <a href=\"https://github.com/zachleat/BUSYNESS\">Source code available on GitHub</a>.</em></p> \n</hr>","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"8a27d3cffac58540b78bea1a10fa8ee4","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921764},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Faking Onload for Link Elements","link":"http://www.zachleat.com/web/load-css-dynamically/","description":"<p><strong>Updated 2011/09/27: Rejoice! This issue has now <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=185236\">been fixed in Firefox</a>.</strong></p> \n<hr> \n <p>Or, <strong>I Am Dynamically Loaded CSS (and So Can You!)</strong></p> \n <p>Dynamic resource loading is one of the keys to have a performance happy web application. There are generally three different criteria we must address when making a request: cross domain security policies, asynchronous/synchronous (will it block the host page while loading), and whether or not events are triggered when the request completes.</p> \n <p>If the resource and host page are on the same domain, obviously <code>XMLHttpRequest</code> works the best. We can control whether or not the resource is loaded asynchronously or synchronously, and we know exactly when it gets done.</p> \n <p>If the resource and host page are on different domains (increasingly more common with CDN’s), our options narrow. Loading the JavaScript is a solved problem, just use the <code>onload</code> event on the `` tag and you’re good to go (<code>onreadystatechange</code> for IE). But CSS is more complicated.</p> \n <table> \n  <thead> \n   <tr> \n    <th>Resource</th> \n    <th>Method</th> \n    <th>Option for (a)synchronous</th> \n    <th>Event</th> \n   </tr> \n  </thead> \n  <tbody> \n   <tr> \n    <td>JavaScript/CSS Same Domain</td> \n    <td><code>XMLHttpRequest</code></td> \n    <td>Both</td> \n    <td><code>onreadystatechange</code></td> \n   </tr> \n   <tr> \n    <td>JavaScript Different Domain</td> \n    <td><code>&lt;script&gt;</code></td> \n    <td>Synchronous (Asynchronous where <a href=\"https://developer.mozilla.org/en/html/element/script\">async property</a> is supported)</td> \n    <td><code>onload</code><br> <code>onreadystatechange</code> for IE</br></td> \n   </tr> \n   <tr> \n    <td>CSS Different Domain</td> \n    <td><code>&lt;link&gt;</code></td> \n    <td>Asynchronous</td> \n    <td><em>What this blog post is about.</em></td> \n   </tr> \n  </tbody> \n </table> \n <h2 id=\"existing-solutions\">Existing Solutions <a class=\"direct-link\" href=\"http://www.zachleat.com/web/load-css-dynamically/#existing-solutions\">#</a></h2> \n <p>In all of the library source code I evaluated, Internet Explorer didn’t cause any issues. It fires both the <code>onload</code> and <code>onreadystatechange</code> events for `` nodes. Obviously this is ideal behavior, and IE got it right. But what about Firefox and Safari/Chrome?</p> \n <h3 id=\"yui-2.8.1-and-3.1.1\">YUI 2.8.1 and 3.1.1 <a class=\"direct-link\" href=\"http://www.zachleat.com/web/load-css-dynamically/#yui-2.8.1-and-3.1.1\">#</a></h3> \n <p><a href=\"http://github.com/yui/yui3/blob/master/build/yui/get.js#L311\">Original Source</a></p> \n <pre><code>// FireFox does not support the onload event for link nodes, so there is\n// no way to make the css requests synchronous. This means that the css \n// rules in multiple files could be applied out of order in this browser\n// if a later request returns before an earlier one.  Safari too.\nif ((ua.webkit || ua.gecko) &amp;&amp; q.type === \"css\") {\n    _next(id, url);\n}\n</code></pre> \n <p>I wouldn’t be surprised if the commit log there was from Bon Jovi; that code is living on a prayer.</p> \n <h3 id=\"lazyload\">LazyLoad <a class=\"direct-link\" href=\"http://www.zachleat.com/web/load-css-dynamically/#lazyload\">#</a></h3> \n <p><a href=\"http://github.com/rgrove/lazyload/blob/master/lazyload.js#L283\">Original Source</a></p> \n <pre><code>// Gecko and WebKit don't support the onload event on link nodes. In\n// WebKit, we can poll for changes to document.styleSheets to figure out\n// when stylesheets have loaded, but in Gecko we just have to finish\n// after a brief delay and hope for the best.\nif (ua.webkit) {\n    // resolve relative URLs (or polling won't work)\n    p.urls[i] = node.href;\n    poll();\n} else {\n    setTimeout(_finish, 50 * len);\n}\n</code></pre> \n <p>Better, closer, warmer. This includes a nice method for working with webkit browsers. The poll method compares <code>document.styleSheets</code>, since Webkit has the nice option of only appending to the styleSheets object when the styleSheet has successfully loaded.</p> \n <p>So we have working solutions for IE and Safari/Chrome. The only unsolved piece of the puzzle here is Firefox.</p> \n <p><a href=\"http://wonko.com/post/how-to-prevent-yui-get-race-conditions\">This post</a> from the same author as LazyLoad also describes another solution which involves modifying the source CSS and polling against it. But that’s not really ideal. Can we do better?</p> \n <h2 id=\"solution\">Solution <a class=\"direct-link\" href=\"http://www.zachleat.com/web/load-css-dynamically/#solution\">#</a></h2> \n <p>Here’s what I came up with (using jQuery for brevity, note that this solution <strong>only fixes Firefox</strong>, and does not incorporate the above already solved solutions):</p> \n <pre><code>var url = 'css.php',\n    id = 'dynamicCss' + (new Date).getTime();\n\n$('&lt;style/&gt;').attr({\n    id: id,\n    type: 'text/css'\n}).html('@import url(' + url + ')').appendTo(document.getElementsByTagName('head')[0]);\n\nfunction poll() {\n    try {\n        var sheets = document.styleSheets;\n        for(var j=, k=sheets.length; j&lt;k; j++) {\n            if(sheets[j].ownerNode.id == id) {\n                sheets[j].cssRules;\n            }\n        }\n        // If you made it here, success!\n        alert('success!');\n    } catch(e) {\n        window.setTimeout(poll, 50);\n    }\n}\n\nwindow.setTimeout(poll, 50);\n</code></pre> \n <h3 id=\"see-this-demo-in-action-(firefox-only)\"><a href=\"https://www.zachleat.com/javascript/loadcss/load.html\">See this Demo in Action</a> (Firefox Only) <a class=\"direct-link\" href=\"http://www.zachleat.com/web/load-css-dynamically/#see-this-demo-in-action-(firefox-only)\">#</a></h3> \n <p><em>Update: After much joy and celebration, I have discovered that an approach similar to the above was written by Oleg Slobodskoi in his <a href=\"http://plugins.jquery.com/files/jquery.xLazyLoader.js.txt\">xLazyLoader</a> plugin for jQuery. It shouldn’t be surprising that two independent developers might reach the same solution, and is just more proof that software patents are stupid. :)</em></p> \n <p><em>Update #2 Added note about HTML5 async property on script tags.</em></p> \n</hr>","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"800372b3c2d88bc290fee2867911f57b","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921763},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Working Draft Podcast: On Tour @ #perfnow 5/6","link":"http://www.zachleat.com/web/working-draft-podcast/","description":"\n\t\t\t<p>Listen to the Interview (20:57) <span class=\"tag audio\">Audio</span> on:</p>\n<ul>\n<li><a href=\"https://workingdraft.de/on-tour-perfnow-zach-leatherman/\">workingdraft.de</a></li>\n</ul>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"998e0aa360a0c571463d4f33c130c1cb","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921771},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"What Are You Excited About?","link":"http://www.zachleat.com/web/1m-cups-omaha/","description":"\n\t\t\t<article class=\"slide\">\n  <picture class=\"slide-image\">\n    <source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/excited/images/images.001.webp\">\n    <img src=\"https://www.zachleat.com/presentations/excited/images/images.001.jpg\" alt=\"\">\n  </picture>\n  <div class=\"slide-annotations\">\n    <p><em>What Are You Excited About?</em> A lightning talk given at <a href=\"https://www.meetup.com/1MCNebraska/events/237054912/\">1 Million Cups Omaha</a>.</p>\n  </div>\n</article>\n<article class=\"slide\">\n  <picture class=\"slide-image\">\n    <source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/excited/images/images.002.webp\">\n    <img src=\"https://www.zachleat.com/presentations/excited/images/images.002.jpg\" alt=\"\">\n  </picture>\n  <div class=\"slide-annotations\">\n    <p>Anyone who had one of these growing up will understand my gut reaction to this question.</p>\n\t</div>\n</article>\n<article class=\"slide\">\n  <picture class=\"slide-image\">\n    <source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/excited/images/images.003.webp\">\n    <img src=\"https://www.zachleat.com/presentations/excited/images/images.003.jpg\" alt=\"\">\n  </picture>\n  <div class=\"slide-annotations\">\n    <p>I recently got a Google Daydream, so I’m realizing that Virtual Reality is pretty cool.</p>\n    <p>Not much content out there for it, but I’ve used it enough to say…</p>\n\t</div>\n</article>\n<article class=\"slide\">\n  <picture class=\"slide-image\">\n    <source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/excited/images/images.004.webp\">\n    <img src=\"https://www.zachleat.com/presentations/excited/images/images.004.jpg\" alt=\"\">\n  </picture>\n  <div class=\"slide-annotations\">\n    <p>…that it feels weird to strap your phone to your head.</p>\n\t</div>\n</article>\n<article class=\"slide\">\n  <picture class=\"slide-image\">\n    <source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/excited/images/images.005.webp\">\n    <img src=\"https://www.zachleat.com/presentations/excited/images/images.005.jpg\" alt=\"\">\n  </picture>\n  <div class=\"slide-annotations\">\n    <p>But I can already tell—this will be a big deal.</p>\n  </div>\n</article>\n<article class=\"slide\">\n  <video class=\"slide-image\" controls=\"\" preload=\"metadata\" src=\"https://www.zachleat.com/presentations/excited/videos/webvr.mp4\">\n    Sorry, your browser doesn't support embedded videos. Try <a href=\"https://www.zachleat.com/presentations/excited/videos/webvr.mp4\">downloading it</a> instead.\n  </video>\n  <div class=\"slide-annotations\">\n    <p>As a web developer, <a href=\"https://mobile.twitter.com/zachleat/status/790926735156011008\">WebVR in the browser</a> is pretty exciting. I like the idea of browsing VR content without having to download an application to do it.</p>\n  </div>\n</article>\n<article class=\"slide\">\n  <video class=\"slide-image\" controls=\"\" preload=\"metadata\" src=\"https://www.zachleat.com/presentations/excited/videos/walle.mp4\">\n    Sorry, your browser doesn't support embedded videos. Try <a href=\"https://www.zachleat.com/presentations/excited/videos/walle.mp4\">downloading it</a> instead.\n  </video>\n  <div class=\"slide-annotations\">\n    <p>I just hope that medical science will keep pace sufficiently with the inevitability that, as a human race, our bodies will never exercise or be exposed to sunlight ever again.</p>\n\t</div>\n</article>\n<article class=\"slide\">\n  <picture class=\"slide-image\">\n    <source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/excited/images/images.008.webp\">\n    <img src=\"https://www.zachleat.com/presentations/excited/images/images.008.jpg\" alt=\"\">\n  </picture>\n  <div class=\"slide-annotations\">\n    <p>My second gut reaction—the smart home. That’s kinda exciting, I guess. I have a sensor in my daughter’s room to monitor the temperature.</p>\n\t</div>\n</article>\n<article class=\"slide\">\n  <picture class=\"slide-image\">\n    <source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/excited/images/images.009.webp\">\n    <img src=\"https://www.zachleat.com/presentations/excited/images/images.009.jpg\" alt=\"\">\n  </picture>\n  <div class=\"slide-annotations\">\n    <p>But I keep asking myself the same question: Does everything really need to be accessible via the web?</p>\n\t</div>\n</article>\n<article class=\"slide\">\n  <picture class=\"slide-image\">\n    <source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/excited/images/images.010.webp\">\n    <img src=\"https://www.zachleat.com/presentations/excited/images/images.010.jpg\" alt=\"\">\n  </picture>\n  <div class=\"slide-annotations\">\n    <p>Consider this web enabled selfie coke bottle, which one can only assume features Kendal Jenner in this photo working with Coke before she moved on to Pepsi. Is this necessary? No.</p>\n\t</div>\n</article>\n<article class=\"slide\">\n  <picture class=\"slide-image\">\n    <source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/excited/images/images.011.webp\">\n    <img src=\"https://www.zachleat.com/presentations/excited/images/images.011.jpg\" alt=\"\">\n  </picture>\n  <div class=\"slide-annotations\">\n    <p>Or more recently this $400 WiFi enabled Juicer that squeezes Juice from proprietary bags of juice. Yes, it adds a nice layer of DRM to your fruit. But don’t worry, uh, you can still squeeze the bags by hand.</p>\n\t</div>\n</article>\n<article class=\"slide\">\n  <picture class=\"slide-image\">\n    <source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/excited/images/images.012.webp\">\n    <img src=\"https://www.zachleat.com/presentations/excited/images/images.012.jpg\" alt=\"\">\n  </picture>\n  <div class=\"slide-annotations\">\n    <p>And of course, the Smart TV.</p>\n\t</div>\n</article>\n<article class=\"slide\">\n  <picture class=\"slide-image\">\n    <source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/excited/images/images.013.webp\">\n    <img src=\"https://www.zachleat.com/presentations/excited/images/images.013.jpg\" alt=\"\">\n  </picture>\n  <div class=\"slide-annotations\">\n    <p>If you have a Vizio TV, your watching data was probably sold to advertisers.</p>\n\t</div>\n</article>\n<article class=\"slide\">\n  <picture class=\"slide-image\">\n    <source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/excited/images/images.014.webp\">\n    <img src=\"https://www.zachleat.com/presentations/excited/images/images.014.jpg\" alt=\"\">\n  </picture>\n  <div class=\"slide-annotations\">\n    <p>Or this real news story about an anchor on-air that said “Alexa order me a Dollhouse” and devices in viewers’ homes ordered dollhouses. This was much to the delight of both kids who wanted dollhouses and privacy schadenfreudists everywhere.</p>\n\t</div>\n</article>\n<article class=\"slide\">\n  <picture class=\"slide-image\">\n    <source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/excited/images/images.015.webp\">\n    <img src=\"https://www.zachleat.com/presentations/excited/images/images.015.jpg\" alt=\"\">\n  </picture>\n  <div class=\"slide-annotations\">\n    <p>I guess Smart TVs now show Banner Advertisements too. This one pops up when you change the volume level.</p>\n\t</div>\n</article>\n<article class=\"slide\">\n  <video class=\"slide-image\" controls=\"\" preload=\"metadata\" src=\"https://www.zachleat.com/presentations/excited/videos/idiocracy.mp4\" muted=\"\" loop=\"\">\n    Sorry, your browser doesn't support embedded videos. Try <a href=\"https://www.zachleat.com/presentations/excited/videos/idiocracy.mp4\">downloading it</a> instead.\n  </video>\n  <div class=\"slide-annotations\">\n    <p>Get out that Brawndo folks, we’ve arrived.</p>\n\t</div>\n</article>\n<article class=\"slide\">\n  <picture class=\"slide-image\">\n    <source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/excited/images/images.017.webp\">\n    <img src=\"https://www.zachleat.com/presentations/excited/images/images.017.jpg\" alt=\"\">\n  </picture>\n  <div class=\"slide-annotations\">\n    <p>The tech world is at a Jurassic Park moment.</p>\n  </div>\n</article>\n<article class=\"slide\">\n  <video class=\"slide-image\" controls=\"\" preload=\"metadata\" src=\"https://www.zachleat.com/presentations/excited/videos/jurassicpark.mp4\">\n    Sorry, your browser doesn't support embedded videos. Try <a href=\"https://www.zachleat.com/presentations/excited/videos/jurassicpark.mp4\">downloading it</a> instead.\n  </video>\n  <div class=\"slide-annotations\">\n    <p>“I don’t think you’re giving us our due credit. Our scientists have done things which nobody’s ever done before.”</p>\n    <p>“Yeah, yeah, but your scientists were so preoccupied with whether or not they could that they didn’t stop to think if they should.”</p>\n\t</div>\n</article>\n<article class=\"slide\">\n  <picture class=\"slide-image\">\n    <source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/excited/images/images.019.webp\">\n    <img src=\"https://www.zachleat.com/presentations/excited/images/images.019.jpg\" alt=\"\">\n  </picture>\n  <div class=\"slide-annotations\">\n    <p>The tech world—Silicon Valley especially—can be an echo chamber.</p>\n    <p>Merely existing outside of this echo chamber can be a competitive advantage.</p>\n  </div>\n</article>\n<article class=\"slide\">\n  <picture class=\"slide-image\">\n    <source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/excited/images/images.001.webp\">\n    <img src=\"https://www.zachleat.com/presentations/excited/images/images.001.jpg\" alt=\"\">\n  </picture>\n  <div class=\"slide-annotations\">\n    <p>So, what am I excited about?</p>\n  </div>\n</article>\n<article class=\"slide\">\n  <picture class=\"slide-image\">\n    <source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/excited/images/images.021.webp\">\n    <img src=\"https://www.zachleat.com/presentations/excited/images/images.021.jpg\" alt=\"\">\n  </picture>\n  <div class=\"slide-annotations\">\n    <p>I’m excited to get back to basics.</p>\n    <p>To look at the fundamental principle of what makes the web is great—ubiquity.</p>\n\t</div>\n</article>\n<article class=\"slide\">\n  <picture class=\"slide-image\">\n    <source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/excited/images/images.022.webp\">\n    <img src=\"https://www.zachleat.com/presentations/excited/images/images.022.jpg\" alt=\"\">\n  </picture>\n  <div class=\"slide-annotations\">\n    <p>The internet is becoming accessible to more people, world wide.</p>\n    <p>In 2005, only 15% of the world’s population was online.</p>\n    <p>In 2015, it was up to almost 44%.</p>\n\t</div>\n</article>\n<article class=\"slide\">\n  <picture class=\"slide-image\">\n    <source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/excited/images/images.023.webp\">\n    <img src=\"https://www.zachleat.com/presentations/excited/images/images.023.jpg\" alt=\"\">\n  </picture>\n  <div class=\"slide-annotations\">\n    <p>In 2016, the UN passed a resolution condemning disruption of internet access by governments—formally stating that Internet access was a human right.</p>\n\t</div>\n</article>\n<article class=\"slide\">\n  <picture class=\"slide-image\">\n    <source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/excited/images/images.024.webp\">\n    <img src=\"https://www.zachleat.com/presentations/excited/images/images.024.jpg\" alt=\"\">\n  </picture>\n  <div class=\"slide-annotations\">\n    <p>This is why Omaha’s amazing one-of-a-kind digital library—<a href=\"http://dospace.org/\">Do Space</a>—and their “free and open to all” mission is so important. It gives people access to this powerful communication and learning tool.</p>\n\t</div>\n</article>\n<article class=\"slide\">\n  <div class=\"slide-image\"></div>\n  <div class=\"slide-annotations\">\n    <p>The web should not be a gated community for Silicon Valley elites. The more diversity that’s represented in our online communities, the better the web will be.</p>\n\t</div>\n</article>\n<article class=\"slide\">\n  <picture class=\"slide-image\">\n    <source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/excited/images/images.026.webp\">\n    <img src=\"https://www.zachleat.com/presentations/excited/images/images.026.jpg\" alt=\"\">\n  </picture>\n  <div class=\"slide-annotations\">\n    <p>As web developers, we need to ask ourselves if we’re building a World Wide Web…</p>\n\t</div>\n</article>\n<article class=\"slide\">\n  <picture class=\"slide-image\">\n    <source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/excited/images/images.027.webp\">\n    <img src=\"https://www.zachleat.com/presentations/excited/images/images.027.jpg\" alt=\"\">\n  </picture>\n  <div class=\"slide-annotations\">\n    <p>…or are we, as my friend <a href=\"https://twitter.com/brucel\">Bruce Lawson</a> calls it, building a <a href=\"https://www.smashingmagazine.com/2017/03/world-wide-web-not-wealthy-western-web-part-1/\">Wealthy Western Web</a>.</p>\n\t</div>\n</article>\n<article class=\"slide\">\n  <picture class=\"slide-image\">\n    <source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/excited/images/images.028.webp\">\n    <img src=\"https://www.zachleat.com/presentations/excited/images/images.028.jpg\" alt=\"\">\n  </picture>\n  <div class=\"slide-annotations\">\n    <p>Your visitors may not be on the latest hardware.</p>\n  </div>\n</article>\n<article class=\"slide\">\n  <picture class=\"slide-image\">\n    <source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/excited/images/images.029.webp\">\n    <img src=\"https://www.zachleat.com/presentations/excited/images/images.029.jpg\" alt=\"\">\n  </picture>\n  <div class=\"slide-annotations\">\n    <p>Your visitors may not be on the best network connection.</p>\n  </div>\n</article>\n<article class=\"slide\">\n  <picture class=\"slide-image\">\n    <source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/excited/images/images.030.webp\">\n    <img src=\"https://www.zachleat.com/presentations/excited/images/images.030.jpg\" alt=\"\">\n  </picture>\n  <div class=\"slide-annotations\">\n    <p><a href=\"https://mobile.twitter.com/BenedictEvans/status/513017790920290304\">More people access Facebook over 2G than 4G.</a></p>\n  </div>\n</article>\n<article class=\"slide\">\n  <picture class=\"slide-image\">\n    <source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/excited/images/images.031.webp\">\n    <img src=\"https://www.zachleat.com/presentations/excited/images/images.031.jpg\" alt=\"\">\n  </picture>\n  <div class=\"slide-annotations\">\n    <p>Look at all of those people in the Middle East, Africa, and Asia Pacific regions that are (or will be) on CDMA/GSM in 2015 (or projected in 2021).</p>\n  </div>\n</article>\n<article class=\"slide\">\n  <picture class=\"slide-image\">\n    <source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/excited/images/images.032.webp\">\n    <img src=\"https://www.zachleat.com/presentations/excited/images/images.032.jpg\" alt=\"\">\n  </picture>\n  <div class=\"slide-annotations\">\n    <p>Those people may not want to download your 150MB app, which may be quite costly on a metered data connection.</p>\n\t</div>\n</article>\n<article class=\"slide\">\n  <picture class=\"slide-image\">\n    <source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/excited/images/images.033.webp\">\n    <img src=\"https://www.zachleat.com/presentations/excited/images/images.033.jpg\" alt=\"\">\n  </picture>\n  <div class=\"slide-annotations\">\n    <p>A great alternative to a giant monolithic app download: <a href=\"https://developers.google.com/web/progressive-web-apps/\">progressive web apps</a>. Bunch of native app-like benefits: offline, home screen icon, and more.</p>\n\t</div>\n</article>\n<article class=\"slide\">\n  <picture class=\"slide-image\">\n    <source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/excited/images/images.034.webp\">\n    <img src=\"https://www.zachleat.com/presentations/excited/images/images.034.jpg\" alt=\"\">\n  </picture>\n  <div class=\"slide-annotations\">\n    <p>This is a list of countries ordered by the total number of internet users.</p>\n    <p>China has 692 million people online. India has 340 million. Take note that the total US population is ~320 million.</p>\n\t</div>\n</article>\n<article class=\"slide\">\n  <picture class=\"slide-image\">\n    <source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/excited/images/images.035.webp\">\n    <img src=\"https://www.zachleat.com/presentations/excited/images/images.035.jpg\" alt=\"\">\n  </picture>\n  <div class=\"slide-annotations\">\n    <p>China has 1.4 billion people.</p>\n    <p>India 1.3 billion people.</p>\n\t</div>\n</article>\n<article class=\"slide\">\n  <picture class=\"slide-image\">\n    <source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/excited/images/images.036.webp\">\n    <img src=\"https://www.zachleat.com/presentations/excited/images/images.036.jpg\" alt=\"\">\n  </picture>\n  <div class=\"slide-annotations\">\n    <p>Only 50% and 26% of China and India’s (respectively) populations are online. The potential for growth in these countries is exciting.</p>\n  </div>\n</article>\n<article class=\"slide\">\n  <picture class=\"slide-image\">\n    <source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/excited/images/images.037.webp\">\n    <img src=\"https://www.zachleat.com/presentations/excited/images/images.037.jpg\" alt=\"\">\n  </picture>\n  <div class=\"slide-annotations\">\n    <p>Are you ready for it? Are you testing in browsers used by Chinese web <del>surfers</del> users?</p>\n    <p>UC Browser is 7.83% of the Browser Market Share in China. That’s 54 million people.</p>\n  </div>\n</article>\n<article class=\"slide\">\n  <picture class=\"slide-image\">\n    <source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/excited/images/images.038.webp\">\n    <img src=\"https://www.zachleat.com/presentations/excited/images/images.038.jpg\" alt=\"\">\n  </picture>\n  <div class=\"slide-annotations\">\n    <p>UC Browser is 41.99% of the Browser Market Share in India.</p>\n  </div>\n</article>\n<article class=\"slide\">\n  <picture class=\"slide-image\">\n    <source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/excited/images/images.039.webp\">\n    <img src=\"https://www.zachleat.com/presentations/excited/images/images.039.jpg\" alt=\"\">\n  </picture>\n  <div class=\"slide-annotations\">\n    <p>Have you heard of this browser? Do you test in it?</p>\n    <p>It was created by UCWeb and is owned by Alibaba.</p>\n\t</div>\n</article>\n<article class=\"slide\">\n  <picture class=\"slide-image\">\n    <source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/excited/images/images.040.webp\">\n    <img src=\"https://www.zachleat.com/presentations/excited/images/images.040.jpg\" alt=\"\">\n  </picture>\n  <div class=\"slide-annotations\">\n    <p>How does the number of UC Browser users in India compare to the population of New York City?</p>\n  </div>\n</article>\n<article class=\"slide\">\n  <picture class=\"slide-image\">\n    <source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/excited/images/images.041.webp\">\n    <img src=\"https://www.zachleat.com/presentations/excited/images/images.041.jpg\" alt=\"\">\n  </picture>\n  <div class=\"slide-annotations\">\n    <p>41.99% of India’s Browser Market Share.</p>\n    <p>340,873,137 people in India are online.</p>\n    <p>This is a rough approximation conflating user and usage but that means 143 million people in India are using UC Browser.</p>\n\t</div>\n</article>\n<article class=\"slide\">\n  <picture class=\"slide-image\">\n    <source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/excited/images/images.042.webp\">\n    <img src=\"https://www.zachleat.com/presentations/excited/images/images.042.jpg\" alt=\"\">\n  </picture>\n  <div class=\"slide-annotations\">\n    <p>That’s equal to the total population of 16.7 New York Cities.</p>\n  </div>\n</article>\n<article class=\"slide\">\n  <picture class=\"slide-image\">\n    <source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/excited/images/images.043.webp\">\n    <img src=\"https://www.zachleat.com/presentations/excited/images/images.043.jpg\" alt=\"\">\n  </picture>\n  <div class=\"slide-annotations\">\n    <p>That’s just one browser in one country. Remember that only 26% of India is online.</p>\n\t</div>\n</article>\n<article class=\"slide\">\n  <picture class=\"slide-image\">\n    <source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/excited/images/images.044.webp\">\n    <img src=\"https://www.zachleat.com/presentations/excited/images/images.044.jpg\" alt=\"\">\n  </picture>\n  <div class=\"slide-annotations\">\n    <p>Okay, that’s UC Browser. How about Opera Mini?</p>\n  </div>\n</article>\n<article class=\"slide\">\n  <picture class=\"slide-image\">\n    <source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/excited/images/images.045.webp\">\n    <img src=\"https://www.zachleat.com/presentations/excited/images/images.045.jpg\" alt=\"\">\n  </picture>\n  <div class=\"slide-annotations\">\n    <p>In June 2013, Opera Mini/Mobile/Android had 251 million unique users. No big deal. That’s only New York City times 30.</p>\n    <p>Opera Mini is <a href=\"https://twitter.com/zachleat/status/361968999078170624\" class=\"url\">~91% of this</a>.</p>\n\t</div>\n</article>\n<article class=\"slide\">\n  <picture class=\"slide-image\">\n    <source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/excited/images/images.046.webp\">\n    <img src=\"https://www.zachleat.com/presentations/excited/images/images.046.jpg\" alt=\"\">\n  </picture>\n  <div class=\"slide-annotations\">\n    <p>That tweet was a little old so let’s fast forward to 2016.</p>\n    <p>“250 million Opera Mini users, 50% are on Android/iOS and 50% are on feature phones.”—Bruce Lawson</p>\n\t</div>\n</article>\n<article class=\"slide\">\n  <picture class=\"slide-image\">\n    <source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/excited/images/images.047.webp\">\n    <img src=\"https://www.zachleat.com/presentations/excited/images/images.047.jpg\" alt=\"\">\n  </picture>\n  <div class=\"slide-annotations\">\n    <p>Opera is the most used web browser in a bunch of African countries.</p>\n  </div>\n</article>\n<article class=\"slide\">\n  <picture class=\"slide-image\">\n    <source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/excited/images/images.048.webp\">\n    <img src=\"https://www.zachleat.com/presentations/excited/images/images.048.jpg\" alt=\"\">\n  </picture>\n  <div class=\"slide-annotations\">\n    <p>Let’s critically analyze the size of our web sites and apps and consider what their cost can mean to someone on a metered data connection. Check out <a href=\"https://whatdoesmysitecost.com/\">What Does My Site Cost?</a> to find out just how much your web site costs to someone in a different country.</p>\n\t</div>\n</article>\n<article class=\"slide\">\n  <picture class=\"slide-image\">\n    <source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/excited/images/images.049.webp\">\n    <img src=\"https://www.zachleat.com/presentations/excited/images/images.049.jpg\" alt=\"\">\n  </picture>\n  <div class=\"slide-annotations\">\n    <p>Increased awareness of these constraints will lead to a faster and lighter web for everyone.</p>\n  </div>\n</article>\n<article class=\"slide\">\n  <picture class=\"slide-image\">\n    <source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/excited/images/images.050.webp\">\n    <img src=\"https://www.zachleat.com/presentations/excited/images/images.050.jpg\" alt=\"\">\n  </picture>\n  <div class=\"slide-annotations\">\n    <p>So let’s welcome our new friends to the web.</p>\n  </div>\n</article>\n<article class=\"slide\">\n  <picture class=\"slide-image\">\n    <source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/excited/images/images.051.webp\">\n    <img src=\"https://www.zachleat.com/presentations/excited/images/images.051.jpg\" alt=\"\">\n  </picture>\n  <div class=\"slide-annotations\">\n    <p>If not with a hello, with an ethical, accessible, and affordable <code>\"Hello World\";</code></p>\n  </div>\n</article>\n<article class=\"slide\">\n  <picture class=\"slide-image\">\n    <source type=\"image/webp\" srcset=\"https://www.zachleat.com/presentations/excited/images/images.052.webp\">\n    <img src=\"https://www.zachleat.com/presentations/excited/images/images.052.jpg\" alt=\"\">\n  </picture>\n  <div class=\"slide-annotations\">\n    <p>Thank you!</p>\n  </div>\n</article>\n<p class=\"credits\">Created with <a href=\"https://www.keynote-extractor.com/\">Keynote Extractor</a>.</p>\n<div class=\"retweettoshare\">\n  <h3 class=\"retweettoshare_title\">Retweet to share this post</h3>\n  <div class=\"retweettoshare_widget\">\n    <blockquote class=\"twitter-tweet\" data-lang=\"en\"><p lang=\"en\" dir=\"ltr\">⭐ The one where I try to answer: “What Are You Excited About?”<br><br>Hint: It’s not Smart TVs 📺<a href=\"https://t.co/KVxvdKUSk0\">https://t.co/KVxvdKUSk0</a></p>&mdash; Zach Leatherman (@zachleat) <a href=\"https://twitter.com/zachleat/status/859014100034236418\">May 1, 2017</a></blockquote>\n  </div>\n</div>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"https://www.zachleat.com/presentations/excited/images/images.001.jpg","linkMd5":"24fd181a81685ba2b1788653439d8a4c","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn78@2020_3/2020/08/25/02-02-02-885_120f2d333d7cd427.webp","destWidth":1024,"destHeight":768,"sourceBytes":218082,"destBytes":106860,"author":"","articleImgCdnMap":{"https://www.zachleat.com/presentations/excited/images/images.001.jpg":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn78@2020_3/2020/08/25/02-02-02-885_120f2d333d7cd427.webp","https://www.zachleat.com/presentations/excited/images/images.002.jpg":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn10@2020_6/2020/08/25/02-02-12-504_e5d061d76057cde4.webp","https://www.zachleat.com/presentations/excited/images/images.003.jpg":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn45@2020_5/2020/08/25/02-02-10-302_155eab23147ed1a1.webp","https://www.zachleat.com/presentations/excited/images/images.004.jpg":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn93@2020_3/2020/08/25/02-02-10-179_ebded7c23d11dac9.webp","https://www.zachleat.com/presentations/excited/images/images.005.jpg":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn22@2020_4/2020/08/25/02-02-10-226_e1a83676d77609bf.webp","https://www.zachleat.com/presentations/excited/images/images.008.jpg":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn63@2020_5/2020/08/25/02-02-17-443_d12c2a1b0e0fd864.webp","https://www.zachleat.com/presentations/excited/images/images.009.jpg":"https://cdn.jsdelivr.net/gh/myreaderx/cdn12@2020_1/2020/08/25/02-02-14-837_b6297b7a22998ced.webp","https://www.zachleat.com/presentations/excited/images/images.010.jpg":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn49@2020_2/2020/08/25/02-02-10-858_cc7e271fd02431d2.webp","https://www.zachleat.com/presentations/excited/images/images.011.jpg":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn30@2020_2/2020/08/25/02-02-10-263_af707e596ddba009.webp","https://www.zachleat.com/presentations/excited/images/images.012.jpg":"https://cdn.jsdelivr.net/gh/myreaderx/cdn78@2020_3/2020/08/25/02-02-10-220_2b9a34a023ab250a.webp","https://www.zachleat.com/presentations/excited/images/images.013.jpg":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn39@2020_6/2020/08/25/02-02-20-920_d147b5943a1c8320.webp","https://www.zachleat.com/presentations/excited/images/images.014.jpg":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn99@2020_5/2020/08/25/02-02-22-219_d149a6149721a8a7.webp","https://www.zachleat.com/presentations/excited/images/images.015.jpg":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn39@2020_4/2020/08/25/02-02-20-151_cea4ff337838e736.webp","https://www.zachleat.com/presentations/excited/images/images.017.jpg":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn20@2020_3/2020/08/25/02-02-18-867_d42a1ccea032d500.webp","https://www.zachleat.com/presentations/excited/images/images.019.jpg":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn19@2020_5/2020/08/25/02-02-17-536_88207cdcc6fd8900.webp","https://www.zachleat.com/presentations/excited/images/images.021.jpg":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn93@2020_3/2020/08/25/02-02-13-273_e2b386ec6d056649.webp","https://www.zachleat.com/presentations/excited/images/images.022.jpg":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn30@2020_4/2020/08/25/02-02-12-639_f8d6845a44e2089b.webp","https://www.zachleat.com/presentations/excited/images/images.023.jpg":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn61@2020_5/2020/08/25/02-02-11-829_67a1d46a01081c18.webp","https://www.zachleat.com/presentations/excited/images/images.024.jpg":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn99@2020_1/2020/08/25/02-02-19-945_e9124476fc0ebc0e.webp","https://www.zachleat.com/presentations/excited/images/images.026.jpg":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn47@2020_5/2020/08/25/02-02-18-120_f205662a99a569e9.webp","https://www.zachleat.com/presentations/excited/images/images.027.jpg":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn64@2020_2/2020/08/25/02-02-16-315_42a58b8476bda38e.webp","https://www.zachleat.com/presentations/excited/images/images.028.jpg":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn64@2020_3/2020/08/25/02-02-21-055_78f83bbe5d5a86e1.webp","https://www.zachleat.com/presentations/excited/images/images.029.jpg":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn35@2020_6/2020/08/25/02-02-21-760_4381fbd497e5f05b.webp","https://www.zachleat.com/presentations/excited/images/images.030.jpg":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn77@2020_6/2020/08/25/02-02-10-435_fa331cf6703e68e0.webp","https://www.zachleat.com/presentations/excited/images/images.031.jpg":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn78@2020_3/2020/08/25/02-02-12-443_13a50d43cd60a117.webp","https://www.zachleat.com/presentations/excited/images/images.032.jpg":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn49@2020_6/2020/08/25/02-02-12-840_b29af6dfe0192602.webp","https://www.zachleat.com/presentations/excited/images/images.033.jpg":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn7@2020_4/2020/08/25/02-02-14-688_52b0824a671682d9.webp","https://www.zachleat.com/presentations/excited/images/images.034.jpg":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn95@2020_5/2020/08/25/02-02-16-813_21b35053e29a03ad.webp","https://www.zachleat.com/presentations/excited/images/images.035.jpg":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn92@2020_4/2020/08/25/02-02-16-706_854aaf3ef793d9bd.webp","https://www.zachleat.com/presentations/excited/images/images.036.jpg":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn31@2020_4/2020/08/25/02-02-14-787_e52df1a986b3f9db.webp","https://www.zachleat.com/presentations/excited/images/images.037.jpg":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn69@2020_6/2020/08/25/02-02-13-307_b4e2fd017f2088aa.webp","https://www.zachleat.com/presentations/excited/images/images.038.jpg":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn9@2020_5/2020/08/25/02-02-13-011_b09c8a1365b2a4e7.webp","https://www.zachleat.com/presentations/excited/images/images.039.jpg":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn1@2020_1/2020/08/25/02-02-11-300_9088f30c61ddd190.webp","https://www.zachleat.com/presentations/excited/images/images.040.jpg":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn3@2020_6/2020/08/25/02-02-21-697_3a6710e9563dbe29.webp","https://www.zachleat.com/presentations/excited/images/images.041.jpg":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn60@2020_5/2020/08/25/02-02-22-332_d9af39405661dbbb.webp","https://www.zachleat.com/presentations/excited/images/images.042.jpg":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn99@2020_5/2020/08/25/02-02-17-438_135b03c9ef5e3acd.webp","https://www.zachleat.com/presentations/excited/images/images.043.jpg":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn51@2020_4/2020/08/25/02-02-18-503_ce5e1f70d22f7c62.webp","https://www.zachleat.com/presentations/excited/images/images.044.jpg":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn15@2020_4/2020/08/25/02-02-18-740_a00e726b14d5c48e.webp","https://www.zachleat.com/presentations/excited/images/images.045.jpg":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn88@2020_5/2020/08/25/02-02-19-285_3233eddcda9cea41.webp","https://www.zachleat.com/presentations/excited/images/images.046.jpg":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn89@2020_6/2020/08/25/02-02-12-215_f20d73de95ec6e07.webp","https://www.zachleat.com/presentations/excited/images/images.047.jpg":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn33@2020_1/2020/08/25/02-02-12-827_e0ac0f277b365230.webp","https://www.zachleat.com/presentations/excited/images/images.048.jpg":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn86@2020_6/2020/08/25/02-02-13-430_a6bd017e0cf8eff5.webp","https://www.zachleat.com/presentations/excited/images/images.049.jpg":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn52@2020_1/2020/08/25/02-02-15-036_3c4d987c1960d829.webp","https://www.zachleat.com/presentations/excited/images/images.050.jpg":"https://cdn.jsdelivr.net/gh/myreaderx/cdn36@2020_3/2020/08/25/02-02-17-687_b5159d1801915e95.webp","https://www.zachleat.com/presentations/excited/images/images.051.jpg":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn87@2020_2/2020/08/25/02-02-16-607_089994139fef7528.webp","https://www.zachleat.com/presentations/excited/images/images.052.jpg":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn92@2020_1/2020/08/25/02-02-19-230_9c85c4e4484fc73e.webp"},"publishedOrCreatedDate":1598320921768},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"I’m Taking Ownership of My Tweets","link":"http://www.zachleat.com/web/own-my-tweets/","description":"<p>I’ve invested a lot into Twitter and I’ve received a lot of value from Twitter. I’ve made a lot of friends and professional connections on the site. I’ll be sad when Twitter goes away. Without a doubt, it will go away. It’s only a question of when.</p> \n<p>I fully expect my personal website to outlive Twitter and as such have decided to take full ownership of the content I’ve posted there. In true <a href=\"https://indieweb.org/\">IndieWeb</a> fashion, I’m taking ownership of my data.</p> \n<p class=\"primarylink\">Check out an early release of <a href=\"https://www.zachleat.com/twitter/\">@zachleat’s Twitter Archive</a></p> \n<h2 id=\"features\">Features <a class=\"direct-link\" href=\"http://www.zachleat.com/web/own-my-tweets/#features\">#</a></h2> \n<ul> \n <li>Each tweet has its own independent page: <code>zachleat.com/twitter/:id</code>. \n  <ul> \n   <li>If you have an existing URL to one of my tweets, you can easily translate it to my self hosted version. <pre><code><a href=\"http://twitter.com/zachleat/status/905054076408393729\">twitter.com/zachleat/status/905054076408393729</a> becomes <a href=\"http://zachleat.com/twitter/905054076408393729\">zachleat.com/twitter/905054076408393729</a></code></pre></li> \n   <li>This was also a very interesting stress test for <a href=\"https://www.11ty.io/\">Eleventy</a>, as it generates 27K pages with every run of the build 😲</li> \n   <li>Each tweet page has some nice pagination links at the top to navigate between tweets (historically).</li> \n  </ul> </li> \n <li>Super <a href=\"https://www.zachleat.com/twitter/1169998370041208832/\">fast HTML first rendering</a> (that tweet is 2.0 KB for the entire page)</li> \n <li>Focus on the text first and less on the media. Links to external media are included (<a href=\"https://www.zachleat.com/twitter/1171621079745540096/\">sample</a>) and Videos, images, and animated GIFs are supported. Media are not self hosted (yet) and uses a <code>max-height</code> of <code>10em</code>. All media are scrunched into a single row. Media is <em>not</em> upscaled like Twitter likes to do on their web site 😱</li> \n <li>Links: \n  <ul> \n   <li><a href=\"http://t.co/\">t.co</a> links are bypassed and original hyperlinks URLs are displayed and used.</li> \n   <li>Things are linkified the same as on Twitter: users, tweets being replied to, nicer non-truncated URLs</li> \n   <li>Nicer link formatting for links-to-tweets: <code>@username/:id</code>.</li> \n   <li>Internal links to my own tweets stay within the archive and don’t link out to Twitter.</li> \n  </ul> </li> \n <li>My tweets are threaded (both forwards and backwards) (<a href=\"https://www.zachleat.com/twitter/1171427770850672640/\">sample</a>)</li> \n <li>While I could display favorite and retweet counts, I don’t on individual tweet pages. I only display those on the <a href=\"https://www.zachleat.com/twitter/popular/\">popular tweet page</a>.</li> \n <li>Positive and negative sentiment analysis for each tweet (e.g. <code>Mood +8</code>). See the <a href=\"https://www.zachleat.com/twitter/sentiment/\">most positive and most negative tweets</a>.</li> \n <li>Support some markdown: I sometimes use <code>`backtick`</code> markdown notation for code in my tweet text. This translates to <code>&lt;code&gt;</code> properly.</li> \n <li>Works initially from the <a href=\"https://twitter.com/settings/your_twitter_data\">Download your Twitter data</a> feature, but also supplements with the Twitter API to update as new tweets are published (that way I don’t have to keep re-exporting every time).</li> \n</ul> \n<h2 id=\"analytics\">Analytics <a class=\"direct-link\" href=\"http://www.zachleat.com/web/own-my-tweets/#analytics\">#</a></h2> \n<p>All of these are linked up on the <a href=\"https://www.zachleat.com/twitter/\">Twitter Archive home page</a>. The only thing that surprised me here was that 60% of my tweets are replies—wow!</p> \n<ul> \n <li><a href=\"https://www.zachleat.com/twitter/popular/\">Popular tweets</a></li> \n <li>Most retweeted and replied to</li> \n <li>If any <a href=\"https://www.zachleat.com/twitter/amp/\">filthy AMP URLs</a> have leaked into my tweets (I actively try to avoid these, but one snuck in there)</li> \n <li><a href=\"https://www.zachleat.com/twitter/sentiment/\">Most Positive and Negative Tweets</a></li> \n <li>Top swear words</li> \n <li>Top emoji</li> \n <li>Top hashtags</li> \n</ul> \n<h2 id=\"the-backlog-%F0%9F%98%85\">The Backlog 😅 <a class=\"direct-link\" href=\"http://www.zachleat.com/web/own-my-tweets/#the-backlog-%F0%9F%98%85\">#</a></h2> \n<ul> \n <li><code>alt</code> on media. It was suspiciously <a href=\"https://www.zachleat.com/twitter/1171427770850672640/\">missing from the data export</a>. 😱</li> \n <li>Clean up the code a little bit for publishing so others can use it (this includes some outstanding color contrast issues 😱)</li> \n <li>Use a better typeface 😎</li> \n <li>Some kinda widget for embedding archive tweets in other pages.</li> \n <li>Make a tool (maybe a bookmarklet) to automatically translate URLs from twitter to my archive.</li> \n <li>Search</li> \n <li>I purposefully do not include others tweets (unless I’ve retweeted them). I need to add a mechanism to remove retweets if they have been deleted upstream.</li> \n <li>Retweet and favorite counts, while minimized, are not yet updated—they are fixed to when the tweet was inserted into the database.</li> \n <li>Hashtags are not yet linked in tweet text 🤷‍♂️</li> \n <li>Some nicer data visualizations and graphs</li> \n</ul>","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"f973bf18c8d5faa730dab448e764fbe7","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921772},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"A Group of Web Font Repaints is called a Michael Serif","link":"http://www.zachleat.com/web/michael-serif/","description":"\n\t\t\t<p><a href=\"https://www.zachleat.com/web/font-display-reflow/\"><img src=\"https://www.zachleat.com/web/img/posts/font-display-reflow/michael-serif.jpg\" alt=\"Michael Cera\" class=\"primary\"></a></p>\n<p>This was the original title for the article <a href=\"https://www.zachleat.com/web/font-display-reflow/\">The Problem with <code>font-display</code> and Reflow</a> and it was too good to throw away so now it just links to the real article. Okay bye.</p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"https://www.zachleat.com/web/img/posts/font-display-reflow/michael-serif.jpg","linkMd5":"12d74078f8eb808fdc0f5ff8c8755b1a","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn10@2020_1/2020/08/25/02-02-03-511_e07ef93dc79b9241.webp","destWidth":1280,"destHeight":720,"sourceBytes":60328,"destBytes":33790,"author":"","articleImgCdnMap":{"https://www.zachleat.com/web/img/posts/font-display-reflow/michael-serif.jpg":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn10@2020_1/2020/08/25/02-02-03-511_e07ef93dc79b9241.webp"},"publishedOrCreatedDate":1598320921771},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"NebraskaJS Omaha","link":"http://www.zachleat.com/web/rocket-science-nebraskajs/","description":"\n\t\t\t\t<p><em>This content lives somewhere else. It was originally posted at: <a href=\"https://www.meetup.com/nebraskajs/events/238363544/\">https://www.meetup.com/nebraskajs/events/238363544/</a></em></p>\n\t\t\t\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"6d198fb061d2343e84cb5860b0d0bc9d","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921769},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"font-display is Incompatible with Icon Fonts","link":"http://www.zachleat.com/web/font-display-icon-fonts/","description":"\n\t\t\t<p>There are myriad problems with icon fonts. I won’t rehash those again here but I did a section on this specific topic in <a href=\"https://www.zachleat.com/web/scoville-scale/\">The Scoville Scale of Web Font Loading Opinions</a>. A bunch of people have written about this before:</p>\n<ul>\n<li><a href=\"https://github.blog/2016-02-22-delivering-octicons-with-svg/\">Delivering Octicons with SVG</a> on the GitHub Blog.</li>\n<li><a href=\"https://cloudfour.com/thinks/seriously-dont-use-icon-fonts/\">Seriously, Don’t Use Icon Fonts</a> by Tyler Sticka for the Cloud Four blog.</li>\n<li><a href=\"https://speakerdeck.com/ninjanails/death-to-icon-fonts\">Death to Icon Fonts</a>, a talk by <a href=\"http://www.serendavies.me/\">Seren Davies</a></li>\n<li><a href=\"https://www.sarasoueidan.com/blog/icon-fonts-to-svg/\">Making the Switch Away from Icon Fonts to SVG: Converting Font Icons to SVG</a> by Sara Soueidan</li>\n<li><a href=\"https://css-tricks.com/icon-fonts-vs-svg/\">Inline SVG vs. Icon Fonts</a> by Chris Coyier on CSS Tricks</li>\n<li>Have another? <a href=\"https://twitter.com/intent/tweet?screen_name=zachleat\">Pass it along!</a></li>\n</ul>\n<p>The main point that I think hasn’t really been communicated enough is that icon fonts exist in a place that would seem to be outside of the web standards mainstream. Specifically, the font loading poster child—the <code>font-display</code> descriptor—has no valid value that is compatible with icon fonts.</p>\n<p>When you load an icon font, you often never want the fallback text to render. It isn’t a typical <a href=\"https://www.zachleat.com/web/webfont-glossary/#fout\">Flash of Unstyled Text (FOUT)</a> scenario. If the fallback text for an icon font renders, who knows what you might see.</p>\n<p>If the icon font uses glyphs mapped to the Private Use Area, you <a href=\"https://www.filamentgroup.com/lab/bulletproof_icon_fonts.html#responsible-fallbacks\">may see emoji characters</a> (this is a common failure scenario).</p>\n<img src=\"https://www.zachleat.com/web/img/posts/font-display-icon-fonts/ios-pua.png\" alt=\"Screenshot of the Private Use Area (with emoji) on iOS\">\n<p>If the icon font uses ligatures, you could <a href=\"https://twitter.com/ckollars/status/1026824074696249346\">see the ligature text</a> (which is better, but often also not handled very well).</p>\n<p><a href=\"https://twitter.com/ckollars/status/1026824074696249346\"><img src=\"https://www.zachleat.com/web/img/posts/font-display-icon-fonts/google-news.jpg\" alt=\"Screenshot of the Ligature icon fallback of Google News (showing overlapping text with content)\"></a></p>\n<p>Some browsers (Firefox) show a TOFU character as fallback.</p>\n<img src=\"https://www.zachleat.com/web/img/posts/font-display-icon-fonts/twitter.jpg\" alt=\"Twitter Icon Font Fallback Screenshot\">\n<p>An astute web font loading reader might reach for the easiest tool in the toolbox to solve font loading issues: the <code>font-display</code> descriptor. However there are no good values for <code>font-display</code> that will offer invisible text. In fact, a few of the values will be quite bad.</p>\n<ul>\n<li>Using <code>font-display: optional</code> on your icon font means that it will only render on repeat views and renders fallback text on empty cache views: Very Bad 🚫</li>\n<li>Using <code>font-display: swap</code> on your icon font means that it will render fallback text immediately while waiting for the web font to finish loading: Bad 🚫</li>\n<li>Using <code>font-display: fallback</code> will only render the icon font if it loads within a short (usually 3 second) time period: Not great 🚫</li>\n<li>Using <code>font-display: block</code> is the default behavior and will use invisible text for up to 3 seconds and show fallback text until the web font load completes: The best option but still not good 🚫</li>\n</ul>\n<p>To workaround these issues, you <em>could</em> use the CSS Font Loading API to force invisible text until the icon font has successfully loaded. Or, perhaps more in line with the web standards mainstream, you could make a better investment and convert your icons to use SVG instead.</p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"https://www.zachleat.com/web/img/posts/font-display-icon-fonts/ios-pua.png","linkMd5":"613861f941b21e5d2870a9599453e9b3","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn73@2020_2/2020/08/25/02-02-04-586_82828cb07dedad25.webp","destWidth":390,"destHeight":550,"sourceBytes":60047,"destBytes":17928,"author":"","articleImgCdnMap":{"https://www.zachleat.com/web/img/posts/font-display-icon-fonts/ios-pua.png":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn73@2020_2/2020/08/25/02-02-04-586_82828cb07dedad25.webp","https://www.zachleat.com/web/img/posts/font-display-icon-fonts/google-news.jpg":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn61@2020_5/2020/08/25/02-02-13-988_2ca8ecf88279b461.webp","https://www.zachleat.com/web/img/posts/font-display-icon-fonts/twitter.jpg":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn17@2020_3/2020/08/25/02-02-12-783_3177d041e86184d7.webp"},"publishedOrCreatedDate":1598320921771},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Bulletproof Accessible Icon Fonts","link":"http://www.zachleat.com/web/bulletproof-icon-fonts/","description":"\n\t\t\t<p><a href=\"http://www.filamentgroup.com/lab/bulletproof_icon_fonts.html\"><strong>Read <em>Bulletproof Accessible Icon Fonts</em> on the Filament Group Lab.</strong></a></p>\n<blockquote>\n<p>Care must be taken when implementing icon fonts to ensure a great experience for all users. What happens when your font doesn’t load? What happens when @font-face isn’t supported in the browser? We’ll show you how to implement bulletproof font icons.</p>\n</blockquote>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"35680318d950fd4f838f0f8956fc78c5","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921764},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"A Front End Engineer&#8217;s Manifesto","link":"http://www.zachleat.com/web/manifesto/","description":"<p>Early last year at Nebraska Code Camp 2011, I gave a talk to a bunch of .NET developers about my own personal perspective on the world of Front End Engineering.</p> \n<p>True to form, I developed the slide deck for the web using <a href=\"https://www.zachleat.com/web/bigtext-makes-text-big/\">BigText</a>, <a href=\"http://christophercliff.github.com/sausage/\">sausage.js</a>, and a few other self-developed but yet-to-be released plugins. I uploaded it <em>world wide</em> for my presentation but never published the URL publicly. Unexpectedly, last week a developer from France found it and <a href=\"https://twitter.com/NumEricR/status/239298110701068288\">shared it on Twitter</a>. Well, the cat is out of the bag.</p> \n<p>I’ve been reluctant to share the slides because I certainly don’t want developers to take them as dogmatic truth. Rather, I’d love for people to see a forest using trees they’ve planted themselves. Try to take a step back and see the big picture when you’re problem solving on the front end and figure out what’s important to you.</p> \n<p>So with a bit of trepidation but without further adieu:</p> \n<h2 id=\"f2em.com%2C-a-front-end-engineer%E2%80%99s-manifesto\"><a href=\"http://f2em.com/\">f2em.com, A Front End Engineer’s Manifesto</a> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/manifesto/#f2em.com%2C-a-front-end-engineer%E2%80%99s-manifesto\">#</a></h2> \n<p>If you’d like to see this talk live, let me know in the comments.</p> \n<p>The site is also available on <a href=\"https://github.com/zachleat/f2em.com\">GitHub</a>.</p> \n<h3 id=\"talk-description\">Talk Description <a class=\"direct-link\" href=\"http://www.zachleat.com/web/manifesto/#talk-description\">#</a></h3> \n<blockquote> \n <p>In the fast paced world of Front End Engineering, change reigns supreme. Dormant for years, the Browser Wars are back and have broken web development wide open. Led by competing vendors championing their own implementations of HTML5, CSS3, and other Web Standards, they’re unchaining us from the desktop computing environment. We’re seeing web browsers in our favorite Mobile Phones, E-Book Readers, and Tablet devices. Does your web site work with the Android Browser? On the iPad? How about the Kindle browser? IE9? Do you even know what version Google Chrome is on?</p> \n <p>As web programmers, how do we keep up with this blistering, nauseating pace while still taking time to improve our skills? I’ll go through a set of principles and guidelines I use to simplify the world of Front End Engineering. These criteria will help you write better future-compatible flux-resistant code. They will help you evaluate new toolsets, APIs, frameworks, and even file formats and codecs. They will improve the quality of your web sites and applications.</p> \n</blockquote> \n<p><em>Many thanks to <a href=\"http://twitter.com/natekoechley\">Nate Koechley</a>, who influenced some of this manifesto with his talk on <a href=\"http://www.youtube.com/watch?v=B9n3Fy7rJmA\">Professional Front End Engineering</a>, and to the countless other developers and designers who have made equally important community contributions.</em></p>","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"b70f1a3507eb131e3ee3357507a63545","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921763},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Obscurity, Security, and Captcha","link":"http://www.zachleat.com/web/obscurity-security-and-captcha/","description":"\n\t\t\t<p>On Ajaxian recently, there have been a few posts touting new and inventive replacements for the more traditional distorted and discolored “What does this image say?” Captcha gatekeeper for your web form. Of course these are all intended to provide a mechanism to tell the difference between an automated web bot that is spamming your web form and a human being.</p>\n<p>Obviously there are some accessibility issues with Captcha images, in that they are useless to those that are vision impaired. Some sites provide an alternate link to an audio file that speaks a random word that you must then enter into the form.</p>\n<p>One of the easiest ways to implement a Captcha on your site is to use the <a href=\"http://recaptcha.net/\">reCAPTCHA plugin</a>. But that’s not what I’m going to talk about here. What I want to talk about is these new methods being introduced.</p>\n<p>The first that was recently linked was <a href=\"http://ajaxian.com/archives/preventing-spam-with-drag-and-drop\">a method that involved drag and drop</a> to authenticate the user. Obviously this method is flawed, especially if the automated robot has access to fire JavaScript events. It does nothing but introduce a different door that the spammer may not have seen before. When this method gains any sort of popularity, or if a spammer decides to attack the site implementing this method specifically, it would not be difficult to bypass the Captcha. This is referred to in the computer world as “<a href=\"http://en.wikipedia.org/wiki/Security_through_obscurity\">Security through Obscurity</a>“. This is not good practice.</p>\n<p>The next post I read was <a href=\"http://almaer.com/blog/are-you-human\">regarding an implementation that presented the user with 8 boxes</a>, with one of those boxes colored differently with an invitation to find and click on the differently colored box. The was implemented by <a href=\"http://www.passpack.com/info/home/\">Passpack</a> (a password hosting service — should be focused on security, right?). Correctly me if I’m wrong, but how is this difficult for the Spammer at all? The whole point of a Captcha is to distort the text inside the image so much that the image can’t be read by an <a href=\"http://en.wikipedia.org/wiki/Optical_character_recognition\">Optical Character Recognition (OCR)</a> program. Basically, they’ve simplified it down to a one pixel image, which is an infinitely easier optical recognition problem. You don’t even have to recognize characters, you can just see if the pixel is a 1 or a 0. Forgive me for asking, but is that problem NP complete?</p>\n<p>I am all for having more friendly humane methods of Spam Bot detection. Just be wary of the methods you’re using. Are they actually secure, or are they just obscure?</p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"233537b8b138df982e3e213fcecd1938","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921761},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"A Sliver of What I Learned at JSConf 2013","link":"http://www.zachleat.com/web/jsconf/2013/","description":"<p><img src=\"https://www.zachleat.com/web/img/posts/jsconf/amelia.jpg\" alt=\"\" /></p> \n<p>I was lucky enough to snag a ticket to JSConf this year. As a reasonably self aware person, I know that I don’t multitask very well and decided not to use my laptop during the sessions. Instead, I decided to take notes.</p> \n<p>Without further adieu, here is a brain dump of things I found interesting from JSConf 2013.</p> \n<h2 id=\"the-evolution-of-language\">The Evolution of Language <a class=\"direct-link\" href=\"http://www.zachleat.com/web/jsconf/2013/#the-evolution-of-language\">#</a></h2> \n<p><a href=\"https://twitter.com/andrewdupont\">Andrew Dupont</a> gave a very interesting <a href=\"http://www.slideshare.net/savetheclocktower/learning-new-words-22244915\">talk on the evolution of (non-programming) languages</a> as it pertains to JavaScript. He made the point that words that express new concepts and new ideas are adopted much faster and easier than language that is a replacement (or arguably an improvement) for existing patterns. The subtext here was about classes in JavaScript but it reminded me of Responsive Images.</p> \n<p>There are (less than ideal) mechanisms (some less ideal than others) for working with Responsive Images today which probably plays a role in why we haven’t gotten any traction from Browser Vendors on the issue.</p> \n<h2 id=\"the-ui-of-privacy-and-webrtc\">The UI of Privacy and WebRTC <a class=\"direct-link\" href=\"http://www.zachleat.com/web/jsconf/2013/#the-ui-of-privacy-and-webrtc\">#</a></h2> \n<p>Laptops typically have a visual indicator to show the user that the webcam is currently active. Mobile devices do not have this feature. Why? (via <a href=\"https://twitter.com/rem/\">@rem</a>’s <a href=\"https://speakerdeck.com/rem/lessons-from-the-experimental-edge-of-technology\">talk on WebRTC</a>).</p> \n<p>This seems related to the problem in desktop web browsers of determining which of hundreds of tabs is playing audio. Google has <a href=\"http://thenextweb.com/google/2013/02/25/google-chrome-may-soon-get-audio-indicators-to-show-you-noisy-tabs-keep-them-open-when-memory-runs-out/\">attempted to solve this problem on Chrome</a>. But what about finding the tab that is currently broadcasting your webcam? Seems like it should be given some visual indicator in the browser.</p> \n<h2 id=\"software-is-literacy\">Software is Literacy <a class=\"direct-link\" href=\"http://www.zachleat.com/web/jsconf/2013/#software-is-literacy\">#</a></h2> \n<p><a href=\"https://twitter.com/carterrabasa\">Carter Rabasa</a> made the claim that <a href=\"http://crabasa.github.io/jsconf-2013/\">software is as important as literacy</a> (of course, I agree). Surprisingly, we have fewer people graduating with undergraduate degrees in Computer Science than we did ten years ago. Carter argued that the lack of good tooling and confusing unfriendly APIs cause frustration. Beginner Frustration is devastating to our field.</p> \n<p>If we can get young people excited about what they can build with only a few lines of code, it will change everything. Carter, as a technical evangelist for <a href=\"http://www.twilio.com/\">Twilio</a>, showed how to send or receive an SMS in your application with just a few lines of JavaScript.</p> \n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> twilio <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'twilio'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>accountSid<span class=\"token punctuation\">,</span> authToken<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>twilio<span class=\"token punctuation\">.</span><span class=\"token function\">sendSms</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><br>  to<span class=\"token operator\">:</span>   <span class=\"token string\">\"+15555551212\"</span><span class=\"token punctuation\">,</span> <br>  <span class=\"token keyword\">from</span><span class=\"token operator\">:</span> <span class=\"token string\">\"+15555551313\"</span><span class=\"token punctuation\">,</span> <br>  body<span class=\"token operator\">:</span> <span class=\"token string\">\"Hello world\"</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></br></br></br></br></br></code></pre> \n<p>Looking back on JSConf, I had a ton of fun playing around with the NodeCopters—and I’m a hardened, somewhat apathetic adult. Just imagine hosting NodeCopter events at schools for 7th or 8th graders. Kids would go mental writing code that controls a quadcopter.</p> \n<h2 id=\"a-more-natural-user-interface\">A More Natural User Interface <a class=\"direct-link\" href=\"http://www.zachleat.com/web/jsconf/2013/#a-more-natural-user-interface\">#</a></h2> \n<p><a href=\"https://twitter.com/bfarrellforever\">Ben Farrell</a>, dressed in <a href=\"https://twitter.com/kitesurfer/status/340538500317335552\">full Richard Simmons-esque workout gear</a> gave a <a href=\"https://github.com/bengfarrell/s2wPreso\">highly entertaining presentation</a> semi-successfully navigating through his slides using nothing but gestures. Imagine binding to a JavaScript event that triggers when your skeleton moves. His node.js package <a href=\"https://github.com/bengfarrell/nuimotion\">nuimotion</a> exposes this to you (requires additional software/hardware).</p> \n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> nuimotion <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"nuimotion\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>nuimotion<span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">[</span><br>  nuimotion<span class=\"token punctuation\">.</span>Events<span class=\"token punctuation\">.</span><span class=\"token constant\">USER_IS_OUT_OF_SCENE</span><span class=\"token punctuation\">,</span><br>  nuimotion<span class=\"token punctuation\">.</span>Events<span class=\"token punctuation\">.</span><span class=\"token constant\">USER_IS_VISIBLE</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><br> onEvent <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>nuimotion<span class=\"token punctuation\">.</span><span class=\"token function\">addGesture</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">[</span><br> nuimotion<span class=\"token punctuation\">.</span>Events<span class=\"token punctuation\">.</span>Gestures<span class=\"token punctuation\">.</span>Swipe<span class=\"token punctuation\">.</span>types<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">,</span><br> nuimotion<span class=\"token punctuation\">.</span>Events<span class=\"token punctuation\">.</span>Gestures<span class=\"token punctuation\">.</span>Swipe<span class=\"token punctuation\">.</span>types<span class=\"token punctuation\">.</span>right <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><br> onEvent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></br></br></br></br></br></br></br></br></br></br></code></pre> \n<p>In this same vein (but at a lower level), NodeCopter introduced me to the <a href=\"http://opencv.org/\">OpenCV library</a>. If you’re interested in doing face detection or interpreting the contours of an image, there is <a href=\"https://github.com/peterbraden/node-opencv\">an npm package for that</a>.</p> \n<pre class=\"language-js\"><code class=\"language-js\">cv<span class=\"token punctuation\">.</span><span class=\"token function\">readImage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./examples/test.jpg\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> im</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><br>  im<span class=\"token punctuation\">.</span><span class=\"token function\">detectObject</span><span class=\"token punctuation\">(</span>cv<span class=\"token punctuation\">.</span><span class=\"token constant\">FACE_CASCADE</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> faces</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><br>    <span class=\"token comment\">/* faces contains an array of the faces from the picture */</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></br></br></br></br></code></pre> \n<p>Ben taught me that there is a <a href=\"http://updates.html5rocks.com/2013/01/Voice-Driven-Web-Apps-Introduction-to-the-Web-Speech-API\"><code>continuous</code> option on Chrome’s speech recognition API</a>? This will allow the API to run continuously without stopping, even after the user has finished talking.</p> \n<h2 id=\"interactive-journalism\">Interactive Journalism <a class=\"direct-link\" href=\"http://www.zachleat.com/web/jsconf/2013/#interactive-journalism\">#</a></h2> \n<p>Go check out the New York Times interactive piece entitled <a href=\"http://www.nytimes.com/projects/2012/snow-fall/\"><em>Snow Fall</em></a>. Did you know that the author of this work, John Branch, won a pulitzer prize for this story? <a href=\"https://twitter.com/raydaly\">Ray Daly</a>’s talk on <a href=\"http://jsjournalism.com/jsconf/slides.html\">JavaScript Journalism</a> outlined the way journalism is evolving. Snow Fall was to journalism what <a href=\"http://www.thewildernessdowntown.com/\">The Wilderness Downtown</a> was to music videos.</p> \n<h2 id=\"other-excellent-presentations\">Other Excellent Presentations <a class=\"direct-link\" href=\"http://www.zachleat.com/web/jsconf/2013/#other-excellent-presentations\">#</a></h2> \n<p><a href=\"https://twitter.com/jedschmidt\">Jed Schmidt</a> on <a href=\"http://www.flickr.com/photos/tr4nslator/sets/72157633835243012/\"><em>Mass Hysteria, Clients &amp; Servers Living Together</em></a>: Jed put on a clinic about how to mix perfect comedic timing with good information. The winner of “Most Approachable Speaker JSConf 2013.”</p> \n<p><a href=\"https://twitter.com/unconed\">Steven Wittens</a> on <a href=\"http://acko.net/files/fullfrontal/fullfrontal/webglmath/online.html\"><em>Making WebGL Dance</em></a>: I had the pleasure of sitting and chatting with Steven before I knew that he was a presenter or even realized that he was THE <a href=\"http://acko.net/\">acko.net</a> guy (woops!). His slide deck was so beautiful that I heard audible gasps during Steven’s presentation. You’ll definitely want to revisit this video when it comes out. The winner of “If every teacher I’ve ever had was as good as this I’d be a genius JSConf 2013.”</p>","descriptionType":"html","feedId":12519,"bgimg":"https://www.zachleat.com/web/img/posts/jsconf/amelia.jpg","linkMd5":"988e92731f2b9b7581e6fcec0e704589","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn26@2020_2/2020/08/25/02-02-03-807_7a36f262c177c23d.webp","destWidth":612,"destHeight":338,"sourceBytes":134700,"destBytes":83872,"author":"","articleImgCdnMap":{"https://www.zachleat.com/web/img/posts/jsconf/amelia.jpg":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn26@2020_2/2020/08/25/02-02-03-807_7a36f262c177c23d.webp"},"publishedOrCreatedDate":1598320921764},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"A Historical Look at FOUT and FOIT","link":"http://www.zachleat.com/web/fout-foit-history/","description":"<p class=\"sub\"><em>May 9, 2019 updated with <code>font-display</code> support.</em></p> \n<p class=\"sub\"><em>January 15, 2020 updated with Edge Chromium information.</em></p> \n<p><em>Prerequisite: not sure what FOUT or FOIT are? Read the <a href=\"https://www.zachleat.com/web/webfont-glossary/#foit\">definitions on the Web Font Loading Glossary</a>.</em></p> \n<p>For a recent talk at <a href=\"http://css-minsk-js.by/\">CSS-Minsk-JS</a>, I did some research on the history of default font loading behaviors. I thought it was interesting, so I packaged it up below.</p> \n<video controls=\"\" preload=\"metadata\" src=\"https://www.zachleat.com/presentations/rocket-science/history1080p.mp4\" poster=\"https://www.zachleat.com/presentations/rocket-science/history-poster.png\" muted=\"\">\n  Sorry, your browser doesn't support embedded videos. Try \n <a href=\"https://www.zachleat.com/presentations/rocket-science/history1080p.mp4\">downloading it</a> instead. \n <img src=\"https://www.zachleat.com/presentations/rocket-science/history-poster.png\" alt=\"Modern day support: IE/Edge FOUT, everyone else FOITs with a 3 second timeout\"> </img>\n</video> \n<table> \n <thead> \n  <tr> \n   <th>Year</th> \n   <th class=\"nowrap\">Behavior</th> \n   <th>Description</th> \n  </tr> \n </thead> \n <tbody> \n  <tr> \n   <td>1997</td> \n   <td></td> \n   <td>CSS 2 <a href=\"https://www.w3.org/TR/WD-CSS2-971104/fonts.html#h-14.3.4\">Fonts</a> W3C Working Draft</td> \n  </tr> \n  <tr> \n   <td>1997</td> \n   <td class=\"yes\"><strong>FOUT</strong> <span style=\"font-size:90%\">(1st)</span></td> \n   <td>Internet Explorer (v4) added @font-face support, first introducing FOUT to the world.</td> \n  </tr> \n  <tr> \n   <td>1998</td> \n   <td></td> \n   <td>CSS 2 <a href=\"https://www.w3.org/TR/REC-CSS2/fonts.html\">Fonts</a> W3C Recommendation</td> \n  </tr> \n  <tr> \n   <td class=\"nowrap\">2008 <span class=\"hide-sm\"><abbr title=\"November\">Nov</abbr> 12</span></td> \n   <td class=\"yes\"><strong>FOIT</strong> <span style=\"font-size:90%\">(1st)</span></td> \n   <td>Safari (v3.2) added @font-face support, first introducing FOIT to the world.</td> \n  </tr> \n  <tr> \n   <td class=\"nowrap\">2008 <span class=\"hide-sm\"><abbr title=\"December\">Dec</abbr> 11</span></td> \n   <td class=\"emulate\"><strong>FOIT</strong> <span style=\"font-size:90%\">(2nd)</span></td> \n   <td>Chrome (v1.0) added @font-face support (was using WebKit 528)</td> \n  </tr> \n  <tr> \n   <td class=\"nowrap\">2009 <span class=\"hide-sm\"><abbr title=\"June\">Jun</abbr> 29</span></td> \n   <td class=\"emulate\"><strong>FOUT</strong> <span style=\"font-size:90%\">(2nd)</span></td> \n   <td>Firefox (v3.5) added @font-face support</td> \n  </tr> \n  <tr> \n   <td class=\"nowrap\">2009 <span class=\"hide-sm\"><abbr title=\"August\">Aug</abbr> 31</span></td> \n   <td><strong>FOUT</strong></td> \n   <td>Opera (v10.1) added support</td> \n  </tr> \n  <tr> \n   <td class=\"nowrap\">2010 <span class=\"hide-sm\"><abbr title=\"April\">Apr</abbr> 2</span></td> \n   <td><strong>FOIT</strong></td> \n   <td>Mobile Safari (v3.2) added @font-face support (SVG format only)</td> \n  </tr> \n  <tr> \n   <td class=\"nowrap\">2011 <span class=\"hide-sm\"><abbr title=\"March\">Mar</abbr> 8</span></td> \n   <td><strong>FOIT</strong></td> \n   <td>Mobile Safari (v4.3) added a few more popular @font-face formats</td> \n  </tr> \n  <tr> \n   <td class=\"nowrap\">2011 <span class=\"hide-sm\"><abbr title=\"March\">Mar</abbr> 22</span></td> \n   <td class=\"yes\"><strong>FOIT 3<abbr title=\"seconds\">s</abbr></strong> <span style=\"font-size:90%\">(1st)</span></td> \n   <td>Firefox (v4.0) switched to add a FOIT timeout, <em>the first browser to FOIT with a timeout</em>.</td> \n  </tr> \n  <tr> \n   <td class=\"nowrap\">2012 <span class=\"hide-sm\"><abbr title=\"November\">Nov</abbr></span></td> \n   <td class=\"emulate\"><strong>FOIT 3<abbr title=\"seconds\">s</abbr></strong> <span style=\"font-size:90%\">(2nd)</span></td> \n   <td>Opera (v12.1) switched to add a FOIT timeout</td> \n  </tr> \n  <tr> \n   <td class=\"nowrap\">2013 <span class=\"hide-sm\"><abbr title=\"July\">Jul</abbr></span></td> \n   <td><strong>FOIT</strong></td> \n   <td>Chrome (v28) switched to the Blink rendering engine, keeping the FOIT</td> \n  </tr> \n  <tr> \n   <td class=\"nowrap\">2013 <span class=\"hide-sm\"><abbr title=\"July\">Jul</abbr> 2</span></td> \n   <td><strong>FOIT</strong></td> \n   <td>Opera (v15) switched to the Blink rendering engine, switching from FOIT with a timeout to FOIT without a timeout.</td> \n  </tr> \n  <tr> \n   <td class=\"nowrap\">2014 <span class=\"hide-sm\">May</span></td> \n   <td><strong>FOIT 3<abbr title=\"seconds\">s</abbr></strong></td> \n   <td>Chrome (v35) switched to add a FOIT timeout</td> \n  </tr> \n  <tr> \n   <td class=\"nowrap\">2014 <span class=\"hide-sm\"><abbr title=\"June\">Jun</abbr></span></td> \n   <td><strong>FOIT 3<abbr title=\"seconds\">s</abbr></strong></td> \n   <td>Opera (v22) followed Blink and added a FOIT timeout (again)</td> \n  </tr> \n  <tr> \n   <td class=\"nowrap\">2015 <span class=\"hide-sm\"><abbr title=\"March\">Mar</abbr></span></td> \n   <td><strong>FOUT</strong></td> \n   <td>Edge (v12) released, maintaining IE’s beautiful default FOUT behavior.</td> \n  </tr> \n  <tr> \n   <td class=\"nowrap\">2016 <span class=\"hide-sm\"><abbr title=\"September\">Sep</abbr> 20</span></td> \n   <td><strong>FOIT 3<abbr title=\"seconds\">s</abbr></strong></td> \n   <td>Safari (v10) finally added a FOIT timeout, almost eight full years after introducing FOIT to the world.</td> \n  </tr> \n  <tr> \n   <td class=\"nowrap\">2017 <span class=\"hide-sm\"><abbr title=\"July\">Jul</abbr> 24</span></td> \n   <td class=\"yes\"><strong class=\"nowrap\">font-display</strong> (1st)</td> \n   <td>Chrome (v60) was first to implement <code>font-display</code>, allowing developers control over default FOUT and FOIT behavior with a CSS descriptor.</td> \n  </tr> \n  <tr> \n   <td class=\"nowrap\">2017 <span class=\"hide-sm\"><abbr title=\"August\">Aug</abbr> 8</span></td> \n   <td class=\"emulate\"><strong class=\"nowrap\">font-display</strong> (2nd)</td> \n   <td>Opera (v47) was second to add support for <code>font-display</code>.</td> \n  </tr> \n  <tr> \n   <td class=\"nowrap\">2018 <span class=\"hide-sm\"><abbr title=\"January\">Jan</abbr> 22</span></td> \n   <td><strong class=\"nowrap\">font-display</strong></td> \n   <td>Firefox (v58) adds <code>font-display</code> support</td> \n  </tr> \n  <tr> \n   <td class=\"nowrap\">2018 <span class=\"hide-sm\"><abbr title=\"March\">Mar</abbr> 28</span></td> \n   <td><strong class=\"nowrap\">font-display</strong></td> \n   <td>Safari (v11.1) adds <code>font-display</code> support</td> \n  </tr> \n  <tr> \n   <td class=\"nowrap\">2018 <span class=\"hide-sm\"><abbr title=\"December\">Dec</abbr> 29</span></td> \n   <td><strong class=\"nowrap\">font-display</strong></td> \n   <td>Samsung Internet (v8.2) adds <code>font-display</code> support</td> \n  </tr> \n  <tr> \n   <td class=\"nowrap\">2020 <span class=\"hide-sm\"><abbr title=\"January\">Jan</abbr> 15</span></td> \n   <td><strong>FOIT 3<abbr title=\"seconds\">s</abbr></strong></td> \n   <td>Edge (v79) switches to Chromium and the now-cross browser standard of FOIT with a timeout is complete.</td> \n  </tr> \n  <tr> \n   <td class=\"nowrap\">2020 <span class=\"hide-sm\"><abbr title=\"January\">Jan</abbr> 15</span></td> \n   <td><strong class=\"nowrap\">font-display</strong></td> \n   <td>Edge (v79) switches to Chromium and gets <code>font-display</code> support</td> \n  </tr> \n </tbody> \n</table> \n<p>Browsers implementing a FOUT/FOIT/FOIT-3s behavior first (trailblazers) are denoted as (1st) above. Browsers second to implement an existing behavior (two makes a crowd) are denoted as (2nd) above.</p> \n<p>This list is limited to stable releases, and does not include information about dev channel/beta/technology previews.</p> \n<h2 id=\"highlights\">Highlights <a class=\"direct-link\" href=\"http://www.zachleat.com/web/fout-foit-history/#highlights\">#</a></h2> \n<ul> \n <li><del>Microsoft’s adherence to FOUT. It’s the most reliable way to render web fonts without the perceived performance penalties and race conditions that come with FOIT so honestly, I admire this. They were first and they’ve stuck to their guns.</del></li> \n <li>Opera has been the most volatile of the bunch, mostly because of the unfortunately timing of their rendering engine switch.</li> \n <li>I was disappointed at how much influence WebKit/Safari’s choices had on other browsers. I know how much of a pain point the default FOIT behavior is for developers and so it’s been a little disheartening to read those early bug tracker discussions. I’m glad they’ve added a FOIT timeout but we need a cross-browser way to easily control FOIT and FOUT—we need wider support for the <code>font-display</code> descriptor.</li> \n</ul>","descriptionType":"html","feedId":12519,"bgimg":"https://www.zachleat.com/presentations/rocket-science/history-poster.png","linkMd5":"ee47f768b9634d20df3225b052a086b8","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn86@2020_2/2020/08/25/02-02-02-861_8568d72b52c6eb43.webp","destWidth":1410,"destHeight":821,"sourceBytes":141434,"destBytes":38712,"author":"","articleImgCdnMap":{"https://www.zachleat.com/presentations/rocket-science/history-poster.png":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn86@2020_2/2020/08/25/02-02-02-861_8568d72b52c6eb43.webp"},"publishedOrCreatedDate":1598320921769},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Bernie Tweets","link":"http://www.zachleat.com/web/bernie-tweets/","description":"\n\t\t\t<p>Of course Bernie would print a tweet. Of course. He probably went to a local Kinkos/Fedex himself and made a giant copy of Donald’s tweet to use as a prop for a Senate hearing.</p>\n<blockquote class=\"twitter-tweet\" data-cards=\"hidden\" data-lang=\"en\"><p lang=\"en\" dir=\"ltr\">Bernie just printed out a gigantic Trump tweet and brought it to the Senate floor <a href=\"https://t.co/kl9QbohqGO\">https://t.co/kl9QbohqGO</a> <a href=\"https://t.co/nNrq4JlZZT\">pic.twitter.com/nNrq4JlZZT</a></p>&mdash; Gizmodo (@Gizmodo) <a href=\"https://twitter.com/Gizmodo/status/816743891118551050\">January 4, 2017</a></blockquote>\n<p>But now, using the magic of Technology™ you can make your own Bernie-style poster tweet with <a href=\"https://www.zachleat.com/bernie/\">Bernie Tweets™</a>.</p>\n<p><a href=\"https://www.zachleat.com/bernie/zachleat/785495065913274369\" class=\"exempt\"><img src=\"https://www.zachleat.com/web/img/posts/bernie-tweets/original.jpg\" alt=\"Screenshot of Bernie Tweets\" class=\"primary\"></a></p>\n<p>You can click anywhere on the page to add your own tweet. Or you can just modify the URL parameters, like this:</p>\n<p style=\"font-size: 80%\"><a href=\"https://twitter.com/realDonaldTrump/status/266038556504494082\" class=\"break\">https://twitter.com/<strong>realDonaldTrump</strong>/status/<strong>266038556504494082</strong></a> transforms to <a href=\"https://zachleat.com/bernie/realDonaldTrump/266038556504494082\" class=\"break\">https://zachleat.com/bernie/<strong>realDonaldTrump</strong>/<strong>266038556504494082</strong></a> or <a href=\"https://zachleat.com/bernie/realDonaldTrump/status/266038556504494082\" class=\"break\">https://zachleat.com/bernie/<strong>realDonaldTrump</strong>/status/<strong>266038556504494082</strong></a></p>\n<p><a href=\"https://www.zachleat.com/bernie/realDonaldTrump/266038556504494082\" class=\"exempt\"><img src=\"https://www.zachleat.com/web/img/posts/bernie-tweets/sample1.jpg\" alt=\"A @realDonaldTrump tweet on Bernie Tweets\" class=\"primary\"></a></p>\n<p>Silly side projects keep us sane. 😎</p>\n<div class=\"retweettoshare\">\n\t<h3 class=\"retweettoshare_title\">Retweet to share this post</h3>\n\t<div class=\"retweettoshare_widget\">\n\t\t<blockquote class=\"twitter-tweet\" data-conversation=\"none\" data-cards=\"hidden\" data-lang=\"en\"><p lang=\"en\" dir=\"ltr\">★ Bernie Tweets: <a href=\"https://t.co/JI1Fn6Z3qk\">https://t.co/JI1Fn6Z3qk</a><br><br>Put your own tweet on Bernie’s Senate floor visual aid.<br><br>See it at: <a href=\"https://t.co/nZSYVjVOhK\">https://t.co/nZSYVjVOhK</a> <a href=\"https://t.co/EeBNYXvdds\">pic.twitter.com/EeBNYXvdds</a></p>&mdash; Zach Leatherman (@zachleat) <a href=\"https://twitter.com/zachleat/status/848259464847396869\">April 1, 2017</a></blockquote>\n\t</div>\n</div>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"https://www.zachleat.com/web/img/posts/bernie-tweets/original.jpg","linkMd5":"2cac531621dc57b5ce2b78a65f5cb1ab","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx/cdn54@2020_5/2020/08/25/02-02-03-102_46904f60f857ef0a.webp","destWidth":1600,"destHeight":1053,"sourceBytes":394853,"destBytes":178730,"author":"","articleImgCdnMap":{"https://www.zachleat.com/web/img/posts/bernie-tweets/original.jpg":"https://cdn.jsdelivr.net/gh/myreaderx/cdn54@2020_5/2020/08/25/02-02-03-102_46904f60f857ef0a.webp","https://www.zachleat.com/web/img/posts/bernie-tweets/sample1.jpg":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn6@2020_6/2020/08/25/02-02-11-623_b330b1841044d9fc.webp"},"publishedOrCreatedDate":1598320921767},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Eleventy Documentation has moved to 11ty.dev","link":"http://www.zachleat.com/web/11ty-dev/","description":"\n\t\t\t\t<p><em>This content lives somewhere else. It was originally posted at: <a href=\"https://www.11ty.dev/news/moving-house/\">https://www.11ty.dev/news/moving-house/</a></em></p>\n\t\t\t\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"a11cd016e9994b08e3e26b7b23347058","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921772},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Render Snarky Comments in Comic Sans","link":"http://www.zachleat.com/web/snarky/","description":"<p>I had the pleasure of attending an <a href=\"https://indieweb.org/\">IndieWebCamp</a> before the amazing <a href=\"https://beyondtellerrand.com/\">Beyond Tellerrand</a> conference a few weeks back and I’m still <a href=\"https://twitter.com/zachleat/status/1127489938448977920\">buzzing</a> from the experience.</p> \n<p>I can’t really express how meaningful this experience was to me. An antithesis to the rat race of social media, IndieWebCamp was a roomful of kindred spirits that care about the web and their own websites and hosting their own content. It felt like the Google Reader days again, when everyone was blogging and writing on their own sites. I dunno if you can tell but I loved it. If you get the chance to attend one of these events, jump on it (I really want to run one in Omaha 👀).</p> \n<h2 id=\"webmentions%2C-disqus%2C-wordpress\">Webmentions, Disqus, Wordpress <a class=\"direct-link\" href=\"http://www.zachleat.com/web/snarky/#webmentions%2C-disqus%2C-wordpress\">#</a></h2> \n<p>At the event I got a working example of <a href=\"https://indieweb.org/Webmention\">webmentions</a> going on my personal web site. I already had <a href=\"https://www.zachleat.com/web/disqus-import/\">a static copy of my old Disqus comments that I’d exported</a> (which included copies of old Wordpress comments that I’d imported into Disqus 😎).</p> \n<p>Webmentions are made possible for static web sites when you use <a href=\"https://webmention.io/\">webmention.io</a>, a service to log incoming entries. Another service, <a href=\"https://brid.gy/\">Bridgy</a>, crawls social networking sites for mentions of my site and sends those over to <a href=\"http://webmention.io/\">webmention.io</a> automatically.</p> \n<p>If I’ve already lost you, luckily <a href=\"https://mxb.dev/blog/using-webmentions-on-static-sites/\">Max Böck wrote up a lovely tutorial on how to do this using Eleventy</a> (his site is amazing, too). Max also created an <a href=\"https://github.com/maxboeck/eleventy-webmentions\"><code>eleventy-webmentions</code> starter project</a> which has all the code for this. Hopefully we can get some form of this merged back into the upstream <code>eleventy-base-blog</code> too.</p> \n<p>You can see an example of how the webmentions look on my site at one of my recent blog posts: <a href=\"https://www.zachleat.com/web/google-fonts-display/#webmentions\">Google Fonts is Adding <code>font-display</code></a>.</p> \n<h2 id=\"sentiment-analysis\">Sentiment Analysis <a class=\"direct-link\" href=\"http://www.zachleat.com/web/snarky/#sentiment-analysis\">#</a></h2> \n<p>Hosting my own content and comments allows me to be a bit more creative with it. So I decided to take this a step further and have <a href=\"https://twitter.com/zachleat/status/1132727088031653891\">a little fun</a> with negative comments.</p> \n<p>First, how do we find out if a comment is negative? Let’s try to use <a href=\"https://www.npmjs.com/package/natural\">Natural, a plugin on npm</a>. I added a Liquid filter to my <a href=\"https://www.11ty.io/docs/config/\">Eleventy configuration file</a> to analyze text and spit out a sentiment value. <code>0</code> is neutral, <code>&lt; 0</code> is negative, and <code>&gt; 0</code> is positive. Note that this natural language processing isn’t 100% (sometimes I’ll get a false positive) but this is just a fun demo on my site.</p> \n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> Natural <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'natural'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">const</span> analyze <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Natural<span class=\"token punctuation\">.</span>SentimentAnalyzer</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"English\"</span><span class=\"token punctuation\">,</span> Natural<span class=\"token punctuation\">.</span>PorterStemmer<span class=\"token punctuation\">,</span> <span class=\"token string\">\"afinn\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>module<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">exports</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">eleventyConfig</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    eleventyConfig<span class=\"token punctuation\">.</span><span class=\"token function\">addLiquidFilter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"getSentimentValue\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">content</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> content <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br> <span class=\"token keyword\">const</span> tokenizer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Natural<span class=\"token punctuation\">.</span>WordTokenizer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br> <span class=\"token keyword\">return</span> analyze<span class=\"token punctuation\">.</span><span class=\"token function\">getSentiment</span><span class=\"token punctuation\">(</span>tokenizer<span class=\"token punctuation\">.</span><span class=\"token function\">tokenize</span><span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br> <span class=\"token punctuation\">}</span><br><br> <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span><br> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></br></br></br></br></br></br></br></br></br></br></br></br></code></pre> \n<p>And then in my Liquid template, I use this integer value to add a <code>static-comments-reply-salty</code> class:</p> \n<pre><code>{% assign sentiment = webmention.content.text | getSentimentValue %}\n&lt;li class=\"static-comments-reply{% if sentiment &lt; 0 %} static-comments-reply-salty{% endif %}\"&gt;\n    …\n</code></pre> \n<p>And then in my stylesheet, I use this class to opt-into a lovely stack of Comic Sans, Chalkboard, and of course a fantasy fallback for kicks:</p> \n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.static-comments-reply-salty</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> Comic Sans MS<span class=\"token punctuation\">,</span> Chalkboard SE<span class=\"token punctuation\">,</span> fantasy<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span></br></br></code></pre> \n<p>As extra credit, I also used the <a href=\"https://www.npmjs.com/package/random-case\"><code>random-case</code> plugin</a> to <code>mODifY tHe TeXt</code> (at <a href=\"https://twitter.com/DavidDarnes/status/1132732852196511744\">David Darnes excellent recommendation</a>).</p> \n<h2 id=\"how-does-it-look%3F\">How does it look? <a class=\"direct-link\" href=\"http://www.zachleat.com/web/snarky/#how-does-it-look%3F\">#</a></h2> \n<p>This was taken from a real comment on my site.</p> \n<h3 id=\"before%3A\">Before: <a class=\"direct-link\" href=\"http://www.zachleat.com/web/snarky/#before%3A\">#</a></h3> \n<div class=\"livedemo\" data-demo-label=\"Snarky Comment\"> \n <ol class=\"static-comments static-comments-webmentions\"> \n  <li class=\"static-comments-reply\"> \n   <div class=\"static-comments-hed\"> \n    <img src=\"https://www.gravatar.com/avatar/38e4a1731159a21bbce9890693c81380?d=mm&amp;s=60\" class=\"static-comments-img\"> <h3 class=\"static-comments-title cased\">Jeez Louise <span class=\"tag-inline\" title=\"Readonly Comment Archived from Disqus (Disqus has been removed from this site)\">Disqus</span></h3> <em class=\"static-comments-date\"><a>22 Feb 2015 at 12:03PM</a></em> </img>\n   </div> \n   <div class=\"static-comments-msg\">\n    <p>Hey man, you need to fix this or take it down. Don't you see how many people are complaining that it doesn't work?</p>\n   </div> \n   <ol> \n   </ol></li> \n </ol> \n</div> \n<h3 id=\"after%3A\">After: <a class=\"direct-link\" href=\"http://www.zachleat.com/web/snarky/#after%3A\">#</a></h3> \n<div class=\"livedemo\" data-demo-label=\"Snarky Comment\"> \n <ol class=\"static-comments static-comments-webmentions\"> \n  <li class=\"static-comments-reply static-comments-reply-salty\"> \n   <div class=\"static-comments-hed\"> \n    <img src=\"https://www.gravatar.com/avatar/38e4a1731159a21bbce9890693c81380?d=mm&amp;s=60\" class=\"static-comments-img\"> <h3 class=\"static-comments-title cased\">Jeez Louise <span class=\"tag-inline\" title=\"Readonly Comment Archived from Disqus (Disqus has been removed from this site)\">Disqus</span></h3> <em class=\"static-comments-date\"><a>22 Feb 2015 at 12:03PM</a></em> </img>\n   </div> \n   <div class=\"static-comments-msg\">\n    <p>heY mAN, yOu nEEd TO fix ThIs Or TaKE IT Down. don'T YoU SeE hOw MAnY PeOplE arE cOmPlaIning thAt iT DOEsN't WorK?</p>\n   </div> \n   <ol> \n   </ol></li> \n </ol> \n</div> \n<p>This isn’t intended to be a hot-take on Comic Sans. Instead it’s meant to change the tone of the negativity to make it sound like a clown is yelling at a kid’s birthday party.</p>","descriptionType":"html","feedId":12519,"bgimg":"https://www.gravatar.com/avatar/38e4a1731159a21bbce9890693c81380?d=mm&s=60","linkMd5":"e85cd0f60547fc26728ee6d2838b955b","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn18@2020_6/2020/08/25/02-02-02-000_9e05629fc422fe83.webp","destWidth":60,"destHeight":60,"sourceBytes":1186,"destBytes":370,"author":"","articleImgCdnMap":{"https://www.gravatar.com/avatar/38e4a1731159a21bbce9890693c81380?d=mm&s=60":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn18@2020_6/2020/08/25/02-02-02-000_9e05629fc422fe83.webp"},"publishedOrCreatedDate":1598320921772},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Performance Caveat with jQuery Selectors and Live Events","link":"http://www.zachleat.com/web/performance-caveat-with-jquery-selectors-and-live-events/","description":"<p><em>Prerequisite: Knowledge/Experience with <a href=\"http://docs.jquery.com/Events/live\">jQuery Live Events</a> (new in jQuery 1.3), and the concept of <a href=\"http://icant.co.uk/sandbox/eventdelegation/\">Event Delegation</a>.</em></p> \n<p>When developing on the front end, it’s easy to prioritize correctness over performance. Performance is the step child that gets lost while you’re pulling your hair out worrying about cross browser compatibility. It’s very important to regularly benchmark your JavaScript code, using a <a href=\"http://getfirebug.com/js.html\">profiler</a> or some form of benchmarking code paired with a cross browser logging utility (see <a href=\"http://getfirebug.com/lite.html\">Firebug Lite</a>, <a href=\"http://developer.yahoo.com/yui/logger/\">YUI Logger</a>, or <a href=\"http://log4javascript.org/\">log4javascript</a>).</p> \n<p>Event delegation is a great way to program for performance. The <code>live</code> jQuery method was a great addition to the jQuery core, it makes event delegation really easy (see also the <code>closest</code> method). Unfortunately, it isn’t quite what I expected.</p> \n<p>For example, say you have a page containing approximately 500 custom tooltip components on it (not typical, but stick with me, this is to prove a point). How might one go about adding a simple live event to activate each tooltip when the user hovers over it?</p> \n<pre><code>$('span.myTooltip').live('mouseover', function(event) {\n    // activate tooltip\n});\n</code></pre> \n<p>See the problem? jQuery will actually run the selector on the document, resulting in unnecessary overhead. jQuery is only assigning a single event handler to top level of the document, why does it need to know what nodes it will be binding to before assigning the callback?</p> \n<p>What can we do? Let’s create a jQuery function, instead of a method, so it won’t query the document. Try this on for size:</p> \n<pre><code>$.live = function(selector, type, fn) {\n    var r = $([]);\n    r.selector = selector;\n    if(type &amp;&amp; fn) {\n        r.live(type, fn);\n    }\n    return r;\n};\n</code></pre> \n<h2 id=\"usage\">Usage <a class=\"direct-link\" href=\"http://www.zachleat.com/web/performance-caveat-with-jquery-selectors-and-live-events/#usage\">#</a></h2> \n<pre><code>// Single event type\n$.live('span.myTooltip', 'mouseover', function(event) {\n    // activate tooltip\n});\n \n// Multiple event types (you can call the jQuery live method on the return value from the function)\n$.live('span.myTooltip')\n    .live('mouseover', function(event) {\n        // activate tooltip\n    })\n    .live('mouseout', function(event) {\n        // deactivate tooltip\n    });\n</code></pre> \n<p>Also, as a side note, keep in mind that jQuery <code>live</code> <strong>doesn’t</strong> support space separated events, like <code>bind</code> does.</p> \n<pre><code>// Will not work.\n$('span.myTooltip').live('mouseover mouseout', function() {});\n</code></pre> \n<p>Have fun!</p>","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"af5aefc8113b073ebfc174e39fb54ec4","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921762},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"The Perfect GIF","link":"http://www.zachleat.com/web/the-perfect-gif/","description":"<p>Last year at <a href=\"http://barcampomaha.org/\">Barcamp Omaha</a>, I did a tongue-in-cheek talk on <a href=\"https://www.zachleat.com/web/impostor/\">Impostor Syndrome</a>. This year, I was floundering on picking a topic for Barcamp—until <a href=\"https://twitter.com/snekse\">Derek Eskens</a> suggested I do a talk on GIFs. With only two days to prepare, I think it turned out fairly well.</p> \n<img src=\"https://www.zachleat.com/web/img/posts/perfectgif.jpg\"> <p>In the talk I discuss: pronunciation, GIF sources, how to create your own GIFs, and GIF search and workflow. If you listen closely, you can hear the audience (playfully) boo when I finally pronounce GIF for the first time in the talk.</p> \n <div class=\"fluid-width-video-wrapper\">\n  <iframe src=\"https://www.youtube.com/embed/6nGxIBMMaFw\" frameborder=\"0\" allowfullscreen=\"\"></iframe>\n </div> <p><em><a href=\"https://www.youtube.com/watch?v=6nGxIBMMaFw\">Watch on YouTube</a></em></p> <p>I did not post slides for this talk, given the loss in fidelity with an unanimated deck. But I’ve included below the list of referenced resources.</p> <h2 id=\"sources\">Sources <a class=\"direct-link\" href=\"http://www.zachleat.com/web/the-perfect-gif/#sources\">#</a></h2> \n <ul> \n  <li><a href=\"http://bukk.it/\">bukk.it, @beep’s Repository of GIFs</a></li> \n  <li><a href=\"http://giphy.com/\">Giphy</a></li> \n  <li><a href=\"http://www.reddit.com/r/gifs\">/r/gifs on Reddit</a></li> \n  <li><a href=\"https://twitter.com/gifs\">The Ministry of GIFs on Twitter</a></li> \n </ul> <h2 id=\"utilities\">Utilities <a class=\"direct-link\" href=\"http://www.zachleat.com/web/the-perfect-gif/#utilities\">#</a></h2> \n <ul> \n  <li><a href=\"http://www.cockos.com/licecap/\">LICEcap</a> to create GIFs</li> \n  <li><a href=\"http://gifwit.com/\">gifwit</a> to catalog/search GIFs</li> \n  <li><a href=\"http://hoverzoom.net/\">HoverZoom</a> for easy inline previews of animated GIFs (not mentioned in the talk, but still worth including).</li> \n </ul> <h2 id=\"animated-gifs-used-(in-order-of-appearance)\">Animated GIFs used (in order of appearance) <a class=\"direct-link\" href=\"http://www.zachleat.com/web/the-perfect-gif/#animated-gifs-used-(in-order-of-appearance)\">#</a></h2> \n <ul> \n  <li><a href=\"https://dl.dropboxusercontent.com/u/361291/gifs-presentation/encyclopedia.gif\">Encyclopedia</a></li> \n  <li><a href=\"https://dl.dropboxusercontent.com/u/361291/gifs/wrong.gif\">Helicopter Upside Down</a></li> \n  <li><a href=\"https://dl.dropboxusercontent.com/u/361291/gifs/sad.gif\">Sad Kid from Looper</a></li> \n  <li><a href=\"https://dl.dropboxusercontent.com/u/361291/gifs/sir-tim-berners-lee.gif\">Sir Tim Berners Lee</a></li> \n  <li><a href=\"https://dl.dropboxusercontent.com/u/361291/gifs/magic-confetti.gif\">Magic Confetti</a></li> \n  <li><a href=\"https://dl.dropboxusercontent.com/u/361291/gifs/history.gif\">History Channel Dude</a></li> \n  <li><a href=\"https://dl.dropboxusercontent.com/u/361291/gifs/upset.gif\">Gorilla Flying Lawnmower</a></li> \n  <li><a href=\"https://dl.dropboxusercontent.com/u/361291/gifs/baby.gif\">Baby Sliding on Head</a></li> \n  <li><a href=\"https://dl.dropboxusercontent.com/u/361291/gifs/belieber.gif\">Belieber at Computer</a></li> \n  <li><a href=\"https://dl.dropboxusercontent.com/u/361291/gifs/awkwalk.gif\">Awkward Lion Walk with Tire</a></li> \n  <li><a href=\"https://dl.dropboxusercontent.com/u/361291/gifs/pronounce-gif.gif\">Pronounce GIF</a></li> \n  <li><a href=\"https://dl.dropboxusercontent.com/u/361291/gifs/standoff.gif\">Standoff</a></li> \n  <li><a href=\"https://dl.dropboxusercontent.com/u/361291/gifs/doctor.gif\">Doctor Who</a></li> \n  <li><a href=\"https://dl.dropboxusercontent.com/u/361291/gifs/run.gif\">Batman and Robin Running</a></li> \n  <li><a href=\"https://dl.dropboxusercontent.com/u/361291/gifs/wat.gif\">Bubbles from Trailer Park Boys</a></li> \n  <li><a href=\"https://dl.dropboxusercontent.com/u/361291/gifs/the-professional.gif\">The Professional</a></li> \n  <li><a href=\"https://dl.dropboxusercontent.com/u/361291/gifs/confusion.gif\">Confused Dogs</a></li> \n  <li><a href=\"https://dl.dropboxusercontent.com/u/361291/gifs/according-to-plan.gif\">Dinosaur Plotting</a></li> \n  <li><a href=\"https://dl.dropboxusercontent.com/u/361291/gifs/execution-is-everything.gif\">Bike Jump Over Van</a></li> \n  <li><a href=\"https://dl.dropboxusercontent.com/u/361291/gifs/boxing.gif\">Kid Boxes with Dad</a></li> \n  <li><a href=\"https://dl.dropboxusercontent.com/u/361291/gifs/thankyounotes.gif\">Roots band member tries not to smile</a></li> \n  <li><a href=\"https://dl.dropboxusercontent.com/u/361291/gifs/umad.gif\">Ron from Parks and Rec tries not to laugh</a></li> \n  <li><a href=\"https://dl.dropboxusercontent.com/u/361291/gifs/camera.gif\">Shy Cameras</a></li> \n  <li><a href=\"https://dl.dropboxusercontent.com/u/361291/gifs/herd.gif\">Flamingo Herd</a></li> \n  <li><a href=\"https://dl.dropboxusercontent.com/u/361291/gifs/gif.gif\">Sick GIF, Bro</a></li> \n  <li><a href=\"https://dl.dropboxusercontent.com/u/361291/gifs/regret.gif\">King of the Hill Regret</a></li> \n  <li><a href=\"https://dl.dropboxusercontent.com/u/361291/gifs/nebraska.gif\">The Walking Dead comments on Nebraska</a></li> \n  <li><a href=\"https://dl.dropboxusercontent.com/u/361291/gifs/notme.gif\">The Office Denial</a></li> \n  <li><a href=\"https://dl.dropboxusercontent.com/u/361291/gifs/tanksforallthefish.gif\">Tanks for all the Fish</a></li> \n  <li><a href=\"https://dl.dropboxusercontent.com/u/361291/gifs/doll-head-monkey.gif\">Monkey Doll Face</a></li> \n  <li><a href=\"https://dl.dropboxusercontent.com/u/361291/gifs/slow-clap.gif\">Dawson Slow Clap</a></li> \n </ul> </img>","descriptionType":"html","feedId":12519,"bgimg":"https://www.zachleat.com/web/img/posts/perfectgif.jpg","linkMd5":"f9924047e81fed16f9253b9188a1e21c","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn61@2020_5/2020/08/25/02-02-03-947_3962c1ac02b6f5d8.webp","destWidth":640,"destHeight":480,"sourceBytes":88213,"destBytes":54750,"author":"","articleImgCdnMap":{"https://www.zachleat.com/web/img/posts/perfectgif.jpg":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn61@2020_5/2020/08/25/02-02-03-947_3962c1ac02b6f5d8.webp"},"publishedOrCreatedDate":1598320921765},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Better @font-face with Font Load Events—SmashingConf Whistler","link":"http://www.zachleat.com/web/smashingconf/2014/","description":"<img src=\"https://www.zachleat.com/web/img/posts/whistler-gondola.jpg\" alt=\"Whistler Gondola View\"> <p>Of all the talks I’ve given thus far in my career, I think this one is the one I’m most proud of. The conference was fun: the attendees were lively and attentive, the location was beautiful (after it quit raining), and <a href=\"https://twitter.com/smashingmag\">Vitaly</a> sprinkled a bunch of easter eggs into the conference which always adds a little something extra. A huge thank you to <a href=\"https://twitter.com/tkadlec\">Tim Kadlec</a> for inviting me to speak.</p> \n <ul> \n  <li><a href=\"http://smashingconf.com/whistler-2014/\">SmashingConf Whistler 2014</a></li> \n  <li><a href=\"http://smashingconf.com/whistler-2014/speakers/zach-leatherman\">SmashingConf Whistler 2014 Direct Session Link</a></li> \n </ul> <h2 id=\"video\">Video <a class=\"direct-link\" href=\"http://www.zachleat.com/web/smashingconf/2014/#video\">#</a></h2> \n <figure> \n  <div class=\"fullwidth\">\n   <div class=\"fluid-width-video-wrapper\">\n    <iframe src=\"https://player.vimeo.com/video/118908533?title=0&amp;byline=0&amp;portrait=0\" frameborder=\"0\" webkitallowfullscreen=\"\" mozallowfullscreen=\"\" allowfullscreen=\"\"></iframe>\n   </div>\n  </div> \n  <figcaption>\n   <a href=\"https://vimeo.com/118908533\">SmashingConf Whistler — Zach Leatherman on Better @font-face with Font Load Events</a> from \n   <a href=\"https://vimeo.com/smashingmagazine\">Smashing Magazine</a> on \n   <a href=\"https://vimeo.com/\">Vimeo</a>.\n  </figcaption> \n </figure> <p>Skip to 3:43 to see me attempt to trick a crowd of 300 people into doing the flashback arm waving sequence from Wayne’s World, something I decided would be okay to try after seeing the responses to <a href=\"https://twitter.com/zachleat/status/542473405803790336\">this tweet</a>.</p> <h2 id=\"slides-on-speaker-deck-(203-slides)\"><a href=\"https://speakerdeck.com/zachleat/remodeling-at-font-face\">Slides on Speaker Deck</a> (203 slides) <a class=\"direct-link\" href=\"http://www.zachleat.com/web/smashingconf/2014/#slides-on-speaker-deck-(203-slides)\">#</a></h2> <h2 id=\"links-(in-order-of-slide-appearance)\">Links (in order of slide appearance) <a class=\"direct-link\" href=\"http://www.zachleat.com/web/smashingconf/2014/#links-(in-order-of-slide-appearance)\">#</a></h2> \n <ul> \n  <li>OpenType Format advanced typographic features: <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/font-feature-settings\"><code>font-feature-settings</code></a></li> \n  <li><a href=\"http://stateofwebtype.com/\">State of Web Type</a>, compatibility tables for web typography.</li> \n  <li><a href=\"https://groups.google.com/a/chromium.org/forum/#!topic/chromium-dev/j27Ou4RtvQI/discussion\">WOFF2 Google Fonts Size Comparison</a></li> \n  <li>Use <a href=\"http://www.fontsquirrel.com/tools/webfont-generator\">FontSquirrel WebFont Generator for Custom Subsetting</a></li> \n  <li><a href=\"http://www.w3.org/TR/css-font-loading/\">CSS Font Loading API</a></li> \n  <li><a href=\"https://github.com/zachleat/fontfaceonload\">FontFaceOnload</a>, a polyfill for font load events.</li> \n  <li><a href=\"http://fontfamily.io/\">Font Family Reunion</a>, compatibility tables for default installed fonts.</li> \n  <li><a href=\"https://github.com/KenjiBaheux/css-font-rendering\"><code>font-rendering</code> CSS Property</a></li> \n  <li><a href=\"http://unicode.johnholtripley.co.uk/\">Unify, compatibility tables for Unicode characters</a></li> \n  <li><a href=\"https://github.com/filamentgroup/a-font-garde\">A Font Garde</a>, how to do Icon Fonts correctly.</li> \n </ul> <h2 id=\"storify-scrapbook\"><a href=\"https://storify.com/zachleat/smashingconf-whistler-2014\">Storify Scrapbook</a> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/smashingconf/2014/#storify-scrapbook\">#</a></h2> </img>","descriptionType":"html","feedId":12519,"bgimg":"https://www.zachleat.com/web/img/posts/whistler-gondola.jpg","linkMd5":"131b2f8a8aedc94b5133397c4ebd4785","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn69@2020_5/2020/08/25/02-02-02-897_f578e688465f873c.webp","destWidth":800,"destHeight":600,"sourceBytes":341614,"destBytes":135218,"author":"","articleImgCdnMap":{"https://www.zachleat.com/web/img/posts/whistler-gondola.jpg":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn69@2020_5/2020/08/25/02-02-02-897_f578e688465f873c.webp"},"publishedOrCreatedDate":1598320921765},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Own Your Content on Social Media Using the IndieWeb","link":"http://www.zachleat.com/web/own-your-content/","description":"<p><em>Originally presented at JAMstack_conf_sf in San Francisco, CA USA 🇺🇸 on October 17, 2019. Based on the blog post <a href=\"https://www.zachleat.com/web/own-my-tweets/\">I’m Taking Ownership of my Tweets</a> on this very web site.</em></p> \n<p>For this talk I built a social media platform: <a href=\"https://myspacebook.info/\">MySpaceBook.info</a>, the only social media site exclusively for astronauts. Unfortunately midway through the presentation an investor called me up to make an offer on the site and I was left with no choice but to sell it, taking all of the user data down with it. If you use the principles I outline in this talk, you would have been able to take agency over your data, preserving it on your own terms.</p> \n<h2 id=\"abstract\">Abstract <a class=\"direct-link\" href=\"http://www.zachleat.com/web/own-your-content/#abstract\">#</a></h2> \n<blockquote> \n <p>You’ve been posting to Medium, Twitter, Facebook, or Instagram. The gardens are walled. The silos are tall.</p> \n <p>Inevitably when we are beholden to social media, the terms of service for these sites are subject to change. What can we do to protect our stuff and take back our digital social interactions out of these silo’d spaces and move them to places that we control?</p> \n <p>With the IndieWeb and JAMStack, this is not only possible but pretty approachable too.</p> \n</blockquote> \n<h2 id=\"video\">Video <a class=\"direct-link\" href=\"http://www.zachleat.com/web/own-your-content/#video\">#</a></h2> \n<p>This <a href=\"https://www.youtube.com/watch?v=X3SrZuH00GQ\">video is hosted on YouTube</a>.</p> \n<div class=\"fullwidth\">\n <div class=\"fluid-width-video-wrapper\">\n  <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/X3SrZuH00GQ\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\"></iframe>\n </div>\n</div> \n<h2 id=\"slides\">Slides <a class=\"direct-link\" href=\"http://www.zachleat.com/web/own-your-content/#slides\">#</a></h2> \n<p>Download a <a href=\"https://www.zachleat.com/presentations/2019-own-your-data.pdf\">locally hosted PDF copy of the slides</a>.</p> \n<p>This talk is also <a href=\"https://noti.st/zachleat/Uo8jkv/own-your-content-on-social-media-with-the-indie-web\">on Not.ist</a>, which you can preview below:</p> \n<div class=\"fullwidth\">\n <div class=\"fluid-width-video-wrapper\">\n  <iframe src=\"https://noti.st/zachleat/Uo8jkv/embed\" frameborder=\"0\" allowfullscreen=\"\"></iframe>\n </div>\n</div>","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"4df0f29616a9f78dab488c4bc8f20f07","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921772},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"A Race Against Time Pickers","link":"http://www.zachleat.com/web/a-race-against-time-pickers/","description":"<p>The Date Picker component is one of the most popular user interface components on the web today. Its operation is very simple: focus into a field (sometimes a click on a dedicated calendar button is required) intended to contain a specific date and an on-screen calendar will be shown next to the form field, allowing the user to click on a specific date to populate the form field.</p> \n<p><a href=\"https://www.zachleat.com/web/wp-content/uploads/2010/06/Screen-shot-2010-06-01-at-8.57.37-PM.png\"><img src=\"https://www.zachleat.com/web/wp-content/uploads/2010/06/Screen-shot-2010-06-01-at-8.57.37-PM.png\" alt=\"\" title=\"Date Picker Component\" /></a></p> \n<p>Date Pickers are helpful components that are useful for a couple of reasons:</p> \n<ol> \n <li>They allow you to easily <strong>map an existing real-world mental model</strong> (the Calendar) to form input (a text field). This provides <strong>additional context</strong> beyond what the simple string value of a date represents: days of the week, Calendar month labels, leap year information.</li> \n <li>They allow for more usable and actionable data restrictions and error feedback. Want the user to select a weekday? Just show them on the calendar which days are available.</li> \n <li>Visual cue as to what the form field’s data format should be. If a calendar icon is next to the form field, it becomes very obvious what kind of data the user should put into the field.</li> \n</ol> \n<p>Now, the last two reasons are all well and good, but carry no intrinsic incentive for the user to actually click on and use the Date Picker component. <strong>The first reason is what actually motivates a user</strong> to bring up the Date Picker and select a date on it.</p> \n<p>Now, consider the following Time Picker component, popularized by <a href=\"http://ejohn.org/blog/picking-time/\">a John Resig blog post</a>:</p> \n<p><a href=\"http://haineault.com/media/jquery/ui-timepickr/page/\"><img src=\"https://www.zachleat.com/web/wp-content/uploads/2010/06/Screen-shot-2010-06-06-at-3.28.22-PM.png\" alt=\"\" title=\"Time Picker Example #2\" /></a></p> \n<p>Comparing to the Date Picker component above, one could easily make the argument that it offers little to <strong>no incentive over simple keyboard input</strong>. It offers no additional context, extra data, or an existing physical mental model for the user to associate with. The only advantage it might offer is an easy calculator for those unfamiliar with 24-hour (military) time. I would argue that placing the AM/PM selection at the beginning of the selection creates a reversal of the closest established mental model a person typically uses to represent a time: the digital clock (hours, minutes, seconds, and AM/PM at the end).</p> \n<h2 id=\"examples\">Examples <a class=\"direct-link\" href=\"http://www.zachleat.com/web/a-race-against-time-pickers/#examples\">#</a></h2> \n<p>Here’s a sampling of some other time picker implementations:</p> \n<p><a href=\"http://pttimeselect.sourceforge.net/example/index.html\"><img src=\"https://www.zachleat.com/web/wp-content/uploads/2010/06/pttimeselect.png\" alt=\"\" title=\"Another Time Picker\" /></a></p> \n<p>This implementation is very similar to the first example, just organized differently. We can do better.</p> \n<p><a href=\"http://www.pit-r.de/timepicker/demo/pickerDemo.htm\"><img src=\"https://www.zachleat.com/web/wp-content/uploads/2010/06/picker.png\" alt=\"\" title=\"Yet Another Time Picker, Two Analog Clocks, one for hours and one for minutes\" /></a></p> \n<p>Reading an analog clock isn’t the problem. When we think of time, we start with numeric representations of the hours and minutes. The first thing that pops into the average person’s head when they hear “6:00 PM” probably isn’t: the little hand on the 6 and the big hand on the 12. The analog clock representation is <strong>a mental hurdle</strong>.</p> \n<p><a href=\"https://www.zachleat.com/web/wp-content/uploads/2010/06/timedatepicker.png\"><img src=\"https://www.zachleat.com/web/wp-content/uploads/2010/06/timedatepicker.png\" alt=\"\" title=\"A simple time picker\" /></a></p> \n<p>Now we’re getting closer. The user selects a full representation of the time, not just the last piece of the puzzle. I like the intuitive and simple organization of this time picker. You know immediately what you’re selecting. I think we can organize the times a little bit better though, give them a visual hierarchy.</p> \n<p><a href=\"http://www.jnathanson.com/index.cfm?page=jquery/clockpick/ClockPick#demog\"><img src=\"https://www.zachleat.com/web/wp-content/uploads/2010/06/clockpick.png\" alt=\"\" title=\"Yet Another Time Picker\" /></a></p> \n<p>This picker represents more of the spirit of what we’re looking for. It shows a simple list of the hourly options and progressively discloses the minute selections. I think switching to a single column layout would be more intuitive for keyboard navigation (combining the above two implementations into one super-component) and would do well with larger click targets.</p> \n<p>These implementation examples speak to a larger trend of front end engineers that concentrate too much on code optimization and cross browser compatibility, and <strong>not enough on usability and user driven design</strong>. It’s an easy trap to fall prey to, but one we must be wary of. A Time Picker might offer benefit in terms of data restriction (e.g.: select an hour in the range of a normal workday), but it does very little for the efficiency and usability of data entry. So, before you start putting Time Pickers on all of your forms, make sure the Time Picker you add represents something like this:</p> \n<p><img src=\"https://www.zachleat.com/web/wp-content/uploads/2010/06/ISPKA4134_large.jpg\" alt=\"\" title=\"Digital Clock\" /></p> \n<p>and not this:</p> \n<p><img src=\"https://www.zachleat.com/web/wp-content/uploads/2010/06/Screen-shot-2010-06-06-at-4.04.50-PM.png\" alt=\"\" title=\"Onscreen Keyboard\" /></p> \n<p><em>Image Sources: <a href=\"http://www.tesora.com.au/Digibell_Retro_Alarm_Clock_.htm\">tesora.com.au</a> and <a href=\"http://www.codeproject.com/\">codeproject.com</a></em></p>","descriptionType":"html","feedId":12519,"bgimg":"https://www.zachleat.com/web/wp-content/uploads/2010/06/Screen-shot-2010-06-01-at-8.57.37-PM.png","linkMd5":"99464b7aa3bf3915237f29aa18acc84b","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn73@2020_5/2020/08/25/02-02-02-710_01094e972a446199.webp","destWidth":314,"destHeight":235,"sourceBytes":21015,"destBytes":13020,"author":"","articleImgCdnMap":{"https://www.zachleat.com/web/wp-content/uploads/2010/06/Screen-shot-2010-06-01-at-8.57.37-PM.png":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn73@2020_5/2020/08/25/02-02-02-710_01094e972a446199.webp","https://www.zachleat.com/web/wp-content/uploads/2010/06/Screen-shot-2010-06-06-at-3.28.22-PM.png":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn60@2020_2/2020/08/25/02-02-14-774_2c65954e05fc3007.webp","https://www.zachleat.com/web/wp-content/uploads/2010/06/pttimeselect.png":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn15@2020_6/2020/08/25/02-02-18-070_227257c2735ca91c.webp","https://www.zachleat.com/web/wp-content/uploads/2010/06/picker.png":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn60@2020_3/2020/08/25/02-02-17-672_001bad04c42d365e.webp","https://www.zachleat.com/web/wp-content/uploads/2010/06/timedatepicker.png":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn56@2020_2/2020/08/25/02-02-15-197_a9645bb0f4a279e3.webp","https://www.zachleat.com/web/wp-content/uploads/2010/06/clockpick.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn16@2020_3/2020/08/25/02-02-16-331_ba21a217f98f374c.webp","https://www.zachleat.com/web/wp-content/uploads/2010/06/ISPKA4134_large.jpg":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn71@2020_6/2020/08/25/02-02-18-048_af59f8b2f9a279d3.webp","https://www.zachleat.com/web/wp-content/uploads/2010/06/Screen-shot-2010-06-06-at-4.04.50-PM.png":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn61@2020_3/2020/08/25/02-02-10-340_43e171aea61b37a4.webp"},"publishedOrCreatedDate":1598320921763},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Politespace, an unobtrusive alternative to input masks","link":"http://www.zachleat.com/web/politespace/","description":"\n\t\t\t<p><a href=\"http://www.filamentgroup.com/lab/politespace.html\"><strong>Read <em>Politespace, an unobtrusive alternative to input masks</em> on the Filament Group Lab.</strong></a></p>\n<blockquote>\n<p>When entering complex strings such as telephone and credit card numbers in web forms, designers commonly ask for the input to be formatted with whitespace or other characters to provide better usability.</p>\n</blockquote>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"17cb9a2d505db33e72b36aafafb79ceb","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921764},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Using Phing to automate JavaScript and CSS Minimization","link":"http://www.zachleat.com/web/using-phing-to-automate-javascript-and-css-minimization/","description":"\n\t\t\t<p><em>This article may be too advanced for beginner programmers. Unfortunately, I will not support any code that I do not write (in this case), so if you have troubles installing some of the packages required below, please see the authors of the problem code. Thank you.</em></p>\n<p>PHING! <a href=\"http://en.wikipedia.org/wiki/Wayne's_World\">Party on Wayne. Party on Garth!</a></p>\n<p>If you’ve never used Phing, it’s an automation tool for PHP that is a port of Java’s ANT Build tool. But it’s not just for building (obviously, that’d be silly). You can hook all kinds of tasks into Phing: unit tests for your PHP code (you’re doing test driven development, aren’t you?), building your documentation, etc. But today, let’s look at automation of my favorite front end development tasks: packing (minimizing) our JavaScript and CSS.</p>\n<p>To do this, I’m going to hook you up with two Filters for Phing that will use the <a href=\"http://joliclic.free.fr/php/javascript-packer/en/\">PHP port of Dean Edwards JavaScript Packer</a>, and the PHP class <a href=\"http://csstidy.sourceforge.net/\">CSSTidy</a>.</p>\n<p>Here’s what you’ll be responsible for:</p>\n<ol>\n<li>\n<p>Download both CSSTidy and the PHP port of Packer using the links above.</p>\n</li>\n<li>\n<p>Download Phing if you don’t already have it, and install it. Note the following change I had to make to my Phing binphing.bat file to get it working: Change <code>set PHP_CLASSPATH=&quot;%PHING_HOME%classes&quot;</code> to remove the quotes: <code>set PHP_CLASSPATH=%PHING_HOME%classes</code></p>\n</li>\n<li>\n<p>Download the two Filters I made for Phing: <strong><a href=\"https://www.zachleat.com/Projects/phing/JSPackerFilter.phps\">JSPackerFilter.phps</a></strong> and <strong><a href=\"https://www.zachleat.com/Projects/phing/CssTidyFilter.phps\">CssTidyFilter.phps</a></strong>, change the extensions to .php and copy into your phing directory <code>\\classes\\phing\\filters\\</code></p>\n</li>\n<li>\n<p>Change the path in the include_once declaration at the top of each of the files to point to the csstidy and packer libraries you downloaded above:</p>\n<pre><code>include_once &quot;C:\\Lib\\packer.php-1.0\\class.JavaScriptPacker.php&quot;;\ninclude_once &quot;C:\\Lib\\csstidy-1.3\\class.csstidy.php&quot;;\n</code></pre>\n</li>\n<li>\n<p>Get a working build file set up to point the directories your project is using. Here is a sample I made:</p>\n<pre><code>&lt;project name=&quot;testProject&quot; default=&quot;pack-all&quot;&gt;\n    &lt;target name=&quot;pack-all&quot; depends=&quot;pack-javascript,pack-css&quot;/&gt;\n    &lt;target name=&quot;pack-javascript&quot;&gt;\n        &lt;copy todir=&quot;./Web/js&quot; overwrite=&quot;true&quot;&gt;\n            &lt;fileset dir=&quot;../Web/js&quot;&gt;\n                &lt;include name=&quot;*.js&quot; /&gt;\n            &lt;/fileset&gt;\n \n            &lt;filterchain&gt;\n                &lt;filterreader classname=&quot;phing.filters.JSPackerFilter&quot;&gt;\n                  &lt;param name=&quot;encoding&quot; value=&quot;62&quot;/&gt;&lt;!-- 0,10,62,95 or 'None', 'Numeric', 'Normal', 'High ASCII'. --&gt;\n                  &lt;param name=&quot;fastDecode&quot; value=&quot;true&quot;/&gt;&lt;!-- include the fast decoder in the packed result --&gt;\n                  &lt;param name=&quot;specialCharacters&quot; value=&quot;false&quot;/&gt;&lt;!-- have you flagged your private and local variables in the script --&gt;\n                &lt;/filterreader&gt;\n            &lt;/filterchain&gt;\n        &lt;/copy&gt;\n    &lt;/target&gt;\n    &lt;target name=&quot;pack-css&quot;&gt;\n        &lt;copy todir=&quot;./Web/css&quot; overwrite=&quot;true&quot;&gt;\n            &lt;fileset dir=&quot;../Web/css&quot;&gt;\n                &lt;include name=&quot;*.css&quot; /&gt;\n            &lt;/fileset&gt;\n \n            &lt;filterchain&gt;\n                &lt;filterreader classname=&quot;phing.filters.CssTidyFilter&quot;&gt;\n                    &lt;param name=&quot;remove_last_;&quot; value=&quot;true&quot;/&gt;\n                    &lt;param name=&quot;preserveCss&quot; value=&quot;false&quot;/&gt;\n                    &lt;param name=&quot;template&quot; value=&quot;high_compression&quot;/&gt;\n                &lt;/filterreader&gt;\n            &lt;/filterchain&gt;\n        &lt;/copy&gt;\n    &lt;/target&gt;\n&lt;/project&gt;\n</code></pre>\n<p>Templates for CssTidy include: <code>low_compression</code>, <code>default</code>, <code>high_compression</code> (declarations are limited to one line apiece), <code>highest_compression</code> (everything is put on one line).</p>\n<p>The above build file is set up to work with the following directory structure:</p>\n<ul>\n<li>Build\n<ul>\n<li>Web\n<ul>\n<li>css</li>\n<li>js</li>\n</ul>\n</li>\n<li><strong>build.xml</strong></li>\n</ul>\n</li>\n<li>Web\n<ul>\n<li>css</li>\n<li>js</li>\n</ul>\n</li>\n</ul>\n<p>Files are copied from the source in /Web to the /Build/Web directory. I hope that you can see from the build.xml file above that the target directory is specified in the copy tag, todir attribute.</p>\n<pre><code>&lt;copy todir=&quot;./Web/js&quot; overwrite=&quot;true&quot;&gt;\n</code></pre>\n<p>and the source directory is specified in the fileset tag, dir attribute.</p>\n<pre><code>&lt;fileset dir=&quot;../Web/css&quot;&gt;\n    &lt;include name=&quot;*.css&quot; /&gt;\n&lt;/fileset&gt;\n</code></pre>\n</li>\n</ol>\n<p>And then, all you need to do is navigate to the directory holding your build.xml and run the phing command (if you have phing in your path. If not, you can use an absolute link to phing, for example <code>c:\\software\\phing\\bin\\phing</code>). Your minimized javascript and css will be in the Build directory!</p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"29e22c92ccd00c7fd7323454512b60f5","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921761},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Compatibility Tables Compendium","link":"http://www.zachleat.com/web/compatibility/","description":"<p>When it comes to web development, nothing beats a good compatibility table (especially not a listicle about compatibility tables). They help you make important decisions about new web feature production readiness, inform our best practices, and help us troubleshoot peculiar issues in fringe browsers. To that end, I’ve collected a list of useful compatibility tables that I thought were worth sharing.</p> \n<h2 id=\"can-i-use\"><a href=\"http://caniuse.com/\">Can I use</a> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/compatibility/#can-i-use\">#</a></h2> \n<p><span class=\"tag\">JavaScript</span> <span class=\"tag\">CSS</span> <span class=\"tag\">HTML</span> <span class=\"tag\">SVG</span> <em>—<a href=\"http://a.deveria.com/\">Alexis Deveria</a></em></p> \n<p>These are the best. Everyone knows about these for a reason. They’re the most useful, most updated, most comprehensive compatibility tables. They have made development decisions easier and I can easily declare them one of the best resources on the web.</p> \n<h2 id=\"mozilla-developer-network\"><a href=\"https://developer.mozilla.org/\">Mozilla Developer Network</a> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/compatibility/#mozilla-developer-network\">#</a></h2> \n<p>If you’re looking for a specific web feature, a JavaScript API, or even a CSS property, chances are that the MDN documentation has a support table at the bottom. Just include MDN in your search engine query to easily find the community sourced documentation.</p> \n<h2 id=\"browserscope\"><a href=\"http://www.browserscope.org/\">Browserscope</a> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/compatibility/#browserscope\">#</a></h2> \n<p><span class=\"tag\">Networking</span> <span class=\"tag\">Performance</span> <em>—<a href=\"http://stevesouders.com/\">Steve Souders</a> and <a href=\"https://twitter.com/elsigh\">Lindsey Simon</a></em></p> \n<p>A huge number of tests, most notably the <a href=\"http://www.browserscope.org/?category=network&amp;v=1\">Network</a> tab. You can learn a lot just by reading the tooltips on the table headers there.</p> \n<p>The JSKB tab includes compatibility tables for addEventListener (DOM2 Events), getComputedStyle (basically, not on IE &lt;=8).</p> \n<h2 id=\"ecmascript-compatibility\"><a href=\"http://kangax.github.io/compat-table/\">ECMAScript Compatibility</a> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/compatibility/#ecmascript-compatibility\">#</a></h2> \n<p><span class=\"tag\">JavaScript</span> <em>—<a href=\"http://perfectionkills.com/\">Kangax</a></em></p> \n<p><strong>The</strong> resource for ES5, ES6, and ES7 compatibility with exhaustive browser support, even including support tables for PhantomJS and Rhino. A really beautiful, encyclopedic, unbeatable reference.</p> \n<h2 id=\"css3-please\"><a href=\"http://css3please.com/\">CSS3 Please</a> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/compatibility/#css3-please\">#</a></h2> \n<p><span class=\"tag\">CSS</span> <em>—<a href=\"http://paulirish.com/\">Paul Irish</a>, <a href=\"http://twitter.com/jon_neal\">Jonathan Neal</a></em></p> \n<p>The inline comments on each property are a great compatibility table for CSS vendor prefixes.</p> \n<ul> \n <li>See Also: <a href=\"http://shouldiprefix.com/\">Should I Prefix?</a> <em>—<a href=\"http://valuedstandards.com/\">David Hund</a></em></li> \n <li>See Also: <a href=\"https://github.com/postcss/autoprefixer\">Autoprefixer</a> <em>—<a href=\"http://sitnik.ru/en\">Andrey Sitnik</a></em></li> \n</ul> \n<h2 id=\"the-state-of-web-type\"><a href=\"http://stateofwebtype.com/\">The State of Web Type</a> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/compatibility/#the-state-of-web-type\">#</a></h2> \n<p><span class=\"tag\">Typography</span> <em>—<a href=\"http://www.bramstein.com/\">Bram Stein</a></em></p> \n<p>Has some overlap with <em>Can I Use</em> on font formats and CSS properties, The State of Web Type really shines for its tables on OpenType Features, specifically the many different options available to <code>font-feature-settings</code>.</p> \n<h2 id=\"font-family-reunion\"><a href=\"http://fontfamily.io/\">Font Family Reunion</a> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/compatibility/#font-family-reunion\">#</a></h2> \n<p><span class=\"tag\">CSS</span> <em>—<a href=\"http://zachleat.com/\">Zach Leatherman</a></em></p> \n<p>You might recognize this one (I feel a little bit of shame for including it but only enough not to call it a shameless plug). It shows the default fonts available for use in CSS <code>font-family</code> across browsers and operating systems.</p> \n<h2 id=\"unify-for-unicode-characters\"><a href=\"http://unicode.johnholtripley.co.uk/\">Unify</a> for Unicode Characters <a class=\"direct-link\" href=\"http://www.zachleat.com/web/compatibility/#unify-for-unicode-characters\">#</a></h2> \n<p><span class=\"tag\">Unicode</span> <span class=\"tag\">Accessibility</span> <em>—<a href=\"http://cv.johnholtripley.co.uk/\">John Holt Ripley</a></em></p> \n<p>Shows which Unicode characters are safe to use across an amazing number of mobile devices. Also a great compatibility table of how screen readers will read each character.</p> \n<h2 id=\"mobile-html5\"><a href=\"http://mobilehtml5.org/\">Mobile HTML5</a> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/compatibility/#mobile-html5\">#</a></h2> \n<p><span class=\"tag\">JavaScript</span> <span class=\"tag\">CSS</span> <span class=\"tag\">HTML</span> <span class=\"tag\">SVG</span> <em>—<a href=\"http://firt.mobi/\">Maximiliano Firtman</a></em></p> \n<p>Some overlap with Can I Use here but importantly does include some fringe mobile browsers like Amazon Silk, BlackBerry 5 and 6 (as well as separate entries for tablets), and the Nokia Browser.</p> \n<h2 id=\"web-browser-compatibility\"><a href=\"http://webbrowsercompatibility.com/\">Web Browser Compatibility</a> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/compatibility/#web-browser-compatibility\">#</a></h2> \n<p><span class=\"tag\">JavaScript</span> <span class=\"tag\">CSS</span> <em>—<a href=\"http://codylindley.com/\">Cody Lindley</a></em></p> \n<p>Very specific reports on JavaScript APIs, down to individual method support. Also includes <a href=\"http://webbrowsercompatibility.com/css-properties/desktop/\">CSS properties</a>. A great, comprehensive resource.</p> \n<h2 id=\"screen-reader-support-for-hidden-content\"><a href=\"http://www.html5accessibility.com/tests/hidden2013.html\">Screen reader support for hidden content</a> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/compatibility/#screen-reader-support-for-hidden-content\">#</a></h2> \n<p><span class=\"tag\">Accessibility</span> <em>—<a href=\"http://www.paciellogroup.com/\">Steven Faulkner and the Paciello Group</a></em></p> \n<p>A really great look into the different methods for hiding content from screen readers, with tests to show screen reader support for each. Think HTML5 <code>hidden</code>, <code>aria-hidden</code>, CSS <code>display: none</code>, and other hiding techniques.</p> \n<ul> \n <li><em>Related: <a href=\"http://a11yproject.com/posts/how-to-hide-content/\">A11Y Project: How to Hide Content</a></em></li> \n</ul> \n<h2 id=\"%3Cinput-type%3D%22file%22%3E-on-mobile\"><a href=\"http://viljamis.com/blog/2012/file-upload-support-on-mobile/\"><code>&lt;input type=\"file\"&gt;</code> on Mobile</a> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/compatibility/#%3Cinput-type%3D%22file%22%3E-on-mobile\">#</a></h2> \n<p><span class=\"tag\">HTML</span> <em>—<a href=\"http://viljamis.com/\">Viljami Salminen</a></em></p> \n<p>(Originally from 2012 but it looks like it’s still being updated)</p> \n<h2 id=\"image-download-with-media-queries\"><a href=\"http://timkadlec.com/2012/04/media-query-asset-downloading-results/\">Image Download with Media Queries</a> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/compatibility/#image-download-with-media-queries\">#</a></h2> \n<p><span class=\"tag\">CSS</span> <span class=\"tag\">Networking</span> <span class=\"tag\">Performance</span> <em>—<a href=\"http://timkadlec.com/\">Tim Kadlec</a></em></p> \n<p>Shows CSS <code>background-image</code> code using different media query configurations and which browsers will download non-applicable images.</p> \n<h2 id=\"%3Clink-rel%3D%22stylesheet%22-media%3E-css-download\"><a href=\"https://scottjehl.github.io/CSS-Download-Tests/\"><code>&lt;link rel=\"stylesheet\" media&gt;</code> CSS Download</a> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/compatibility/#%3Clink-rel%3D%22stylesheet%22-media%3E-css-download\">#</a></h2> \n<p><span class=\"tag\">CSS</span> <span class=\"tag\">Networking</span> <span class=\"tag\">Performance</span> <em>—<a href=\"http://scottjehl.com/\">Scott Jehl</a></em></p> \n<p>Most browsers download all stylesheets immediately, even if their media attribute does not currently apply (think <code>print</code> or <code>nonsense</code>).</p> \n<h2 id=\"browser-hacks\"><a href=\"http://browserhacks.com/\">Browser Hacks</a> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/compatibility/#browser-hacks\">#</a></h2> \n<p><span class=\"tag\">CSS</span> <span class=\"tag\">JavaScript</span> <em>—<a href=\"http://hugogiraudel.com/\">Hugo Giraudel</a>, <a href=\"http://timpietrusky.com/\">Tim Pietrusky</a>, <a href=\"https://twitter.com/fweinb\">Fabrice Weinberg</a></em></p> \n<p>A lot of things can be feature tested. Some things can’t. Before you reach for the User Agent string, why not try a weak inference instead?</p> \n<h2 id=\"quirksmode\"><a href=\"http://www.quirksmode.org/compatibility.html\">QuirksMode</a> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/compatibility/#quirksmode\">#</a></h2> \n<p><span class=\"tag\">JavaScript</span> <span class=\"tag\">CSS</span> <em>—<a href=\"http://www.quirksmode.org/about/\">Peter-Paul Koch</a></em></p> \n<p>QuirksMode will always have a special place on this list because PPK popularized the browser compatibility table. His investment into the tables on his site have helped countless people over the years and will likely continue to do so.</p> \n<h2 id=\"css-values\"><a href=\"http://cssvalues.com/\">CSS Values</a> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/compatibility/#css-values\">#</a></h2> \n<p><span class=\"tag\">CSS</span> <em>—<a href=\"http://www.impressivewebs.com/\">Louis Lazaris</a></em></p> \n<p>A great search interface for quick reference to CSS properties and browser support.</p> \n<h2 id=\"javascript-compatibility-checker\"><a href=\"http://jscc.info/\">JavaScript Compatibility Checker</a> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/compatibility/#javascript-compatibility-checker\">#</a></h2> \n<p><span class=\"tag\">JavaScript</span> <em>—<a href=\"http://tbusser.net/\">Thijs Busser</a></em></p> \n<p>A really impressive tool that will check JavaScript code for API use and show you your browser support matrix for that code!</p> \n<h2 id=\"css-in-email-clients\"><a href=\"https://www.campaignmonitor.com/css/\">CSS in Email Clients</a> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/compatibility/#css-in-email-clients\">#</a></h2> \n<p><span class=\"tag\">CSS</span> <em>—<a href=\"https://www.campaignmonitor.com/\">Campaign Monitor</a></em></p> \n<p><a href=\"https://twitter.com/Real_CSS_Tricks/status/579390963904204800\">Chris Coyier was nice enough to share this one</a>. Campaign Monitor helps you write email using the CSS features that are available on different email clients.</p> \n<h2 id=\"features-coming-soon\">Features Coming Soon <a class=\"direct-link\" href=\"http://www.zachleat.com/web/compatibility/#features-coming-soon\">#</a></h2> \n<p>New features currently being discussed or developed. Great to see what’s coming down the pipe.</p> \n<ul> \n <li><a href=\"https://www.chromestatus.com/features\">Google Chrome Status</a></li> \n <li><a href=\"https://platform-status.mozilla.org/\">Firefox Platform Status</a></li> \n <li><s><a href=\"https://status.modern.ie/\">Modern.IE Internet Explorer Status</a></s> <a href=\"https://developer.microsoft.com/en-us/microsoft-edge/platform/status/\">Microsoft Edge Platform Status</a></li> \n</ul> \n<h2 id=\"honorable-mentions\">Honorable Mentions <a class=\"direct-link\" href=\"http://www.zachleat.com/web/compatibility/#honorable-mentions\">#</a></h2> \n<p>These are not exactly compatiblilty tables (but I would consider them to be similar and very useful resources):</p> \n<ul> \n <li><a href=\"http://html5please.com/\">HTML5 Please</a> <em>by <a href=\"https://github.com/h5bp/html5please/graphs/contributors\">Multiple authors</a></em></li> \n <li><a href=\"http://console.maban.co.uk/\">Game Console Browsers</a> <em>by <a href=\"http://maban.co.uk/\">Anna Debenham</a></em></li> \n <li><a href=\"http://csstriggers.com/\">CSS Triggers</a> <em>by <a href=\"http://aerotwist.com/\">Paul Lewis</a></em></li> \n <li><a href=\"https://platform.html5.org/\">The Web Platform Specification List</a></li> \n <li><a href=\"http://httparchive.org/interesting.php\">HTTP Archive Interesting Stats</a></li> \n</ul> \n<h2 id=\"additions\">Additions <a class=\"direct-link\" href=\"http://www.zachleat.com/web/compatibility/#additions\">#</a></h2> \n<p>I’m sure I’ve missed some—if you have another please send me a tweet or leave me a comment!</p> \n<div class=\"retweettoshare\"> \n <h3 class=\"retweettoshare_title\">Retweet to share this post</h3> \n <div class=\"retweettoshare_widget\"> \n  <blockquote class=\"twitter-tweet\" data-lang=\"en\">\n   <p lang=\"en\" dir=\"ltr\">★ Compatibility Tables help us make more informed development decisions. Here is a list (listicle?) of my favorites: <a href=\"http://t.co/nCmguD4ZPJ\">http://t.co/nCmguD4ZPJ</a></p>— Zach Leatherman (@zachleat) \n   <a href=\"https://twitter.com/zachleat/status/578647641279610880\">March 19, 2015</a>\n  </blockquote> \n </div> \n</div>","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"69f4cedbef24dceea26e6e6f7d851e28","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921765},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"YUI Code Review: YAHOO.namespace","link":"http://www.zachleat.com/web/yui-code-review-yahoonamespace/","description":"\n\t\t\t<p><em>This is the first in a one part series of posts (the is optional) reviewing the actual code contained in the YUI library. This series is not intended for advanced JavaScripters, so if you’re insulted by reading things you already know, you probably aren’t a very good student.</em></p>\n<p>YAHOO.namespace. This is a great little utility function that gives you an easy way to encourage low coupling throughout your JavaScript code. Divide your functions into functional units! If you already know how to use this function, you can skip to the bottom to learn a few JavaScript tricks Yahoo has put in. If not, keep reading! Are you making a new package you want to put under the YAHOO namespace? Just declare it in a string argument passed into the YAHOO.namespace function:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token constant\">YAHOO</span><span class=\"token punctuation\">.</span><span class=\"token function\">namespace</span><span class=\"token punctuation\">(</span> <span class=\"token string\">'myNamespace'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>This will create a YAHOO.myNamespace object that can be used many different ways. You can assign a single function to it:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token constant\">YAHOO</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">myNamespace</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br> <br><span class=\"token constant\">YAHOO</span><span class=\"token punctuation\">.</span><span class=\"token function\">myNamespace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Or you can assign multiple functions to it (with private variables included) using the <a href=\"http://yuiblog.com/blog/2007/06/12/module-pattern/\">amazing Module Pattern</a>:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token constant\">YAHOO</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">myNamespace</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">var</span> myPrivateVariable<span class=\"token punctuation\">;</span><br> <br>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token function-variable function\">myFirstFunction</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> myPrivateVariable<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>    <span class=\"token function-variable function\">mySecondFunction</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br> <br><span class=\"token keyword\">var</span> hisOrHerPrivateVariable <span class=\"token operator\">=</span> <span class=\"token constant\">YAHOO</span><span class=\"token punctuation\">.</span>myNamespace<span class=\"token punctuation\">.</span><span class=\"token function\">myFirstFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token constant\">YAHOO</span><span class=\"token punctuation\">.</span>myNamespace<span class=\"token punctuation\">.</span><span class=\"token function\">mySecondFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Did you know that you can pass multiple arguments into YAHOO.namespace? I’ve been using YUI all this time and didn’t know about this feature. But the more I think about it, the more I doubt it’s usefulness. When are you going to declare two unrelated namespaces adjacently in code? For example, doing this is redundant in YUI:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token constant\">YAHOO</span><span class=\"token punctuation\">.</span><span class=\"token function\">namespace</span><span class=\"token punctuation\">(</span> <span class=\"token string\">'myNamespace'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token constant\">YAHOO</span><span class=\"token punctuation\">.</span><span class=\"token function\">namespace</span><span class=\"token punctuation\">(</span> <span class=\"token string\">'myNamespace.myNestedNamespace'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>The second call to YAHOO.namespace will reuse ‘myNamespace’ if it exists, and create it if it doesn’t. But the point here is that you can do something like the following:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token constant\">YAHOO</span><span class=\"token punctuation\">.</span><span class=\"token function\">namespace</span><span class=\"token punctuation\">(</span> <span class=\"token string\">'myNamespace'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'myOtherNamespace'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>which will create YAHOO.myNamespace and YAHOO.myOtherNamespace, and return a reference to the last one created, in this case YAHOO.myOtherNamespace.</p>\n<p>Here’s the code from this nice little function:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token constant\">YAHOO</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">namespace</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">var</span> a<span class=\"token operator\">=</span>arguments<span class=\"token punctuation\">,</span> o<span class=\"token operator\">=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>a <span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">=</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    d<span class=\"token operator\">=</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    o<span class=\"token operator\">=</span><span class=\"token constant\">YAHOO</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// YAHOO is implied, so it is ignored if it is included</span><br>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>j<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"YAHOO\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token number\">1</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">&lt;</span>d<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> j<span class=\"token operator\">=</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      o<span class=\"token punctuation\">[</span>d<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>o<span class=\"token punctuation\">[</span>d<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br>      o<span class=\"token operator\">=</span>o<span class=\"token punctuation\">[</span>d<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token keyword\">return</span> o<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre>\n<ol>\n<li><code>var a=arguments</code>: They’re iterating over the arguments passed into the function to declare multiple simultaneously. Arguments is the variable passed into every function that you can use if you want to handle a variable number of arguments. You can also declare a few arguments in the function( myArg ) and use the arguments variable if you want.</li>\n<li><code>j=(d[0] == &quot;YAHOO&quot;) ? 1 : 0</code> They reuse the YAHOO top level object if not explicitly included into the declaration. Start the index at 1 if YAHOO was declared to skip defining it twice.</li>\n<li><code>o[d[j]]=o[d[j]] || {};</code> They reuse existing namespaces if they have already been created. The OR || declaration means that Javascript will use {} (an empty object) if <code>o[d[j]]</code> is undefined.</li>\n</ol>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"3ff9e5ec7b286d1ecb7070b1325198cf","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921761},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"A Story About Proxy Filters","link":"http://www.zachleat.com/web/proxy-filter/","description":"\n\t\t\t<p><em>At local development meetups, I quite often see former coworkers. Omaha, while having a metro population of over 900,000, feels like a small town and the development community is tightly knit. At a recent meetup, I was reminded of this story by a former colleague that I though would be fun to share.</em></p>\n<p>Working at a large Fortune 150 company had its benefits and drawbacks, most of which I won't bore you with. Everything has a process. The clothing that is allowed in the workplace has an HR process, which explains the popularity of khaki pants (the Ford Taurus of business casual). The computer hardware they purchase to put in your cubicle has through a very rigorous approval process. The computer software you’re allowed to install on your computer has a process (no, you cannot have administrative rights to your own machine). Hm. I might be getting carried away here.</p>\n<p>One of my primary complaints about working in a huge IT department was the process governing what web sites you are allowed to visit. Many companies administer this process with something called a Proxy Filter (or Content Filter or HTTP Proxy with Content Filtering, <em>et cetera et cetera</em>). A Proxy Filter attempts to sanitize the web to a subset of web sites that are considered to be productive and helpful to the company. Anything outside this realm is considered unproductive and blocked. It's kind of like the Great Firewall of China, but at a corporate level. It should also be noted without comment that there is one other popular use case for this type of software: parents that are only <a href=\"https://www.youtube.com/watch?v=RybNI0KB1bg\"><em>thinking of the children</em></a>.</p>\n<p>Some of the sites blocked by this implementation of a Proxy Filter were of no consequence. Facebook, for example, was and continues to be not particularly useful to my job as a web developer (this is not commentary on React). Dropbox was blocked in a Sisyphean attempt to prevent internal documents from leaking out into the world. The biggest problems were Flickr and YouTube. These web sites were often used to host educational materials that were crucial to improving my craft both as a programmer and more specifically as a web developer.</p>\n<p>The usefulness of proxy filters is specious, at best.  I fought with the proxy server, not only as a blocker to my own personal education, but also technically. Each piece of software that needed to connect to an external server would need additional configuration to work with the proxy. It was a pain in the ass.</p>\n<p>Through it all, I was curious. The only way to survive the bureaucracy of process in a large company is to maintain a rebellious “ask forgiveness, not permission” mentality. I wanted to know which sites were blocked by the proxy filter. I wanted to know what percentage of the web I was granted access to and what percentage was filtered. So I did what any enterprising (nay, <em>enterprise</em>) developer would do: I wrote a script to test it.</p>\n<p>I downloaded a <a href=\"https://support.alexa.com/hc/en-us/articles/200449834-Does-Alexa-have-a-list-of-its-top-ranked-websites-\">CSV file containing the domains for the top web sites, as provided by Alexa</a>. I wrote a script that would go through each one of these entries, using a headless web browser to make a request to that web site, and log the HTTP response code. If the response code matched the status returned by a filtered proxy request, I knew the domain was blocked. I would finally discover the breadth at which my access to the web was being fettered.</p>\n<p>Now, the flaw in my logic was not in the code I had written. The flaw was perhaps in my own lack of insight and naïvety with the data. I had not opened up the CSV file to see what domains I would be testing.</p>\n<p>As I sat in my fabric box wearing my own version of Ford Taurus business casualwear, I watched the filtered domains log out to my console. I felt the temperature of my face rise and turn red as though I’d just thoroughly embarrassed myself in front of a large crowd of people. I should have anticipated this: <em>a large number of the top web sites were in fact porn sites</em>. My computer had visited at least 10 pornographic domains before I had the reaction time to cancel the script’s execution.</p>\n<p>Of course, nothing visual had shown on my screen because the requests were made in the console (the requests were blocked anyway). But to system administrators, the IP address belonging to the computer in my official cubicle with my official nameplate had just tried to look at a bunch of porn. Not just one or two accidental visits, but the sort of pornographic volume to which could be considered to be a serious problem.</p>\n<p>The strangest thing about this story is that it has no further detail. I was never approached about this later, by anyone. It was never brought up in a meeting or in a yearly review. No consequences at all. I assume that these requests were buried underneath the myriad of other completely harmless requests to YouTube embeds and Facebook widgets. Or maybe there was a rampant porn problem and my intrusions were but a blip in a sea of workplace inappropriateness.</p>\n<p>Whatever the reason, I do know one thing for certain: I'll not soon forget the day that I tried to visit a bunch of porn sites at work.</p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"b2180f3cec0d0db5cb63eac76a5b1af6","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921766},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Better @font-face with Font Load Events on Dev.Opera","link":"http://www.zachleat.com/web/external/devopera-font-face/","description":"\n\t\t\t<p><a href=\"https://dev.opera.com/articles/better-font-face/\"><strong>Read <em>Better @font-face with Font Load Events</em> on Dev.Opera.</strong></a></p>\n<blockquote>\n<p>@font-face is an established staple in the diet of almost half of the web. According to the HTTP Archive, 47% of web sites make a request for at least one custom web font. What does this mean for a casual browser of the web? In this article, I make the argument that current implementations of @font-face are actually harmful to the performance and usability of the web. These problems are exacerbated by the fact that developers have started using @font-face for two completely different use cases: content fonts and icon fonts, which should be handled differently. But there is hope. We can make small changes to how these fonts load to mitigate those drawbacks and make the web work better for everyone.</p>\n</blockquote>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"ddf3a08e87ec75b47961feea040af3ad","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921764},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"zachleat.com is Dead, Long Live zachleat.com","link":"http://www.zachleat.com/web/zachleat-is-dead/","description":"<p><em>If you’re reading this in the RSS Feed, please accept my humble apologies for not transparently converting my feed. This is one of the perils of switching from WordPress to Jekyll. The URL for the feed has <strong>not</strong> changed, but you’ll probably see a lot of unread items appearing here, so feel free to “mark all as read.”</em></p> \n<p>Welcome to the redesign of <a href=\"http://zachleat.com/\">zachleat.com</a>! Notably, the title of the blog is now my name, instead of <code>Web 3.0, 6 Bladed Razors, 7 Minute Abs</code>. I’ve decided that using my name for the blog title is more in line with the principles I set forth in <a href=\"https://www.zachleat.com/web/fumbling-with-social-media/\">A Web Developer Fumbling with Social Media</a>.</p> \n<h2 id=\"tools\">Tools <a class=\"direct-link\" href=\"http://www.zachleat.com/web/zachleat-is-dead/#tools\">#</a></h2> \n<p>The entire site’s source code is <a href=\"https://github.com/zachleat/zachleat.com\">available on GitHub</a>. If you see any issues with the site, please <a href=\"https://github.com/zachleat/zachleat.com/issues\">file them on GitHub</a>. I probably could be convinced to rip out the proprietary pieces and release it as a blog boilerplate project—let me know if this is something you’d be interested in using.</p> \n<ul> \n <li><a href=\"https://github.com/mojombo/jekyll\">Jekyll</a></li> \n <li><a href=\"http://gruntjs.com/\">Grunt</a></li> \n <li><a href=\"http://zurb.com/playground/foundation-icons\">Zurb Foundation Social Icons</a></li> \n <li><a href=\"http://pygments.org/\">Pygments Syntax Highlighter</a></li> \n <li><a href=\"http://fitvidsjs.com/\">FitVids (CSS only)</a></li> \n <li><a href=\"http://www.google.com/fonts/specimen/Bitter\">Bitter @font-face</a></li> \n</ul> \n<p>Grunt and Jekyll work beautifully together, even though they’re written in two different languages. It’s especially convenient that <code>grunt watch</code> is configured to run the appropriate jekyll commands to generate the site automatically.</p> \n<p>That being said, if anyone knows of a really good Node.js site generator, please let me know. I’ve tried a bunch of them and haven’t yet found anything as good as Jekyll.</p> \n<h2 id=\"theme\">Theme <a class=\"direct-link\" href=\"http://www.zachleat.com/web/zachleat-is-dead/#theme\">#</a></h2> \n<p>It’s a simple minimalistic mobile-first responsive web design (that’s a mouthful, eh?) theme that I’ve built from scratch. I’m calling it <strong>Butt Sweater</strong>, for obvious reasons. Okay, not really. Well actually I mean to say, the reasons are not obvious—it’s really called <a href=\"https://github.com/zachleat/zachleat.com/blob/093aaa88642a5ba7b4d410828d1f53a3a047f8bd/web/css/_buttsweater.scss\">Butt Sweater</a>.</p> \n<h2 id=\"removals\">Removals <a class=\"direct-link\" href=\"http://www.zachleat.com/web/zachleat-is-dead/#removals\">#</a></h2> \n<ul> \n <li>Wordpress: It was good to me for many years, but I am not sad to see Wordpress go and will look forward to blogging using Markdown in my normal code editor.</li> \n <li>jQuery: I love it, but do not make use of enough JavaScript on the site to warrant it—yet.</li> \n</ul> \n<h2 id=\"future-plans\">Future Plans <a class=\"direct-link\" href=\"http://www.zachleat.com/web/zachleat-is-dead/#future-plans\">#</a></h2> \n<ul> \n <li>Add <a href=\"https://www.zachleat.com/web/socialcount/\">SocialCount</a>, which will mean either re-adding jQuery or removing the jQuery dependency from SocialCount.</li> \n <li>I want to use the Google Analytics data to generate a visualization for the site that will communicate post popularity. I want it to be easy for visitors to find my most popular posts on the big list of posts on the home page.</li> \n <li><s>Import the old Comments. This is still in the works. Whether or not I re-add the ability to let users post new comments directly on the site is still a matter for debate.</s></li> \n</ul> \n<p>For now, <a href=\"https://twitter.com/zachleat/\">let me know what you think on twitter</a>.</p>","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"4d5b59411490d202067c7a51332fe3ce","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921764},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"ALARMd now supports URLs","link":"http://www.zachleat.com/web/alarmd-now-supports-urls/","description":"\n\t\t\t<p>When you add an alarm source to <a href=\"http://www.zachleat.com/Projects/alarmd/\">ALARMd, the Internet Alarm Clock</a>, it will now default to opening the input URL in a new window, if the URL is determined not to be an MP3, Youtube video, or a <a href=\"http://last.fm/\">LAST.FM</a> user or tag.</p>\n<p>I added this to use <a href=\"http://www.zachleat.com/Projects/Malarquee/\">maLArquee</a> as an alarm. For instance you can try adding this one to your ALARMd for a nice wake up message.</p>\n<p><a href=\"http://www.zachleat.com/Projects/Malarquee/index.html?text=Jnxr%2520hc!!!\">http://www.zachleat.com/Projects/Malarquee/index.html?text=Jnxr%2520hc!!!</a></p>\n<p>Of course the obvious downfall of this approach is that your target website would need sound if you wanted to actually use it to wake up. But you could also use it to open up a new window at a specific time to prank a friend, coworker, or loved one. Try setting up ALARMd to use a naked lady website as a target url on your coworkers computer and set the time for right after lunch! Or open ALARMd up on your colleague’s computer and get it to open a competitor’s website during a big presentation to the company president.</p>\n<p>Fun to be had by all, I’m sure.</p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"38d659ebedd2449b6e142cdd95646394","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921760},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Now Deploying to Netlify","link":"http://www.zachleat.com/web/netlify/","description":"<p>As my time at <a href=\"https://www.zachleat.com/web/filament-group/\">\n  <picture>\n   <source type=\"image/webp\" srcset=\"https://www.zachleat.com/img/d38346fb-72.webp 72w\"><img alt=\"filamentgroup’s Avatar\" src=\"https://www.zachleat.com/img/d38346fb-72.jpeg\" width=\"72\" height=\"72\" class=\"z-avatar\" loading=\"lazy\" /></source>\n  </picture>Filament Group draws to a close</a>, I am very excited to share with y'all that I am joining <a href=\"https://www.netlify.com/\">\n  <picture>\n   <source type=\"image/webp\" srcset=\"https://www.zachleat.com/img/7a4e38ba-72.webp 72w\"><img alt=\"netlify’s Avatar\" src=\"https://www.zachleat.com/img/7a4e38ba-72.jpeg\" width=\"72\" height=\"72\" class=\"z-avatar\" loading=\"lazy\" /></source>\n  </picture>Netlify</a>!</p> \n<p>Given my own open source work with <a href=\"https://www.11ty.dev/\">\n  <picture>\n   <source type=\"image/webp\" srcset=\"https://www.zachleat.com/img/9d23164f-72.webp 72w\"><img alt=\"eleven_ty’s Avatar\" src=\"https://www.zachleat.com/img/9d23164f-72.jpeg\" width=\"72\" height=\"72\" class=\"z-avatar\" loading=\"lazy\" /></source>\n  </picture>Eleventy</a> over the past two years, this might seem like an incredibly obvious transition. Obvious transitions are good!</p> \n<p>I have been very impressed with the founders of Netlify: <a href=\"https://twitter.com/Chr_Bach\">\n  <picture>\n   <source type=\"image/webp\" srcset=\"https://www.zachleat.com/img/354023ab-72.webp 72w\"><img alt=\"Chr_Bach’s Avatar\" src=\"https://www.zachleat.com/img/354023ab-72.jpeg\" width=\"72\" height=\"72\" class=\"z-avatar\" loading=\"lazy\" /></source>\n  </picture>Chris Bach</a> and <a href=\"https://twitter.com/biilmann\">\n  <picture>\n   <source type=\"image/webp\" srcset=\"https://www.zachleat.com/img/c7dcf6dd-72.webp 72w\"><img alt=\"biilmann’s Avatar\" src=\"https://www.zachleat.com/img/c7dcf6dd-72.jpeg\" width=\"72\" height=\"72\" class=\"z-avatar\" loading=\"lazy\" /></source>\n  </picture>Matt Biilmann</a>. I was first introduced to Matt years ago when our paths crossed working on the <a href=\"https://www.zachleat.com/web/the-compromise/\">font loading</a> for <a href=\"https://www.netlify.com/case-studies/smashing/\">the \n  <picture>\n   <source type=\"image/webp\" srcset=\"https://www.zachleat.com/img/17d13d5b-72.webp 72w\"><img alt=\"smashingmag’s Avatar\" src=\"https://www.zachleat.com/img/17d13d5b-72.jpeg\" width=\"72\" height=\"72\" class=\"z-avatar\" loading=\"lazy\" /></source>\n  </picture>Smashing Magazine relaunch</a>. He had written a great <a href=\"https://www.zachleat.com/web/font-loading-classes/\">PostCSS plugin to handle automatic class management for font loading</a>.</p> \n<p>For me Smashing Magazine was the watershed moment for JAMstack<a href=\"http://www.zachleat.com/web/netlify/#note-1\" class=\"notes_link\" id=\"link-note-1\">1</a>, similar to what <a href=\"https://www.filamentgroup.com/lab/introducing-the-new-responsive-designed-bostonglobecom.html\">Filament Group (and friends) did for \n  <picture>\n   <source type=\"image/webp\" srcset=\"https://www.zachleat.com/img/fad6c9bd-72.webp 72w\"><img alt=\"rwd’s Avatar\" src=\"https://www.zachleat.com/img/fad6c9bd-72.jpeg\" width=\"72\" height=\"72\" class=\"z-avatar\" loading=\"lazy\" /></source>\n  </picture>Responsive Web Design with the \n  <picture>\n   <source type=\"image/webp\" srcset=\"https://www.zachleat.com/img/6259b7b1-72.webp 72w\"><img alt=\"BostonGlobe’s Avatar\" src=\"https://www.zachleat.com/img/6259b7b1-72.jpeg\" width=\"72\" height=\"72\" class=\"z-avatar\" loading=\"lazy\" /></source>\n  </picture>Boston Globe</a>. The Smashing Magazine launch showed that not only is a large-scale JAMstack implementation possible, but it can be a more efficient way to work with the potential to deliver a higher quality final product. The JAMstack gives more power to front-end developers by <em>properly</em> decoupling the front-end from the back while simultaneously delivering performance improvements. It allows front-end developers to focus on their specialty.</p> \n<p>Sites that move to this architecture really have the opportunity to see some big wins in both developer experience and user experience (as if they were ever in disagreement).</p> \n<p>At this point it's pretty clear that Responsive Web Design has won. The few lone hold-outs are left defending the <code>User-Agent</code> string—that’s not a hill you want to die on. Are there a few bad implementations of Responsive Web Design? Sure. But it's the clear winner to deliver your site to the infinite landscape of real world devices.</p> \n<p>I believe the same revolution is happening with JAMstack and I’m excited to play a part of it at Netlify.</p> \n<hr> \n <ol class=\"notes\"> \n  <li class=\"notes_note\"><a id=\"note-1\" href=\"http://www.zachleat.com/web/netlify/#link-note-1\" class=\"notes_linkback\">Jump back to the reference.</a> I’m pretty sure <a href=\"https://twitter.com/davatron5000\">\n    <picture>\n     <source type=\"image/webp\" srcset=\"https://www.zachleat.com/img/46efa1c5-72.webp 72w\"><img alt=\"davatron5000’s Avatar\" src=\"https://www.zachleat.com/img/46efa1c5-72.jpeg\" width=\"72\" height=\"72\" class=\"z-avatar\" loading=\"lazy\" /></source>\n    </picture>Dave Rupert</a> said this first or at least something to this effect at <a href=\"https://twitter.com/jamstackconf\">\n    <picture>\n     <source type=\"image/webp\" srcset=\"https://www.zachleat.com/img/d1ea4574-72.webp 72w\"><img alt=\"jamstackconf’s Avatar\" src=\"https://www.zachleat.com/img/d1ea4574-72.jpeg\" width=\"72\" height=\"72\" class=\"z-avatar\" loading=\"lazy\" /></source>\n    </picture>JAMstack_conf</a>.</li> \n </ol> \n</hr>","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"941405ba31fceb96f990de834ee1c47e","bgimgJsdelivr":"","metaImg":"","author":"","articleImgCdnMap":{"https://www.zachleat.com/img/d38346fb-72.jpeg":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn48@2020_5/2020/08/25/02-02-21-071_91d9f715db3604d2.webp","https://www.zachleat.com/img/7a4e38ba-72.jpeg":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn85@2020_5/2020/08/25/02-02-11-966_e1cb2cd3219b4dbf.webp","https://www.zachleat.com/img/9d23164f-72.jpeg":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn81@2020_3/2020/08/25/02-02-13-525_21a73ffef3a3874c.webp","https://www.zachleat.com/img/354023ab-72.jpeg":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn58@2020_1/2020/08/25/02-02-13-147_f4bea5c63177c54c.webp","https://www.zachleat.com/img/c7dcf6dd-72.jpeg":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn47@2020_3/2020/08/25/02-02-15-297_2772147c92760517.webp","https://www.zachleat.com/img/17d13d5b-72.jpeg":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn24@2020_2/2020/08/25/02-02-19-162_05a6fd50f2c5eea5.webp","https://www.zachleat.com/img/fad6c9bd-72.jpeg":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn43@2020_2/2020/08/25/02-02-17-637_22480286842f018a.webp","https://www.zachleat.com/img/6259b7b1-72.jpeg":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn23@2020_4/2020/08/25/02-02-14-154_9db900db0e2aac5b.webp","https://www.zachleat.com/img/46efa1c5-72.jpeg":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn31@2020_6/2020/08/25/02-02-18-834_d3bc3dc78a6b0bfc.webp","https://www.zachleat.com/img/d1ea4574-72.jpeg":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn43@2020_4/2020/08/25/02-02-19-860_dea93cbfdfa80ff7.webp"},"publishedOrCreatedDate":1598320921772},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"A Versatile 2KB of JS","link":"http://www.zachleat.com/web/versatile-2kb/","description":"\n\t\t\t<p><a href=\"https://nebraskajs.com/2017/versatile2kb/\">Watch the talk on NebraskaJS.com</a> (24:45) <span class=\"tag video\">Video</span></p>\n<p>Or watch here:</p>\n<div class=\"fluid-width-video-wrapper\"><iframe class=\"youtube-player\" type=\"text/html\" width=\"640\" height=\"385\" src=\"https://www.youtube.com/embed/TUxTai00v1k/\" frameborder=\"0\" allowfullscreen=\"\"></iframe></div>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"867c988ea8e1c89d39dc35967ba458e9","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921766},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Developing a Robust Font Loading Strategy for CSS-Tricks","link":"http://www.zachleat.com/web/css-tricks-web-fonts/","description":"<style> .sm-img { display: block; max-width: 100%; } </style> \n<p>When <a href=\"https://chriscoyier.net/\">Chris Coyier</a> asked me to look at the font loading behavior for the new redesign of CSS-Tricks, I’ll admit that I was excited. A new case study on a web site with an intimidating, exhaustive, encyclopedic amount of existing web development content!</p> \n<h2 id=\"design-review\">Design Review <a class=\"direct-link\" href=\"http://www.zachleat.com/web/css-tricks-web-fonts/#design-review\">#</a></h2> \n<p>When doing any web font strategy recommendation, the first thing I like to do is have a look at the design. I want to know where and how the typefaces are being used in the design in order to give appropriate advice on how they should be loaded. Luckily, Chris gave me a sneak peek at what I was dealing with.</p> \n<p>The new design uses the <a href=\"https://fonts.google.com/specimen/Rubik\">Rubik typeface, available on Google Fonts</a>. That’s exciting, as most of the typefaces available on Google Fonts have open licenses and this was no exception: Rubik uses the <a href=\"https://scripts.sil.org/cms/scripts/page.php?site_id=nrsi&amp;id=OFL_web\">Open Font License</a>, which gives us license 😎 to make the modifications we need to optimize the font for the CSS-Tricks web site.</p> \n<img src=\"https://www.zachleat.com/web/img/posts/css-tricks/design.png\" alt=\"\" class=\"primary\"> <p>As Chris has helpfully annotated above, the design has three different weights of Rubik in play: Regular (<code>normal</code> or <code>400</code>), Medium (<code>500</code>), and Bold (<code>700</code>).</p> <p>The next step I took was to code up a quick prototype to double-check that the annotations were correct. I overlaid the prototype on top of the screenshot to make sure things lined up properly. While I didn’t have access to the coded prototype, I was mostly worried that the body copy was using a web font that we hadn’t discussed—but luckily was able to determine that the body copy was using <code>system-ui</code> (not a web font).</p> <img src=\"https://www.zachleat.com/web/img/posts/css-tricks/design-overlay.png\" alt=\"\"> <p>There was one small problem. That Medium (<code>500</code> weight) wasn’t right—it was actually a Regular (<code>400</code>) in disguise!</p> <p>The design:</p> <img src=\"https://www.zachleat.com/web/img/posts/css-tricks/400-500a.png\" alt=\"\" class=\"sm-img\"> <p><code>font-weight: 500</code> and <code>font-weight: 400</code>:</p> <img src=\"https://www.zachleat.com/web/img/posts/css-tricks/400-500b.png\" alt=\"\" class=\"sm-img\"> <p>font-weight: 400 for both:</p> <img src=\"https://www.zachleat.com/web/img/posts/css-tricks/400-500c.png\" alt=\"\" class=\"sm-img\"> <p>That will save us one font file!</p> <p>From our design and prototype, we now know that we have two font files that are important here: Rubik Regular and Rubik Bold. Next let’s take a peak at those files to see what we’re working with.</p> <h2 id=\"rubik-deep-dive\">Rubik Deep Dive <a class=\"direct-link\" href=\"http://www.zachleat.com/web/css-tricks-web-fonts/#rubik-deep-dive\">#</a></h2> <p>Another great thing about Google Fonts is that they provide easy download links for all of their typefaces. Let’s download the zip for <a href=\"https://fonts.google.com/specimen/Rubik?selection.family=Rubik\">Rubik</a>:</p> <img src=\"https://www.zachleat.com/web/img/posts/css-tricks/googlefonts.png\" alt=\"\"> <img src=\"https://www.zachleat.com/web/img/posts/css-tricks/downloaded.png\" alt=\"\"> <p>The download gives us a zip file with ten hefty TrueType fonts from the Rubik typeface.</p> <h2 id=\"the-merits-of-two-stage-font-loading\">The Merits of Two Stage Font Loading <a class=\"direct-link\" href=\"http://www.zachleat.com/web/css-tricks-web-fonts/#the-merits-of-two-stage-font-loading\">#</a></h2> <p>I’ve written about the benefits to using two stage font loading before:</p> \n       <ul> \n        <li><a href=\"https://www.zachleat.com/web/foft/\">Flash of Faux Text</a> (2015)</li> \n        <li><a href=\"https://www.zachleat.com/web/critical-webfonts/\">Critical Web Fonts</a> (2016)</li> \n        <li><a href=\"https://www.zachleat.com/web/comprehensive-webfonts/\">A Comprehensive Guide to Font Loading Strategies</a>, the last 4 methods (2016)</li> \n       </ul> <p>The entire point of implementing a two stage font loading strategy is to mitigate text movement associated with web fonts when they finish loading and reflow the text on the page. By dividing your font load into a smaller chunk and a larger lazy loaded chunk, we can minimize and mitigate the impact of web fonts to end users. I’m not necessarily on team FOIT (invisible text) or team FOUT (fallback text)—both are bad.</p> <p>In the past I’ve recommended two stage font loading strategies that were all-in on JavaScript. However, with burgeoning <code>font-display</code> browser support we can take advantage of <code>font-display</code> to deliver a good web font experience without JavaScript! Importantly, o<em>ur First Stage must be feature-inclusive enough to be self sufficient if the JavaScript fonts aren’t loaded.</em></p> <p>With our two stage font loading, we must make some hard choices about what we want to load in our first stage. To know how to make those choices, we need to know what is available to us—let’s inspect these fonts!</p> <h2 id=\"wakamai-fondue\">Wakamai Fondue <a class=\"direct-link\" href=\"http://www.zachleat.com/web/css-tricks-web-fonts/#wakamai-fondue\">#</a></h2> <p>One of the best tools I’ve found for inspecting a web font’s internals is called <a href=\"https://wakamaifondue.com/\">Wakamai Fondue</a> (What Can My Font Do?) by <a href=\"https://twitter.com/pixelambacht/\">Roel Nieskens (@PixelAmbacht)</a>.</p> <p>Wakamai Fondue works transparently with WOFF and WOFF2 files too—which makes it a nice replacement for Mac OS X Preview until Preview gets support for those formats. It’s really great. Let’s drag and drop the <code>Rubik-Bold.ttf</code> file we just downloaded and take a peek inside.</p> <img src=\"https://www.zachleat.com/web/img/posts/css-tricks/wakamai-fondue.png\" alt=\"\" class=\"primary\"> <p>Wakamai Fondue shows that Rubik Bold (140KB TTF, 46KB WOFF2 compressed) has 686 characters and a bunch of fancy OpenType features:</p> \n        <ul> \n         <li>Fractions, Numeric Subscripts and Superscripts, and Ordinals <img src=\"https://www.zachleat.com/web/img/posts/css-tricks/features1.png\" alt=\"\" class=\"sm-img\"><img src=\"https://www.zachleat.com/web/img/posts/css-tricks/features2.png\" alt=\"\" class=\"sm-img\"><img src=\"https://www.zachleat.com/web/img/posts/css-tricks/features3.png\" alt=\"\" class=\"sm-img\"><img src=\"https://www.zachleat.com/web/img/posts/css-tricks/features4.png\" alt=\"\" class=\"sm-img\" /></img></img></img></li> \n         <li>Ligatures <img src=\"https://www.zachleat.com/web/img/posts/css-tricks/features5.png\" alt=\"\" class=\"sm-img\"><img src=\"https://www.zachleat.com/web/img/posts/css-tricks/features6.png\" alt=\"\" class=\"sm-img\" /></img></li> \n         <li>Case-Sensitive Forms <img src=\"https://www.zachleat.com/web/img/posts/css-tricks/features7.png\" alt=\"\" class=\"sm-img\" /></li> \n         <li>All of the above OpenType features only cost us <strong>2.9KB WOFF2 (6% of the total)</strong></li> \n         <li>Kerning: <strong>9.7KB WOFF2 cost (21.6% of the total)</strong></li> \n         <li>Hinting: <strong>11.5KB WOFF2 cost (25.7% of the total)</strong> (note that Hinting not yet reported by Wakamai Fondue—Roel consider this a feature request, please!)</li> \n        </ul> <p>(WOFF2 size costs calculated using <code>pyftsubset</code> with <code>--layout-features</code> with <code>--no-hinting --desubroutinize</code> for hinting size)</p> <p>The nice thing here is that you customize what you want on the first stage and what you want on the second stage to your use case and preferences. Just know that the more you put into the First Stage, the more likely the user will either experience longer First Render delays (due to heavy <code>preload</code> cost) or longer FOUT times (as fallback text is shown while waiting for First Stage to complete).</p> <h2 id=\"two-stage-choices-for-css-tricks%3A\">Two Stage Choices for CSS-Tricks: <a class=\"direct-link\" href=\"http://www.zachleat.com/web/css-tricks-web-fonts/#two-stage-choices-for-css-tricks%3A\">#</a></h2> <p><strong>First Stage</strong></p> \n        <ul> \n         <li>Kerning \n          <ul> \n           <li>While this is one of the heftier parts of our font, it <em>does</em> affect text movement if it’s not available up front. You may choose to defer this to the second stage—that’s fine! Just be aware of how much your text moves when it lazy loads in.</li> \n          </ul> </li> \n         <li>Subset to Latin Character Set: 221 characters of the total 686 available to us. This seems to be a standard unicode range across many of Google’s Fonts—so this range was borrowed directly from the Google Fonts CSS 😎.</li> \n        </ul> <p>Here’s the <code>pyftsubset</code> command (from <a href=\"https://github.com/fonttools/fonttools\">fonttools</a>) I used to generate first stage font files:</p> <pre class=\"language-bash\"><code class=\"language-bash\">pyftsubset <span class=\"token string\">\"Rubik-Bold.ttf\"</span> --output-file<span class=\"token operator\">=</span><span class=\"token string\">\"Rubik-Bold-kern-latin.woff2\"</span> --flavor<span class=\"token operator\">=</span>woff2 --layout-features<span class=\"token operator\">=</span>ccmp,locl,mark,mkmk,kern --no-hinting --desubroutinize --unicodes<span class=\"token operator\">=</span>U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD<br><br><span class=\"token comment\"># Run again using \"Rubik-Regular.ttf\"</span><br><span class=\"token comment\"># To generate woff files, use `--flavor=woff`</span><br><span class=\"token comment\"># You may recognize the other `--layout-features=ccmp,locl,mark,mkmk` from the Required Layout Features section on Wakamai Fondue.</span></br></br></br></br></code></pre> <p>First stage file size results:</p> \n        <ul> \n         <li><strong>13.9KB</strong> for <code>Rubik-Bold-kern-latin.woff2</code></li> \n         <li><strong>13.9KB</strong> for <code>Rubik-Regular-kern-latin.woff2</code></li> \n        </ul> <p><strong>Second Stage</strong></p> \n        <ul> \n         <li>Fancy OpenType features (Ligatures, Fractions, Subscript and Superscript, etc) \n          <ul> \n           <li>OpenType features are some of the coolest web font tech and they largely go unused. Worse, if you’re loading Rubik from Google Fonts they prune most of them out! However, these features are clearly all Nice To Haves™ and as such we’ve deferred them to our second stage load.</li> \n          </ul> </li> \n         <li>Hinting: extra instructions to fit individual glyphs to the available pixel grid \n          <ul> \n           <li>This may be a contentious choice as Mac OS largely ignores hinting so it isn’t used.</li> \n           <li>Some have argued that as screen resolutions get finer, hinting is increasingly unnecessary. You may even be tempted to hide this behind a <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/@media/resolution\"><code>resolution</code> media query</a>—but note that hinting (when used) is still important for small font sizes, which may or may not be relevant to your design.</li> \n           <li>Option: you may want to remove this altogether. Add <code>--no-hinting --desubroutinize</code> to your <code>pyftsubset</code> command below to remove it.</li> \n          </ul> </li> \n         <li>The remaining character set. Our first stage only loaded 221 characters, so let’s load the remaining 465 available in the Rubik typeface. \n          <ul> \n           <li>Option: you may want to second stage with a smaller subset of characters if your content allows it. Customize with <code>--unicodes</code>. Have a look at a project I maintain called <a href=\"https://github.com/filamentgroup/glyphhanger\">GlyphHanger</a> that takes a URL as input and spits out the <code>unicode-range</code> of characters used on that URL (it does a lot of other things too).</li> \n          </ul> </li> \n        </ul> <p><code>pyfsubset</code> command (from <a href=\"https://github.com/fonttools/fonttools\">fonttools</a>) to generate second stage font files:</p> <pre><code>pyftsubset \"Rubik-Bold.ttf\" --output-file=\"Rubik-Bold-hint-all.woff2\" --flavor=woff2 --layout-features=\"*\" --unicodes=U+0-10FFFF\n\n# Run again using \"Rubik-Regular.ttf\"\n# To generate woff files, use `--flavor=woff`\n</code></pre> <p>Second stage file size results:</p> \n        <ul> \n         <li><strong>44.7KB</strong> for <code>Rubik-Bold-hint-all.woff2</code></li> \n         <li><strong>44KB</strong> for <code>Rubik-Regular-hint-all.woff2</code></li> \n        </ul> <h2 id=\"give-me-something-to-copy-and-paste\">Give Me Something to Copy and Paste <a class=\"direct-link\" href=\"http://www.zachleat.com/web/css-tricks-web-fonts/#give-me-something-to-copy-and-paste\">#</a></h2> <p>Most of the work up to this point was a large discussion about how to prioritize different features for our two stage load, but the code to implement this is really quite easy. Here are the pieces:</p> <p><strong>Preload HTML for First Stage</strong></p> <p>Preload will affect first render times, remove this if you would rather have FOUT 😱 (please don’t).</p> <pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>preload<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>Rubik-Bold-kern-latin.woff2<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">as</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>font<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>font/woff2<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">crossorigin</span><span class=\"token punctuation\">&gt;</span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>preload<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>Rubik-Regular-kern-latin.woff2<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">as</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>font<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>font/woff2<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">crossorigin</span><span class=\"token punctuation\">&gt;</span></span></br></code></pre> <p><strong>CSS for First Stage (inline in <code>&lt;head&gt;</code>)</strong></p> <pre class=\"language-css\"><code class=\"language-css\"><span class=\"token atrule\"><span class=\"token rule\">@font-face</span></span> <span class=\"token punctuation\">{</span><br>    <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> Rubik<span class=\"token punctuation\">;</span><br>    <span class=\"token property\">src</span><span class=\"token punctuation\">:</span> <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span>Rubik-Bold-kern-latin.woff2<span class=\"token punctuation\">)</span></span> <span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"woff2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>       <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span>Rubik-Bold-kern-latin.woff<span class=\"token punctuation\">)</span></span> <span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"woff\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> 700<span class=\"token punctuation\">;</span><br> <span class=\"token property\">font-display</span><span class=\"token punctuation\">:</span> swap<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><span class=\"token atrule\"><span class=\"token rule\">@font-face</span></span> <span class=\"token punctuation\">{</span><br> <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> Rubik<span class=\"token punctuation\">;</span><br> <span class=\"token property\">src</span><span class=\"token punctuation\">:</span> <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span>Rubik-Regular--kern-latin.woff2<span class=\"token punctuation\">)</span></span> <span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"woff2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br> <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span>Rubik-Regular-kern-latin.woff<span class=\"token punctuation\">)</span></span> <span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"woff\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br> <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> 400<span class=\"token punctuation\">;</span><br> <span class=\"token property\">font-display</span><span class=\"token punctuation\">:</span> swap<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span></br></br></br></br></br></br></br></br></br></br></br></br></br></code></pre> <p>We could add our subset <code>unicode-range</code> value we used above in our glyphhanger command, but it would not have any functional value. A few reasons for this:</p> \n        <ol> \n         <li>Our second stage will not be a distinct set of glyphs, it’s a superset of the first stage glyphs.</li> \n         <li>Our second stage has other features that we don’t (or can’t yet) feature test for, namely hinting. See this <a href=\"https://github.com/w3c/csswg-drafts/issues/3926\">proposal for a <code>uses-hints</code> media query</a>.</li> \n        </ol> <p><strong>JavaScript for Second Stage</strong></p> <p>You can put this wherever you’d like. I like to inline it into the <code>&lt;head&gt;</code> too but you may have other high priority requests you’d like to load before these.</p> <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"fonts\"</span> <span class=\"token keyword\">in</span> document <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">var</span> regular <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FontFace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Rubik\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"url(Rubik-Regular-hint-all.woff2) format('woff2'), url(Rubik-Regular-hint-all.woff) format('woff')\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">var</span> bold <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FontFace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Rubik\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"url(Rubik-Bold-hint-all.woff2) format('woff2'), url(Rubik-Bold-hint-all.woff) format('woff')\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> weight<span class=\"token operator\">:</span> <span class=\"token string\">\"700\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>    Promise<span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span> bold<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> regular<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fonts</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br> fonts<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">font</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br> document<span class=\"token punctuation\">.</span>fonts<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>font<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span></br></br></br></br></br></br></br></br></br></code></pre> <p>Notably if the browser doesn’t support the <a href=\"https://caniuse.com/#feat=font-loading\">CSS Font Loading API</a> (read: Edge/Internet Explorer) they will only see the First Stage web font load (which—remember—we specifically architected to be sufficient and is a fine compromise here). If you disagree (and it’s reasonable to do so as this approach means that IE and Edge won’t get Hinting), use the following block too:</p> <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fonts\"</span> <span class=\"token keyword\">in</span> document<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token string\">\"head\"</span> <span class=\"token keyword\">in</span> document<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token comment\">// Awkwardly dump the second stage @font-face blocks in the head</span><br>    <span class=\"token keyword\">var</span> style <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"style\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token comment\">// Note: Edge supports WOFF2</span><br>    style<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token string\">\"@font-face { font-family: Rubik; src: url(/rubik/Rubik-Regular-hint-all.woff2) format('woff2'), url(/rubik/Rubik-Regular-hint-all.woff) format('woff'); } @font-face { font-family: Rubik; font-weight: 700; src: url(/rubik/Rubik-Bold-hint-all.woff2) format('woff2'), url(/rubik/Rubik-Bold-hint-all.woff) format('woff'); }\"</span><span class=\"token punctuation\">;</span><br> document<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>style<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span></br></br></br></br></br></br></code></pre> <p><em>Update to use <code>document.head</code> per an excellent recommendation from <a href=\"https://twitter.com/simaodeveloper/status/1149032206318342147\">@simaodeveloper</a>.</em></p> <h2 id=\"additional-optimizations-and-options\">Additional Optimizations and Options <a class=\"direct-link\" href=\"http://www.zachleat.com/web/css-tricks-web-fonts/#additional-optimizations-and-options\">#</a></h2> \n        <ul> \n         <li>Put our four web font URLs into your Service Worker, if you have one!</li> \n         <li>Want to add true italics? \n          <ul> \n           <li>Option 1: Add them to both the first stage and the second stage, using the same methodology presented above. Keep in mind: if you preload too much, you pay in first render time.</li> \n           <li>Option 2 (my recommendation): Add the full version only to the second stage and let the first stage use font-synthesis to fake italics until the full version has loaded.</li> \n          </ul> </li> \n        </ul> <h2 id=\"how-does-this-load%3F\">How does this load? <a class=\"direct-link\" href=\"http://www.zachleat.com/web/css-tricks-web-fonts/#how-does-this-load%3F\">#</a></h2> <p>For the most part, our performance profile will largely depend on how the CSS is loaded. If we add the current <a href=\"https://httparchive.org/reports/page-weight#bytesCss\">HTTP Archive average CSS weight of 50KB</a>, using preload (with Fast 3G and 6x CPU slowdown in Chrome Devtools), our first stage loads before first render! This means (for this example) no FOUT! Here’s how our demo looks after the first stage is complete.</p> \n        <ul> \n         <li>Live Demo hosted on <a href=\"https://css-tricks-font-loading.netlify.com/\">https://css-tricks-font-loading.netlify.com/</a></li> \n        </ul> <p><strong>First Stage</strong></p> <p>Any OpenType features will display their unsupported versions while we wait for the second stage to complete. Any text rendering that relies on hinting will be unhinted (for now). Any non-Latin characters will display fallbacks.</p> <img src=\"https://www.zachleat.com/web/img/posts/css-tricks/first-stage.png\" alt=\"\" class=\"primary\"> <p><strong>Second Stage</strong></p> <p>All the OpenType features available in the original font, hinting as the designer intended (not depicted in this screenshot), true non-Latin characters.</p> <img src=\"https://www.zachleat.com/web/img/posts/css-tricks/second-stage.png\" alt=\"\" class=\"primary\"> <h2 id=\"conclusion\">Conclusion <a class=\"direct-link\" href=\"http://www.zachleat.com/web/css-tricks-web-fonts/#conclusion\">#</a></h2> <p>If I were given liberties with the design, I would recommend removing Rubik Regular from the font loading altogether. It certainly isn’t pulling as much weight as Rubik Bold is here and it might be safe to switch to use <code>system-ui</code> for these design elements as well.</p> <p>For most headlines, you’re unlikely to notice that a second stage is loading at all. I’ve used a dramatic case here to demonstrate what’s happening behind the scenes. But this sneakiness is ideal—we want to transparently populate our cache (and/or serviceworker) with these second stage files so that they are available when they are needed for these extended character set scenarios.</p> <p>The wins here are numerous compared with a Google Fonts implementation:</p> \n          <ul> \n           <li>Google Fonts uses two different domains to load the content, one for the CSS and one for the font files. This is not ideal. We eliminate these extra hops and connection setups by self hosting. Our demo renders our first stage web font content more than 600ms (Fast 3G) before a similar Google Fonts demo would.</li> \n           <li>No invisible text, even if a font request is slower than expected (no FOIT!). <s>At time of writing, Google Fonts does not support <code>font-display</code> to make our text immediately visible.</s> <a href=\"https://www.zachleat.com/web/google-fonts-display/\">Google Fonts added <code>font-display</code> support</a>!</li> \n           <li>We use <code>preload</code> to mitigate most text movement on our page—in many cases this means no fallback text is shown (no FOUT!). At time of writing, Google Fonts does not support <code>preload</code> as the font file URLs on their service are not stable.</li> \n           <li>We use the CSS Font Loading API to group our second stage font loadings into a single repaint and reflow.</li> \n          </ul> <p>But perhaps most importantly we now have more control—we decide what features we want to load in our first and second stages to suit our design needs and performance requirements.</p> <h2 id=\"post-launch-update\">Post-Launch Update <a class=\"direct-link\" href=\"http://www.zachleat.com/web/css-tricks-web-fonts/#post-launch-update\">#</a></h2> <p>Chris wrote a blog post about <a href=\"https://css-tricks.com/design-v17/\">Design v17 and the new redesign</a>. He even wrote up a <a href=\"https://css-tricks.com/design-v17/#article-header-id-8\">little section on the web font implementation</a>.</p> \n          <blockquote class=\"twitter-tweet\" data-lang=\"en\">\n           <p lang=\"en\" dir=\"ltr\">Nice job everyone that worked on the <a href=\"https://twitter.com/css?ref_src=twsrc%5Etfw\">@css</a> relaunch!<br><br>Look at those web fonts showing up on that 2.09s Fast 3G first render 🎉<br><br>(full disclosure I helped a wee bit with the font loading here 😇) <a href=\"https://t.co/Ih7zJhelQQ\">pic.twitter.com/Ih7zJhelQQ</a></br></br></br></br></p>— Zach Leatherman (@zachleat) \n           <a href=\"https://twitter.com/zachleat/status/1080204464257187841?ref_src=twsrc%5Etfw\">January 1, 2019</a>\n          </blockquote> </img></img></img></img></img></img></img></img></img></img>","descriptionType":"html","feedId":12519,"bgimg":"https://www.zachleat.com/web/img/posts/css-tricks/design.png","linkMd5":"5b883b32a8c9de12a86f6104b0a66526","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn25@2020_4/2020/08/25/02-02-04-048_3a15bba8044d8914.webp","destWidth":1066,"destHeight":704,"sourceBytes":273146,"destBytes":56444,"author":"","articleImgCdnMap":{"https://www.zachleat.com/web/img/posts/css-tricks/design.png":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn25@2020_4/2020/08/25/02-02-04-048_3a15bba8044d8914.webp","https://www.zachleat.com/web/img/posts/css-tricks/design-overlay.png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn36@2020_6/2020/08/25/02-02-20-900_ea287f52c97c9da7.webp","https://www.zachleat.com/web/img/posts/css-tricks/400-500a.png":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn100@2020_5/2020/08/25/02-02-17-590_edb9b5dd746cb9f2.webp","https://www.zachleat.com/web/img/posts/css-tricks/400-500b.png":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn75@2020_4/2020/08/25/02-02-15-515_cd1f353474baa799.webp","https://www.zachleat.com/web/img/posts/css-tricks/400-500c.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn94@2020_1/2020/08/25/02-02-12-762_fd4b5291cd71ffad.webp","https://www.zachleat.com/web/img/posts/css-tricks/googlefonts.png":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn19@2020_1/2020/08/25/02-02-19-517_e88c9b8351c9e074.webp","https://www.zachleat.com/web/img/posts/css-tricks/downloaded.png":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn36@2020_5/2020/08/25/02-02-14-644_ff77c5f25619e3a1.webp","https://www.zachleat.com/web/img/posts/css-tricks/wakamai-fondue.png":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn23@2020_2/2020/08/25/02-02-17-737_7bc5fac74d0fbabc.webp","https://www.zachleat.com/web/img/posts/css-tricks/features1.png":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn84@2020_5/2020/08/25/02-02-20-409_887a2dd19dbadd6e.webp","https://www.zachleat.com/web/img/posts/css-tricks/features2.png":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn59@2020_4/2020/08/25/02-02-20-893_2217c4f57748e3d2.webp","https://www.zachleat.com/web/img/posts/css-tricks/features3.png":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn96@2020_1/2020/08/25/02-02-21-280_748a4845d23b7f03.webp","https://www.zachleat.com/web/img/posts/css-tricks/features4.png":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn51@2020_6/2020/08/25/02-02-16-408_fb8ede5d81a1b006.webp","https://www.zachleat.com/web/img/posts/css-tricks/features5.png":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn83@2020_4/2020/08/25/02-02-21-211_127200c844cb9f1d.webp","https://www.zachleat.com/web/img/posts/css-tricks/features6.png":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn12@2020_5/2020/08/25/02-02-20-441_2116ceff66a3da18.webp","https://www.zachleat.com/web/img/posts/css-tricks/features7.png":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn47@2020_5/2020/08/25/02-02-20-507_5403c829851915ad.webp","https://www.zachleat.com/web/img/posts/css-tricks/first-stage.png":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn44@2020_3/2020/08/25/02-02-20-837_220b12b38ed4e1ef.webp","https://www.zachleat.com/web/img/posts/css-tricks/second-stage.png":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn37@2020_1/2020/08/25/02-02-10-557_f3a1dfdd1e22be41.webp"},"publishedOrCreatedDate":1598320921773},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"The Five Whys of Web Font Loading Performance","link":"http://www.zachleat.com/web/five-whys/","description":"<p><em>Originally presented at <a href=\"https://perfnow.nl/\">Performance.now(), The Web Performance Conference</a> on November 8th, 2018 in Amsterdam, Netherlands 🇳🇱.</em></p> \n<p>This was a completely revamped version of my Web Font Loading talk with a brand new theme and new examples. I took the audience through a case study improving the web font loading of the default theme you get when you create a new blog on <a href=\"http://wordpress.com/\">wordpress.com</a>. It originally loaded five different font files from Google Fonts.</p> \n<p>The presentation iterated through a variety of different font loading tools and showed how they affected the performance of the site using real data and results from <a href=\"https://www.webpagetest.org/\">webpagetest.org</a>.</p> \n<ul> \n <li>Demos on <a href=\"https://performance-sometime.netlify.com/\">Netlify at <code>performance-sometime.netlify.com</code></a>.</li> \n <li>Source code on <a href=\"https://github.com/zachleat/performance-sometime\">GitHub at <code>zachleat/performance-sometime</code></a>.</li> \n</ul> \n<p>Some of the tests and approaches demoed here are <em>not yet documented</em> on <a href=\"https://www.zachleat.com/web/comprehensive-webfonts/\">A Comprehensive Guide to Font Loading Strategies</a> nor are they available on <a href=\"https://github.com/zachleat/web-font-loading-recipes\"><code>web-font-loading-recipes</code></a> (but soon).</p> \n<h2 id=\"video\">Video <a class=\"direct-link\" href=\"http://www.zachleat.com/web/five-whys/#video\">#</a></h2> \n<div class=\"fullwidth\">\n <div class=\"fluid-width-video-wrapper\">\n  <iframe class=\"youtube-player\" src=\"https://www.youtube.com/embed/FbguhX3n3Uc\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\"></iframe>\n </div>\n</div> \n<p><em>The <a href=\"https://www.youtube.com/watch?v=FbguhX3n3Uc\">video is hosted on YouTube</a>.</em></p> \n<h2 id=\"slides\">Slides <a class=\"direct-link\" href=\"http://www.zachleat.com/web/five-whys/#slides\">#</a></h2> \n<div class=\"fullwidth\">\n <div class=\"fluid-width-video-wrapper\">\n  <iframe src=\"https://noti.st/zachleat/KNaZEg/embed\" frameborder=\"0\" allowfullscreen=\"\"></iframe>\n </div>\n</div> \n<p><em>The <a href=\"https://noti.st/zachleat/KNaZEg\">slides are hosted on Notist</a>.</em></p> \n<h2 id=\"coverage\">Coverage <a class=\"direct-link\" href=\"http://www.zachleat.com/web/five-whys/#coverage\">#</a></h2> \n<ul> \n <li><a href=\"https://hiddedevries.nl/en/blog/2018-11-10-up-to-speed-with-web-performance\">Up to speed with web performance</a> by <a href=\"https://twitter.com/hdv\">Hidde de Vries</a></li> \n <li><a href=\"https://medium.com/zoover-engineering/notes-from-performance-now-709817be3636\">Notes from performance.now()</a> by <a href=\"https://twitter.com/GieselaarD\">Dario Gieselaar</a></li> \n <li><a href=\"https://koen.kivits.com/2018/11/20/performance-now/\">performance.now()—stuff I learned</a> by <a href=\"https://twitter.com/koenkivits\">Koen Kivits</a></li> \n <li><a href=\"https://twitter.com/perfnowconf/status/1060525490518274048\">Photos of me at @perfnowconf</a></li> \n <li><a href=\"https://perfnow.nl/photos\">All conference photos</a></li> \n</ul>","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"8cb0eb1eb5ebb8a833eb2fb92c3b9503","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921771},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"word-break Podcast #1","link":"http://www.zachleat.com/web/word-break-podcast/","description":"\n\t\t\t<p><em>Unfortunately this podcast no longer exists. You can find some of the old episodes on <a href=\"https://itunes.apple.com/us/podcast/word-break-show/id937821717?mt=2\">iTunes</a> (but not this one).</em></p>\n<p><s><a href=\"http://word-break.com/podcast/episode-01-with-zach-leatherman/\">Listen to the Interview on word-break.com</a></s> (48:38)</p>\n<blockquote>\n<p>Our first episode with a guest! Jon and Trevan are joined by Zach Leatherman, a front-end engineer at Filament Group interested in responsive web design and JavaScript. He currently works for The Filament Group, where they attempt to make the web work for everyone. Previously, he was a UI Architect for Union Pacific Railroad. He also herds NebraskaJS.</p>\n</blockquote>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"fb0f0b375f21b61d74e12cd08b1dc19b","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921765},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Wait, WebP is actually worth it.","link":"http://www.zachleat.com/web/webp/","description":"<p><em>(This article has been translated to Russian: <a href=\"https://medium.com/web-standards/webp-worth-it-fc08e230f46e\">Погодите, а WebP вообще-то ничего!</a>)</em></p> \n<p>For <a href=\"https://www.zachleat.com/web/1m-cups-omaha/\">my previous talk</a>, I decided to do something a little different with my slides—I decided to <a href=\"https://twitter.com/zachleat/status/815608036651896833\">self host them</a>.</p> \n<p>When I work on a talk, I create the slides in Keynote. After the talk has finished, I’ll <a href=\"https://speakerdeck.com/zachleat\">post them on Speakerdeck</a>. Speakerdeck is <em>very ok</em>. It operates how I’d expect a shallow copy of a dynamic slideshow to operate. I wanted to try to do a little better.</p> \n<p>I definitely like the format, perhaps pioneered (at least <a href=\"http://idlewords.com/talks/website_obesity.htm\">in my experience</a>) by Maciej Cegłowski. It’s a big giant two column format with slide images on the left and presenter notes on the right. I’ve also seen this done beautifully by <a href=\"https://www.filamentgroup.com/lab/delivering-responsibly.html\">Scott Jehl on the Filament Group lab</a>.</p> \n<p>So I dug deep into the Filament Group Slack archives and found a tool to generate images from Keynote slides, called <a href=\"https://keynote-extractor.com/\">Keynote Extractor</a>. It works quite well. It extracted my Keynote slides into a simple directory with HTML, CSS, and PNG image files. The only problem was that the images were huge—a total of almost 18MB to be exact.</p> \n<picture> \n <source type=\"image/webp\" srcset=\"https://www.zachleat.com/web/img/posts/webp/0-original.webp\"> <img src=\"https://www.zachleat.com/web/img/posts/webp/0-original.png\" alt=\"Devtools Screenshot showing 18MB download\" class=\"primary\"> </img></source>\n</picture> \n<h2 id=\"imageoptim\">ImageOptim <a class=\"direct-link\" href=\"http://www.zachleat.com/web/webp/#imageoptim\">#</a></h2> \n<p>Okay, so maybe the images aren’t properly optimized. Let’s run them through <a href=\"https://imageoptim.com/\">ImageOptim</a> and see how much that helps.</p> \n<picture> \n <source type=\"image/webp\" srcset=\"https://www.zachleat.com/web/img/posts/webp/1-imageoptim.webp\"> <img src=\"https://www.zachleat.com/web/img/posts/webp/1-imageoptim.png\" alt=\"Devtools Screenshot showing 12MB download\" class=\"primary\"> </img></source>\n</picture> \n<p>Okay, 12MB—that’s an improvement, but obviously not good enough.</p> \n<h2 id=\"jpeg\">JPEG <a class=\"direct-link\" href=\"http://www.zachleat.com/web/webp/#jpeg\">#</a></h2> \n<p>Let’s convert the PNG images to JPEG. JPEG compression is magical and often better for realistic photos.</p> \n<pre><code># Converts a directory of PNG files to JPG\n# Added this to my .zshrc file (or .bash_profile)\n# Install `imagemagick` with `brew install imagemagick`\nfunction batchjpeg() {\n\tfor i in *.png\n\tdo\n\t\tconvert \"$i\" \"${i%.*}.jpg\"\n\tdone\n}\n</code></pre> \n<ul> \n <li><em>Read more about <a href=\"http://www.imagemagick.org/script/command-line-options.php#quality\"><code>-quality</code> and the default settings for <code>convert</code> in ImageMagick</a>.</em></li> \n</ul> \n<picture> \n <source type=\"image/webp\" srcset=\"https://www.zachleat.com/web/img/posts/webp/2-jpg.webp\"> <img src=\"https://www.zachleat.com/web/img/posts/webp/2-jpg.png\" alt=\"Devtools Screenshot showing 4.5MB download\" class=\"primary\"> </img></source>\n</picture> \n<p>Getting better—4.5MB.</p> \n<h2 id=\"webp\">WebP <a class=\"direct-link\" href=\"http://www.zachleat.com/web/webp/#webp\">#</a></h2> \n<p>I must admit that I’ve carried a bias against WebP and thought it was a little silly in the past, mostly because it had <a href=\"http://caniuse.com/#feat=webp\">limited browser support</a>, which necessitated a JavaScript solution or a backend service to serve WebP images properly with fallbacks.</p> \n<p>Then I ran across this tweet (thanks Eric!) a few days ago and decided to re-evaluate my position.</p> \n<blockquote class=\"twitter-tweet\" data-conversation=\"none\" data-cards=\"hidden\" data-lang=\"en\">\n <p lang=\"en\" dir=\"ltr\">That said, if you're serving PNG to Chrome instead of WebP, you're probably doing it wrong. <a href=\"https://t.co/rHC81N1kz4\">pic.twitter.com/rHC81N1kz4</a></p>— Eric Lawrence (@ericlaw) \n <a href=\"https://twitter.com/ericlaw/status/857645459589873664\">April 27, 2017</a>\n</blockquote> \n<p>My initial reaction was leftover angst that pre-dated the <code>&lt;picture&gt;</code> element, which has since expanded to have pretty <a href=\"http://caniuse.com/#feat=picture\">great browser support</a>. <code>&lt;picture&gt;</code> gives us a simple no JavaScript, no backend way to serve WebP to browsers that support it. Looks like the only mild problem is on Opera Mini and the Android Browser, which support WebP but not <code>&lt;picture&gt;</code>—but they’ll just suffer a mild performance hit and get the JPG fallback.</p> \n<p>It’s important to note that I converted the original PNG images to WebP (not from JPG), given that I converted at 80% quality.</p> \n<pre><code># Converts a directory of image files to WebP\n# Added this to my .zshrc file (or .bash_profile)\n# Install `cwebp` using `brew install webp`\nfunction batchwebp() {\n\tfor file in *\n\tdo\n\t\tcwebp -q 80 \"$file\" -o \"${file%.*}.webp\"\n\tdone\n}\n</code></pre> \n<ul> \n <li><em>Read more about <a href=\"https://developers.google.com/speed/webp/docs/cwebp\"><code>-q</code> and the default settings for <code>cwebp</code></a>.</em></li> \n</ul> \n<picture> \n <source type=\"image/webp\" srcset=\"https://www.zachleat.com/web/img/posts/webp/3-webp.webp\"> <img src=\"https://www.zachleat.com/web/img/posts/webp/3-webp.png\" alt=\"Devtools Screenshot showing 1.5MB download\" class=\"primary\"> </img></source>\n</picture> \n<p>Wow. From 17.9MB down to 1.5MB total. That’s a <strong>91.6% decrease</strong>.</p> \n<p>For 52 individual image slides, this is a great result. Especially considering that I didn’t even resize the original images. At their max rendered width (496 pixels at their widest) and with a 1024 pixel natural image width, each image is at minimum 2.064516129x-Retina friendly.</p> \n<p>Like Eric Lawrence in his tweet, I would now encourage you to try out WebP with <code>&lt;picture&gt;</code>! Shave off those KB, y’all.</p> \n<h2 id=\"implementation-note\">Implementation Note <a class=\"direct-link\" href=\"http://www.zachleat.com/web/webp/#implementation-note\">#</a></h2> \n<p>In the <a href=\"https://www.zachleat.com/web/1m-cups-omaha/\">final product you see on my website</a>, I cheated a little bit in that four of the slides are actually videos that only preload the metadata. Video metadata is likely to be a smaller footprint than a full resolution slide image. None of that matters in the analysis above, however—the screenshots were recreated without videos.</p> \n<h2 id=\"more-optimization-possibilities\">More Optimization Possibilities <a class=\"direct-link\" href=\"http://www.zachleat.com/web/webp/#more-optimization-possibilities\">#</a></h2> \n<p>Here are a few more things I could do to improve this even further if I wanted to expend the time. For this particular project, I don’t, but for professional work I probably would. <strong>But perhaps therein lies the danger with WebP. We implement an easy Chrome(-ish) only optimization and call it a day, when really this page needs more optimization for non-WebP browsers.</strong></p> \n<ul> \n <li>To make the entire slideshow page weight smaller, I could adjust the maximum rendered size of the slides to be smaller. I might even use a minimum of 1.5x-Retina instead of the 2.06x minimum I’m using now.</li> \n <li>I could also use srcset with <code>&lt;picture&gt;</code> to serve smaller sources at smaller viewport sizes. I’d look to keep the Retina rating somewhat consistent at different viewport sizes.</li> \n <li>Evaluate a <a href=\"https://www.filamentgroup.com/lab/compressive-images.html\">compressive images approach</a> with WebP and super low quality conversion values.</li> \n <li>I could also look at possible savings from converting the text-only slides to use a webfont instead of an image.</li> \n <li>Lazy loading the slides with JavaScript, which does not really have a good standards-based way to implement. It would require non-standard markup for the images to hide them from the preparser. That’s what AMP does, last I checked. It’d be a good exercise to think through how this might work with <code>&lt;picture&gt;</code>, too.</li> \n</ul> \n<div class=\"retweettoshare\"> \n <h3 class=\"retweettoshare_title\">Retweet to share this post</h3> \n <div class=\"retweettoshare_widget\"> \n  <blockquote class=\"twitter-tweet\" data-lang=\"en\">\n   <p lang=\"en\" dir=\"ltr\">★ Wait, WebP Is Actually Worth It <a href=\"https://t.co/aT6qMpnlQq\">https://t.co/aT6qMpnlQq</a></p>— Zach Leatherman (@zachleat) \n   <a href=\"https://twitter.com/zachleat/status/859426013998190592\">May 2, 2017</a>\n  </blockquote> \n </div> \n</div>","descriptionType":"html","feedId":12519,"bgimg":"https://www.zachleat.com/web/img/posts/webp/0-original.png","linkMd5":"0d7e37dfdd4fe8df107bbfaf99d752fe","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn98@2020_3/2020/08/25/02-02-02-836_3113dd221a50b295.webp","destWidth":1922,"destHeight":484,"sourceBytes":82086,"destBytes":56532,"author":"","articleImgCdnMap":{"https://www.zachleat.com/web/img/posts/webp/0-original.png":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn98@2020_3/2020/08/25/02-02-02-836_3113dd221a50b295.webp","https://www.zachleat.com/web/img/posts/webp/1-imageoptim.png":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn1@2020_4/2020/08/25/02-02-10-719_03ec40fcea44a119.webp","https://www.zachleat.com/web/img/posts/webp/2-jpg.png":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn95@2020_5/2020/08/25/02-02-20-585_ef1d1f48aa1b8e3f.webp","https://www.zachleat.com/web/img/posts/webp/3-webp.png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn24@2020_2/2020/08/25/02-02-20-376_1ecb01766b82bf47.webp"},"publishedOrCreatedDate":1598320921768},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"CSS-Tricks Video Screencasts #152: Font Loading","link":"http://www.zachleat.com/web/css-tricks-screencast/","description":"\n\t\t\t<p><a href=\"https://css-tricks.com/video-screencasts/152-font-loading-zach-leatherman/\">Watch the Interview on CSS-Tricks</a> (0:56:35) <span class=\"tag video\">Video</span></p>\n<p>Or watch here:</p>\n<div class=\"fluid-width-video-wrapper\"><iframe class=\"youtube-player\" type=\"text/html\" width=\"640\" height=\"385\" src=\"https://www.youtube.com/embed/aFT2BpSsrk0/\" frameborder=\"0\" allowfullscreen=\"\"></iframe></div>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"9ca20570edc6c6d6be0bd2b35102efcc","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921767},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"spider-pig Searches for Nodes that match a CSS Selector","link":"http://www.zachleat.com/web/spider-pig/","description":"\n\t\t\t<p class=\"primarylink\"><a href=\"https://github.com/zachleat/spider-pig\">spider-pig on GitHub</a></p>\n<p class=\"primarylink\"><a href=\"https://www.npmjs.com/package/@zachleat/spider-pig\">spider-pig on npm</a></p>\n<p><code>spider-pig</code> is a command line utility that takes a URL and retrieves all the local URL links on the page. It can also search for a CSS selector on each local URL to measure the impact of a CSS change.</p>\n<img src=\"https://www.zachleat.com/web/img/posts/spider-pig/spider-pig-simpsons.jpg\" alt=\"Homer Simpson holding up a pig upside-down pretending that it’s walking on the ceiling\">\n<p>Get a list of local URL links from a root URL. Works with JavaScript generated content.</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>test.html<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Test<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token comment\">&lt;!-- match --></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>test2.html<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Test<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token comment\">&lt;!-- match --></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>test2.html<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Duplicate Test<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token comment\">&lt;!-- do not match --></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>root.html<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>URL to self<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token comment\">&lt;!-- match --></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>mailto:test@example.com<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Email link<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token comment\">&lt;!-- do not match --></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>http://www.google.com/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>External<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token comment\">&lt;!-- do not match --></span></code></pre>\n<p>Can also act as a live-DOM CSS search across multiple files (find all the templates that are using the CSS selector I want to change). If I’m worried about changing code in a CSS selector, I’ll use this tool to search for instances of the selector across my project.</p>\n<img src=\"https://www.zachleat.com/web/img/posts/spider-pig/spider-pig.jpg\" alt=\"spider-pig on the command line\" class=\"primary\">\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"https://www.zachleat.com/web/img/posts/spider-pig/spider-pig-simpsons.jpg","linkMd5":"20d85e360effb7925c4178702ea827d1","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn18@2020_5/2020/08/25/02-02-05-116_3bebbdeb4e1dcd0b.webp","destWidth":1024,"destHeight":453,"sourceBytes":54144,"destBytes":28856,"author":"","articleImgCdnMap":{"https://www.zachleat.com/web/img/posts/spider-pig/spider-pig-simpsons.jpg":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn18@2020_5/2020/08/25/02-02-05-116_3bebbdeb4e1dcd0b.webp","https://www.zachleat.com/web/img/posts/spider-pig/spider-pig.jpg":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn25@2020_1/2020/08/25/02-02-12-522_53371e02c3b50e60.webp"},"publishedOrCreatedDate":1598320921769},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Performance and Responsive Web Design (2015)","link":"http://www.zachleat.com/web/rwd-perf-3/","description":"<p>After <a href=\"http://www.meetup.com/nebraskajs/events/219437831/\">NebraskaJS Lincoln</a> asked me to present on Responsive Web Design and Performance, I took some time to update my 2013 presentation for 2015. This version adds sections on Critical CSS, the Filament Group <code>loadCSS</code> utility, <code>srcset</code>, <code>&lt;picture&gt;</code>, and Font Loading.</p> \n<div class=\"fullwidth\">\n <div class=\"fluid-width-video-wrapper\">\n  <iframe src=\"https://www.youtube.com/embed/r72A_pjpBpY\" frameborder=\"0\" allowfullscreen=\"\"></iframe>\n </div>\n</div> \n<p><em>Video originally posted on <a href=\"http://nebraskajs.com/2015/performance-and-responsive-design/\">NebraskaJS.com</a>.</em></p> \n<script async=\"\" class=\"speakerdeck-embed\" data-id=\"1e3a0ddac79046b98dbcbbecbcac9b93\" data-ratio=\"1.33333333333333\" src=\"https://speakerdeck.com/assets/embed.js\"></script> \n<p><em>Slide deck also available on <a href=\"https://speakerdeck.com/zachleat/performance-and-responsive-web-design-1\">Speaker Deck (January 2015)</a>.</em></p> \n<h2 id=\"previous-incarnations-of-this-presentation%3A\">Previous incarnations of this presentation: <a class=\"direct-link\" href=\"http://www.zachleat.com/web/rwd-perf-3/#previous-incarnations-of-this-presentation%3A\">#</a></h2> \n<ul> \n <li>May 2013: <a href=\"https://www.zachleat.com/web/rwd-perf/\">Omaha Mobile Group</a></li> \n <li>November 2012: <a href=\"http://nebraskajs.com/2012/performance-in-rwd/\">NebraskaJS Omaha</a></li> \n</ul>","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"56e4416b5e2e861beccea8c9efc88c42","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921765},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Netlify’s Merry Band of 1 Million Developers","link":"http://www.zachleat.com/web/1mdevs/","description":"<p>The launches at Netlify since I started 5 months ago have been fast and frequent. Here are a few of the major milestones I’ve been involved with during that time:</p> \n<ol> \n <li>A brand new <a href=\"https://www.netlify.com/\">netlify.com</a>, with a new design and a new tech stack built on Eleventy and Vue. I built the tech stack for this project specifically and also worked on the new unified markup responsive Masthead and Footer and a bunch of new pages!</li> \n <li>An Eleventy wiki site for Netlify’s internal employee handbook, using Netlify CMS</li> \n <li><a href=\"https://www.speedlify.dev/\">Speedlify</a>, a side project originally built to measure performance and accessibility on our new Netlify sites.</li> \n <li>Additions to the Jamstack Conf site to support <a href=\"https://jamstackconf.com/virtual/\">Jamstack Conf Virtual</a></li> \n</ol> \n<h2 id=\"1-million-developers\">1 Million Developers <a class=\"direct-link\" href=\"http://www.zachleat.com/web/1mdevs/#1-million-developers\">#</a></h2> \n<p>Our latest project launched just this week was a microsite to celebrate Netlify reaching <a href=\"https://million-devs.netlify.com/\">1 Million Developers</a>. You can click through to look at Netlify’s major milestones and find your Netlify account number to see when you registered.</p> \n<p><a href=\"https://twitter.com/sarah_edo\">\n  <picture>\n   <source type=\"image/webp\" srcset=\"https://www.zachleat.com/img/7f8008bd-72.webp 72w\"><img alt=\"sarah_edo’s Avatar\" src=\"https://www.zachleat.com/img/7f8008bd-72.jpeg\" width=\"72\" height=\"72\" class=\"z-avatar\" loading=\"lazy\" /></source>\n  </picture>Sarah Drasner</a> already wrote an amazing blog post on CSS Tricks about <a href=\"https://css-tricks.com/the-making-of-netlifys-million-devs-svg-animation-site/\">the architecture of the front end</a>.</p> \n<p>I also wrote up a quick note earlier this week about <a href=\"https://www.zachleat.com/web/bulk-og/\">bulk generating OG images</a> that came out of this project.</p> \n<p>A few more things I learned:</p> \n<ul> \n <li>I worked on the backend for this site. When you click the log in to Netlify button, it uses OAuth to log in with your Netlify account. This was very easy to set up and anyone can make an application that authenticates with Netlify! I worked from this full demo example with excellent documentation and source code is available on <a href=\"https://github.com/netlify-labs/oauth-example\">Netlify Labs: OAuth Example</a> created by <a href=\"https://twitter.com/davidwells\">\n   <picture>\n    <source type=\"image/webp\" srcset=\"https://www.zachleat.com/img/39e20686-72.webp 72w\"><img alt=\"davidwells’s Avatar\" src=\"https://www.zachleat.com/img/39e20686-72.jpeg\" width=\"72\" height=\"72\" class=\"z-avatar\" loading=\"lazy\" /></source>\n   </picture>David Wells</a>.</li> \n <li>The backend source code is private but it’s almost entirely the same as David’s example, but without the React parts. Having the backend code in a separate repo was useful as <a href=\"https://github.com/netlify/million-devs\">Sarah open sourced the front end repo later on</a>. One more thing I wanted to mention about the backend was the scalability of Netlify functions. Really, I was impressed at what you could do in those things. The Netlify function reads a giant million-record JSON file every time someone logs in 😅 to find user numbers. Look—I know, y’all. It feels very wrong but it works flawlessly and is much lower friction than using a database.</li> \n <li>This site and our <a href=\"http://netlify.com/\">netlify.com</a> site are both using Vue components, so we were able to use the same hero Vue component in a homepage takeover! And the animations work too! We also use per-route JS bundles the GSAP library and the animation code were only added to one page, leaving the rest of our routes scripts unencumbered. <img src=\"https://www.zachleat.com/web/img/posts/1mdevs/site.png\"> <img src=\"https://www.zachleat.com/web/img/posts/1mdevs/homepage.png\" /></img></li> \n <li>This was my first experience with <a href=\"https://vuex.vuejs.org/\">Vuex</a>, which didn’t get a ton of use here but I could definitely see the benefit! In related news, my colleague <a href=\"https://twitter.com/shortdiv\">\n   <picture>\n    <source type=\"image/webp\" srcset=\"https://www.zachleat.com/img/8f1df8f-72.webp 72w\"><img alt=\"shortdiv’s Avatar\" src=\"https://www.zachleat.com/img/8f1df8f-72.jpeg\" width=\"72\" height=\"72\" class=\"z-avatar\" loading=\"lazy\" /></source>\n   </picture>Divya Tagtachian</a> just released a Frontend Masters course: <a href=\"https://frontendmasters.com/courses/vuex/?utm_source=twitterl&amp;utm_medium=course-announce&amp;utm_campaign=vuex\">Vuex for Intermediate Vue.js Developers</a>, check it out!</li> \n</ul> \n<p>I hope y’all enjoyed the site! It was super fun to work on and I huge thank you to everyone at Netlify that made it possible: the entire marketing team including <a href=\"https://twitter.com/huguestennier\">\n  <picture>\n   <source type=\"image/webp\" srcset=\"https://www.zachleat.com/img/31380e2b-72.webp 72w\"><img alt=\"huguestennier’s Avatar\" src=\"https://www.zachleat.com/img/31380e2b-72.jpeg\" width=\"72\" height=\"72\" class=\"z-avatar\" loading=\"lazy\" /></source>\n  </picture>Hugues Tennier</a> and Alejandro Alvarez (the artist behind the incredible illustrations!), Sarah Drasner for a huge portion of the dev work including the awesome and meticulous animation work, <a href=\"https://twitter.com/seldo\">\n  <picture>\n   <source type=\"image/webp\" srcset=\"https://www.zachleat.com/img/1d175d7-72.webp 72w\"><img alt=\"seldo’s Avatar\" src=\"https://www.zachleat.com/img/1d175d7-72.jpeg\" width=\"72\" height=\"72\" class=\"z-avatar\" loading=\"lazy\" /></source>\n  </picture>Laurie Voss</a> and <a href=\"https://twitter.com/futuregerald/\">\n  <picture>\n   <source type=\"image/webp\" srcset=\"https://www.zachleat.com/img/8b9d23f7-72.webp 72w\"><img alt=\"futuregerald’s Avatar\" src=\"https://www.zachleat.com/img/8b9d23f7-72.jpeg\" width=\"72\" height=\"72\" class=\"z-avatar\" loading=\"lazy\" /></source>\n  </picture>Gerald O</a> for invaluable consulting.</p>","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"283247e9971c1781c9a71a948edd1898","bgimgJsdelivr":"","metaImg":"","author":"","articleImgCdnMap":{"https://www.zachleat.com/img/7f8008bd-72.jpeg":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn12@2020_3/2020/08/25/02-02-21-529_fa6405ca88c13a2e.webp","https://www.zachleat.com/img/39e20686-72.jpeg":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn56@2020_4/2020/08/25/02-02-16-431_24afe91642e41f54.webp","https://www.zachleat.com/web/img/posts/1mdevs/site.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn40@2020_4/2020/08/25/02-02-19-268_40207bb4443148b3.webp","https://www.zachleat.com/web/img/posts/1mdevs/homepage.png":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn37@2020_6/2020/08/25/02-02-11-824_5951e1e750482f51.webp","https://www.zachleat.com/img/8f1df8f-72.jpeg":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn96@2020_4/2020/08/25/02-02-19-279_5fd494354d7b0cb1.webp","https://www.zachleat.com/img/31380e2b-72.jpeg":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn59@2020_3/2020/08/25/02-02-16-071_54f434c40bda48ca.webp","https://www.zachleat.com/img/1d175d7-72.jpeg":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn81@2020_5/2020/08/25/02-02-11-836_0c0cb17a92565c19.webp","https://www.zachleat.com/img/8b9d23f7-72.jpeg":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn37@2020_3/2020/08/25/02-02-09-994_097fb00cb17afbf8.webp"},"publishedOrCreatedDate":1598320921773},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Speed up Including Google Analytics","link":"http://www.zachleat.com/web/speed-up-google-analytics-with-dynamic-includes/","description":"\n\t\t\t<p>Have you ever noticed that your homepage hangs when including the Google Analytics JavaScript file? I think <a href=\"http://nutrun.com/weblog/does-google-analytics-make-your-pages-slow/\">a few</a> <a href=\"http://resistmedia.net/blog/2007/10/02/get-rid-of-google-analytics/\">people</a> have noticed a delay. Well, let’s try something different. Let’s create the script node dynamically using DOM methods and put a timeout on this creation so that it inserts just enough delay so that your page won’t hang (we’ll move out of the current execution path with the timeout, thus allowing your page to finish loading). The obvious benefit here is that even when the Google servers lag a little bit serving you the JavaScript file, your page will appear as if it has already finished loading. Given optimally performing Google Servers, this method will perform slower most of the time, but it shines in those rare instances where there is a bit of a delay. Give it a try, and let me know if it works any better.</p>\n<p>Of course, remember to put near the end of your <code>&lt;body&gt;</code>, and not directly in your <code>&lt;head&gt;</code>.</p>\n<pre><code>&lt;script type=&quot;text/javascript&quot;&gt;\n(function()\n{\n    setTimeout(function()\n    {\n        var node = document.createElement(&quot;script&quot;);\n        node.src = 'http://www.google-analytics.com/urchin.js';\n        //for SSL\n        //node.src = 'https://ssl.google-analytics.com/urchin.js';\n        node.type = 'text/javascript';\n        document.getElementsByTagName(&quot;head&quot;)[0].appendChild(node);\n        var init = setInterval(function()\n        {\n            _uacct = 'UA-XXXXXX-X'; // INSERT YOUR CODE HERE\n            if(typeof urchinTracker != 'undefined') {\n                urchinTracker();\n                clearInterval(init);\n            }\n        }, 100);\n    }, 0);\n})();\n&lt;/script&gt;\n</code></pre>\n<p><a href=\"http://www.zachleat.com/Projects/googleAnalytics/\">Try it on my benchmark page.</a></p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"bf1a4fc6e9238aab3f68d8095a48b572","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921761},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"The Problem with font-display and Reflow","link":"http://www.zachleat.com/web/font-display-reflow/","description":"<style> .post-img { margin: 0 auto; display: block; } .highlight-fallback { background-color: #902f2f; color: #fff; } /*.highlight { background-color: #45844b; color: #fff; }*/ </style> \n<p><em>Prerequisite:</em> Before we continue on, please take a second to make sure you’ve reviewed <a href=\"https://www.zachleat.com/web/font-checklist/\">The Web Font Loading Checklist</a>, a short list of criteria I use to properly evaluate web font loading strategies. In the <em>Reduce Movement during Page Load</em> section, our goal is to reduce the amount of movement the user sees while the page is being loaded.</p> \n<p>I’m sure you’ve been browsing around the web, halfway through reading your favorite hot-take article about some React minutiae when a third party advertisement loads, changes the dimensions of its container, throws off your scroll position, and disrupts your reading experience! How frustrating. I am here to let you know, dear reader, that web font loads can have this same frustrating effect.</p> \n<h2 id=\"font-display\">font-display <a class=\"direct-link\" href=\"http://www.zachleat.com/web/font-display-reflow/#font-display\">#</a></h2> \n<p>I love <code>font-display</code>. It’s easy to use.</p> \n<ul> \n <li>It’s the go-to for <a href=\"https://www.zachleat.com/web/23-minutes/\">improving your web font loading quickly and easily</a>.</li> \n <li>It hasn’t really been picked up by any third party font hosting services yet, but we can’t really blame <code>font-display</code> for that can we?</li> \n <li><code>font-display</code> pairs great with preload (well, <a href=\"https://www.zachleat.com/web/preload-font-display-optional/\">mostly</a>)</li> \n <li>It shines brightest if you’re only using one web font on your page.</li> \n <li>Some day I may write an article about how it was absolutely not designed for icon fonts (sorry—that day is not today).</li> \n</ul> \n<p>If you’re using multiple web fonts for a single family—things may not operate as smoothly as we would like—especially if you’re trying to reduce movement during page load (see the last item on <a href=\"https://www.zachleat.com/web/font-checklist/\">the checklist</a>).</p> \n<p>Consider this <a href=\"https://github.com/zachleat/web-font-loading-recipes#font-display-swap\"><code>font-display: swap</code> demo from Web Font Loading Recipes</a> (<a href=\"https://www.zachleat.com/web-fonts/demos/font-display.html\">Demo</a>):</p> \n<img src=\"https://www.zachleat.com/web/img/posts/font-display-reflow/waterfall.png\" alt=\"font-display: swap Screenshot of Devtools Network Tab, 1 HTML request and 4 Web Font requests loading in parallel\" class=\"primary\"> <p>A pretty standard controlled waterfall experiment, network throttled to Fast 3G in Chrome Devtools. The browser finds four web fonts of almost identical size using <code>font-display: swap</code> and downloads them in parallel.</p> <img src=\"https://www.zachleat.com/web/img/posts/font-display-reflow/render-1.png\" alt=\"A screenshot of First render at 846ms\" class=\"post-img\"> \n  <div class=\"livedemo livedemo-mixed sizeme\" data-demo-label=\"DEMO: 846ms Serif Fallback\"> \n   <p class=\"font-fallback\"><span class=\"highlight-fallback\">This is a paragraph.</span> <strong class=\"highlight-fallback\">This is heavier text.</strong> <em class=\"highlight-fallback\">This is emphasized text.</em> <strong class=\"highlight-fallback\"><em>This is heavier and emphasized text.</em></strong></p> \n  </div> <p>At 846ms into our page load the HTML has rendered and we have some real nice fallback FOUT rendering here. The text is readable, hooray! But if you look at the above waterfall carefully and analyze the related filmstrip, you may notice that each web font has downloaded and repainted independently (3 repaints for 4 font files).</p> <img src=\"https://www.zachleat.com/web/img/posts/font-display-reflow/render-2.png\" alt=\"A screenshot of render at 1.90s\" class=\"post-img\"> \n   <div class=\"livedemo livedemo-mixed sizeme\" data-demo-label=\"DEMO: 1.9s Italic\"> \n    <p class=\"font-fallback\"><span class=\"highlight-fallback\">This is a paragraph.</span> <strong class=\"highlight-fallback\">This is heavier text.</strong> <em class=\"font-latoitalic highlight\">This is emphasized text.</em> <strong class=\"highlight-fallback\"><em>This is heavier and emphasized text.</em></strong></p> \n   </div> <p>At 1.90s the italic web font has loaded and repainted.</p> <img src=\"https://www.zachleat.com/web/img/posts/font-display-reflow/render-3.png\" alt=\"A screenshot of render at 1.91s\" class=\"post-img\"> \n    <div class=\"livedemo livedemo-mixed sizeme\" data-demo-label=\"DEMO: 1.91s Bold Italic\"> \n     <p class=\"font-fallback\"><span class=\"highlight-fallback\">This is a paragraph.</span> <strong class=\"highlight-fallback\">This is heavier text.</strong> <em class=\"font-latoitalic\">This is emphasized text.</em> <strong><em class=\"font-latobolditalic highlight\">This is heavier and emphasized text.</em></strong></p> \n    </div> <p>At 1.91s the bold italic variant has loaded and repainted.</p> <img src=\"https://www.zachleat.com/web/img/posts/font-display-reflow/render-4.png\" alt=\"A screenshot of render at 1.95s\" class=\"post-img\"> \n     <div class=\"livedemo livedemo-mixed sizeme\" data-demo-label=\"DEMO: 1.95s Roman &amp; Bold\"> \n      <p class=\"font-lato\"><span class=\"highlight\">This is a paragraph. </span><strong class=\"font-latobold highlight\">This is heavier text.</strong> <em class=\"font-latoitalic\">This is emphasized text.</em> <strong><em class=\"font-latobolditalic\">This is heavier and emphasized text.</em></strong></p> \n     </div> <p>Finally, at 1.95s both the roman and bold variants have loaded and repainted to finish the remainder of the external resources.</p> <p>What does this mean? Each web font has its own loading lifecycle and may have its own repaint (it the requests don’t finish close enough together for the browser to bundle them) and reflow. For each individual web font, you could have up to four independent moments (this demo had three repaints for four web fonts) in your page load where the text dimensions change to render using a web font. These repaints could occur at wildly different times if the font files are of differing size and/or if the load takes place outside of the controlled network throttled environment of Chrome Devtools.</p> <h2 id=\"make-the-reflows-go-away\">Make the reflows go away <a class=\"direct-link\" href=\"http://www.zachleat.com/web/font-display-reflow/#make-the-reflows-go-away\">#</a></h2> \n     <ol> \n      <li>The easiest way to fix this is to <em>use <code>font-display: optional</code></em>. This will use the fallback font on first render and only grab web fonts stored in the cache. In theory this means that your web fonts will only be used if they are available in the first 100ms, greatly reducing the impact from reflow or eliminating it altogether. Unfortunately this means no web fonts on empty cache views.</li> \n      <li>Another way to fix this is to <em>use a Variable Font</em>! Variable fonts, while increasing in popularity, are still somewhat of a rarity. They are also bigger than their non-variable counterparts but due to their single-file nature your repaints will be grouped for free. Even better: use variable fonts with <code>font-display: swap</code> for FOUT <em>and</em> a single grouped repaint. One more nuanced drawback to variable fonts is that the extra file size weight is loaded serially, and not in parallel as the waterfall screenshot of non-variable web fonts above depicted.</li> \n      <li>Another, more complex solution that will offer web fonts on an empty cache is to <em>use the CSS Font Loading API</em>. Use the <a href=\"https://www.zachleat.com/web/comprehensive-webfonts/#fout-class\">FOUT with a Class</a> approach to group web font renders for a single family into a single repaint. For extra points, go even further and use a font-synthesis FOFT approach to all-but-eliminate noticeable reflow from your page <strong>(even on empty cache views)</strong>. Try <em><a href=\"https://www.zachleat.com/web/the-compromise/\">The Compromise</a></em>!</li> \n      <li>One way to minimize the problem is to try to match the metrics (dimensions) of your fallback text as closely as possible to your web font. Check out the <a href=\"https://meowni.ca/font-style-matcher/\">Font Style Matcher, created by Monica Dinculescu</a>, to help you with this. Note that this method requires JavaScript and wouldn’t work with just <code>font-display</code> alone.</li> \n      <li>In this same vein, there are <a href=\"https://wiki.archlinux.org/index.php/Metric-compatible_fonts\">Metric compatible fonts</a>, designed to match another font’s dimensions perfectly. It’s unlikely that the web font you’ve chosen has a metric compatible system font available for use—they’re quite rare—but they do exist! Using a Metric compatible font would not require JavaScript and <em>would</em> work with <code>font-display</code> alone.</li> \n     </ol> <p>Go forth and web font, y’all!</p> <h2 id=\"related\">Related <a class=\"direct-link\" href=\"http://www.zachleat.com/web/font-display-reflow/#related\">#</a></h2> \n     <ul> \n      <li><a href=\"https://www.zachleat.com/web/comprehensive-webfonts/\">A Comprehensive Guide to Font Loading Strategies</a></li> \n      <li><a href=\"https://www.zachleat.com/web/webfont-glossary/\">The Web Font Loading Glossary</a></li> \n      <li><a href=\"https://github.com/zachleat/web-font-loading-recipes\">Web Font Loading Recipes</a> <em>(Code examples)</em></li> \n      <li><a href=\"https://www.zachleat.com/web/fonts/\">A big giant list of all of the Web Fonts blog posts on zachleat.com</a></li> \n     </ul> <script> if( \"fonts\" in document ) { function measureSizeMe() { document.querySelectorAll(\".sizeme\").forEach(el =&gt; { let p = el.firstElementChild; let original = el.getAttribute(\"data-original-demo-label\"); if( !original) { original = el.getAttribute(\"data-demo-label\"); el.setAttribute(\"data-original-demo-label\", original); } el.setAttribute(\"data-demo-label\", `${original}, Height ${p.offsetHeight}px`); }); } document.fonts.ready.then(measureSizeMe); window.addEventListener(\"resize\", measureSizeMe); } </script> </img></img></img></img></img>","descriptionType":"html","feedId":12519,"bgimg":"https://www.zachleat.com/web/img/posts/font-display-reflow/waterfall.png","linkMd5":"51855ddba2a1fafb5441f46fdd87c5f7","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn53@2020_1/2020/08/25/02-02-04-335_9f3c5fe3c7737779.webp","destWidth":1200,"destHeight":233,"sourceBytes":29184,"destBytes":28388,"author":"","articleImgCdnMap":{"https://www.zachleat.com/web/img/posts/font-display-reflow/waterfall.png":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn53@2020_1/2020/08/25/02-02-04-335_9f3c5fe3c7737779.webp","https://www.zachleat.com/web/img/posts/font-display-reflow/render-1.png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn12@2020_2/2020/08/25/02-02-18-691_c36c9493387daac4.webp","https://www.zachleat.com/web/img/posts/font-display-reflow/render-2.png":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn68@2020_2/2020/08/25/02-02-16-238_09416c741812722b.webp","https://www.zachleat.com/web/img/posts/font-display-reflow/render-3.png":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn80@2020_5/2020/08/25/02-02-19-658_3d3fb906ca28d1e2.webp","https://www.zachleat.com/web/img/posts/font-display-reflow/render-4.png":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn84@2020_4/2020/08/25/02-02-17-939_6f95cd29bc8beca3.webp"},"publishedOrCreatedDate":1598320921771},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Wash your mouth out with SOAP and the YUI Connection Manager","link":"http://www.zachleat.com/web/wash-your-mouth-out-with-soap-and-the-yui-connection-manager/","description":"\n\t\t\t<p>Now you’ve done it. You watched an R rated movie while your parents weren’t looking and used some of your newfound acquired colorful language in front of them. Your mom goes for the Dial Liquid Soap, she’s going to wash that profanity right out of your dirty little mouth.</p>\n<p>Harsh? Maybe, but I couldn’t say the word ‘Bastards’ without feeling Dial on my cleansed taste buds. Maybe I should take legal action against the cinematic classic ‘<a href=\"http://www.imdb.com/title/tt0102059/\">Hot Shots</a>.’</p>\n<p>What are we here for? Not liquid soap, perhaps some profanity. But really, you want to use the SOAP web services protocol with your Yahoo User Interface application, in particular the Connection Manager component. This tutorial assumes you are at least familiar with <a href=\"http://developer.yahoo.com/yui/connection/\">the examples provided on the Yahoo! UI Library: Connection Manager website</a>.</p>\n<p>How is SOAP different than any other AJAX call using the Connection Manager? Well, normally, when you perform an HTTP Post AJAX call, it is passing in a key-value pair string encoded with the normal key=value&amp;key2=value format. But when doing a SOAP call, we want to post an XML SOAP Envelope to the server instead of this key-value pair string. In case you’re reading this article and don’t know what a SOAP Envelope looks like, I’ll post a sample here:</p>\n<pre><code>&lt;s11:Envelope xmlns:s11=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&gt;\n&lt;s11:Header&gt;\n&lt;/s11:Header&gt;\n&lt;s11:Body&gt;\n&lt;/s11:Body&gt;\n&lt;/s11:Envelope&gt;\n</code></pre>\n<p>Of course, it is beyond the scope of this article to argue whether a REST or a SOAP format for your Service Oriented Architecture is a better choice. You’re stuck with SOAP, otherwise you wouldn’t have read this far.</p>\n<p>So, let’s post our SOAP Envelope using the YUI Connection Manager with the code provided below:</p>\n<pre><code>var targetUrl = 'http://www.zachleat.com/postToServer.php'; // this is not a real URL\n \nvar callback = {\n  success: function(o)\n  {\n    var root = o.responseXML.documentElement; \n    if( root.getElementsByTagName( 'faultstring' ).length &gt; 0 ) // faultstring is a standard SOAP error message format\n    {\n      var faultstring = root.getElementsByTagName( 'faultstring' )[0].firstChild.nodeValue;\n      var detailed = '';\n      YAHOO.UP.util.each( root.getElementsByTagName( 'detail' )[0].childNodes, function( j, textNode )\n      {\n        if( textNode.nodeValue != null ) detailed += textNode.nodeValue;\n      } );\n      // do something with your error message stored in the faultstring variable, with a more detailed message in the detailed variable\n    } else {\n      // this is an actual success.\n    }\n  }, \n  failure: function( o )\n  {\n    // do something with your failure.\n  }\n};\n \nvar message = '&lt;s11:Envelope...YOUR SOAP MESSAGE HERE';\n \n// we need to set our own header.\nYAHOO.util.Connect._use_default_post_header = false;\nYAHOO.util.Connect.initHeader( 'Content-Type', 'text/xml', false );\nvar ajaxCall = YAHOO.util.Connect.asyncRequest( 'POST', targetUrl, callback, message);\n</code></pre>\n<p>I hope this code helps some of you bastards.</p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"0c3ad993ef54614a0a387ea6a91a12dd","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921760},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"DIY Webdings—CSS Sprites using @font-face","link":"http://www.zachleat.com/web/css-sprites-using-font-face/","description":"<p>Almost everyone knows the Webdings font or its sibling Wingdings. Even if you don’t, chances are pretty good that it’s installed on your system.</p> \n<blockquote> \n <p>Webdings is a symbol font designed in 1997 as a response to the need of Web designers for a fast and easy method of incorporating graphics in their pages.<br> …</br></p> \n <p>Webdings is ideal for enriching the appearance of a Web page. Because it’s a font, it can be installed on the user’s system, (or embedded in the document itself) is fully scaleable [sic] and quick to render. It’s a perfect way of including graphics on your site without making users wait for lots of graphic files to download.</p> \n <p>– Source <a href=\"http://www.microsoft.com/typography/fonts/family.aspx?FID=5\">Microsoft Typography</a></p> \n</blockquote> \n<p>Microsoft was onto something here, and there is a nice parallel that can be drawn between the font and a CSS sprite: namely that multiple images are stored under the guise of a single HTTP request. So, why not create our own font and use it as a CSS sprite? Each character in the font (glyph) will be a single image in the sprite.</p> \n<h2 id=\"why-is-this-awesome%3F\">Why is this awesome? <a class=\"direct-link\" href=\"http://www.zachleat.com/web/css-sprites-using-font-face/#why-is-this-awesome%3F\">#</a></h2> \n<ul> \n <li>We can <strong>change the color</strong> of our font using nothing but CSS <code>color</code>. This is a big one. We don’t have to have separate images for hover states! And if we want to change the color scheme, there are no new images to generate and we don’t have to make any changes to the font to do so.</li> \n <li>Don’t have to monkey around with difficult to maintain CSS positioning code.</li> \n <li>Fonts scale, graphics don’t. Zooming in on a graphic will result in a pixelated image, but fonts will be smooth like a 6 blade razor shave. Try zooming on the demo file below.</li> \n</ul> \n<h2 id=\"why-is-this-not-awesome%3F\">Why is this not awesome? <a class=\"direct-link\" href=\"http://www.zachleat.com/web/css-sprites-using-font-face/#why-is-this-not-awesome%3F\">#</a></h2> \n<ul> \n <li> <p>Font glyphs can only contain one color.</p> </li> \n <li> <p>May experience the Flash of unstyled text (FOUT) while the font is loading.</p> </li> \n <li> <p>Extra markup required for IE6 and IE7. While @font-face is supported in all non-extinct versions of IE, each @font-face sprite requires a corresponding text character on the screen. For instance, <code>A</code>, the A is required to display the @font-face Sprite stored under the A glyph.</p> <p>Luckily, in most browsers we can inject a character using CSS :after/:before and the <code>content</code> property. Unfortunately, this is <a href=\"http://www.quirksmode.org/css/beforeafter_content.html\">not supported in IE6 or IE7</a>. I haven’t investigated whether or not this might be solved using other means (CSS expressions) yet.</p> </li> \n <li> <p>Safari asks for permission to use the font with a scary popup box, which I assume is a security precaution gleaned from the Windows Vista playbook.</p> </li> \n</ul> \n<h2 id=\"demo\">Demo <a class=\"direct-link\" href=\"http://www.zachleat.com/web/css-sprites-using-font-face/#demo\">#</a></h2> \n<p>The following <a href=\"http://jquery-ui.googlecode.com/svn/trunk/tests/static/icons.html\">jQuery UI Icons</a> are currently used in jQuery UI and are stored in <a href=\"http://jqueryui.com/themeroller/images/?new=888888&amp;w=256&amp;h=240&amp;f=png&amp;fltr%5B%5D=rcd%7C256&amp;fltr%5B%5D=mask%7Cicons/icons.png\">one big CSS sprite</a>.</p> \n<p>It was pretty trivial to create <a href=\"http://fontstruct.fontshop.com/fontstructions/show/jquery_ui_icons_1\">a font</a> with a subset of the jQuery UI icons (only the first 20, just a proof of concept here) using the wonderful <a href=\"http://fontstruct.fontshop.com/\">FontStruct</a> utility. Then, I took the TTF generated by FontStruct and plugged it into the completely lovely <a href=\"http://www.fontsquirrel.com/fontface/generator\">FontSquirrel @font-face Kit Generator</a>. That gave me everything I needed for a fully cross-browser test.</p> \n<h2 id=\"view-the-demo\"><a href=\"http://www.zachleat.com/test/fonts/font.html\">View the Demo</a> <a class=\"direct-link\" href=\"http://www.zachleat.com/web/css-sprites-using-font-face/#view-the-demo\">#</a></h2> \n<p>Let me know what you think!</p> \n<p>Successfully tested on:</p> \n<ul> \n <li>Google Chrome 4 (Mac)</li> \n <li>Safari 4 (Mac)</li> \n <li>Firefox 3.5 (Mac and Windows)</li> \n <li>Internet Explorer 8</li> \n <li>With documented limitations above: Internet Explorer 6 and 7 (Compatibility Mode in IE8)</li> \n</ul> \n<p>Does not work on (no @font-face support):</p> \n<ul> \n <li>Google Chrome 3 and prior</li> \n <li>Firefox 3 and prior</li> \n</ul> \n<p>Read more about <a href=\"http://paulirish.com/2009/bulletproof-font-face-implementation-syntax/\">@font-face support from Paul Irish</a>.</p>","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"5b0373a8ffe1411b8f7be5050c3ffd5a","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921762},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Reactions to: An Honest Conversation About Burnout on JSParty","link":"http://www.zachleat.com/web/burnout/","description":"<p><em>Before you read this post, let’s acknowledge together first that even the discussion of burnout is an incredibly privileged one to have. We work in an industry where we’re able to talk about this and many do not. I’m grateful that we can.</em></p> \n<p class=\"primarylink\">Listen to <a href=\"https://changelog.com/jsparty/83\">JS Party Episode #83: An honest conversation about burnout with Suz, Feross, &amp; Emma</a></p> \n<p>I was riveted to hear these valuable stories about the different kinds of burnout we experience. Whether it’s because we say yes to too many things, or we’re overenthusiastic and have ruthless tunnel vision about one single thing (it me), or we have too many interruptions and notifications in our lives—burnout is real and it can affect anyone.</p> \n<p>When I was listening to this podcast, I consider it a personal failing that I had to remind myself that talking about this isn’t an admission of personal failure or a weakness. <em>It’s healthy.</em> It also made me consider the things I’ve done in my own life to preemptively and reactively combat burnout.</p> \n<h2 id=\"remote-work\">Remote work <a class=\"direct-link\" href=\"http://www.zachleat.com/web/burnout/#remote-work\">#</a></h2> \n<p>Avoiding a commute is crucial to my mental well-being. When I used to work in downtown Omaha (before I became a remote worker), living downtown helped too.</p> \n<h2 id=\"having-a-job-that-respects-work-life-balance\">Having a Job That Respects Work Life Balance <a class=\"direct-link\" href=\"http://www.zachleat.com/web/burnout/#having-a-job-that-respects-work-life-balance\">#</a></h2> \n<p>This is hugely valuable. Logging off at dinner time. No work or even work e-mail on weekends. It isn’t even necessarily that I unplug altogether—I just unplug from work. Sometimes I then plug into my side projects, if I’m feeling motivated to do so.</p> \n<h2 id=\"living-away-from-distractions\">Living away from Distractions <a class=\"direct-link\" href=\"http://www.zachleat.com/web/burnout/#living-away-from-distractions\">#</a></h2> \n<p>I live in the rural Midwest in the middle of nowhere. When I go out on my back porch, I hear birds and crickets. I see trees. I hear the wind.</p> \n<p>I don’t hear construction. I don’t hear cars. I don’t hear people talking or yelling. It’s quiet. It’s peaceful. I consider this to be a superpower when I’m feeling stressed out. Unplugging is an incredibly low-friction thing to do.</p> \n<p>And ruthlessly eliminate all those Notifications, y’all. They are a particularly sneaky form of distraction.</p> \n<h2 id=\"say-no\">Say No <a class=\"direct-link\" href=\"http://www.zachleat.com/web/burnout/#say-no\">#</a></h2> \n<p>I think the most insidious lies are the ones we tell ourselves. I often encounter dishonesty with myself when I over-commit. This is something that my partner helps me with. She can be ruthlessly honest and I need this kind of feedback to maintain some level of healthy self awareness.</p> \n<p>Also I’ve been getting a little better at saying No to other people. I’m a bit of a people pleaser so this was a hard one for me. I consider my <a href=\"https://www.zachleat.com/web/eleventy-birthday/#a-few-tips-for-open-source-project-management\">open source project management strategy</a> to be a public investment in this.</p> \n<h2 id=\"being-a-parent\">Being a Parent <a class=\"direct-link\" href=\"http://www.zachleat.com/web/burnout/#being-a-parent\">#</a></h2> \n<p>This also changed for me after I became a parent. Before kids, it was possible to over-commit and still fulfill those commitments because I could “crunch” on the project to finish it. With kids, time crunching is no longer possible. They wake up at 5:45am (okay yes, sometimes earlier) no matter what time I go to sleep 😱.</p> \n<p>Time management became suddenly very relevant because my kids are my number one priority. I’m willing to fail all of my professional commitments before I’d fail my kids (acknowledging that they are intertwined because jobs pay our bills).</p> \n<p>So in order to not do that 😇, I need to do fewer things. I’ve turned down offers to write books and run workshops mostly because those things aren’t what I’d like to do in my spare time. Yes they could extend my professional profile but for me—<em>right now</em>—the time cost is too high.</p> \n<h2 id=\"say-yes\">Say Yes <a class=\"direct-link\" href=\"http://www.zachleat.com/web/burnout/#say-yes\">#</a></h2> \n<p>I think the other point here is that I want put myself in a position where I can say Yes to myself. I know what I want to work on so if I say No to others then I can say Yes to the stuff I want to work on more often.</p> \n<hr> \n <p>Take care of yourselves, y’all (and don’t be afraid to ask for help) ❤️</p> \n</hr>","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"1d6b50f2aa35dfe226f739693876719c","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921772},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Conservative Design: Option List","link":"http://www.zachleat.com/web/conservative-design-option-list/","description":"\n\t\t\t<p>This is another post in the series entitled <a href=\"http://www.zachleat.com/web/2007/02/22/conservative-design-patterns-for-form-elements/\">Conservative Design Patterns for Form Elements</a>.</p>\n<p>Next we’ll look at a web component that is almost ubiquitous among user interfaces today, the Option List. The Option List can take any one of the following three forms.</p>\n<ol>\n<li>Multiple Selections: User can select any number of the options presented to them. Types: <strong>Checkbox Group</strong>, <strong>Multiple Select Element</strong></li>\n<li>Single Selection: User can select none or one of the options available. Types: <strong>Radio Group</strong>, <strong>Select Element</strong></li>\n<li>User Input List: User types in the options that they want to use. All inputs are marked as selected. Types: <strong>Group of Textboxes</strong></li>\n</ol>\n<p>We’ll describe each of these variants separately.</p>\n<p><strong>Multiple Selections</strong>:<br>\n<img src=\"https://www.zachleat.com/web/wp-content/uploads/2007/02/optionlist_multiple1.gif\" alt=\"Option List Multiple Selections\"><br>\n<strong>Minimum Feature Set</strong>:</p>\n<ul>\n<li>Validation: The user can select at least one, an integer range of options, or any number of the options presented.</li>\n<li>Quick Links: optional links to select all options, clear the options, and toggle the options to the opposite value of what they currently hold.</li>\n<li>Customizable Values: optionally allow the user to add their own options (one, an integer range, or many) to the list.</li>\n<li>Other Variants: Any Select Element, as described in the original post.</li>\n</ul>\n<p><strong>Single Selection</strong>:<br>\n<img src=\"https://www.zachleat.com/web/wp-content/uploads/2007/02/optionlist_single1.gif\" alt=\"Option List Single Selection\"></p>\n<p><strong>Minimum Feature Set</strong>:</p>\n<ul>\n<li>Validation: The user can select at most one of the options presented.</li>\n<li>Quick Link: optional link to clear the options</li>\n<li>Customizable Value: optionally allow the user to add their own option (only one is required, since only one can be selected).</li>\n<li>Other Variants: Any Select1 Element, as described in the original post.</li>\n</ul>\n<p><strong>User Input List</strong>:<br>\n<img src=\"https://www.zachleat.com/web/wp-content/uploads/2007/02/optionlist_all4.gif\" alt=\"Option List User Input\"></p>\n<p><strong>Minimum Feature Set</strong>:</p>\n<ul>\n<li>Validation: The user must have at least one of the text fields with a value (doesn’t matter which one). Or the user must have an integer range number of fields with values.</li>\n<li>Quick Link: optional link next to an element to remove that element from the list (not clear it, remove it)</li>\n<li>Customizable Values: optionally allow the user to add their own options (up to an integer limit).</li>\n<li>Other Variants: Any List of InputX Elements, as described in the original post (could be passwords or textareas).</li>\n</ul>\n<p>The images above for all three component types show a textbox for the addition of another option, but this should also allow customization to allow any type of (Select or InputX) element for the addition of another option.</p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"https://www.zachleat.com/web/wp-content/uploads/2007/02/optionlist_multiple1.gif","linkMd5":"84c65b30fd637c262aea54efc67deb02","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn13@2020_5/2020/08/25/02-02-02-540_4f952fcd4bc52171.webp","destWidth":397,"destHeight":279,"sourceBytes":7549,"destBytes":7816,"author":"","articleImgCdnMap":{"https://www.zachleat.com/web/wp-content/uploads/2007/02/optionlist_multiple1.gif":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn13@2020_5/2020/08/25/02-02-02-540_4f952fcd4bc52171.webp","https://www.zachleat.com/web/wp-content/uploads/2007/02/optionlist_single1.gif":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn8@2020_6/2020/08/25/02-02-16-983_408e5e0742da329b.webp","https://www.zachleat.com/web/wp-content/uploads/2007/02/optionlist_all4.gif":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn79@2020_6/2020/08/25/02-02-20-170_e49144c6c48f956e.webp"},"publishedOrCreatedDate":1598320921760},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Bulletproof Icon Fonts—CSSConf","link":"http://www.zachleat.com/web/cssconf/2014/","description":"<p>I had the privilege of presenting at CSSConf 2014, an amazing conference put on by some amazing organizers. This conference took place the day before JSConf at the same venue for what some might refer to as synergy, but I’d never stoop so low as to call it that.</p> \n<ul> \n <li><a href=\"http://2014.cssconf.com/\">CSSConf 2014</a></li> \n <li><a href=\"http://2014.cssconf.com/index.html#zach\">CSSConf 2014 Session Link</a></li> \n</ul> \n<p><img src=\"https://www.zachleat.com/web/img/posts/cssconf.jpg\" alt=\"CSSConf 2014 Hotel View\" /></p> \n<h2 id=\"video\">Video <a class=\"direct-link\" href=\"http://www.zachleat.com/web/cssconf/2014/#video\">#</a></h2> \n<div class=\"fluid-width-video-wrapper\">\n <iframe src=\"https://www.youtube.com/embed/1EL4VpScnxE\" frameborder=\"0\" allowfullscreen=\"\"></iframe>\n</div> \n<ul> \n <li><a href=\"https://www.youtube.com/watch?v=1EL4VpScnxE\">Watch the talk on YouTube</a> (26:16) <span class=\"tag video\">Video</span></li> \n</ul> \n<h2 id=\"slides\">Slides <a class=\"direct-link\" href=\"http://www.zachleat.com/web/cssconf/2014/#slides\">#</a></h2> \n<script async=\"\" class=\"speakerdeck-embed\" data-id=\"9986ceb0d801013190141630294e6fbc\" data-ratio=\"1.33333333333333\" src=\"https://speakerdeck.com/assets/embed.js\"></script> \n<ul> \n <li><a href=\"https://speakerdeck.com/zachleat/bulletproof-font-icons\">Slides on Speaker Deck</a> (106 slides)</li> \n</ul> \n<h2 id=\"tweets\">Tweets <a class=\"direct-link\" href=\"http://www.zachleat.com/web/cssconf/2014/#tweets\">#</a></h2> \n<ul> \n <li><a href=\"https://storify.com/zachleat/cssconf-2014-bulletproof-icon-fonts-scrapbook\">Storify Scrapbook, a collection of tweets and pictures from the conference</a></li> \n</ul> \n<blockquote class=\"twitter-tweet\" lang=\"en\">\n <p>Bullet proof font icons with <a href=\"https://twitter.com/zachleat\">@zachleat</a> at <a href=\"https://twitter.com/CSSConf\">@CSSConf</a>. <a href=\"https://twitter.com/hashtag/sketchnotes?src=hash\">#sketchnotes</a> <a href=\"https://twitter.com/hashtag/cssconf?src=hash\">#cssconf</a> 🍕🍕🍕 <a href=\"http://t.co/SJPLns8b7B\">pic.twitter.com/SJPLns8b7B</a></p>— susan ❄ (@bysusanlin) \n <a href=\"https://twitter.com/bysusanlin/status/471356998685323265\">May 27, 2014</a>\n</blockquote> \n<blockquote class=\"twitter-tweet\" lang=\"en\">\n <p>Hope you're not using \"identical to\" for your hamburger menu icon - <a href=\"https://twitter.com/zachleat\">@zachleat</a> <a href=\"https://twitter.com/hashtag/cssconf?src=hash\">#cssconf</a> <a href=\"http://t.co/q9fGwyQifp\">pic.twitter.com/q9fGwyQifp</a></p>— Diana is broccolini (@broccolini) \n <a href=\"https://twitter.com/broccolini/status/471352835687190528\">May 27, 2014</a>\n</blockquote>","descriptionType":"html","feedId":12519,"bgimg":"https://www.zachleat.com/web/img/posts/cssconf.jpg","linkMd5":"0162fe622c325e8d649d20c84e43cb9d","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn98@2020_3/2020/08/25/02-02-03-076_be47e7dde9395a54.webp","destWidth":1600,"destHeight":1200,"sourceBytes":838018,"destBytes":532676,"author":"","articleImgCdnMap":{"https://www.zachleat.com/web/img/posts/cssconf.jpg":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn98@2020_3/2020/08/25/02-02-03-076_be47e7dde9395a54.webp"},"publishedOrCreatedDate":1598320921764},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Beaten to the Spiked Punch","link":"http://www.zachleat.com/web/beaten-to-the-spiked-punch/","description":"\n\t\t\t<p>No matter what you think, <a href=\"http://hyku.com/blog/archives/000786.html\">someone else is thinking the same thing</a>. I guess this guy might just be living with my same brain waves but a year or so earlier. It has never been a better time to just stop thinking.</p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"1a08200fe0d6607e52631fa9a90c30a3","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921760},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Let&#8217;s get parseIntimate.","link":"http://www.zachleat.com/web/lets-get-parseintimate/","description":"\n\t\t\t<p>This Valentine’s Day, spend a little quality time with JavaScript. Don’t be afraid to <a href=\"http://zachleat.com/parseintimate/\">get parseIntimate</a>.</p>\n<p><em>In all seriousness, I do still see new JavaScript developers that are unaware of the parseInt problem. I’m hoping this will raise awareness or failing that at least make some people smile.</em></p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"22cd08ca3b657b0210dc172207e999c3","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921763},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Quine using XHTML and JavaScript","link":"http://www.zachleat.com/web/quine-using-xhtml-and-javascript/","description":"\n\t\t\t<p>Programming Hilarity! He has a <a href=\"http://www.xn--kllberg-5wa.net/quine/quinegen.html\">generator</a>, and a pre-generated <a href=\"http://xn--kllberg-5wa.net/quine/quine.html\">example</a>. Wait, what’s a quine, you say?</p>\n<blockquote>\n<p>In computing, a quine is a program, a form of metaprogram, that produces its complete source code as its only output.</p>\n</blockquote>\n<p>– Courtesy of <a href=\"http://en.wikipedia.org/wiki/Quine_(computing)\">Wikipedia: Quine (computing)</a></p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"f2cf4dd4045c2763756673f08d2fab50","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921761},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"The Lighthouse Scores Will Continue Until Morale Improves","link":"http://www.zachleat.com/web/11ty-lighthouse/","description":"<p>Continuing in the great web performance tradition of running Lighthouse on so many things that Lighthouse—in shared traits with quarantined pandemic life—begins to have no meaning and rampant nihilism washes over the developer ecosystem, I have added Lighthouse scores to the <a href=\"https://www.11ty.dev/docs/starter/\">Starter Projects list on the Eleventy documentation</a>.</p> \n<p>As the Eleventy ecosystem has grown, the list of starter projects available has grown as well. This should help aid new developers if they want to use a Starter Project, as well as highlight developers that have put the extra effort into their project’s performance and accessibility.</p> \n<h2 id=\"adding-scores-to-eleventy-docs\">Adding Scores to Eleventy Docs <a class=\"direct-link\" href=\"http://www.zachleat.com/web/11ty-lighthouse/#adding-scores-to-eleventy-docs\">#</a></h2> \n<p>Just looking back at the last four months, this certainly feels like the accumulation of a bunch of different side projects coming together. Here are the different projects at work:</p> \n<ul> \n <li><a href=\"https://github.com/zachleat/performance-leaderboard/\"><code>performance-leaderboard</code></a></li> \n <li><a href=\"https://www.11ty.dev/leaderboard/\">Eleventy Leaderboards</a></li> \n <li><a href=\"https://www.speedlify.dev/\">Speedlify</a> with the <a href=\"https://www.speedlify.dev/api/urls.json\">API</a></li> \n <li><a href=\"https://github.com/zachleat/speedlify-score/\"><code>&lt;speedlify-score&gt;</code></a></li> \n <li><a href=\"https://github.com/11ty/eleventy-cache-assets\">Eleventy Cache Assets</a></li> \n</ul> \n<h3 id=\"step-1%3A-add-the-urls\">Step 1: Add the URLs <a class=\"direct-link\" href=\"http://www.zachleat.com/web/11ty-lighthouse/#step-1%3A-add-the-urls\">#</a></h3> \n<p>First I manually compiled a list of starter project demo URLs to <a href=\"https://www.zachleat.com/web/speedlify/\">Speedlify, a site I built for automated Lighthouse testing and reporting</a>. This was very straightforward based on the work I’ve already completed. You can see the daily updated results of that here:</p> \n<div class=\"primarylink\">\n <a href=\"https://www.speedlify.dev/eleventy-starters/\">Speedlify for Eleventy Starter Projects</a>\n</div> \n<h3 id=\"step-2%3A-fetch-the-data\">Step 2: Fetch the Data <a class=\"direct-link\" href=\"http://www.zachleat.com/web/11ty-lighthouse/#step-2%3A-fetch-the-data\">#</a></h3> \n<p>For my personal website, <a href=\"https://www.zachleat.com/web/lighthouse-in-footer/\">I added Lighthouse scores to the footer</a> using a client-side request to the Speedlify API. That wouldn’t work here—at time of writing there are 18 starter projects. I wouldn’t want 18 requests to the Speedlify API on every page load! So I modified my <a href=\"https://github.com/11ty/11ty-website/blob/master/_data/speedlify.js\">Eleventy data request to fetch and cache the API data at build time</a>.</p> \n<div class=\"primarylink\">\n <a href=\"https://www.11ty.dev/docs/starter/\">Eleventy Starter Projects with Lighthouse Scores</a>\n</div> \n<p>The Eleventy documentation already runs every day. Coupled with Speedlify’s daily updates, this means that the scores on the Eleventy documentation will automatically update with new Lighthouse score results every day too. So if a Starter Project author wants to update their project to improve their scores, it requires no manual intervention from me for the scores to update! Jamstack is pretty cool y’all.</p> \n<h3 id=\"step-3%3A-render-the-data\">Step 3: Render the Data <a class=\"direct-link\" href=\"http://www.zachleat.com/web/11ty-lighthouse/#step-3%3A-render-the-data\">#</a></h3> \n<p>Next, I modified the <a href=\"https://github.com/zachleat/speedlify-score/\"><code>&lt;speedlify-score&gt;</code> web component</a> to render build-time-fetched API data. In markup it looks like this:</p> \n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>speedlify-score</span> <span class=\"token attr-name\">raw-data</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">'</span>{\"url\":\"https://eleventy-base-blog.netlify.app/\",\"timestamp\":1595170952102,\"ranks\":{\"hundos\":7,\"performance\":5,\"accessibility\":6},\"lighthouse\":{\"version\":\"6.1.1\",\"performance\":1,\"accessibility\":1,\"bestPractices\":1,\"seo\":0.97,\"total\":397},\"firstContentfulPaint\":815.225,\"speedIndex\":815.225,\"largestContentfulPaint\":815.225,\"totalBlockingTime\":0,\"cumulativeLayoutShift\":0,\"timeToInteractive\":815.225,\"maxPotentialFirstInputDelay\":16,\"timeToFirstByte\":29.860000000000014,\"weight\":{\"summary\":\"3 requests • 3 KiB\",\"total\":3258,\"image\":0,\"imageCount\":0,\"script\":0,\"scriptCount\":0,\"document\":1059,\"font\":0,\"fontCount\":0,\"stylesheet\":2199,\"stylesheetCount\":2,\"thirdParty\":0,\"thirdPartyCount\":0},\"axe\":{\"passes\":130,\"violations\":0}}<span class=\"token punctuation\">'</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>speedlify-score</span><span class=\"token punctuation\">&gt;</span></span></code></pre> \n<p>It doesn’t seem great to render JSON in a data attribute like that but that’s how it works for now 🙃.</p> \n<p>So we’ve eliminated the runtime requests to the Speedlify API—great!</p> \n<p>The next logical step is to build-time render the component so that there isn’t any client-side JavaScript used at all 😅. I think that exploration has the potential to yield some very interesting Eleventy/Web Component crossover findings. My initial thought is to use a JavaScript class that you can consume in Node via <code>require</code> or <code>import</code>, in the browser via <code>import</code> or via a web component interface.</p> \n<h2 id=\"the-final-boss\">The Final Boss <a class=\"direct-link\" href=\"http://www.zachleat.com/web/11ty-lighthouse/#the-final-boss\">#</a></h2> \n<p>The final boss-level stage here is to get all of the Built With Eleventy sites onto Speedlify so that anyone can consume the Speedlify API results and put a Lighthouse score widget on their web site. That work is already underway. The logistics of running ~350 sites in Speedlify adds another level of complexity here but it should be achievable. Stay tuned.</p>","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"8db571c18849ed12f123d9190d02da10","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921773},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"It’s Dangerous to Go Stallone. Take Glyphhanger","link":"http://www.zachleat.com/web/glyphhanger/","description":"<p><em>Originally posted as <a href=\"http://filamentgroup.com/lab/glyphhanger/\">It’s Dangerous to Go Stallone. Take Glyphhanger</a> on the <a href=\"http://filamentgroup.com/lab/\">Filament Group Lab</a>. Title by <a href=\"https://www.filamentgroup.com/about/#scott-jehl\">Scott Jehl</a></em></p> \n<hr> \n <p>Psst.</p> \n <p>Hey, you.</p> \n <p>Yeah, you.</p> \n <p>I’m gonna tell you a secret. A well guarded and little known secret—whispered about in hallway tracks of web performance conferences around the world. A web font performance trick that will take your font loading to the next level.</p> \n <p>Here it is—are you ready? <em>Smaller web fonts load faster.</em> I know, I know. Mind blowing stuff.</p> \n <p>Okay, fine–I’ll concede. This isn’t as groundbreaking or as secretive as I originally claimed. But it is helpful!</p> \n <p>Practically speaking, making web fonts smaller is not always straightforward. The most straightforward optimization is to use compressed web font files, specifically the WOFF2 format but also its predecessor WOFF for compatibility.</p> \n <p>A less well known, but very useful option—and the one I’d like to discuss in-depth today—is removing potentially unnecessary characters from a font file. This is a process called <em>subsetting</em>.</p> \n <h2 id=\"subsetting\">Subsetting <a class=\"direct-link\" href=\"http://www.zachleat.com/web/glyphhanger/#subsetting\">#</a></h2> \n <p>Let’s start with the most popular font on Google Fonts, Roboto. For experiment’s sake (although you can download it from Google Fonts) let’s download an unoptimized copy straight from the source, the <a href=\"https://github.com/google/roboto/releases\">Roboto GitHub repository</a>.</p> \n <p>Opening up the <code>roboto-android.zip</code> file, we can find <code>Roboto-Regular.ttf</code>—a completely unoptimized desktop font version of Roboto. It weighs in at <code>306 KB</code> and includes 3,359 distinct glyphs (according to <a href=\"https://fontdrop.info/\">Font Drop</a>). That’s a hefty font. Not a hefty weight—we’re not using the bold version of Roboto—I only mean that the file size is large. Was that clear? Hopefully. I think you get what I mean.</p> \n <p>Font Drop also reports that Roboto contains support for over 40 languages:</p> \n <blockquote> \n  <p>Afrikaans Albanian Azerbaijani Belarusian Bosnian Bulgarian Catalan Croatian Czech Danish Dutch English Estonian Finnish French German Greek Hungarian Icelandic Italian Latvian Lithuanian Macedonian Maltese Norwegian Ossetic Polish Portugese Romanian Russian Serbian Slovak Slovenian Spanisch Swedish Turkish Ukrainian Uzbek Vietnamese Zulu</p> \n </blockquote> \n <p>Does your content necessitate characters for those languages? Or are those characters unnecessary and unlikely to appear on your site? This isn’t a hypothetical question—let’s answer it!</p> \n <h2 id=\"use-glyphhanger\">Use glyphhanger <a class=\"direct-link\" href=\"http://www.zachleat.com/web/glyphhanger/#use-glyphhanger\">#</a></h2> \n <p>We can test our site to see what glyphs are used at a URL using a tool we’ve developed called <code>glyphhanger</code>.</p> \n <p>Find <code>glyphhanger</code> on <a href=\"https://github.com/filamentgroup/glyphhanger\"><strong>GitHub</strong></a> or <a href=\"https://www.npmjs.com/package/glyphhanger\"><strong>npm</strong></a>.</p> \n <pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> -g glyphhanger</code></pre> \n <p>At its simplest, glyphhanger can take a URL and return a Unicode range for all of the content used on the site.</p> \n <p>For example (don’t include the <code>$</code> if you copy these commands):</p> \n <pre class=\"language-bash\"><code class=\"language-bash\">$ glyphhanger https://www.filamentgroup.com/<br>U+20,U+21,U+26,U+28,U+29,U+2B-38,U+3A,U+3F-47,U+49,U+4C-50,U+52-55,U+57-5A,U+61-70,U+72-77,U+79,U+7C,U+A9,U+DC,U+2014,U+2019,U+25A2</br></code></pre> \n <p>Let’s take <code>Roboto-Regular.ttf</code> and subset it this Unicode range. glyphhanger can help with this too:</p> \n <p><em>Subsetting functionality in glyphhanger requires you to install <a href=\"https://github.com/fonttools/fonttools\">fonttools</a>, a python project. The glyphhanger README includes <a href=\"https://github.com/filamentgroup/glyphhanger#installing-pyftsubset\">installation instructions for Mac OS X</a>.</em></p> \n <pre class=\"language-bash\"><code class=\"language-bash\">$ glyphhanger https://www.filamentgroup.com/ --subset<span class=\"token operator\">=</span>Roboto-Regular.ttf --formats<span class=\"token operator\">=</span>woff2,woff<br>Subsetting Roboto-Regular.ttf to Roboto-Regular-subset.woff <span class=\"token punctuation\">(</span>was <span class=\"token number\">298.45</span> KB, now <span class=\"token number\">14.09</span> KB<span class=\"token punctuation\">)</span><br>Subsetting Roboto-Regular.ttf to Roboto-Regular-subset.woff2 <span class=\"token punctuation\">(</span>was <span class=\"token number\">298.45</span> KB, now <span class=\"token number\">10.63</span> KB<span class=\"token punctuation\">)</span></br></br></code></pre> \n <p>Note that in the above example, <code>--formats=woff2,woff</code> means to output both a WOFF and WOFF2 subset file. Valid options include: <code>woff2</code>, <code>woff</code>, <code>woff-zopfli</code> (for better WOFF compression compared to <code>woff</code>), and <code>ttf</code>.</p> \n <h3 id=\"make-the-files-usable-site-wide\">Make the files usable site-wide <a class=\"direct-link\" href=\"http://www.zachleat.com/web/glyphhanger/#make-the-files-usable-site-wide\">#</a></h3> \n <p>This works great for a single page on our site. But to be fair, we want to use one set of web font files that works with all of the pages on our site—not just for the home page. There are a couple of ways to make this work:</p> \n <ol> \n  <li>Pass in multiple URLs</li> \n  <li>Use the glyphhanger Spider to find URLs for you</li> \n  <li>Pass in a white-list of characters or a <code>unicode-range</code></li> \n </ol> \n <p>Let’s look at a few examples:</p> \n <h4 id=\"pass-in-multiple-urls\">Pass in multiple URLs <a class=\"direct-link\" href=\"http://www.zachleat.com/web/glyphhanger/#pass-in-multiple-urls\">#</a></h4> \n <pre class=\"language-bash\"><code class=\"language-bash\">$ glyphhanger https://www.filamentgroup.com/ https://www.filamentgroup.com/code/</code></pre> \n <h4 id=\"use-the-spider-to-find-urls-for-you\">Use the Spider to find URLs for you <a class=\"direct-link\" href=\"http://www.zachleat.com/web/glyphhanger/#use-the-spider-to-find-urls-for-you\">#</a></h4> \n <p>Use the <code>--spider</code> option to find all of the <code>a[href]</code> attribute values that contain local URLs and spider those pages as well. This will report the union of all of the Unicode ranges.</p> \n <pre class=\"language-bash\"><code class=\"language-bash\">$ glyphhanger https://www.filamentgroup.com/ --spider --spider-limit<span class=\"token operator\">=</span><span class=\"token number\">10</span></code></pre> \n <p>Configure the maximum limit with <code>--spider-limit</code> (default is 10).</p> \n <h4 id=\"pass-in-a-whitelist\">Pass in a whitelist <a class=\"direct-link\" href=\"http://www.zachleat.com/web/glyphhanger/#pass-in-a-whitelist\">#</a></h4> \n <p>Use the <code>--whitelist</code> option to pass in a Unicode range or a list of characters you’d like to include by default in addition to any URLs that get interpreted. At time of writing, glyphhanger (v3.0) also includes shortcuts for <code>--US_ASCII</code> and <code>--LATIN</code>.</p> \n <p>Using <code>--whitelist</code> makes the URL argument optional.</p> \n <pre class=\"language-bash\"><code class=\"language-bash\">$ glyphhanger --whitelist<span class=\"token operator\">=</span><span class=\"token string\">\"ABCD\"</span><br>U+41-44</br></code></pre> \n <pre class=\"language-bash\"><code class=\"language-bash\">$ glyphhanger --US_ASCII<br>U+20-7E</br></code></pre> \n <p>Let’s subset our Roboto font using a whitelist.</p> \n <pre class=\"language-bash\"><code class=\"language-bash\">$ glyphhanger --whitelist<span class=\"token operator\">=</span><span class=\"token string\">\"U+20-7E\"</span> --subset<span class=\"token operator\">=</span>Roboto-Regular.ttf --formats<span class=\"token operator\">=</span>woff2<br>U+20-7E<br>Subsetting Roboto-Regular.ttf to Roboto-Regular-subset.woff2 <span class=\"token punctuation\">(</span>was <span class=\"token number\">298.45</span> KB, now <span class=\"token number\">10.78</span> KB<span class=\"token punctuation\">)</span></br></br></code></pre> \n <p>Nice, right?</p> \n <h3 id=\"subset-to-a-specific-font-family\">Subset to a specific font-family <a class=\"direct-link\" href=\"http://www.zachleat.com/web/glyphhanger/#subset-to-a-specific-font-family\">#</a></h3> \n <p>Let’s say, instead of Roboto, we have a specific monospace web font we’d like to use in our code blocks and syntax highlighted code on our site. The Unicode range for monospace code content may be very different from the characters used for other content on our site. glyphhanger can help here too. We can pass in a comma separated list of one or more <code>font-family</code> names to fetch only the content in nodes using those <code>font-family</code> values.</p> \n <pre class=\"language-bash\"><code class=\"language-bash\">$ glyphhanger --family<span class=\"token operator\">=</span><span class=\"token string\">'Consolas,monospace'</span> https://www.filamentgroup.com/lab/preload-ctm.html<br>U+A,U+20-22,U+26,U+28,U+29,U+2B-30,U+38,U+3A-3E,U+41-43,U+45,U+4A,U+4C-4E,U+53,U+54,U+5B,U+5D,U+61-79,U+7B-7D</br></code></pre> \n <p>It works with <code>--subset</code> too. You can also use <code>--json</code> to see all ranges organized by <code>font-family</code>. <code>\"*\"</code> is the universal list of all characters on the page.</p> \n <pre class=\"language-bash\"><code class=\"language-bash\">$ glyphhanger https://www.filamentgroup.com/code/ --json<br><span class=\"token punctuation\">{</span><span class=\"token string\">\"*\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"U+20,U+21,U+26,U+28,U+29,U+2B-38,U+3A,U+3F-4A,U+4C-59,U+61-7A,U+A9,U+B0,U+2019,U+201C,U+201D\"</span>,<span class=\"token string\">\"Source Sans Pro\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"U+20,U+21,U+26,U+28,U+29,U+2B-38,U+3A,U+3F-4A,U+4C-59,U+61-7A,U+A9,U+B0,U+2019,U+201C,U+201D\"</span>,<span class=\"token string\">\"Consolas\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"U+20,U+28,U+29,U+3A,U+40,U+61,U+63-66,U+69,U+6B-70,U+72-75,U+78-7A\"</span><span class=\"token punctuation\">}</span></br></code></pre> \n <h3 id=\"output-css-that-you-can-use\">Output CSS that you can use <a class=\"direct-link\" href=\"http://www.zachleat.com/web/glyphhanger/#output-css-that-you-can-use\">#</a></h3> \n <p>glyphhanger will even make your <code>@font-face</code> blocks in CSS for you. Using <code>--css</code> will output a <code>@font-face</code> block to the console. Of course, it’ll add the <code>unicode-range</code>, but it’ll also add the right <code>src</code> with the correct file names returned from <code>--subset</code>. If you’re using <code>--family</code>, it’ll add a <code>font-family</code> value too.</p> \n <pre class=\"language-bash\"><code class=\"language-bash\">$ glyphhanger --US_ASCII --family<span class=\"token operator\">=</span><span class=\"token string\">'Source Sans Pro'</span> --subset<span class=\"token operator\">=</span>Roboto-Regular.ttf --formats<span class=\"token operator\">=</span>woff2,woff --css<br>U+20-7E<br>Subsetting Roboto-Regular.ttf to Roboto-Regular-subset.woff <span class=\"token punctuation\">(</span>was <span class=\"token number\">298.45</span> KB, now <span class=\"token number\">14.37</span> KB<span class=\"token punctuation\">)</span><br>Subsetting Roboto-Regular.ttf to Roboto-Regular-subset.woff2 <span class=\"token punctuation\">(</span>was <span class=\"token number\">298.45</span> KB, now <span class=\"token number\">10.78</span> KB<span class=\"token punctuation\">)</span><br><br>@font-face <span class=\"token punctuation\">{</span><br> font-family: Source Sans Pro<span class=\"token punctuation\">;</span><br> src: url<span class=\"token punctuation\">(</span>Roboto-Regular-subset.woff2<span class=\"token punctuation\">)</span> format<span class=\"token punctuation\">(</span><span class=\"token string\">\"woff2\"</span><span class=\"token punctuation\">)</span>, url<span class=\"token punctuation\">(</span>Roboto-Regular-subset.zopfli.woff<span class=\"token punctuation\">)</span> format<span class=\"token punctuation\">(</span><span class=\"token string\">\"woff\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br> unicode-range: U+20-7E<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span></br></br></br></br></br></br></br></br></br></code></pre> \n <h2 id=\"a-web-font-utility-belt\">A Web Font Utility Belt <a class=\"direct-link\" href=\"http://www.zachleat.com/web/glyphhanger/#a-web-font-utility-belt\">#</a></h2> \n <p><code>glyphhanger</code> is a useful tool when working with web fonts—it can help optimize your font files very quickly. But don’t get too hasty. Take proper care to perform due diligence before subsetting:</p> \n <ol> \n  <li>Make sure subsetting agrees with the licensing restrictions on the font file.</li> \n  <li>Don’t be too aggressive with your subset. If you’re using web fonts for user generated content or content that is likely to change in the future, your Unicode range should be broad enough to accommodate this.</li> \n </ol> \n <p>Download glyphhanger and give it a try! We welcome any and all feedback at our <a href=\"https://github.com/filamentgroup/glyphhanger/issues\">Issue Tracker</a>. What else would you like to do with your web fonts?</p> \n</hr>","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"c86608f4fa2be4987253dee909b309f3","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921773},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Pastry Box: Impostor Syndrome","link":"http://www.zachleat.com/web/pastrybox-impostor-syndrome/","description":"\n\t\t\t<p>Related: <strong><a href=\"https://the-pastry-box-project.net/zach-leatherman/2014-june-7\"><em>Impostor Syndrome</em> was originally posted on the Pastry Box</a> and was a transcription of an <a href=\"https://www.zachleat.com/web/impostor/\">earlier BarCamp talk</a>.</strong></p>\n<blockquote>\n<p>People with Impostor Syndrome are unable to internalize their accomplishments and are convinced that they are frauds and do not deserve the success they have achieved.</p>\n</blockquote>\n<p>Before we get too far, I should let you know up front that I am not qualified to be writing this article on <a href=\"https://en.wikipedia.org/wiki/Impostor_syndrome\">Impostor Syndrome</a>. I’m not even the most qualified person on the Pastry Box that’s <a href=\"https://the-pastry-box-project.net/angelina-fabbro/2013-june-11\">written an article about Impostor Syndrome</a>.</p>\n<p>Any attempt to call myself a writer feels cringeworthy and would surely be contested. I’d better prepare a list of writing material in case I need to support the claim. Hopefully no one will discover that I’m not a professional writer.</p>\n<p>Now that I think about it, I’ve written almost 120 blog posts on <a href=\"https://www.zachleat.com/web/\">my personal site</a>, of which at least one probably contains the correct use of smart quotes. A few of the posts seemed to get a fair amount of traffic and positive comments.</p>\n<p>But maybe those were flukes.</p>\n<p>It was a difficult decision to open my site up to comments—they’re notoriously risky. A feedback loop could expose me. Luckily the Pastry Box doesn’t have comments.</p>\n<p>What if someone else already wrote about this topic? What if the ideas I’m writing about are derivative and unoriginal? No one will read it. There are far better writers on the dauntingly vast World Wide Web.</p>\n<p>To be safe, I’ll stop blogging.</p>\n<p>I’ll stick to Twitter.</p>\n<p>Twitter is ephemeral. If I make a mistake, it’s quickly lost downstream. Not to mention the lower bar for quality compared to blog posts. One hundred and forty characters are less error prone than a thousand words of painstakingly researched technical content. Ask a mathematician (not me). The less you write, the fewer mistakes you will make.</p>\n<p>Now that I think about it, I guess I’ve written a few tweets that weren’t immediately refuted. People even seemed to enjoy them. I’ve somehow convinced a few people to follow me. I basically got my job through Twitter.</p>\n<p>But maybe Twitter makes it easier to fool people.</p>\n<p>If <a href=\"https://twitter.com/JustinBieber\">Justin Bieber</a> can get <s>52</s> 92 Million followers, the bar must be pretty low.</p>\n<p>My followers probably have me on Twitter probation. My next tweet probably won’t be good enough and they’ll unfollow me.</p>\n<blockquote>\n<p>“It's better to keep your mouth shut and appear stupid than open it and remove all doubt.” —Mark Twain</p>\n</blockquote>\n<p>To be safe, I won’t blog or tweet.</p>\n<p>To beat Impostor Syndrome I could stop participating, but that won’t make me happy. I need to create to feel alive. <strong>The best way to beat Impostor Syndrome is to participate.</strong> Encourage others and accept encouragement from others. <a href=\"https://the-pastry-box-project.net/brad-frost/2014-may-1\">Share what you know</a> and <em>what you don’t know</em>!</p>\n<blockquote>\n<p>“I have written eleven books, but each time I think ‘Uh oh, they’re going to find out now. I’ve run a game on everybody, and they’re going to find out.” —Maya Angelou</p>\n</blockquote>\n<p>Your Impostor Syndrome may not go away, but if you recognize it, you can start to deal with it.</p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"bdcfe56eee78477f4d4ca7d8869299e7","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921764},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"The Performance and Usability of Font Loading—Velocity Santa Clara","link":"http://www.zachleat.com/web/velocity/2015/","description":"<p>My <a href=\"https://instagram.com/p/2MpabyP3h9/\">beautiful daughter</a> was born exactly 26 days before the Velocity Conference. The other parents in my life warned me what having a new child would be like—you live your life in one hour increments between feedings, twenty four hours a day. I did not heed their warnings and used many of those sleep-deprived increments to make a brand new presentation on Web Fonts for Velocity.</p> \n<ul> \n <li><a href=\"https://speakerdeck.com/zachleat/the-performance-and-usability-of-font-loading\">Slides on Speakerdeck</a></li> \n <li><a href=\"https://www.youtube.com/watch?v=DGQSw6gc95k\">Video on YouTube</a></li> \n <li><a href=\"https://storify.com/zachleat/velocity-conference-2015-santa-clara\">Storify Scrapbook</a></li> \n <li><a href=\"http://velocityconf.com/web-mobile-business-conf-2015/public/schedule/detail/41593\">Velocity Session Link</a></li> \n</ul> \n<figure> \n <div class=\"fullwidth\">\n  <div class=\"fluid-width-video-wrapper\">\n   <iframe src=\"https://www.youtube.com/embed/DGQSw6gc95k\" frameborder=\"0\" webkitallowfullscreen=\"\" mozallowfullscreen=\"\" allowfullscreen=\"\"></iframe>\n  </div>\n </div> \n <figcaption>\n  <a href=\"https://www.youtube.com/watch?v=DGQSw6gc95k\">YouTube Video: Velocity Conference, The Performance and Usability of Font Loading</a>\n </figcaption> \n</figure> \n<h2 id=\"topics-and-related-links\">Topics and Related Links <a class=\"direct-link\" href=\"http://www.zachleat.com/web/velocity/2015/#topics-and-related-links\">#</a></h2> \n<ul> \n <li>Weight versus Perceived Performance of different asset types <code>(00:45)</code> \n  <ul> \n   <li><em>(see also <a href=\"http://www.filamentgroup.com/lab/weight-wait.html\">More Weight Doesn’t Mean More Wait</a> by <a href=\"https://twitter.com/scottjehl\">Scott Jehl</a>)</em></li> \n  </ul> </li> \n <li>Font Formats (WOFF2, WOFF, OTF/TTF, <s>SVG</s>) <code>(03:25)</code> \n  <ul> \n   <li><a href=\"https://groups.google.com/a/chromium.org/forum/#!topic/chromium-dev/j27Ou4RtvQI/discussion\">WOFF2 is 30% Smaller</a></li> \n  </ul> </li> \n <li>Triggering a <code>@font-face</code> Download (Attached Elements, <code>unicode-range</code>) <code>(04:13)</code></li> \n <li><code>@font-face</code> matching <code>font-weight</code>, <code>font-style</code> (Faux Bold and Italic) <code>(07:24)</code> \n  <ul> \n   <li><a href=\"http://stateofwebtype.com/#font-synthesis\"><code>font-synthesis</code> support on State of Web Type</a></li> \n  </ul> </li> \n <li>Behavior while Downloading (FOIT, FOUT) <code>(15:06)</code> \n  <ul> \n   <li><a href=\"http://www.webpagetest.org/video/compare.php?tests=141205_VE_STK-r:1-c:0\">Facebook.com WebPageTest Result</a></li> \n   <li><a href=\"http://www.nytimes.com/2012/03/01/technology/impatient-web-users-flee-slow-loading-sites.html\">Google’s “250ms is a Big Deal” Quote</a></li> \n   <li><a href=\"https://twitter.com/zoompf/status/578901383253995520\">@TheMattShull quote, 3 seconds means 40% abandonment</a></li> \n   <li><a href=\"http://www.webpagetest.org/video/compare.php?tests=141209_AY_Z79-r:1-c:0\">Apple WebPageTest Result</a></li> \n  </ul> </li> \n <li><a href=\"https://www.zachleat.com/web/mitt-romney-webfont-problem/\">The Mitt Romney Web Font Problem</a> <code>(19:05)</code> \n  <ul> \n   <li><a href=\"https://twitter.com/jmuspratt/status/561239961924403200\">James Muspratt’s Original Tweet</a></li> \n  </ul> </li> \n <li>FOUT versus Progressive JPEG <code>(21:21)</code></li> \n <li>Font Loading Anti-Patterns <code>(23:01)</code></li> \n <li>Cross-browser solutions for FOUT and FOIT, <a href=\"https://www.zachleat.com/web/foft/\">Flash of Faux Text</a> <code>(26:48)</code> \n  <ul> \n   <li><a href=\"https://github.com/KenjiBaheux/css-font-rendering\"><code>font-rendering</code> Specification</a></li> \n   <li><a href=\"http://dev.w3.org/csswg/css-font-loading/\">CSS Font Loading API</a></li> \n   <li>Polyfills: <a href=\"https://github.com/zachleat/fontfaceonload\">FontFaceOnload</a> and <a href=\"https://github.com/bramstein/fontfaceobserver/\">fontfaceobserver</a></li> \n  </ul> </li> \n <li>Minimizing FOUT to Web Font Reflow <code>(32:39)</code> \n  <ul> \n   <li><a href=\"http://fontfamily.io/\">fontfamily.io, Compatibility Tables for Installed Fonts</a></li> \n   <li><a href=\"http://blog.fonts.com/2011/08/web-font-tune-up-time-a-fun-font-fallback-event/\">Jason Pamental’s Blog Post on styling Fallback Fonts</a></li> \n  </ul> </li> \n</ul> \n<h2 id=\"thank-you\">Thank You <a class=\"direct-link\" href=\"http://www.zachleat.com/web/velocity/2015/#thank-you\">#</a></h2> \n<p>A huge thanks to <a href=\"https://twitter.com/souders\">Steve Souders</a> for goading me into submitting a proposal to the conference—I had a great time. It was amazing to finally meet Steve in person as well as <a href=\"https://twitter.com/katiekovalcin\">Katie Kovalcin</a> and <a href=\"https://twitter.com/brucel\">Bruce Lawson</a>, people I had only known previously through the magic of the Internet.</p>","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"a526459669de4cb371a87dfc64ee6a9c","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921765},{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","title":"Problems with Looping through window.setInterval","link":"http://www.zachleat.com/web/problems-with-looping-through-windowsetinterval/","description":"\n\t\t\t<p>Look at this code. What do you expect to be the outcome?</p>\n<pre><code>var d = new Date();\nvar r = [];\nfor(var j=0,k=2;j&lt;k ;j++) {\n    window.setInterval(function()\n    {\n        var next = new Date();\n        r.push(next.getTime() - d.getTime());\n    },1000);\n}\n</code></pre>\n<p>Every 1000 milliseconds (1 second), the <code>r</code> array should have three delta timestamps added into it (one for each interval set in the for loop). In FireFox, however, there are exactly nine delta timestamps added per second. If you set <code>k=10</code>, the result is one hundred delta timestamps per second. If anyone has the answer, I am curious, even if the result is that I'm an idiot. It seems to work correctly in Internet Explorer 7. Thanks for your help, internet.</p>\n\n\t\t","descriptionType":"html","feedId":12519,"bgimg":"","linkMd5":"d3a7a07db6809ca5e75ab3bc07c5d8b0","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598320921761}],"record":{"createdTime":"2020-08-25 10:02:01","updatedTime":"2020-08-25 10:02:01","feedId":12519,"fetchDate":"Tue, 25 Aug 2020 02:02:01 +0000","fetchMs":753,"handleMs":1467,"totalMs":25523,"newArticles":0,"totalArticles":248,"status":1,"type":0,"ip":"34.192.46.194","hostName":"us-017.herokuapp.com","requestId":"daee711f182a43169ebf1b16f553a0fb_12519","contentType":"application/xml; charset=utf-8","totalBytes":10376685,"bgimgsTotal":68,"bgimgsGithubTotal":68,"articlesImgsTotal":325,"articlesImgsGithubTotal":325,"successGithubMap":{"myreaderx14":12,"myreaderx8":11,"myreaderx15":11,"myreaderx7":12,"myreaderx16":11,"myreaderx6":12,"myreaderx10":12,"myreaderx32":12,"myreaderx4":12,"myreaderx3":11,"myreaderx33":11,"myreaderx11":11,"myreaderx2":11,"myreaderx12":11,"myreaderx1":11,"myreaderx13":10,"myreaderx30":12,"myreaderx31":11,"myreaderx18":10,"myreaderx19":11,"myreaderx":10,"myreaderx25":12,"myreaderx27":10,"myreaderx21":12,"myreaderx22":11,"myreaderx23":11,"myreaderx24":11,"myreaderx5oss":11,"myreaderx29":11},"failGithubMap":{}},"feed":{"createdTime":"2020-08-25 04:37:42","updatedTime":"2020-08-25 04:37:42","id":12519,"name":"Zach Leatherman","url":"http://www.zachleat.com/web/feed/","subscriber":null,"website":null,"icon":"https://www.zachleat.com/favicon.ico","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx61/cdn62@2020_1/2020/08/25/02-02-01-054_e124d94a784176ed.ico","description":"A web development blog written by @zachleat.","weekly":null,"link":"https://www.zachleat.com"},"noPictureArticleList":[],"tmpCommonImgCdnBytes":3304872,"tmpBodyImgCdnBytes":7071813,"tmpBgImgCdnBytes":0,"extra4":{"start":1598320919175,"total":0,"statList":[{"spend":1131,"msg":"获取xml内容"},{"spend":1467,"msg":"解释文章"},{"spend":1,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":15069,"msg":"正文链接上传到cdn"}]},"extra5":325,"extra6":325,"extra7ImgCdnFailResultVector":[{"code":1,"isDone":false,"source":"https://calendar.google.com/googlecalendar/images/calendar_sm2_en.gif","sourceStatusCode":404,"sourceBytes":0,"destBytes":0,"feedId":12519,"totalSpendMs":67,"convertSpendMs":0,"createdTime":"2020-08-25 10:02:12","host":"us-005*","referer":"http://www.zachleat.com/web/relative-urls-including-the-domain/","linkMd5ListStr":"79151f9f9b3d1713dec738ecb8d80a4d","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[404],"sourceSize":"0","destSize":"0"},{"code":1,"isDone":false,"source":"https://calendar.google.com/googlecalendar/images/calendar_sm2_en.gif","sourceStatusCode":404,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn0@2020_1/404.jpg","sourceBytes":0,"destBytes":0,"feedId":12519,"totalSpendMs":46,"convertSpendMs":0,"createdTime":"2020-08-25 10:02:13","host":"europe-25*","referer":"http://www.zachleat.com/web/relative-urls-including-the-domain/","linkMd5ListStr":"79151f9f9b3d1713dec738ecb8d80a4d","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[404],"sourceSize":"0","destSize":"0"}],"extra10_invalidATagHrefValue":{"http://www.zachleat.com/web/compatibility/_#css-values":"http://www.zachleat.com/web/compatibility/#css-values","http://www.zachleat.com/web/css3-text-writing-mode/_#view-the-demo-%2F-test-page":"http://www.zachleat.com/web/css3-text-writing-mode/#view-the-demo-%2F-test-page","http://www.zachleat.com/web/zachleat-is-dead/_#future-plans":"http://www.zachleat.com/web/zachleat-is-dead/#future-plans","http://www.zachleat.com/web/font-smooth/_#conclusion":"http://www.zachleat.com/web/font-smooth/#conclusion","http://www.zachleat.com/web/snarky/_#webmentions%2C-disqus%2C-wordpress":"http://www.zachleat.com/web/snarky/#webmentions%2C-disqus%2C-wordpress","http://www.zachleat.com/web/pragmatic/_#cutting-fat":"http://www.zachleat.com/web/pragmatic/#cutting-fat","http://www.zachleat.com/web/icymi/2013/_#open-source":"http://www.zachleat.com/web/icymi/2013/#open-source","http://www.zachleat.com/web/font-smooth/_#what%E2%80%99s-the-difference-between-these-modes%3F":"http://www.zachleat.com/web/font-smooth/#what%E2%80%99s-the-difference-between-these-modes%3F","http://www.zachleat.com/web/javascript-tdd/_#writing-a-test":"http://www.zachleat.com/web/javascript-tdd/#writing-a-test","http://www.zachleat.com/web/scoville-scale/_#slides":"http://www.zachleat.com/web/scoville-scale/#slides","http://www.zachleat.com/web/css-tricks-web-fonts/_#design-review":"http://www.zachleat.com/web/css-tricks-web-fonts/#design-review","http://www.zachleat.com/web/lighthouse-in-footer/_#go-forth-and-speed-test!":"http://www.zachleat.com/web/lighthouse-in-footer/#go-forth-and-speed-test!","http://www.zachleat.com/web/comprehensive-webfonts/_#abstain":"http://www.zachleat.com/web/comprehensive-webfonts/#abstain","http://www.zachleat.com/web/president-web-font/_#candidate-web-font-score%3A--3":"http://www.zachleat.com/web/president-web-font/#candidate-web-font-score%3A--3","http://www.zachleat.com/web/foft/_#minimizing-reflow":"http://www.zachleat.com/web/foft/#minimizing-reflow","http://www.zachleat.com/web/icymi/2017/_#writing%2C-speaking%2C-conference-organizing":"http://www.zachleat.com/web/icymi/2017/#writing%2C-speaking%2C-conference-organizing","http://www.zachleat.com/web/mitt-romney-webfont-problem/_#javascript":"http://www.zachleat.com/web/mitt-romney-webfont-problem/#javascript","http://www.zachleat.com/web/11ty-lighthouse/_#the-final-boss":"http://www.zachleat.com/web/11ty-lighthouse/#the-final-boss","http://www.zachleat.com/web/comprehensive-webfonts/_#critical-foft-with-data-uri":"http://www.zachleat.com/web/comprehensive-webfonts/#critical-foft-with-data-uri","http://www.zachleat.com/web/webfont-glossary/_#fout":"http://www.zachleat.com/web/webfont-glossary/#fout","http://www.zachleat.com/web/webfont-glossary/_#font-synthesis":"http://www.zachleat.com/web/webfont-glossary/#font-synthesis","http://www.zachleat.com/web/rwd-perf/_#view-the-slide-deck-(april-2013)":"http://www.zachleat.com/web/rwd-perf/#view-the-slide-deck-(april-2013)","http://www.zachleat.com/web/comprehensive-webfonts/_#verdict%3A-this-will-be-the-new-gold-standard-when-browser-support-improves.":"http://www.zachleat.com/web/comprehensive-webfonts/#verdict%3A-this-will-be-the-new-gold-standard-when-browser-support-improves.","http://www.zachleat.com/web/enlarging-your-yui-datatable-in-29-seconds-or-less/_#limitations":"http://www.zachleat.com/web/enlarging-your-yui-datatable-in-29-seconds-or-less/#limitations","http://www.zachleat.com/web/tool-or-die/_#view-the-slides":"http://www.zachleat.com/web/tool-or-die/#view-the-slides","http://www.zachleat.com/web/that-could-possibly-work/_#the-simplest-critical-css-that-can-possibly-work-well":"http://www.zachleat.com/web/that-could-possibly-work/#the-simplest-critical-css-that-can-possibly-work-well","http://www.zachleat.com/web/font-smooth/_#try-it-out-on-this-page":"http://www.zachleat.com/web/font-smooth/#try-it-out-on-this-page","http://www.zachleat.com/web/font-checklist/_#%F0%9F%8F%8E-prioritize-readable-text":"http://www.zachleat.com/web/font-checklist/#%F0%9F%8F%8E-prioritize-readable-text","http://www.zachleat.com/web/president-web-font/_#candidate-web-font-score%3A--9":"http://www.zachleat.com/web/president-web-font/#candidate-web-font-score%3A--9","http://www.zachleat.com/web/icymi/2013/_#performance-and-responsive-web-design-video":"http://www.zachleat.com/web/icymi/2013/#performance-and-responsive-web-design-video","http://www.zachleat.com/web/webfont-glossary/_#font-face-matching":"http://www.zachleat.com/web/webfont-glossary/#font-face-matching","http://www.zachleat.com/web/president-web-font/_#candidate-web-font-score%3A--5":"http://www.zachleat.com/web/president-web-font/#candidate-web-font-score%3A--5","http://www.zachleat.com/web/scoville-scale/_#slide-hyperlinks":"http://www.zachleat.com/web/scoville-scale/#slide-hyperlinks","http://www.zachleat.com/web/icymi/2014/_#cssconf-talk":"http://www.zachleat.com/web/icymi/2014/#cssconf-talk","http://www.zachleat.com/web/eleventy-birthday/_#thank-you!":"http://www.zachleat.com/web/eleventy-birthday/#thank-you!","http://www.zachleat.com/web/zachleat-is-dead/_#removals":"http://www.zachleat.com/web/zachleat-is-dead/#removals","http://www.zachleat.com/web/cssconf/2014/_#slides":"http://www.zachleat.com/web/cssconf/2014/#slides","http://www.zachleat.com/web/device-independence/_#input-device-independence":"http://www.zachleat.com/web/device-independence/#input-device-independence","http://www.zachleat.com/web/a-mobile-web-divided/_#dojo-mobile-0.2":"http://www.zachleat.com/web/a-mobile-web-divided/#dojo-mobile-0.2","http://www.zachleat.com/web/bike-lights/_#finished-product":"http://www.zachleat.com/web/bike-lights/#finished-product","http://www.zachleat.com/web/whitehouse/_#video":"http://www.zachleat.com/web/whitehouse/#video","http://www.zachleat.com/web/critical-webfonts/_#performance-comparison":"http://www.zachleat.com/web/critical-webfonts/#performance-comparison","http://www.zachleat.com/web/load-css-dynamically/_#yui-2.8.1-and-3.1.1":"http://www.zachleat.com/web/load-css-dynamically/#yui-2.8.1-and-3.1.1","http://www.zachleat.com/web/css3-text-writing-mode/_#writing-mode%3A-lr-bt":"http://www.zachleat.com/web/css3-text-writing-mode/#writing-mode%3A-lr-bt","http://www.zachleat.com/web/rename-font/_#system-ui":"http://www.zachleat.com/web/rename-font/#system-ui","http://www.zachleat.com/web/comprehensive-webfonts/_#verdict%3A-not-sufficient-by-itself.":"http://www.zachleat.com/web/comprehensive-webfonts/#verdict%3A-not-sufficient-by-itself.","http://www.zachleat.com/web/compatibility/_#web-browser-compatibility":"http://www.zachleat.com/web/compatibility/#web-browser-compatibility","http://www.zachleat.com/web/domcontentloaded-inconsistencies/_#internet-explorer-inside-an-iframe":"http://www.zachleat.com/web/domcontentloaded-inconsistencies/#internet-explorer-inside-an-iframe","http://www.zachleat.com/web/smashingtv/_#slides":"http://www.zachleat.com/web/smashingtv/#slides","http://www.zachleat.com/web/learn-with-jason/_#video":"http://www.zachleat.com/web/learn-with-jason/#video","http://www.zachleat.com/web/demo-oval-animation/_#requirements":"http://www.zachleat.com/web/demo-oval-animation/#requirements","http://www.zachleat.com/web/css3-text-writing-mode/_#compatibility-table":"http://www.zachleat.com/web/css3-text-writing-mode/#compatibility-table","http://www.zachleat.com/web/rwd-perf/_#content":"http://www.zachleat.com/web/rwd-perf/#content","http://www.zachleat.com/web/comprehensive-webfonts/_#foft%2C-or-fout-with-two-stage-render":"http://www.zachleat.com/web/comprehensive-webfonts/#foft%2C-or-fout-with-two-stage-render","http://www.zachleat.com/web/that-could-possibly-work/_#nejs-conf-2018":"http://www.zachleat.com/web/that-could-possibly-work/#nejs-conf-2018","http://www.zachleat.com/web/speedlify/_#source-code":"http://www.zachleat.com/web/speedlify/#source-code","http://www.zachleat.com/web/css3-text-writing-mode/_#writing-mode%3A-bt-rl":"http://www.zachleat.com/web/css3-text-writing-mode/#writing-mode%3A-bt-rl","http://www.zachleat.com/web/rename-font/_#facebook%E2%80%99s-san-francisco-trick":"http://www.zachleat.com/web/rename-font/#facebook%E2%80%99s-san-francisco-trick","http://www.zachleat.com/web/placeholder/_#overlooked-polyfill-considerations":"http://www.zachleat.com/web/placeholder/#overlooked-polyfill-considerations","http://www.zachleat.com/web/pragmatic/_#input":"http://www.zachleat.com/web/pragmatic/#input","http://www.zachleat.com/web/snarky/_#sentiment-analysis":"http://www.zachleat.com/web/snarky/#sentiment-analysis","http://www.zachleat.com/web/compatibility/_#unify-for-unicode-characters":"http://www.zachleat.com/web/compatibility/#unify-for-unicode-characters","http://www.zachleat.com/web/comprehensive-webfonts/_#asynchronous-data-uri-stylesheet":"http://www.zachleat.com/web/comprehensive-webfonts/#asynchronous-data-uri-stylesheet","http://www.zachleat.com/web/the-compromise/_#retirement-benefits":"http://www.zachleat.com/web/the-compromise/#retirement-benefits","http://www.zachleat.com/web/compatibility/_#mobile-html5":"http://www.zachleat.com/web/compatibility/#mobile-html5","http://www.zachleat.com/web/charset/_#sources":"http://www.zachleat.com/web/charset/#sources","http://www.zachleat.com/web/comprehensive-webfonts/_#glossary":"http://www.zachleat.com/web/comprehensive-webfonts/#glossary","http://www.zachleat.com/web/css3-text-writing-mode/_#writing-mode%3A-tb-rl":"http://www.zachleat.com/web/css3-text-writing-mode/#writing-mode%3A-tb-rl","http://www.zachleat.com/web/that-could-possibly-work/_#the-simplest-brand-that-can-possibly-work-well":"http://www.zachleat.com/web/that-could-possibly-work/#the-simplest-brand-that-can-possibly-work-well","http://www.zachleat.com/web/cssconf/2014/_#tweets":"http://www.zachleat.com/web/cssconf/2014/#tweets","http://www.zachleat.com/web/facepile/_#javascript":"http://www.zachleat.com/web/facepile/#javascript","http://www.zachleat.com/web/webp/_#implementation-note":"http://www.zachleat.com/web/webp/#implementation-note","http://www.zachleat.com/web/23-minutes/_#let%E2%80%99s-make-some-changes":"http://www.zachleat.com/web/23-minutes/#let%E2%80%99s-make-some-changes","http://www.zachleat.com/web/making-fontfamilyio/_#video":"http://www.zachleat.com/web/making-fontfamilyio/#video","http://www.zachleat.com/web/pragmatic/_#exceptions":"http://www.zachleat.com/web/pragmatic/#exceptions","http://www.zachleat.com/web/preload/_#benchmarks":"http://www.zachleat.com/web/preload/#benchmarks","http://www.zachleat.com/web/scoville-scale/_#resources":"http://www.zachleat.com/web/scoville-scale/#resources","http://www.zachleat.com/web/a-mobile-web-divided/_#sencha-touch-1.1.0":"http://www.zachleat.com/web/a-mobile-web-divided/#sencha-touch-1.1.0","http://www.zachleat.com/web/a-mobile-web-divided/_#one-web%2C-two-web-primer":"http://www.zachleat.com/web/a-mobile-web-divided/#one-web%2C-two-web-primer","http://www.zachleat.com/web/charset/_#for-xmlhttprequest-objects":"http://www.zachleat.com/web/charset/#for-xmlhttprequest-objects","http://www.zachleat.com/web/speedlify/_#next-steps":"http://www.zachleat.com/web/speedlify/#next-steps","http://www.zachleat.com/web/icymi/2013/_#impostor-syndrome-video":"http://www.zachleat.com/web/icymi/2013/#impostor-syndrome-video","http://www.zachleat.com/web/compatibility/_#ecmascript-compatibility":"http://www.zachleat.com/web/compatibility/#ecmascript-compatibility","http://www.zachleat.com/web/socialcount/_#contribute-on-github":"http://www.zachleat.com/web/socialcount/#contribute-on-github","http://www.zachleat.com/web/velocity/2015/_#thank-you":"http://www.zachleat.com/web/velocity/2015/#thank-you","http://www.zachleat.com/web/css3-text-writing-mode/_#writing-mode%3A-bt-lr":"http://www.zachleat.com/web/css3-text-writing-mode/#writing-mode%3A-bt-lr","http://www.zachleat.com/web/bigtext-makes-text-big/_#the-bigtext-demo-wizard":"http://www.zachleat.com/web/bigtext-makes-text-big/#the-bigtext-demo-wizard","http://www.zachleat.com/web/demo-oval-animation/_#download-as-.zip":"http://www.zachleat.com/web/demo-oval-animation/#download-as-.zip","http://www.zachleat.com/web/smashingconf/2014/_#slides-on-speaker-deck-(203-slides)":"http://www.zachleat.com/web/smashingconf/2014/#slides-on-speaker-deck-(203-slides)","http://www.zachleat.com/web/critical-webfonts/_#two-scoped-classes-for-foft":"http://www.zachleat.com/web/critical-webfonts/#two-scoped-classes-for-foft","http://www.zachleat.com/web/eleventy-birthday/_#obsessively-write-tests":"http://www.zachleat.com/web/eleventy-birthday/#obsessively-write-tests","http://www.zachleat.com/web/scare-your-visitors-with-this-javascript-gravatar-plugin/_#example-usage%3A":"http://www.zachleat.com/web/scare-your-visitors-with-this-javascript-gravatar-plugin/#example-usage%3A","http://www.zachleat.com/web/icymi/2013/_#modernizr-%3Atarget-feature-test-blog-post":"http://www.zachleat.com/web/icymi/2013/#modernizr-%3Atarget-feature-test-blog-post","http://www.zachleat.com/web/webp/_#jpeg":"http://www.zachleat.com/web/webp/#jpeg","http://www.zachleat.com/web/comprehensive-webfonts/_#critical-foft-with-preload":"http://www.zachleat.com/web/comprehensive-webfonts/#critical-foft-with-preload","http://www.zachleat.com/web/icymi/2016/_#tweets":"http://www.zachleat.com/web/icymi/2016/#tweets","http://www.zachleat.com/web/rename-font/_#live-demos":"http://www.zachleat.com/web/rename-font/#live-demos","http://www.zachleat.com/web/google-fonts-display/_#future-wishlist":"http://www.zachleat.com/web/google-fonts-display/#future-wishlist","http://www.zachleat.com/web/javascript-tdd/_#jstestdriver":"http://www.zachleat.com/web/javascript-tdd/#jstestdriver","http://www.zachleat.com/web/introducing-eleventy/_#try-it-out!":"http://www.zachleat.com/web/introducing-eleventy/#try-it-out!","http://www.zachleat.com/web/snarky/_#after%3A":"http://www.zachleat.com/web/snarky/#after%3A","http://www.zachleat.com/web/dont-stop-learning/_#hot-drama":"http://www.zachleat.com/web/dont-stop-learning/#hot-drama","http://www.zachleat.com/web/css-sprites-using-font-face/_#demo":"http://www.zachleat.com/web/css-sprites-using-font-face/#demo","http://www.zachleat.com/web/smashingconf/2015/_#links-(in-order-of-slide-appearance)":"http://www.zachleat.com/web/smashingconf/2015/#links-(in-order-of-slide-appearance)","http://www.zachleat.com/web/if-the-menu-fitts-we-must-acquit/_#conclusion":"http://www.zachleat.com/web/if-the-menu-fitts-we-must-acquit/#conclusion","http://www.zachleat.com/web/webp/_#imageoptim":"http://www.zachleat.com/web/webp/#imageoptim","http://www.zachleat.com/web/snarky/_#how-does-it-look%3F":"http://www.zachleat.com/web/snarky/#how-does-it-look%3F","http://www.zachleat.com/web/enlarging-your-yui-datatable-in-29-seconds-or-less/_#download-ymod-tableextension-2.3.0.js":"http://www.zachleat.com/web/enlarging-your-yui-datatable-in-29-seconds-or-less/#download-ymod-tableextension-2.3.0.js","http://www.zachleat.com/web/icymi/2014/_#bulletproof-accessible-icon-fonts-blog-post":"http://www.zachleat.com/web/icymi/2014/#bulletproof-accessible-icon-fonts-blog-post","http://www.zachleat.com/web/icymi/2014/_#dev.opera-blog-post":"http://www.zachleat.com/web/icymi/2014/#dev.opera-blog-post","http://www.zachleat.com/web/a-mobile-web-divided/_#conclusion":"http://www.zachleat.com/web/a-mobile-web-divided/#conclusion","http://www.zachleat.com/web/moving-target/_#the-new-document.queryselectorall('%3Atarget')-method":"http://www.zachleat.com/web/moving-target/#the-new-document.queryselectorall('%3Atarget')-method","http://www.zachleat.com/web/president-web-font/_#bernie-sanders":"http://www.zachleat.com/web/president-web-font/#bernie-sanders","http://www.zachleat.com/web/demo-oval-animation/_#demo":"http://www.zachleat.com/web/demo-oval-animation/#demo","http://www.zachleat.com/web/compatibility/_#honorable-mentions":"http://www.zachleat.com/web/compatibility/#honorable-mentions","http://www.zachleat.com/web/11ty-lighthouse/_#step-1%3A-add-the-urls":"http://www.zachleat.com/web/11ty-lighthouse/#step-1%3A-add-the-urls","http://www.zachleat.com/web/zachleat-is-dead/_#tools":"http://www.zachleat.com/web/zachleat-is-dead/#tools","http://www.zachleat.com/web/icymi/2014/_#thank-you!":"http://www.zachleat.com/web/icymi/2014/#thank-you!","http://www.zachleat.com/web/device-independence/_#output-device-independence":"http://www.zachleat.com/web/device-independence/#output-device-independence","http://www.zachleat.com/web/et-tu-x-ua-compatible/_#x-ua-compatible-breaks-navigator.useragent":"http://www.zachleat.com/web/et-tu-x-ua-compatible/#x-ua-compatible-breaks-navigator.useragent","http://www.zachleat.com/web/a-race-against-time-pickers/_#examples":"http://www.zachleat.com/web/a-race-against-time-pickers/#examples","http://www.zachleat.com/web/compatibility/_#css-in-email-clients":"http://www.zachleat.com/web/compatibility/#css-in-email-clients","http://www.zachleat.com/web/css-tricks-web-fonts/_#give-me-something-to-copy-and-paste":"http://www.zachleat.com/web/css-tricks-web-fonts/#give-me-something-to-copy-and-paste","http://www.zachleat.com/web/compatibility/_#mozilla-developer-network":"http://www.zachleat.com/web/compatibility/#mozilla-developer-network","http://www.zachleat.com/web/facepile/_#bonus%3A-details":"http://www.zachleat.com/web/facepile/#bonus%3A-details","http://www.zachleat.com/web/comprehensive-webfonts/_#fout-class":"http://www.zachleat.com/web/comprehensive-webfonts/#fout-class","http://www.zachleat.com/web/own-my-tweets/_#features":"http://www.zachleat.com/web/own-my-tweets/#features","http://www.zachleat.com/web/the-compromise/_#no%E2%80%A6-please%E2%80%94don%E2%80%99t-go%3F":"http://www.zachleat.com/web/the-compromise/#no%E2%80%A6-please%E2%80%94don%E2%80%99t-go%3F","http://www.zachleat.com/web/comprehensive-webfonts/_#criteria":"http://www.zachleat.com/web/comprehensive-webfonts/#criteria","http://www.zachleat.com/web/javascript-tdd/_#prime-factors-code-kata":"http://www.zachleat.com/web/javascript-tdd/#prime-factors-code-kata","http://www.zachleat.com/web/team-web/_#team-web-standards":"http://www.zachleat.com/web/team-web/#team-web-standards","http://www.zachleat.com/web/compatibility/_#features-coming-soon":"http://www.zachleat.com/web/compatibility/#features-coming-soon","http://www.zachleat.com/web/obnoxiously-readable/_#formulas":"http://www.zachleat.com/web/obnoxiously-readable/#formulas","http://www.zachleat.com/web/icymi/2013/_#fumbling-with-social-media-blog-post":"http://www.zachleat.com/web/icymi/2013/#fumbling-with-social-media-blog-post","http://www.zachleat.com/web/comprehensive-webfonts/_#verdict%3A-this-is-the-baseline-standard.-this-will-work-for-most-use-cases.":"http://www.zachleat.com/web/comprehensive-webfonts/#verdict%3A-this-is-the-baseline-standard.-this-will-work-for-most-use-cases.","http://www.zachleat.com/web/javascript-frameworks/_#miniscule-apps":"http://www.zachleat.com/web/javascript-frameworks/#miniscule-apps","http://www.zachleat.com/web/icymi/2014/_#smashingconf-talk":"http://www.zachleat.com/web/icymi/2014/#smashingconf-talk","http://www.zachleat.com/web/zachleat-is-dead/_#theme":"http://www.zachleat.com/web/zachleat-is-dead/#theme","http://www.zachleat.com/web/webfont-glossary/_#system-fonts":"http://www.zachleat.com/web/webfont-glossary/#system-fonts","http://www.zachleat.com/web/the-compromise/_#fonts-for-auction":"http://www.zachleat.com/web/the-compromise/#fonts-for-auction","http://www.zachleat.com/web/rename-font/_#-apple-system":"http://www.zachleat.com/web/rename-font/#-apple-system","http://www.zachleat.com/web/selecting-xml-with-javascript/_#%2Fend-primer":"http://www.zachleat.com/web/selecting-xml-with-javascript/#%2Fend-primer","http://www.zachleat.com/web/glyphhanger/_#make-the-files-usable-site-wide":"http://www.zachleat.com/web/glyphhanger/#make-the-files-usable-site-wide","http://www.zachleat.com/web/placeholder/_#bathwater%2C-no-babies":"http://www.zachleat.com/web/placeholder/#bathwater%2C-no-babies","http://www.zachleat.com/web/critical-webfonts/_#ideas-for-improvement":"http://www.zachleat.com/web/critical-webfonts/#ideas-for-improvement","http://www.zachleat.com/web/bike-lights/_#supplies%3A":"http://www.zachleat.com/web/bike-lights/#supplies%3A","http://www.zachleat.com/web/enlarging-your-yui-datatable-in-29-seconds-or-less/_#how-to":"http://www.zachleat.com/web/enlarging-your-yui-datatable-in-29-seconds-or-less/#how-to","http://www.zachleat.com/web/glyphhanger/_#pass-in-a-whitelist":"http://www.zachleat.com/web/glyphhanger/#pass-in-a-whitelist","http://www.zachleat.com/web/icymi/2016/_#talks":"http://www.zachleat.com/web/icymi/2016/#talks","http://www.zachleat.com/web/tool-or-die/_#watch-on-youtube":"http://www.zachleat.com/web/tool-or-die/#watch-on-youtube","http://www.zachleat.com/web/comprehensive-webfonts/_#verdict%3A-definitely-add-it-to-your-%40font-face-blocks%2C-but-by-itself-it%E2%80%99s-not-sufficient.":"http://www.zachleat.com/web/comprehensive-webfonts/#verdict%3A-definitely-add-it-to-your-%40font-face-blocks%2C-but-by-itself-it%E2%80%99s-not-sufficient.","http://www.zachleat.com/web/icymi/2017/_#dirty-laundry":"http://www.zachleat.com/web/icymi/2017/#dirty-laundry","http://www.zachleat.com/web/compatibility/_#browserscope":"http://www.zachleat.com/web/compatibility/#browserscope","http://www.zachleat.com/web/11ty-lighthouse/_#adding-scores-to-eleventy-docs":"http://www.zachleat.com/web/11ty-lighthouse/#adding-scores-to-eleventy-docs","http://www.zachleat.com/web/bike-lights/_#build-steps":"http://www.zachleat.com/web/bike-lights/#build-steps","http://www.zachleat.com/web/compatibility/_#css3-please":"http://www.zachleat.com/web/compatibility/#css3-please","http://www.zachleat.com/web/charset/_#for-external-javascript-files":"http://www.zachleat.com/web/charset/#for-external-javascript-files","http://www.zachleat.com/web/css-tricks-web-fonts/_#additional-optimizations-and-options":"http://www.zachleat.com/web/css-tricks-web-fonts/#additional-optimizations-and-options","http://www.zachleat.com/web/font-checklist/_#%F0%9F%9A%A6-start-important-font-downloads-earlier":"http://www.zachleat.com/web/font-checklist/#%F0%9F%9A%A6-start-important-font-downloads-earlier","http://www.zachleat.com/web/whitehouse/_#thank-you-notes":"http://www.zachleat.com/web/whitehouse/#thank-you-notes","http://www.zachleat.com/web/google-fonts-display/_#related":"http://www.zachleat.com/web/google-fonts-display/#related","http://www.zachleat.com/web/javascript-objects-are-not-json/_#valid-json":"http://www.zachleat.com/web/javascript-objects-are-not-json/#valid-json","http://www.zachleat.com/web/lazy-loading-webfonts/_#note-1":"http://www.zachleat.com/web/lazy-loading-webfonts/#note-1","http://www.zachleat.com/web/comprehensive-webfonts/_#verdict%3A-it%E2%80%99s-ok-but-we-can-do-better.":"http://www.zachleat.com/web/comprehensive-webfonts/#verdict%3A-it%E2%80%99s-ok-but-we-can-do-better.","http://www.zachleat.com/web/the-compromise/_#the-compromise":"http://www.zachleat.com/web/the-compromise/#the-compromise","http://www.zachleat.com/web/introducing-eleventy/_#eleventy-is-not-a-javascript-framework":"http://www.zachleat.com/web/introducing-eleventy/#eleventy-is-not-a-javascript-framework","http://www.zachleat.com/web/mitt-romney-webfont-problem/_#what-should-mitt-romney-do%3F":"http://www.zachleat.com/web/mitt-romney-webfont-problem/#what-should-mitt-romney-do%3F","http://www.zachleat.com/web/css-tricks-web-fonts/_#the-merits-of-two-stage-font-loading":"http://www.zachleat.com/web/css-tricks-web-fonts/#the-merits-of-two-stage-font-loading","http://www.zachleat.com/web/whitehouse/_#related":"http://www.zachleat.com/web/whitehouse/#related","http://www.zachleat.com/web/comprehensive-webfonts/_#pros-2":"http://www.zachleat.com/web/comprehensive-webfonts/#pros-2","http://www.zachleat.com/web/tablesaw/_#available-on-github":"http://www.zachleat.com/web/tablesaw/#available-on-github","http://www.zachleat.com/web/webp/_#more-optimization-possibilities":"http://www.zachleat.com/web/webp/#more-optimization-possibilities","http://www.zachleat.com/web/the-perfect-gif/_#sources":"http://www.zachleat.com/web/the-perfect-gif/#sources","http://www.zachleat.com/web/glyphhanger/_#subsetting":"http://www.zachleat.com/web/glyphhanger/#subsetting","http://www.zachleat.com/web/velocity/2015/_#topics-and-related-links":"http://www.zachleat.com/web/velocity/2015/#topics-and-related-links","http://www.zachleat.com/web/snarky/_#before%3A":"http://www.zachleat.com/web/snarky/#before%3A","http://www.zachleat.com/web/comprehensive-webfonts/_#pros-10":"http://www.zachleat.com/web/comprehensive-webfonts/#pros-10","http://www.zachleat.com/web/comprehensive-webfonts/_#pros-11":"http://www.zachleat.com/web/comprehensive-webfonts/#pros-11","http://www.zachleat.com/web/manifesto/_#talk-description":"http://www.zachleat.com/web/manifesto/#talk-description","http://www.zachleat.com/web/rwd-perf/_#video":"http://www.zachleat.com/web/rwd-perf/#video","http://www.zachleat.com/web/mitt-romney-webfont-problem/_#what-can-web-developers-do%3F":"http://www.zachleat.com/web/mitt-romney-webfont-problem/#what-can-web-developers-do%3F","http://www.zachleat.com/web/space-jam/_#related":"http://www.zachleat.com/web/space-jam/#related","http://www.zachleat.com/web/icymi/2015/_#talks":"http://www.zachleat.com/web/icymi/2015/#talks","http://www.zachleat.com/web/rename-font/_#further-explorations":"http://www.zachleat.com/web/rename-font/#further-explorations","http://www.zachleat.com/web/tool-or-die/_#fork-the-slides-on-github":"http://www.zachleat.com/web/tool-or-die/#fork-the-slides-on-github","http://www.zachleat.com/web/11ty-lighthouse/_#step-3%3A-render-the-data":"http://www.zachleat.com/web/11ty-lighthouse/#step-3%3A-render-the-data","http://www.zachleat.com/web/preload/_#use-with-a-font-loading-strategy":"http://www.zachleat.com/web/preload/#use-with-a-font-loading-strategy","http://www.zachleat.com/web/selecting-xml-with-javascript/_#use-cases":"http://www.zachleat.com/web/selecting-xml-with-javascript/#use-cases","http://www.zachleat.com/web/javascript-objects-are-not-json/_#invalid-json":"http://www.zachleat.com/web/javascript-objects-are-not-json/#invalid-json","http://www.zachleat.com/web/charset/_#for-dynamically-created-script-tags":"http://www.zachleat.com/web/charset/#for-dynamically-created-script-tags","http://www.zachleat.com/web/tips-for-programming-javascript-functions/_#required-and-optional-arguments":"http://www.zachleat.com/web/tips-for-programming-javascript-functions/#required-and-optional-arguments","http://www.zachleat.com/web/comprehensive-webfonts/_#don%E2%80%99t-use-web-fonts":"http://www.zachleat.com/web/comprehensive-webfonts/#don%E2%80%99t-use-web-fonts","http://www.zachleat.com/web/css3-text-writing-mode/_#writing-mode%3A-rl-tb":"http://www.zachleat.com/web/css3-text-writing-mode/#writing-mode%3A-rl-tb","http://www.zachleat.com/web/icymi/2013/_#tool-or-die-video":"http://www.zachleat.com/web/icymi/2013/#tool-or-die-video","http://www.zachleat.com/web/using-dom-query-libraries-in-yui/_#download%3A-y2.util.dom-(2-kb)":"http://www.zachleat.com/web/using-dom-query-libraries-in-yui/#download%3A-y2.util.dom-(2-kb)","http://www.zachleat.com/web/comprehensive-webfonts/_#cons":"http://www.zachleat.com/web/comprehensive-webfonts/#cons","http://www.zachleat.com/web/web-font-data-uris/_#appendix-1":"http://www.zachleat.com/web/web-font-data-uris/#appendix-1","http://www.zachleat.com/web/comprehensive-webfonts/_#font-display":"http://www.zachleat.com/web/comprehensive-webfonts/#font-display","http://www.zachleat.com/web/comprehensive-webfonts/_#fout-with-a-class":"http://www.zachleat.com/web/comprehensive-webfonts/#fout-with-a-class","http://www.zachleat.com/web/icymi/2017/_#the-big-font-hosting-web-site":"http://www.zachleat.com/web/icymi/2017/#the-big-font-hosting-web-site","http://www.zachleat.com/web/comprehensive-webfonts/_#pros-3":"http://www.zachleat.com/web/comprehensive-webfonts/#pros-3","http://www.zachleat.com/web/using-dom-query-libraries-in-yui/_#putting-it-all-together":"http://www.zachleat.com/web/using-dom-query-libraries-in-yui/#putting-it-all-together","http://www.zachleat.com/web/comprehensive-webfonts/_#pros-4":"http://www.zachleat.com/web/comprehensive-webfonts/#pros-4","http://www.zachleat.com/web/comprehensive-webfonts/_#pros-5":"http://www.zachleat.com/web/comprehensive-webfonts/#pros-5","http://www.zachleat.com/web/comprehensive-webfonts/_#pros-6":"http://www.zachleat.com/web/comprehensive-webfonts/#pros-6","http://www.zachleat.com/web/obnoxiously-readable/_#example":"http://www.zachleat.com/web/obnoxiously-readable/#example","http://www.zachleat.com/web/webfont-glossary/_#descriptor":"http://www.zachleat.com/web/webfont-glossary/#descriptor","http://www.zachleat.com/web/comprehensive-webfonts/_#pros-7":"http://www.zachleat.com/web/comprehensive-webfonts/#pros-7","http://www.zachleat.com/web/comprehensive-webfonts/_#pros-8":"http://www.zachleat.com/web/comprehensive-webfonts/#pros-8","http://www.zachleat.com/web/bulk-og/_#code":"http://www.zachleat.com/web/bulk-og/#code","http://www.zachleat.com/web/comprehensive-webfonts/_#pros-9":"http://www.zachleat.com/web/comprehensive-webfonts/#pros-9","http://www.zachleat.com/web/icymi/2013/_#fixed-sticky-project":"http://www.zachleat.com/web/icymi/2013/#fixed-sticky-project","http://www.zachleat.com/web/css-sprites-using-font-face/_#why-is-this-not-awesome%3F":"http://www.zachleat.com/web/css-sprites-using-font-face/#why-is-this-not-awesome%3F","http://www.zachleat.com/web/font-checklist/_#%F0%9F%8F%81-reduce-movement-during-page-load":"http://www.zachleat.com/web/font-checklist/#%F0%9F%8F%81-reduce-movement-during-page-load","http://www.zachleat.com/web/load-css-dynamically/_#solution":"http://www.zachleat.com/web/load-css-dynamically/#solution","http://www.zachleat.com/web/comprehensive-webfonts/_#quick-guide":"http://www.zachleat.com/web/comprehensive-webfonts/#quick-guide","http://www.zachleat.com/web/css3-text-writing-mode/_#related":"http://www.zachleat.com/web/css3-text-writing-mode/#related","http://www.zachleat.com/web/lighthouse-in-footer/_#adding-this-to-your-eleventy-site!":"http://www.zachleat.com/web/lighthouse-in-footer/#adding-this-to-your-eleventy-site!","http://www.zachleat.com/web/scare-your-visitors-with-this-javascript-gravatar-plugin/_#see-the-demo":"http://www.zachleat.com/web/scare-your-visitors-with-this-javascript-gravatar-plugin/#see-the-demo","http://www.zachleat.com/web/charset/_#performance":"http://www.zachleat.com/web/charset/#performance","http://www.zachleat.com/web/obnoxiously-readable/_#twin-props":"http://www.zachleat.com/web/obnoxiously-readable/#twin-props","http://www.zachleat.com/web/smashingconf/2015/_#video":"http://www.zachleat.com/web/smashingconf/2015/#video","http://www.zachleat.com/web/if-the-menu-fitts-we-must-acquit/_#compatibility-table":"http://www.zachleat.com/web/if-the-menu-fitts-we-must-acquit/#compatibility-table","http://www.zachleat.com/web/webfont-glossary/_#subsetting":"http://www.zachleat.com/web/webfont-glossary/#subsetting","http://www.zachleat.com/web/moving-target/_#the-old-location.replace-method":"http://www.zachleat.com/web/moving-target/#the-old-location.replace-method","http://www.zachleat.com/web/array-sort/_#by-ref":"http://www.zachleat.com/web/array-sort/#by-ref","http://www.zachleat.com/web/icymi/2017/_#projects-and-blog-posts":"http://www.zachleat.com/web/icymi/2017/#projects-and-blog-posts","http://www.zachleat.com/web/eleventy-birthday/_#don%E2%80%99t-push-yourself":"http://www.zachleat.com/web/eleventy-birthday/#don%E2%80%99t-push-yourself","http://www.zachleat.com/web/own-your-content/_#video":"http://www.zachleat.com/web/own-your-content/#video","http://www.zachleat.com/web/css3-text-writing-mode/_#css-code-for-emulation":"http://www.zachleat.com/web/css3-text-writing-mode/#css-code-for-emulation","http://www.zachleat.com/web/css-tricks-web-fonts/_#conclusion":"http://www.zachleat.com/web/css-tricks-web-fonts/#conclusion","http://www.zachleat.com/web/icymi/2014/_#barcamp-omaha-talk":"http://www.zachleat.com/web/icymi/2014/#barcamp-omaha-talk","http://www.zachleat.com/web/placeholder/_#placeholder-testing":"http://www.zachleat.com/web/placeholder/#placeholder-testing","http://www.zachleat.com/web/compatibility/_#%3Clink-rel%3D%22stylesheet%22-media%3E-css-download":"http://www.zachleat.com/web/compatibility/#%3Clink-rel%3D%22stylesheet%22-media%3E-css-download","http://www.zachleat.com/web/own-your-content/_#slides":"http://www.zachleat.com/web/own-your-content/#slides","http://www.zachleat.com/web/javascript-frameworks/_#prior-art":"http://www.zachleat.com/web/javascript-frameworks/#prior-art","http://www.zachleat.com/web/eleventy-contributors/_#want-this-for-your-open-source-project%3F":"http://www.zachleat.com/web/eleventy-contributors/#want-this-for-your-open-source-project%3F","http://www.zachleat.com/web/team-web/_#team-static-web":"http://www.zachleat.com/web/team-web/#team-static-web","http://www.zachleat.com/web/bike-lights/_#multicolor":"http://www.zachleat.com/web/bike-lights/#multicolor","http://www.zachleat.com/web/scare-your-visitors-with-this-javascript-gravatar-plugin/_#download-the-source-code-2":"http://www.zachleat.com/web/scare-your-visitors-with-this-javascript-gravatar-plugin/#download-the-source-code-2","http://www.zachleat.com/web/css-tricks-web-fonts/_#how-does-this-load%3F":"http://www.zachleat.com/web/css-tricks-web-fonts/#how-does-this-load%3F","http://www.zachleat.com/web/rwd-perf/_#reactions%2C-reviews":"http://www.zachleat.com/web/rwd-perf/#reactions%2C-reviews","http://www.zachleat.com/web/lazy-loading-webfonts/_#addendum":"http://www.zachleat.com/web/lazy-loading-webfonts/#addendum","http://www.zachleat.com/web/eleventy-birthday/_#a-few-tips-for-open-source-project-management":"http://www.zachleat.com/web/eleventy-birthday/#a-few-tips-for-open-source-project-management","http://www.zachleat.com/web/moving-target/_#demos":"http://www.zachleat.com/web/moving-target/#demos","http://www.zachleat.com/web/president-web-font/_#candidate-web-font-score%3A-1":"http://www.zachleat.com/web/president-web-font/#candidate-web-font-score%3A-1","http://www.zachleat.com/web/president-web-font/_#ted-cruz":"http://www.zachleat.com/web/president-web-font/#ted-cruz","http://www.zachleat.com/web/dont-stop-learning/_#my-own-experience":"http://www.zachleat.com/web/dont-stop-learning/#my-own-experience","http://www.zachleat.com/web/preload/_#conclusion":"http://www.zachleat.com/web/preload/#conclusion","http://www.zachleat.com/web/charset/_#in-the-javascript-file":"http://www.zachleat.com/web/charset/#in-the-javascript-file","http://www.zachleat.com/web/facepile/_#enter-intersectionobserver":"http://www.zachleat.com/web/facepile/#enter-intersectionobserver","http://www.zachleat.com/web/introducing-eleventy/_#finds-files-in-src-directory-and-outputs-to-a-_gh_pages-folder":"http://www.zachleat.com/web/introducing-eleventy/#finds-files-in-src-directory-and-outputs-to-a-_gh_pages-folder","http://www.zachleat.com/web/bulk-og/_#sample-input":"http://www.zachleat.com/web/bulk-og/#sample-input","http://www.zachleat.com/web/jsconf/2013/_#interactive-journalism":"http://www.zachleat.com/web/jsconf/2013/#interactive-journalism","http://www.zachleat.com/web/own-my-tweets/_#the-backlog-%F0%9F%98%85":"http://www.zachleat.com/web/own-my-tweets/#the-backlog-%F0%9F%98%85","http://www.zachleat.com/web/css-sprites-using-font-face/_#why-is-this-awesome%3F":"http://www.zachleat.com/web/css-sprites-using-font-face/#why-is-this-awesome%3F","http://www.zachleat.com/web/comprehensive-webfonts/_#pros":"http://www.zachleat.com/web/comprehensive-webfonts/#pros","http://www.zachleat.com/web/selecting-xml-with-javascript/_#springer%E2%80%99s-final-word":"http://www.zachleat.com/web/selecting-xml-with-javascript/#springer%E2%80%99s-final-word","http://www.zachleat.com/web/bike-lights/_#caseless":"http://www.zachleat.com/web/bike-lights/#caseless","http://www.zachleat.com/web/lazy-loading-webfonts/_#link-note-1":"http://www.zachleat.com/web/lazy-loading-webfonts/#link-note-1","http://www.zachleat.com/web/comprehensive-webfonts/_#async-data-uri":"http://www.zachleat.com/web/comprehensive-webfonts/#async-data-uri","http://www.zachleat.com/web/the-compromise/_#addendum":"http://www.zachleat.com/web/the-compromise/#addendum","http://www.zachleat.com/web/glyphhanger/_#output-css-that-you-can-use":"http://www.zachleat.com/web/glyphhanger/#output-css-that-you-can-use","http://www.zachleat.com/web/infinity-burger/_#related-reading%3A":"http://www.zachleat.com/web/infinity-burger/#related-reading%3A","http://www.zachleat.com/web/five-whys/_#video":"http://www.zachleat.com/web/five-whys/#video","http://www.zachleat.com/web/google-fonts-display/_#timeline":"http://www.zachleat.com/web/google-fonts-display/#timeline","http://www.zachleat.com/web/facepile/_#what-should-i-do%3F":"http://www.zachleat.com/web/facepile/#what-should-i-do%3F","http://www.zachleat.com/web/comprehensive-webfonts/_#foft":"http://www.zachleat.com/web/comprehensive-webfonts/#foft","http://www.zachleat.com/web/that-could-possibly-work/_#2017":"http://www.zachleat.com/web/that-could-possibly-work/#2017","http://www.zachleat.com/web/that-could-possibly-work/_#2016":"http://www.zachleat.com/web/that-could-possibly-work/#2016","http://www.zachleat.com/web/rename-font/_#valid-local()%E2%80%99s":"http://www.zachleat.com/web/rename-font/#valid-local()%E2%80%99s","http://www.zachleat.com/web/that-could-possibly-work/_#2015":"http://www.zachleat.com/web/that-could-possibly-work/#2015","http://www.zachleat.com/web/scare-your-visitors-with-this-javascript-gravatar-plugin/_#see-the-demo-2":"http://www.zachleat.com/web/scare-your-visitors-with-this-javascript-gravatar-plugin/#see-the-demo-2","http://www.zachleat.com/web/infinity-burger/_#get-it":"http://www.zachleat.com/web/infinity-burger/#get-it","http://www.zachleat.com/web/css-tricks-web-fonts/_#post-launch-update":"http://www.zachleat.com/web/css-tricks-web-fonts/#post-launch-update","http://www.zachleat.com/web/resume-on-the-jamstack/_#fed-by-blog-data":"http://www.zachleat.com/web/resume-on-the-jamstack/#fed-by-blog-data","http://www.zachleat.com/web/fumbling-with-social-media/_#silos-are-lonely":"http://www.zachleat.com/web/fumbling-with-social-media/#silos-are-lonely","http://www.zachleat.com/web/icymi/2017/_#thank-you-notes":"http://www.zachleat.com/web/icymi/2017/#thank-you-notes","http://www.zachleat.com/web/icymi/2013/_#nebraskajs":"http://www.zachleat.com/web/icymi/2013/#nebraskajs","http://www.zachleat.com/web/icymi/2014/_#the-pastry-box-blog-post":"http://www.zachleat.com/web/icymi/2014/#the-pastry-box-blog-post","http://www.zachleat.com/web/critical-webfonts/_#filmstrip-comparisons":"http://www.zachleat.com/web/critical-webfonts/#filmstrip-comparisons","http://www.zachleat.com/web/own-my-tweets/_#analytics":"http://www.zachleat.com/web/own-my-tweets/#analytics","http://www.zachleat.com/web/icymi/2015/_#smashing-book-%235":"http://www.zachleat.com/web/icymi/2015/#smashing-book-%235","http://www.zachleat.com/web/resume-on-the-jamstack/_#update-your-r%C3%A9sum%C3%A9-for-the-last-time-(not-really)":"http://www.zachleat.com/web/resume-on-the-jamstack/#update-your-r%C3%A9sum%C3%A9-for-the-last-time-(not-really)","http://www.zachleat.com/web/tablesaw/_#install-using-bower":"http://www.zachleat.com/web/tablesaw/#install-using-bower","http://www.zachleat.com/web/comprehensive-webfonts/_#verdict%3A-do-not-use.":"http://www.zachleat.com/web/comprehensive-webfonts/#verdict%3A-do-not-use.","http://www.zachleat.com/web/et-tu-x-ua-compatible/_#compatibility-view-button-flow":"http://www.zachleat.com/web/et-tu-x-ua-compatible/#compatibility-view-button-flow","http://www.zachleat.com/web/css3-text-writing-mode/_#writing-mode%3A-lr-tb":"http://www.zachleat.com/web/css3-text-writing-mode/#writing-mode%3A-lr-tb","http://www.zachleat.com/web/css-tricks-web-fonts/_#rubik-deep-dive":"http://www.zachleat.com/web/css-tricks-web-fonts/#rubik-deep-dive","http://www.zachleat.com/web/charset/_#portable-non-ascii-javascript":"http://www.zachleat.com/web/charset/#portable-non-ascii-javascript","http://www.zachleat.com/web/icymi/2016/_#thank-you-notes":"http://www.zachleat.com/web/icymi/2016/#thank-you-notes","http://www.zachleat.com/web/president-web-font/_#donald-trump":"http://www.zachleat.com/web/president-web-font/#donald-trump","http://www.zachleat.com/web/icymi/2015/_#blog-posts":"http://www.zachleat.com/web/icymi/2015/#blog-posts","http://www.zachleat.com/web/load-css-dynamically/_#see-this-demo-in-action-(firefox-only)":"http://www.zachleat.com/web/load-css-dynamically/#see-this-demo-in-action-(firefox-only)","http://www.zachleat.com/web/rename-font/_#blinkmacsystemfont":"http://www.zachleat.com/web/rename-font/#blinkmacsystemfont","http://www.zachleat.com/web/comprehensive-webfonts/_#jump-to%3A":"http://www.zachleat.com/web/comprehensive-webfonts/#jump-to%3A","http://www.zachleat.com/web/w3c-status-banners/_#file-sizes":"http://www.zachleat.com/web/w3c-status-banners/#file-sizes","http://www.zachleat.com/web/whitehouse/_#related-links":"http://www.zachleat.com/web/whitehouse/#related-links","http://www.zachleat.com/web/tablesaw/_#install-using-npm":"http://www.zachleat.com/web/tablesaw/#install-using-npm","http://www.zachleat.com/web/five-whys/_#coverage":"http://www.zachleat.com/web/five-whys/#coverage","http://www.zachleat.com/web/smashingconf/2015/_#slides-on-speaker-deck-(144-slides)":"http://www.zachleat.com/web/smashingconf/2015/#slides-on-speaker-deck-(144-slides)","http://www.zachleat.com/web/web-font-data-uris/_#appendix-1%2C-data-uri-and-fallback-src":"http://www.zachleat.com/web/web-font-data-uris/#appendix-1%2C-data-uri-and-fallback-src","http://www.zachleat.com/web/obnoxiously-readable/_#bikeshedding-a-new-unit":"http://www.zachleat.com/web/obnoxiously-readable/#bikeshedding-a-new-unit","http://www.zachleat.com/web/icymi/2014/_#top-five-jokes-(by-retweets)":"http://www.zachleat.com/web/icymi/2014/#top-five-jokes-(by-retweets)","http://www.zachleat.com/web/introducing-eleventy/_#flexibility":"http://www.zachleat.com/web/introducing-eleventy/#flexibility","http://www.zachleat.com/web/icymi/2014/_#politespace":"http://www.zachleat.com/web/icymi/2014/#politespace","http://www.zachleat.com/web/burnout/_#being-a-parent":"http://www.zachleat.com/web/burnout/#being-a-parent","http://www.zachleat.com/web/glyphhanger/_#a-web-font-utility-belt":"http://www.zachleat.com/web/glyphhanger/#a-web-font-utility-belt","http://www.zachleat.com/web/fumbling-with-social-media/_#give-talks-and-encouragement":"http://www.zachleat.com/web/fumbling-with-social-media/#give-talks-and-encouragement","http://www.zachleat.com/web/obnoxiously-readable/_#transition-from-viewport-units-to-fixed-maximum-font-size":"http://www.zachleat.com/web/obnoxiously-readable/#transition-from-viewport-units-to-fixed-maximum-font-size","http://www.zachleat.com/web/that-could-possibly-work/_#the-simplest-tooling-that-can-possibly-work-well":"http://www.zachleat.com/web/that-could-possibly-work/#the-simplest-tooling-that-can-possibly-work-well","http://www.zachleat.com/web/a-mobile-web-divided/_#dhtmlx-touch-v.1.0-rc":"http://www.zachleat.com/web/a-mobile-web-divided/#dhtmlx-touch-v.1.0-rc","http://www.zachleat.com/web/fumbling-with-social-media/_#align-career-with-community":"http://www.zachleat.com/web/fumbling-with-social-media/#align-career-with-community","http://www.zachleat.com/web/comprehensive-webfonts/_#critical-foft":"http://www.zachleat.com/web/comprehensive-webfonts/#critical-foft","http://www.zachleat.com/web/critical-webfonts/_#scoped-class-for-fout":"http://www.zachleat.com/web/critical-webfonts/#scoped-class-for-fout","http://www.zachleat.com/web/mitt-romney-webfont-problem/_#what-should-web-browsers-do%3F":"http://www.zachleat.com/web/mitt-romney-webfont-problem/#what-should-web-browsers-do%3F","http://www.zachleat.com/web/introducing-eleventy/_#directory-structure-flexibility":"http://www.zachleat.com/web/introducing-eleventy/#directory-structure-flexibility","http://www.zachleat.com/web/smashingconf/2014/_#storify-scrapbook":"http://www.zachleat.com/web/smashingconf/2014/#storify-scrapbook","http://www.zachleat.com/web/retire-bulletproof-syntax/_#addendum%3A-okay%2C-but-what-about-icon-fonts%3F":"http://www.zachleat.com/web/retire-bulletproof-syntax/#addendum%3A-okay%2C-but-what-about-icon-fonts%3F","http://www.zachleat.com/web/comprehensive-webfonts/_#critical-foft-preload":"http://www.zachleat.com/web/comprehensive-webfonts/#critical-foft-preload","http://www.zachleat.com/web/javascript-tdd/_#testing-environment-setup-in-3-steps":"http://www.zachleat.com/web/javascript-tdd/#testing-environment-setup-in-3-steps","http://www.zachleat.com/web/eleventy-birthday/_#issues-are-a-gift":"http://www.zachleat.com/web/eleventy-birthday/#issues-are-a-gift","http://www.zachleat.com/web/moving-target/_#related":"http://www.zachleat.com/web/moving-target/#related","http://www.zachleat.com/web/device-independence/_#the-power-of-the-open-web-is-device-independence.":"http://www.zachleat.com/web/device-independence/#the-power-of-the-open-web-is-device-independence.","http://www.zachleat.com/web/bike-lights/_#usage-notes":"http://www.zachleat.com/web/bike-lights/#usage-notes","http://www.zachleat.com/web/obnoxiously-readable/_#transition-from-fixed-minimum-font-size-to-viewport-units":"http://www.zachleat.com/web/obnoxiously-readable/#transition-from-fixed-minimum-font-size-to-viewport-units","http://www.zachleat.com/web/fout-vs-foit/_#context":"http://www.zachleat.com/web/fout-vs-foit/#context","http://www.zachleat.com/web/tablesaw/_#demos":"http://www.zachleat.com/web/tablesaw/#demos","http://www.zachleat.com/web/icymi/2016/_#blog-posts":"http://www.zachleat.com/web/icymi/2016/#blog-posts","http://www.zachleat.com/web/manifesto/_#f2em.com%2C-a-front-end-engineer%E2%80%99s-manifesto":"http://www.zachleat.com/web/manifesto/#f2em.com%2C-a-front-end-engineer%E2%80%99s-manifesto","http://www.zachleat.com/web/resume-on-the-jamstack/_#fed-by-social-media":"http://www.zachleat.com/web/resume-on-the-jamstack/#fed-by-social-media","http://www.zachleat.com/web/comprehensive-webfonts/_#verdict%3A-only-use-this-method-if-you-really-despise-fout%E2%80%94i-wouldn%E2%80%99t-recommend-it.":"http://www.zachleat.com/web/comprehensive-webfonts/#verdict%3A-only-use-this-method-if-you-really-despise-fout%E2%80%94i-wouldn%E2%80%99t-recommend-it.","http://www.zachleat.com/web/css3-text-writing-mode/_#writing-mode%3A-rl-bt":"http://www.zachleat.com/web/css3-text-writing-mode/#writing-mode%3A-rl-bt","http://www.zachleat.com/web/webfont-glossary/_#foft":"http://www.zachleat.com/web/webfont-glossary/#foft","http://www.zachleat.com/web/own-your-content/_#abstract":"http://www.zachleat.com/web/own-your-content/#abstract","http://www.zachleat.com/web/pragmatic/_#pieces-of-flair":"http://www.zachleat.com/web/pragmatic/#pieces-of-flair","http://www.zachleat.com/web/critical-webfonts/_#the-code":"http://www.zachleat.com/web/critical-webfonts/#the-code","http://www.zachleat.com/web/comprehensive-webfonts/_#critical-foft-data-uri":"http://www.zachleat.com/web/comprehensive-webfonts/#critical-foft-data-uri","http://www.zachleat.com/web/icymi/2015/_#thank-you-notes":"http://www.zachleat.com/web/icymi/2015/#thank-you-notes","http://www.zachleat.com/web/icymi/2015/_#personal":"http://www.zachleat.com/web/icymi/2015/#personal","http://www.zachleat.com/web/23-minutes/_#8%3A29-pm%2C-31-minutes-to-meeting":"http://www.zachleat.com/web/23-minutes/#8%3A29-pm%2C-31-minutes-to-meeting","http://www.zachleat.com/web/font-checklist/_#%F0%9F%90%A2%F0%9F%90%87-make-font-files-smaller":"http://www.zachleat.com/web/font-checklist/#%F0%9F%90%A2%F0%9F%90%87-make-font-files-smaller","http://www.zachleat.com/web/compatibility/_#javascript-compatibility-checker":"http://www.zachleat.com/web/compatibility/#javascript-compatibility-checker","http://www.zachleat.com/web/pragmatic/_#conclusion":"http://www.zachleat.com/web/pragmatic/#conclusion","http://www.zachleat.com/web/facepile/_#html":"http://www.zachleat.com/web/facepile/#html","http://www.zachleat.com/web/the-perfect-gif/_#utilities":"http://www.zachleat.com/web/the-perfect-gif/#utilities","http://www.zachleat.com/web/critical-webfonts/_#default":"http://www.zachleat.com/web/critical-webfonts/#default","http://www.zachleat.com/web/critical-webfonts/_#the-next-iteration%3A-critical-foft":"http://www.zachleat.com/web/critical-webfonts/#the-next-iteration%3A-critical-foft","http://www.zachleat.com/web/scare-your-visitors-with-this-javascript-gravatar-plugin/_#licensing":"http://www.zachleat.com/web/scare-your-visitors-with-this-javascript-gravatar-plugin/#licensing","http://www.zachleat.com/web/foft/_#the-code":"http://www.zachleat.com/web/foft/#the-code","http://www.zachleat.com/web/23-minutes/_#9%3A01-pm%2C--1-minute-to-meeting":"http://www.zachleat.com/web/23-minutes/#9%3A01-pm%2C--1-minute-to-meeting","http://www.zachleat.com/web/jsconf/2013/_#the-evolution-of-language":"http://www.zachleat.com/web/jsconf/2013/#the-evolution-of-language","http://www.zachleat.com/web/double-whammy-openid-and-microformats/_#integrate-with-openid":"http://www.zachleat.com/web/double-whammy-openid-and-microformats/#integrate-with-openid","http://www.zachleat.com/web/introducing-eleventy/_#finds-files-in-current-directory-and-outputs-to-current-directory":"http://www.zachleat.com/web/introducing-eleventy/#finds-files-in-current-directory-and-outputs-to-current-directory","http://www.zachleat.com/web/jsconf/2013/_#the-ui-of-privacy-and-webrtc":"http://www.zachleat.com/web/jsconf/2013/#the-ui-of-privacy-and-webrtc","http://www.zachleat.com/web/mitt-romney-webfont-problem/_#appendix-1%3A-keeping-foit%2C-grouping-repaints":"http://www.zachleat.com/web/mitt-romney-webfont-problem/#appendix-1%3A-keeping-foit%2C-grouping-repaints","http://www.zachleat.com/web/introducing-eleventy/_#i-only-want-to-transform-one-file":"http://www.zachleat.com/web/introducing-eleventy/#i-only-want-to-transform-one-file","http://www.zachleat.com/web/compatibility/_#browser-hacks":"http://www.zachleat.com/web/compatibility/#browser-hacks","http://www.zachleat.com/web/jsconf/2013/_#software-is-literacy":"http://www.zachleat.com/web/jsconf/2013/#software-is-literacy","http://www.zachleat.com/web/foft/_#prioritize-your-fonts":"http://www.zachleat.com/web/foft/#prioritize-your-fonts","http://www.zachleat.com/web/font-family-reunion/_#go-to-your-font-family-reunion.":"http://www.zachleat.com/web/font-family-reunion/#go-to-your-font-family-reunion.","http://www.zachleat.com/web/javascript-frameworks/_#competition-and-choice":"http://www.zachleat.com/web/javascript-frameworks/#competition-and-choice","http://www.zachleat.com/web/domcontentloaded-inconsistencies/_#what-works":"http://www.zachleat.com/web/domcontentloaded-inconsistencies/#what-works","http://www.zachleat.com/web/compatibility/_#screen-reader-support-for-hidden-content":"http://www.zachleat.com/web/compatibility/#screen-reader-support-for-hidden-content","http://www.zachleat.com/web/webfont-glossary/_#foit":"http://www.zachleat.com/web/webfont-glossary/#foit","http://www.zachleat.com/web/23-minutes/_#performance":"http://www.zachleat.com/web/23-minutes/#performance","http://www.zachleat.com/web/passing-the-nebraskajs-baton/_#%E2%9D%A4%EF%B8%8F-nebraskajs":"http://www.zachleat.com/web/passing-the-nebraskajs-baton/#%E2%9D%A4%EF%B8%8F-nebraskajs","http://www.zachleat.com/web/featherweight-facepile/_#enter-avatar-local-cache":"http://www.zachleat.com/web/featherweight-facepile/#enter-avatar-local-cache","http://www.zachleat.com/web/randsom/_#with-thanks-to":"http://www.zachleat.com/web/randsom/#with-thanks-to","http://www.zachleat.com/web/compatibility/_#font-family-reunion":"http://www.zachleat.com/web/compatibility/#font-family-reunion","http://www.zachleat.com/web/nejsconf/final/_#slides":"http://www.zachleat.com/web/nejsconf/final/#slides","http://www.zachleat.com/web/making-fontfamilyio/_#slides":"http://www.zachleat.com/web/making-fontfamilyio/#slides","http://www.zachleat.com/web/comprehensive-webfonts/_#font-face":"http://www.zachleat.com/web/comprehensive-webfonts/#font-face","http://www.zachleat.com/web/comprehensive-webfonts/_#cons-11":"http://www.zachleat.com/web/comprehensive-webfonts/#cons-11","http://www.zachleat.com/web/featherweight-facepile/_#rollout":"http://www.zachleat.com/web/featherweight-facepile/#rollout","http://www.zachleat.com/web/comprehensive-webfonts/_#preload":"http://www.zachleat.com/web/comprehensive-webfonts/#preload","http://www.zachleat.com/web/icymi/2013/_#busyness-project":"http://www.zachleat.com/web/icymi/2013/#busyness-project","http://www.zachleat.com/web/icymi/2015/_#nejs-conf":"http://www.zachleat.com/web/icymi/2015/#nejs-conf","http://www.zachleat.com/web/foft/_#font-variants":"http://www.zachleat.com/web/foft/#font-variants","http://www.zachleat.com/web/eleventy-birthday/_#close-all-feature-requests":"http://www.zachleat.com/web/eleventy-birthday/#close-all-feature-requests","http://www.zachleat.com/web/smashingconf/2014/_#video":"http://www.zachleat.com/web/smashingconf/2014/#video","http://www.zachleat.com/web/smashingconf/2014/_#links-(in-order-of-slide-appearance)":"http://www.zachleat.com/web/smashingconf/2014/#links-(in-order-of-slide-appearance)","http://www.zachleat.com/web/comprehensive-webfonts/_#cons-10":"http://www.zachleat.com/web/comprehensive-webfonts/#cons-10","http://www.zachleat.com/web/1mdevs/_#1-million-developers":"http://www.zachleat.com/web/1mdevs/#1-million-developers","http://www.zachleat.com/web/infinity-burger/_#demo":"http://www.zachleat.com/web/infinity-burger/#demo","http://www.zachleat.com/web/netlify/_#note-1":"http://www.zachleat.com/web/netlify/#note-1","http://www.zachleat.com/web/bigtext-makes-text-big/_#implementation-details":"http://www.zachleat.com/web/bigtext-makes-text-big/#implementation-details","http://www.zachleat.com/web/that-could-possibly-work/_#the-simplest-style-guide-that-can-possibly-work-well":"http://www.zachleat.com/web/that-could-possibly-work/#the-simplest-style-guide-that-can-possibly-work-well","http://www.zachleat.com/web/netlify/_#link-note-1":"http://www.zachleat.com/web/netlify/#link-note-1","http://www.zachleat.com/web/icymi/2013/_#a-tweet-highlight":"http://www.zachleat.com/web/icymi/2013/#a-tweet-highlight","http://www.zachleat.com/web/icymi/2013/_#mini-projects":"http://www.zachleat.com/web/icymi/2013/#mini-projects","http://www.zachleat.com/web/selecting-xml-with-javascript/_#super-fast-beginner%E2%80%99s-primer":"http://www.zachleat.com/web/selecting-xml-with-javascript/#super-fast-beginner%E2%80%99s-primer","http://www.zachleat.com/web/rename-font/_#sources":"http://www.zachleat.com/web/rename-font/#sources","http://www.zachleat.com/web/23-minutes/_#after":"http://www.zachleat.com/web/23-minutes/#after","http://www.zachleat.com/web/team-web/_#team-web-type":"http://www.zachleat.com/web/team-web/#team-web-type","http://www.zachleat.com/web/comprehensive-webfonts/_#inline-data-uri":"http://www.zachleat.com/web/comprehensive-webfonts/#inline-data-uri","http://www.zachleat.com/web/webfont-glossary/_#acronyms":"http://www.zachleat.com/web/webfont-glossary/#acronyms","http://www.zachleat.com/web/font-checklist/_#the-font-loading-checklist":"http://www.zachleat.com/web/font-checklist/#the-font-loading-checklist","http://www.zachleat.com/web/dont-stop-learning/_#good-investments":"http://www.zachleat.com/web/dont-stop-learning/#good-investments","http://www.zachleat.com/web/comprehensive-webfonts/_#verdict%3A-this-is-the-current-gold-standard%2C-in-my-opinion.":"http://www.zachleat.com/web/comprehensive-webfonts/#verdict%3A-this-is-the-current-gold-standard%2C-in-my-opinion.","http://www.zachleat.com/web/jsconf/2013/_#a-more-natural-user-interface":"http://www.zachleat.com/web/jsconf/2013/#a-more-natural-user-interface","http://www.zachleat.com/web/css-tricks-web-fonts/_#wakamai-fondue":"http://www.zachleat.com/web/css-tricks-web-fonts/#wakamai-fondue","http://www.zachleat.com/web/rwd-perf-3/_#previous-incarnations-of-this-presentation%3A":"http://www.zachleat.com/web/rwd-perf-3/#previous-incarnations-of-this-presentation%3A","http://www.zachleat.com/web/11ty-lighthouse/_#step-2%3A-fetch-the-data":"http://www.zachleat.com/web/11ty-lighthouse/#step-2%3A-fetch-the-data","http://www.zachleat.com/web/eleventy-contributors/_#go-forth":"http://www.zachleat.com/web/eleventy-contributors/#go-forth","http://www.zachleat.com/web/bike-lights/_#lower-voltage-led-strips":"http://www.zachleat.com/web/bike-lights/#lower-voltage-led-strips","http://www.zachleat.com/web/font-smooth/_#updates":"http://www.zachleat.com/web/font-smooth/#updates","http://www.zachleat.com/web/burnout/_#having-a-job-that-respects-work-life-balance":"http://www.zachleat.com/web/burnout/#having-a-job-that-respects-work-life-balance","http://www.zachleat.com/web/preload/_#best-practice%3F":"http://www.zachleat.com/web/preload/#best-practice%3F","http://www.zachleat.com/web/performance-caveat-with-jquery-selectors-and-live-events/_#usage":"http://www.zachleat.com/web/performance-caveat-with-jquery-selectors-and-live-events/#usage","http://www.zachleat.com/web/fumbling-with-social-media/_#name-drop-yourself":"http://www.zachleat.com/web/fumbling-with-social-media/#name-drop-yourself","http://www.zachleat.com/web/icymi/2016/_#open-source":"http://www.zachleat.com/web/icymi/2016/#open-source","http://www.zachleat.com/web/comprehensive-webfonts/_#verdict%3A-sure%2C-i-guess%2C-but-i-wouldn%E2%80%99t-be-excited-about-it.":"http://www.zachleat.com/web/comprehensive-webfonts/#verdict%3A-sure%2C-i-guess%2C-but-i-wouldn%E2%80%99t-be-excited-about-it.","http://www.zachleat.com/web/javascript-frameworks/_#it-depends":"http://www.zachleat.com/web/javascript-frameworks/#it-depends","http://www.zachleat.com/web/fout-foit-history/_#highlights":"http://www.zachleat.com/web/fout-foit-history/#highlights","http://www.zachleat.com/web/comprehensive-webfonts/_#cons-9":"http://www.zachleat.com/web/comprehensive-webfonts/#cons-9","http://www.zachleat.com/web/comprehensive-webfonts/_#cons-8":"http://www.zachleat.com/web/comprehensive-webfonts/#cons-8","http://www.zachleat.com/web/glyphhanger/_#use-glyphhanger":"http://www.zachleat.com/web/glyphhanger/#use-glyphhanger","http://www.zachleat.com/web/comprehensive-webfonts/_#cons-7":"http://www.zachleat.com/web/comprehensive-webfonts/#cons-7","http://www.zachleat.com/web/introducing-eleventy/_#finds-files-in-current-directory-and-outputs-to-a-_site-folder":"http://www.zachleat.com/web/introducing-eleventy/#finds-files-in-current-directory-and-outputs-to-a-_site-folder","http://www.zachleat.com/web/23-minutes/_#8%3A33-pm%2C-27-minutes-to-meeting":"http://www.zachleat.com/web/23-minutes/#8%3A33-pm%2C-27-minutes-to-meeting","http://www.zachleat.com/web/comprehensive-webfonts/_#cons-6":"http://www.zachleat.com/web/comprehensive-webfonts/#cons-6","http://www.zachleat.com/web/comprehensive-webfonts/_#cons-5":"http://www.zachleat.com/web/comprehensive-webfonts/#cons-5","http://www.zachleat.com/web/web-font-data-uris/_#but-wait%E2%80%A6":"http://www.zachleat.com/web/web-font-data-uris/#but-wait%E2%80%A6","http://www.zachleat.com/web/comprehensive-webfonts/_#cons-4":"http://www.zachleat.com/web/comprehensive-webfonts/#cons-4","http://www.zachleat.com/web/comprehensive-webfonts/_#cons-3":"http://www.zachleat.com/web/comprehensive-webfonts/#cons-3","http://www.zachleat.com/web/23-minutes/_#recap":"http://www.zachleat.com/web/23-minutes/#recap","http://www.zachleat.com/web/comprehensive-webfonts/_#cons-2":"http://www.zachleat.com/web/comprehensive-webfonts/#cons-2","http://www.zachleat.com/web/icymi/2016/_#nejsconf":"http://www.zachleat.com/web/icymi/2016/#nejsconf","http://www.zachleat.com/web/icymi/2013/_#a-tweet-highlight-4":"http://www.zachleat.com/web/icymi/2013/#a-tweet-highlight-4","http://www.zachleat.com/web/obnoxiously-readable/_#smaller-delta":"http://www.zachleat.com/web/obnoxiously-readable/#smaller-delta","http://www.zachleat.com/web/comprehensive-webfonts/_#verdict%3A-use-one-of-the-improved-critical-foft-variations-below.":"http://www.zachleat.com/web/comprehensive-webfonts/#verdict%3A-use-one-of-the-improved-critical-foft-variations-below.","http://www.zachleat.com/web/icymi/2013/_#a-tweet-highlight-2":"http://www.zachleat.com/web/icymi/2013/#a-tweet-highlight-2","http://www.zachleat.com/web/webp/_#webp":"http://www.zachleat.com/web/webp/#webp","http://www.zachleat.com/web/icymi/2013/_#a-tweet-highlight-3":"http://www.zachleat.com/web/icymi/2013/#a-tweet-highlight-3","http://www.zachleat.com/web/domain-swap/_#install-domain-swap":"http://www.zachleat.com/web/domain-swap/#install-domain-swap","http://www.zachleat.com/web/cssconf/2014/_#video":"http://www.zachleat.com/web/cssconf/2014/#video","http://www.zachleat.com/web/icymi/2014/_#tablesaw":"http://www.zachleat.com/web/icymi/2014/#tablesaw","http://www.zachleat.com/web/icymi/2015/_#tweets":"http://www.zachleat.com/web/icymi/2015/#tweets","http://www.zachleat.com/web/rename-font/_#system-font-css":"http://www.zachleat.com/web/rename-font/#system-font-css","http://www.zachleat.com/web/scare-your-visitors-with-this-javascript-gravatar-plugin/_#javascript-dependencies%3A":"http://www.zachleat.com/web/scare-your-visitors-with-this-javascript-gravatar-plugin/#javascript-dependencies%3A","http://www.zachleat.com/web/webfont-glossary/_#roman":"http://www.zachleat.com/web/webfont-glossary/#roman","http://www.zachleat.com/web/icymi/2015/_#open-source":"http://www.zachleat.com/web/icymi/2015/#open-source","http://www.zachleat.com/web/et-tu-x-ua-compatible/_#x-ua-compatible-flow":"http://www.zachleat.com/web/et-tu-x-ua-compatible/#x-ua-compatible-flow","http://www.zachleat.com/web/23-minutes/_#before":"http://www.zachleat.com/web/23-minutes/#before","http://www.zachleat.com/web/font-display-reflow/_#related":"http://www.zachleat.com/web/font-display-reflow/#related","http://www.zachleat.com/web/introducing-eleventy/_#bet-on-javascript":"http://www.zachleat.com/web/introducing-eleventy/#bet-on-javascript","http://www.zachleat.com/web/css-tricks-web-fonts/_#two-stage-choices-for-css-tricks%3A":"http://www.zachleat.com/web/css-tricks-web-fonts/#two-stage-choices-for-css-tricks%3A","http://www.zachleat.com/web/icymi/2014/_#font-family-reunion-project":"http://www.zachleat.com/web/icymi/2014/#font-family-reunion-project","http://www.zachleat.com/web/domcontentloaded-inconsistencies/_#opera-9.6":"http://www.zachleat.com/web/domcontentloaded-inconsistencies/#opera-9.6","http://www.zachleat.com/web/lighthouse-in-footer/_#fetching-the-lighthouse-score":"http://www.zachleat.com/web/lighthouse-in-footer/#fetching-the-lighthouse-score","http://www.zachleat.com/web/load-css-dynamically/_#existing-solutions":"http://www.zachleat.com/web/load-css-dynamically/#existing-solutions","http://www.zachleat.com/web/jsconf/2013/_#other-excellent-presentations":"http://www.zachleat.com/web/jsconf/2013/#other-excellent-presentations","http://www.zachleat.com/web/comprehensive-webfonts/_#verdict%3A-great-for-those-interested-in-extra-performance-but-can%E2%80%99t-subset-with-critical-foft.":"http://www.zachleat.com/web/comprehensive-webfonts/#verdict%3A-great-for-those-interested-in-extra-performance-but-can%E2%80%99t-subset-with-critical-foft.","http://www.zachleat.com/web/font-display-reflow/_#make-the-reflows-go-away":"http://www.zachleat.com/web/font-display-reflow/#make-the-reflows-go-away","http://www.zachleat.com/web/that-could-possibly-work/_#the-simplest-preview-that-can-possibly-work-well":"http://www.zachleat.com/web/that-could-possibly-work/#the-simplest-preview-that-can-possibly-work-well","http://www.zachleat.com/web/featherweight-facepile/_#results":"http://www.zachleat.com/web/featherweight-facepile/#results","http://www.zachleat.com/web/glyphhanger/_#use-the-spider-to-find-urls-for-you":"http://www.zachleat.com/web/glyphhanger/#use-the-spider-to-find-urls-for-you","http://www.zachleat.com/web/selecting-xml-with-javascript/_#why-is-this-important%3F":"http://www.zachleat.com/web/selecting-xml-with-javascript/#why-is-this-important%3F","http://www.zachleat.com/web/javascript-frameworks/_#less-is-more":"http://www.zachleat.com/web/javascript-frameworks/#less-is-more","http://www.zachleat.com/web/president-web-font/_#conclusion":"http://www.zachleat.com/web/president-web-font/#conclusion","http://www.zachleat.com/web/obnoxiously-readable/_#anyway":"http://www.zachleat.com/web/obnoxiously-readable/#anyway","http://www.zachleat.com/web/et-tu-x-ua-compatible/_#test-pages":"http://www.zachleat.com/web/et-tu-x-ua-compatible/#test-pages","http://www.zachleat.com/web/a-mobile-web-divided/_#make-your-choice":"http://www.zachleat.com/web/a-mobile-web-divided/#make-your-choice","http://www.zachleat.com/web/charset/_#summary":"http://www.zachleat.com/web/charset/#summary","http://www.zachleat.com/web/font-family-reunion/_#a-manageable-mess":"http://www.zachleat.com/web/font-family-reunion/#a-manageable-mess","http://www.zachleat.com/web/compatibility/_#%3Cinput-type%3D%22file%22%3E-on-mobile":"http://www.zachleat.com/web/compatibility/#%3Cinput-type%3D%22file%22%3E-on-mobile","http://www.zachleat.com/web/space-jam/_#video":"http://www.zachleat.com/web/space-jam/#video","http://www.zachleat.com/web/mitt-romney-webfont-problem/_#css":"http://www.zachleat.com/web/mitt-romney-webfont-problem/#css","http://www.zachleat.com/web/font-family-reunion/_#default-keywords-are-browser-madness":"http://www.zachleat.com/web/font-family-reunion/#default-keywords-are-browser-madness","http://www.zachleat.com/web/five-whys/_#slides":"http://www.zachleat.com/web/five-whys/#slides","http://www.zachleat.com/web/tool-or-die/_#but-you-don%E2%80%99t-have-to-take-my-word-for-it":"http://www.zachleat.com/web/tool-or-die/#but-you-don%E2%80%99t-have-to-take-my-word-for-it","http://www.zachleat.com/web/load-css-dynamically/_#lazyload":"http://www.zachleat.com/web/load-css-dynamically/#lazyload","http://www.zachleat.com/web/font-smooth/_#so%2C-twitter-made-a-change":"http://www.zachleat.com/web/font-smooth/#so%2C-twitter-made-a-change","http://www.zachleat.com/web/icymi/2015/_#nebraskajs":"http://www.zachleat.com/web/icymi/2015/#nebraskajs","http://www.zachleat.com/web/font-family-reunion/_#building-fontfamily.io":"http://www.zachleat.com/web/font-family-reunion/#building-fontfamily.io","http://www.zachleat.com/web/fout-vs-foit/_#related":"http://www.zachleat.com/web/fout-vs-foit/#related","http://www.zachleat.com/web/enlarging-your-yui-datatable-in-29-seconds-or-less/_#css":"http://www.zachleat.com/web/enlarging-your-yui-datatable-in-29-seconds-or-less/#css","http://www.zachleat.com/web/whitehouse/_#thankyou":"http://www.zachleat.com/web/whitehouse/#thankyou","http://www.zachleat.com/web/css-sprites-using-font-face/_#view-the-demo":"http://www.zachleat.com/web/css-sprites-using-font-face/#view-the-demo","http://www.zachleat.com/web/team-web/_#team-web":"http://www.zachleat.com/web/team-web/#team-web","http://www.zachleat.com/web/the-compromise/_#in-the-wild":"http://www.zachleat.com/web/the-compromise/#in-the-wild","http://www.zachleat.com/web/busyness/_#you-can-use-busyness-to-find-your-noisiest-twitter-friends.":"http://www.zachleat.com/web/busyness/#you-can-use-busyness-to-find-your-noisiest-twitter-friends.","http://www.zachleat.com/web/glyphhanger/_#subset-to-a-specific-font-family":"http://www.zachleat.com/web/glyphhanger/#subset-to-a-specific-font-family","http://www.zachleat.com/web/featherweight-facepile/_#aggregate-savings":"http://www.zachleat.com/web/featherweight-facepile/#aggregate-savings","http://www.zachleat.com/web/css3-text-writing-mode/_#conclusion":"http://www.zachleat.com/web/css3-text-writing-mode/#conclusion","http://www.zachleat.com/web/icymi/2014/_#stop-using-svg-in-%40font-face":"http://www.zachleat.com/web/icymi/2014/#stop-using-svg-in-%40font-face","http://www.zachleat.com/web/bulk-og/_#sample-output":"http://www.zachleat.com/web/bulk-og/#sample-output","http://www.zachleat.com/web/scoville-scale/_#video":"http://www.zachleat.com/web/scoville-scale/#video","http://www.zachleat.com/web/rename-font/_#final%2C-reduced-code":"http://www.zachleat.com/web/rename-font/#final%2C-reduced-code","http://www.zachleat.com/web/icymi/2014/_#guest-on-the-word-break-podcast":"http://www.zachleat.com/web/icymi/2014/#guest-on-the-word-break-podcast","http://www.zachleat.com/web/icymi/2014/_#shoestring":"http://www.zachleat.com/web/icymi/2014/#shoestring","http://www.zachleat.com/web/featherweight-facepile/_#try-it-out!":"http://www.zachleat.com/web/featherweight-facepile/#try-it-out!","http://www.zachleat.com/web/tips-for-programming-javascript-functions/_#setting-default-values-for-optional-arguments":"http://www.zachleat.com/web/tips-for-programming-javascript-functions/#setting-default-values-for-optional-arguments","http://www.zachleat.com/web/compatibility/_#image-download-with-media-queries":"http://www.zachleat.com/web/compatibility/#image-download-with-media-queries","http://www.zachleat.com/web/font-display-reflow/_#font-display":"http://www.zachleat.com/web/font-display-reflow/#font-display","http://www.zachleat.com/web/burnout/_#remote-work":"http://www.zachleat.com/web/burnout/#remote-work","http://www.zachleat.com/web/dom-sailbloat/_#go-forth":"http://www.zachleat.com/web/dom-sailbloat/#go-forth","http://www.zachleat.com/web/facepile/_#webmention-623655":"http://www.zachleat.com/web/facepile/#webmention-623655","http://www.zachleat.com/web/rename-font/_#postscript-names":"http://www.zachleat.com/web/rename-font/#postscript-names","http://www.zachleat.com/web/burnout/_#living-away-from-distractions":"http://www.zachleat.com/web/burnout/#living-away-from-distractions","http://www.zachleat.com/web/fumbling-with-social-media/_#share-and-be-shared":"http://www.zachleat.com/web/fumbling-with-social-media/#share-and-be-shared","http://www.zachleat.com/web/socialcount/_#filament-group-lab-post":"http://www.zachleat.com/web/socialcount/#filament-group-lab-post","http://www.zachleat.com/web/retire-bulletproof-syntax/_#addendum%3A-thank-you":"http://www.zachleat.com/web/retire-bulletproof-syntax/#addendum%3A-thank-you","http://www.zachleat.com/web/compatibility/_#can-i-use":"http://www.zachleat.com/web/compatibility/#can-i-use","http://www.zachleat.com/web/smashingconf/2015/_#venue":"http://www.zachleat.com/web/smashingconf/2015/#venue","http://www.zachleat.com/web/a-mobile-web-divided/_#jquery-mobile-1.0b2":"http://www.zachleat.com/web/a-mobile-web-divided/#jquery-mobile-1.0b2","http://www.zachleat.com/web/charset/_#setting-the-character-encoding":"http://www.zachleat.com/web/charset/#setting-the-character-encoding","http://www.zachleat.com/web/w3c-status-banners/_#performance":"http://www.zachleat.com/web/w3c-status-banners/#performance","http://www.zachleat.com/web/icymi/2016/_#nebraskajs":"http://www.zachleat.com/web/icymi/2016/#nebraskajs","http://www.zachleat.com/web/css3-text-writing-mode/_#writing-mode%3A-tb-lr":"http://www.zachleat.com/web/css3-text-writing-mode/#writing-mode%3A-tb-lr","http://www.zachleat.com/web/scoville-scale/_#related-links-from-the-event":"http://www.zachleat.com/web/scoville-scale/#related-links-from-the-event","http://www.zachleat.com/web/array-sort/_#the-fix":"http://www.zachleat.com/web/array-sort/#the-fix","http://www.zachleat.com/web/burnout/_#say-yes":"http://www.zachleat.com/web/burnout/#say-yes","http://www.zachleat.com/web/comprehensive-webfonts/_#unceremonious-%40font-face":"http://www.zachleat.com/web/comprehensive-webfonts/#unceremonious-%40font-face","http://www.zachleat.com/web/compatibility/_#the-state-of-web-type":"http://www.zachleat.com/web/compatibility/#the-state-of-web-type","http://www.zachleat.com/web/icymi/2014/_#attended-thunderplains":"http://www.zachleat.com/web/icymi/2014/#attended-thunderplains","http://www.zachleat.com/web/font-smooth/_#sources":"http://www.zachleat.com/web/font-smooth/#sources","http://www.zachleat.com/web/javascript-tdd/_#challenge":"http://www.zachleat.com/web/javascript-tdd/#challenge","http://www.zachleat.com/web/fumbling-with-social-media/_#concentrate-on-the-right-network":"http://www.zachleat.com/web/fumbling-with-social-media/#concentrate-on-the-right-network","http://www.zachleat.com/web/burnout/_#say-no":"http://www.zachleat.com/web/burnout/#say-no","http://www.zachleat.com/web/introducing-eleventy/_#templating-engine-flexibility":"http://www.zachleat.com/web/introducing-eleventy/#templating-engine-flexibility","http://www.zachleat.com/web/et-tu-x-ua-compatible/_#what-does-this-mean%3F":"http://www.zachleat.com/web/et-tu-x-ua-compatible/#what-does-this-mean%3F","http://www.zachleat.com/web/glyphhanger/_#pass-in-multiple-urls":"http://www.zachleat.com/web/glyphhanger/#pass-in-multiple-urls","http://www.zachleat.com/web/23-minutes/_#8%3A37-pm%2C-23-minutes-to-meeting":"http://www.zachleat.com/web/23-minutes/#8%3A37-pm%2C-23-minutes-to-meeting","http://www.zachleat.com/web/critical-webfonts/_#two-scoped-classes-for-critical-foft":"http://www.zachleat.com/web/critical-webfonts/#two-scoped-classes-for-critical-foft","http://www.zachleat.com/web/eleventy-contributors/_#premium-features":"http://www.zachleat.com/web/eleventy-contributors/#premium-features","http://www.zachleat.com/web/the-perfect-gif/_#animated-gifs-used-(in-order-of-appearance)":"http://www.zachleat.com/web/the-perfect-gif/#animated-gifs-used-(in-order-of-appearance)","http://www.zachleat.com/web/double-whammy-openid-and-microformats/_#microformategery":"http://www.zachleat.com/web/double-whammy-openid-and-microformats/#microformategery","http://www.zachleat.com/web/president-web-font/_#hillary-clinton":"http://www.zachleat.com/web/president-web-font/#hillary-clinton","http://www.zachleat.com/web/eleventy-birthday/_#project-naming":"http://www.zachleat.com/web/eleventy-birthday/#project-naming","http://www.zachleat.com/web/moving-target/_#feature-test":"http://www.zachleat.com/web/moving-target/#feature-test","http://www.zachleat.com/web/resume-on-the-jamstack/_#have-a-gander-at-the-ol%E2%80%99-r%C3%A9sum%C3%A9":"http://www.zachleat.com/web/resume-on-the-jamstack/#have-a-gander-at-the-ol%E2%80%99-r%C3%A9sum%C3%A9","http://www.zachleat.com/web/president-web-font/_#results":"http://www.zachleat.com/web/president-web-font/#results","http://www.zachleat.com/web/bike-lights/_#step-1":"http://www.zachleat.com/web/bike-lights/#step-1","http://www.zachleat.com/web/bike-lights/_#step-2":"http://www.zachleat.com/web/bike-lights/#step-2","http://www.zachleat.com/web/icymi/2014/_#filament-group-collaborations":"http://www.zachleat.com/web/icymi/2014/#filament-group-collaborations","http://www.zachleat.com/web/bike-lights/_#step-3":"http://www.zachleat.com/web/bike-lights/#step-3","http://www.zachleat.com/web/whitehouse/_#press":"http://www.zachleat.com/web/whitehouse/#press","http://www.zachleat.com/web/bike-lights/_#step-4":"http://www.zachleat.com/web/bike-lights/#step-4","http://www.zachleat.com/web/if-the-menu-fitts-we-must-acquit/_#view-the-demo-%2F-test-page-for-the-fitts%E2%80%99s-law-menu":"http://www.zachleat.com/web/if-the-menu-fitts-we-must-acquit/#view-the-demo-%2F-test-page-for-the-fitts%E2%80%99s-law-menu","http://www.zachleat.com/web/compatibility/_#additions":"http://www.zachleat.com/web/compatibility/#additions","http://www.zachleat.com/web/charset/_#in-the-html-file":"http://www.zachleat.com/web/charset/#in-the-html-file","http://www.zachleat.com/web/scare-your-visitors-with-this-javascript-gravatar-plugin/_#download-the-source-code":"http://www.zachleat.com/web/scare-your-visitors-with-this-javascript-gravatar-plugin/#download-the-source-code","http://www.zachleat.com/web/compatibility/_#quirksmode":"http://www.zachleat.com/web/compatibility/#quirksmode","http://www.zachleat.com/web/icymi/2014/_#font-loading":"http://www.zachleat.com/web/icymi/2014/#font-loading","http://www.zachleat.com/web/bike-lights/_#extra-credit":"http://www.zachleat.com/web/bike-lights/#extra-credit","http://www.zachleat.com/web/icymi/2017/_#popular-tweets":"http://www.zachleat.com/web/icymi/2017/#popular-tweets"},"extra111_proxyServerAndStatMap":{"http://us-037.herokuapp.com/":{"failCount":0,"successCount":6,"resultList":[200,200,200,200,200,200]},"http://us-002.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-52.herokuapp.com/":{"failCount":0,"successCount":6,"resultList":[200,200,200,200,200,200]},"http://us-025.herokuapp.com/":{"failCount":0,"successCount":5,"resultList":[200,200,200,200,200]},"http://europe69.herokuapp.com/":{"failCount":0,"successCount":6,"resultList":[200,200,200,200,200,200]},"http://europe64.herokuapp.com/":{"failCount":0,"successCount":6,"resultList":[200,200,200,200,200,200]},"http://europe-57.herokuapp.com/":{"failCount":0,"successCount":5,"resultList":[200,200,200,200,200]},"http://europe-22.herokuapp.com/":{"failCount":0,"successCount":6,"resultList":[200,200,200,200,200,200]},"http://us-016.herokuapp.com/":{"failCount":0,"successCount":5,"resultList":[200,200,200,200,200]},"http://us-013.herokuapp.com/":{"failCount":0,"successCount":5,"resultList":[200,200,200,200,200]},"http://us-039.herokuapp.com/":{"failCount":0,"successCount":6,"resultList":[200,200,200,200,200,200]},"http://us-55.herokuapp.com/":{"failCount":0,"successCount":5,"resultList":[200,200,200,200,200]},"http://europe61.herokuapp.com/":{"failCount":0,"successCount":5,"resultList":[200,200,200,200,200]},"http://us-030.herokuapp.com/":{"failCount":0,"successCount":6,"resultList":[200,200,200,200,200,200]},"http://us-009.herokuapp.com/":{"failCount":0,"successCount":6,"resultList":[200,200,200,200,200,200]},"http://us-026.herokuapp.com/":{"failCount":0,"successCount":7,"resultList":[200,200,200,200,200,200,200]},"http://us-001.herokuapp.com/":{"failCount":0,"successCount":11,"resultList":[200,200,200,200,200,200,200,200,200,200,200]},"http://europe-25.herokuapp.com/":{"failCount":1,"successCount":1,"resultList":[200,404]},"http://us-031.herokuapp.com/":{"failCount":0,"successCount":5,"resultList":[200,200,200,200,200]},"http://us-014.herokuapp.com/":{"failCount":0,"successCount":6,"resultList":[200,200,200,200,200,200]},"http://us-027.herokuapp.com/":{"failCount":0,"successCount":5,"resultList":[200,200,200,200,200]},"http://europe-56.herokuapp.com/":{"failCount":0,"successCount":5,"resultList":[200,200,200,200,200]},"http://us-53.herokuapp.com/":{"failCount":0,"successCount":5,"resultList":[200,200,200,200,200]},"http://europe68.herokuapp.com/":{"failCount":0,"successCount":5,"resultList":[200,200,200,200,200]},"http://europe63.herokuapp.com/":{"failCount":0,"successCount":5,"resultList":[200,200,200,200,200]},"http://europe-60.herokuapp.com/":{"failCount":0,"successCount":6,"resultList":[200,200,200,200,200,200]},"http://us-038.herokuapp.com/":{"failCount":0,"successCount":6,"resultList":[200,200,200,200,200,200]},"http://europe-23.herokuapp.com/":{"failCount":0,"successCount":5,"resultList":[200,200,200,200,200]},"http://europe21.herokuapp.com/":{"failCount":0,"successCount":5,"resultList":[200,200,200,200,200]},"http://us-033.herokuapp.com/":{"failCount":0,"successCount":5,"resultList":[200,200,200,200,200]},"http://us-003.herokuapp.com/":{"failCount":0,"successCount":5,"resultList":[200,200,200,200,200]},"http://us-008.herokuapp.com/":{"failCount":0,"successCount":5,"resultList":[200,200,200,200,200]},"http://us-029.herokuapp.com/":{"failCount":0,"successCount":6,"resultList":[200,200,200,200,200,200]},"http://us-012.herokuapp.com/":{"failCount":0,"successCount":5,"resultList":[200,200,200,200,200]},"http://us-018.herokuapp.com/":{"failCount":0,"successCount":6,"resultList":[200,200,200,200,200,200]},"http://europe65.herokuapp.com/":{"failCount":0,"successCount":5,"resultList":[200,200,200,200,200]},"http://us-021.herokuapp.com/":{"failCount":0,"successCount":5,"resultList":[200,200,200,200,200]},"http://us-034.herokuapp.com/":{"failCount":0,"successCount":5,"resultList":[200,200,200,200,200]},"http://us-005.herokuapp.com/":{"failCount":1,"successCount":5,"resultList":[200,200,200,404,200,200]},"http://europe-58.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-035.herokuapp.com/":{"failCount":0,"successCount":5,"resultList":[200,200,200,200,200]},"http://us-022.herokuapp.com/":{"failCount":0,"successCount":5,"resultList":[200,200,200,200,200]},"http://us-006.herokuapp.com/":{"failCount":0,"successCount":6,"resultList":[200,200,200,200,200,200]},"http://us-019.herokuapp.com/":{"failCount":0,"successCount":5,"resultList":[200,200,200,200,200]},"http://europe-59.herokuapp.com/":{"failCount":0,"successCount":6,"resultList":[200,200,200,200,200,200]},"http://us-010.herokuapp.com/":{"failCount":0,"successCount":5,"resultList":[200,200,200,200,200]},"http://us-51.herokuapp.com/":{"failCount":0,"successCount":5,"resultList":[200,200,200,200,200]},"http://europe67.herokuapp.com/":{"failCount":0,"successCount":5,"resultList":[200,200,200,200,200]},"http://us-023.herokuapp.com/":{"failCount":0,"successCount":5,"resultList":[200,200,200,200,200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://www.gravatar.com/avatar/38e4a1731159a21bbce9890693c81380?d=mm&s=60","sourceStatusCode":200,"destWidth":60,"destHeight":60,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn18@2020_6/2020/08/25/02-02-02-000_9e05629fc422fe83.webp","sourceBytes":1186,"destBytes":370,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":866,"convertSpendMs":3,"createdTime":"2020-08-25 10:02:01","host":"us-018*","referer":"http://www.zachleat.com/web/snarky/","linkMd5ListStr":"e85cd0f60547fc26728ee6d2838b955b,e85cd0f60547fc26728ee6d2838b955b,e85cd0f60547fc26728ee6d2838b955b","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.2 KB","destSize":"370 B","compressRate":"31.2%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/fumbling-social-media/graph.png","sourceStatusCode":200,"destWidth":558,"destHeight":299,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn13@2020_4/2020/08/25/02-02-02-558_80683290d178786e.webp","sourceBytes":22087,"destBytes":11566,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1444,"convertSpendMs":10,"createdTime":"2020-08-25 10:02:01","host":"us-037*","referer":"http://www.zachleat.com/web/fumbling-with-social-media/","linkMd5ListStr":"d7a0924ecf14efcbd84206a1a64c6f83,d7a0924ecf14efcbd84206a1a64c6f83","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"21.6 KB","destSize":"11.3 KB","compressRate":"52.4%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/wp-content/uploads/2007/02/optionlist_multiple1.gif","sourceStatusCode":200,"destWidth":397,"destHeight":279,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn13@2020_5/2020/08/25/02-02-02-540_4f952fcd4bc52171.webp","sourceBytes":7549,"destBytes":7816,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1454,"convertSpendMs":15,"createdTime":"2020-08-25 10:02:01","host":"us-030*","referer":"http://www.zachleat.com/web/conservative-design-option-list/","linkMd5ListStr":"84c65b30fd637c262aea54efc67deb02,84c65b30fd637c262aea54efc67deb02","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"7.4 KB","destSize":"7.6 KB","compressRate":"103.5%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/webmention-avatar-default.svg","sourceStatusCode":200,"destWidth":0,"destHeight":0,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn81@2020_3/2020/08/25/02-02-02-529_34230c1f5a7bfe56.svg","sourceBytes":370,"destBytes":370,"feedId":12519,"totalSpendMs":1471,"convertSpendMs":0,"createdTime":"2020-08-25 10:02:01","host":"us-018*","referer":"http://www.zachleat.com/web/facepile/","linkMd5ListStr":"f9dba87be6fdbf9beeb215938358551d,f9dba87be6fdbf9beeb215938358551d","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"370 B","destSize":"370 B","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/wp-content/uploads/2008/03/flickr_cite.jpg","sourceStatusCode":200,"destWidth":503,"destHeight":232,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn6@2020_4/2020/08/25/02-02-02-586_06d83f7fa4158784.webp","sourceBytes":35411,"destBytes":26092,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1452,"convertSpendMs":25,"createdTime":"2020-08-25 10:02:01","host":"us-009*","referer":"http://www.zachleat.com/web/code-like-the-big-boys-flickr/","linkMd5ListStr":"4e03dc80be7519e70e11e43fa1414f0c,4e03dc80be7519e70e11e43fa1414f0c","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"34.6 KB","destSize":"25.5 KB","compressRate":"73.7%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/wp-content/uploads/2009/12/zombies.png","sourceStatusCode":200,"destWidth":200,"destHeight":234,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn77@2020_5/2020/08/25/02-02-02-627_5b79e3cd7d9321a8.webp","sourceBytes":16517,"destBytes":3946,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1457,"convertSpendMs":11,"createdTime":"2020-08-25 10:02:01","host":"us-009*","referer":"http://www.zachleat.com/web/dont-give-up-on-ie/","linkMd5ListStr":"03a393b7c7b40ba8521a2309ef98f277,03a393b7c7b40ba8521a2309ef98f277","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"16.1 KB","destSize":"3.9 KB","compressRate":"23.9%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/wp-content/uploads/2008/04/gmail-confirm.png","sourceStatusCode":200,"destWidth":455,"destHeight":157,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn21@2020_5/2020/08/25/02-02-02-649_75c0d1b2efb50680.webp","sourceBytes":13064,"destBytes":7864,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1480,"convertSpendMs":6,"createdTime":"2020-08-25 10:02:01","host":"us-005*","referer":"http://www.zachleat.com/web/dont-let-the-door-hit-you-onunload-and-onbeforeunload/","linkMd5ListStr":"2fb8e7d68f21e9930833e51d2f4526f5,2fb8e7d68f21e9930833e51d2f4526f5","githubUser":"myreaderx14","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"12.8 KB","destSize":"7.7 KB","compressRate":"60.2%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/wp-content/uploads/2010/03/unencoded.png","sourceStatusCode":200,"destWidth":16,"destHeight":19,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn9@2020_5/2020/08/25/02-02-02-647_d532fb205a1cbe76.webp","sourceBytes":219,"destBytes":310,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1506,"convertSpendMs":8,"createdTime":"2020-08-25 10:02:01","host":"us-52*","referer":"http://www.zachleat.com/web/charset/","linkMd5ListStr":"922383d16571ca8e3a57f76806cfec2d,922383d16571ca8e3a57f76806cfec2d","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"219 B","destSize":"310 B","compressRate":"141.6%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/readingrainbow.png","sourceStatusCode":200,"destWidth":79,"destHeight":35,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn33@2020_2/2020/08/25/02-02-02-633_29bfdf0a4d54afe8.webp","sourceBytes":3856,"destBytes":1356,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1526,"convertSpendMs":7,"createdTime":"2020-08-25 10:02:01","host":"us-034*","referer":"http://www.zachleat.com/web/tool-or-die/","linkMd5ListStr":"3427e786524ff908ed72c41995401a37,3427e786524ff908ed72c41995401a37","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"3.8 KB","destSize":"1.3 KB","compressRate":"35.2%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/wp-content/uploads/2007/08/default-datatable.gif","sourceStatusCode":200,"destWidth":238,"destHeight":219,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn1@2020_1/2020/08/25/02-02-02-645_8bf93176d182ecfc.webp","sourceBytes":4452,"destBytes":5652,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1503,"convertSpendMs":8,"createdTime":"2020-08-25 10:02:01","host":"us-001*","referer":"http://www.zachleat.com/web/enlarging-your-yui-datatable-in-29-seconds-or-less/","linkMd5ListStr":"4c038d5f97a8a72559a05fc4bd5b7003,4c038d5f97a8a72559a05fc4bd5b7003","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"4.3 KB","destSize":"5.5 KB","compressRate":"127%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/wp-content/uploads/2007/03/optionlist_multiple_real1.gif","sourceStatusCode":200,"destWidth":432,"destHeight":349,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn90@2020_2/2020/08/25/02-02-02-652_27402b4799e1477b.webp","sourceBytes":14069,"destBytes":12336,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1436,"convertSpendMs":15,"createdTime":"2020-08-25 10:02:01","host":"us-038*","referer":"http://www.zachleat.com/web/conservative-design-example-multiple-option-list/","linkMd5ListStr":"62c3dbb36b5faca5301ac03ef70353c5,62c3dbb36b5faca5301ac03ef70353c5,62c3dbb36b5faca5301ac03ef70353c5","githubUser":"myreaderx23","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"13.7 KB","destSize":"12 KB","compressRate":"87.7%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/comprehensive-webfonts/strategies.svg","sourceStatusCode":200,"destWidth":0,"destHeight":0,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn74@2020_5/2020/08/25/02-02-02-622_af9fd91f36a74858.svg","sourceBytes":14502,"destBytes":14502,"feedId":12519,"totalSpendMs":1303,"convertSpendMs":0,"createdTime":"2020-08-25 10:02:02","host":"us-022*","referer":"http://www.zachleat.com/web/comprehensive-webfonts/","linkMd5ListStr":"eb1e26f7d139ffc15e2d28f345c27283,eb1e26f7d139ffc15e2d28f345c27283","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"14.2 KB","destSize":"14.2 KB","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/wp-content/uploads/2010/06/Screen-shot-2010-06-01-at-8.57.37-PM.png","sourceStatusCode":200,"destWidth":314,"destHeight":235,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn73@2020_5/2020/08/25/02-02-02-710_01094e972a446199.webp","sourceBytes":21015,"destBytes":13020,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1579,"convertSpendMs":27,"createdTime":"2020-08-25 10:02:01","host":"us-52*","referer":"http://www.zachleat.com/web/a-race-against-time-pickers/","linkMd5ListStr":"99464b7aa3bf3915237f29aa18acc84b,99464b7aa3bf3915237f29aa18acc84b","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"20.5 KB","destSize":"12.7 KB","compressRate":"62%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/wp-content/themes/hemingway/images/title.png","sourceStatusCode":200,"destWidth":617,"destHeight":153,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn1@2020_5/2020/08/25/02-02-02-693_178e4420fc0d70c1.webp","sourceBytes":35512,"destBytes":13728,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1582,"convertSpendMs":11,"createdTime":"2020-08-25 10:02:01","host":"us-022*","referer":"http://www.zachleat.com/web/relative-urls-including-the-domain/","linkMd5ListStr":"79151f9f9b3d1713dec738ecb8d80a4d,79151f9f9b3d1713dec738ecb8d80a4d","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"34.7 KB","destSize":"13.4 KB","compressRate":"38.7%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/wp-content/uploads/2011/05/Screen-shot-2011-05-12-at-11.05.26-PM.png","sourceStatusCode":200,"destWidth":300,"destHeight":205,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn15@2020_1/2020/08/25/02-02-02-756_d72e536fca89cefd.webp","sourceBytes":66941,"destBytes":11784,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1660,"convertSpendMs":7,"createdTime":"2020-08-25 10:02:01","host":"us-038*","referer":"http://www.zachleat.com/web/fittext-and-bigtext/","linkMd5ListStr":"115a2f3c23ebf71a3fed1ab5138ffe42,115a2f3c23ebf71a3fed1ab5138ffe42","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"65.4 KB","destSize":"11.5 KB","compressRate":"17.6%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/wp-content/uploads/2007/03/commandline.gif","sourceStatusCode":200,"destWidth":447,"destHeight":243,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn93@2020_4/2020/08/25/02-02-02-665_336d86d7147cc478.webp","sourceBytes":9106,"destBytes":10108,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1671,"convertSpendMs":27,"createdTime":"2020-08-25 10:02:01","host":"us-026*","referer":"http://www.zachleat.com/web/conservative-design-command-line-interface/","linkMd5ListStr":"791f89017d3a48c30e13de0411afb65e,791f89017d3a48c30e13de0411afb65e","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"8.9 KB","destSize":"9.9 KB","compressRate":"111%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/whmeetup/stage.jpg","sourceStatusCode":200,"destWidth":1022,"destHeight":426,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn61@2020_4/2020/08/25/02-02-02-756_5aba39f0b956a34c.webp","sourceBytes":124918,"destBytes":30918,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1721,"convertSpendMs":31,"createdTime":"2020-08-25 10:02:01","host":"us-55*","referer":"http://www.zachleat.com/web/icymi/2015/","linkMd5ListStr":"769761bf5888c569abdebb311c3d309b,769761bf5888c569abdebb311c3d309b","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"122 KB","destSize":"30.2 KB","compressRate":"24.8%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/whmeetup/seal.svg","sourceStatusCode":200,"destWidth":0,"destHeight":0,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn65@2020_4/2020/08/25/02-02-02-683_24af62e7863381d2.svg","sourceBytes":121926,"destBytes":121926,"feedId":12519,"totalSpendMs":1768,"convertSpendMs":0,"createdTime":"2020-08-25 10:02:01","host":"us-001*","referer":"http://www.zachleat.com/web/whitehouse/","linkMd5ListStr":"2d7f4729e0b81faaeb99688d00762170,2d7f4729e0b81faaeb99688d00762170","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"119.1 KB","destSize":"119.1 KB","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/rocket-science/history-poster.png","sourceStatusCode":200,"destWidth":1410,"destHeight":821,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn86@2020_2/2020/08/25/02-02-02-861_8568d72b52c6eb43.webp","sourceBytes":141434,"destBytes":38712,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1802,"convertSpendMs":49,"createdTime":"2020-08-25 10:02:01","host":"us-005*","referer":"http://www.zachleat.com/web/fout-foit-history/","linkMd5ListStr":"ee47f768b9634d20df3225b052a086b8,ee47f768b9634d20df3225b052a086b8","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"138.1 KB","destSize":"37.8 KB","compressRate":"27.4%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/webp/0-original.png","sourceStatusCode":200,"destWidth":1922,"destHeight":484,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn98@2020_3/2020/08/25/02-02-02-836_3113dd221a50b295.webp","sourceBytes":82086,"destBytes":56532,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1832,"convertSpendMs":54,"createdTime":"2020-08-25 10:02:01","host":"us-034*","referer":"http://www.zachleat.com/web/webp/","linkMd5ListStr":"0d7e37dfdd4fe8df107bbfaf99d752fe,0d7e37dfdd4fe8df107bbfaf99d752fe","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"80.2 KB","destSize":"55.2 KB","compressRate":"68.9%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/wp-content/uploads/2011/02/juliusceasar.jpg","sourceStatusCode":200,"destWidth":375,"destHeight":500,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn61@2020_2/2020/08/25/02-02-02-755_1f8bec4ae4d0f23d.webp","sourceBytes":183130,"destBytes":63112,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1829,"convertSpendMs":32,"createdTime":"2020-08-25 10:02:01","host":"us-013*","referer":"http://www.zachleat.com/web/et-tu-x-ua-compatible/","linkMd5ListStr":"1ffc0d2dd1ab3095a6d3f9fa1f17148a,1ffc0d2dd1ab3095a6d3f9fa1f17148a","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"178.8 KB","destSize":"61.6 KB","compressRate":"34.5%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/make8bitart/glyphhanger.png","sourceStatusCode":200,"destWidth":2352,"destHeight":458,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn41@2020_6/2020/08/25/02-02-02-808_8ef2501b42229ea0.webp","sourceBytes":172127,"destBytes":137884,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1857,"convertSpendMs":134,"createdTime":"2020-08-25 10:02:01","host":"us-009*","referer":"http://www.zachleat.com/web/23-minutes/","linkMd5ListStr":"466cac76ffae2f34478e1cc90729fd9a,466cac76ffae2f34478e1cc90729fd9a","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"168.1 KB","destSize":"134.7 KB","compressRate":"80.1%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/wp-content/uploads/2010/07/typhoon-in-macao.jpg","sourceStatusCode":200,"destWidth":680,"destHeight":503,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn37@2020_5/2020/08/25/02-02-02-801_ce5aae886d524a02.webp","sourceBytes":95768,"destBytes":125108,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1853,"convertSpendMs":54,"createdTime":"2020-08-25 10:02:01","host":"us-022*","referer":"http://www.zachleat.com/web/dom-sailbloat/","linkMd5ListStr":"fdb72e8f3f8811dfc9eb4dda17f13bc8,fdb72e8f3f8811dfc9eb4dda17f13bc8","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"93.5 KB","destSize":"122.2 KB","compressRate":"130.6%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/whistler-gondola.jpg","sourceStatusCode":200,"destWidth":800,"destHeight":600,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn69@2020_5/2020/08/25/02-02-02-897_f578e688465f873c.webp","sourceBytes":341614,"destBytes":135218,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2136,"convertSpendMs":41,"createdTime":"2020-08-25 10:02:01","host":"us-034*","referer":"http://www.zachleat.com/web/smashingconf/2014/","linkMd5ListStr":"131b2f8a8aedc94b5133397c4ebd4785,131b2f8a8aedc94b5133397c4ebd4785","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"333.6 KB","destSize":"132 KB","compressRate":"39.6%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/wp-content/uploads/2007/03/reflectomg-soabeta.png","sourceStatusCode":200,"destWidth":251,"destHeight":90,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn94@2020_5/2020/08/25/02-02-03-054_95837fab078e5241.webp","sourceBytes":17214,"destBytes":4660,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2036,"convertSpendMs":4,"createdTime":"2020-08-25 10:02:01","host":"europe-56*","referer":"http://www.zachleat.com/web/omg-soa/","linkMd5ListStr":"50c87e4fb8ef6105f2012161fd2fa03a,50c87e4fb8ef6105f2012161fd2fa03a","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"16.8 KB","destSize":"4.6 KB","compressRate":"27.1%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/wp-content/uploads/2010/02/Screen-shot-2010-02-15-at-11.08.15-PM.png","sourceStatusCode":200,"destWidth":174,"destHeight":307,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn21@2020_3/2020/08/25/02-02-03-244_5453494333a876bf.webp","sourceBytes":22660,"destBytes":6608,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1236,"convertSpendMs":18,"createdTime":"2020-08-25 10:02:02","host":"us-026*","referer":"http://www.zachleat.com/web/if-the-menu-fitts-we-must-acquit/","linkMd5ListStr":"f9847c5aaa037c15d76aa35b45e10a30,f9847c5aaa037c15d76aa35b45e10a30","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"22.1 KB","destSize":"6.5 KB","compressRate":"29.2%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/excited/images/images.001.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn78@2020_3/2020/08/25/02-02-02-885_120f2d333d7cd427.webp","sourceBytes":218082,"destBytes":106860,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2167,"convertSpendMs":79,"createdTime":"2020-08-25 10:02:01","host":"us-030*","referer":"http://www.zachleat.com/web/1m-cups-omaha/","linkMd5ListStr":"24fd181a81685ba2b1788653439d8a4c,24fd181a81685ba2b1788653439d8a4c,24fd181a81685ba2b1788653439d8a4c","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"213 KB","destSize":"104.4 KB","compressRate":"49%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/wp-content/uploads/2007/07/dom.jpg","sourceStatusCode":200,"destWidth":131,"destHeight":108,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn86@2020_4/2020/08/25/02-02-03-200_073bb3e331f1fc90.webp","sourceBytes":11978,"destBytes":2876,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2118,"convertSpendMs":4,"createdTime":"2020-08-25 10:02:01","host":"europe-60*","referer":"http://www.zachleat.com/web/8-things-the-yui-library-needs-to-win-me-back/","linkMd5ListStr":"9954300604c45ab3d90d02e8a8c57363,9954300604c45ab3d90d02e8a8c57363","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"11.7 KB","destSize":"2.8 KB","compressRate":"24%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/wp-content/uploads/2009/01/blog-comment.png","sourceStatusCode":200,"destWidth":484,"destHeight":266,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn49@2020_3/2020/08/25/02-02-03-208_d561f72c6bf5eb74.webp","sourceBytes":9024,"destBytes":6090,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2136,"convertSpendMs":8,"createdTime":"2020-08-25 10:02:01","host":"europe-60*","referer":"http://www.zachleat.com/web/scare-your-visitors-with-this-javascript-gravatar-plugin/","linkMd5ListStr":"889a7665bebe8a7b05b7e597ee91e063,889a7665bebe8a7b05b7e597ee91e063","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"8.8 KB","destSize":"5.9 KB","compressRate":"67.5%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/bernie-tweets/original.jpg","sourceStatusCode":200,"destWidth":1600,"destHeight":1053,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn54@2020_5/2020/08/25/02-02-03-102_46904f60f857ef0a.webp","sourceBytes":394853,"destBytes":178730,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2329,"convertSpendMs":105,"createdTime":"2020-08-25 10:02:01","host":"us-038*","referer":"http://www.zachleat.com/web/bernie-tweets/","linkMd5ListStr":"2cac531621dc57b5ce2b78a65f5cb1ab,2cac531621dc57b5ce2b78a65f5cb1ab","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"385.6 KB","destSize":"174.5 KB","compressRate":"45.3%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/wp-content/uploads/2011/02/ttdjs.png","sourceStatusCode":200,"destWidth":300,"destHeight":386,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn30@2020_4/2020/08/25/02-02-03-212_0ee57e6b5ff236f2.webp","sourceBytes":18004,"destBytes":21740,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2350,"convertSpendMs":7,"createdTime":"2020-08-25 10:02:01","host":"europe-56*","referer":"http://www.zachleat.com/web/javascript-tdd-winner/","linkMd5ListStr":"8c7ec7390d50149d2dab5c1a724ddefc,8c7ec7390d50149d2dab5c1a724ddefc","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"17.6 KB","destSize":"21.2 KB","compressRate":"120.8%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/cssconf.jpg","sourceStatusCode":200,"destWidth":1600,"destHeight":1200,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn98@2020_3/2020/08/25/02-02-03-076_be47e7dde9395a54.webp","sourceBytes":838018,"destBytes":532676,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2479,"convertSpendMs":136,"createdTime":"2020-08-25 10:02:01","host":"us-013*","referer":"http://www.zachleat.com/web/cssconf/2014/","linkMd5ListStr":"0162fe622c325e8d649d20c84e43cb9d,0162fe622c325e8d649d20c84e43cb9d","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"818.4 KB","destSize":"520.2 KB","compressRate":"63.6%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/wp-content/uploads/2011/07/Screen-Shot-2011-07-26-at-10.48.51-PM.png","sourceStatusCode":200,"destWidth":275,"destHeight":362,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn46@2020_1/2020/08/25/02-02-03-361_58e3eedfa4afe449.webp","sourceBytes":22899,"destBytes":3636,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2427,"convertSpendMs":6,"createdTime":"2020-08-25 10:02:01","host":"europe-22*","referer":"http://www.zachleat.com/web/a-mobile-web-divided/","linkMd5ListStr":"237f1aec1ef9fc7dddec0f4b3fb1c69d,237f1aec1ef9fc7dddec0f4b3fb1c69d","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"22.4 KB","destSize":"3.6 KB","compressRate":"15.9%"},{"code":1,"isDone":false,"source":"https://cdn-images-1.medium.com/max/800/1*E9LIfVl7pcVu3_moXc743w.gif","sourceStatusCode":200,"destWidth":35,"destHeight":25,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn66@2020_5/2020/08/25/02-02-03-609_c2bc2051c8c33d54.webp","sourceBytes":2285,"destBytes":6088,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":879,"convertSpendMs":22,"createdTime":"2020-08-25 10:02:03","host":"us-022*","referer":"http://www.zachleat.com/web/eleventy-tutorial-level-1/","linkMd5ListStr":"aa0692b67c86e3640972d898fce49bdf,aa0692b67c86e3640972d898fce49bdf","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"2.2 KB","destSize":"5.9 KB","compressRate":"266.4%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/wp-content/uploads/2009/01/signup-form.png","sourceStatusCode":200,"destWidth":250,"destHeight":293,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn64@2020_3/2020/08/25/02-02-03-480_95b2b131161fc8b2.webp","sourceBytes":126220,"destBytes":8592,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2544,"convertSpendMs":7,"createdTime":"2020-08-25 10:02:01","host":"europe-56*","referer":"http://www.zachleat.com/web/registration-forms-suck-lets-mitigate-suckiness/","linkMd5ListStr":"a6618845dc811c3e0a2ebcb6e9edd3bb,a6618845dc811c3e0a2ebcb6e9edd3bb","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"123.3 KB","destSize":"8.4 KB","compressRate":"6.8%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/wp-content/uploads/2007/02/hierselects1.jpg","sourceStatusCode":200,"destWidth":397,"destHeight":191,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn49@2020_2/2020/08/25/02-02-03-807_528f34eaba718b07.webp","sourceBytes":14761,"destBytes":7578,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1225,"convertSpendMs":7,"createdTime":"2020-08-25 10:02:03","host":"us-005*","referer":"http://www.zachleat.com/web/conservative-design-hierarchical-select-boxes/","linkMd5ListStr":"728758ac2e177d07ea9364302fe1999b,728758ac2e177d07ea9364302fe1999b","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"14.4 KB","destSize":"7.4 KB","compressRate":"51.3%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/wp-content/uploads/2007/03/hierarchical.gif","sourceStatusCode":200,"destWidth":449,"destHeight":418,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn30@2020_4/2020/08/25/02-02-03-790_05b78a2069a4c85c.webp","sourceBytes":11803,"destBytes":11442,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1322,"convertSpendMs":34,"createdTime":"2020-08-25 10:02:03","host":"us-001*","referer":"http://www.zachleat.com/web/conservative-design-example-hierarchical-options/","linkMd5ListStr":"7102210e78fb674afc8fbe9ea827bc93,7102210e78fb674afc8fbe9ea827bc93","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"11.5 KB","destSize":"11.2 KB","compressRate":"96.9%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/font-smooth/tinfoilhat.png","sourceStatusCode":200,"destWidth":60,"destHeight":57,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn38@2020_5/2020/08/25/02-02-03-918_f9264592922213db.webp","sourceBytes":6990,"destBytes":1108,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1183,"convertSpendMs":11,"createdTime":"2020-08-25 10:02:03","host":"us-52*","referer":"http://www.zachleat.com/web/font-smooth/","linkMd5ListStr":"a7e81be8d36b6404c23925a032318862,a7e81be8d36b6404c23925a032318862","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"6.8 KB","destSize":"1.1 KB","compressRate":"15.9%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/space-jam-lighthouse.png","sourceStatusCode":200,"destWidth":1160,"destHeight":406,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn70@2020_2/2020/08/25/02-02-03-994_3952d4b24a378b8d.webp","sourceBytes":29844,"destBytes":23422,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1338,"convertSpendMs":35,"createdTime":"2020-08-25 10:02:03","host":"us-009*","referer":"http://www.zachleat.com/web/space-jam/","linkMd5ListStr":"61172e4037aaa3a8ab6a53517e12982c,61172e4037aaa3a8ab6a53517e12982c","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"29.1 KB","destSize":"22.9 KB","compressRate":"78.5%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/font-display-reflow/michael-serif.jpg","sourceStatusCode":200,"destWidth":1280,"destHeight":720,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn10@2020_1/2020/08/25/02-02-03-511_e07ef93dc79b9241.webp","sourceBytes":60328,"destBytes":33790,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2884,"convertSpendMs":30,"createdTime":"2020-08-25 10:02:01","host":"europe-22*","referer":"http://www.zachleat.com/web/michael-serif/","linkMd5ListStr":"12d74078f8eb808fdc0f5ff8c8755b1a,12d74078f8eb808fdc0f5ff8c8755b1a","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"58.9 KB","destSize":"33 KB","compressRate":"56%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/nejsconf/nejsconf-2018@620.png","sourceStatusCode":200,"destWidth":640,"destHeight":285,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn89@2020_1/2020/08/25/02-02-03-789_d4475be601dfec7e.webp","sourceBytes":159298,"destBytes":15952,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2898,"convertSpendMs":11,"createdTime":"2020-08-25 10:02:01","host":"europe68*","referer":"http://www.zachleat.com/web/that-could-possibly-work/","linkMd5ListStr":"2389d1fa727cddbb7b5c60a997552fbe,2389d1fa727cddbb7b5c60a997552fbe","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"155.6 KB","destSize":"15.6 KB","compressRate":"10%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/wp-content/uploads/2008/12/domcontentloaded.png","sourceStatusCode":200,"destWidth":609,"destHeight":273,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn82@2020_3/2020/08/25/02-02-03-340_fd9a5c587e3adf20.webp","sourceBytes":20253,"destBytes":23026,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2922,"convertSpendMs":9,"createdTime":"2020-08-25 10:02:01","host":"europe-22*","referer":"http://www.zachleat.com/web/domcontentloaded-inconsistencies/","linkMd5ListStr":"4c44e717c6438019d21490207579dcb4,4c44e717c6438019d21490207579dcb4","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"19.8 KB","destSize":"22.5 KB","compressRate":"113.7%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.002.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn42@2020_1/2020/08/25/02-02-03-997_0a7a2e13a0d33fb8.webp","sourceBytes":172859,"destBytes":68736,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1545,"convertSpendMs":56,"createdTime":"2020-08-25 10:02:03","host":"us-030*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd,f5d29c8b7279e5c5f3cee357ec80b8cd,f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"168.8 KB","destSize":"67.1 KB","compressRate":"39.8%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/css-tricks/design.png","sourceStatusCode":200,"destWidth":1066,"destHeight":704,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn25@2020_4/2020/08/25/02-02-04-048_3a15bba8044d8914.webp","sourceBytes":273146,"destBytes":56444,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1546,"convertSpendMs":44,"createdTime":"2020-08-25 10:02:03","host":"us-013*","referer":"http://www.zachleat.com/web/css-tricks-web-fonts/","linkMd5ListStr":"5b883b32a8c9de12a86f6104b0a66526,5b883b32a8c9de12a86f6104b0a66526","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"266.7 KB","destSize":"55.1 KB","compressRate":"20.7%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/w3c-banners/comparison.png","sourceStatusCode":200,"destWidth":212,"destHeight":794,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn90@2020_2/2020/08/25/02-02-04-227_53a515b0a81e267c.webp","sourceBytes":46694,"destBytes":9638,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1232,"convertSpendMs":15,"createdTime":"2020-08-25 10:02:03","host":"us-013*","referer":"http://www.zachleat.com/web/w3c-status-banners/","linkMd5ListStr":"e15b1f4aa9a696c4af2459b50cf49fdc,e15b1f4aa9a696c4af2459b50cf49fdc","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"45.6 KB","destSize":"9.4 KB","compressRate":"20.6%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/barcelona/stage.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":420,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn5@2020_6/2020/08/25/02-02-03-661_d0c2b39c412e417b.webp","sourceBytes":105280,"destBytes":74260,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":3035,"convertSpendMs":27,"createdTime":"2020-08-25 10:02:01","host":"europe64*","referer":"http://www.zachleat.com/web/icymi/2015/","linkMd5ListStr":"94d04dae46f863a2ac93e3bd3044a826,769761bf5888c569abdebb311c3d309b,94d04dae46f863a2ac93e3bd3044a826","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"102.8 KB","destSize":"72.5 KB","compressRate":"70.5%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/wp-content/uploads/2011/05/juniper.jpg","sourceStatusCode":200,"destWidth":680,"destHeight":474,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn85@2020_2/2020/08/25/02-02-04-150_fbbffc3a4c3aebc8.webp","sourceBytes":51785,"destBytes":53250,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1389,"convertSpendMs":52,"createdTime":"2020-08-25 10:02:03","host":"us-026*","referer":"http://www.zachleat.com/web/pragmatic/","linkMd5ListStr":"c0f30c39bd361b2be70575f8c48c5f31,c0f30c39bd361b2be70575f8c48c5f31","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"50.6 KB","destSize":"52 KB","compressRate":"102.8%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/critical-fonts/default-3.png","sourceStatusCode":200,"destWidth":1120,"destHeight":156,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn10@2020_1/2020/08/25/02-02-04-287_ba90681593444350.webp","sourceBytes":18268,"destBytes":11584,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1141,"convertSpendMs":8,"createdTime":"2020-08-25 10:02:03","host":"us-018*","referer":"http://www.zachleat.com/web/critical-webfonts/","linkMd5ListStr":"92548b5e72c0394fc18762e2e7dbc4bd,92548b5e72c0394fc18762e2e7dbc4bd","githubUser":"myreaderx23","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"17.8 KB","destSize":"11.3 KB","compressRate":"63.4%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/extra-readable-titles/big.png","sourceStatusCode":200,"destWidth":1834,"destHeight":756,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn45@2020_3/2020/08/25/02-02-04-130_4815a65aa559c012.webp","sourceBytes":244643,"destBytes":63474,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1657,"convertSpendMs":54,"createdTime":"2020-08-25 10:02:03","host":"us-018*","referer":"http://www.zachleat.com/web/obnoxiously-readable/","linkMd5ListStr":"718d5f591cf7439924308d80057ede64,718d5f591cf7439924308d80057ede64","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"238.9 KB","destSize":"62 KB","compressRate":"25.9%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/hindsight/business.png","sourceStatusCode":200,"destWidth":1122,"destHeight":684,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn93@2020_3/2020/08/25/02-02-04-240_1601d6b062e4b633.webp","sourceBytes":125371,"destBytes":28516,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1394,"convertSpendMs":28,"createdTime":"2020-08-25 10:02:03","host":"us-001*","referer":"http://www.zachleat.com/web/icymi/2013/","linkMd5ListStr":"e9714ba5b38b41e3d9d7e9349bc6939b,e9714ba5b38b41e3d9d7e9349bc6939b","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"122.4 KB","destSize":"27.8 KB","compressRate":"22.7%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/wp-content/uploads/2010/01/Screen-shot-2010-01-24-at-1.22.39-AM.png","sourceStatusCode":200,"destWidth":764,"destHeight":348,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn2@2020_6/2020/08/25/02-02-04-315_5e33dfdbf9a45b3f.webp","sourceBytes":38327,"destBytes":15120,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1316,"convertSpendMs":32,"createdTime":"2020-08-25 10:02:03","host":"us-52*","referer":"http://www.zachleat.com/web/the-24-clock-on-alarmd/","linkMd5ListStr":"63ade8cbe4f5634c3a4e4a914c6db6db,63ade8cbe4f5634c3a4e4a914c6db6db","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"37.4 KB","destSize":"14.8 KB","compressRate":"39.4%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/bike-lights/ledstrip.jpg","sourceStatusCode":200,"destWidth":600,"destHeight":600,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn6@2020_1/2020/08/25/02-02-04-347_508259292746c0d5.webp","sourceBytes":49048,"destBytes":38206,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1347,"convertSpendMs":45,"createdTime":"2020-08-25 10:02:03","host":"us-030*","referer":"http://www.zachleat.com/web/bike-lights/","linkMd5ListStr":"7236e308ceceb4822eb2ef1d1b0b109b,7236e308ceceb4822eb2ef1d1b0b109b","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"47.9 KB","destSize":"37.3 KB","compressRate":"77.9%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/wp-content/uploads/2012/02/Screen-Shot-2012-02-05-at-12.12.09-AM.png","sourceStatusCode":200,"destWidth":364,"destHeight":115,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn13@2020_5/2020/08/25/02-02-04-413_6ae8e5e0bf8e1723.webp","sourceBytes":9113,"destBytes":1198,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1174,"convertSpendMs":4,"createdTime":"2020-08-25 10:02:04","host":"us-005*","referer":"http://www.zachleat.com/web/placeholder/","linkMd5ListStr":"cec797c3c652b2b5b119c7dc1b0f8927,cec797c3c652b2b5b119c7dc1b0f8927","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"8.9 KB","destSize":"1.2 KB","compressRate":"13.1%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/foft/fout.png","sourceStatusCode":200,"destWidth":2542,"destHeight":746,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn81@2020_2/2020/08/25/02-02-04-262_d23b222f01582425.webp","sourceBytes":90807,"destBytes":66406,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1578,"convertSpendMs":99,"createdTime":"2020-08-25 10:02:03","host":"us-038*","referer":"http://www.zachleat.com/web/foft/","linkMd5ListStr":"963707961441eed6e5b16001e0e8f225,963707961441eed6e5b16001e0e8f225","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"88.7 KB","destSize":"64.8 KB","compressRate":"73.1%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/jsconf/amelia.jpg","sourceStatusCode":200,"destWidth":612,"destHeight":338,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn26@2020_2/2020/08/25/02-02-03-807_7a36f262c177c23d.webp","sourceBytes":134700,"destBytes":83872,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":3288,"convertSpendMs":21,"createdTime":"2020-08-25 10:02:01","host":"europe68*","referer":"http://www.zachleat.com/web/jsconf/2013/","linkMd5ListStr":"988e92731f2b9b7581e6fcec0e704589,988e92731f2b9b7581e6fcec0e704589","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"131.5 KB","destSize":"81.9 KB","compressRate":"62.3%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/perfectgif.jpg","sourceStatusCode":200,"destWidth":640,"destHeight":480,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn61@2020_5/2020/08/25/02-02-03-947_3962c1ac02b6f5d8.webp","sourceBytes":88213,"destBytes":54750,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1813,"convertSpendMs":21,"createdTime":"2020-08-25 10:02:03","host":"us-034*","referer":"http://www.zachleat.com/web/the-perfect-gif/","linkMd5ListStr":"f9924047e81fed16f9253b9188a1e21c,f9924047e81fed16f9253b9188a1e21c","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"86.1 KB","destSize":"53.5 KB","compressRate":"62.1%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/font-display-reflow/waterfall.png","sourceStatusCode":200,"destWidth":1200,"destHeight":233,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn53@2020_1/2020/08/25/02-02-04-335_9f3c5fe3c7737779.webp","sourceBytes":29184,"destBytes":28388,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1866,"convertSpendMs":12,"createdTime":"2020-08-25 10:02:03","host":"europe68*","referer":"http://www.zachleat.com/web/font-display-reflow/","linkMd5ListStr":"51855ddba2a1fafb5441f46fdd87c5f7,51855ddba2a1fafb5441f46fdd87c5f7","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"28.5 KB","destSize":"27.7 KB","compressRate":"97.3%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/randsom/screenshot.jpg","sourceStatusCode":200,"destWidth":1900,"destHeight":1344,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn69@2020_5/2020/08/25/02-02-04-021_5c0886276e9cf207.webp","sourceBytes":245156,"destBytes":90344,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":3513,"convertSpendMs":108,"createdTime":"2020-08-25 10:02:01","host":"europe64*","referer":"http://www.zachleat.com/web/randsom/","linkMd5ListStr":"28ff93e65c0959a85276b5aca5914618,28ff93e65c0959a85276b5aca5914618","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"239.4 KB","destSize":"88.2 KB","compressRate":"36.9%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/wp-content/uploads/2011/01/Screen-shot-2011-01-11-at-7.37.54-PM.png","sourceStatusCode":200,"destWidth":287,"destHeight":332,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn29@2020_5/2020/08/25/02-02-04-567_9a72cc88936dd6e2.webp","sourceBytes":48653,"destBytes":10784,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1434,"convertSpendMs":11,"createdTime":"2020-08-25 10:02:04","host":"us-022*","referer":"http://www.zachleat.com/web/bigtext-makes-text-big/","linkMd5ListStr":"c63d0603c9ae59c67e0a1e474c5fef96,c63d0603c9ae59c67e0a1e474c5fef96","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"47.5 KB","destSize":"10.5 KB","compressRate":"22.2%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/mittromney/face.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":683,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn25@2020_5/2020/08/25/02-02-04-681_43e415652a16cbb7.webp","sourceBytes":280882,"destBytes":46488,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1498,"convertSpendMs":30,"createdTime":"2020-08-25 10:02:04","host":"us-034*","referer":"http://www.zachleat.com/web/mitt-romney-webfont-problem/","linkMd5ListStr":"4e1e863b40ad8e9fa3dbe71962c1799d,4e1e863b40ad8e9fa3dbe71962c1799d","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"274.3 KB","destSize":"45.4 KB","compressRate":"16.6%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/font-display-icon-fonts/ios-pua.png","sourceStatusCode":200,"destWidth":390,"destHeight":550,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn73@2020_2/2020/08/25/02-02-04-586_82828cb07dedad25.webp","sourceBytes":60047,"destBytes":17928,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1983,"convertSpendMs":10,"createdTime":"2020-08-25 10:02:03","host":"europe-22*","referer":"http://www.zachleat.com/web/font-display-icon-fonts/","linkMd5ListStr":"613861f941b21e5d2870a9599453e9b3,613861f941b21e5d2870a9599453e9b3","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"58.6 KB","destSize":"17.5 KB","compressRate":"29.9%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/wp-content/uploads/2007/02/image2.jpg","sourceStatusCode":200,"destWidth":1280,"destHeight":972,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn58@2020_1/2020/08/25/02-02-04-691_b414a7020c3fde24.webp","sourceBytes":153444,"destBytes":86058,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2596,"convertSpendMs":80,"createdTime":"2020-08-25 10:02:03","host":"europe-56*","referer":"http://www.zachleat.com/web/screen-printing-a-dreaming-exercise/","linkMd5ListStr":"520e5d6e094ad68935ac67cb9a3381e3,520e5d6e094ad68935ac67cb9a3381e3","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"149.8 KB","destSize":"84 KB","compressRate":"56.1%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/spider-pig/spider-pig-simpsons.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":453,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn18@2020_5/2020/08/25/02-02-05-116_3bebbdeb4e1dcd0b.webp","sourceBytes":54144,"destBytes":28856,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2094,"convertSpendMs":17,"createdTime":"2020-08-25 10:02:04","host":"europe68*","referer":"http://www.zachleat.com/web/spider-pig/","linkMd5ListStr":"20d85e360effb7925c4178702ea827d1,20d85e360effb7925c4178702ea827d1","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"52.9 KB","destSize":"28.2 KB","compressRate":"53.3%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/pro-open-source/eleventy-search.jpg","sourceStatusCode":200,"destWidth":1500,"destHeight":890,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn33@2020_2/2020/08/25/02-02-04-766_3449926bb18397ea.webp","sourceBytes":177231,"destBytes":83650,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2820,"convertSpendMs":62,"createdTime":"2020-08-25 10:02:03","host":"europe64*","referer":"http://www.zachleat.com/web/eleventy-contributors/","linkMd5ListStr":"af6cd5017a0cb7ff5c1ce69e7d90922c,af6cd5017a0cb7ff5c1ce69e7d90922c","githubUser":"myreaderx14","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"173.1 KB","destSize":"81.7 KB","compressRate":"47.2%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/2017-icymi/feminist.jpg","sourceStatusCode":200,"destWidth":1080,"destHeight":1080,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn77@2020_1/2020/08/25/02-02-04-941_6f42edb821df68e6.webp","sourceBytes":145114,"destBytes":125270,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2738,"convertSpendMs":63,"createdTime":"2020-08-25 10:02:03","host":"europe-60*","referer":"http://www.zachleat.com/web/icymi/2017/","linkMd5ListStr":"9fbf756a4c3c71009807463f885520da,9fbf756a4c3c71009807463f885520da","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"141.7 KB","destSize":"122.3 KB","compressRate":"86.3%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/bulk-og-images/input.png","sourceStatusCode":200,"destWidth":624,"destHeight":1229,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn22@2020_1/2020/08/25/02-02-05-175_f18872a59973a5de.webp","sourceBytes":90551,"destBytes":66334,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2378,"convertSpendMs":132,"createdTime":"2020-08-25 10:02:04","host":"europe-56*","referer":"http://www.zachleat.com/web/bulk-og/","linkMd5ListStr":"7edaa166c8e2dd6edacdae8587d2056f,7edaa166c8e2dd6edacdae8587d2056f","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"88.4 KB","destSize":"64.8 KB","compressRate":"73.3%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/2016-icymi/nejsconf-2016-crowd.jpg","sourceStatusCode":200,"destWidth":1600,"destHeight":701,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn98@2020_1/2020/08/25/02-02-05-442_f6b2a03c60fed0ca.webp","sourceBytes":324373,"destBytes":194088,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":3412,"convertSpendMs":71,"createdTime":"2020-08-25 10:02:03","host":"europe64*","referer":"http://www.zachleat.com/web/icymi/2016/","linkMd5ListStr":"3bda99e16e73b85c4c64e40cd5c1ab37,3bda99e16e73b85c4c64e40cd5c1ab37","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"316.8 KB","destSize":"189.5 KB","compressRate":"59.8%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/aliasing/font-info.png","sourceStatusCode":200,"destWidth":1024,"destHeight":500,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn58@2020_6/2020/08/25/02-02-08-702_3ba68a14da153fee.webp","sourceBytes":162458,"destBytes":56126,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1494,"convertSpendMs":71,"createdTime":"2020-08-25 10:02:08","host":"us-026*","referer":"http://www.zachleat.com/web/rename-font/","linkMd5ListStr":"982820c1ff54f243db7aa2130c19cd4d,982820c1ff54f243db7aa2130c19cd4d","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"158.7 KB","destSize":"54.8 KB","compressRate":"34.5%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/img/cb4690eb-72.jpeg","sourceStatusCode":200,"destWidth":72,"destHeight":72,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn97@2020_3/2020/08/25/02-02-10-002_072a003144c40ae9.webp","sourceBytes":1497,"destBytes":1220,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1098,"convertSpendMs":5,"createdTime":"2020-08-25 10:02:09","host":"us-009*","referer":"http://www.zachleat.com/web/resume-on-the-jamstack/","linkMd5ListStr":"c07cb84fd8c299e8c6710728b580b62b","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.5 KB","destSize":"1.2 KB","compressRate":"81.5%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/img/c3afeec0-72.jpeg","sourceStatusCode":200,"destWidth":72,"destHeight":72,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn89@2020_5/2020/08/25/02-02-09-992_a2740582386efab5.webp","sourceBytes":1773,"destBytes":1542,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1123,"convertSpendMs":3,"createdTime":"2020-08-25 10:02:09","host":"us-034*","referer":"http://www.zachleat.com/web/origin-container-queries/","linkMd5ListStr":"9f7852323d5be88cf08514dcd23cf123,9f7852323d5be88cf08514dcd23cf123","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.7 KB","destSize":"1.5 KB","compressRate":"87%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/wp-content/uploads/2010/02/Screen-shot-2010-02-15-at-11.12.57-PM.png","sourceStatusCode":200,"destWidth":176,"destHeight":251,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn33@2020_2/2020/08/25/02-02-10-077_4ce225197cc56720.webp","sourceBytes":24961,"destBytes":7484,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1140,"convertSpendMs":13,"createdTime":"2020-08-25 10:02:09","host":"us-009*","referer":"http://www.zachleat.com/web/if-the-menu-fitts-we-must-acquit/","linkMd5ListStr":"f9847c5aaa037c15d76aa35b45e10a30","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"24.4 KB","destSize":"7.3 KB","compressRate":"30%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/bike-lights/batterycase.jpg","sourceStatusCode":200,"destWidth":600,"destHeight":600,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn73@2020_4/2020/08/25/02-02-10-057_e11ca43870b61bee.webp","sourceBytes":15529,"destBytes":13090,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1154,"convertSpendMs":12,"createdTime":"2020-08-25 10:02:09","host":"us-018*","referer":"http://www.zachleat.com/web/bike-lights/","linkMd5ListStr":"7236e308ceceb4822eb2ef1d1b0b109b","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"15.2 KB","destSize":"12.8 KB","compressRate":"84.3%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/img/cfd4da86-72.jpeg","sourceStatusCode":200,"destWidth":72,"destHeight":72,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn65@2020_4/2020/08/25/02-02-10-045_7817c0615d4e63b9.webp","sourceBytes":2154,"destBytes":2078,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1144,"convertSpendMs":20,"createdTime":"2020-08-25 10:02:09","host":"us-52*","referer":"http://www.zachleat.com/web/origin-container-queries/","linkMd5ListStr":"9f7852323d5be88cf08514dcd23cf123,9f7852323d5be88cf08514dcd23cf123","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"2.1 KB","destSize":"2 KB","compressRate":"96.5%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/img/8b9d23f7-72.jpeg","sourceStatusCode":200,"destWidth":72,"destHeight":72,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn37@2020_3/2020/08/25/02-02-09-994_097fb00cb17afbf8.webp","sourceBytes":1970,"destBytes":1730,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1217,"convertSpendMs":3,"createdTime":"2020-08-25 10:02:09","host":"us-018*","referer":"http://www.zachleat.com/web/1mdevs/","linkMd5ListStr":"283247e9971c1781c9a71a948edd1898","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.9 KB","destSize":"1.7 KB","compressRate":"87.8%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.087.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn54@2020_1/2020/08/25/02-02-10-130_4622eafa98a9a8af.webp","sourceBytes":53996,"destBytes":28900,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1273,"convertSpendMs":28,"createdTime":"2020-08-25 10:02:09","host":"us-034*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"52.7 KB","destSize":"28.2 KB","compressRate":"53.5%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.034.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn54@2020_6/2020/08/25/02-02-10-176_2522545f22d4fd03.webp","sourceBytes":43967,"destBytes":26692,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1325,"convertSpendMs":55,"createdTime":"2020-08-25 10:02:09","host":"us-013*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"42.9 KB","destSize":"26.1 KB","compressRate":"60.7%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.043.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn34@2020_2/2020/08/25/02-02-10-183_95f9db118f1a0ee3.webp","sourceBytes":31569,"destBytes":15432,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1327,"convertSpendMs":103,"createdTime":"2020-08-25 10:02:09","host":"us-030*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"30.8 KB","destSize":"15.1 KB","compressRate":"48.9%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.019.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn62@2020_1/2020/08/25/02-02-10-185_bb75875a532820cc.webp","sourceBytes":43471,"destBytes":33282,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1351,"convertSpendMs":65,"createdTime":"2020-08-25 10:02:09","host":"us-009*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"42.5 KB","destSize":"32.5 KB","compressRate":"76.6%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.009.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn18@2020_4/2020/08/25/02-02-10-181_47728f2f67f4f0ef.webp","sourceBytes":60958,"destBytes":27412,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1366,"convertSpendMs":59,"createdTime":"2020-08-25 10:02:09","host":"us-013*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"59.5 KB","destSize":"26.8 KB","compressRate":"45%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.044.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn57@2020_3/2020/08/25/02-02-10-208_49d722fa192eb4c6.webp","sourceBytes":41393,"destBytes":22574,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1367,"convertSpendMs":83,"createdTime":"2020-08-25 10:02:09","host":"us-022*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx14","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"40.4 KB","destSize":"22 KB","compressRate":"54.5%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.050.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn70@2020_4/2020/08/25/02-02-10-263_064df9285a8c3747.webp","sourceBytes":54343,"destBytes":35518,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1410,"convertSpendMs":124,"createdTime":"2020-08-25 10:02:09","host":"us-030*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"53.1 KB","destSize":"34.7 KB","compressRate":"65.4%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/font-smooth/grayscale-zoom-annotated.jpg","sourceStatusCode":200,"destWidth":400,"destHeight":531,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn82@2020_6/2020/08/25/02-02-10-174_88b05c7cf1122f45.webp","sourceBytes":121628,"destBytes":43402,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1442,"convertSpendMs":18,"createdTime":"2020-08-25 10:02:09","host":"us-001*","referer":"http://www.zachleat.com/web/font-smooth/","linkMd5ListStr":"a7e81be8d36b6404c23925a032318862","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"118.8 KB","destSize":"42.4 KB","compressRate":"35.7%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/excited/images/images.012.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn78@2020_3/2020/08/25/02-02-10-220_2b9a34a023ab250a.webp","sourceBytes":98549,"destBytes":40964,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1426,"convertSpendMs":33,"createdTime":"2020-08-25 10:02:09","host":"us-005*","referer":"http://www.zachleat.com/web/1m-cups-omaha/","linkMd5ListStr":"24fd181a81685ba2b1788653439d8a4c","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"96.2 KB","destSize":"40 KB","compressRate":"41.6%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.031.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn73@2020_1/2020/08/25/02-02-10-324_de89f2da299199b9.webp","sourceBytes":151319,"destBytes":26292,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1429,"convertSpendMs":59,"createdTime":"2020-08-25 10:02:09","host":"us-038*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"147.8 KB","destSize":"25.7 KB","compressRate":"17.4%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/excited/images/images.005.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn22@2020_4/2020/08/25/02-02-10-226_e1a83676d77609bf.webp","sourceBytes":156442,"destBytes":50514,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1470,"convertSpendMs":55,"createdTime":"2020-08-25 10:02:09","host":"us-001*","referer":"http://www.zachleat.com/web/1m-cups-omaha/","linkMd5ListStr":"24fd181a81685ba2b1788653439d8a4c","githubUser":"myreaderx23","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"152.8 KB","destSize":"49.3 KB","compressRate":"32.3%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/excited/images/images.011.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn30@2020_2/2020/08/25/02-02-10-263_af707e596ddba009.webp","sourceBytes":57644,"destBytes":13458,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1463,"convertSpendMs":130,"createdTime":"2020-08-25 10:02:09","host":"us-52*","referer":"http://www.zachleat.com/web/1m-cups-omaha/","linkMd5ListStr":"24fd181a81685ba2b1788653439d8a4c","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"56.3 KB","destSize":"13.1 KB","compressRate":"23.3%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/excited/images/images.003.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn45@2020_5/2020/08/25/02-02-10-302_155eab23147ed1a1.webp","sourceBytes":142516,"destBytes":56544,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1530,"convertSpendMs":53,"createdTime":"2020-08-25 10:02:09","host":"us-038*","referer":"http://www.zachleat.com/web/1m-cups-omaha/","linkMd5ListStr":"24fd181a81685ba2b1788653439d8a4c","githubUser":"myreaderx14","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"139.2 KB","destSize":"55.2 KB","compressRate":"39.7%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/excited/images/images.030.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn77@2020_6/2020/08/25/02-02-10-435_fa331cf6703e68e0.webp","sourceBytes":50922,"destBytes":35774,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1612,"convertSpendMs":257,"createdTime":"2020-08-25 10:02:09","host":"us-026*","referer":"http://www.zachleat.com/web/1m-cups-omaha/","linkMd5ListStr":"24fd181a81685ba2b1788653439d8a4c","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"49.7 KB","destSize":"34.9 KB","compressRate":"70.3%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.105.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn14@2020_2/2020/08/25/02-02-10-407_89ccdb072b68f806.webp","sourceBytes":124631,"destBytes":39782,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1629,"convertSpendMs":198,"createdTime":"2020-08-25 10:02:09","host":"us-026*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"121.7 KB","destSize":"38.8 KB","compressRate":"31.9%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.097.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn9@2020_1/2020/08/25/02-02-10-523_2637f6fc1c959a6c.webp","sourceBytes":41439,"destBytes":25716,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1336,"convertSpendMs":42,"createdTime":"2020-08-25 10:02:10","host":"us-038*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"40.5 KB","destSize":"25.1 KB","compressRate":"62.1%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/img/1a8cbae3-72.jpeg","sourceStatusCode":200,"destWidth":72,"destHeight":72,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn66@2020_2/2020/08/25/02-02-10-407_6a16e558e8334fc5.webp","sourceBytes":1758,"destBytes":1492,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1706,"convertSpendMs":3,"createdTime":"2020-08-25 10:02:09","host":"europe-22*","referer":"http://www.zachleat.com/web/origin-container-queries/","linkMd5ListStr":"9f7852323d5be88cf08514dcd23cf123","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.7 KB","destSize":"1.5 KB","compressRate":"84.9%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/wp-content/uploads/2011/02/Screen-shot-2011-02-06-at-1.27.14-PM.png","sourceStatusCode":200,"destWidth":379,"destHeight":139,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn42@2020_3/2020/08/25/02-02-10-479_e082936930a2eccf.webp","sourceBytes":25435,"destBytes":10238,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1874,"convertSpendMs":7,"createdTime":"2020-08-25 10:02:09","host":"europe-60*","referer":"http://www.zachleat.com/web/et-tu-x-ua-compatible/","linkMd5ListStr":"1ffc0d2dd1ab3095a6d3f9fa1f17148a","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"24.8 KB","destSize":"10 KB","compressRate":"40.3%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/wp-content/uploads/2010/06/Screen-shot-2010-06-06-at-4.04.50-PM.png","sourceStatusCode":200,"destWidth":489,"destHeight":176,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn61@2020_3/2020/08/25/02-02-10-340_43e171aea61b37a4.webp","sourceBytes":13307,"destBytes":16346,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1949,"convertSpendMs":7,"createdTime":"2020-08-25 10:02:09","host":"europe64*","referer":"http://www.zachleat.com/web/a-race-against-time-pickers/","linkMd5ListStr":"99464b7aa3bf3915237f29aa18acc84b","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"13 KB","destSize":"16 KB","compressRate":"122.8%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/css-tricks/second-stage.png","sourceStatusCode":200,"destWidth":1326,"destHeight":570,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn37@2020_1/2020/08/25/02-02-10-557_f3a1dfdd1e22be41.webp","sourceBytes":32883,"destBytes":27792,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1979,"convertSpendMs":21,"createdTime":"2020-08-25 10:02:09","host":"europe-22*","referer":"http://www.zachleat.com/web/css-tricks-web-fonts/","linkMd5ListStr":"5b883b32a8c9de12a86f6104b0a66526","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"32.1 KB","destSize":"27.1 KB","compressRate":"84.5%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.016.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn45@2020_1/2020/08/25/02-02-10-715_73ff33082e001987.webp","sourceBytes":42969,"destBytes":26010,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2041,"convertSpendMs":25,"createdTime":"2020-08-25 10:02:09","host":"europe68*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"42 KB","destSize":"25.4 KB","compressRate":"60.5%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.026.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn25@2020_4/2020/08/25/02-02-10-639_dd06cc7853b6c4c1.webp","sourceBytes":53491,"destBytes":33412,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2134,"convertSpendMs":26,"createdTime":"2020-08-25 10:02:09","host":"europe64*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"52.2 KB","destSize":"32.6 KB","compressRate":"62.5%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/img/c5a2c3a6-72.jpeg","sourceStatusCode":200,"destWidth":72,"destHeight":72,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn57@2020_5/2020/08/25/02-02-09-986_b477f261c89f67ac.webp","sourceBytes":1215,"destBytes":648,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2252,"convertSpendMs":3,"createdTime":"2020-08-25 10:02:09","host":"us-001*","referer":"http://www.zachleat.com/web/origin-container-queries/","linkMd5ListStr":"9f7852323d5be88cf08514dcd23cf123","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.2 KB","destSize":"648 B","compressRate":"53.3%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/excited/images/images.004.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn93@2020_3/2020/08/25/02-02-10-179_ebded7c23d11dac9.webp","sourceBytes":83894,"destBytes":24816,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2256,"convertSpendMs":50,"createdTime":"2020-08-25 10:02:09","host":"us-022*","referer":"http://www.zachleat.com/web/1m-cups-omaha/","linkMd5ListStr":"24fd181a81685ba2b1788653439d8a4c","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"81.9 KB","destSize":"24.2 KB","compressRate":"29.6%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.042.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn82@2020_6/2020/08/25/02-02-10-853_68da310116c21fe3.webp","sourceBytes":65369,"destBytes":27450,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2157,"convertSpendMs":24,"createdTime":"2020-08-25 10:02:09","host":"europe68*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"63.8 KB","destSize":"26.8 KB","compressRate":"42%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.023.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn90@2020_5/2020/08/25/02-02-10-726_fc46416e5a5d851f.webp","sourceBytes":58238,"destBytes":35392,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2159,"convertSpendMs":32,"createdTime":"2020-08-25 10:02:09","host":"europe64*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"56.9 KB","destSize":"34.6 KB","compressRate":"60.8%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/critical-fonts/critical-foft-2.png","sourceStatusCode":200,"destWidth":1122,"destHeight":154,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn50@2020_2/2020/08/25/02-02-10-140_11b8ccfecb76663e.webp","sourceBytes":29003,"destBytes":17400,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2225,"convertSpendMs":44,"createdTime":"2020-08-25 10:02:09","host":"us-026*","referer":"http://www.zachleat.com/web/critical-webfonts/","linkMd5ListStr":"92548b5e72c0394fc18762e2e7dbc4bd","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"28.3 KB","destSize":"17 KB","compressRate":"60%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.106.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn85@2020_3/2020/08/25/02-02-10-798_e8ef5e64f46713e2.webp","sourceBytes":155421,"destBytes":35930,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2310,"convertSpendMs":33,"createdTime":"2020-08-25 10:02:09","host":"europe-56*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"151.8 KB","destSize":"35.1 KB","compressRate":"23.1%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/webp/1-imageoptim.png","sourceStatusCode":200,"destWidth":1874,"destHeight":484,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn1@2020_4/2020/08/25/02-02-10-719_03ec40fcea44a119.webp","sourceBytes":81831,"destBytes":56952,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2304,"convertSpendMs":28,"createdTime":"2020-08-25 10:02:09","host":"europe-22*","referer":"http://www.zachleat.com/web/webp/","linkMd5ListStr":"0d7e37dfdd4fe8df107bbfaf99d752fe","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"79.9 KB","destSize":"55.6 KB","compressRate":"69.6%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/excited/images/images.010.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn49@2020_2/2020/08/25/02-02-10-858_cc7e271fd02431d2.webp","sourceBytes":104201,"destBytes":44838,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2324,"convertSpendMs":35,"createdTime":"2020-08-25 10:02:09","host":"europe-56*","referer":"http://www.zachleat.com/web/1m-cups-omaha/","linkMd5ListStr":"24fd181a81685ba2b1788653439d8a4c","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"101.8 KB","destSize":"43.8 KB","compressRate":"43%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/wp-content/uploads/2009/12/google-wave-ie8.png","sourceStatusCode":200,"destWidth":454,"destHeight":339,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn83@2020_5/2020/08/25/02-02-11-035_0cb80f5dd0053096.webp","sourceBytes":51325,"destBytes":22828,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2329,"convertSpendMs":10,"createdTime":"2020-08-25 10:02:09","host":"europe-25*","referer":"http://www.zachleat.com/web/dont-give-up-on-ie/","linkMd5ListStr":"03a393b7c7b40ba8521a2309ef98f277","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"50.1 KB","destSize":"22.3 KB","compressRate":"44.5%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/excited/images/images.039.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn1@2020_1/2020/08/25/02-02-11-300_9088f30c61ddd190.webp","sourceBytes":38869,"destBytes":21842,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1337,"convertSpendMs":29,"createdTime":"2020-08-25 10:02:10","host":"us-018*","referer":"http://www.zachleat.com/web/1m-cups-omaha/","linkMd5ListStr":"24fd181a81685ba2b1788653439d8a4c","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"38 KB","destSize":"21.3 KB","compressRate":"56.2%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.051.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn5@2020_3/2020/08/25/02-02-11-409_123527f89b2cfe15.webp","sourceBytes":89636,"destBytes":34280,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1364,"convertSpendMs":34,"createdTime":"2020-08-25 10:02:10","host":"us-005*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"87.5 KB","destSize":"33.5 KB","compressRate":"38.2%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.095.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn18@2020_6/2020/08/25/02-02-11-413_95fcb1e7606214bb.webp","sourceBytes":58295,"destBytes":24094,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1292,"convertSpendMs":25,"createdTime":"2020-08-25 10:02:10","host":"us-034*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"56.9 KB","destSize":"23.5 KB","compressRate":"41.3%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/foft/finished.png","sourceStatusCode":200,"destWidth":2550,"destHeight":746,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn69@2020_5/2020/08/25/02-02-11-028_7d21bd7d0ecdf480.webp","sourceBytes":119887,"destBytes":72488,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2568,"convertSpendMs":72,"createdTime":"2020-08-25 10:02:09","host":"europe-60*","referer":"http://www.zachleat.com/web/foft/","linkMd5ListStr":"963707961441eed6e5b16001e0e8f225","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"117.1 KB","destSize":"70.8 KB","compressRate":"60.5%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/wp-content/uploads/2011/07/Screen-Shot-2011-07-26-at-10.08.24-PM.png","sourceStatusCode":200,"destWidth":272,"destHeight":361,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn49@2020_6/2020/08/25/02-02-11-579_fc1f065c72fafc75.webp","sourceBytes":51613,"destBytes":9662,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1260,"convertSpendMs":9,"createdTime":"2020-08-25 10:02:11","host":"us-001*","referer":"http://www.zachleat.com/web/a-mobile-web-divided/","linkMd5ListStr":"237f1aec1ef9fc7dddec0f4b3fb1c69d","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"50.4 KB","destSize":"9.4 KB","compressRate":"18.7%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.094.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn26@2020_4/2020/08/25/02-02-11-569_a647c3308132d9a2.webp","sourceBytes":47354,"destBytes":22176,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1358,"convertSpendMs":82,"createdTime":"2020-08-25 10:02:11","host":"us-009*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"46.2 KB","destSize":"21.7 KB","compressRate":"46.8%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/nejsconf/nejsconf-2017@620.png","sourceStatusCode":200,"destWidth":620,"destHeight":293,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn66@2020_3/2020/08/25/02-02-11-689_0d2094bacb958074.webp","sourceBytes":55899,"destBytes":11900,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1246,"convertSpendMs":8,"createdTime":"2020-08-25 10:02:11","host":"us-018*","referer":"http://www.zachleat.com/web/that-could-possibly-work/","linkMd5ListStr":"2389d1fa727cddbb7b5c60a997552fbe","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"54.6 KB","destSize":"11.6 KB","compressRate":"21.3%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/img/1d175d7-72.jpeg","sourceStatusCode":200,"destWidth":72,"destHeight":72,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn81@2020_5/2020/08/25/02-02-11-836_0c0cb17a92565c19.webp","sourceBytes":1899,"destBytes":1668,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1071,"convertSpendMs":6,"createdTime":"2020-08-25 10:02:11","host":"us-034*","referer":"http://www.zachleat.com/web/1mdevs/","linkMd5ListStr":"283247e9971c1781c9a71a948edd1898","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.9 KB","destSize":"1.6 KB","compressRate":"87.8%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/wp-content/uploads/2007/03/commandline_f.gif","sourceStatusCode":200,"destWidth":447,"destHeight":243,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn13@2020_4/2020/08/25/02-02-11-672_9327450a330a64b4.webp","sourceBytes":10018,"destBytes":12024,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1658,"convertSpendMs":11,"createdTime":"2020-08-25 10:02:10","host":"europe-56*","referer":"http://www.zachleat.com/web/conservative-design-command-line-interface/","linkMd5ListStr":"791f89017d3a48c30e13de0411afb65e","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"9.8 KB","destSize":"11.7 KB","compressRate":"120%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.014.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn69@2020_4/2020/08/25/02-02-11-867_dd0e08cbeac81b8d.webp","sourceBytes":70728,"destBytes":29976,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1377,"convertSpendMs":28,"createdTime":"2020-08-25 10:02:11","host":"us-005*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx14","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"69.1 KB","destSize":"29.3 KB","compressRate":"42.4%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/excited/images/images.023.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn61@2020_5/2020/08/25/02-02-11-829_67a1d46a01081c18.webp","sourceBytes":103248,"destBytes":42568,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1597,"convertSpendMs":42,"createdTime":"2020-08-25 10:02:11","host":"us-030*","referer":"http://www.zachleat.com/web/1m-cups-omaha/","linkMd5ListStr":"24fd181a81685ba2b1788653439d8a4c","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"100.8 KB","destSize":"41.6 KB","compressRate":"41.2%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/1mdevs/homepage.png","sourceStatusCode":200,"destWidth":1400,"destHeight":770,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn37@2020_6/2020/08/25/02-02-11-824_5951e1e750482f51.webp","sourceBytes":302378,"destBytes":82072,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1685,"convertSpendMs":41,"createdTime":"2020-08-25 10:02:11","host":"us-038*","referer":"http://www.zachleat.com/web/1mdevs/","linkMd5ListStr":"283247e9971c1781c9a71a948edd1898","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"295.3 KB","destSize":"80.1 KB","compressRate":"27.1%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/img/ff5d4161-72.jpeg","sourceStatusCode":200,"destWidth":72,"destHeight":72,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn53@2020_1/2020/08/25/02-02-11-890_de1b78e88d04ea0d.webp","sourceBytes":2166,"destBytes":2136,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1574,"convertSpendMs":3,"createdTime":"2020-08-25 10:02:11","host":"europe64*","referer":"http://www.zachleat.com/web/origin-container-queries/","linkMd5ListStr":"9f7852323d5be88cf08514dcd23cf123","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"2.1 KB","destSize":"2.1 KB","compressRate":"98.6%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/img/7a4e38ba-72.jpeg","sourceStatusCode":200,"destWidth":72,"destHeight":72,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn85@2020_5/2020/08/25/02-02-11-966_e1cb2cd3219b4dbf.webp","sourceBytes":1423,"destBytes":1086,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1223,"convertSpendMs":14,"createdTime":"2020-08-25 10:02:11","host":"us-022*","referer":"http://www.zachleat.com/web/netlify/","linkMd5ListStr":"941405ba31fceb96f990de834ee1c47e","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.4 KB","destSize":"1.1 KB","compressRate":"76.3%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/wp-content/uploads/2010/03/unencoded-ie.png","sourceStatusCode":200,"destWidth":11,"destHeight":14,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn2@2020_4/2020/08/25/02-02-12-201_99f1694ae5d4568f.webp","sourceBytes":142,"destBytes":254,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1116,"convertSpendMs":5,"createdTime":"2020-08-25 10:02:11","host":"us-038*","referer":"http://www.zachleat.com/web/charset/","linkMd5ListStr":"922383d16571ca8e3a57f76806cfec2d","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"142 B","destSize":"254 B","compressRate":"178.9%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/excited/images/images.046.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn89@2020_6/2020/08/25/02-02-12-215_f20d73de95ec6e07.webp","sourceBytes":71893,"destBytes":37326,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1347,"convertSpendMs":65,"createdTime":"2020-08-25 10:02:11","host":"us-009*","referer":"http://www.zachleat.com/web/1m-cups-omaha/","linkMd5ListStr":"24fd181a81685ba2b1788653439d8a4c","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"70.2 KB","destSize":"36.5 KB","compressRate":"51.9%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.089.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn97@2020_4/2020/08/25/02-02-11-272_b0573a7f6c3d9fed.webp","sourceBytes":33421,"destBytes":25260,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1282,"convertSpendMs":30,"createdTime":"2020-08-25 10:02:10","host":"us-030*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"32.6 KB","destSize":"24.7 KB","compressRate":"75.6%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/bernie-tweets/sample1.jpg","sourceStatusCode":200,"destWidth":1600,"destHeight":1061,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn6@2020_6/2020/08/25/02-02-11-623_b330b1841044d9fc.webp","sourceBytes":394675,"destBytes":180438,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":3389,"convertSpendMs":110,"createdTime":"2020-08-25 10:02:09","host":"europe-60*","referer":"http://www.zachleat.com/web/bernie-tweets/","linkMd5ListStr":"2cac531621dc57b5ce2b78a65f5cb1ab","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"385.4 KB","destSize":"176.2 KB","compressRate":"45.7%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.088.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn34@2020_3/2020/08/25/02-02-11-970_6c535a4bb8066678.webp","sourceBytes":25858,"destBytes":13732,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1993,"convertSpendMs":33,"createdTime":"2020-08-25 10:02:11","host":"europe-60*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx23","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"25.3 KB","destSize":"13.4 KB","compressRate":"53.1%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.085.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn13@2020_6/2020/08/25/02-02-12-354_40b1f7f074c778cf.webp","sourceBytes":37252,"destBytes":18648,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1229,"convertSpendMs":26,"createdTime":"2020-08-25 10:02:11","host":"us-001*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"36.4 KB","destSize":"18.2 KB","compressRate":"50.1%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.018.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn30@2020_3/2020/08/25/02-02-12-079_bcbe52300b46b291.webp","sourceBytes":42775,"destBytes":29556,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2042,"convertSpendMs":25,"createdTime":"2020-08-25 10:02:11","host":"europe-22*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"41.8 KB","destSize":"28.9 KB","compressRate":"69.1%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.053.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn5@2020_1/2020/08/25/02-02-12-465_3cd20ed1d6c8a42a.webp","sourceBytes":22769,"destBytes":9760,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1259,"convertSpendMs":130,"createdTime":"2020-08-25 10:02:11","host":"us-026*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"22.2 KB","destSize":"9.5 KB","compressRate":"42.9%"},{"code":1,"isDone":false,"source":"https://calendar.google.com/googlecalendar/images/calendar_sm2_en.gif","sourceStatusCode":404,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn0@2020_1/404.jpg","sourceBytes":0,"destBytes":0,"feedId":12519,"totalSpendMs":46,"convertSpendMs":0,"createdTime":"2020-08-25 10:02:13","host":"europe-25*","referer":"http://www.zachleat.com/web/relative-urls-including-the-domain/","linkMd5ListStr":"79151f9f9b3d1713dec738ecb8d80a4d","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[404],"sourceSize":"0","destSize":"0"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/spider-pig/spider-pig.jpg","sourceStatusCode":200,"destWidth":979,"destHeight":436,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn25@2020_1/2020/08/25/02-02-12-522_53371e02c3b50e60.webp","sourceBytes":51761,"destBytes":29048,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1295,"convertSpendMs":32,"createdTime":"2020-08-25 10:02:12","host":"us-030*","referer":"http://www.zachleat.com/web/spider-pig/","linkMd5ListStr":"20d85e360effb7925c4178702ea827d1","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"50.5 KB","destSize":"28.4 KB","compressRate":"56.1%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/wp-content/uploads/2011/08/Screen-Shot-2011-08-08-at-10.05.50-PM.png","sourceStatusCode":200,"destWidth":277,"destHeight":365,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn22@2020_4/2020/08/25/02-02-12-438_38781d9b26dd1c8c.webp","sourceBytes":32028,"destBytes":8722,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1365,"convertSpendMs":24,"createdTime":"2020-08-25 10:02:12","host":"us-52*","referer":"http://www.zachleat.com/web/a-mobile-web-divided/","linkMd5ListStr":"237f1aec1ef9fc7dddec0f4b3fb1c69d","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"31.3 KB","destSize":"8.5 KB","compressRate":"27.2%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/wp-content/uploads/2011/07/Screen-Shot-2011-07-26-at-10.16.48-PM.png","sourceStatusCode":200,"destWidth":272,"destHeight":361,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn74@2020_3/2020/08/25/02-02-12-422_3f1db138b53a0229.webp","sourceBytes":29825,"destBytes":7776,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1961,"convertSpendMs":7,"createdTime":"2020-08-25 10:02:11","host":"europe68*","referer":"http://www.zachleat.com/web/a-mobile-web-divided/","linkMd5ListStr":"237f1aec1ef9fc7dddec0f4b3fb1c69d","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"29.1 KB","destSize":"7.6 KB","compressRate":"26.1%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/excited/images/images.022.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn30@2020_4/2020/08/25/02-02-12-639_f8d6845a44e2089b.webp","sourceBytes":59209,"destBytes":26944,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1412,"convertSpendMs":29,"createdTime":"2020-08-25 10:02:12","host":"us-018*","referer":"http://www.zachleat.com/web/1m-cups-omaha/","linkMd5ListStr":"24fd181a81685ba2b1788653439d8a4c","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"57.8 KB","destSize":"26.3 KB","compressRate":"45.5%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/img/cb3fd21d-72.jpeg","sourceStatusCode":200,"destWidth":72,"destHeight":72,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn65@2020_4/2020/08/25/02-02-12-862_e1f9bf4e7e0b5ec9.webp","sourceBytes":1676,"destBytes":1428,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1136,"convertSpendMs":3,"createdTime":"2020-08-25 10:02:12","host":"us-038*","referer":"http://www.zachleat.com/web/origin-container-queries/","linkMd5ListStr":"9f7852323d5be88cf08514dcd23cf123,9f7852323d5be88cf08514dcd23cf123","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.6 KB","destSize":"1.4 KB","compressRate":"85.2%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/excited/images/images.032.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn49@2020_6/2020/08/25/02-02-12-840_b29af6dfe0192602.webp","sourceBytes":29404,"destBytes":26476,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1400,"convertSpendMs":95,"createdTime":"2020-08-25 10:02:12","host":"us-022*","referer":"http://www.zachleat.com/web/1m-cups-omaha/","linkMd5ListStr":"24fd181a81685ba2b1788653439d8a4c","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"28.7 KB","destSize":"25.9 KB","compressRate":"90%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/excited/images/images.047.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn33@2020_1/2020/08/25/02-02-12-827_e0ac0f277b365230.webp","sourceBytes":154560,"destBytes":68812,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1576,"convertSpendMs":56,"createdTime":"2020-08-25 10:02:12","host":"us-005*","referer":"http://www.zachleat.com/web/1m-cups-omaha/","linkMd5ListStr":"24fd181a81685ba2b1788653439d8a4c","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"150.9 KB","destSize":"67.2 KB","compressRate":"44.5%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/excited/images/images.031.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn78@2020_3/2020/08/25/02-02-12-443_13a50d43cd60a117.webp","sourceBytes":43752,"destBytes":20608,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2232,"convertSpendMs":25,"createdTime":"2020-08-25 10:02:11","host":"europe-56*","referer":"http://www.zachleat.com/web/1m-cups-omaha/","linkMd5ListStr":"24fd181a81685ba2b1788653439d8a4c","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"42.7 KB","destSize":"20.1 KB","compressRate":"47.1%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/excited/images/images.038.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn9@2020_5/2020/08/25/02-02-13-011_b09c8a1365b2a4e7.webp","sourceBytes":85284,"destBytes":36384,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1362,"convertSpendMs":72,"createdTime":"2020-08-25 10:02:12","host":"us-013*","referer":"http://www.zachleat.com/web/1m-cups-omaha/","linkMd5ListStr":"24fd181a81685ba2b1788653439d8a4c","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"83.3 KB","destSize":"35.5 KB","compressRate":"42.7%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/font-display-icon-fonts/twitter.jpg","sourceStatusCode":200,"destWidth":1918,"destHeight":176,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn17@2020_3/2020/08/25/02-02-12-783_3177d041e86184d7.webp","sourceBytes":19760,"destBytes":10018,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1825,"convertSpendMs":12,"createdTime":"2020-08-25 10:02:11","host":"europe64*","referer":"http://www.zachleat.com/web/font-display-icon-fonts/","linkMd5ListStr":"613861f941b21e5d2870a9599453e9b3","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"19.3 KB","destSize":"9.8 KB","compressRate":"50.7%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/excited/images/images.002.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn10@2020_6/2020/08/25/02-02-12-504_e5d061d76057cde4.webp","sourceBytes":193673,"destBytes":58598,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2867,"convertSpendMs":43,"createdTime":"2020-08-25 10:02:10","host":"europe68*","referer":"http://www.zachleat.com/web/1m-cups-omaha/","linkMd5ListStr":"24fd181a81685ba2b1788653439d8a4c","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"189.1 KB","destSize":"57.2 KB","compressRate":"30.3%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/excited/images/images.021.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn93@2020_3/2020/08/25/02-02-13-273_e2b386ec6d056649.webp","sourceBytes":14367,"destBytes":11054,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1194,"convertSpendMs":20,"createdTime":"2020-08-25 10:02:12","host":"us-018*","referer":"http://www.zachleat.com/web/1m-cups-omaha/","linkMd5ListStr":"24fd181a81685ba2b1788653439d8a4c","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"14 KB","destSize":"10.8 KB","compressRate":"76.9%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/css-tricks/400-500c.png","sourceStatusCode":200,"destWidth":500,"destHeight":142,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn94@2020_1/2020/08/25/02-02-12-762_fd4b5291cd71ffad.webp","sourceBytes":48388,"destBytes":8924,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2228,"convertSpendMs":6,"createdTime":"2020-08-25 10:02:11","host":"europe-22*","referer":"http://www.zachleat.com/web/css-tricks-web-fonts/","linkMd5ListStr":"5b883b32a8c9de12a86f6104b0a66526","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"47.3 KB","destSize":"8.7 KB","compressRate":"18.4%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.069.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn78@2020_1/2020/08/25/02-02-13-212_c11cac7af073ac2c.webp","sourceBytes":43199,"destBytes":27352,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1340,"convertSpendMs":31,"createdTime":"2020-08-25 10:02:12","host":"us-001*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"42.2 KB","destSize":"26.7 KB","compressRate":"63.3%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/img/354023ab-72.jpeg","sourceStatusCode":200,"destWidth":72,"destHeight":72,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn58@2020_1/2020/08/25/02-02-13-147_f4bea5c63177c54c.webp","sourceBytes":1359,"destBytes":944,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1590,"convertSpendMs":3,"createdTime":"2020-08-25 10:02:12","host":"europe-22*","referer":"http://www.zachleat.com/web/netlify/","linkMd5ListStr":"941405ba31fceb96f990de834ee1c47e","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.3 KB","destSize":"944 B","compressRate":"69.5%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.086.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn73@2020_5/2020/08/25/02-02-13-260_35302d17630822b1.webp","sourceBytes":57718,"destBytes":30296,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1399,"convertSpendMs":90,"createdTime":"2020-08-25 10:02:12","host":"us-013*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"56.4 KB","destSize":"29.6 KB","compressRate":"52.5%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/excited/images/images.037.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn69@2020_6/2020/08/25/02-02-13-307_b4e2fd017f2088aa.webp","sourceBytes":88028,"destBytes":37640,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1503,"convertSpendMs":230,"createdTime":"2020-08-25 10:02:12","host":"us-026*","referer":"http://www.zachleat.com/web/1m-cups-omaha/","linkMd5ListStr":"24fd181a81685ba2b1788653439d8a4c","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"86 KB","destSize":"36.8 KB","compressRate":"42.8%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.040.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn90@2020_6/2020/08/25/02-02-13-342_3cdefbb2acb187fa.webp","sourceBytes":43677,"destBytes":27174,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1336,"convertSpendMs":46,"createdTime":"2020-08-25 10:02:12","host":"us-030*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"42.7 KB","destSize":"26.5 KB","compressRate":"62.2%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.070.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn42@2020_1/2020/08/25/02-02-13-175_86c8023186dd9f4c.webp","sourceBytes":43509,"destBytes":38808,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2111,"convertSpendMs":26,"createdTime":"2020-08-25 10:02:12","host":"europe-56*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"42.5 KB","destSize":"37.9 KB","compressRate":"89.2%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/excited/images/images.048.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn86@2020_6/2020/08/25/02-02-13-430_a6bd017e0cf8eff5.webp","sourceBytes":76906,"destBytes":27708,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1572,"convertSpendMs":98,"createdTime":"2020-08-25 10:02:12","host":"us-52*","referer":"http://www.zachleat.com/web/1m-cups-omaha/","linkMd5ListStr":"24fd181a81685ba2b1788653439d8a4c","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"75.1 KB","destSize":"27.1 KB","compressRate":"36%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/critical-fonts/foft-1.png","sourceStatusCode":200,"destWidth":1462,"destHeight":156,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn38@2020_3/2020/08/25/02-02-13-343_a4a6c8d2d17293e6.webp","sourceBytes":40616,"destBytes":22666,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2126,"convertSpendMs":11,"createdTime":"2020-08-25 10:02:12","host":"europe68*","referer":"http://www.zachleat.com/web/critical-webfonts/","linkMd5ListStr":"92548b5e72c0394fc18762e2e7dbc4bd","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"39.7 KB","destSize":"22.1 KB","compressRate":"55.8%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/img/9d23164f-72.jpeg","sourceStatusCode":200,"destWidth":72,"destHeight":72,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn81@2020_3/2020/08/25/02-02-13-525_21a73ffef3a3874c.webp","sourceBytes":915,"destBytes":500,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1508,"convertSpendMs":3,"createdTime":"2020-08-25 10:02:12","host":"europe64*","referer":"http://www.zachleat.com/web/netlify/","linkMd5ListStr":"00a20fbfa998f90bcf59e42fa7841570,941405ba31fceb96f990de834ee1c47e","githubUser":"myreaderx14","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"915 B","destSize":"500 B","compressRate":"54.6%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.083.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn19@2020_4/2020/08/25/02-02-13-773_20c29275a08a970c.webp","sourceBytes":41925,"destBytes":26004,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1422,"convertSpendMs":92,"createdTime":"2020-08-25 10:02:13","host":"us-026*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"40.9 KB","destSize":"25.4 KB","compressRate":"62%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/img/6259b7b1-72.jpeg","sourceStatusCode":200,"destWidth":72,"destHeight":72,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn23@2020_4/2020/08/25/02-02-14-154_9db900db0e2aac5b.webp","sourceBytes":1269,"destBytes":780,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1697,"convertSpendMs":5,"createdTime":"2020-08-25 10:02:13","host":"us-014*","referer":"http://www.zachleat.com/web/netlify/","linkMd5ListStr":"941405ba31fceb96f990de834ee1c47e","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.2 KB","destSize":"780 B","compressRate":"61.5%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.045.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn42@2020_3/2020/08/25/02-02-13-305_cd3d8d7dafa4b122.webp","sourceBytes":100106,"destBytes":46024,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2371,"convertSpendMs":171,"createdTime":"2020-08-25 10:02:12","host":"us-026*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"97.8 KB","destSize":"44.9 KB","compressRate":"46%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/bulk-og-images/output.png","sourceStatusCode":200,"destWidth":1200,"destHeight":630,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn2@2020_6/2020/08/25/02-02-14-227_a032a69069d92b72.webp","sourceBytes":101539,"destBytes":26202,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1989,"convertSpendMs":38,"createdTime":"2020-08-25 10:02:13","host":"us-006*","referer":"http://www.zachleat.com/web/bulk-og/","linkMd5ListStr":"7edaa166c8e2dd6edacdae8587d2056f","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"99.2 KB","destSize":"25.6 KB","compressRate":"25.8%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/wp-content/uploads/2007/03/optionlist_multiple_real21.gif","sourceStatusCode":200,"destWidth":433,"destHeight":445,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn39@2020_3/2020/08/25/02-02-14-532_4e62228c0a22fc85.webp","sourceBytes":15642,"destBytes":18214,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1962,"convertSpendMs":34,"createdTime":"2020-08-25 10:02:13","host":"us-029*","referer":"http://www.zachleat.com/web/conservative-design-example-multiple-option-list/","linkMd5ListStr":"62c3dbb36b5faca5301ac03ef70353c5","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"15.3 KB","destSize":"17.8 KB","compressRate":"116.4%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/css-tricks/downloaded.png","sourceStatusCode":200,"destWidth":800,"destHeight":417,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn36@2020_5/2020/08/25/02-02-14-644_ff77c5f25619e3a1.webp","sourceBytes":160037,"destBytes":42800,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2154,"convertSpendMs":60,"createdTime":"2020-08-25 10:02:13","host":"us-039*","referer":"http://www.zachleat.com/web/css-tricks-web-fonts/","linkMd5ListStr":"5b883b32a8c9de12a86f6104b0a66526","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"156.3 KB","destSize":"41.8 KB","compressRate":"26.7%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/wp-content/uploads/2010/06/Screen-shot-2010-06-06-at-3.28.22-PM.png","sourceStatusCode":200,"destWidth":462,"destHeight":128,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn60@2020_2/2020/08/25/02-02-14-774_2c65954e05fc3007.webp","sourceBytes":15735,"destBytes":5748,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1795,"convertSpendMs":6,"createdTime":"2020-08-25 10:02:13","host":"us-51*","referer":"http://www.zachleat.com/web/a-race-against-time-pickers/","linkMd5ListStr":"99464b7aa3bf3915237f29aa18acc84b","githubUser":"myreaderx23","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"15.4 KB","destSize":"5.6 KB","compressRate":"36.5%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/font-display-icon-fonts/google-news.jpg","sourceStatusCode":200,"destWidth":2048,"destHeight":1815,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn61@2020_5/2020/08/25/02-02-13-988_2ca8ecf88279b461.webp","sourceBytes":260222,"destBytes":187138,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":3153,"convertSpendMs":191,"createdTime":"2020-08-25 10:02:12","host":"europe-60*","referer":"http://www.zachleat.com/web/font-display-icon-fonts/","linkMd5ListStr":"613861f941b21e5d2870a9599453e9b3","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"254.1 KB","destSize":"182.8 KB","compressRate":"71.9%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.027.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn27@2020_3/2020/08/25/02-02-14-722_1f90b712d6de9c38.webp","sourceBytes":166231,"destBytes":73206,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2423,"convertSpendMs":38,"createdTime":"2020-08-25 10:02:13","host":"us-002*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"162.3 KB","destSize":"71.5 KB","compressRate":"44%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/font-smooth/subpixel.jpg","sourceStatusCode":200,"destWidth":400,"destHeight":531,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn57@2020_5/2020/08/25/02-02-14-837_ed4fe9103d7eafc3.webp","sourceBytes":101140,"destBytes":42014,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1393,"convertSpendMs":33,"createdTime":"2020-08-25 10:02:14","host":"us-52*","referer":"http://www.zachleat.com/web/font-smooth/","linkMd5ListStr":"a7e81be8d36b6404c23925a032318862","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"98.8 KB","destSize":"41 KB","compressRate":"41.5%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/excited/images/images.033.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn7@2020_4/2020/08/25/02-02-14-688_52b0824a671682d9.webp","sourceBytes":31671,"destBytes":26248,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2463,"convertSpendMs":28,"createdTime":"2020-08-25 10:02:13","host":"europe69*","referer":"http://www.zachleat.com/web/1m-cups-omaha/","linkMd5ListStr":"24fd181a81685ba2b1788653439d8a4c","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"30.9 KB","destSize":"25.6 KB","compressRate":"82.9%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.013.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn19@2020_4/2020/08/25/02-02-15-014_fcb0114d16ebe047.webp","sourceBytes":10837,"destBytes":7114,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1352,"convertSpendMs":107,"createdTime":"2020-08-25 10:02:14","host":"us-014*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"10.6 KB","destSize":"6.9 KB","compressRate":"65.6%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/excited/images/images.036.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn31@2020_4/2020/08/25/02-02-14-787_e52df1a986b3f9db.webp","sourceBytes":41557,"destBytes":15814,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2522,"convertSpendMs":24,"createdTime":"2020-08-25 10:02:13","host":"europe-59*","referer":"http://www.zachleat.com/web/1m-cups-omaha/","linkMd5ListStr":"24fd181a81685ba2b1788653439d8a4c","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"40.6 KB","destSize":"15.4 KB","compressRate":"38.1%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.012.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn44@2020_5/2020/08/25/02-02-14-886_0352122101129998.webp","sourceBytes":15071,"destBytes":7064,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2435,"convertSpendMs":133,"createdTime":"2020-08-25 10:02:13","host":"us-019*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"14.7 KB","destSize":"6.9 KB","compressRate":"46.9%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/foft/foft.png","sourceStatusCode":200,"destWidth":2544,"destHeight":712,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn72@2020_5/2020/08/25/02-02-15-055_d6f76be711e8ffbd.webp","sourceBytes":109865,"destBytes":69514,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2083,"convertSpendMs":51,"createdTime":"2020-08-25 10:02:13","host":"us-010*","referer":"http://www.zachleat.com/web/foft/","linkMd5ListStr":"963707961441eed6e5b16001e0e8f225","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"107.3 KB","destSize":"67.9 KB","compressRate":"63.3%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/excited/images/images.009.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn12@2020_1/2020/08/25/02-02-14-837_b6297b7a22998ced.webp","sourceBytes":88902,"destBytes":39138,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2778,"convertSpendMs":31,"createdTime":"2020-08-25 10:02:13","host":"europe-58*","referer":"http://www.zachleat.com/web/1m-cups-omaha/","linkMd5ListStr":"24fd181a81685ba2b1788653439d8a4c","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"86.8 KB","destSize":"38.2 KB","compressRate":"44%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/img/c7dcf6dd-72.jpeg","sourceStatusCode":200,"destWidth":72,"destHeight":72,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn47@2020_3/2020/08/25/02-02-15-297_2772147c92760517.webp","sourceBytes":1904,"destBytes":1542,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2531,"convertSpendMs":8,"createdTime":"2020-08-25 10:02:13","host":"us-008*","referer":"http://www.zachleat.com/web/netlify/","linkMd5ListStr":"941405ba31fceb96f990de834ee1c47e","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.9 KB","destSize":"1.5 KB","compressRate":"81%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/wp-content/uploads/2010/06/timedatepicker.png","sourceStatusCode":200,"destWidth":108,"destHeight":230,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn56@2020_2/2020/08/25/02-02-15-197_a9645bb0f4a279e3.webp","sourceBytes":4876,"destBytes":8726,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2328,"convertSpendMs":4,"createdTime":"2020-08-25 10:02:13","host":"europe61*","referer":"http://www.zachleat.com/web/a-race-against-time-pickers/","linkMd5ListStr":"99464b7aa3bf3915237f29aa18acc84b","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"4.8 KB","destSize":"8.5 KB","compressRate":"179%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/excited/images/images.049.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn52@2020_1/2020/08/25/02-02-15-036_3c4d987c1960d829.webp","sourceBytes":35740,"destBytes":34858,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2398,"convertSpendMs":22,"createdTime":"2020-08-25 10:02:13","host":"europe21*","referer":"http://www.zachleat.com/web/1m-cups-omaha/","linkMd5ListStr":"24fd181a81685ba2b1788653439d8a4c","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"34.9 KB","destSize":"34 KB","compressRate":"97.5%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/carlton.gif","sourceStatusCode":200,"destWidth":350,"destHeight":497,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn97@2020_6/2020/08/25/02-02-14-717_96eecaa5e64a3855.webp","sourceBytes":852097,"destBytes":214142,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":4457,"convertSpendMs":505,"createdTime":"2020-08-25 10:02:11","host":"europe-60*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"832.1 KB","destSize":"209.1 KB","compressRate":"25.1%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/css-tricks/400-500b.png","sourceStatusCode":200,"destWidth":500,"destHeight":153,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn75@2020_4/2020/08/25/02-02-15-515_cd1f353474baa799.webp","sourceBytes":49551,"destBytes":8720,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2472,"convertSpendMs":6,"createdTime":"2020-08-25 10:02:13","host":"europe-23*","referer":"http://www.zachleat.com/web/css-tricks-web-fonts/","linkMd5ListStr":"5b883b32a8c9de12a86f6104b0a66526","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"48.4 KB","destSize":"8.5 KB","compressRate":"17.6%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/critical-fonts/fout-1.png","sourceStatusCode":200,"destWidth":1008,"destHeight":152,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn79@2020_6/2020/08/25/02-02-15-505_9049913218fd739e.webp","sourceBytes":31950,"destBytes":16252,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2392,"convertSpendMs":8,"createdTime":"2020-08-25 10:02:14","host":"europe63*","referer":"http://www.zachleat.com/web/critical-webfonts/","linkMd5ListStr":"92548b5e72c0394fc18762e2e7dbc4bd","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"31.2 KB","destSize":"15.9 KB","compressRate":"50.9%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/img/deploy-to-netlify.svg","sourceStatusCode":200,"destWidth":0,"destHeight":0,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn48@2020_6/2020/08/25/02-02-15-893_615673eaa1146cee.svg","sourceBytes":22605,"destBytes":22605,"feedId":12519,"totalSpendMs":1143,"convertSpendMs":0,"createdTime":"2020-08-25 10:02:15","host":"us-006*","referer":"http://www.zachleat.com/web/lighthouse-in-footer/","linkMd5ListStr":"cfea08d367a6c99f819a093048eb1763","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"22.1 KB","destSize":"22.1 KB","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/img/86b26c32-72.jpeg","sourceStatusCode":200,"destWidth":72,"destHeight":72,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn83@2020_5/2020/08/25/02-02-16-075_b76cfe37b420ed36.webp","sourceBytes":1674,"destBytes":1310,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2723,"convertSpendMs":3,"createdTime":"2020-08-25 10:02:14","host":"us-53*","referer":"http://www.zachleat.com/web/filament-group/","linkMd5ListStr":"27504379fa6ba5cadb2a1d14c28f914b","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.6 KB","destSize":"1.3 KB","compressRate":"78.3%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/font-display-reflow/render-2.png","sourceStatusCode":200,"destWidth":516,"destHeight":282,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn68@2020_2/2020/08/25/02-02-16-238_09416c741812722b.webp","sourceBytes":39202,"destBytes":9004,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1194,"convertSpendMs":17,"createdTime":"2020-08-25 10:02:15","host":"us-019*","referer":"http://www.zachleat.com/web/font-display-reflow/","linkMd5ListStr":"51855ddba2a1fafb5441f46fdd87c5f7","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"38.3 KB","destSize":"8.8 KB","compressRate":"23%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.057.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn39@2020_2/2020/08/25/02-02-16-191_2845829a16345a2f.webp","sourceBytes":58517,"destBytes":29896,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1621,"convertSpendMs":76,"createdTime":"2020-08-25 10:02:15","host":"us-027*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"57.1 KB","destSize":"29.2 KB","compressRate":"51.1%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/wp-content/uploads/2010/06/clockpick.png","sourceStatusCode":200,"destWidth":146,"destHeight":123,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn16@2020_3/2020/08/25/02-02-16-331_ba21a217f98f374c.webp","sourceBytes":3583,"destBytes":5174,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2667,"convertSpendMs":3,"createdTime":"2020-08-25 10:02:14","host":"us-025*","referer":"http://www.zachleat.com/web/a-race-against-time-pickers/","linkMd5ListStr":"99464b7aa3bf3915237f29aa18acc84b","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"3.5 KB","destSize":"5.1 KB","compressRate":"144.4%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/excited/images/images.027.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn64@2020_2/2020/08/25/02-02-16-315_42a58b8476bda38e.webp","sourceBytes":56938,"destBytes":27964,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1319,"convertSpendMs":46,"createdTime":"2020-08-25 10:02:15","host":"us-029*","referer":"http://www.zachleat.com/web/1m-cups-omaha/","linkMd5ListStr":"24fd181a81685ba2b1788653439d8a4c","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"55.6 KB","destSize":"27.3 KB","compressRate":"49.1%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/img/ed7db326-72.jpeg","sourceStatusCode":200,"destWidth":72,"destHeight":72,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn84@2020_3/2020/08/25/02-02-16-470_0e829006f08efe2c.webp","sourceBytes":2055,"destBytes":1846,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1079,"convertSpendMs":5,"createdTime":"2020-08-25 10:02:16","host":"us-51*","referer":"http://www.zachleat.com/web/filament-group/","linkMd5ListStr":"27504379fa6ba5cadb2a1d14c28f914b","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"2 KB","destSize":"1.8 KB","compressRate":"89.8%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/wp-content/uploads/2007/03/optionlist_multiple_real31.gif","sourceStatusCode":200,"destWidth":432,"destHeight":412,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn72@2020_3/2020/08/25/02-02-16-411_a834f0ed318e99f3.webp","sourceBytes":14624,"destBytes":16468,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1269,"convertSpendMs":73,"createdTime":"2020-08-25 10:02:15","host":"us-008*","referer":"http://www.zachleat.com/web/conservative-design-example-multiple-option-list/","linkMd5ListStr":"62c3dbb36b5faca5301ac03ef70353c5","githubUser":"myreaderx23","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"14.3 KB","destSize":"16.1 KB","compressRate":"112.6%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.041.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn3@2020_1/2020/08/25/02-02-15-883_ac10244ebcbce942.webp","sourceBytes":79747,"destBytes":49700,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2887,"convertSpendMs":31,"createdTime":"2020-08-25 10:02:14","host":"europe65*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"77.9 KB","destSize":"48.5 KB","compressRate":"62.3%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.084.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn68@2020_5/2020/08/25/02-02-16-514_9ee4fdea2bcb5a4c.webp","sourceBytes":13115,"destBytes":7146,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2528,"convertSpendMs":78,"createdTime":"2020-08-25 10:02:14","host":"us-021*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"12.8 KB","destSize":"7 KB","compressRate":"54.5%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/img/57b02d05-72.jpeg","sourceStatusCode":200,"destWidth":72,"destHeight":72,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn43@2020_4/2020/08/25/02-02-16-531_4787288828f2070d.webp","sourceBytes":1652,"destBytes":1480,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1695,"convertSpendMs":3,"createdTime":"2020-08-25 10:02:15","host":"us-016*","referer":"http://www.zachleat.com/web/origin-container-queries/","linkMd5ListStr":"9f7852323d5be88cf08514dcd23cf123,9f7852323d5be88cf08514dcd23cf123","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.6 KB","destSize":"1.4 KB","compressRate":"89.6%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.065.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn31@2020_1/2020/08/25/02-02-16-236_fdc574a264d8560f.webp","sourceBytes":21235,"destBytes":12330,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2127,"convertSpendMs":27,"createdTime":"2020-08-25 10:02:15","host":"europe-57*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"20.7 KB","destSize":"12 KB","compressRate":"58.1%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.056.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn28@2020_4/2020/08/25/02-02-16-230_247583084266c944.webp","sourceBytes":40570,"destBytes":24874,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2199,"convertSpendMs":24,"createdTime":"2020-08-25 10:02:15","host":"europe67*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"39.6 KB","destSize":"24.3 KB","compressRate":"61.3%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/img/5a94d511-72.jpeg","sourceStatusCode":200,"destWidth":72,"destHeight":72,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn16@2020_4/2020/08/25/02-02-16-557_d21e0b778dc5843d.webp","sourceBytes":2302,"destBytes":2216,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":4097,"convertSpendMs":5,"createdTime":"2020-08-25 10:02:13","host":"us-037*","referer":"http://www.zachleat.com/web/cloudflaretv/","linkMd5ListStr":"1d328fb0a4ebfe6ace4edb83ad67534e,1d328fb0a4ebfe6ace4edb83ad67534e","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"2.2 KB","destSize":"2.2 KB","compressRate":"96.3%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/img/39e20686-72.jpeg","sourceStatusCode":200,"destWidth":72,"destHeight":72,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn56@2020_4/2020/08/25/02-02-16-431_24afe91642e41f54.webp","sourceBytes":1761,"destBytes":1570,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1532,"convertSpendMs":3,"createdTime":"2020-08-25 10:02:15","host":"europe-59*","referer":"http://www.zachleat.com/web/1mdevs/","linkMd5ListStr":"283247e9971c1781c9a71a948edd1898","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.7 KB","destSize":"1.5 KB","compressRate":"89.2%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/font-smooth/disabled-zoom-annotated.jpg","sourceStatusCode":200,"destWidth":400,"destHeight":531,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn11@2020_1/2020/08/25/02-02-15-884_ea5b19fa50447b8e.webp","sourceBytes":105020,"destBytes":30056,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2962,"convertSpendMs":15,"createdTime":"2020-08-25 10:02:14","host":"us-035*","referer":"http://www.zachleat.com/web/font-smooth/","linkMd5ListStr":"a7e81be8d36b6404c23925a032318862","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"102.6 KB","destSize":"29.4 KB","compressRate":"28.6%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.081.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn35@2020_1/2020/08/25/02-02-16-568_9f33c7ce5c73c26d.webp","sourceBytes":62801,"destBytes":24074,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2315,"convertSpendMs":29,"createdTime":"2020-08-25 10:02:15","host":"us-037*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"61.3 KB","destSize":"23.5 KB","compressRate":"38.3%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/css-tricks/features4.png","sourceStatusCode":200,"destWidth":500,"destHeight":128,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn51@2020_6/2020/08/25/02-02-16-408_fb8ede5d81a1b006.webp","sourceBytes":13574,"destBytes":7188,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1683,"convertSpendMs":4,"createdTime":"2020-08-25 10:02:15","host":"europe69*","referer":"http://www.zachleat.com/web/css-tricks-web-fonts/","linkMd5ListStr":"5b883b32a8c9de12a86f6104b0a66526","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"13.3 KB","destSize":"7 KB","compressRate":"53%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/excited/images/images.051.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn87@2020_2/2020/08/25/02-02-16-607_089994139fef7528.webp","sourceBytes":46279,"destBytes":23560,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1348,"convertSpendMs":28,"createdTime":"2020-08-25 10:02:16","host":"us-031*","referer":"http://www.zachleat.com/web/1m-cups-omaha/","linkMd5ListStr":"24fd181a81685ba2b1788653439d8a4c","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"45.2 KB","destSize":"23 KB","compressRate":"50.9%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/wp-content/uploads/2011/05/Screen-shot-2011-05-12-at-11.10.01-PM.png","sourceStatusCode":200,"destWidth":300,"destHeight":199,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn91@2020_2/2020/08/25/02-02-16-759_b21b54393e8d595a.webp","sourceBytes":52593,"destBytes":7490,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1281,"convertSpendMs":24,"createdTime":"2020-08-25 10:02:16","host":"us-021*","referer":"http://www.zachleat.com/web/fittext-and-bigtext/","linkMd5ListStr":"115a2f3c23ebf71a3fed1ab5138ffe42","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"51.4 KB","destSize":"7.3 KB","compressRate":"14.2%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/excited/images/images.035.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn92@2020_4/2020/08/25/02-02-16-706_854aaf3ef793d9bd.webp","sourceBytes":39523,"destBytes":20828,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":3375,"convertSpendMs":27,"createdTime":"2020-08-25 10:02:14","host":"us-023*","referer":"http://www.zachleat.com/web/1m-cups-omaha/","linkMd5ListStr":"24fd181a81685ba2b1788653439d8a4c","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"38.6 KB","destSize":"20.3 KB","compressRate":"52.7%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/img/47eaedee-72.jpeg","sourceStatusCode":200,"destWidth":72,"destHeight":72,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn75@2020_3/2020/08/25/02-02-16-717_c48702eef2483e78.webp","sourceBytes":1159,"destBytes":778,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1525,"convertSpendMs":3,"createdTime":"2020-08-25 10:02:16","host":"europe21*","referer":"http://www.zachleat.com/web/origin-container-queries/","linkMd5ListStr":"9f7852323d5be88cf08514dcd23cf123,9f7852323d5be88cf08514dcd23cf123","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.1 KB","destSize":"778 B","compressRate":"67.1%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/excited/images/images.034.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn95@2020_5/2020/08/25/02-02-16-813_21b35053e29a03ad.webp","sourceBytes":190064,"destBytes":68554,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1527,"convertSpendMs":44,"createdTime":"2020-08-25 10:02:16","host":"us-010*","referer":"http://www.zachleat.com/web/1m-cups-omaha/","linkMd5ListStr":"24fd181a81685ba2b1788653439d8a4c","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"185.6 KB","destSize":"66.9 KB","compressRate":"36.1%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/wp-content/uploads/2007/02/optionlist_single1.gif","sourceStatusCode":200,"destWidth":397,"destHeight":260,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn8@2020_6/2020/08/25/02-02-16-983_408e5e0742da329b.webp","sourceBytes":7141,"destBytes":6712,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1107,"convertSpendMs":14,"createdTime":"2020-08-25 10:02:16","host":"us-53*","referer":"http://www.zachleat.com/web/conservative-design-option-list/","linkMd5ListStr":"84c65b30fd637c262aea54efc67deb02","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"7 KB","destSize":"6.6 KB","compressRate":"94%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/font-smooth/subpixel-zoom-annotated.jpg","sourceStatusCode":200,"destWidth":400,"destHeight":531,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn12@2020_5/2020/08/25/02-02-17-268_2c9a9a0395301785.webp","sourceBytes":103391,"destBytes":30356,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1355,"convertSpendMs":13,"createdTime":"2020-08-25 10:02:16","host":"us-033*","referer":"http://www.zachleat.com/web/font-smooth/","linkMd5ListStr":"a7e81be8d36b6404c23925a032318862","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"101 KB","destSize":"29.6 KB","compressRate":"29.4%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/img/7482662b-72.jpeg","sourceStatusCode":200,"destWidth":72,"destHeight":72,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn3@2020_6/2020/08/25/02-02-17-232_894050fcbd99e8e6.webp","sourceBytes":976,"destBytes":500,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1582,"convertSpendMs":2,"createdTime":"2020-08-25 10:02:16","host":"europe63*","referer":"http://www.zachleat.com/web/origin-container-queries/","linkMd5ListStr":"9f7852323d5be88cf08514dcd23cf123","githubUser":"myreaderx14","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"976 B","destSize":"500 B","compressRate":"51.2%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/excited/images/images.008.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn63@2020_5/2020/08/25/02-02-17-443_d12c2a1b0e0fd864.webp","sourceBytes":88573,"destBytes":37306,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":4477,"convertSpendMs":35,"createdTime":"2020-08-25 10:02:13","host":"us-031*","referer":"http://www.zachleat.com/web/1m-cups-omaha/","linkMd5ListStr":"24fd181a81685ba2b1788653439d8a4c","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"86.5 KB","destSize":"36.4 KB","compressRate":"42.1%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/css-tricks/400-500a.png","sourceStatusCode":200,"destWidth":500,"destHeight":157,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn100@2020_5/2020/08/25/02-02-17-590_edb9b5dd746cb9f2.webp","sourceBytes":46506,"destBytes":7468,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":4225,"convertSpendMs":7,"createdTime":"2020-08-25 10:02:14","host":"us-001*","referer":"http://www.zachleat.com/web/css-tricks-web-fonts/","linkMd5ListStr":"5b883b32a8c9de12a86f6104b0a66526","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"45.4 KB","destSize":"7.3 KB","compressRate":"16.1%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/excited/images/images.019.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn19@2020_5/2020/08/25/02-02-17-536_88207cdcc6fd8900.webp","sourceBytes":49139,"destBytes":20978,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1338,"convertSpendMs":25,"createdTime":"2020-08-25 10:02:17","host":"us-012*","referer":"http://www.zachleat.com/web/1m-cups-omaha/","linkMd5ListStr":"24fd181a81685ba2b1788653439d8a4c","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"48 KB","destSize":"20.5 KB","compressRate":"42.7%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/img/fad6c9bd-72.jpeg","sourceStatusCode":200,"destWidth":72,"destHeight":72,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn43@2020_2/2020/08/25/02-02-17-637_22480286842f018a.webp","sourceBytes":1996,"destBytes":1448,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1134,"convertSpendMs":6,"createdTime":"2020-08-25 10:02:17","host":"us-014*","referer":"http://www.zachleat.com/web/netlify/","linkMd5ListStr":"941405ba31fceb96f990de834ee1c47e","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.9 KB","destSize":"1.4 KB","compressRate":"72.5%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/img/aca40ae4-72.jpeg","sourceStatusCode":200,"destWidth":72,"destHeight":72,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn7@2020_5/2020/08/25/02-02-17-717_f8d593846086ca03.webp","sourceBytes":2497,"destBytes":2366,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":4066,"convertSpendMs":3,"createdTime":"2020-08-25 10:02:14","host":"us-55*","referer":"http://www.zachleat.com/web/origin-container-queries/","linkMd5ListStr":"9f7852323d5be88cf08514dcd23cf123","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"2.4 KB","destSize":"2.3 KB","compressRate":"94.8%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/wp-content/uploads/2011/07/Screen-Shot-2011-07-27-at-6.26.50-PM.png","sourceStatusCode":200,"destWidth":275,"destHeight":364,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn87@2020_6/2020/08/25/02-02-17-661_e1188fdbb74f87de.webp","sourceBytes":29209,"destBytes":7852,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":4341,"convertSpendMs":6,"createdTime":"2020-08-25 10:02:14","host":"us-033*","referer":"http://www.zachleat.com/web/a-mobile-web-divided/","linkMd5ListStr":"237f1aec1ef9fc7dddec0f4b3fb1c69d","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"28.5 KB","destSize":"7.7 KB","compressRate":"26.9%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/font-smooth/google-pixel-subpixel.jpg","sourceStatusCode":200,"destWidth":760,"destHeight":408,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn80@2020_4/2020/08/25/02-02-17-182_8b3c4423c65b26fe.webp","sourceBytes":156598,"destBytes":70070,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2402,"convertSpendMs":32,"createdTime":"2020-08-25 10:02:16","host":"europe61*","referer":"http://www.zachleat.com/web/font-smooth/","linkMd5ListStr":"a7e81be8d36b6404c23925a032318862","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"152.9 KB","destSize":"68.4 KB","compressRate":"44.7%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/excited/images/images.042.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn99@2020_5/2020/08/25/02-02-17-438_135b03c9ef5e3acd.webp","sourceBytes":59078,"destBytes":30300,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1991,"convertSpendMs":33,"createdTime":"2020-08-25 10:02:16","host":"europe-23*","referer":"http://www.zachleat.com/web/1m-cups-omaha/","linkMd5ListStr":"24fd181a81685ba2b1788653439d8a4c","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"57.7 KB","destSize":"29.6 KB","compressRate":"51.3%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.058.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn31@2020_3/2020/08/25/02-02-17-660_78f59edc7e35aba2.webp","sourceBytes":77701,"destBytes":39936,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1345,"convertSpendMs":45,"createdTime":"2020-08-25 10:02:17","host":"us-55*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"75.9 KB","destSize":"39 KB","compressRate":"51.4%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/wp-content/uploads/2010/06/picker.png","sourceStatusCode":200,"destWidth":294,"destHeight":203,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn60@2020_3/2020/08/25/02-02-17-672_001bad04c42d365e.webp","sourceBytes":5290,"destBytes":7854,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1179,"convertSpendMs":7,"createdTime":"2020-08-25 10:02:17","host":"us-037*","referer":"http://www.zachleat.com/web/a-race-against-time-pickers/","linkMd5ListStr":"99464b7aa3bf3915237f29aa18acc84b","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"5.2 KB","destSize":"7.7 KB","compressRate":"148.5%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.032.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn41@2020_2/2020/08/25/02-02-17-617_41e983a44f3d277c.webp","sourceBytes":187723,"destBytes":87894,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":8898,"convertSpendMs":38,"createdTime":"2020-08-25 10:02:09","host":"us-005*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"183.3 KB","destSize":"85.8 KB","compressRate":"46.8%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/excited/images/images.050.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn36@2020_3/2020/08/25/02-02-17-687_b5159d1801915e95.webp","sourceBytes":30442,"destBytes":19446,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1367,"convertSpendMs":57,"createdTime":"2020-08-25 10:02:17","host":"us-035*","referer":"http://www.zachleat.com/web/1m-cups-omaha/","linkMd5ListStr":"24fd181a81685ba2b1788653439d8a4c","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"29.7 KB","destSize":"19 KB","compressRate":"63.9%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/img/31380e2b-72.jpeg","sourceStatusCode":200,"destWidth":72,"destHeight":72,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn59@2020_3/2020/08/25/02-02-16-071_54f434c40bda48ca.webp","sourceBytes":1416,"destBytes":1082,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2942,"convertSpendMs":7,"createdTime":"2020-08-25 10:02:15","host":"us-039*","referer":"http://www.zachleat.com/web/1mdevs/","linkMd5ListStr":"283247e9971c1781c9a71a948edd1898","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.4 KB","destSize":"1.1 KB","compressRate":"76.4%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/css-tricks/wakamai-fondue.png","sourceStatusCode":200,"destWidth":1400,"destHeight":1092,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn23@2020_2/2020/08/25/02-02-17-737_7bc5fac74d0fbabc.webp","sourceBytes":382247,"destBytes":89238,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1621,"convertSpendMs":66,"createdTime":"2020-08-25 10:02:17","host":"us-001*","referer":"http://www.zachleat.com/web/css-tricks-web-fonts/","linkMd5ListStr":"5b883b32a8c9de12a86f6104b0a66526","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"373.3 KB","destSize":"87.1 KB","compressRate":"23.3%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.028.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn95@2020_1/2020/08/25/02-02-17-866_e7c4a940dc15db09.webp","sourceBytes":60430,"destBytes":24210,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":4535,"convertSpendMs":25,"createdTime":"2020-08-25 10:02:14","host":"us-012*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx14","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"59 KB","destSize":"23.6 KB","compressRate":"40.1%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/whmeetup/room.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":429,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn40@2020_6/2020/08/25/02-02-17-804_7dc386cbe8c2f27f.webp","sourceBytes":191379,"destBytes":67958,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1471,"convertSpendMs":24,"createdTime":"2020-08-25 10:02:17","host":"us-025*","referer":"http://www.zachleat.com/web/whitehouse/","linkMd5ListStr":"2d7f4729e0b81faaeb99688d00762170","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"186.9 KB","destSize":"66.4 KB","compressRate":"35.5%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/whmeetup/onstage.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":575,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn63@2020_3/2020/08/25/02-02-17-913_7e282b5ca85703ee.webp","sourceBytes":157930,"destBytes":37430,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1393,"convertSpendMs":50,"createdTime":"2020-08-25 10:02:17","host":"us-027*","referer":"http://www.zachleat.com/web/whitehouse/","linkMd5ListStr":"2d7f4729e0b81faaeb99688d00762170","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"154.2 KB","destSize":"36.6 KB","compressRate":"23.7%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/font-display-reflow/render-4.png","sourceStatusCode":200,"destWidth":513,"destHeight":281,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn84@2020_4/2020/08/25/02-02-17-939_6f95cd29bc8beca3.webp","sourceBytes":35293,"destBytes":8312,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1252,"convertSpendMs":23,"createdTime":"2020-08-25 10:02:17","host":"us-039*","referer":"http://www.zachleat.com/web/font-display-reflow/","linkMd5ListStr":"51855ddba2a1fafb5441f46fdd87c5f7","githubUser":"myreaderx23","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"34.5 KB","destSize":"8.1 KB","compressRate":"23.6%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/font-smooth/apple-iphone-6-grayscale.jpg","sourceStatusCode":200,"destWidth":760,"destHeight":408,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn68@2020_6/2020/08/25/02-02-17-874_30e78799124e961a.webp","sourceBytes":120247,"destBytes":42692,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1447,"convertSpendMs":24,"createdTime":"2020-08-25 10:02:17","host":"us-016*","referer":"http://www.zachleat.com/web/font-smooth/","linkMd5ListStr":"a7e81be8d36b6404c23925a032318862","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"117.4 KB","destSize":"41.7 KB","compressRate":"35.5%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/wp-content/uploads/2010/06/ISPKA4134_large.jpg","sourceStatusCode":200,"destWidth":320,"destHeight":320,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn71@2020_6/2020/08/25/02-02-18-048_af59f8b2f9a279d3.webp","sourceBytes":22418,"destBytes":13094,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1369,"convertSpendMs":7,"createdTime":"2020-08-25 10:02:17","host":"us-006*","referer":"http://www.zachleat.com/web/a-race-against-time-pickers/","linkMd5ListStr":"99464b7aa3bf3915237f29aa18acc84b","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"21.9 KB","destSize":"12.8 KB","compressRate":"58.4%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/wp-content/uploads/2010/06/pttimeselect.png","sourceStatusCode":200,"destWidth":271,"destHeight":239,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn15@2020_6/2020/08/25/02-02-18-070_227257c2735ca91c.webp","sourceBytes":8205,"destBytes":7808,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2059,"convertSpendMs":5,"createdTime":"2020-08-25 10:02:16","host":"us-023*","referer":"http://www.zachleat.com/web/a-race-against-time-pickers/","linkMd5ListStr":"99464b7aa3bf3915237f29aa18acc84b","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"8 KB","destSize":"7.6 KB","compressRate":"95.2%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.071.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn92@2020_2/2020/08/25/02-02-18-157_7c9a5e185c39e477.webp","sourceBytes":50710,"destBytes":30118,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1436,"convertSpendMs":104,"createdTime":"2020-08-25 10:02:17","host":"us-019*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"49.5 KB","destSize":"29.4 KB","compressRate":"59.4%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.067.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn87@2020_4/2020/08/25/02-02-18-142_904924c9ae3c44e5.webp","sourceBytes":143598,"destBytes":71598,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1483,"convertSpendMs":34,"createdTime":"2020-08-25 10:02:17","host":"us-029*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"140.2 KB","destSize":"69.9 KB","compressRate":"49.9%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/excited/images/images.026.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn47@2020_5/2020/08/25/02-02-18-120_f205662a99a569e9.webp","sourceBytes":275751,"destBytes":122882,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1773,"convertSpendMs":108,"createdTime":"2020-08-25 10:02:17","host":"us-003*","referer":"http://www.zachleat.com/web/1m-cups-omaha/","linkMd5ListStr":"24fd181a81685ba2b1788653439d8a4c","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"269.3 KB","destSize":"120 KB","compressRate":"44.6%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/nejsconf/nejsconf-2015@620.png","sourceStatusCode":200,"destWidth":620,"destHeight":309,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn28@2020_3/2020/08/25/02-02-18-172_b1ceaafde5649bc9.webp","sourceBytes":43759,"destBytes":9668,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1828,"convertSpendMs":9,"createdTime":"2020-08-25 10:02:17","host":"europe65*","referer":"http://www.zachleat.com/web/that-could-possibly-work/","linkMd5ListStr":"2389d1fa727cddbb7b5c60a997552fbe","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"42.7 KB","destSize":"9.4 KB","compressRate":"22.1%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/font-smooth/disabled.jpg","sourceStatusCode":200,"destWidth":400,"destHeight":531,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn96@2020_1/2020/08/25/02-02-18-194_a7d16856e81d9eab.webp","sourceBytes":104105,"destBytes":43438,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1417,"convertSpendMs":23,"createdTime":"2020-08-25 10:02:17","host":"us-008*","referer":"http://www.zachleat.com/web/font-smooth/","linkMd5ListStr":"a7e81be8d36b6404c23925a032318862","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"101.7 KB","destSize":"42.4 KB","compressRate":"41.7%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/img/fg-logo.svg","sourceStatusCode":200,"destWidth":0,"destHeight":0,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn76@2020_3/2020/08/25/02-02-18-221_2afa9ec6440f3ccf.svg","sourceBytes":3930,"destBytes":3930,"feedId":12519,"totalSpendMs":1537,"convertSpendMs":0,"createdTime":"2020-08-25 10:02:17","host":"europe69*","referer":"http://www.zachleat.com/web/filament-group/","linkMd5ListStr":"27504379fa6ba5cadb2a1d14c28f914b","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"3.8 KB","destSize":"3.8 KB","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/mittromney/complete.jpg","sourceStatusCode":200,"destWidth":800,"destHeight":463,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn94@2020_6/2020/08/25/02-02-18-306_61712e3ad83e1b5c.webp","sourceBytes":49628,"destBytes":20848,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":8332,"convertSpendMs":44,"createdTime":"2020-08-25 10:02:10","host":"us-52*","referer":"http://www.zachleat.com/web/mitt-romney-webfont-problem/","linkMd5ListStr":"4e1e863b40ad8e9fa3dbe71962c1799d","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"48.5 KB","destSize":"20.4 KB","compressRate":"42%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.099.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn24@2020_5/2020/08/25/02-02-18-364_987cefa2f532bf78.webp","sourceBytes":54305,"destBytes":34702,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":4535,"convertSpendMs":96,"createdTime":"2020-08-25 10:02:14","host":"us-003*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"53 KB","destSize":"33.9 KB","compressRate":"63.9%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/wp-content/uploads/2011/08/Screen-Shot-2011-08-08-at-9.51.41-PM.png","sourceStatusCode":200,"destWidth":277,"destHeight":366,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn80@2020_1/2020/08/25/02-02-18-306_0a623def1a22dcbe.webp","sourceBytes":38053,"destBytes":12432,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1832,"convertSpendMs":7,"createdTime":"2020-08-25 10:02:17","host":"europe-59*","referer":"http://www.zachleat.com/web/a-mobile-web-divided/","linkMd5ListStr":"237f1aec1ef9fc7dddec0f4b3fb1c69d","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"37.2 KB","destSize":"12.1 KB","compressRate":"32.7%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.011.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn55@2020_6/2020/08/25/02-02-18-286_3a3655775e8b3d17.webp","sourceBytes":38723,"destBytes":22770,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2018,"convertSpendMs":29,"createdTime":"2020-08-25 10:02:17","host":"europe-57*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"37.8 KB","destSize":"22.2 KB","compressRate":"58.8%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.101.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn7@2020_3/2020/08/25/02-02-18-632_4c7cfac9b2cfee97.webp","sourceBytes":57434,"destBytes":37352,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1348,"convertSpendMs":44,"createdTime":"2020-08-25 10:02:18","host":"us-51*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"56.1 KB","destSize":"36.5 KB","compressRate":"65%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/font-display-reflow/render-1.png","sourceStatusCode":200,"destWidth":516,"destHeight":283,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn12@2020_2/2020/08/25/02-02-18-691_c36c9493387daac4.webp","sourceBytes":38858,"destBytes":8716,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1275,"convertSpendMs":10,"createdTime":"2020-08-25 10:02:18","host":"us-031*","referer":"http://www.zachleat.com/web/font-display-reflow/","linkMd5ListStr":"51855ddba2a1fafb5441f46fdd87c5f7","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"37.9 KB","destSize":"8.5 KB","compressRate":"22.4%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/img/46efa1c5-72.jpeg","sourceStatusCode":200,"destWidth":72,"destHeight":72,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn31@2020_6/2020/08/25/02-02-18-834_d3bc3dc78a6b0bfc.webp","sourceBytes":1908,"destBytes":1674,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1084,"convertSpendMs":3,"createdTime":"2020-08-25 10:02:18","host":"us-53*","referer":"http://www.zachleat.com/web/netlify/","linkMd5ListStr":"941405ba31fceb96f990de834ee1c47e","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.9 KB","destSize":"1.6 KB","compressRate":"87.7%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.052.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn21@2020_5/2020/08/25/02-02-18-676_aea9c2eefdd824d0.webp","sourceBytes":70526,"destBytes":26264,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":8546,"convertSpendMs":58,"createdTime":"2020-08-25 10:02:11","host":"us-022*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"68.9 KB","destSize":"25.6 KB","compressRate":"37.2%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/wp-content/uploads/2007/02/hierselects2.jpg","sourceStatusCode":200,"destWidth":397,"destHeight":191,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn35@2020_3/2020/08/25/02-02-18-876_e76cf835b469964d.webp","sourceBytes":17694,"destBytes":10222,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1125,"convertSpendMs":6,"createdTime":"2020-08-25 10:02:18","host":"us-033*","referer":"http://www.zachleat.com/web/conservative-design-hierarchical-select-boxes/","linkMd5ListStr":"728758ac2e177d07ea9364302fe1999b","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"17.3 KB","destSize":"10 KB","compressRate":"57.8%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/excited/images/images.044.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn15@2020_4/2020/08/25/02-02-18-740_a00e726b14d5c48e.webp","sourceBytes":20759,"destBytes":9848,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1323,"convertSpendMs":57,"createdTime":"2020-08-25 10:02:18","host":"us-021*","referer":"http://www.zachleat.com/web/1m-cups-omaha/","linkMd5ListStr":"24fd181a81685ba2b1788653439d8a4c","githubUser":"myreaderx14","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"20.3 KB","destSize":"9.6 KB","compressRate":"47.4%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/wp-content/uploads/2010/07/Screen-shot-2010-07-19-at-9.59.49-PM.png","sourceStatusCode":200,"destWidth":722,"destHeight":524,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn46@2020_3/2020/08/25/02-02-18-792_628797232c3f0666.webp","sourceBytes":70253,"destBytes":29936,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":8550,"convertSpendMs":24,"createdTime":"2020-08-25 10:02:11","host":"us-013*","referer":"http://www.zachleat.com/web/dom-sailbloat/","linkMd5ListStr":"fdb72e8f3f8811dfc9eb4dda17f13bc8","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"68.6 KB","destSize":"29.2 KB","compressRate":"42.6%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/excited/images/images.017.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn20@2020_3/2020/08/25/02-02-18-867_d42a1ccea032d500.webp","sourceBytes":42944,"destBytes":19518,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1257,"convertSpendMs":27,"createdTime":"2020-08-25 10:02:18","host":"us-010*","referer":"http://www.zachleat.com/web/1m-cups-omaha/","linkMd5ListStr":"24fd181a81685ba2b1788653439d8a4c","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"41.9 KB","destSize":"19.1 KB","compressRate":"45.4%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/excited/images/images.043.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn51@2020_4/2020/08/25/02-02-18-503_ce5e1f70d22f7c62.webp","sourceBytes":89933,"destBytes":34430,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2254,"convertSpendMs":32,"createdTime":"2020-08-25 10:02:17","host":"europe67*","referer":"http://www.zachleat.com/web/1m-cups-omaha/","linkMd5ListStr":"24fd181a81685ba2b1788653439d8a4c","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"87.8 KB","destSize":"33.6 KB","compressRate":"38.3%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.072.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn55@2020_1/2020/08/25/02-02-19-026_218bc9440c71963a.webp","sourceBytes":20411,"destBytes":12370,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1185,"convertSpendMs":34,"createdTime":"2020-08-25 10:02:18","host":"us-55*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"19.9 KB","destSize":"12.1 KB","compressRate":"60.6%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/img/1b28bbc3-72.jpeg","sourceStatusCode":200,"destWidth":72,"destHeight":72,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn43@2020_5/2020/08/25/02-02-19-051_7e53b528737aa48e.webp","sourceBytes":1833,"destBytes":1480,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1319,"convertSpendMs":4,"createdTime":"2020-08-25 10:02:18","host":"us-012*","referer":"http://www.zachleat.com/web/filament-group/","linkMd5ListStr":"27504379fa6ba5cadb2a1d14c28f914b","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.8 KB","destSize":"1.4 KB","compressRate":"80.7%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.102.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn48@2020_5/2020/08/25/02-02-19-088_0302ee8b8805a2b0.webp","sourceBytes":128096,"destBytes":47416,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1416,"convertSpendMs":36,"createdTime":"2020-08-25 10:02:18","host":"us-001*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"125.1 KB","destSize":"46.3 KB","compressRate":"37%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/img/ed5463c1-72.jpeg","sourceStatusCode":200,"destWidth":72,"destHeight":72,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn27@2020_4/2020/08/25/02-02-19-116_dbede12eb6b078b1.webp","sourceBytes":1498,"destBytes":1262,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1506,"convertSpendMs":2,"createdTime":"2020-08-25 10:02:18","host":"europe63*","referer":"http://www.zachleat.com/web/filament-group/","linkMd5ListStr":"27504379fa6ba5cadb2a1d14c28f914b","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.5 KB","destSize":"1.2 KB","compressRate":"84.2%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/img/8f1df8f-72.jpeg","sourceStatusCode":200,"destWidth":72,"destHeight":72,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn96@2020_4/2020/08/25/02-02-19-279_5fd494354d7b0cb1.webp","sourceBytes":2152,"destBytes":2076,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1069,"convertSpendMs":3,"createdTime":"2020-08-25 10:02:18","host":"us-006*","referer":"http://www.zachleat.com/web/1mdevs/","linkMd5ListStr":"283247e9971c1781c9a71a948edd1898","githubUser":"myreaderx23","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"2.1 KB","destSize":"2 KB","compressRate":"96.5%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/excited/images/images.052.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn92@2020_1/2020/08/25/02-02-19-230_9c85c4e4484fc73e.webp","sourceBytes":31398,"destBytes":14554,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1214,"convertSpendMs":25,"createdTime":"2020-08-25 10:02:18","host":"us-016*","referer":"http://www.zachleat.com/web/1m-cups-omaha/","linkMd5ListStr":"24fd181a81685ba2b1788653439d8a4c","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"30.7 KB","destSize":"14.2 KB","compressRate":"46.4%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.046.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn72@2020_3/2020/08/25/02-02-19-251_7be372ca5dd5b94f.webp","sourceBytes":38462,"destBytes":21716,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1289,"convertSpendMs":63,"createdTime":"2020-08-25 10:02:18","host":"us-003*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"37.6 KB","destSize":"21.2 KB","compressRate":"56.5%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/critical-fonts/benchmarks.svg","sourceStatusCode":200,"destWidth":0,"destHeight":0,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn63@2020_2/2020/08/25/02-02-19-097_a95f57e1fa98d1b4.svg","sourceBytes":50914,"destBytes":50914,"feedId":12519,"totalSpendMs":1333,"convertSpendMs":0,"createdTime":"2020-08-25 10:02:18","host":"us-025*","referer":"http://www.zachleat.com/web/critical-webfonts/","linkMd5ListStr":"92548b5e72c0394fc18762e2e7dbc4bd","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"49.7 KB","destSize":"49.7 KB","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/img/17d13d5b-72.jpeg","sourceStatusCode":200,"destWidth":72,"destHeight":72,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn24@2020_2/2020/08/25/02-02-19-162_05a6fd50f2c5eea5.webp","sourceBytes":1961,"destBytes":1784,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1519,"convertSpendMs":4,"createdTime":"2020-08-25 10:02:18","host":"europe-23*","referer":"http://www.zachleat.com/web/netlify/","linkMd5ListStr":"941405ba31fceb96f990de834ee1c47e","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.9 KB","destSize":"1.7 KB","compressRate":"91%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/wp-content/uploads/2010/02/Screen-shot-2010-02-15-at-11.09.16-PM.png","sourceStatusCode":200,"destWidth":192,"destHeight":367,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn83@2020_1/2020/08/25/02-02-19-216_63437c61ff3794f3.webp","sourceBytes":31039,"destBytes":14144,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1226,"convertSpendMs":7,"createdTime":"2020-08-25 10:02:18","host":"us-037*","referer":"http://www.zachleat.com/web/if-the-menu-fitts-we-must-acquit/","linkMd5ListStr":"f9847c5aaa037c15d76aa35b45e10a30","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"30.3 KB","destSize":"13.8 KB","compressRate":"45.6%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.066.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn59@2020_1/2020/08/25/02-02-19-155_c00929ecbdba9b87.webp","sourceBytes":113366,"destBytes":55370,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1440,"convertSpendMs":33,"createdTime":"2020-08-25 10:02:18","host":"us-035*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"110.7 KB","destSize":"54.1 KB","compressRate":"48.8%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.080.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn67@2020_3/2020/08/25/02-02-19-246_822553d3bc9210ed.webp","sourceBytes":86336,"destBytes":43140,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1419,"convertSpendMs":50,"createdTime":"2020-08-25 10:02:18","host":"us-014*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"84.3 KB","destSize":"42.1 KB","compressRate":"50%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/excited/images/images.045.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn88@2020_5/2020/08/25/02-02-19-285_3233eddcda9cea41.webp","sourceBytes":61708,"destBytes":48826,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1347,"convertSpendMs":33,"createdTime":"2020-08-25 10:02:18","host":"us-027*","referer":"http://www.zachleat.com/web/1m-cups-omaha/","linkMd5ListStr":"24fd181a81685ba2b1788653439d8a4c","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"60.3 KB","destSize":"47.7 KB","compressRate":"79.1%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.047.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn3@2020_6/2020/08/25/02-02-18-967_58b1665020c806d7.webp","sourceBytes":135401,"destBytes":54098,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2315,"convertSpendMs":33,"createdTime":"2020-08-25 10:02:17","host":"europe61*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"132.2 KB","destSize":"52.8 KB","compressRate":"40%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/1mdevs/site.png","sourceStatusCode":200,"destWidth":1400,"destHeight":847,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn40@2020_4/2020/08/25/02-02-19-268_40207bb4443148b3.webp","sourceBytes":303234,"destBytes":79006,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1642,"convertSpendMs":38,"createdTime":"2020-08-25 10:02:18","host":"us-023*","referer":"http://www.zachleat.com/web/1mdevs/","linkMd5ListStr":"283247e9971c1781c9a71a948edd1898","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"296.1 KB","destSize":"77.2 KB","compressRate":"26.1%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/css-tricks/googlefonts.png","sourceStatusCode":200,"destWidth":800,"destHeight":272,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn19@2020_1/2020/08/25/02-02-19-517_e88c9b8351c9e074.webp","sourceBytes":25727,"destBytes":12200,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1163,"convertSpendMs":18,"createdTime":"2020-08-25 10:02:19","host":"us-008*","referer":"http://www.zachleat.com/web/css-tricks-web-fonts/","linkMd5ListStr":"5b883b32a8c9de12a86f6104b0a66526","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"25.1 KB","destSize":"11.9 KB","compressRate":"47.4%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.073.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn7@2020_6/2020/08/25/02-02-19-574_4f2184d7be60409a.webp","sourceBytes":20707,"destBytes":11364,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1162,"convertSpendMs":52,"createdTime":"2020-08-25 10:02:19","host":"us-039*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"20.2 KB","destSize":"11.1 KB","compressRate":"54.9%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.059.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn99@2020_4/2020/08/25/02-02-18-891_e73957b59fa0c345.webp","sourceBytes":79559,"destBytes":39446,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2549,"convertSpendMs":28,"createdTime":"2020-08-25 10:02:17","host":"europe21*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"77.7 KB","destSize":"38.5 KB","compressRate":"49.6%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.030.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn11@2020_6/2020/08/25/02-02-19-566_093d4f71709026f8.webp","sourceBytes":49498,"destBytes":30708,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1283,"convertSpendMs":25,"createdTime":"2020-08-25 10:02:19","host":"us-029*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"48.3 KB","destSize":"30 KB","compressRate":"62%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/img/3a9d1813-72.jpeg","sourceStatusCode":200,"destWidth":72,"destHeight":72,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn75@2020_3/2020/08/25/02-02-19-462_e0a7a2fa859f6313.webp","sourceBytes":2205,"destBytes":2074,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1554,"convertSpendMs":3,"createdTime":"2020-08-25 10:02:18","host":"europe67*","referer":"http://www.zachleat.com/web/origin-container-queries/","linkMd5ListStr":"9f7852323d5be88cf08514dcd23cf123","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"2.2 KB","destSize":"2 KB","compressRate":"94.1%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/img/7a8ae6e3-72.jpeg","sourceStatusCode":200,"destWidth":72,"destHeight":72,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn32@2020_2/2020/08/25/02-02-19-740_12064db2040b0cda.webp","sourceBytes":2204,"destBytes":2146,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1085,"convertSpendMs":6,"createdTime":"2020-08-25 10:02:19","host":"us-51*","referer":"http://www.zachleat.com/web/origin-container-queries/","linkMd5ListStr":"9f7852323d5be88cf08514dcd23cf123,9f7852323d5be88cf08514dcd23cf123","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"2.2 KB","destSize":"2.1 KB","compressRate":"97.4%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.103.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn15@2020_1/2020/08/25/02-02-19-596_c1ce39776581c6ce.webp","sourceBytes":81717,"destBytes":41056,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1401,"convertSpendMs":43,"createdTime":"2020-08-25 10:02:19","host":"us-019*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"79.8 KB","destSize":"40.1 KB","compressRate":"50.2%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.074.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn52@2020_4/2020/08/25/02-02-19-443_f586bc6c1ec19b16.webp","sourceBytes":30584,"destBytes":15254,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1859,"convertSpendMs":25,"createdTime":"2020-08-25 10:02:18","host":"europe65*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"29.9 KB","destSize":"14.9 KB","compressRate":"49.9%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/font-display-reflow/render-3.png","sourceStatusCode":200,"destWidth":515,"destHeight":285,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn80@2020_5/2020/08/25/02-02-19-658_3d3fb906ca28d1e2.webp","sourceBytes":38717,"destBytes":8820,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1693,"convertSpendMs":9,"createdTime":"2020-08-25 10:02:18","host":"europe-57*","referer":"http://www.zachleat.com/web/font-display-reflow/","linkMd5ListStr":"51855ddba2a1fafb5441f46fdd87c5f7","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"37.8 KB","destSize":"8.6 KB","compressRate":"22.8%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/img/d1ea4574-72.jpeg","sourceStatusCode":200,"destWidth":72,"destHeight":72,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn43@2020_4/2020/08/25/02-02-19-860_dea93cbfdfa80ff7.webp","sourceBytes":1047,"destBytes":654,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1072,"convertSpendMs":3,"createdTime":"2020-08-25 10:02:19","host":"us-010*","referer":"http://www.zachleat.com/web/netlify/","linkMd5ListStr":"941405ba31fceb96f990de834ee1c47e","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1 KB","destSize":"654 B","compressRate":"62.5%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/img/3a999723-72.jpeg","sourceStatusCode":200,"destWidth":72,"destHeight":72,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn55@2020_1/2020/08/25/02-02-19-961_fa892c5fa39f7863.webp","sourceBytes":1827,"destBytes":1670,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1087,"convertSpendMs":12,"createdTime":"2020-08-25 10:02:19","host":"us-53*","referer":"http://www.zachleat.com/web/filament-group/","linkMd5ListStr":"27504379fa6ba5cadb2a1d14c28f914b","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.8 KB","destSize":"1.6 KB","compressRate":"91.4%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.077.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn36@2020_5/2020/08/25/02-02-19-914_5be27c159320351b.webp","sourceBytes":66033,"destBytes":31628,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1369,"convertSpendMs":38,"createdTime":"2020-08-25 10:02:19","host":"us-031*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"64.5 KB","destSize":"30.9 KB","compressRate":"47.9%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.054.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn54@2020_5/2020/08/25/02-02-19-947_3f98577b6bd2eaa5.webp","sourceBytes":57884,"destBytes":45386,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":8428,"convertSpendMs":57,"createdTime":"2020-08-25 10:02:12","host":"us-009*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"56.5 KB","destSize":"44.3 KB","compressRate":"78.4%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.061.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn60@2020_2/2020/08/25/02-02-20-049_5e3f030f219aea80.webp","sourceBytes":23608,"destBytes":16076,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1245,"convertSpendMs":39,"createdTime":"2020-08-25 10:02:19","host":"us-033*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"23.1 KB","destSize":"15.7 KB","compressRate":"68.1%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/bike-lights/bikelights.jpg","sourceStatusCode":200,"destWidth":640,"destHeight":480,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn46@2020_3/2020/08/25/02-02-20-038_e5fc4ef9353c787b.webp","sourceBytes":107554,"destBytes":40744,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":8373,"convertSpendMs":21,"createdTime":"2020-08-25 10:02:12","host":"us-034*","referer":"http://www.zachleat.com/web/bike-lights/","linkMd5ListStr":"7236e308ceceb4822eb2ef1d1b0b109b","githubUser":"myreaderx23","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"105 KB","destSize":"39.8 KB","compressRate":"37.9%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/wp-content/uploads/2007/02/optionlist_all4.gif","sourceStatusCode":200,"destWidth":397,"destHeight":260,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn79@2020_6/2020/08/25/02-02-20-170_e49144c6c48f956e.webp","sourceBytes":7651,"destBytes":8490,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1086,"convertSpendMs":10,"createdTime":"2020-08-25 10:02:19","host":"us-55*","referer":"http://www.zachleat.com/web/conservative-design-option-list/","linkMd5ListStr":"84c65b30fd637c262aea54efc67deb02","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"7.5 KB","destSize":"8.3 KB","compressRate":"111%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/excited/images/images.024.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn99@2020_1/2020/08/25/02-02-19-945_e9124476fc0ebc0e.webp","sourceBytes":21683,"destBytes":10798,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1850,"convertSpendMs":26,"createdTime":"2020-08-25 10:02:19","host":"europe69*","referer":"http://www.zachleat.com/web/1m-cups-omaha/","linkMd5ListStr":"24fd181a81685ba2b1788653439d8a4c","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"21.2 KB","destSize":"10.5 KB","compressRate":"49.8%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.104.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn71@2020_4/2020/08/25/02-02-20-204_2263f7ffb306b669.webp","sourceBytes":42736,"destBytes":33580,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1307,"convertSpendMs":35,"createdTime":"2020-08-25 10:02:19","host":"us-001*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"41.7 KB","destSize":"32.8 KB","compressRate":"78.6%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/excited/images/images.015.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn39@2020_4/2020/08/25/02-02-20-151_cea4ff337838e736.webp","sourceBytes":115530,"destBytes":45268,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1528,"convertSpendMs":109,"createdTime":"2020-08-25 10:02:19","host":"us-021*","referer":"http://www.zachleat.com/web/1m-cups-omaha/","linkMd5ListStr":"24fd181a81685ba2b1788653439d8a4c","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"112.8 KB","destSize":"44.2 KB","compressRate":"39.2%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/css-tricks/features1.png","sourceStatusCode":200,"destWidth":500,"destHeight":158,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn84@2020_5/2020/08/25/02-02-20-409_887a2dd19dbadd6e.webp","sourceBytes":15532,"destBytes":7514,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1135,"convertSpendMs":6,"createdTime":"2020-08-25 10:02:20","host":"us-035*","referer":"http://www.zachleat.com/web/css-tricks-web-fonts/","linkMd5ListStr":"5b883b32a8c9de12a86f6104b0a66526","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"15.2 KB","destSize":"7.3 KB","compressRate":"48.4%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/speedlify/screenshot-1x.png","sourceStatusCode":200,"destWidth":600,"destHeight":540,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn64@2020_6/2020/08/25/02-02-20-281_9bd92499e639a8a6.webp","sourceBytes":138966,"destBytes":35926,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1458,"convertSpendMs":17,"createdTime":"2020-08-25 10:02:19","host":"us-023*","referer":"http://www.zachleat.com/web/speedlify/","linkMd5ListStr":"00a20fbfa998f90bcf59e42fa7841570","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"135.7 KB","destSize":"35.1 KB","compressRate":"25.9%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/css-tricks/features6.png","sourceStatusCode":200,"destWidth":500,"destHeight":116,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn12@2020_5/2020/08/25/02-02-20-441_2116ceff66a3da18.webp","sourceBytes":10147,"destBytes":4382,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1071,"convertSpendMs":4,"createdTime":"2020-08-25 10:02:20","host":"us-027*","referer":"http://www.zachleat.com/web/css-tricks-web-fonts/","linkMd5ListStr":"5b883b32a8c9de12a86f6104b0a66526","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"9.9 KB","destSize":"4.3 KB","compressRate":"43.2%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/img/99b155af-72.jpeg","sourceStatusCode":200,"destWidth":72,"destHeight":72,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn16@2020_2/2020/08/25/02-02-20-441_46fc36fe9f346913.webp","sourceBytes":1459,"destBytes":1126,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1074,"convertSpendMs":2,"createdTime":"2020-08-25 10:02:20","host":"us-016*","referer":"http://www.zachleat.com/web/filament-group/","linkMd5ListStr":"27504379fa6ba5cadb2a1d14c28f914b","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.4 KB","destSize":"1.1 KB","compressRate":"77.2%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/wp-content/uploads/2007/08/datatable-selected.gif","sourceStatusCode":200,"destWidth":238,"destHeight":269,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn7@2020_5/2020/08/25/02-02-20-443_b7a29f352d989bfb.webp","sourceBytes":5646,"destBytes":8678,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1132,"convertSpendMs":19,"createdTime":"2020-08-25 10:02:20","host":"us-037*","referer":"http://www.zachleat.com/web/enlarging-your-yui-datatable-in-29-seconds-or-less/","linkMd5ListStr":"4c038d5f97a8a72559a05fc4bd5b7003","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"5.5 KB","destSize":"8.5 KB","compressRate":"153.7%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/bike-lights/ledstripmulticolor.jpg","sourceStatusCode":200,"destWidth":600,"destHeight":600,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn4@2020_6/2020/08/25/02-02-20-092_dec14881bb27e9d4.webp","sourceBytes":47887,"destBytes":37940,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2161,"convertSpendMs":16,"createdTime":"2020-08-25 10:02:19","host":"europe-59*","referer":"http://www.zachleat.com/web/bike-lights/","linkMd5ListStr":"7236e308ceceb4822eb2ef1d1b0b109b","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"46.8 KB","destSize":"37.1 KB","compressRate":"79.2%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.076.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn87@2020_5/2020/08/25/02-02-20-527_2c5896b1ffd8b278.webp","sourceBytes":72847,"destBytes":36976,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1278,"convertSpendMs":31,"createdTime":"2020-08-25 10:02:20","host":"us-025*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"71.1 KB","destSize":"36.1 KB","compressRate":"50.8%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/img/959d3b4-72.jpeg","sourceStatusCode":200,"destWidth":72,"destHeight":72,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn31@2020_3/2020/08/25/02-02-20-595_e023ccecded7e4fa.webp","sourceBytes":1942,"destBytes":1770,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1104,"convertSpendMs":6,"createdTime":"2020-08-25 10:02:20","host":"us-039*","referer":"http://www.zachleat.com/web/resume-on-the-jamstack/","linkMd5ListStr":"c07cb84fd8c299e8c6710728b580b62b","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.9 KB","destSize":"1.7 KB","compressRate":"91.1%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/css-tricks/features7.png","sourceStatusCode":200,"destWidth":500,"destHeight":124,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn47@2020_5/2020/08/25/02-02-20-507_5403c829851915ad.webp","sourceBytes":14992,"destBytes":6388,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1712,"convertSpendMs":4,"createdTime":"2020-08-25 10:02:19","host":"europe-23*","referer":"http://www.zachleat.com/web/css-tricks-web-fonts/","linkMd5ListStr":"5b883b32a8c9de12a86f6104b0a66526","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"14.6 KB","destSize":"6.2 KB","compressRate":"42.6%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.037.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn19@2020_6/2020/08/25/02-02-20-683_48622b367a8cea9a.webp","sourceBytes":57412,"destBytes":37734,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1276,"convertSpendMs":27,"createdTime":"2020-08-25 10:02:20","host":"us-006*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"56.1 KB","destSize":"36.8 KB","compressRate":"65.7%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/webp/2-jpg.png","sourceStatusCode":200,"destWidth":2405,"destHeight":486,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn95@2020_5/2020/08/25/02-02-20-585_ef1d1f48aa1b8e3f.webp","sourceBytes":88724,"destBytes":68364,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1446,"convertSpendMs":72,"createdTime":"2020-08-25 10:02:20","host":"us-003*","referer":"http://www.zachleat.com/web/webp/","linkMd5ListStr":"0d7e37dfdd4fe8df107bbfaf99d752fe","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"86.6 KB","destSize":"66.8 KB","compressRate":"77.1%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.021.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn92@2020_6/2020/08/25/02-02-20-651_ded8132b1e88bccf.webp","sourceBytes":145984,"destBytes":70994,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1512,"convertSpendMs":76,"createdTime":"2020-08-25 10:02:20","host":"us-014*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"142.6 KB","destSize":"69.3 KB","compressRate":"48.6%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/webp/3-webp.png","sourceStatusCode":200,"destWidth":2276,"destHeight":484,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn24@2020_2/2020/08/25/02-02-20-376_1ecb01766b82bf47.webp","sourceBytes":88389,"destBytes":67352,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2319,"convertSpendMs":35,"createdTime":"2020-08-25 10:02:19","host":"europe21*","referer":"http://www.zachleat.com/web/webp/","linkMd5ListStr":"0d7e37dfdd4fe8df107bbfaf99d752fe","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"86.3 KB","destSize":"65.8 KB","compressRate":"76.2%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.005.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn67@2020_5/2020/08/25/02-02-20-675_d0bd03c4fdcb868c.webp","sourceBytes":204151,"destBytes":82980,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1925,"convertSpendMs":39,"createdTime":"2020-08-25 10:02:19","host":"us-012*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"199.4 KB","destSize":"81 KB","compressRate":"40.6%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/css-tricks/first-stage.png","sourceStatusCode":200,"destWidth":1306,"destHeight":546,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn44@2020_3/2020/08/25/02-02-20-837_220b12b38ed4e1ef.webp","sourceBytes":32788,"destBytes":27280,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1285,"convertSpendMs":53,"createdTime":"2020-08-25 10:02:20","host":"us-008*","referer":"http://www.zachleat.com/web/css-tricks-web-fonts/","linkMd5ListStr":"5b883b32a8c9de12a86f6104b0a66526","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"32 KB","destSize":"26.6 KB","compressRate":"83.2%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.020.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn55@2020_3/2020/08/25/02-02-20-932_2a494926f3aa8bf9.webp","sourceBytes":20657,"destBytes":12380,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1199,"convertSpendMs":46,"createdTime":"2020-08-25 10:02:20","host":"us-51*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"20.2 KB","destSize":"12.1 KB","compressRate":"59.9%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/css-tricks/features2.png","sourceStatusCode":200,"destWidth":500,"destHeight":120,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn59@2020_4/2020/08/25/02-02-20-893_2217c4f57748e3d2.webp","sourceBytes":13259,"destBytes":6102,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1184,"convertSpendMs":24,"createdTime":"2020-08-25 10:02:20","host":"us-031*","referer":"http://www.zachleat.com/web/css-tricks-web-fonts/","linkMd5ListStr":"5b883b32a8c9de12a86f6104b0a66526","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"12.9 KB","destSize":"6 KB","compressRate":"46%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/css-tricks/design-overlay.png","sourceStatusCode":200,"destWidth":800,"destHeight":484,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn36@2020_6/2020/08/25/02-02-20-900_ea287f52c97c9da7.webp","sourceBytes":163974,"destBytes":34550,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1406,"convertSpendMs":17,"createdTime":"2020-08-25 10:02:20","host":"us-029*","referer":"http://www.zachleat.com/web/css-tricks-web-fonts/","linkMd5ListStr":"5b883b32a8c9de12a86f6104b0a66526","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"160.1 KB","destSize":"33.7 KB","compressRate":"21.1%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.006.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn27@2020_3/2020/08/25/02-02-20-415_b1498ef6c1190843.webp","sourceBytes":122602,"destBytes":44474,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2484,"convertSpendMs":33,"createdTime":"2020-08-25 10:02:19","host":"europe61*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx14","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"119.7 KB","destSize":"43.4 KB","compressRate":"36.3%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/wp-content/uploads/2011/07/Screen-Shot-2011-07-26-at-10.18.51-PM.png","sourceStatusCode":200,"destWidth":271,"destHeight":363,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn75@2020_1/2020/08/25/02-02-20-788_5e8f68185aea96b3.webp","sourceBytes":39012,"destBytes":13110,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1894,"convertSpendMs":8,"createdTime":"2020-08-25 10:02:19","host":"europe65*","referer":"http://www.zachleat.com/web/a-mobile-web-divided/","linkMd5ListStr":"237f1aec1ef9fc7dddec0f4b3fb1c69d","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"38.1 KB","destSize":"12.8 KB","compressRate":"33.6%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.079.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn67@2020_6/2020/08/25/02-02-21-044_e88be965a63d6137.webp","sourceBytes":24903,"destBytes":13340,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1193,"convertSpendMs":25,"createdTime":"2020-08-25 10:02:20","host":"us-010*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"24.3 KB","destSize":"13 KB","compressRate":"53.6%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/excited/images/images.013.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn39@2020_6/2020/08/25/02-02-20-920_d147b5943a1c8320.webp","sourceBytes":78884,"destBytes":41806,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1482,"convertSpendMs":74,"createdTime":"2020-08-25 10:02:20","host":"us-019*","referer":"http://www.zachleat.com/web/1m-cups-omaha/","linkMd5ListStr":"24fd181a81685ba2b1788653439d8a4c","githubUser":"myreaderx14","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"77 KB","destSize":"40.8 KB","compressRate":"53%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/excited/images/images.028.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn64@2020_3/2020/08/25/02-02-21-055_78f83bbe5d5a86e1.webp","sourceBytes":26340,"destBytes":17544,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1310,"convertSpendMs":113,"createdTime":"2020-08-25 10:02:20","host":"us-021*","referer":"http://www.zachleat.com/web/1m-cups-omaha/","linkMd5ListStr":"24fd181a81685ba2b1788653439d8a4c","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"25.7 KB","destSize":"17.1 KB","compressRate":"66.6%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.093.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn52@2020_4/2020/08/25/02-02-20-666_f4332240ecfb25fe.webp","sourceBytes":52482,"destBytes":47506,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2185,"convertSpendMs":26,"createdTime":"2020-08-25 10:02:19","host":"europe63*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"51.3 KB","destSize":"46.4 KB","compressRate":"90.5%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/nejsconf/nejsconf-2016@620.png","sourceStatusCode":200,"destWidth":620,"destHeight":323,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn79@2020_3/2020/08/25/02-02-21-194_3621f41b93d80563.webp","sourceBytes":34317,"destBytes":8728,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1164,"convertSpendMs":14,"createdTime":"2020-08-25 10:02:20","host":"us-53*","referer":"http://www.zachleat.com/web/that-could-possibly-work/","linkMd5ListStr":"2389d1fa727cddbb7b5c60a997552fbe","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"33.5 KB","destSize":"8.5 KB","compressRate":"25.4%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/img/d38346fb-72.jpeg","sourceStatusCode":200,"destWidth":72,"destHeight":72,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn48@2020_5/2020/08/25/02-02-21-071_91d9f715db3604d2.webp","sourceBytes":795,"destBytes":466,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1513,"convertSpendMs":3,"createdTime":"2020-08-25 10:02:20","host":"europe21*","referer":"http://www.zachleat.com/web/netlify/","linkMd5ListStr":"27504379fa6ba5cadb2a1d14c28f914b,941405ba31fceb96f990de834ee1c47e","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"795 B","destSize":"466 B","compressRate":"58.6%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/img/f9bc8eac-72.jpeg","sourceStatusCode":200,"destWidth":72,"destHeight":72,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn27@2020_6/2020/08/25/02-02-21-002_54d3195f6176387c.webp","sourceBytes":2221,"destBytes":2070,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1638,"convertSpendMs":3,"createdTime":"2020-08-25 10:02:20","host":"europe-59*","referer":"http://www.zachleat.com/web/filament-group/","linkMd5ListStr":"27504379fa6ba5cadb2a1d14c28f914b","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"2.2 KB","destSize":"2 KB","compressRate":"93.2%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/css-tricks/features5.png","sourceStatusCode":200,"destWidth":500,"destHeight":134,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn83@2020_4/2020/08/25/02-02-21-211_127200c844cb9f1d.webp","sourceBytes":13207,"destBytes":5624,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1131,"convertSpendMs":6,"createdTime":"2020-08-25 10:02:20","host":"us-033*","referer":"http://www.zachleat.com/web/css-tricks-web-fonts/","linkMd5ListStr":"5b883b32a8c9de12a86f6104b0a66526","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"12.9 KB","destSize":"5.5 KB","compressRate":"42.6%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/css-tricks/features3.png","sourceStatusCode":200,"destWidth":500,"destHeight":115,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn96@2020_1/2020/08/25/02-02-21-280_748a4845d23b7f03.webp","sourceBytes":13297,"destBytes":6120,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1096,"convertSpendMs":5,"createdTime":"2020-08-25 10:02:20","host":"us-001*","referer":"http://www.zachleat.com/web/css-tricks-web-fonts/","linkMd5ListStr":"5b883b32a8c9de12a86f6104b0a66526","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"13 KB","destSize":"6 KB","compressRate":"46%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.060.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn4@2020_3/2020/08/25/02-02-20-979_7829314d9c6d721a.webp","sourceBytes":21136,"destBytes":15366,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1891,"convertSpendMs":33,"createdTime":"2020-08-25 10:02:20","host":"europe-57*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx23","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"20.6 KB","destSize":"15 KB","compressRate":"72.7%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.092.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn23@2020_4/2020/08/25/02-02-21-089_4d9065047c7f385a.webp","sourceBytes":24402,"destBytes":16782,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1859,"convertSpendMs":25,"createdTime":"2020-08-25 10:02:20","host":"europe69*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"23.8 KB","destSize":"16.4 KB","compressRate":"68.8%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/img/32c8d7a4-72.jpeg","sourceStatusCode":200,"destWidth":72,"destHeight":72,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn8@2020_3/2020/08/25/02-02-21-443_7425da9c1e339d08.webp","sourceBytes":1512,"destBytes":1184,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1063,"convertSpendMs":4,"createdTime":"2020-08-25 10:02:21","host":"us-035*","referer":"http://www.zachleat.com/web/filament-group/","linkMd5ListStr":"27504379fa6ba5cadb2a1d14c28f914b","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.5 KB","destSize":"1.2 KB","compressRate":"78.3%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.091.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn87@2020_6/2020/08/25/02-02-21-381_2b214a40b9c73921.webp","sourceBytes":57437,"destBytes":26376,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1297,"convertSpendMs":27,"createdTime":"2020-08-25 10:02:20","host":"us-023*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"56.1 KB","destSize":"25.8 KB","compressRate":"45.9%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/img/e984f372-72.jpeg","sourceStatusCode":200,"destWidth":72,"destHeight":72,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn72@2020_6/2020/08/25/02-02-21-376_1a69bbf1714bd46a.webp","sourceBytes":1724,"destBytes":1456,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1516,"convertSpendMs":3,"createdTime":"2020-08-25 10:02:20","host":"europe-23*","referer":"http://www.zachleat.com/web/origin-container-queries/","linkMd5ListStr":"9f7852323d5be88cf08514dcd23cf123","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.7 KB","destSize":"1.4 KB","compressRate":"84.5%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/img/7f8008bd-72.jpeg","sourceStatusCode":200,"destWidth":72,"destHeight":72,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn12@2020_3/2020/08/25/02-02-21-529_fa6405ca88c13a2e.webp","sourceBytes":1800,"destBytes":1548,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1111,"convertSpendMs":5,"createdTime":"2020-08-25 10:02:21","host":"us-025*","referer":"http://www.zachleat.com/web/1mdevs/","linkMd5ListStr":"283247e9971c1781c9a71a948edd1898","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.8 KB","destSize":"1.5 KB","compressRate":"86%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.063.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn51@2020_1/2020/08/25/02-02-21-265_477f5947eb24ec75.webp","sourceBytes":31934,"destBytes":15944,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1886,"convertSpendMs":23,"createdTime":"2020-08-25 10:02:20","host":"europe61*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"31.2 KB","destSize":"15.6 KB","compressRate":"49.9%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/hindsight/fixed-sticky.png","sourceStatusCode":200,"destWidth":1122,"destHeight":682,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn100@2020_3/2020/08/25/02-02-21-251_4757ff993d69759a.webp","sourceBytes":81256,"destBytes":33070,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2259,"convertSpendMs":25,"createdTime":"2020-08-25 10:02:20","host":"europe67*","referer":"http://www.zachleat.com/web/icymi/2013/","linkMd5ListStr":"e9714ba5b38b41e3d9d7e9349bc6939b","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"79.4 KB","destSize":"32.3 KB","compressRate":"40.7%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.090.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn91@2020_3/2020/08/25/02-02-21-564_04120daad0716b1d.webp","sourceBytes":86455,"destBytes":46108,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1586,"convertSpendMs":32,"createdTime":"2020-08-25 10:02:20","host":"us-012*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"84.4 KB","destSize":"45 KB","compressRate":"53.3%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.035.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn16@2020_4/2020/08/25/02-02-21-637_41961cf1c462b664.webp","sourceBytes":64820,"destBytes":27322,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1307,"convertSpendMs":66,"createdTime":"2020-08-25 10:02:21","host":"us-014*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx23","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"63.3 KB","destSize":"26.7 KB","compressRate":"42.2%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/wp-content/uploads/2009/01/gravatar-signup.png","sourceStatusCode":200,"destWidth":483,"destHeight":265,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn31@2020_6/2020/08/25/02-02-21-691_343e842bd9f546c2.webp","sourceBytes":10580,"destBytes":16550,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1190,"convertSpendMs":15,"createdTime":"2020-08-25 10:02:21","host":"us-037*","referer":"http://www.zachleat.com/web/scare-your-visitors-with-this-javascript-gravatar-plugin/","linkMd5ListStr":"889a7665bebe8a7b05b7e597ee91e063","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"10.3 KB","destSize":"16.2 KB","compressRate":"156.4%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/excited/images/images.029.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn35@2020_6/2020/08/25/02-02-21-760_4381fbd497e5f05b.webp","sourceBytes":30817,"destBytes":23260,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1215,"convertSpendMs":29,"createdTime":"2020-08-25 10:02:21","host":"us-027*","referer":"http://www.zachleat.com/web/1m-cups-omaha/","linkMd5ListStr":"24fd181a81685ba2b1788653439d8a4c","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"30.1 KB","destSize":"22.7 KB","compressRate":"75.5%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.078.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn19@2020_5/2020/08/25/02-02-21-781_a070c4b799a154f7.webp","sourceBytes":45482,"destBytes":23534,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1338,"convertSpendMs":81,"createdTime":"2020-08-25 10:02:21","host":"us-003*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"44.4 KB","destSize":"23 KB","compressRate":"51.7%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/excited/images/images.040.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn3@2020_6/2020/08/25/02-02-21-697_3a6710e9563dbe29.webp","sourceBytes":189516,"destBytes":69602,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1599,"convertSpendMs":112,"createdTime":"2020-08-25 10:02:21","host":"us-55*","referer":"http://www.zachleat.com/web/1m-cups-omaha/","linkMd5ListStr":"24fd181a81685ba2b1788653439d8a4c","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"185.1 KB","destSize":"68 KB","compressRate":"36.7%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/wp-content/uploads/2009/01/blog-comment-after.png","sourceStatusCode":200,"destWidth":484,"destHeight":266,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn43@2020_1/2020/08/25/02-02-21-893_76270bb90f360b1f.webp","sourceBytes":19670,"destBytes":9388,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1160,"convertSpendMs":7,"createdTime":"2020-08-25 10:02:21","host":"us-006*","referer":"http://www.zachleat.com/web/scare-your-visitors-with-this-javascript-gravatar-plugin/","linkMd5ListStr":"889a7665bebe8a7b05b7e597ee91e063","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"19.2 KB","destSize":"9.2 KB","compressRate":"47.7%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.062.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn39@2020_3/2020/08/25/02-02-21-835_dc20dbc6b7bfb5bd.webp","sourceBytes":56427,"destBytes":27140,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1335,"convertSpendMs":28,"createdTime":"2020-08-25 10:02:21","host":"us-016*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"55.1 KB","destSize":"26.5 KB","compressRate":"48.1%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/mittromney/foit.jpg","sourceStatusCode":200,"destWidth":800,"destHeight":463,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn56@2020_4/2020/08/25/02-02-22-086_c0c8e029b98182ae.webp","sourceBytes":47937,"destBytes":19972,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1300,"convertSpendMs":34,"createdTime":"2020-08-25 10:02:21","host":"us-039*","referer":"http://www.zachleat.com/web/mitt-romney-webfont-problem/","linkMd5ListStr":"4e1e863b40ad8e9fa3dbe71962c1799d","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"46.8 KB","destSize":"19.5 KB","compressRate":"41.7%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/bike-lights/attachment.png","sourceStatusCode":200,"destWidth":600,"destHeight":600,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn76@2020_5/2020/08/25/02-02-21-916_23aed885329535f1.webp","sourceBytes":139559,"destBytes":31470,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2257,"convertSpendMs":21,"createdTime":"2020-08-25 10:02:20","host":"europe63*","referer":"http://www.zachleat.com/web/bike-lights/","linkMd5ListStr":"7236e308ceceb4822eb2ef1d1b0b109b","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"136.3 KB","destSize":"30.7 KB","compressRate":"22.5%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/excited/images/images.041.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn60@2020_5/2020/08/25/02-02-22-332_d9af39405661dbbb.webp","sourceBytes":186049,"destBytes":96702,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1725,"convertSpendMs":48,"createdTime":"2020-08-25 10:02:21","host":"us-029*","referer":"http://www.zachleat.com/web/1m-cups-omaha/","linkMd5ListStr":"24fd181a81685ba2b1788653439d8a4c","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"181.7 KB","destSize":"94.4 KB","compressRate":"52%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/excited/images/images.014.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn99@2020_5/2020/08/25/02-02-22-219_d149a6149721a8a7.webp","sourceBytes":101868,"destBytes":56710,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2343,"convertSpendMs":35,"createdTime":"2020-08-25 10:02:21","host":"europe65*","referer":"http://www.zachleat.com/web/1m-cups-omaha/","linkMd5ListStr":"24fd181a81685ba2b1788653439d8a4c","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"99.5 KB","destSize":"55.4 KB","compressRate":"55.7%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/wp-content/uploads/2011/07/Screen-Shot-2011-07-26-at-10.31.41-PM.png","sourceStatusCode":200,"destWidth":272,"destHeight":362,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn48@2020_3/2020/08/25/02-02-22-407_8a84518affb8ccc3.webp","sourceBytes":20781,"destBytes":4294,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":1934,"convertSpendMs":5,"createdTime":"2020-08-25 10:02:21","host":"europe69*","referer":"http://www.zachleat.com/web/a-mobile-web-divided/","linkMd5ListStr":"237f1aec1ef9fc7dddec0f4b3fb1c69d","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"20.3 KB","destSize":"4.2 KB","compressRate":"20.7%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/web/img/posts/font-smooth/grayscale.jpg","sourceStatusCode":200,"destWidth":400,"destHeight":531,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn24@2020_4/2020/08/25/02-02-22-410_4cf6feb65c9f369c.webp","sourceBytes":98456,"destBytes":40752,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2321,"convertSpendMs":17,"createdTime":"2020-08-25 10:02:21","host":"europe67*","referer":"http://www.zachleat.com/web/font-smooth/","linkMd5ListStr":"a7e81be8d36b6404c23925a032318862","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"96.1 KB","destSize":"39.8 KB","compressRate":"41.4%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.007.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn51@2020_3/2020/08/25/02-02-22-898_b77d100416a44116.webp","sourceBytes":214807,"destBytes":96074,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":2662,"convertSpendMs":43,"createdTime":"2020-08-25 10:02:21","host":"europe-59*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx14","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"209.8 KB","destSize":"93.8 KB","compressRate":"44.7%"},{"code":1,"isDone":false,"source":"https://www.zachleat.com/presentations/twitter-commandments/images.107.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn28@2020_1/2020/08/25/02-02-23-102_5c2aa0c3df28f3b6.webp","sourceBytes":248672,"destBytes":108668,"targetWebpQuality":75,"feedId":12519,"totalSpendMs":3321,"convertSpendMs":118,"createdTime":"2020-08-25 10:02:21","host":"europe-57*","referer":"http://www.zachleat.com/web/twitter-guide/","linkMd5ListStr":"f5d29c8b7279e5c5f3cee357ec80b8cd","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"242.8 KB","destSize":"106.1 KB","compressRate":"43.7%"}],"successGithubMap":{"myreaderx14":12,"myreaderx8":11,"myreaderx15":11,"myreaderx7":12,"myreaderx16":11,"myreaderx6":12,"myreaderx10":12,"myreaderx32":12,"myreaderx4":12,"myreaderx3":11,"myreaderx33":11,"myreaderx11":11,"myreaderx2":11,"myreaderx12":11,"myreaderx1":11,"myreaderx13":10,"myreaderx30":12,"myreaderx31":11,"myreaderx18":10,"myreaderx19":11,"myreaderx":10,"myreaderx25":12,"myreaderx27":10,"myreaderx21":12,"myreaderx22":11,"myreaderx23":11,"myreaderx24":11,"myreaderx5oss":11,"myreaderx29":11},"failGithubMap":{}}