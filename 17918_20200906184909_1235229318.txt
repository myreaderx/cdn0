{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-09-07 02:49:09","updatedTime":"2020-09-07 02:49:09","title":"Improved CakePHP ErrorHandler","link":"https://www.dereuromark.de/?p=2652","description":"<p>Some might already know the improved error handler parts of the Tools plugin from CakePHP 2 or 3.</p>\n<p>Here I rewrite and publish those now for the 2020 CakePHP 4 scope.</p>\n<h3>Motivation</h3>\n<p>The main goal of the <code>error.log</code> is to notify about internal errors of the system. By default, there would also be a lot of noise in there, though.<br />\nMost 404s triggered should not be part of your error log, for example.<br />\nEvery single access from bots or outdated links into your web app would be in that same <code>error.log</code>.<br />\nThis cloaks the actual errors happening that require fixing.<br />\nWith bots trying a lot of combinations or URLs, this can easily become a bigger problem.</p>\n<p>You can either completely ignore them using the ignore list of <code>skipLog</code> to silence, or better yet put them into their own space (file).<br />\nThe latter allows you to at least look through them once in a while and find certain patterns.<br />\nFor example, you could have switched over some URLs but forgot to put 301 redirects in place, that could be an improvement for search engines to<br />\nlink to the new content.</p>\n<p>So now let&#8217;s see how we can separate 404s from actual errors.</p>\n<h3>Usage</h3>\n<p>In our app.php we first want to introduce the new log type:</p>\n<pre><code class=\"language-php\">    'Log' =&#62; [\n        'debug' =&#62; [\n            'scopes' =&#62; false,\n        ],\n        'error' =&#62; [\n            'scopes' =&#62; false,\n        ],\n        '404' =&#62; [\n            'className' =&#62; 'File',\n            'file' =&#62; '404',\n            'levels' =&#62; ['error'],\n            'scopes' =&#62; ['404'],\n        ],\n    ],\n</code></pre>\n<p>Note how I also made sure the existing types &#34;error&#34; and &#34;debug&#34; are scoped to false to prevent those errors to be logged twice.</p>\n<p>Now we want to replace the core error handling with the improved one of the <a href=\"https://github.com/dereuromark/cakephp-tools\">Tools</a> plugin.<br />\nMake sure the plugin is installed, and that you follow the <a href=\"https://github.com/dereuromark/cakephp-tools/blob/master/docs/Error/ErrorHandler.md\">docs</a>.</p>\n<p>In your <code>config/bootstrap.php</code> you need to load the improved ErrorHandler now by switching the use statements:</p>\n<pre><code class=\"language-php\">// Switch Cake\\Error\\ErrorHandler to\nuse Tools\\Error\\ErrorHandler;\n\n    ...\n    (new ErrorHandler(Configure::read('Error')))-&#62;register();\n</code></pre>\n<p>And in your <code>src/Application.php</code>, the same for the middleware:</p>\n<pre><code class=\"language-php\">use Cake\\Http\\BaseApplication;\n// Switch Cake\\Error\\Middleware\\ErrorHandlerMiddleware to\nuse Tools\\Error\\Middleware\\ErrorHandlerMiddleware;\n\n    ...\n    -&#62;add(new ErrorHandlerMiddleware())\n</code></pre>\n<p>These two will automatically switch the ErrorLogger now to the one that can properly reassign those 404s.</p>\n<p>It is important to note that any 404 that is caused by an internal link is still treated as normal error though.<br />\nSo if you link from your own website to a dead link on that same page, the &#34;referer&#34; here indicates that this is not<br />\nan issue invoked from the outside and thus also something you need to fix.</p>\n<h3>Switching logger</h3>\n<p>You can still switch the logger here if you want to get rid of files.<br />\nThis is highly recommended once you have left the stage of testing/experimenting.<br />\nFiles are hard to read/filter, and they are bound to the server itself.</p>\n<p>One easy to use option is the <a href=\"https://github.com/dereuromark/CakePHP-DatabaseLog\">DatabaseLog</a> plugin that stores them in an SQLite or an actual database (e.g. Mysql/Postgres).<br />\nThe logs become filterable, duplicates can be cleaned up easily and you got more control over certain errors/issues triggering notifications.<br />\nSo you can, for example, listen for certain errors and send out emails asynchronously to you where needed. This way you get alerted right away over certain critical issues.</p>\n<p>We just have to switch out the class name here, once the plugin is installed:</p>\n<pre><code class=\"language-php\">    'Log' =&#62; [\n        'debug' =&#62; [\n            'scopes' =&#62; false,\n            'className' =&#62; 'DatabaseLog.Database',\n        ],\n        'error' =&#62; [\n            'scopes' =&#62; false,\n            'className' =&#62; 'DatabaseLog.Database',\n        ],\n        '404' =&#62; [\n            'className' =&#62; 'DatabaseLog.Database',\n            'file' =&#62; '404',\n            'levels' =&#62; ['error'],\n            'scopes' =&#62; ['404'],\n        ],\n    ],\n</code></pre>\n<p>Tip: You can test all that with the <a href=\"https://sandbox.dereuromark.de/\">Sandbox app</a> and the downloadable source code.</p>\n<h4>Other loggers</h4>\n<p>Of course, you can also look into other even more sophisticated ways of storing logs, e.g. using Monolog and Logstash.<br />\nThose will become necessary once you reach a certain amount of logs coming in.</p>\n<p>Until then the database log solution could suffice as a good tradeoff.</p>\n","descriptionType":"html","publishedDate":"Thu, 30 Apr 2020 23:13:43 +0000","feedId":17918,"bgimg":"","linkMd5":"31232c0064daebeec2a4af0180cf5cef","bgimgJsdelivr":"","metaImg":"","author":"Mark","publishedOrCreatedDate":1599418149681}],"record":{"createdTime":"2020-09-07 02:49:09","updatedTime":"2020-09-07 02:49:09","feedId":17918,"fetchDate":"Sun, 06 Sep 2020 18:49:09 +0000","fetchMs":1304,"handleMs":33201,"totalMs":34513,"newArticles":0,"totalArticles":10,"status":1,"type":0,"ip":"cf7008b10d948b7b6bed90b34d211f67","hostName":"us-022*","requestId":"9d0b18e5fb9d4f079af00fc0f7a13961_17918","contentType":"application/rss+xml; charset=UTF-8","totalBytes":0,"bgimgsTotal":0,"bgimgsGithubTotal":0,"articlesImgsTotal":0,"articlesImgsGithubTotal":0,"successGithubMap":{},"failGithubMap":{}},"feed":{"createdTime":"2020-09-07 02:16:17","updatedTime":"2020-09-07 02:16:17","id":17918,"name":"DerEuroMark","url":"http://www.dereuromark.de/feed/","subscriber":185,"website":null,"icon":"https://www.dereuromark.de/favicon.ico","icon_jsdelivr":null,"description":"A blog about Frameworks (CakePHP), MVC, Snippets, Tips and more","weekly":null,"link":"https://www.dereuromark.de"},"noPictureArticleList":[],"tmpCommonImgCdnBytes":0,"tmpBodyImgCdnBytes":0,"tmpBgImgCdnBytes":0,"extra4":{"start":1599418115175,"total":0,"statList":[{"spend":1305,"msg":"获取xml内容"},{"spend":33201,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"正文链接上传到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"}]},"extra5":0,"extra6":0,"extra7ImgCdnFailResultVector":[],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{},"extra12ImgCdnSuccessResultVector":[],"successGithubMap":{},"failGithubMap":{}}