{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2021-09-30 22:33:03","updatedTime":"2021-09-30 22:33:03","title":"MySQL，在线热备的内核原理！","link":"http://weixin.sogou.com/weixin?type=2&query=%E6%9E%B6%E6%9E%84%E5%B8%88%E4%B9%8B%E8%B7%AF+MySQL%EF%BC%8C%E5%9C%A8%E7%BA%BF%E7%83%AD%E5%A4%87%E7%9A%84%E5%86%85%E6%A0%B8%E5%8E%9F%E7%90%86%EF%BC%81","description":"<div><div><div id=\"media\" class=\"rich_media_thumb_wrp\">\n\n            <img class=\"rich_media_thumb\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/sz_mmbiz_jpg/YrezxckhYOzML1zT8F3WpxbNXQCmyASMBz1VmhcPxmxuTE2cLBciaJaoS1tcicshCibqp6cwKmbtkcBDrcZPdtcHA/0?wx_fmt=jpeg?imageView2/1/w/600\">\n        </div>\n    \n\n    \n\n    <div class=\"rich_media_content\" id=\"js_content\">\n                    \n\n                    \n                    \n                    \n                    <blockquote class=\"js_blockquote_wrap\" data-type=\"2\" data-url=\"\" data-author-name=\"\" data-content-utf8-length=\"57\" data-source-title=\"\" data-mpa-powered-by=\"yiban.io\"><section class=\"js_blockquote_digest\"><section><em>这是一篇关于MySQL数据库，redo log，LSN，崩溃恢复，在线热备的长文，耐心读完，如果没有收获，可以捶我。</em></section></section></blockquote><p><br></p><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">研发的童鞋每次对MySQL库表做重大操作之前，例如：</span><br></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">（1）修改表结构；</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">（2）批量修改或者删除数据；</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">都会向DBA申请进行数据库的备份。</span></section><section style=\"line-height: 1.75em;\"><span style=\"color: rgb(0, 128, 255);\"><em><span style=\"color: rgb(0, 128, 255);font-size: 15px;letter-spacing: 1px;\">画外音：又或者说，不备份直接操作啦？</span></em></span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\"><br></span></section><section style=\"line-height: 1.75em;\"><strong><span style=\"font-size: 15px;letter-spacing: 1px;\">那DBA童鞋是怎么进行MySQL备份的呢</span></strong><span style=\"font-size: 15px;letter-spacing: 1px;\">？</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\"><br></span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">调研了几十个RD和QA，基本是3种答案：</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">（1）不太清楚；</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">（2）</span><span style=\"font-size: 15px;letter-spacing: 1px;color: rgb(255, 76, 0);\">在线逻辑备份</span><span style=\"font-size: 15px;letter-spacing: 1px;\">，mysqldump；</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">（3）</span><span style=\"font-size: 15px;letter-spacing: 1px;color: rgb(255, 76, 0);\">离线物理备份（冷备）</span><span style=\"font-size: 15px;letter-spacing: 1px;\">，拷贝从库库文件；</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\"><br></span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">那实际上，<strong>DBA是如何对MySQL进行库备份的呢？</strong></span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">现在基本上使用的是</span><span style=\"color: rgb(255, 76, 0);font-size: 15px;letter-spacing: 1px;\">PXB方案</span><span style=\"font-size: 15px;letter-spacing: 1px;\">。</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\"><br></span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">今天，和大家说说MySQL备份的来龙去脉，以及内核原理。</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\"><br></span></section><section style=\"line-height: 1.75em;\"><strong><span style=\"font-size: 15px;letter-spacing: 1px;\">在线逻辑备份，mysqldump是咋回事？</span></strong><span style=\"font-size: 15px;letter-spacing: 1px;\"></span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">mysqldump是MySQL工具集中的一个工具，可以用来导出或备份数据。</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\"><br></span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">mysqldump的产出物是一个包含了建表，插入数据的SQL语句集合，类似于这样：</span></section><p style=\"line-height: normal;\"><span style=\"color: rgb(0, 128, 255);\"><em><span style=\"letter-spacing: 1px;font-size: 12px;\">-- MySQL dump 1.2.3</span></em></span></p><p style=\"line-height: normal;\"><span style=\"color: rgb(0, 128, 255);\"><em><span style=\"letter-spacing: 1px;font-size: 12px;\">-- Host: localhost Database: test</span></em></span></p><p style=\"line-height: normal;\"><span style=\"color: rgb(0, 128, 255);\"><em><span style=\"letter-spacing: 1px;font-size: 12px;\">-- Server version 4.5.6</span></em></span></p><p style=\"line-height: normal;\"><span style=\"color: rgb(0, 128, 255);\"><em><span style=\"letter-spacing: 1px;font-size: 12px;\"><br></span></em></span></p><p style=\"line-height: normal;\"><span style=\"color: rgb(0, 128, 255);\"><em><span style=\"letter-spacing: 1px;font-size: 12px;\">CREATE TABLE t_user (</span></em></span></p><p style=\"line-height: normal;\"><span style=\"color: rgb(0, 128, 255);\"><em><span style=\"letter-spacing: 1px;font-size: 12px;\"> id int(11)NOT NULL unique,</span></em></span></p><p style=\"line-height: normal;\"><span style=\"color: rgb(0, 128, 255);\"><em><span style=\"letter-spacing: 1px;font-size: 12px;\"> name varchar(40) NOT NULL default '',</span></em></span></p><p style=\"line-height: normal;\"><span style=\"color: rgb(0, 128, 255);\"><em><span style=\"letter-spacing: 1px;font-size: 12px;\"> PRIMARY KEY  (id)</span></em></span></p><p style=\"line-height: normal;\"><span style=\"color: rgb(0, 128, 255);\"><em><span style=\"letter-spacing: 1px;font-size: 12px;\">);</span></em></span></p><p style=\"line-height: normal;\"><span style=\"color: rgb(0, 128, 255);\"><em><span style=\"letter-spacing: 1px;font-size: 12px;\"><br></span></em></span></p><p style=\"line-height: normal;\"><span style=\"color: rgb(0, 128, 255);\"><em><span style=\"letter-spacing: 1px;font-size: 12px;\">INSERT INTO t_user VALUES (1,'shenjian');</span></em></span></p><p style=\"line-height: normal;\"><span style=\"color: rgb(0, 128, 255);\"><em><span style=\"letter-spacing: 1px;font-size: 12px;\">INSERT INTO t_user VALUES (2,'zhangsan');</span></em></span></p><p style=\"line-height: normal;\"><span style=\"color: rgb(0, 128, 255);\"><em><span style=\"letter-spacing: 1px;font-size: 12px;\">INSERT INTO t_user VALUES (3,'lisi');</span></em></span></p><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\"><br></span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">因此，它才称为</span><span style=\"font-size: 15px;letter-spacing: 1px;color: rgb(255, 76, 0);\">逻辑备份</span><span style=\"font-size: 15px;letter-spacing: 1px;\">。</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\"><br></span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">使用mysqldump进行备份的<strong>优点</strong>是：可以在线进行，不影响数据库对线上持续提供服务。</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\"><br></span></section><section style=\"line-height: 1.75em;\"><strong><span style=\"font-size: 15px;letter-spacing: 1px;\">缺点</span></strong><span style=\"font-size: 15px;letter-spacing: 1px;\">也显而易见：相比物理备份拷贝库文件，备份和恢复都要慢非常多。</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\"><br></span></section><section style=\"line-height: 1.75em;\"><strong><span style=\"font-size: 15px;letter-spacing: 1px;\">离线物理备份，拷贝从库库文件又是咋回事？</span></strong></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">为了提高备份效率，缩短备份时间，这也就引发了第二种方案，直接物理备份库文件。</span></section><p style=\"text-align: center;\"><img class=\"rich_pages wxw-img\" data-galleryid=\"\" data-ratio=\"0.4269005847953216\" data-s=\"300,640\" data-type=\"png\" data-w=\"342\" style=\"max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/sz_mmbiz_png/YrezxckhYOzML1zT8F3WpxbNXQCmyASMq6EH7CZGXgViaSfsLfqDRLeoykLs34vck33NsBSqMQruaLM8bjaqRng/640?wx_fmt=png\"></p><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">如上图所示，数据库集群设置为左侧的1主2从架构，<strong>离线物理备份是如何实施的呢？</strong></span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">（1）第一步，将一个从库从集群里摘下并下线，此时离线库文件不会再发生变化；</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">（2）第二步，scp拷贝库文件，即完成了库的物理备份；</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">（3）文件拷贝完成后，将从库挂回集群；</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\"><br></span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">使用离线物理备份的<strong>优点</strong>是：备份和恢复都非常快。</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\"><br></span></section><section style=\"line-height: 1.75em;\"><strong><span style=\"font-size: 15px;letter-spacing: 1px;\">缺点</span></strong><span style=\"font-size: 15px;letter-spacing: 1px;\">也显而易见：备份过程中从库无法对线上持续提供服务。</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\"><br></span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">那么问题来了，<strong>有没有一种方案，又能够快速备份物理文件，又能够持续对线上提供服务呢？</strong></span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">这就是如今MySQL备份最流行的PXB方案。</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\"><br></span></section><section style=\"line-height: 1.75em;\"><strong><span style=\"font-size: 15px;letter-spacing: 1px;\">什么是PXB？</span></strong><span style=\"font-size: 15px;letter-spacing: 1px;\"></span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">PXB的全称是，</span><span style=\"letter-spacing: 1px;font-size: 12px;\">Percona XtraBackup</span><span style=\"font-size: 15px;letter-spacing: 1px;\">，官网是这么吹的：PXB是全世界唯一一款开源免费的，支持MySQL热备的，非阻塞备份工具。</span></section><p style=\"line-height: normal;\"><span style=\"color: rgb(0, 128, 255);\"><em><span style=\"color: rgb(0, 128, 255);font-size: 15px;letter-spacing: 1px;\">画外音：</span></em></span><span style=\"color: rgb(0, 128, 255);font-size: 12px;\"><em><span style=\"color: rgb(0, 128, 255);letter-spacing: 1px;\">Percona XtraBackup is the world’s only open-source, free MySQL hotbackup software that performs non-blocking backups tool.</span></em></span></p><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\"><br></span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">那么，PXB是如何实现：</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">（1）保持数据库持续提供线上服务，库文件不断变化时；</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">（2）通过MySQL文件；</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">（3）来进行库文件物理热备份的呢？</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\"><br></span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">为了把问题讲透，这就要从redo log，从LSN，从MySQL的故障恢复</span><span style=\"letter-spacing: 1px;font-size: 12px;\">(crash-recovery)</span><span style=\"font-size: 15px;letter-spacing: 1px;\">机制聊起。</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\"><br></span></section><section style=\"line-height: 1.75em;\"><strong><span style=\"font-size: 15px;letter-spacing: 1px;\">一、redo log</span></strong></section><section style=\"line-height: 1.75em;\"><strong><span style=\"font-size: 15px;letter-spacing: 1px;\"><br></span></strong></section><section style=\"line-height: 1.75em;\"><strong><span style=\"font-size: 15px;letter-spacing: 1px;\">为什么要有redo log？</span></strong></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">事务提交后，必须将事务对数据页的修改刷</span><span style=\"letter-spacing: 1px;font-size: 12px;\">(fsync)</span><span style=\"font-size: 15px;letter-spacing: 1px;\">到磁盘上，才能保证事务的ACID特性。</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\"><br></span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">这个刷盘，是一个随机写，随机写性能较低，如果每次事务提交都刷盘，会极大影响数据库的性能。</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\"><br></span></section><section style=\"line-height: 1.75em;\"><strong><span style=\"font-size: 15px;letter-spacing: 1px;\">随机写性能差，有什么优化方法呢？</span></strong><span style=\"font-size: 15px;letter-spacing: 1px;\"></span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">架构设计中有两个常见的优化方法：</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">（1）先写日志</span><span style=\"letter-spacing: 1px;font-size: 12px;\">(write log first)</span><span style=\"font-size: 15px;letter-spacing: 1px;\">，</span><span style=\"font-size: 15px;letter-spacing: 1px;color: rgb(255, 76, 0);\">将随机写优化为顺序写</span><span style=\"font-size: 15px;letter-spacing: 1px;\">；</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">（2）</span><span style=\"font-size: 15px;letter-spacing: 1px;color: rgb(255, 76, 0);\">将每次写优化为批量写</span><span style=\"font-size: 15px;letter-spacing: 1px;\">；</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">这两个优化，数据库都用上了。</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\"><br></span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">第一个优化，将对数据的修改先顺序写到日志里，这个日志就是redo log。</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">第二个优化，就是redo log的三层架构：</span></section><p style=\"text-align: center;\"><img class=\"rich_pages wxw-img\" data-galleryid=\"\" data-ratio=\"0.7545691906005222\" data-s=\"300,640\" data-type=\"png\" data-w=\"383\" style=\"max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/sz_mmbiz_png/YrezxckhYOzML1zT8F3WpxbNXQCmyASMCcHetricWt9ibdSocGt4HLOjIa4WW3p6zKvzWFN9W0Z6ZXa253DwRdgQ/640?wx_fmt=png\"></p><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">（1）log buffer：应用层缓冲；</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">（2）OS cache：操作系统缓存；</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">（3）redo log file：物理文件；</span></section><section style=\"line-height: 1.75em;\"><span style=\"color: rgb(0, 128, 255);\"><em><span style=\"color: rgb(0, 128, 255);font-size: 15px;letter-spacing: 1px;\">画外音：此处不是本文的重点，不再展开详述。</span></em></span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\"><br></span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">假如某一时刻，数据库崩溃，还没来得及将数据页刷盘，数据库重启时，会重做redo log里的内容，以保证已提交事务对数据的影响被刷到磁盘上。</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\"><br></span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">一句话，</span><span style=\"font-size: 15px;letter-spacing: 1px;color: rgb(255, 76, 0);\">redo log是为了保证已提交事务的ACID特性，同时能够提高数据库性能的技术。</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\"><br></span></section><section style=\"line-height: 1.75em;\"><strong><span style=\"font-size: 15px;letter-spacing: 1px;\">二、redo log的格式</span></strong></section><section style=\"line-height: 1.75em;\"><strong><span style=\"font-size: 15px;letter-spacing: 1px;\"><br></span></strong></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">逻辑上，MySQL以行</span><span style=\"letter-spacing: 1px;font-size: 12px;\">(row)</span><span style=\"font-size: 15px;letter-spacing: 1px;\">为单位管理数据；物理上，MySQL以页</span><span style=\"letter-spacing: 1px;font-size: 12px;\">(page)</span><span style=\"font-size: 15px;letter-spacing: 1px;\">为单位管理数据，MySQL的缓冲池</span><span style=\"letter-spacing: 1px;font-size: 12px;\">(buffer)</span><span style=\"font-size: 15px;letter-spacing: 1px;\">机制，也是以页为单位管理数据，事务提交之后，不用每次都随机写落盘刷新数据页，而是通过顺序写redo log来提高性能，那么<strong>redo log是直接保存等待刷盘的数据页吗？</strong></span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\"><br></span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">如果redo log直接保存待刷盘的数据页，存在这样的问题，假如某个SQL语句只修改了一行记录里的一个属性，例如：</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 12px;\"><em><span style=\"letter-spacing: 1px;\">update set sex=1 where name='shenjian'</span></em></span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">物理上，<strong>其实只修改了1个字节，难道redo log要将这个属性所在的一页数据(16K)全部保存下来吗？</strong></span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\"><br></span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">完全不用，redo log只需要记录：</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">（1）某个数据页中</span><span style=\"font-size: 12px;\"><span style=\"letter-spacing: 1px;\">(</span><span style=\"letter-spacing: 1px;color: rgb(255, 76, 0);\">page num</span><span style=\"letter-spacing: 1px;\">)</span></span><span style=\"font-size: 15px;letter-spacing: 1px;\">；</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">（2）某个某个偏移位置</span><span style=\"font-size: 12px;\"><span style=\"letter-spacing: 1px;\">(</span><span style=\"letter-spacing: 1px;color: rgb(255, 76, 0);\">offset</span><span style=\"letter-spacing: 1px;\">)</span></span><span style=\"font-size: 15px;letter-spacing: 1px;\">；</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">（3）某个类型的数据</span><span style=\"font-size: 12px;\"><span style=\"letter-spacing: 1px;\">(</span><span style=\"letter-spacing: 1px;color: rgb(255, 76, 0);\">type</span><span style=\"letter-spacing: 1px;\">)</span></span><span style=\"font-size: 15px;letter-spacing: 1px;\">；</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">（4）改成了什么值</span><span style=\"font-size: 12px;\"><span style=\"letter-spacing: 1px;\">(</span><span style=\"letter-spacing: 1px;color: rgb(255, 76, 0);\">value</span><span style=\"letter-spacing: 1px;\">)</span></span><span style=\"font-size: 15px;letter-spacing: 1px;\">；</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\"><br></span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">如此一来，redo log既能够实现以页为单位顺序刷盘数据，又极大缩小了日志大小，其性能又进一步的增加了。</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\"><br></span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 12px;\"><em><span style=\"letter-spacing: 1px;\">update set sex=1 where name='shenjian'</span></em></span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">仍以这个SQL为例，假设它修改了第1234页，偏移量为5678处，1个字节的数据，这个字节的sex由0改成了1，那么，很容易想到redo log是类似于这样的一个结构：</span></section><p style=\"text-align: center;\"><img class=\"rich_pages wxw-img\" data-galleryid=\"\" data-ratio=\"0.5359116022099447\" data-s=\"300,640\" data-type=\"png\" data-w=\"362\" style=\"max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/sz_mmbiz_png/YrezxckhYOzML1zT8F3WpxbNXQCmyASMTEfeoQMrczzluhOlan1ExbFkcZRpkQq93Ew42ysDHkAWB7Q2wHCE6g/640?wx_fmt=png\"></p><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">如此一来，当数据库崩溃的时候，如果缓冲池中的数据没有来得及刷盘，就可以通过redo log，把第1234页，偏移量为5678处的1个字节改为1，以此来恢复数据。</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\"><br></span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">当然，MySQL会通过一系列的数据结构对redo log来进行管理，最小单位的redo log是一个512字节的数据块</span><span style=\"letter-spacing: 1px;font-size: 12px;\">(block)</span><span style=\"font-size: 15px;letter-spacing: 1px;\">，这个数块由12字节的header，508字节的body，4字节的trailer组成，body里保存的就是上述数据页如何进行修改的记录。</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\"><br></span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">记录redo log的文件有若干个，每个都固定大小，循环使用。</span></section><section style=\"line-height: 1.75em;\"><span style=\"color: rgb(0, 128, 255);\"><em><span style=\"color: rgb(0, 128, 255);font-size: 15px;letter-spacing: 1px;\">画外音：为了使得行文通俗易懂，本文尽量没有提及</span></em></span><span style=\"color: rgb(0, 128, 255);font-size: 12px;\"><em><span style=\"color: rgb(0, 128, 255);letter-spacing: 1px;\">Mini-Transaction(mtr)</span></em></span><span style=\"color: rgb(0, 128, 255);\"><em><span style=\"color: rgb(0, 128, 255);font-size: 15px;letter-spacing: 1px;\">的概念。</span></em></span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\"><br></span></section><section style=\"line-height: 1.75em;\"><strong><span style=\"font-size: 15px;letter-spacing: 1px;\">三、LSN</span></strong><span style=\"font-size: 15px;letter-spacing: 1px;\"></span></section><section style=\"line-height: 1.75em;\"><strong><span style=\"font-size: 15px;letter-spacing: 1px;\"><br></span></strong></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">要聊redo log，要聊故障恢复，LSN是一个绕不开的概念。</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\"><br></span></section><section style=\"line-height: 1.75em;\"><strong><span style=\"font-size: 15px;letter-spacing: 1px;\">什么是LSN？</span></strong><span style=\"font-size: 15px;letter-spacing: 1px;\"></span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">LSN，</span><span style=\"letter-spacing: 1px;font-size: 12px;\">Log Sequeue Number</span><span style=\"font-size: 15px;letter-spacing: 1px;\">，直译过来叫<strong>日志序列号</strong>，是InnoDB中，随着日志的写入，一个只增不减的8字节序列号。</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\"><br></span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">听上去叫日志序列号，但LSN并不只存在redo log中，它还存储在数据页里。</span></section><section style=\"line-height: 1.75em;\"><span style=\"color: rgb(0, 128, 255);\"><em><span style=\"color: rgb(0, 128, 255);font-size: 15px;letter-spacing: 1px;\">画外音：缓冲池中的数据页，磁盘上的数据页都存储了LSN。</span></em></span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\"><br></span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">数据页(page)里存储的LSN，可以用来标记数据页的“版本号”，记录该数据页最后一次被修改的日志序列的位置。</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\"><br></span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">举个例子，假设逻辑上连续执行了两个事物，且都已经提交：</span></section><p style=\"line-height: normal;\"><span style=\"font-size: 12px;\"><em><span style=\"letter-spacing: 1px;\">trx1:</span></em></span></p><p style=\"line-height: normal;\"><span style=\"font-size: 12px;\"><em><span style=\"letter-spacing: 1px;\">update set sex=0 where name='shenjian'</span></em></span></p><p style=\"line-height: normal;\"><span style=\"font-size: 12px;\"><em><span style=\"letter-spacing: 1px;\">        redolog lsn=1000</span></em></span></p><p style=\"line-height: normal;\"><span style=\"font-size: 12px;\"><em><span style=\"letter-spacing: 1px;\">trx2:</span></em></span></p><p style=\"line-height: normal;\"><span style=\"font-size: 12px;\"><em><span style=\"letter-spacing: 1px;\">update set sex=1 where name='shenjian'</span></em></span></p><p style=\"line-height: normal;\"><span style=\"font-size: 12px;\"><em><span style=\"letter-spacing: 1px;\">        redolog lsn=1001</span></em></span></p><section style=\"line-height: 1.75em;\"><span style=\"color: rgb(0, 128, 255);\"><em><span style=\"color: rgb(0, 128, 255);font-size: 15px;letter-spacing: 1px;\">画外音：lsn增加了。</span></em></span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\"><br></span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">又假设，第一个事务trx1已经刷盘，而第二个事务trx2还没有刷盘，只写了redo log。</span></section><section style=\"line-height: 1.75em;\"><span style=\"color: rgb(0, 128, 255);\"><em><span style=\"color: rgb(0, 128, 255);font-size: 15px;letter-spacing: 1px;\">画外音：最近一次刷盘的页，即最近一次检查点(checkpoint)，也是通过LSN来记录的，它也会被写入redo log里。</span></em></span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\"><br></span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">这两个事务修改的是同一个数据页，很容易想到：</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">磁盘数据页上的LSN=1000</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\"><br></span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">而redo log里有两条记录：</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">第一条，redo log lsn=1000</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">第二条，redo log lsn=1001</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\"><br></span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">为了提高数据库性能，数据库基本都是使用</span><span style=\"letter-spacing: 1px;font-size: 12px;\">WAL(Write Ahead Log)</span><span style=\"font-size: 15px;letter-spacing: 1px;\">的方式，先写日志再刷盘，所以很容易能够想到，磁盘数据页里的LSN，会小于最新redo log中的LSN。</span></section><section style=\"line-height: 1.75em;\"><span style=\"color: rgb(0, 128, 255);\"><em><span style=\"color: rgb(0, 128, 255);font-size: 15px;letter-spacing: 1px;\">画外音：此时，redo log中记录的checkpoint也是1000。</span></em></span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\"><br></span></section><section style=\"line-height: 1.75em;\"><strong><span style=\"font-size: 15px;letter-spacing: 1px;\">LSN有什么用呢？</span></strong><span style=\"font-size: 15px;letter-spacing: 1px;\"></span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">它和MySQL的故障恢复</span><span style=\"letter-spacing: 1px;font-size: 12px;\">(crash-recovery)</span><span style=\"font-size: 15px;letter-spacing: 1px;\">机制紧密相关。</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\"><br></span></section><section style=\"line-height: 1.75em;\"><strong><span style=\"font-size: 15px;letter-spacing: 1px;\">四、InnoDB故障恢复</span></strong><span style=\"font-size: 13px;\"><strong><span style=\"letter-spacing: 1px;\">(crash-recovery)</span></strong></span><span style=\"font-size: 15px;letter-spacing: 1px;\"></span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 13px;\"><strong><span style=\"letter-spacing: 1px;\"><br></span></strong></span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">这里的故障恢复，是指MySQL非正常退出，然后再次启动之前，要恢复数据一致性的操作。</span></section><section style=\"line-height: 1.75em;\"><span style=\"color: rgb(0, 128, 255);\"><em><span style=\"color: rgb(0, 128, 255);font-size: 15px;letter-spacing: 1px;\">画外音：可能直译叫崩溃恢复更准确一些。</span></em></span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\"><br></span></section><section style=\"line-height: 1.75em;\"><strong><span style=\"font-size: 15px;letter-spacing: 1px;\">InnoDB的崩溃恢复过程是怎么样的？</span></strong><span style=\"font-size: 15px;letter-spacing: 1px;\"></span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">主要分为四个步骤：</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">第一步，</span><span style=\"font-size: 15px;letter-spacing: 1px;color: rgb(255, 76, 0);\">redo log操作</span><span style=\"font-size: 15px;letter-spacing: 1px;\">：保证已提交事务影响的最新数据刷到数据页里。</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\"><br></span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">第二步，</span><span style=\"font-size: 15px;letter-spacing: 1px;color: rgb(255, 76, 0);\">undo log操作</span><span style=\"font-size: 15px;letter-spacing: 1px;\">：保证未提交事务影响的数据页回滚。</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\"><br></span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">第三步，</span><span style=\"font-size: 15px;letter-spacing: 1px;color: rgb(255, 76, 0);\">写缓冲</span><span style=\"letter-spacing: 1px;color: rgb(255, 76, 0);font-size: 12px;\">(change buffer)</span><span style=\"font-size: 15px;letter-spacing: 1px;color: rgb(255, 76, 0);\">合并</span><span style=\"font-size: 15px;letter-spacing: 1px;\">。</span></section><section style=\"line-height: 1.75em;\"><span style=\"color: rgb(0, 128, 255);\"><em><span style=\"color: rgb(0, 128, 255);font-size: 15px;letter-spacing: 1px;\">画外音：不是今天的重点，关于写缓冲的概念，详见《<a target=\"_blank\" href=\"http://mp.weixin.qq.com/s?__biz=MjM5ODYxMDA5OQ==&amp;mid=2651962467&amp;idx=1&amp;sn=899ea157b0fc6f849ec80a4d055a309b&amp;chksm=bd2d09bf8a5a80a972a2e16a190ed7dffe03f89015ead707bdfcc5aeb8388fb278f397c125f1&amp;scene=21#wechat_redirect\" data-itemshowtype=\"0\" tab=\"innerlink\" data-linktype=\"2\">写缓冲(change buffer)，这次彻底懂了！</a>》。</span></em></span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\"><br></span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">第四步，</span><span style=\"font-size: 15px;letter-spacing: 1px;color: rgb(255, 76, 0);\">purge操作</span><span style=\"font-size: 15px;letter-spacing: 1px;\">。</span></section><section style=\"line-height: 1.75em;\"><span style=\"color: rgb(0, 128, 255);\"><em><span style=\"color: rgb(0, 128, 255);font-size: 15px;letter-spacing: 1px;\">画外音：InnoDB的一种垃圾收集机制，使用单独的后台线程周期性处理索引中标记删除的数据，也不是今天的重点，未来可以详细讲。</span></em></span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\"><br></span></section><section style=\"line-height: 1.75em;\"><strong><span style=\"font-size: 15px;letter-spacing: 1px;\">第一个步骤中，redo log操作是如何恢复最新的数据页的呢？</span></strong><span style=\"font-size: 15px;letter-spacing: 1px;\"></span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">（1）从redo log中读取checkpoint lsn，它记录的是最后一次刷盘的页，对应日志的LSN；</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">（2）如果redo log中记录的日志LSN小于checkpoint，说明相关数据已经被刷盘，不用额外操作；</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">（3）如果redo log中记录的日志LSN大于checkpoint，说明相关数据只写了redo log，没来得及刷盘，就需要对相关数据页重做日志，例如：</span></section><p style=\"text-align: center;\"><img class=\"rich_pages wxw-img\" data-galleryid=\"\" data-ratio=\"0.5359116022099447\" data-s=\"300,640\" data-type=\"png\" data-w=\"362\" style=\"max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/sz_mmbiz_png/YrezxckhYOzML1zT8F3WpxbNXQCmyASMTEfeoQMrczzluhOlan1ExbFkcZRpkQq93Ew42ysDHkAWB7Q2wHCE6g/640?wx_fmt=png\"></p><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">将第1234页，偏移量为5678处的1个字节改为1，以此来恢复数据。</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\"><br></span></section><p style=\"text-align: center;\"><img class=\"rich_pages wxw-img\" data-galleryid=\"\" data-ratio=\"0.5722120658135283\" data-s=\"300,640\" data-type=\"png\" data-w=\"547\" style=\"max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/sz_mmbiz_png/YrezxckhYOzML1zT8F3WpxbNXQCmyASMsld9XfT0xmyD0CBK7dNqOtjzltjJIThicJf2OkWYQm2icTgcoAZXMcbw/640?wx_fmt=png\"></p><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">崩溃恢复过程中，MySQL的启动日志更形象的说明了这一点：</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">（1）先找到checkpoint；</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">（2）然后不断的扫描大于checkpoint的redo log，不断的恢复数据；</span></section><section style=\"line-height: 1.75em;\"><span style=\"color: rgb(0, 128, 255);\"><em><span style=\"color: rgb(0, 128, 255);font-size: 15px;letter-spacing: 1px;\">画外音：redo log的LSN可以看到恢复的进程。</span></em></span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\"><br></span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">多说一句，redo log还有<strong>两个特性</strong>：</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">第一，</span><span style=\"font-size: 15px;letter-spacing: 1px;color: rgb(255, 76, 0);\">幂等性</span><span style=\"font-size: 15px;letter-spacing: 1px;\">，同一条redo log执行多次，不影响数据的恢复。</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">第二，崩溃恢复时，</span><span style=\"font-size: 15px;letter-spacing: 1px;color: rgb(255, 76, 0);\">从比checkpoint更早的LSN开始执行恢复，也不影响数据最终的一致性</span><span style=\"font-size: 15px;letter-spacing: 1px;\">，因为一个数据页，最终一定会被更大值的LSN日志恢复到最新的数据上来；</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\"><br></span></section><section style=\"line-height: 1.75em;\"><strong><span style=\"font-size: 15px;letter-spacing: 1px;\">五、PXB在线热备原理</span></strong><span style=\"font-size: 15px;letter-spacing: 1px;\"></span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\"><br></span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">不知不觉写了几千字，差点忘了缘起的问题。</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\"><br></span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">PXB是如何实现：</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">（1）保持数据库持续提供线上服务，库文件不断变化时；</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">（2）通过MySQL文件；</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">（3）来进行库文件物理热备份的呢？</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\"><br></span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">通过上面大把的铺垫，这个问题的回答就容易了。</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\"><br></span></section><section style=\"line-height: 1.75em;\"><strong><span style=\"font-size: 15px;letter-spacing: 1px;\">首先</span></strong><span style=\"font-size: 15px;letter-spacing: 1px;\">，PXB启动一个线程，并不断监听并复制redo log的增量到另外的文件，不能直接备份redo log的原因是，redo log循环使用的，PXB则必须记录下checkpoint LSN之后的所有redo log。</span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\"><br></span></section><section style=\"line-height: 1.75em;\"><strong><span style=\"font-size: 15px;letter-spacing: 1px;\">然后</span></strong><span style=\"font-size: 15px;letter-spacing: 1px;\">，PXB启动另一个线程，然后开始复制数据文件，复制数据文件过程可能会比较长，整个过程中数据文件可能在不停的修改，导致数据不一致。但没有关系，所有的修改都已经记录在了第一步中，额外记录的redo log里。</span></section><section style=\"line-height: 1.75em;\"><span style=\"color: rgb(0, 128, 255);\"><em><span style=\"color: rgb(0, 128, 255);font-size: 15px;letter-spacing: 1px;\">画外音：务必注意，备份redo log的线程，必须在开始备份数据文件之前启动，之后结束。</span></em></span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\"><br></span></section><section style=\"line-height: 1.75em;\"><strong><span style=\"font-size: 15px;letter-spacing: 1px;\">最后</span></strong><span style=\"font-size: 15px;letter-spacing: 1px;\">，通过备份的数据文件，重放redo log，执行类似于MySQL崩溃恢复过程中的动作，就能够使得数据文件恢复到能保证一致性的checkpoint检查点。</span></section><section style=\"line-height: 1.75em;\"><span style=\"color: rgb(0, 128, 255);\"><em><span style=\"color: rgb(0, 128, 255);font-size: 15px;letter-spacing: 1px;\">画外音：PXB还可以对非MySQL，非InnoDB进行在线热备，这里就不展开了。</span></em></span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\"><br></span></section><section style=\"line-height: 1.75em;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">是不是很神奇啊！</span></section><blockquote class=\"js_blockquote_wrap\" data-type=\"2\" data-url=\"\" data-author-name=\"\" data-content-utf8-length=\"57\" data-source-title=\"\"><section class=\"js_blockquote_digest\"><section><em>这是一篇关于MySQL数据库，redo log，LSN，崩溃恢复，在线热备的长文，耐心读完，如果没有收获，可以捶我。</em></section></section></blockquote><section class=\"mp_profile_iframe_wrp\"><mpprofile class=\"js_uneditable custom_select_card mp_profile_iframe\" data-pluginname=\"mpprofile\" data-id=\"MjM5ODYxMDA5OQ==\" data-headimg=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/YrezxckhYOxbibeY4UQvLjjG76dIsbXYGaaKCJpqU0kzRuu3r2CXosccgtc57I15CePibfpQMd5dBibXZDNNZYtkg/0?wx_fmt=png\" data-nickname=\"架构师之路\" data-alias=\"road5858\" data-signature=\"架构师之路，坚持撰写接地气的架构文章\" data-from=\"0\"></mpprofile></section><p><strong><span style=\"font-size: 15px;letter-spacing: 1px;\">MySQL内核相关文章</span></strong><span style=\"font-size: 15px;letter-spacing: 1px;\">：</span></p><p><span style=\"font-size: 15px;letter-spacing: 1px;\">《<a target=\"_blank\" href=\"http://mp.weixin.qq.com/s?__biz=MjM5ODYxMDA5OQ==&amp;mid=2651962450&amp;idx=1&amp;sn=ce17c4da8d20ce275f75d0f2ef5e40c9&amp;chksm=bd2d098e8a5a809834aaa07da0d7546555385543fb6d687a7cf94d183ab061cd301a76547411&amp;scene=21#wechat_redirect\" data-itemshowtype=\"0\" tab=\"innerlink\" data-linktype=\"2\">缓冲池(buffer pool)，这次彻底懂了！</a>》</span></p><p><span style=\"font-size: 15px;letter-spacing: 1px;\">《<a target=\"_blank\" href=\"http://mp.weixin.qq.com/s?__biz=MjM5ODYxMDA5OQ==&amp;mid=2651962467&amp;idx=1&amp;sn=899ea157b0fc6f849ec80a4d055a309b&amp;chksm=bd2d09bf8a5a80a972a2e16a190ed7dffe03f89015ead707bdfcc5aeb8388fb278f397c125f1&amp;scene=21#wechat_redirect\" data-itemshowtype=\"0\" tab=\"innerlink\" data-linktype=\"2\">写缓冲(change buffer)，这次彻底懂了！</a>》</span></p><p><span style=\"font-size: 15px;letter-spacing: 1px;\">《<a target=\"_blank\" href=\"http://mp.weixin.qq.com/s?__biz=MjM5ODYxMDA5OQ==&amp;mid=2651962887&amp;idx=1&amp;sn=4806f481448b1c3ddfbbd53e732a7bb5&amp;chksm=bd2d0bdb8a5a82cd50bc155ed2ba57f105bfd76ff78992823ed85214b5c767eef17e691a2255&amp;scene=21#wechat_redirect\" data-itemshowtype=\"0\" tab=\"innerlink\" data-linktype=\"2\">日志缓冲(log buffer)，这次彻底懂了！</a>》</span></p><p><span style=\"font-size: 15px;letter-spacing: 1px;\">《<a target=\"_blank\" href=\"http://mp.weixin.qq.com/s?__biz=MjM5ODYxMDA5OQ==&amp;mid=2651963079&amp;idx=1&amp;sn=3826a80fc67aa6d3bfd4434131183959&amp;chksm=bd2d0b1b8a5a820dfe1be30c4499b856c3417b337a7fca306c4622455850b6a701cea4114c19&amp;scene=21#wechat_redirect\" data-itemshowtype=\"0\" tab=\"innerlink\" data-linktype=\"2\">double write buffer，这次彻底懂了！</a>》</span></p><p><span style=\"font-size: 15px;letter-spacing: 1px;\"><br></span></p><p><span style=\"font-size: 15px;letter-spacing: 1px;\"><span style=\"font-size: 15px;letter-spacing: 1px;\">都看到这里了，不来个三连吗？</span>谢</span><span style=\"font-size: 15px;letter-spacing: 1px;color: rgb(255, 76, 0);\">转</span><span style=\"font-size: 15px;letter-spacing: 1px;\">！</span></p>\n                </div>\n\n    \n        <br>\n        <div id=\"js_toobar3\" class=\"rich_media_tool\">\n            <a target=\"_blank\" href=\"https://mp.weixin.qq.com/s?__biz=MjM5ODYxMDA5OQ==%5Cx26amp;mid=2651968541%5Cx26amp;idx=1%5Cx26amp;sn=8398c61500a0b22a14a9b3f4674eb8f2%5Cx26amp;chksm=bd2d61c18a5ae8d7d97da4810e06ce4c33cd6758c927394151a09b49f87a5df531dc0d1bd6d6%5Cx26amp;token=1748303123%5Cx26amp;lang=zh_CN#rd\" id=\"js_view_source\" class=\"media_tool_meta meta_primary\">阅读原文</a>\n        </div>\n    \n    <br>\n\n    \n        <a target=\"_blank\" href=\"http://mp.weixin.qq.com/s?__biz=MjM5ODYxMDA5OQ==&amp;mid=2651968772&amp;idx=2&amp;sn=315f4c31fbe6c3952293bd8ada115aee&amp;chksm=bd2d60d88a5ae9ceed5e6baedc13b4eb86610c99e4fa7b5768390deeabc3976167db9eab51ff#rd\" style=\"color: blue\" class=\"media_tool_meta meta_primary\">原文</a>\n        <br>\n    \n\n    \n        </div>","descriptionType":"html","publishedDate":"Wed, 22 Sep 2021 12:31:00 +0000","feedId":2240,"bgimg":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/sz_mmbiz_jpg/YrezxckhYOzML1zT8F3WpxbNXQCmyASMBz1VmhcPxmxuTE2cLBciaJaoS1tcicshCibqp6cwKmbtkcBDrcZPdtcHA/0?wx_fmt=jpeg?imageView2/1/w/600","linkMd5":"eb9bb96f070528470ca7820b1d75c6b6","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn3@2020_4/2021/09/30/14-33-17-854_f940990d099e9ba4.webp","destWidth":908,"destHeight":386,"sourceBytes":28974,"destBytes":16756,"author":"","articleImgCdnMap":{"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/sz_mmbiz_jpg/YrezxckhYOzML1zT8F3WpxbNXQCmyASMBz1VmhcPxmxuTE2cLBciaJaoS1tcicshCibqp6cwKmbtkcBDrcZPdtcHA/0?wx_fmt=jpeg?imageView2/1/w/600":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn3@2020_4/2021/09/30/14-33-17-854_f940990d099e9ba4.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/sz_mmbiz_png/YrezxckhYOzML1zT8F3WpxbNXQCmyASMq6EH7CZGXgViaSfsLfqDRLeoykLs34vck33NsBSqMQruaLM8bjaqRng/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn15@2020_5/2021/09/30/14-33-20-680_8a5142fb997f00cc.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/sz_mmbiz_png/YrezxckhYOzML1zT8F3WpxbNXQCmyASMCcHetricWt9ibdSocGt4HLOjIa4WW3p6zKvzWFN9W0Z6ZXa253DwRdgQ/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn18@2020_5/2021/09/30/14-33-23-404_534aaa29fa07a5c4.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/sz_mmbiz_png/YrezxckhYOzML1zT8F3WpxbNXQCmyASMTEfeoQMrczzluhOlan1ExbFkcZRpkQq93Ew42ysDHkAWB7Q2wHCE6g/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn8@2020_1/2021/09/30/14-34-33-136_b86c58bb46a8136c.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/sz_mmbiz_png/YrezxckhYOzML1zT8F3WpxbNXQCmyASMsld9XfT0xmyD0CBK7dNqOtjzltjJIThicJf2OkWYQm2icTgcoAZXMcbw/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn9@2020_2/2021/09/30/14-33-32-700_c0794e4a8f1c4833.webp"},"publishedOrCreatedDate":1633012383113}],"record":{"createdTime":"2021-09-30 22:33:03","updatedTime":"2021-09-30 22:33:03","feedId":2240,"fetchDate":"Thu, 30 Sep 2021 14:33:03 +0000","fetchMs":589,"handleMs":14,"totalMs":91176,"newArticles":0,"totalArticles":5,"status":1,"type":0,"ip":"bc1eecef1292254c09de6c1e66b750f3","hostName":"europe-22*","requestId":"dc98672681c64325ba48c562fc822bb6_2240","contentType":"application/rss+xml","totalBytes":88524,"bgimgsTotal":1,"bgimgsGithubTotal":1,"articlesImgsTotal":5,"articlesImgsGithubTotal":5,"successGithubMap":{"myreaderx2":1,"myreaderx12":1,"myreaderx24":1,"myreaderx18":1,"myreaderx":1},"failGithubMap":{}},"feed":{"createdTime":"2020-08-24 21:31:38","updatedTime":"2020-09-01 10:02:14","id":2240,"name":"架构师之路","url":"http://feedmaker.kindle4rss.com/feeds/gh_10a6b96351a9.weixin.xml","subscriber":null,"website":null,"icon":"http://www.sogou.com/images/logo/new/favicon.ico?v=4","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx63/cdn89@2020_4/2020/09/01/02-02-15-297_d24121c9beed1de6.ico","description":"架构师之路，坚持撰写接地气的架构文章","weekly":null,"link":null},"noPictureArticleList":[],"tmpCommonImgCdnBytes":16756,"tmpBodyImgCdnBytes":71768,"tmpBgImgCdnBytes":0,"extra4":{"start":1633012382325,"total":0,"statList":[{"spend":774,"msg":"获取xml内容"},{"spend":14,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":75346,"msg":"正文链接上传到cdn"}]},"extra5":5,"extra6":5,"extra7ImgCdnFailResultVector":[null],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://europe-56.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]},"http://europe-57.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-022.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-023.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/sz_mmbiz_jpg/YrezxckhYOzML1zT8F3WpxbNXQCmyASMBz1VmhcPxmxuTE2cLBciaJaoS1tcicshCibqp6cwKmbtkcBDrcZPdtcHA/0?wx_fmt=jpeg?imageView2/1/w/600","sourceStatusCode":200,"destWidth":908,"destHeight":386,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn3@2020_4/2021/09/30/14-33-17-854_f940990d099e9ba4.webp","sourceBytes":28974,"destBytes":16756,"targetWebpQuality":75,"feedId":2240,"totalSpendMs":14882,"convertSpendMs":10,"createdTime":"2021-09-30 22:33:03","host":"us-007*","referer":"http://weixin.sogou.com/weixin?type=2&query=%E6%9E%B6%E6%9E%84%E5%B8%88%E4%B9%8B%E8%B7%AF+MySQL%EF%BC%8C%E5%9C%A8%E7%BA%BF%E7%83%AD%E5%A4%87%E7%9A%84%E5%86%85%E6%A0%B8%E5%8E%9F%E7%90%86%EF%BC%81","linkMd5ListStr":"eb9bb96f070528470ca7820b1d75c6b6,eb9bb96f070528470ca7820b1d75c6b6","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"16.4 KB","compressRate":"57.8%","sourceSize":"28.3 KB"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/sz_mmbiz_png/YrezxckhYOzML1zT8F3WpxbNXQCmyASMq6EH7CZGXgViaSfsLfqDRLeoykLs34vck33NsBSqMQruaLM8bjaqRng/640?wx_fmt=png","sourceStatusCode":200,"destWidth":342,"destHeight":146,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn15@2020_5/2021/09/30/14-33-20-680_8a5142fb997f00cc.webp","sourceBytes":14061,"destBytes":5040,"targetWebpQuality":75,"feedId":2240,"totalSpendMs":2716,"convertSpendMs":6,"createdTime":"2021-09-30 22:33:18","host":"us-022*","referer":"http://weixin.sogou.com/weixin?type=2&query=%E6%9E%B6%E6%9E%84%E5%B8%88%E4%B9%8B%E8%B7%AF+MySQL%EF%BC%8C%E5%9C%A8%E7%BA%BF%E7%83%AD%E5%A4%87%E7%9A%84%E5%86%85%E6%A0%B8%E5%8E%9F%E7%90%86%EF%BC%81","linkMd5ListStr":"eb9bb96f070528470ca7820b1d75c6b6","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"4.9 KB","compressRate":"35.8%","sourceSize":"13.7 KB"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/sz_mmbiz_png/YrezxckhYOzML1zT8F3WpxbNXQCmyASMCcHetricWt9ibdSocGt4HLOjIa4WW3p6zKvzWFN9W0Z6ZXa253DwRdgQ/640?wx_fmt=png","sourceStatusCode":200,"destWidth":383,"destHeight":289,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn18@2020_5/2021/09/30/14-33-23-404_534aaa29fa07a5c4.webp","sourceBytes":40215,"destBytes":12312,"targetWebpQuality":75,"feedId":2240,"totalSpendMs":5400,"convertSpendMs":6,"createdTime":"2021-09-30 22:33:18","host":"us-023*","referer":"http://weixin.sogou.com/weixin?type=2&query=%E6%9E%B6%E6%9E%84%E5%B8%88%E4%B9%8B%E8%B7%AF+MySQL%EF%BC%8C%E5%9C%A8%E7%BA%BF%E7%83%AD%E5%A4%87%E7%9A%84%E5%86%85%E6%A0%B8%E5%8E%9F%E7%90%86%EF%BC%81","linkMd5ListStr":"eb9bb96f070528470ca7820b1d75c6b6","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"12 KB","compressRate":"30.6%","sourceSize":"39.3 KB"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/sz_mmbiz_png/YrezxckhYOzML1zT8F3WpxbNXQCmyASMsld9XfT0xmyD0CBK7dNqOtjzltjJIThicJf2OkWYQm2icTgcoAZXMcbw/640?wx_fmt=png","sourceStatusCode":200,"destWidth":547,"destHeight":313,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn9@2020_2/2021/09/30/14-33-32-700_c0794e4a8f1c4833.webp","sourceBytes":93667,"destBytes":47192,"targetWebpQuality":75,"feedId":2240,"totalSpendMs":15142,"convertSpendMs":13,"createdTime":"2021-09-30 22:33:18","host":"europe-57*","referer":"http://weixin.sogou.com/weixin?type=2&query=%E6%9E%B6%E6%9E%84%E5%B8%88%E4%B9%8B%E8%B7%AF+MySQL%EF%BC%8C%E5%9C%A8%E7%BA%BF%E7%83%AD%E5%A4%87%E7%9A%84%E5%86%85%E6%A0%B8%E5%8E%9F%E7%90%86%EF%BC%81","linkMd5ListStr":"eb9bb96f070528470ca7820b1d75c6b6","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"46.1 KB","compressRate":"50.4%","sourceSize":"91.5 KB"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/sz_mmbiz_png/YrezxckhYOzML1zT8F3WpxbNXQCmyASMTEfeoQMrczzluhOlan1ExbFkcZRpkQq93Ew42ysDHkAWB7Q2wHCE6g/640?wx_fmt=png","sourceStatusCode":200,"destWidth":362,"destHeight":194,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn8@2020_1/2021/09/30/14-34-33-136_b86c58bb46a8136c.webp","sourceBytes":26586,"destBytes":7224,"targetWebpQuality":75,"feedId":2240,"totalSpendMs":15049,"convertSpendMs":5,"createdTime":"2021-09-30 22:34:18","host":"us-023*","referer":"http://weixin.sogou.com/weixin?type=2&query=%E6%9E%B6%E6%9E%84%E5%B8%88%E4%B9%8B%E8%B7%AF+MySQL%EF%BC%8C%E5%9C%A8%E7%BA%BF%E7%83%AD%E5%A4%87%E7%9A%84%E5%86%85%E6%A0%B8%E5%8E%9F%E7%90%86%EF%BC%81","linkMd5ListStr":"eb9bb96f070528470ca7820b1d75c6b6,eb9bb96f070528470ca7820b1d75c6b6","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"7.1 KB","compressRate":"27.2%","sourceSize":"26 KB"}],"successGithubMap":{"myreaderx2":1,"myreaderx12":1,"myreaderx24":1,"myreaderx18":1,"myreaderx":1},"failGithubMap":{}}