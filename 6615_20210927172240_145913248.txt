{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2021-09-28 01:22:16","updatedTime":"2021-09-28 01:22:16","title":"从0到1开发一款自己的vscode插件","link":"https://segmentfault.com/a/1190000040720760","description":"<h2>一、vscode插件是什么？</h2>\n<blockquote>\n 大家对vscode肯定都不陌生，其是微软推出的一款轻量级代码编辑器，在使用的时候总会时不时的安装一些插件去协助我们进行开发，这些插件就是利用vscode给我们开放的一些API的基础上进行扩展功能的开发，从而解决开发中的一些问题，提高生产效率。这种插件化思想一方面使该代码编辑器更轻量化；另一方面能够充分利用社区的力量，为其提供更加多元化的插件。（下图是我做的一个小插件的效果图）\n</blockquote>\n<p><img src=\"https://segmentfault.com/img/remote/1460000040720762\" alt=\"vscodePlugin.gif\" title=\"vscodePlugin.gif\" /></p>\n<h2>二、vscode插件能做什么？</h2>\n<blockquote>\n vscode插件能做什么？其核心点在于vscode为其提供了哪些开放能力，只有其开放的能力才能为我们所用，就官网来看，利用vscode插件能够做以下事情（该部分来自于vscode官网扩展能力概述部分）：\n</blockquote>\n<ol>\n <li>通用功能</li>\n</ol>\n<blockquote>\n 可以在任何扩展中使用的核心功能，主要包括以下几点：\n</blockquote>\n<p>（1）能够添加命令、配置项、快捷键、菜单项、右键菜单；</p>\n<p>（2）存储工作区或全局数据；</p>\n<p>（3）展示通知信息；</p>\n<p>（4）使用快速选择收集用户的输入；</p>\n<p>（5）打开文件选择器让用户去选择文件或文件夹；</p>\n<p>（6）使用Progress API去阐述长时间运行的操作；</p>\n<ol start=\"2\">\n <li>主题化</li>\n</ol>\n<blockquote>\n 控制vscode的外观，包括编辑器中源代码的颜色和vscode ui的颜色，其主要包含三种类型的主题：\n</blockquote>\n<p>（1）颜色主题：其允许将颜色应用于VS Code UI组件和编辑器中的文本；</p>\n<p>（2）文件图标主题：文件图标显示在VS Code UI中的位置，例如文件资源管理器、快速打开列表和编辑器选项卡；</p>\n<p>（3）产品图标主题：在整个UI中使用的一组图标</p>\n<ol start=\"3\">\n <li>声明性语言特性</li>\n</ol>\n<blockquote>\n 声明性语言功能为编程语言添加了基本的文本编辑支持，例如括号匹配、自动缩进和语法突出显示。\n</blockquote>\n<ol start=\"4\">\n <li>程序语言特性</li>\n</ol>\n<blockquote>\n 编程语言功能添加了丰富的编程语言支持，例如悬停、转到定义、诊断错误、IntelliSense 和 CodeLens。\n</blockquote>\n<ol start=\"5\">\n <li>扩展工作台</li>\n</ol>\n<blockquote>\n 工作台是指包含标题栏、活动栏、侧边栏、控制板、编辑组、状态栏等UI组件的整体Visual Studio Code UI。VS Code提供了各种API，允许将自己的组件添加到工作台。\n</blockquote>\n<ol start=\"6\">\n <li>调试</li>\n</ol>\n<blockquote>\n 可以通过编写将 VS Code 的调试 UI 连接到特定调试器或运行时的调试器扩展来利用 VS Code 的调试功能。\n</blockquote>\n<h2>三、vscode插件实战</h2>\n<blockquote>\n vscode插件其实是vscode对外提供了一些能力，如果不是特别需要其实没有必要完整的学习整体内容，仅仅需要了解其大体开发思路、能够解决的问题，之所以这么说是因为（以上纯个人观点，不一定正确）学习该部分的内容需要一定精力，但学后并不一定能够在自己项目中得到使用，深入学习投入于产出并不成正比，所以本次我只会讲述入门级内容，具体的内容扔需要读者在需要这一部分能力的时候再深入研究。\n</blockquote>\n<h3>3.1 项目初始化</h3>\n<blockquote>\n 官方为了方便开发人员进行vscode插件的开发，提供了对yo应的脚手架来生成对应的项目。\n</blockquote>\n<pre><code class=\"javascript\">// 安装需要的包\nnpm install -g yo generator-code\n// 运行\nyo code</code></pre>\n<blockquote>\n <p>上述命令其实安装了两个包（yo和generator-code)，这两个包用途如下：</p>\n <ol>\n  <li>yo模块全局安装后就安装了Yeoman，Yeoman是通用型项目脚手架工具，可以根据一套模板，生成一个对应的项目结构</li>\n  <li>generator-code模块是VS Code扩展生成器，与yo配合使用才能构建项目。</li>\n </ol>\n</blockquote>\n<h3>3.2 重要文件</h3>\n<blockquote>\n 在项目生成之后，目录结构如下所示，其中最重要的文件是package.json和extension.js，了解这两个文件基本上就可以入门开发一个vscode插件了。\n</blockquote>\n<p><img src=\"https://segmentfault.com/img/remote/1460000040720763\" alt=\"image-20210920155043344.png\" title=\"image-20210920155043344.png\" /></p>\n<p>#### 3.2.1 package.json</p>\n<blockquote>\n 该文件是vscode扩展的清单文件，里面有很多字段，\n <a href=\"https://code.visualstudio.com/api/references/extension-manifest\" rel=\"nofollow noreferrer\">官方</a>对每个字段都进行了详细阐述，本次我们重点阐述以下初始化后期清单文件。\n</blockquote>\n<pre><code class=\"json\">{\n    \"name\": \"demo\", // 插件名\n    \"displayName\": \"插件\", // 显示在应用市场的名字\n    \"description\": \"我的第一个插件测试\", // 具体描述\n    \"version\": \"0.0.1\", // 插件的版本号\n    \"engines\": {\n        \"vscode\": \"^1.60.0\" // 最低支持的vscode版本\n    },\n    \"categories\": [\n        \"Other\" // 扩展类别\n    ],\n    // 激活事件组，在那些事件情况下被激活\n    \"activationEvents\": [\n        \"onCommand:demo.helloWorld\"\n    ],\n    // 插件的主入口文件\n    \"main\": \"./extension.js\",\n    // 贡献点\n    \"contributes\": {\n        // 命令\n        \"commands\": [\n            {\n                \"command\": \"demo.helloWorld\",\n                \"title\": \"Hello World\"\n            }\n        ]\n    },\n    \"scripts\": {\n        \"lint\": \"eslint .\",\n        \"pretest\": \"npm run lint\",\n        \"test\": \"node ./test/runTest.js\"\n    },\n    // 开发依赖项\n    \"devDependencies\": {\n        \"@types/vscode\": \"^1.60.0\",\n        \"@types/glob\": \"^7.1.3\",\n        \"@types/mocha\": \"^8.2.2\",\n        \"@types/node\": \"14.x\",\n        \"eslint\": \"^7.27.0\",\n        \"glob\": \"^7.1.7\",\n        \"mocha\": \"^8.4.0\",\n        \"typescript\": \"^4.3.2\",\n        \"vscode-test\": \"^1.5.2\"\n    }\n}\n</code></pre>\n<blockquote>\n 在这份清单文件中，重点关注的主要有三部分内容：activationEvents、main以及contributes，其是整个文件中的重中之重。\n</blockquote>\n<ol>\n <li>main</li>\n</ol>\n<blockquote>\n 指明了该插件的主入口在哪，只有找到主入口整个项目才能正常的运转、\n</blockquote>\n<ol start=\"2\">\n <li>activationEvents</li>\n</ol>\n<blockquote>\n 指明该插件在何种情况下才会被激活，因为只有激活后插件才能被正常使用，官网已经指明了\n <a href=\"https://code.visualstudio.com/api/references/activation-events\" rel=\"nofollow noreferrer\">激活的时机</a>，这样我们就可以按需设置对应时机。（具体每个时机用的时候详细查看即可）\n</blockquote>\n<ul>\n <li><a href=\"https://code.visualstudio.com/api/references/activation-events#onLanguage\" rel=\"nofollow noreferrer\"><code>onLanguage</code></a> 打开解析为特定语言文件时被激活，例如\"onLanguage:python\"</li>\n <li><a href=\"https://code.visualstudio.com/api/references/activation-events#onCommand\" rel=\"nofollow noreferrer\"><code>onCommand</code></a> 在调用命令时被激活</li>\n <li><p><code>onDebug</code> 在启动调试话之前被激活</p>\n  <ul>\n   <li><a href=\"https://code.visualstudio.com/api/references/activation-events#onDebugInitialConfigurations\" rel=\"nofollow noreferrer\"><code>onDebugInitialConfigurations</code></a></li>\n   <li><a href=\"https://code.visualstudio.com/api/references/activation-events#onDebugResolve\" rel=\"nofollow noreferrer\"><code>onDebugResolve</code></a></li>\n  </ul></li>\n <li><a href=\"https://code.visualstudio.com/api/references/activation-events#workspaceContains\" rel=\"nofollow noreferrer\"><code>workspaceContains</code></a> 每当打开文件夹并且该文件夹包含至少一个与 glob 模式匹配的文件时</li>\n <li><a href=\"https://code.visualstudio.com/api/references/activation-events#onFileSystem\" rel=\"nofollow noreferrer\"><code>onFileSystem</code></a> 每当读取来自特定<em>方案</em>的文件或文件夹时</li>\n <li><a href=\"https://code.visualstudio.com/api/references/activation-events#onView\" rel=\"nofollow noreferrer\"><code>onView</code></a> 每当在 VS Code 侧栏中展开指定 id 的视图</li>\n <li><a href=\"https://code.visualstudio.com/api/references/activation-events#onUri\" rel=\"nofollow noreferrer\"><code>onUri</code></a> 每当打开该扩展的系统范围的 Uri 时</li>\n <li><a href=\"https://code.visualstudio.com/api/references/activation-events#onWebviewPanel\" rel=\"nofollow noreferrer\"><code>onWebviewPanel</code></a></li>\n <li><a href=\"https://code.visualstudio.com/api/references/activation-events#onCustomEditor\" rel=\"nofollow noreferrer\"><code>onCustomEditor</code></a></li>\n <li><a href=\"https://code.visualstudio.com/api/references/activation-events#onAuthenticationRequest\" rel=\"nofollow noreferrer\"><code>onAuthenticationRequest</code></a></li>\n <li><a href=\"https://code.visualstudio.com/api/references/activation-events#Start-up\" rel=\"nofollow noreferrer\"><code>*</code></a> 只要一启动vscode，插件就会被激活</li>\n <li><a href=\"https://code.visualstudio.com/api/references/activation-events#onStartupFinished\" rel=\"nofollow noreferrer\"><code>onStartupFinished</code></a></li>\n</ul>\n<ol start=\"3\">\n <li>contributes</li>\n</ol>\n<blockquote>\n 通过扩展注册contributes用来扩展Visual Studio Code中的各项技能，其有多个配置，如下所示：\n</blockquote>\n<ul>\n <li><a href=\"https://code.visualstudio.com/api/references/contribution-points#contributes.breakpoints\" rel=\"nofollow noreferrer\"><code>breakpoints</code></a> 断点</li>\n <li><a href=\"https://code.visualstudio.com/api/references/contribution-points#contributes.colors\" rel=\"nofollow noreferrer\"><code>colors</code></a> 主题颜色</li>\n <li><a href=\"https://code.visualstudio.com/api/references/contribution-points#contributes.commands\" rel=\"nofollow noreferrer\"><code>commands</code></a> 命令</li>\n <li><a href=\"https://code.visualstudio.com/api/references/contribution-points#contributes.configuration\" rel=\"nofollow noreferrer\"><code>configuration</code></a> 配置</li>\n <li><a href=\"https://code.visualstudio.com/api/references/contribution-points#contributes.configurationDefaults\" rel=\"nofollow noreferrer\"><code>configurationDefaults</code></a> 默认的特定于语言的编辑器配置</li>\n <li><a href=\"https://code.visualstudio.com/api/references/contribution-points#contributes.customEditors\" rel=\"nofollow noreferrer\"><code>customEditors</code></a> 自定义编辑器</li>\n <li><a href=\"https://code.visualstudio.com/api/references/contribution-points#contributes.debuggers\" rel=\"nofollow noreferrer\"><code>debuggers</code></a></li>\n <li><a href=\"https://code.visualstudio.com/api/references/contribution-points#contributes.grammars\" rel=\"nofollow noreferrer\"><code>grammars</code></a></li>\n <li><a href=\"https://code.visualstudio.com/api/references/contribution-points#contributes.iconThemes\" rel=\"nofollow noreferrer\"><code>iconThemes</code></a></li>\n <li><a href=\"https://code.visualstudio.com/api/references/contribution-points#contributes.jsonValidation\" rel=\"nofollow noreferrer\"><code>jsonValidation</code></a></li>\n <li><a href=\"https://code.visualstudio.com/api/references/contribution-points#contributes.keybindings\" rel=\"nofollow noreferrer\"><code>keybindings</code></a> 快捷键绑定</li>\n <li><a href=\"https://code.visualstudio.com/api/references/contribution-points#contributes.languages\" rel=\"nofollow noreferrer\"><code>languages</code></a></li>\n <li><a href=\"https://code.visualstudio.com/api/references/contribution-points#contributes.menus\" rel=\"nofollow noreferrer\"><code>menus</code></a></li>\n <li><a href=\"https://code.visualstudio.com/api/references/contribution-points#contributes.problemMatchers\" rel=\"nofollow noreferrer\"><code>problemMatchers</code></a></li>\n <li><a href=\"https://code.visualstudio.com/api/references/contribution-points#contributes.problemPatterns\" rel=\"nofollow noreferrer\"><code>problemPatterns</code></a></li>\n <li><a href=\"https://code.visualstudio.com/api/references/contribution-points#contributes.productIconThemes\" rel=\"nofollow noreferrer\"><code>productIconThemes</code></a></li>\n <li><a href=\"https://code.visualstudio.com/api/references/contribution-points#contributes.resourceLabelFormatters\" rel=\"nofollow noreferrer\"><code>resourceLabelFormatters</code></a></li>\n <li><a href=\"https://code.visualstudio.com/api/references/contribution-points#contributes.snippets\" rel=\"nofollow noreferrer\"><code>snippets</code></a> 特定语言的片段</li>\n <li><a href=\"https://code.visualstudio.com/api/references/contribution-points#contributes.submenus\" rel=\"nofollow noreferrer\"><code>submenus</code></a></li>\n <li><a href=\"https://code.visualstudio.com/api/references/contribution-points#contributes.taskDefinitions\" rel=\"nofollow noreferrer\"><code>taskDefinitions</code></a></li>\n <li><a href=\"https://code.visualstudio.com/api/references/contribution-points#contributes.themes\" rel=\"nofollow noreferrer\"><code>themes</code></a> 颜色主题</li>\n <li><a href=\"https://code.visualstudio.com/api/references/contribution-points#contributes.typescriptServerPlugins\" rel=\"nofollow noreferrer\"><code>typescriptServerPlugins</code></a></li>\n <li><a href=\"https://code.visualstudio.com/api/references/contribution-points#contributes.views\" rel=\"nofollow noreferrer\"><code>views</code></a></li>\n <li><a href=\"https://code.visualstudio.com/api/references/contribution-points#contributes.viewsContainers\" rel=\"nofollow noreferrer\"><code>viewsContainers</code></a></li>\n <li><a href=\"https://code.visualstudio.com/api/references/contribution-points#contributes.viewsWelcome\" rel=\"nofollow noreferrer\"><code>viewsWelcome</code></a></li>\n <li><a href=\"https://code.visualstudio.com/api/references/contribution-points#contributes.walkthroughs\" rel=\"nofollow noreferrer\"><code>walkthroughs</code></a></li>\n</ul>\n<h4>3.2.2 extension.js文件</h4>\n<blockquote>\n 该文件时其入口文件，即package.json中main字段对应的文件（不一定叫extension.js这个名字），该文件中将导出两个方法：activate和deactivate，两个方法的执行时机如下所示：\n</blockquote>\n<ol>\n <li>activate</li>\n</ol>\n<p>这是插件被激活时执行的函数</p>\n<ol start=\"2\">\n <li>deactivate</li>\n</ol>\n<p>这是插件被销毁时调用的方法，比如释放内存等。</p>\n<h3>3.3 实战</h3>\n<blockquote>\n 上述已经对vscode插件有了基础的认识，下面就进行一个简单的实战，打造属于自己的一个vscode插件，此插件的功能如下：\n</blockquote>\n<ol>\n <li>通过在文件编辑区域或文件名上右击弹出按钮，点击按钮获取文件的大小、创建时间和修改时间；</li>\n <li>如果获取的是文件夹，则指明该文件是文件夹，不是文件，给予提示。</li>\n</ol>\n<h4>3.3.1 package.json修改项</h4>\n<pre><code class=\"json\">{\n    // ……\n    // 在getFileState指令下激活\n    \"activationEvents\": [\n        \"onCommand:getFileState\"\n    ],\n    // 入口文件\n    \"main\": \"./extension.js\",\n    \"contributes\": {\n        // 命令\n        \"commands\": [\n            {\n                \"command\": \"getFileState\",\n                \"title\": \"File State\"\n            }\n        ],\n        // 菜单项\n        \"menus\": {\n            // 编辑上下文菜单\n            \"editor/context\": [\n                {\n                    \"when\": \"editorFocus\",\n                    \"command\": \"getFileState\",\n                    \"group\": \"navigation\"\n                }\n            ],\n            // 资源管理器上下文菜单\n            \"explorer/context\": [\n                {\n                    \"command\": \"getFileState\",\n                    \"group\": \"navigation\"\n                }\n            ]\n        }\n    },\n    // ……\n}</code></pre>\n<h4>3.3.2 主函数内容</h4>\n<pre><code class=\"javascript\">const vscode = require('vscode');\nconst fs = require('fs');\n\nfunction activate(context) {\n    console.log('插件已经被激活');\n\n    // 注册命令\n    let commandOfGetFileState = vscode.commands.registerCommand('getFileState', uri =&gt; {\n        // 文件路径\n        const filePath = uri.path.substring(1);\n        fs.stat(filePath, (err, stats) =&gt; {\n            if (err) {\n                vscode.window.showErrorMessage(`获取文件时遇到错误了${err}!!!`)\n            }\n\n            if (stats.isDirectory()) {\n                vscode.window.showWarningMessage(`检测的是文件夹，不是文件，请重新选择！！！`);\n            }\n\n            if (stats.isFile()) {\n                const size = stats.size;\n                const createTime = stats.birthtime.toLocaleString();\n                const modifyTime = stats.mtime.toLocaleString();\n\n                vscode.window.showInformationMessage(`\n                    文件大小为:${size}字节;\n                    文件创建时间为:${createTime};\n                    文件修改时间为:${modifyTime}\n                `, { modal: true });\n            }\n        });\n        \n        const stats = fs.statSync(filePath);\n        console.log('stats', stats);\n        console.log('isFile', stats.isFile());\n    });\n\n    // 将命令放入其上下文对象中，使其生效\n    context.subscriptions.push(commandOfGetFileState);\n}\n\nfunction deactivate() {}\n\nmodule.exports = {\n    activate,\n    deactivate\n}</code></pre>\n<h4>3.3.3 效果图</h4>\n<blockquote>\n 经过开发后，该插件调试效果如下所示：\n</blockquote>\n<p><img src=\"https://segmentfault.com/img/remote/1460000040720764\" alt=\"vscodePlugin.gif\" title=\"vscodePlugin.gif\" /></p>\n<h3>3. 4 发布</h3>\n<blockquote>\n 插件看法完毕之后就是需要分享出去供大家使用，目前有三种方式：\n</blockquote>\n<ol>\n <li>直接把文件夹发给别人，让别人找到vscode的插件存放目录并放进去，然后重启vscode，一般不推荐；</li>\n <li>打包成vsix插件，然后发送给别人安装，如果你的插件涉及机密不方便发布到应用市场，可以尝试采用这种方式；</li>\n <li>注册开发者账号，发布到官网应用市场，这个发布和npm一样是不需要审核的。</li>\n</ol>\n<blockquote>\n 每一种方式都可行，并且网上也有很多教程讲述其发布方式，今天我重点讲述一下第二种，毕竟在插件这么多的情况下，很多人更乐于开发一款属于自己的专用插件或者特定自己领域使用的插件，完全没必要发布到应用市场。\n</blockquote>\n<ol>\n <li>安装对应的模块vsce</li>\n</ol>\n<pre><code class=\"javascript\">npm i vsce -g</code></pre>\n<ol start=\"2\">\n <li>利用vsce进行打包，生成对应的vsix文件</li>\n</ol>\n<pre><code class=\"javascript\">vsce package</code></pre>\n<p><img src=\"https://segmentfault.com/img/remote/1460000040720765\" alt=\"image-20210921110023059.png\" title=\"image-20210921110023059.png\" /></p>\n<ol start=\"3\">\n <li>安装到vscode</li>\n</ol>\n<p><img src=\"https://segmentfault.com/img/remote/1460000040720766\" alt=\"image-20210921110123792.png\" title=\"image-20210921110123792.png\" /></p>\n<ol start=\"4\">\n <li>安装完成之后就可以正常的进行使用了</li>\n</ol>\n<p><img src=\"https://segmentfault.com/img/remote/1460000040720767\" alt=\"image-20210921110210450.png\" title=\"image-20210921110210450.png\" /></p>\n<h2>四、总结</h2>\n<blockquote>\n 因为工作中目前还没有遇到这种需求，此次我只是对vscode插件的开发流程进行了一个简单的概述，并没有进一步深入探索，待工作中有这样的场景需要这样的能力去解决某些问题时，能够快速反应有这样的解决方案，再进一步学习也为时不晚，也希望爱学习的小伙伴们也对这一部分能够有一定了解，弥补自己知识上欠缺的一环，后续为己所用。\n</blockquote>\n<h2>五、参考文献</h2>\n<p><a href=\"https://segmentfault.com/a/1190000038553748\">vscode插件编写实战</a></p>\n<p><a href=\"https://www.cnblogs.com/liuxianan/p/vscode-plugin-package-json.html\" rel=\"nofollow noreferrer\">vscode插件开发全攻略</a></p>\n<p><a href=\"https://code.visualstudio.com/api\" rel=\"nofollow noreferrer\">官方文档</a></p>\n<p>1.如果觉得这篇文章还不错，来个分享、点赞吧，让更多的人也看到</p>\n<p>2.欢迎关注公众号<strong>前端点线面</strong>,开启前端救赎之路。</p>","descriptionType":"html","publishedDate":"Wed, 22 Sep 2021 14:34:05 +0000","feedId":6615,"bgimg":"https://segmentfault.com/img/remote/1460000040720762","linkMd5":"c2093b1baab44152cd9a10356e6b9321","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn74@2020_2/2021/09/27/17-22-30-043_2327cf5dc74ce716.webp","destWidth":1040,"destHeight":568,"sourceBytes":13815020,"destBytes":1006800,"author":"执鸢者","articleImgCdnMap":{"https://segmentfault.com/img/remote/1460000040720762":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn74@2020_2/2021/09/27/17-22-30-043_2327cf5dc74ce716.webp","https://segmentfault.com/img/remote/1460000040720763":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn94@2020_6/2021/09/27/17-22-33-334_ea4b12f54f79d580.webp","https://segmentfault.com/img/remote/1460000040720764":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn85@2020_3/2021/09/27/17-22-39-717_3cca031492b95730.webp","https://segmentfault.com/img/remote/1460000040720765":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn88@2020_6/2021/09/27/17-22-33-898_372a45a37c7bc9ee.webp","https://segmentfault.com/img/remote/1460000040720766":null,"https://segmentfault.com/img/remote/1460000040720767":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn79@2020_4/2021/09/27/17-22-35-416_d22b234dc18cb630.webp"},"publishedOrCreatedDate":1632763336428}],"record":{"createdTime":"2021-09-28 01:22:16","updatedTime":"2021-09-28 01:22:16","feedId":6615,"fetchDate":"Mon, 27 Sep 2021 17:22:16 +0000","fetchMs":4562,"handleMs":74,"totalMs":56845,"newArticles":0,"totalArticles":50,"status":1,"type":0,"ip":"af0629e1ae74a27744b4cbd27b40a78e","hostName":"us-040*","requestId":"d78addf5ee9648a1be853fbfdc1a2cb6_6615","contentType":"application/atom+xml; charset=UTF-8","totalBytes":2076466,"bgimgsTotal":1,"bgimgsGithubTotal":1,"articlesImgsTotal":6,"articlesImgsGithubTotal":5,"successGithubMap":{"myreaderx27":1,"myreaderx10":1,"myreaderx22":1,"myreaderx13":1,"myreaderx30":1},"failGithubMap":{"myreaderx31":1}},"feed":{"createdTime":"2020-08-25 04:33:08","updatedTime":"2021-04-03 14:32:14","id":6615,"name":"SegmentFault 最新的文章","url":"http://segmentfault.com/feeds/blogs","subscriber":null,"website":null,"icon":"https://segmentfault.com/favicon.ico","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx63/cdn75@2020_2/2021/04/03/06-32-08-760_eb238dca7c8e9f0e.jpg","description":"","weekly":null,"link":null},"noPictureArticleList":[{"createdTime":"2021-09-28 01:22:40","updatedTime":"2021-09-28 01:22:40","id":null,"feedId":6615,"linkMd5":"c2093b1baab44152cd9a10356e6b9321"}],"tmpCommonImgCdnBytes":1006800,"tmpBodyImgCdnBytes":1069666,"tmpBgImgCdnBytes":0,"extra4":{"start":1632763303751,"total":0,"statList":[{"spend":32603,"msg":"获取xml内容"},{"spend":74,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":9581,"msg":"正文链接上传到cdn"}]},"extra5":6,"extra6":6,"extra7ImgCdnFailResultVector":[{"code":1,"isDone":false,"source":"https://segmentfault.com/img/remote/1460000040720766","sourceStatusCode":200,"destWidth":488,"destHeight":327,"sourceBytes":16596,"destBytes":16596,"feedId":6615,"totalSpendMs":2691,"convertSpendMs":0,"createdTime":"2021-09-28 01:22:31","host":"us-022*","referer":"https://segmentfault.com/a/1190000040720760","linkMd5ListStr":"c2093b1baab44152cd9a10356e6b9321","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx31/cdn77/contents/2021/09/27/17-22-33-682_3ba13af334a5daee.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69855631.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Mon, 27 Sep 2021 17:22:33 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["A720:301F:13C9E60:35C8593:6151FDD9"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1632765312"],"x-ratelimit-resource":["core"],"x-ratelimit-used":["61"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx31/cdn77/contents/2021/09/27/17-22-33-682_3ba13af334a5daee.webp","historyStatusCode":[],"spendMs":32},"base64UserPassword":null,"token":"da243******************************d9e47"},"githubUser":"myreaderx31","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"16.2 KB","destSize":"16.2 KB","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://segmentfault.com/img/remote/1460000040720766","sourceStatusCode":200,"destWidth":488,"destHeight":327,"sourceBytes":16596,"destBytes":16596,"feedId":6615,"totalSpendMs":1462,"convertSpendMs":0,"createdTime":"2021-09-28 01:22:33","host":"us-022*","referer":"https://segmentfault.com/a/1190000040720760","linkMd5ListStr":"c2093b1baab44152cd9a10356e6b9321","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx31/cdn77/contents/2021/09/27/17-22-35-149_3ba13af334a5daee.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69855631.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Mon, 27 Sep 2021 17:22:35 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["A720:301F:13C9E96:35C8625:6151FDDB"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1632765312"],"x-ratelimit-resource":["core"],"x-ratelimit-used":["61"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx31/cdn77/contents/2021/09/27/17-22-35-149_3ba13af334a5daee.webp","historyStatusCode":[],"spendMs":32},"base64UserPassword":null,"token":"da243******************************d9e47"},"githubUser":"myreaderx31","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"16.2 KB","destSize":"16.2 KB","compressRate":"100%"}],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://europe-24.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-23.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe62.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-022.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-023.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://segmentfault.com/img/remote/1460000040720762","sourceStatusCode":200,"destWidth":1040,"destHeight":568,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn74@2020_2/2021/09/27/17-22-30-043_2327cf5dc74ce716.webp","sourceBytes":13815020,"destBytes":1006800,"targetWebpQuality":7,"feedId":6615,"totalSpendMs":9529,"convertSpendMs":5237,"createdTime":"2021-09-28 01:22:21","host":"europe-58*","referer":"https://segmentfault.com/a/1190000040720760","linkMd5ListStr":"c2093b1baab44152cd9a10356e6b9321,c2093b1baab44152cd9a10356e6b9321","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"13.2 MB","destSize":"983.2 KB","compressRate":"7.3%"},{"code":1,"isDone":false,"source":"https://segmentfault.com/img/remote/1460000040720763","sourceStatusCode":200,"destWidth":428,"destHeight":470,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn94@2020_6/2021/09/27/17-22-33-334_ea4b12f54f79d580.webp","sourceBytes":22726,"destBytes":22726,"feedId":6615,"totalSpendMs":2617,"convertSpendMs":0,"createdTime":"2021-09-28 01:22:31","host":"europe62*","referer":"https://segmentfault.com/a/1190000040720760","linkMd5ListStr":"c2093b1baab44152cd9a10356e6b9321","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"22.2 KB","destSize":"22.2 KB","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://segmentfault.com/img/remote/1460000040720765","sourceStatusCode":200,"destWidth":370,"destHeight":396,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn88@2020_6/2021/09/27/17-22-33-898_372a45a37c7bc9ee.webp","sourceBytes":17514,"destBytes":17514,"feedId":6615,"totalSpendMs":3191,"convertSpendMs":0,"createdTime":"2021-09-28 01:22:31","host":"europe-24*","referer":"https://segmentfault.com/a/1190000040720760","linkMd5ListStr":"c2093b1baab44152cd9a10356e6b9321","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"17.1 KB","destSize":"17.1 KB","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://segmentfault.com/img/remote/1460000040720767","sourceStatusCode":200,"destWidth":732,"destHeight":242,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn79@2020_4/2021/09/27/17-22-35-416_d22b234dc18cb630.webp","sourceBytes":22626,"destBytes":22626,"feedId":6615,"totalSpendMs":2697,"convertSpendMs":0,"createdTime":"2021-09-28 01:22:33","host":"us-023*","referer":"https://segmentfault.com/a/1190000040720760","linkMd5ListStr":"c2093b1baab44152cd9a10356e6b9321","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"22.1 KB","destSize":"22.1 KB","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://segmentfault.com/img/remote/1460000040720764","sourceStatusCode":200,"destWidth":1040,"destHeight":568,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn85@2020_3/2021/09/27/17-22-39-717_3cca031492b95730.webp","sourceBytes":13815020,"destBytes":1006800,"targetWebpQuality":7,"feedId":6615,"totalSpendMs":9428,"convertSpendMs":5270,"createdTime":"2021-09-28 01:22:31","host":"europe-23*","referer":"https://segmentfault.com/a/1190000040720760","linkMd5ListStr":"c2093b1baab44152cd9a10356e6b9321","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"13.2 MB","destSize":"983.2 KB","compressRate":"7.3%"}],"successGithubMap":{"myreaderx27":1,"myreaderx10":1,"myreaderx22":1,"myreaderx13":1,"myreaderx30":1},"failGithubMap":{"myreaderx31":1}}