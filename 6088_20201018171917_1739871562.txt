{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-10-19 01:18:47","updatedTime":"2020-10-19 01:18:47","title":"Architecture Patterns for Red Hat OpenShift on AWS","link":"https://aws.amazon.com/blogs/architecture/architecture-patterns-for-red-hat-openshift-on-aws/","description":"<p><strong>Editor’s note</strong>: Although this blog post and its accompanying code make use of the word “Master,” Red Hat is making open source code more inclusive by eradicating “problematic language.” <a href=\"https://www.wraltechwire.com/2020/06/30/red-hat-making-open-source-code-more-inclusive-by-eradicating-problematic-language/\">Read more about this</a>.</p> \n<h2>Introduction</h2> \n<p><a href=\"https://aws.amazon.com/solutionspace/solutions/red-hat-openshift-on-aws/\">Red Hat OpenShift</a> is an application platform that provides customers with turnkey application platform that is much more than a simple <a href=\"https://aws.amazon.com/kubernetes/\">Kubernetes</a> orchestration.</p> \n<p>OpenShift customers choose AWS as their cloud of choice because of the efficiency, security, and reliability, scalability, and elasticity it provides. Customers seeking to modernize their business, process, and application stacks are drawn to the rich AWS service and feature sets.</p> \n<p>As such, we see some customers migrate from on-premises to AWS or exist in a hybrid context with application workloads running in various locations. For OpenShift customers, this poses a few questions and considerations:</p> \n<ul> \n <li>What are the recommendations for the best way to deploy OpenShift on AWS?</li> \n <li>How is this different from what customers were used to on-premises?</li> \n <li>How does this ensure resilience&nbsp;and availability?</li> \n <li>Do customers need a multi-region, multi-account approach?</li> \n</ul> \n<p>For hybrid customers, there are assumptions and misconceptions:</p> \n<ul> \n <li>Where does the control plane exist?</li> \n <li>&nbsp;Is there replication, and if so, what are the considerations and ramifications?</li> \n</ul> \n<p>In this post I will run through some of the more common questions and patterns for OpenShift on AWS, while looking at some of the terminology and conceptual differences of AWS. I’ll explore migration and hybrid use cases and address some misconceptions.</p> \n<h2>OpenShift building blocks</h2> \n<p>On AWS, OpenShift 4x is the norm. To that effect, I will focus on OpenShift 4, but many of the considerations will apply to both OpenShift 3 and OpenShift 4.</p> \n<p>Let’s unpack some of the OpenShift building blocks. An OpenShift cluster consists of Master, infrastructure, and worker nodes. The Master forms the control plane and infrastructure nodes cater to a routing layer and additional functions, such as logging, monitoring etc. Worker nodes are the nodes that customer application container workloads will exist on.</p> \n<p>When deployed on-premises, OpenShift nodes will be placed in separate network subnets. Depending on distance, latency, etc., a single OpenShift cluster may span two data centers that have some nodes in a subnet in one data center and other subnets in a different data center. This applies to customers with data centers within a few miles of each other with high-speed connectivity. An alternative would be an OpenShift cluster in each data center.</p> \n<p><img class=\"alignnone wp-image-3335 size-full\" src=\"https://d2908q01vomqb2.cloudfront.net/fc074d501302eb2b93e2554793fcaf50b3bf7291/2020/09/21/building-blocks-3.gif\" alt=\"\" width=\"1152\" height=\"720\" /></p> \n<h2>AWS concepts and terminology</h2> \n<p>At AWS, the concept of “region” is a geolocation, such as EMEA (Europe, Middle East, and Africa) or APAC (Asian Pacific) rather than a data center or specific building. An Availability Zone (AZ) is the closest construct on AWS that maps to a physical data center. Within each region you will find multiple (typically three or more) AZs. Note that a single AZ will contain multiple physical data centers but we treat it as a single point of failure. For example, an event that impacts an AZ would be expected to impact all the data centers within that AZ. To this effect, customers should deploy workloads spanning multiple AZs to protect against any event that would impact a single AZ.</p> \n<p>Read more about <a href=\"https://aws.amazon.com/about-aws/global-infrastructure/regions_az/\">Regions, Availability Zones, and Edge Locations</a>.</p> \n<h2>Deploying OpenShift</h2> \n<p>When deploying an OpenShift cluster on AWS, we recommend starting with three Master nodes spread across three AWS AZs and three worker nodes spread across three AZs. This allows for the combination of resilience and availably constructs provided by AWS as well as Red Hat OpenShift. The OpenShift installer provides a means of deploying the underlying AWS infrastructure in two ways: IPI Installer-provisioned infrastructure and UPI user-provisioned infrastructure. Both Red Hat and AWS collect customer feedback and use this to drive recommended patterns that are then included in the OpenShift installer. As such, the OpenShift installer IPI mode becomes a living reference architecture for deploying OpenShift on AWS.</p> \n<p><img class=\"alignnone wp-image-3318 size-large\" src=\"https://d2908q01vomqb2.cloudfront.net/fc074d501302eb2b93e2554793fcaf50b3bf7291/2020/09/21/Install-OpenShift-Container-Platform-4-1024x510.png\" alt=\"Deploying OpenShift\" width=\"1024\" height=\"510\" /></p> \n<p>The installer will require inputs for the environment on which it’s being deployed. In this case, since I am deploying on AWS, I will need to provide the AWS region, AZs, or subnets that related to the AZs, as well as EC2 instance type. The installer will then generate a set of ignition files that will be used during the deployment of OpenShift:</p> \n<pre><code class=\"lang-json\">apiVersion: v1\nbaseDomain: example.com \ncontrolPlane: \n  hyperthreading: Enabled   \n  name: master\n  platform:\n    aws:\n      zones:\n      - us-west-2a\n      - us-west-2b\n      - us-west-2c\n      rootVolume:\n        iops: 4000\n        size: 500\n        type: io1\n      type: m5.xlarge \n  replicas: 3\ncompute: \n- hyperthreading: Enabled \n  name: worker\n  platform:\n    aws:\n      rootVolume:\n        iops: 2000\n        size: 500\n        type: io1 \n      type: m5.xlarge\n      zones:\n      - us-west-2a\n      - us-west-2b\n      - us-west-2c\n  replicas: 3\nmetadata:\n  name: test-cluster \nnetworking:\n  clusterNetwork:\n  - cidr: 10.128.0.0/14\n    hostPrefix: 23\n  machineNetwork:\n  - cidr: 10.0.0.0/16\n  networkType: OpenShiftSDN\n  serviceNetwork:\n  - 172.30.0.0/16\nplatform:\n  aws:\n    region: us-west-2 \n    userTags:\n      adminContact: jdoe\n      costCenter: 7536\npullSecret: '{&quot;auths&quot;: ...}' \nfips: false \nsshKey: ssh-ed25519 AAAA... \n</code></pre> \n<h2>What does this look like at scale?</h2> \n<p>For larger implementations, we would see additional worker nodes spread across three or more AZs. As more worker nodes are added, use of the control plane increases. Initially scaling up the <a href=\"https://aws.amazon.com/ec2/\">Amazon Elastic Compute Cloud</a> (EC2) instance type to a larger instance type is an effective way of addressing this. It’s possible to add more Master nodes, and we recommend that an odd number of nodes are maintained. It is more common to see scaling out of the infrastructure nodes before there is a need to scale Masters. For large-scale implementations, infrastructure functions such as the router, monitoring, and logging functions can be moved to separate EC2 instances from the Master nodes, as well as from each other. It is important to spread the routing layer across multiple AZs, which is critical to maintaining availability and resilience.</p> \n<p>The process of resource separation is now controlled by infrastructure machine sets within OpenShift. An infrastructure machine set would need to be defined, then the infrastructure role edited to be moved from the default to this new infrastructure machine set. <a href=\"https://docs.openshift.com/container-platform/4.4/machine_management/creating-infrastructure-machinesets.html\">Read about this in greater detail</a>.</p> \n<p><img class=\"alignnone wp-image-3333 size-full\" src=\"https://d2908q01vomqb2.cloudfront.net/fc074d501302eb2b93e2554793fcaf50b3bf7291/2020/09/21/scale3.gif\" alt=\"\" width=\"1152\" height=\"720\" /></p> \n<h2>OpenShift in a multi-account context</h2> \n<p>Using AWS accounts as a means of separation is a common well-architected pattern. <a href=\"https://aws.amazon.com/organizations/\">AWS Organizations</a> and <a href=\"https://aws.amazon.com/controltower/\">AWS Control Tower</a> are services that are commonly adopted as part of a multi-account strategy. This is very much the case when looking to enable teams to use their own accounts and when an account vending process is needed to cater for self-service account provisioning.</p> \n<p><img class=\"alignnone size-full wp-image-3319\" src=\"https://d2908q01vomqb2.cloudfront.net/fc074d501302eb2b93e2554793fcaf50b3bf7291/2020/09/21/OpenShift-in-a-multi-account-context.jpg\" alt=\"OpenShift in a multi-account context\" width=\"950\" height=\"786\" /></p> \n<p>OpenShift clusters are deployed into multiple accounts. An OpenShift dev cluster is deployed into an AWS Dev account. This account would typically have <a href=\"https://aws.amazon.com/premiumsupport/plans/developers/\">AWS Developer Support</a> associated with it. A separate production OpenShift cluster would be provisioned into an AWS production account with <a href=\"https://aws.amazon.com/premiumsupport/plans/enterprise/\">AWS Enterprise Support</a>. Enterprise support provides for faster support case response times, and you get the benefit of dedicated resources such as a technical account manager and solutions architect.</p> \n<p>CICD pipelines and processes are then used to control the application life cycle from code to dev to production. The pipelines would push the code to different OpenShift cluster end points at different stages of the life cycle.</p> \n<h2>Hybrid use case implementation</h2> \n<p>A common misconception of hybrid implementations is that there is a single cluster or control plan that has worker nodes in various locations. For example, there could be a cluster where the Master and infrastructure nodes are deployed in one location, but also worker nodes registered with this cluster that exist on-premises as well as in the cloud.</p> \n<p>Having a single customer control plane for a hybrid implementation, even if technically possible, introduces undesired risks.</p> \n<p>There is the potential to take multiple environments with very different resilience characteristics and make them interdependent of each other. This can result in performance and reliability issues, and these may increase not only the possibility of the risk manifesting, but also increase in the impact or blast radius.</p> \n<p>Instead, hybrid implementations will see separate OpenShift clusters deployed into various locations. A customer may deploy clusters on-premises to cater for a workload that can’t be migrated to the cloud in the short term. Separate OpenShift clusters can then deployed into accounts in AWS for workloads on the cloud. Customers can also deploy separate OpenShift clusters in different AWS regions to cater for proximity to the consuming customer.</p> \n<p>Though adding multiple clusters doesn’t add significant administrative overhead, there is a desire to be able to gain visibility and telemetry to all the deployed clusters from a central location. This may see the OpenShift clusters registered with <a href=\"https://www.redhat.com/en/technologies/management/advanced-cluster-management\">Red Hat Advanced Cluster Manager for Kubernetes</a>.</p> \n<h2><img class=\"alignnone wp-image-3334 size-full\" src=\"https://d2908q01vomqb2.cloudfront.net/fc074d501302eb2b93e2554793fcaf50b3bf7291/2020/09/21/hybrid3.gif\" alt=\"\" width=\"1152\" height=\"720\" /></h2> \n<h2>Summary</h2> \n<p>Take advantage of the IPI model, not only as a guide but to also save time. Make AWS Organizations, AWS Control Tower, and the AWS Service catalog part of your cloud and hybrid strategies. These will not only speed up migrations but also form building blocks for a modernized business with a focus of enabling prescriptive self-service. Consider Red Hat advanced cluster manager for multi cluster management.</p>","descriptionType":"html","publishedDate":"Tue, 22 Sep 2020 16:19:39 +0000","feedId":6088,"bgimg":"https://d2908q01vomqb2.cloudfront.net/fc074d501302eb2b93e2554793fcaf50b3bf7291/2020/09/21/building-blocks-3.gif","linkMd5":"7d5304df5146d26414f35d21fa81943f","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn49@2020_6/2020/10/18/17-18-57-023_511221501bd27c8b.webp","destWidth":1152,"destHeight":720,"sourceBytes":287487,"destBytes":888016,"author":"Ryan Niksch","articleImgCdnMap":{"https://d2908q01vomqb2.cloudfront.net/fc074d501302eb2b93e2554793fcaf50b3bf7291/2020/09/21/building-blocks-3.gif":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn49@2020_6/2020/10/18/17-18-57-023_511221501bd27c8b.webp","https://d2908q01vomqb2.cloudfront.net/fc074d501302eb2b93e2554793fcaf50b3bf7291/2020/09/21/Install-OpenShift-Container-Platform-4-1024x510.png":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn66@2020_2/2020/10/18/17-18-59-306_02ed426d2e692d05.webp","https://d2908q01vomqb2.cloudfront.net/fc074d501302eb2b93e2554793fcaf50b3bf7291/2020/09/21/scale3.gif":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn57@2020_3/2020/10/18/17-19-14-957_4023db3ed666a2d4.webp","https://d2908q01vomqb2.cloudfront.net/fc074d501302eb2b93e2554793fcaf50b3bf7291/2020/09/21/OpenShift-in-a-multi-account-context.jpg":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn53@2020_5/2020/10/18/17-18-59-283_a3a8ff6de27b6b9c.webp","https://d2908q01vomqb2.cloudfront.net/fc074d501302eb2b93e2554793fcaf50b3bf7291/2020/09/21/hybrid3.gif":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn61@2020_5/2020/10/18/17-19-16-107_85965f2ad90621fa.webp"},"publishedOrCreatedDate":1603041527967}],"record":{"createdTime":"2020-10-19 01:18:47","updatedTime":"2020-10-19 01:18:47","feedId":6088,"fetchDate":"Sun, 18 Oct 2020 17:18:47 +0000","fetchMs":142,"handleMs":19,"totalMs":29643,"newArticles":0,"totalArticles":20,"status":1,"type":0,"ip":"48b55560af3da9c096a2702d0ffd5d16","hostName":"us-021*","requestId":"319a6edceac5461eb8fd4f0bd9f51a1c_6088","contentType":"application/rss+xml;charset=UTF-8","totalBytes":3317488,"bgimgsTotal":1,"bgimgsGithubTotal":1,"articlesImgsTotal":5,"articlesImgsGithubTotal":5,"successGithubMap":{"myreaderx8":1,"myreaderx7":1,"myreaderx4":1,"myreaderx30":1,"myreaderx19":1},"failGithubMap":{}},"feed":{"createdTime":"2020-08-25 04:32:48","updatedTime":"2020-09-01 11:24:23","id":6088,"name":"AWS Architecture Blog","url":"http://www.awsarchitectureblog.com/atom.xml","subscriber":null,"website":null,"icon":"https://aws.amazon.com/favicon.ico","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx62/cdn35@2020_5/2020/09/01/03-24-22-375_27a4e5d487919ba8.ico","description":"Just another Amazon Web Services site","weekly":null,"link":null},"noPictureArticleList":[],"tmpCommonImgCdnBytes":888016,"tmpBodyImgCdnBytes":2429472,"tmpBgImgCdnBytes":0,"extra4":{"start":1603041527784,"total":0,"statList":[{"spend":164,"msg":"获取xml内容"},{"spend":19,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":18333,"msg":"正文链接上传到cdn"}]},"extra5":5,"extra6":5,"extra7ImgCdnFailResultVector":[],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://us-038.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-013.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-001.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-026.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://d2908q01vomqb2.cloudfront.net/fc074d501302eb2b93e2554793fcaf50b3bf7291/2020/09/21/building-blocks-3.gif","sourceStatusCode":200,"destWidth":1152,"destHeight":720,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn49@2020_6/2020/10/18/17-18-57-023_511221501bd27c8b.webp","sourceBytes":287487,"destBytes":888016,"targetWebpQuality":75,"feedId":6088,"totalSpendMs":10967,"convertSpendMs":8390,"createdTime":"2020-10-19 01:18:48","host":"europe-60*","referer":"https://aws.amazon.com/blogs/architecture/architecture-patterns-for-red-hat-openshift-on-aws/","linkMd5ListStr":"7d5304df5146d26414f35d21fa81943f,7d5304df5146d26414f35d21fa81943f","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"280.7 KB","destSize":"867.2 KB","compressRate":"308.9%"},{"code":1,"isDone":false,"source":"https://d2908q01vomqb2.cloudfront.net/fc074d501302eb2b93e2554793fcaf50b3bf7291/2020/09/21/OpenShift-in-a-multi-account-context.jpg","sourceStatusCode":200,"destWidth":950,"destHeight":786,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn53@2020_5/2020/10/18/17-18-59-283_a3a8ff6de27b6b9c.webp","sourceBytes":52431,"destBytes":22008,"targetWebpQuality":75,"feedId":6088,"totalSpendMs":997,"convertSpendMs":19,"createdTime":"2020-10-19 01:18:59","host":"us-038*","referer":"https://aws.amazon.com/blogs/architecture/architecture-patterns-for-red-hat-openshift-on-aws/","linkMd5ListStr":"7d5304df5146d26414f35d21fa81943f","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"51.2 KB","destSize":"21.5 KB","compressRate":"42%"},{"code":1,"isDone":false,"source":"https://d2908q01vomqb2.cloudfront.net/fc074d501302eb2b93e2554793fcaf50b3bf7291/2020/09/21/Install-OpenShift-Container-Platform-4-1024x510.png","sourceStatusCode":200,"destWidth":1024,"destHeight":510,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn66@2020_2/2020/10/18/17-18-59-306_02ed426d2e692d05.webp","sourceBytes":263837,"destBytes":26456,"targetWebpQuality":75,"feedId":6088,"totalSpendMs":1118,"convertSpendMs":29,"createdTime":"2020-10-19 01:18:59","host":"us-001*","referer":"https://aws.amazon.com/blogs/architecture/architecture-patterns-for-red-hat-openshift-on-aws/","linkMd5ListStr":"7d5304df5146d26414f35d21fa81943f","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"257.7 KB","destSize":"25.8 KB","compressRate":"10%"},{"code":1,"isDone":false,"source":"https://d2908q01vomqb2.cloudfront.net/fc074d501302eb2b93e2554793fcaf50b3bf7291/2020/09/21/scale3.gif","sourceStatusCode":200,"destWidth":1152,"destHeight":720,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn57@2020_3/2020/10/18/17-19-14-957_4023db3ed666a2d4.webp","sourceBytes":333632,"destBytes":1018172,"targetWebpQuality":75,"feedId":6088,"totalSpendMs":17218,"convertSpendMs":15672,"createdTime":"2020-10-19 01:18:59","host":"us-026*","referer":"https://aws.amazon.com/blogs/architecture/architecture-patterns-for-red-hat-openshift-on-aws/","linkMd5ListStr":"7d5304df5146d26414f35d21fa81943f","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"325.8 KB","destSize":"994.3 KB","compressRate":"305.2%"},{"code":1,"isDone":false,"source":"https://d2908q01vomqb2.cloudfront.net/fc074d501302eb2b93e2554793fcaf50b3bf7291/2020/09/21/hybrid3.gif","sourceStatusCode":200,"destWidth":1152,"destHeight":720,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn61@2020_5/2020/10/18/17-19-16-107_85965f2ad90621fa.webp","sourceBytes":385560,"destBytes":1362836,"targetWebpQuality":75,"feedId":6088,"totalSpendMs":18308,"convertSpendMs":16779,"createdTime":"2020-10-19 01:18:59","host":"us-013*","referer":"https://aws.amazon.com/blogs/architecture/architecture-patterns-for-red-hat-openshift-on-aws/","linkMd5ListStr":"7d5304df5146d26414f35d21fa81943f","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"376.5 KB","destSize":"1.3 MB","compressRate":"353.5%"}],"successGithubMap":{"myreaderx8":1,"myreaderx7":1,"myreaderx4":1,"myreaderx30":1,"myreaderx19":1},"failGithubMap":{}}