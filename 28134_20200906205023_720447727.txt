{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-09-07 04:46:19","updatedTime":"2020-09-07 04:46:19","title":"JNDI Injection Bypass","link":"http://bl4ck.in/tricks/2019/01/04/JNDI-Injection-Bypass.html","description":"<h4 id=\"背景\">背景</h4> \n<p>Oracle在jdk8u121之后设置了com.sun.jndi.rmi.object.trustURLCodebase为 false，限制了 RMI 利用方式中从远程加载 Class com.sun.jndi.rmi.registry.RegistryContext#decodeObject</p> \n<div class=\"language-java highlighter-rouge\">\n <div class=\"highlight\">\n  <pre class=\"highlight\"><code>    <span class=\"kd\">private</span> <span class=\"n\">Object</span> <span class=\"nf\">decodeObject</span><span class=\"o\">(</span><span class=\"n\">Remote</span> <span class=\"n\">var1</span><span class=\"o\">,</span> <span class=\"n\">Name</span> <span class=\"n\">var2</span><span class=\"o\">)</span> <span class=\"kd\">throws</span> <span class=\"n\">NamingException</span> <span class=\"o\">{</span>\n        <span class=\"k\">try</span> <span class=\"o\">{</span>\n            <span class=\"n\">Object</span> <span class=\"n\">var3</span> <span class=\"o\">=</span> <span class=\"n\">var1</span> <span class=\"k\">instanceof</span> <span class=\"n\">RemoteReference</span> <span class=\"o\">?</span> <span class=\"o\">((</span><span class=\"n\">RemoteReference</span><span class=\"o\">)</span><span class=\"n\">var1</span><span class=\"o\">).</span><span class=\"na\">getReference</span><span class=\"o\">()</span> <span class=\"o\">:</span> <span class=\"n\">var1</span><span class=\"o\">;</span>\n            <span class=\"n\">Reference</span> <span class=\"n\">var8</span> <span class=\"o\">=</span> <span class=\"kc\">null</span><span class=\"o\">;</span>\n            <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">var3</span> <span class=\"k\">instanceof</span> <span class=\"n\">Reference</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n                <span class=\"n\">var8</span> <span class=\"o\">=</span> <span class=\"o\">(</span><span class=\"n\">Reference</span><span class=\"o\">)</span><span class=\"n\">var3</span><span class=\"o\">;</span>\n            <span class=\"o\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">var3</span> <span class=\"k\">instanceof</span> <span class=\"n\">Referenceable</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n                <span class=\"n\">var8</span> <span class=\"o\">=</span> <span class=\"o\">((</span><span class=\"n\">Referenceable</span><span class=\"o\">)((</span><span class=\"n\">Referenceable</span><span class=\"o\">)</span><span class=\"n\">var3</span><span class=\"o\">)).</span><span class=\"na\">getReference</span><span class=\"o\">();</span>\n            <span class=\"o\">}</span>\n\n            <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">var8</span> <span class=\"o\">!=</span> <span class=\"kc\">null</span> <span class=\"o\">&amp;&amp;</span> <span class=\"n\">var8</span><span class=\"o\">.</span><span class=\"na\">getFactoryClassLocation</span><span class=\"o\">()</span> <span class=\"o\">!=</span> <span class=\"kc\">null</span> <span class=\"o\">&amp;&amp;</span> <span class=\"o\">!</span><span class=\"n\">trustURLCodebase</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n                <span class=\"k\">throw</span> <span class=\"k\">new</span> <span class=\"nf\">ConfigurationException</span><span class=\"o\">(</span><span class=\"s\">\"The object factory is untrusted. Set the system property 'com.sun.jndi.rmi.object.trustURLCodebase' to 'true'.\"</span><span class=\"o\">);</span>\n            <span class=\"o\">}</span> <span class=\"k\">else</span> <span class=\"o\">{</span>\n                <span class=\"k\">return</span> <span class=\"n\">NamingManager</span><span class=\"o\">.</span><span class=\"na\">getObjectInstance</span><span class=\"o\">(</span><span class=\"n\">var3</span><span class=\"o\">,</span> <span class=\"n\">var2</span><span class=\"o\">,</span> <span class=\"k\">this</span><span class=\"o\">,</span> <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">environment</span><span class=\"o\">);</span>\n            <span class=\"o\">}</span>\n        <span class=\"o\">}</span> <span class=\"k\">catch</span> <span class=\"o\">(</span><span class=\"n\">NamingException</span> <span class=\"n\">var5</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n            <span class=\"k\">throw</span> <span class=\"n\">var5</span><span class=\"o\">;</span>\n        <span class=\"o\">}</span> <span class=\"k\">catch</span> <span class=\"o\">(</span><span class=\"n\">RemoteException</span> <span class=\"n\">var6</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n            <span class=\"k\">throw</span> <span class=\"o\">(</span><span class=\"n\">NamingException</span><span class=\"o\">)</span><span class=\"n\">wrapRemoteException</span><span class=\"o\">(</span><span class=\"n\">var6</span><span class=\"o\">).</span><span class=\"na\">fillInStackTrace</span><span class=\"o\">();</span>\n        <span class=\"o\">}</span> <span class=\"k\">catch</span> <span class=\"o\">(</span><span class=\"n\">Exception</span> <span class=\"n\">var7</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n            <span class=\"n\">NamingException</span> <span class=\"n\">var4</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">NamingException</span><span class=\"o\">();</span>\n            <span class=\"n\">var4</span><span class=\"o\">.</span><span class=\"na\">setRootCause</span><span class=\"o\">(</span><span class=\"n\">var7</span><span class=\"o\">);</span>\n            <span class=\"k\">throw</span> <span class=\"n\">var4</span><span class=\"o\">;</span>\n        <span class=\"o\">}</span>\n    <span class=\"o\">}</span>\n</code></pre>\n </div>\n</div> \n<p>Oracle在jdk8u191之后设置了com.sun.jndi.ldap.object.trustURLCodebase为 false,限制了LDAP 利用是从远程加载 Class</p> \n<p>com.sun.naming.internal.VersionHelper12#loadClass(java.lang.String, java.lang.String)</p> \n<div class=\"language-java highlighter-rouge\">\n <div class=\"highlight\">\n  <pre class=\"highlight\"><code>    <span class=\"kd\">public</span> <span class=\"n\">Class</span><span class=\"o\">&lt;?&gt;</span> <span class=\"n\">loadClass</span><span class=\"o\">(</span><span class=\"n\">String</span> <span class=\"n\">className</span><span class=\"o\">,</span> <span class=\"n\">String</span> <span class=\"n\">codebase</span><span class=\"o\">)</span>\n            <span class=\"kd\">throws</span> <span class=\"n\">ClassNotFoundException</span><span class=\"o\">,</span> <span class=\"n\">MalformedURLException</span> <span class=\"o\">{</span>\n        <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"s\">\"true\"</span><span class=\"o\">.</span><span class=\"na\">equalsIgnoreCase</span><span class=\"o\">(</span><span class=\"n\">trustURLCodebase</span><span class=\"o\">))</span> <span class=\"o\">{</span>\n            <span class=\"n\">ClassLoader</span> <span class=\"n\">parent</span> <span class=\"o\">=</span> <span class=\"n\">getContextClassLoader</span><span class=\"o\">();</span>\n            <span class=\"n\">ClassLoader</span> <span class=\"n\">cl</span> <span class=\"o\">=</span>\n                    <span class=\"n\">URLClassLoader</span><span class=\"o\">.</span><span class=\"na\">newInstance</span><span class=\"o\">(</span><span class=\"n\">getUrlArray</span><span class=\"o\">(</span><span class=\"n\">codebase</span><span class=\"o\">),</span> <span class=\"n\">parent</span><span class=\"o\">);</span>\n\n            <span class=\"k\">return</span> <span class=\"nf\">loadClass</span><span class=\"o\">(</span><span class=\"n\">className</span><span class=\"o\">,</span> <span class=\"n\">cl</span><span class=\"o\">);</span>\n        <span class=\"o\">}</span> <span class=\"k\">else</span> <span class=\"o\">{</span>\n            <span class=\"k\">return</span> <span class=\"kc\">null</span><span class=\"o\">;</span>\n        <span class=\"o\">}</span>\n    <span class=\"o\">}</span>\n</code></pre>\n </div>\n</div> \n<h4 id=\"绕过\">绕过</h4> \n<p>针对 RMI 利用的检查方式中最关键的就是 <code class=\"highlighter-rouge\">if (var8 != null &amp;&amp; var8.getFactoryClassLocation() != null &amp;&amp; !trustURLCodebase)</code> 如果 FactoryClassLocation 为空，那么就会进入 <code class=\"highlighter-rouge\">NamingManager.getObjectInstance</code> 在此方法会调用 Reference 中的ObjectFactory。因此绕过思路为在目标 classpath 中寻找实现 ObjectFactory 接口的类。在 Tomcat 中有一处可以利用的符合条件的类<code class=\"highlighter-rouge\">org.apache.naming.factory.BeanFactory</code> 在此类中会获取 Reference 中的<code class=\"highlighter-rouge\">forceString</code> 得到其中的值之后会判断是否包含等号，如果包含则用等号分割，将前一半当做方法名，后一半当做 Hashmap 中的 key。如果不包含等号则方法名变成 set开头。值得注意的是此方法中已经指定了参数类型为 String。后面将会利用反射执行前面所提到的方法。因此需要找到使用了 String 作为参数，并且能 RCE的方法。在<code class=\"highlighter-rouge\">javax.el.ELProcessor</code> 中的 eval 方法就很合适</p> \n<div class=\"highlighter-rouge\">\n <div class=\"highlight\">\n  <pre class=\"highlight\"><code> public Object eval(String expression) {\n        return this.getValue(expression, Object.class);\n    }\n</code></pre>\n </div>\n</div> \n<p><img src=\"http://bl4ck.in/old_img/JNDI-Injection-Demo.gif\" alt=\"Demo\" /></p> \n<h4 id=\"参考\">参考</h4> \n<p>https://www.veracode.com/blog/research/exploiting-jndi-injections-java</p>","descriptionType":"text/html","publishedDate":"Fri, 04 Jan 2019 00:00:00 +0000","feedId":28134,"bgimg":"http://bl4ck.in/old_img/JNDI-Injection-Demo.gif","linkMd5":"805bb9a2191d00ded19eb3a8770ad30e","author":"","articleImgCdnMap":{"http://bl4ck.in/old_img/JNDI-Injection-Demo.gif":null},"publishedOrCreatedDate":1599425179751}],"record":{"createdTime":"2020-09-07 04:46:19","updatedTime":"2020-09-07 04:46:19","feedId":28134,"fetchDate":"Sun, 06 Sep 2020 20:46:19 +0000","fetchMs":106,"handleMs":606,"totalMs":244510,"newArticles":0,"totalArticles":10,"status":1,"type":0,"ip":"d01126ad4678a8e169f9117eff8589f2","hostName":"us-010*","requestId":"0535d267f13147a7bfac158e15be4791_28134","contentType":"application/xml","totalBytes":0,"bgimgsTotal":1,"bgimgsGithubTotal":0,"articlesImgsTotal":1,"articlesImgsGithubTotal":0,"successGithubMap":{},"failGithubMap":{}},"feed":{"createdTime":"2020-09-07 02:43:16","updatedTime":"2020-09-07 02:43:16","id":28134,"name":"Tomato's Blog","url":"https://bl4ck.in/feed.xml","subscriber":116,"website":null,"icon":"http://bl4ck.in/favicon.ico","icon_jsdelivr":null,"description":"Something Specail","weekly":null,"link":"http://bl4ck.in"},"noPictureArticleList":[{"createdTime":"2020-09-07 04:50:23","updatedTime":"2020-09-07 04:50:23","id":null,"feedId":28134,"linkMd5":"805bb9a2191d00ded19eb3a8770ad30e"}],"tmpCommonImgCdnBytes":0,"tmpBodyImgCdnBytes":0,"tmpBgImgCdnBytes":0,"extra4":{"start":1599425179040,"total":0,"statList":[{"spend":109,"msg":"获取xml内容"},{"spend":606,"msg":"解释文章"},{"spend":121578,"msg":"正文链接上传到cdn"},{"spend":121620,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"}]},"extra5":1,"extra6":0,"extra7ImgCdnFailResultVector":[null,null,null,null,null,null],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{},"extra12ImgCdnSuccessResultVector":[],"successGithubMap":{},"failGithubMap":{}}