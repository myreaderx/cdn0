{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2021-09-28 01:18:15","updatedTime":"2021-09-28 01:18:15","title":"Update on .NET Multi-platform App UI (.NET MAUI)","link":"https://devblogs.microsoft.com/dotnet/?p=34323","description":"<p>The .NET 6 project started in late 2020 as we were finishing .NET 5 where we started the journey to unify the .NET platform runtimes, libraries, and SDK. .NET 5 proved to be a very successful release, the first of the annual November releases, and due to the pandemic, the first all remote team release. Most importantly, it has been rapidly and broadly adopted. This November, .NET 6 will GA and will complete the unification of the mono runtime into core, have one set of base libraries for all workloads, and provide one SDK and project system with an expanded set of operating system and device targets. We will also release the next version of the C# language with C#10, have made several enhancements to the web stack ASP.NET, and improved the development experience with hot reload everywhere. We are also working on the next major release of Visual Studio 2022. There’s a whole lot more improvements coming with .NET 6 in November. Read the RC1 release posts for <a href=\"https://devblogs.microsoft.com/dotnet/announcing-net-6-rc1/\">.NET 6</a> and <a href=\"https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-6-rc-1/\">ASP.NET Core in .NET 6</a>.</p>\n<p><a href=\"https://www.github.com/dotnet/maui\" target=\"_blank\" rel=\"noopener\">.NET Multi-platform App UI</a> (.NET MAUI) makes it possible to build native client apps for Windows, macOS, iOS, and Android with a single codebase and provides the native container and controls for Blazor hybrid scenarios. .NET MAUI is a wrapper framework and development experience in Visual Studio that abstracts native UI frameworks already available – WinUI for Windows, Mac Catalyst for macOS/iPadOS, iOS, and Android. Although it&#8217;s not another native UI framework, there is still a significant amount of work to provide optimal development and runtime experiences across these devices.</p>\n<p>The .NET team has been working hard with the community in the open on its development and we are committed to its release. Unfortunately, .NET MAUI will not be ready for production with .NET 6 GA in November. We want to provide the best experience, performance, and quality on day 1 to our users and to do that, we need to slip the schedule. We are now targeting early Q2 of 2022 for .NET MAUI GA.</p>\n<p>In the meantime, we will continue to enhance Xamarin and recommend it for building production mobile apps and continue releasing monthly previews of .NET MAUI. All the features we plan to deliver for .NET MAUI will be available in November when .NET 6 releases, but we will continue to work on quality and addressing customer feedback. We encourage you to give the previews a try. The .NET Upgrade Assistant will also support upgrading Xamarin projects to .NET MAUI.</p>\n<p>.NET 6 RC1 is a “Go Live” release, meaning you can use it in production and you will be supported. This excludes .NET MAUI packages. The next release of .NET MAUI packages, when .NET 6 RC2 releases, will indicate “preview” in the version.</p>\n<p>Thank you for all the feedback, contributions, and excitement that you have shared with us on this journey. Please keep it coming and we look forward to a high-quality release early next year. Now let’s look at some of the new features in this release.</p>\n<h2 id=\"net-maui-preview-8-highlights\">.NET MAUI Preview 8 Highlights</h2>\n<p>The September preview of .NET MAUI completes some important Visual Studio integrations, namely installing .NET MAUI as a workload in the Visual Studio 2022 installer, and folding the Windows platform inside our single, multi-targeted project. With Visual Studio 2022 Preview 4 you can now use broader Hot Reload support with C# and XAML, and the new XAML Live Preview panel for a productive, focused development environment. Within the .NET MAUI SDK itself, preview 8 includes updates to the app startup pattern, the ability to extend a handler, and miscellaneous other new control capabilities as we close on feature completeness.</p>\n<h3 id=\"visual-studio-2022-preview-4-productivity\">Visual Studio 2022 Preview 4 Productivity</h3>\n<p>When installing Visual Studio 2022 Preview 4, you can now check .NET MAUI (preview) within the Mobile Development with .NET workload. This will bring in .NET 6 as well as the optional workload dependencies: Android, iOS, and Mac Catalyst. When targeting desktop, you&#8217;ll also want to choose the Desktop Development with .NET, UWP, and Desktop Development with C++ workloads.</p>\n<p><img src=\"https://devblogs.microsoft.com/dotnet/wp-content/uploads/sites/10/2021/09/vs_install_maui.jpg\" alt=\"image of installer\" /></p>\n<p>Once installed, the .NET MAUI templates and features of Visual Studio are all available. Live Preview will mirror your running application within the Visual Studio window in a panel you can dock anywhere that&#8217;s most convenient to you. The panel supports zooming in and out to focus on every detail of your UI, guides to align elements on both horizontal and vertical axis, and on some platforms you can hover and select UI elements to get sizing and distance information.</p>\n<p><a href=\"https://devblogs.microsoft.com/dotnet/wp-content/uploads/sites/10/2021/09/SuperHotReloadFull.gif\"><img class=\"aligncenter size-full wp-image-34326\" src=\"https://devblogs.microsoft.com/dotnet/wp-content/uploads/sites/10/2021/09/SuperHotReloadFull.gif\" alt=\"Hot Reload for XAML and C# together with XAML Live Preview\" width=\"1920\" height=\"1032\" /></a></p>\n<p>XAML Hot Reload now works well on Android, iOS (on Windows via Hot Restart or a remote build host), and Windows. And .NET Hot Restart is working together with XAML Hot Reload on Android, iOS, and Windows too.</p>\n<p>When you create a new project, you&#8217;ll now see the Windows platform is alongside Android, iOS, and Mac Catalyst within the Platforms folder. To use Windows, you first need to install the Windows App SDK extension for Visual Studio 2022, and then uncomment the TargetFramework node at the top of your csproj file. In a future release, this will be available by default with the extension pre-installed with .NET MAUI.</p>\n<h3 id=\"net-maui-sdk-updates\">.NET MAUI SDK Updates</h3>\n<p>The most notable update that you&#8217;ll need to migrate existing applications to is how we implement the .NET Host Builder pattern. We are now aligned with how ASP.NET and Blazor do this with a MauiProgram class that creates and returns a MauiApp. Each platform now calls that MauiProgram.CreateMauiApp. Compare an existing project with the new templates, or the <a href=\"https://github.com/dotnet/maui/pull/2137\">pull request</a>, to see these changes to Android/MainApplication.cs, iOS/AppDelegate.cs, and macCatalyst/AppDelegate.cs.</p>\n<p>Sample <code>MauiProgram</code>:</p>\n<pre><code class=\"language-csharp\">public static class MauiProgram\n{\n    public static MauiApp CreateMauiApp()\n    {\n        var builder = MauiApp.CreateBuilder();\n        builder\n            .UseMauiApp&#60;App&#62;()\n            .ConfigureFonts(fonts =&#62;\n            {\n                fonts.AddFont(\"OpenSans-Regular.ttf\", \"OpenSansRegular\");\n            });\n\n        return builder.Build();\n    }\n}</code></pre>\n<p>Sample of the Android <code>MainApplication</code>:</p>\n<pre><code class=\"language-csharp\">public class MainApplication : MauiApplication\n{\n    public MainApplication(IntPtr handle, JniHandleOwnership ownership)\n        : base(handle, ownership)\n    {\n    }\n\n    protected override MauiApp CreateMauiApp() =&#62; MauiProgram.CreateMauiApp();\n}</code></pre>\n<h4 id=\"android-updates\">Android Updates</h4>\n<p>Android 12 (API 31) is now the default for .NET 6 applications building for Android. To use Android 12, you&#8217;ll need to <a href=\"https://aka.ms/vs2019-and-jdk-11\">install JDK 11 manually</a>. Once we update the Android tooling in Visual Studio to use JDK 11, we&#8217;ll bundle this dependency by default with .NET MAUI. Until then, JDK 11 may have an unfavorable impact on the Android designer, SDK manager, and device manager.</p>\n<p>Android projects now use the MaterialTheme by default. Make sure <code>Platforms/Android/MainActivity.cs</code> specifies <code>@style/Maui.SplashTheme</code> or you may get runtime errors on Android. Review the <a href=\"https://github.com/dotnet/maui/blob/main/src/Templates/src/templates/maui-mobile/Platforms/Android/MainActivity.cs#L7\">updated .NET MAUI template</a> for example.</p>\n<h4 id=\"other-changes\">Other Changes</h4>\n<p>Other notable changes and additions include:</p>\n<ul>\n<li>MinHeightRequest, MaxHeightRequest, MinWidthRequest, MaxWidthRequest have dropped the &#8220;Request&#8221; suffix and the layout system now treats them as true values</li>\n<li>Simplified method for appending behavior to any control mapper &#8211; <a href=\"https://github.com/dotnet/maui/pull/1859\">#1859</a></li>\n<li>Various improvements to Shell theme styling</li>\n<li>Added RefreshView for Android <a href=\"https://github.com/dotnet/maui/pull/2027\">#2027</a> and iOS <a href=\"https://github.com/dotnet/maui/pull/2029\">#2029</a></li>\n<li>Added AbsoluteLayout <a href=\"https://github.com/dotnet/maui/pull/2136\">#2136</a></li>\n<li>Added Right-to-Left (RTL) FlowDirection <a href=\"https://github.com/dotnet/maui/pull/948\">#948</a></li>\n<li>Added Button.Icon ImageSource <a href=\"https://github.com/dotnet/maui/pull/2079\">#2079</a></li>\n</ul>\n<h2 id=\"get-started-today\">Get Started Today</h2>\n<p>First thing&#8217;s first, remove all previous installations of .NET 6 and Visual Studio 2022 previews from your Windows control panel. Now install Visual Studio 2022 Preview 4 and check .NET MAUI (preview) under the Mobile Development with .NET workload, the Desktop Development with .NET workload, Desktop Development with C++ workload, and Universal Windows Platform.</p>\n<p>Now, install the Windows App SDK <a href=\"https://marketplace.visualstudio.com/items?itemName=ProjectReunion.MicrosoftSingleProjectMSIXPackagingToolsDev17\">Single-project MSIX extension</a>. Before running the Windows target, remember to uncomment the framework in the csproj file.</p>\n<p>Ready? Open Visual Studio 2022 and create a new project. Search for and select .NET MAUI.</p>\n<p><img src=\"https://devblogs.microsoft.com/dotnet/wp-content/uploads/sites/10/2021/09/vs22_p4_new_project.jpg\" alt=\"Visual Studio 2022 new project dialog\" /></p>\n<p>For additional information about getting started with .NET MAUI, refer to our <a href=\"https://docs.microsoft.com/dotnet/maui/get-started/installation\">documentation</a>.</p>\n<h2 id=\"feedback-welcome\">Feedback Welcome</h2>\n<p>Visual Studio 2022 previews are rapidly enabling new features for .NET MAUI. As you encounter any issues with debugging, deploying, and editor related experiences, please use the Help &#62; Send Feedback menu to report your experiences.</p>\n<p>Please let us know about your experiences using .NET MAUI to create new applications by engaging with us on GitHub at <a href=\"https://github.com/dotnet/maui\">dotnet/maui</a>.</p>\n<p>For a look at what is coming in future releases, visit our <a href=\"https://github.com/dotnet/maui/wiki/roadmap\">product roadmap</a>, and for a status of feature completeness visit our <a href=\"https://github.com/dotnet/maui/wiki/status\">status wiki</a>.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://devblogs.microsoft.com/dotnet/update-on-dotnet-maui/\">Update on .NET Multi-platform App UI (.NET MAUI)</a> appeared first on <a rel=\"nofollow\" href=\"https://devblogs.microsoft.com/dotnet\">.NET Blog</a>.</p>\n","descriptionType":"html","publishedDate":"Tue, 14 Sep 2021 15:10:44 +0000","feedId":4673,"bgimg":"https://devblogs.microsoft.com/dotnet/wp-content/uploads/sites/10/2021/09/vs_install_maui.jpg","linkMd5":"48d485b6329b8b477f2ca1b7008a10af","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn48@2020_5/2021/09/27/17-18-15-724_077eb1a2d68da3ca.webp","destWidth":1326,"destHeight":714,"sourceBytes":165917,"destBytes":77470,"author":"Scott Hunter [MSFT]","articleImgCdnMap":{"https://devblogs.microsoft.com/dotnet/wp-content/uploads/sites/10/2021/09/vs_install_maui.jpg":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn48@2020_5/2021/09/27/17-18-15-724_077eb1a2d68da3ca.webp","https://devblogs.microsoft.com/dotnet/wp-content/uploads/sites/10/2021/09/SuperHotReloadFull.gif":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn57@2020_6/2021/09/27/17-18-45-033_a829af0147df4f47.webp","https://devblogs.microsoft.com/dotnet/wp-content/uploads/sites/10/2021/09/vs22_p4_new_project.jpg":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn55@2020_6/2021/09/27/17-18-18-459_7786add7b7fb35e9.webp"},"publishedOrCreatedDate":1632763095137}],"record":{"createdTime":"2021-09-28 01:18:15","updatedTime":"2021-09-28 01:18:15","feedId":4673,"fetchDate":"Mon, 27 Sep 2021 17:18:15 +0000","fetchMs":104,"handleMs":225,"totalMs":30663,"newArticles":0,"totalArticles":10,"status":1,"type":0,"ip":"f306b40366a93aa712f78b685bea0f01","hostName":"us-54*","requestId":"529ff4f68e00425bbf9f9eeaadc1e64c_4673","contentType":"application/rss+xml; charset=UTF-8","totalBytes":1065014,"bgimgsTotal":1,"bgimgsGithubTotal":1,"articlesImgsTotal":3,"articlesImgsGithubTotal":3,"successGithubMap":{"myreaderx8":1,"myreaderx16":1,"myreaderx5oss":1},"failGithubMap":{}},"feed":{"createdTime":"2020-08-25 04:29:50","updatedTime":"2020-09-01 10:54:08","id":4673,"name":".NET Blog","url":"https://blogs.msdn.microsoft.com/dotnet/feed/","subscriber":null,"website":null,"icon":"https://devblogs.microsoft.com/dotnet/wp-content/uploads/sites/10/2018/10/Microsoft-Favicon.png","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx62/cdn36@2020_6/2020/09/01/02-54-09-180_70f6b779a5ea8282.png","description":"Free. Cross-platform. Open source. A developer platform for building all your apps.","weekly":null,"link":null},"noPictureArticleList":[],"tmpCommonImgCdnBytes":77470,"tmpBodyImgCdnBytes":987544,"tmpBgImgCdnBytes":0,"extra4":{"start":1632763094802,"total":0,"statList":[{"spend":110,"msg":"获取xml内容"},{"spend":225,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":29251,"msg":"正文链接上传到cdn"}]},"extra5":3,"extra6":3,"extra7ImgCdnFailResultVector":[],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://us-013.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-014.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://devblogs.microsoft.com/dotnet/wp-content/uploads/sites/10/2021/09/vs_install_maui.jpg","sourceStatusCode":200,"destWidth":1326,"destHeight":714,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn48@2020_5/2021/09/27/17-18-15-724_077eb1a2d68da3ca.webp","sourceBytes":165917,"destBytes":77470,"targetWebpQuality":75,"feedId":4673,"totalSpendMs":926,"convertSpendMs":50,"createdTime":"2021-09-28 01:18:15","host":"europe61*","referer":"https://devblogs.microsoft.com/dotnet/?p=34323","linkMd5ListStr":"48d485b6329b8b477f2ca1b7008a10af,48d485b6329b8b477f2ca1b7008a10af","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"compressRate":"46.7%","sourceSize":"162 KB","destSize":"75.7 KB"},{"code":1,"isDone":false,"source":"https://devblogs.microsoft.com/dotnet/wp-content/uploads/sites/10/2021/09/vs22_p4_new_project.jpg","sourceStatusCode":200,"destWidth":1009,"destHeight":673,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn55@2020_6/2021/09/27/17-18-18-459_7786add7b7fb35e9.webp","sourceBytes":73644,"destBytes":32286,"targetWebpQuality":75,"feedId":4673,"totalSpendMs":484,"convertSpendMs":20,"createdTime":"2021-09-28 01:18:18","host":"us-013*","referer":"https://devblogs.microsoft.com/dotnet/?p=34323","linkMd5ListStr":"48d485b6329b8b477f2ca1b7008a10af","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"compressRate":"43.8%","sourceSize":"71.9 KB","destSize":"31.5 KB"},{"code":1,"isDone":false,"source":"https://devblogs.microsoft.com/dotnet/wp-content/uploads/sites/10/2021/09/SuperHotReloadFull.gif","sourceStatusCode":200,"destWidth":1920,"destHeight":1032,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn57@2020_6/2021/09/27/17-18-45-033_a829af0147df4f47.webp","sourceBytes":1790430,"destBytes":955258,"targetWebpQuality":75,"feedId":4673,"totalSpendMs":29240,"convertSpendMs":28631,"createdTime":"2021-09-28 01:18:16","host":"us-014*","referer":"https://devblogs.microsoft.com/dotnet/?p=34323","linkMd5ListStr":"48d485b6329b8b477f2ca1b7008a10af","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"compressRate":"53.4%","sourceSize":"1.7 MB","destSize":"932.9 KB"}],"successGithubMap":{"myreaderx8":1,"myreaderx16":1,"myreaderx5oss":1},"failGithubMap":{}}