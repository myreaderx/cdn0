{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2021-09-28 21:24:44","updatedTime":"2021-09-28 21:24:44","title":"腾讯安全科恩实验室Black Hat USA 2021议题解读｜基带利用：远程5G智能手机代码执行","link":"http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/","description":"<p><img src=\"http://keenlab.tencent.com/zh/img/BH2021-over-air-baseband/cover2.jpg\" alt=\"\" /></p> \n<p>近年来，5G蜂窝网络被广泛应用。设备为了加入5G网络，都必须配备一个5G调制解调器，负责调制信号和执行无线电协议。该组件通常也被称为基带。这些组件非常重要，因为它们负责处理来自无线电网络的不可信数据。<br>在之前的工作中，科恩实验室研究了上一代网络（2G 3G 4G）的安全调制解调器，并实现了远程无接触的0-click代码执行。<br>本次Black Hat USA 2021，科恩实验室成员Marco与Xingyu Chen在北京时间8月5日凌晨以线上形式分享了议题<strong>《基带利用：远程5G智能手机代码执行》</strong>。该议题探讨了5G网络发生的变化以及安全性方面的改进，并证明了仍然有可能通过无线的方式攻击5G调制解调器完成远程代码执行。<br><a id=\"more\"></a><br><img src=\"http://keenlab.tencent.com/zh/img/BH2021-over-air-baseband/blackhat.png\" alt=\"\"><br><strong>议题完整白皮书下载见文末</strong></br></img></br></br></br></br></p> \n<h1 id=\"作者简介\"><a href=\"http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/#作者简介\" class=\"headerlink\" title=\"作者简介\"></a>作者简介</h1> \n<p><strong>Marco：</strong><br>腾讯科恩实验室高级研究员，研究涉猎iOS、Safari、VMWare、基带等多个方向，多次作为核心成员参与Pwn2Own、Mobile Pwn2Own并获得冠军，多次在国际安全会议上进行演讲，包括Black Hat USA, DEF CON, CanSecWest, ZeroNights, Codegate, HITB and ShakaCon等。<br><img src=\"http://keenlab.tencent.com/zh/img/BH2021-over-air-baseband/marco.png\" alt=\"\" /></br></br></p> \n<p><strong>Xingyu Chen：</strong><br>腾讯科恩实验室安全研究员。主要研究虚拟化和移动安全，曾在不同的云产品和智能手机的低级固件中发现了许多关键漏洞。曾作为A*0*E联合战队选手参加多场CTF比赛，也是DEF CON 28 CTF 决赛总冠军队伍成员。多次在国内外安全会议上进行演讲，包括OffensiveCon、Zer0Con和Tensec等。<br><img src=\"http://keenlab.tencent.com/zh/img/BH2021-over-air-baseband/kira.jpg\" alt=\"\" /></br></br></p> \n<h1 id=\"议题解读\"><a href=\"http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/#议题解读\" class=\"headerlink\" title=\"议题解读\"></a>议题解读</h1> \n<h2 id=\"1-背景\"><a href=\"http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/#1-背景\" class=\"headerlink\" title=\"1.背景\"></a>1.背景</h2> \n<p>多年来，5G网络和基带的安全问题一直没有得到全面的讨论。我们之前的工作是研究老一代网络的安全性，并研究了市面上多款调制解调器的实现，安全研究员Amat Cama也发表了一项关于老一代网络的研究，展示了如何在pwn2own竞赛上成功地攻破三星Shannon基带。来自Comsecuris的研究分析了三星和英特尔基带的安全性。<br>建议读者将上述这些研究作为理解和熟悉本文的参考。我们也将对研究背景和5G网络的新概念进行简单描述。</br></p> \n<h2 id=\"2-目标介绍\"><a href=\"http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/#2-目标介绍\" class=\"headerlink\" title=\"2.目标介绍\"></a>2.目标介绍</h2> \n<p>我们购买了当时可用的几款5G智能手机，他们都支持5G中的“New Radio”。<br><strong>5G设备区分：</strong></br></p> \n<ul> \n <li>非独立模式（NSA）：该模式使用了5G新无线电，并利用了4G网络的其他组件。</li> \n <li>独立模式（SA）：该模式完全实现并使用了5G New Radio和5G网络规范。由于我们认为未来将使用独立模式（SA）作为标准，因此我们决定专注于该模式的研究。<br>我们的测试设备的SoC为Exynos 980并具有三星Shannon基带。<br>基带在其自己的ARM Cortex内核上运行自己的固件和RTOS，与运行Android操作系统的应用处理器 (AP) 分开。 AP和基带可以例如通过PCI-e、共享内存或其他方式进行通信。我们从设备的OTA包中恢复了基带固件。基带固件位于modem.bin二进制文件中。解压并找到加载地址后，我们可以在IDA Pro中加载它并开始寻找漏洞。</br></br></li> \n</ul> \n<h2 id=\"3-审计范围和漏洞挖掘\"><a href=\"http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/#3-审计范围和漏洞挖掘\" class=\"headerlink\" title=\"3.审计范围和漏洞挖掘\"></a>3.审计范围和漏洞挖掘</h2> \n<p>经过一段时间的5G相关代码审计，我们发现了多处漏洞，在此我们选择了其中最稳定的一个来分享，希望您也会通过它对基带当前的安全状态有所认识。在审计调制解调器固件时，我们发现它仍然缺少Stack cookie保护。因此，考虑到在这种环境中缺乏调试功能，使用传统的栈溢出将使我们的利用更容易。<br>本文选择的bug是一个栈溢出。它不仅是栈溢出，而且是基带内部XML解析器中的栈溢出。此 XML解析器负责解析从网络到设备调制解调器的IMS消息。</br></p> \n<h3 id=\"3-1-攻击背景\"><a href=\"http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/#3-1-攻击背景\" class=\"headerlink\" title=\"3.1 攻击背景\"></a>3.1 攻击背景</h3> \n<p>IMS是4G和5G网络中的专用架构，常用的语音呼叫建立在其之上，稍后我们将看到为什么这对本研究很重要。基带是一个IMS客户端，负责处理VoLTE、VoNR消息，因此它必须能够处理SIP消息，IMS服务器使用这些消息与基带进行通信。<br><strong>白皮书内查看INVITE消息示例</strong><br>SIP 是一种基于文本的类似HTTP的协议，包括标头和内容。 接收方（在本文中为基带）需要解析来自服务器的消息。对于不同的消息，内容不仅可以是键值对，还可以是XML格式的文本。XML是一种复杂得多的数据格式，通常由专用库处理。 以上都为基带引入了一个新的攻击面。</br></br></p> \n<h3 id=\"3-2-漏洞\"><a href=\"http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/#3-2-漏洞\" class=\"headerlink\" title=\"3.2 漏洞\"></a>3.2 漏洞</h3> \n<p>我们的OTA RCE漏洞在基带的IMS模块。 在解析SIP协议消息的XML内容时，它会调用函数<code>IMSPL_XmlGetNextTagName</code> 。<br>由于我们的目标基带没有调试符号或信息，所以所有的函数名称、类型和函数签名，都是从日志字符串中提取，或是通过逆向工程手动恢复。<br>我们在这里提供了一个反编译版本，其中省略了一些代码。<br> \n    <figure class=\"highlight plain\"> \n     <table> \n      <tr> \n       <td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br /></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></pre></td> \n       <td class=\"code\"><pre><span class=\"line\">int IMSPL_XmlGetNextTagName(char *src, char *dst) {</span><br><span class=\"line\">    // 1. Skip space characters</span><br><span class=\"line\">    // 2. Find the beginning mark '&lt;'</span><br><span class=\"line\">    // 3. Skip comments and closing tag</span><br><span class=\"line\">    // omitted code</span><br><span class=\"line\"> find_tag_end((char **)v13);</span><br><span class=\"line\"> v9 = v13[0];</span><br><span class=\"line\"> if (v8 != v13[0]) {</span><br><span class=\"line\"> memcpy(dst, (int *)((char *)ptr + 1), v13[0] - v8); // copy tag name to dst</span><br><span class=\"line\"> dst[v9 - v8] = 0;</span><br><span class=\"line\"> v12 = 10601;</span><br><span class=\"line\"> // IMSPL_XmlGetNextTagName: Tag name =</span><br><span class=\"line\"> v11 = &amp;log_struct_437f227c;</span><br><span class=\"line\"> Logs((int *)&amp;v11, (int)dst, -1, -20071784);</span><br><span class=\"line\"> *(unsigned __int8 **)src = v13[0];</span><br><span class=\"line\"> LOBYTE(result) = 1;</span><br><span class=\"line\"> return (unsigned __int8)result;</span><br><span class=\"line\"> }</span><br><span class=\"line\"> // omitted code</span><br><span class=\"line\">}</span><br /></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></pre></td> \n      </tr> \n     </table> \n    </figure></br></br></br></p> \n<p>此函数将从src解析XML标记并将其名称复制到dst ，例如<code>&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"&gt;</code>到目标缓冲区。接下来，我们展示反编译函数<code>find_tag_end</code>（手动命名）并解释它是如何工作的：<br> \n  <figure class=\"highlight plain\"> \n   <table> \n    <tr> \n     <td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br /></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></pre></td> \n     <td class=\"code\"><pre><span class=\"line\">char **find_tag_end(char **result) {</span><br><span class=\"line\">    char *i;               // r1</span><br><span class=\"line\">    unsigned int v2;       // r3</span><br><span class=\"line\">    unsigned int cur_char; // r3</span><br><span class=\"line\"></span><br><span class=\"line\"> for (i = *result;; ++i) {</span><br><span class=\"line\"> cur_char = (unsigned __int8)*i;</span><br><span class=\"line\"> if (cur_char &lt;= 0xD &amp;&amp; ((1 &lt;&lt; cur_char) &amp; 0x2601) != 0) // \\0 \\t \\n \\r</span><br><span class=\"line\"> break;</span><br><span class=\"line\"> v2 = cur_char - 32;</span><br><span class=\"line\"> if (v2 &lt;= 0x1F &amp;&amp;</span><br><span class=\"line\"> ((1 &lt;&lt; v2) &amp; (unsigned int)&amp;unk_C0008001) != 0) // space / &gt; ?</span><br><span class=\"line\"> break;</span><br><span class=\"line\"> }</span><br><span class=\"line\"> *result = i;</span><br><span class=\"line\"> return result;</span><br><span class=\"line\">}</span><br /></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></pre></td> \n    </tr> \n   </table> \n  </figure></br></p> \n<p>该函数通过跳过特殊字符来查找标签的结尾，例如空格、‘/’、‘&gt;’、‘?’。在了解整个功能的工作原理后，我们注意到根本没有安全检查。该函数不知道目标缓冲区和源缓冲区有多长。 因此，该函数的所有调用者都可能被传统的缓冲区溢出所利用。通过交叉引用函数<code>IMSPL_XmlGetNextTagName</code>,我们发现了数百个调用位置。<br>它们中的大多数都容易受到攻击，因为源缓冲区是从OTA 消息中获取的，完全由攻击者控制。</br></p> \n<h2 id=\"4-Exploit\"><a href=\"http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/#4-Exploit\" class=\"headerlink\" title=\"4. Exploit\"></a>4. Exploit</h2> \n<p>我们选择栈溢出是为了漏洞利用的便捷和可靠。正如我们之前所说，由于没有栈cookie，所以我们可以简单地溢出缓冲区，控制存储在栈上的返回地址，并获得代码执行。<br>我们终于通过逆向工程找到了一个很好的候选者：<br> \n   <figure class=\"highlight plain\"> \n    <table> \n     <tr> \n      <td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br /></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></pre></td> \n      <td class=\"code\"><pre><span class=\"line\">int IMSPL_XmlParser_ContactLstDecode(int *a1, int *a2) {</span><br><span class=\"line\">    unsigned __int8 *v4; // r0</span><br><span class=\"line\">    int v5;              // r1</span><br><span class=\"line\">    log_info_s *v7;      // [sp+0h] [bp-98h] BYREF</span><br><span class=\"line\">    int v8;              // [sp+4h] [bp-94h]</span><br><span class=\"line\"> unsigned __int8 *v9; // [sp+8h] [bp-90h] BYREF</span><br><span class=\"line\"> int v10; // [sp+Ch] [bp-8Ch] BYREF</span><br><span class=\"line\"> char v11[136]; // [sp+10h] [bp-88h] BYREF</span><br><span class=\"line\"></span><br><span class=\"line\"> bzero(v11, 100);</span><br><span class=\"line\"> v10 = 0;</span><br><span class=\"line\"> v4 = (unsigned __int8 *)*a1;</span><br><span class=\"line\"> v8 = 10597;</span><br><span class=\"line\"> v9 = v4;</span><br><span class=\"line\"> // ------------------%s----------------------</span><br><span class=\"line\"> v7 = &amp;log_struct_4380937c;</span><br><span class=\"line\"> log_0x418ffa6c(&amp;v7, \"IMSPL_XmlParser_ContactLstDecode\", -20071784);</span><br><span class=\"line\"> if (IMSPL_XmlGetNextTagName((char *)&amp;v9, v11) != 1) {</span><br><span class=\"line\"> LABEL_8:</span><br><span class=\"line\"> *a1 = (int)v9;</span><br><span class=\"line\"> v8 = 10597;</span><br><span class=\"line\"> // Function END</span><br><span class=\"line\"> v7 = &amp;log_struct_43809448;</span><br><span class=\"line\"> log_0x418ffa6c(&amp;v7, -20071784);</span><br><span class=\"line\"> return 1;</span><br><span class=\"line\"> }</span><br><span class=\"line\"> // omitted code</span><br><span class=\"line\">}</span><br /></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></br></pre></td> \n     </tr> \n    </table> \n   </figure></br></br></p> \n<p>我们可以很容易地确认变量v11是栈上大小为100的缓冲区。潜在的栈溢出可能发生在这里。 在临近的函数中也能发现类似的问题，例如<code>IMSPL_XmlParser_RegLstDecode</code>，<code>IMSPL_XmlParser_ContElemChildNodeDecode</code>。根据函数名，我们可以推断触发的标签应该在元素Contact List内。通过向上交叉引用函数来总结调用栈并不困难。<br> \n  <figure class=\"highlight plain\"> \n   <table> \n    <tr> \n     <td class=\"gutter\"><pre><span class=\"line\">1</span><br /></pre></td> \n     <td class=\"code\"><pre><span class=\"line\">IMSPL_XmlParser_RegInfoDecode --&gt; IMSPL_XmlParser_RegInfoElemDecode --&gt; IMSPL_XmlParser_RegLstDecode --&gt; IMSPL_XmlParser_RegistrationElemDecode --&gt; IMSPL_XmlParser_ContactLstDecode</span><br /></pre></td> \n    </tr> \n   </table> \n  </figure></br></p> \n<p>这些函数名称很容易理解。我们可以分辨出变异的payload可以通过SIP协议中的NOTIFY消息传递。 一个能让基带崩溃的简单PoC可以从普通的NOTIFY消息构造。<br>由于payload是以XML格式发送，因此对payload存在限制。<br>记得上面提到的find_tag_end函数，它会将标签名中的以下字符列入黑名单：<code>\"\\x00\\x09\\x0a\\x0d\\x20\\x2f\\x3e\\x3f\"</code>。 因此，在编写ROP链和shellcode时我们不能使用所有可用的字符。除此之外，剩下的是ARM平台上的传统pwnable挑战。</br></br></p> \n<h3 id=\"4-1-Exploitation-Payload\"><a href=\"http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/#4-1-Exploitation-Payload\" class=\"headerlink\" title=\"4.1 Exploitation Payload\"></a>4.1 Exploitation Payload</h3> \n<p><strong>白皮书内查看详细PoC</strong><br>利用点为函数<code>IMSPL_XmlParser_RegLstDecode</code>，为了避免在 ROP 执行后修复栈帧，并能让基带仍然正常工作，最好选择一个较深的地方来触发栈溢出。 所以registration中的一个元素标签是个不错的选择。<br>payload结构：<br><img src=\"http://keenlab.tencent.com/zh/img/BH2021-over-air-baseband/4-1-payload.jpg\" alt=\"有效载荷以 100 个字节“A”开头，然后是栈中保存的寄存器 R4-R11，ROP 链从栈中复制 shellcode 并最终跳转到 shellcode\" /></br></br></br></p> \n<h3 id=\"4-2-漏洞利用的可视化演示\"><a href=\"http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/#4-2-漏洞利用的可视化演示\" class=\"headerlink\" title=\"4.2 漏洞利用的可视化演示\"></a>4.2 漏洞利用的可视化演示</h3> \n<p>为了验证我们是否在目标设备上获得了RCE,我们可以检查手机的ADB日志。它将显示有关蜂窝处理器(CP)如何崩溃的信息。然而，这既不是一种方便的方式，也不是一种很好的视觉效果。因此，我们选择通过在基带内执行shellcode来修改设备的IMEI。按照设计,IMEI不应在手机分发后进行修改。当我们报告整个利用链时，这也被视为一个bug。NVRAM是Non Volatile Memory，用于存储与基带相关的持久化信息。IMEI是存储在基带NVRAM中的一项，但是要修改它的值，首先要知道它的索引。<br><strong>白皮书内查看IMSSH_GetImei函数示例</strong><br>基带中有多个地方调用函数获取IMEI。可以通过逆向函数GetImei来检索索引。在我们的例子中，IMEI1/2的索引分别是<code>0x39a4/0x39a5</code>。有了索引，我们就可以通过在shellcode中调用API <code>pal_RegItemWrite_File</code> 来修改IMEI。</br></br></p> \n<h2 id=\"5-执行\"><a href=\"http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/#5-执行\" class=\"headerlink\" title=\"5.执行\"></a>5.执行</h2> \n<h3 id=\"5-1-环境配置\"><a href=\"http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/#5-1-环境配置\" class=\"headerlink\" title=\"5.1 环境配置\"></a>5.1 环境配置</h3> \n<p>要触发这个 bug，我们需要先搭建一个提供 IMS 服务的网络，然后向基带发送格式错误的短信。 我们的测试环境至少需要一个LTE网络。 虽然它在技术上是一个影响4G和5G的漏洞，但在2020年初，5G的基础设施还没有成熟到足以支持像我们这样的独立研究人员测试其安全性。因此我们决定建立一个支持VoLTE的LTE网络来测试设备。</p> \n<h4 id=\"5-1-1-SDR-Choice\"><a href=\"http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/#5-1-1-SDR-Choice\" class=\"headerlink\" title=\"5.1.1 SDR Choice\"></a>5.1.1 SDR Choice</h4> \n<p>作为设置基站的首选硬件，我们选择了Ettus USRP B210，这是一种在研究人员中非常流行的SDR无线电设备。<br><img src=\"http://keenlab.tencent.com/zh/img/BH2021-over-air-baseband/5-1-1-sdr.jpeg\" alt=\"Ettus USRP B210 [Public domain], via Ettus Research (https://www.ettus.com/ all-products/ub210-kit/)\" /></br></p> \n<h4 id=\"5-1-2-LTE-network-setup\"><a href=\"http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/#5-1-2-LTE-network-setup\" class=\"headerlink\" title=\"5.1.2 LTE network setup\"></a>5.1.2 LTE network setup</h4> \n<p>我们使用了大量开源组件和硬件来完成我们的测试，以下是一些较为重要的:</p> \n<ul> \n <li>srsENB: 这是srsLTE中的eNodeB实现。 它负责直接无线连接到移动手机(UE)。</li> \n <li>Open5GS：我们在LTE网络中使用了它的EPC实现。它们是hss、mme、pcrf、pgw、sgw。</li> \n <li>sysmo-usim-tool&amp;pysim：SIM卡编程工具。</li> \n <li>CoIMS&amp;CoIMS_Wiki：修改手机IMS设置的工具。</li> \n <li>docker_open5gs：用于在docker容器中运行具有VoLTE支持的open5gs。</li> \n</ul> \n<p>UE能够在适当的LTE网络设置后连接到网络，然后我们可以继续进行IMS服务器设置。在我们的测试中，几乎所有不同厂商的基带对eNodeB的频率都非常敏感。您可以查看设备官方信息以获取其支持的频段，然后为srsENB选择合适的Downlink EARFCN参数。<br><img src=\"http://keenlab.tencent.com/zh/img/BH2021-over-air-baseband/5-1-2-band.png\" alt=\"Band and frequency, (https://en.wikipedia.org/wiki/LTE_frequency_bands)\" /></br></p> \n<h3 id=\"5-2-IMS-server-setup-amp-hack\"><a href=\"http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/#5-2-IMS-server-setup-amp-hack\" class=\"headerlink\" title=\"5.2 IMS server setup &amp; hack\"></a>5.2 IMS server setup &amp; hack</h3> \n<p>由于该漏洞只能由提供VoIP服务的恶意IMS服务器触发，因此基本的LTE网络不足以触发该漏洞。不幸的是，满足这种需求的基础设施还远未成熟。现有的开源项目Kamailio满足了我们的需求，但还没有在各种设备（包括我们使用的）上进行很好的测试。 需要付出巨大的努力才能使其工作并成功发送有效payload。<br>VoLTE服务器的基本组件是Rtpengine、FHOSS、P-CSCF、I-CSCF和S-CSCF。 以下是网络拓扑：<br> \n   <figure class=\"highlight plain\"> \n    <table> \n     <tr> \n      <td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br /></br></br></br></br></br></br></br></br></br></br></br></br></br></br></pre></td> \n      <td class=\"code\"><pre><span class=\"line\">SUBNET=172.18.0.0/24</span><br><span class=\"line\">HSS_IP=172.18.0.2</span><br><span class=\"line\">MME_IP=172.18.0.3</span><br><span class=\"line\">SGW_IP=172.18.0.4</span><br><span class=\"line\">PGW_IP=172.18.0.5</span><br><span class=\"line\">PCRF_IP=172.18.0.6</span><br><span class=\"line\">ENB_IP=172.18.0.7</span><br><span class=\"line\">DNS_IP=172.18.0.10</span><br><span class=\"line\">MONGO_IP=172.18.0.11</span><br><span class=\"line\">PCSCF_IP=172.18.0.12</span><br><span class=\"line\">ICSCF_IP=172.18.0.13</span><br><span class=\"line\">SCSCF_IP=172.18.0.14</span><br><span class=\"line\">FHOSS_IP=172.18.0.15</span><br><span class=\"line\">MYSQL_IP=172.18.0.17</span><br><span class=\"line\">RTPENGINE_IP=172.18.0.18</span><br /></br></br></br></br></br></br></br></br></br></br></br></br></br></br></pre></td> \n     </tr> \n    </table> \n   </figure></br></br></p> \n<p><img src=\"http://keenlab.tencent.com/zh/img/BH2021-over-air-baseband/5-2-network-topology.png\" alt=\"Network topology of Open5GS and IMS, (https://raw.githubusercontent.com/miaoski/ docker_open5gs/master/network-topology.png)\" /></p> \n<p>IMS(SIP)消息通过TCP或UDP套接字以IP数据的形式承载。因此,客户端会首先选择IPSec来进行消息传输。XML payload只能通过NOTIFY消息携带，因此我们的客户端必须成功REGISTER和SUBSCRIBE。<br><img src=\"http://keenlab.tencent.com/zh/img/BH2021-over-air-baseband/5-2-IMS.png\" alt=\"(https://www.sharetechnote.com/html/IMS_SIP_Procedure_Reg_Auth_IPSec.html\" /></br></p> \n<p>在进行初步的搭建后，一加6（non-IPSec）、Google Pixel 3（IPSec）可以成功注册VoLTE服务，这意味着我们的环境在高通的芯片上能够很好地工作。但是在使用三星芯片的手机上，整个流程会在注册时失败。<br>但是这些设备能够使用当地运营商的普通SIM卡注册VoLTE，这让我们对修改Kamailio配置和代码充满希望。 首先要做的是在电话上捕获成功的注册流量。 幸运的是，三星的Sysdump Utility中有一个内置的IMS调试工具IMS Logger，它允许我们查看来自应用程序的IMS流量。 下面是一个正常的注册消息及其响应：</br></p> \n<p><img src=\"http://keenlab.tencent.com/zh/img/BH2021-over-air-baseband/5-2-register.jpg\" alt=\"REGISTER message\" /></p> \n<p><img src=\"http://keenlab.tencent.com/zh/img/BH2021-over-air-baseband/5-2-responses.jpg\" alt=\"Server responses with challenge to the UE\" /></p> \n<p><img src=\"http://keenlab.tencent.com/zh/img/BH2021-over-air-baseband/5-2-failed.png\" alt=\"Failed registration response\" /></p> \n<p>Kamailio和本地运营商之间存在一些差异。 我们并不真正知道哪个字段是注册失败的关键。 我们方法是让它们看起来尽可能相似。</p> \n<p>在对Kamailio进行了一些更改后，我们取得了一点进展，我们收到了第二条注册消息。 那么问题就到了服务器端，它并没有提供STATUS 200响应。<br><img src=\"http://keenlab.tencent.com/zh/img/BH2021-over-air-baseband/5-2-wireshark.png\" alt=\"\" /></br></p> \n<p>经过调查，我们发现服务器和客户端之间的IPSec不一致。 我们决定从服务器端强制禁用IPSec。以下是我们打的补丁：<br><img src=\"http://keenlab.tencent.com/zh/img/BH2021-over-air-baseband/5-2-patch.png\" alt=\"Patch to remove IPSec related headers\" /></br></p> \n<p><img src=\"http://keenlab.tencent.com/zh/img/BH2021-over-air-baseband/5-2-patch2.png\" alt=\"Part of the cfg patch\" /></p> \n<h4 id=\"5-2-1参考\"><a href=\"http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/#5-2-1参考\" class=\"headerlink\" title=\"5.2.1参考\"></a>5.2.1参考</h4> \n<p><a href=\"https://nickvsnetworking.com/volte-ims-debugging-on-samsung-handsets-using-sysdump-samsung-ims-logger/\" target=\"_blank\" rel=\"external\">VoLTE/IMS Debugging on Samsung Handsets using Sysdump \\&amp; Samsung IMS Logger</a><br><a href=\"https://nickvsnetworking.com/reverse-engineering-samsung-sysdump-utils-to-unlock-ims-debug-tcpdump-on-samsung-phones/\" target=\"_blank\" rel=\"external\">Reverse Engineering Samsung Sysdump Utils to Unlock IMS Debug \\&amp; TCPdump on Samsung Phones</a></br></p> \n<h3 id=\"5-3-Payload-Delivery\"><a href=\"http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/#5-3-Payload-Delivery\" class=\"headerlink\" title=\"5.3. Payload Delivery\"></a>5.3. Payload Delivery</h3> \n<p>一旦UE注册并订阅到SIP服务器，服务器将发送NOTIFY消息以提供网络中的基本信息，比如其他UE的联系方式等。而payload会以XML的格式存在于NOTIFY消息中。该消息的负责模块是S-CSCF。这是要修改以生成任意有效payload的函数：<br> \n  <figure class=\"highlight plain\"> \n   <table> \n    <tr> \n     <td class=\"gutter\"><pre><span class=\"line\">1</span><br /></pre></td> \n     <td class=\"code\"><pre><span class=\"line\">str generate_reginfo_full(udomain_t* _t, str* impu_list, int num_impus, str *explit_dereg_contact, int num_explit_dereg_contact, unsigned int reginfo_version);</span><br /></pre></td> \n    </tr> \n   </table> \n  </figure></br></p> \n<h2 id=\"6-结论\"><a href=\"http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/#6-结论\" class=\"headerlink\" title=\"6.结论\"></a>6.结论</h2> \n<p>在这项研究中，我们展示了下一代Android设备配备的5G基带安全状态。尽管在网络功能方面已经发生了演变，但我们看到在安全性方面仍然没有过多进步。正如我们实际上已经展示的那样，一些基带缺乏最基本的安全措施，例如栈cookie保护，这让攻击者能够使用缓冲区溢出等简单攻击无线攻击它们。我们在三年前进行过安全研究，但是至今情况似乎没有太大改善。 我们希望在三年后我们可以再次展示一些研究，在一个更加严格的环境中。</p> \n<p><a href=\"http://keenlab.tencent.com/zh/whitepapers/us-21-Over-The-Air-Baseband-Exploit-Gaining-Remote-Code-Execution-on-5G-Smartphones-wp.pdf\">点击下载议题白皮书</a></p>","descriptionType":"html","publishedDate":"Fri, 06 Aug 2021 04:00:00 +0000","feedId":22909,"bgimg":"http://keenlab.tencent.com/zh/img/BH2021-over-air-baseband/cover2.jpg","linkMd5":"4647aff2e69b01b7114c47cb474826a0","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn16@2020_6/2021/09/28/13-25-24-259_163cdf9721c24089.webp","destWidth":1801,"destHeight":812,"sourceBytes":813424,"destBytes":60980,"author":"","articleImgCdnMap":{"http://keenlab.tencent.com/zh/img/BH2021-over-air-baseband/cover2.jpg":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn16@2020_6/2021/09/28/13-25-24-259_163cdf9721c24089.webp","http://keenlab.tencent.com/zh/img/BH2021-over-air-baseband/blackhat.png":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn59@2020_1/2021/09/28/13-25-30-564_53d3f7689e110e0e.webp","http://keenlab.tencent.com/zh/img/BH2021-over-air-baseband/marco.png":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn64@2020_3/2021/09/28/13-25-30-167_82185a39e9653307.webp","http://keenlab.tencent.com/zh/img/BH2021-over-air-baseband/kira.jpg":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn26@2020_4/2021/09/28/13-25-34-616_df75ab1b724c74f7.webp","http://keenlab.tencent.com/zh/img/BH2021-over-air-baseband/4-1-payload.jpg":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn24@2020_4/2021/09/28/13-25-28-642_25fc54d77823c930.webp","http://keenlab.tencent.com/zh/img/BH2021-over-air-baseband/5-1-1-sdr.jpeg":null,"http://keenlab.tencent.com/zh/img/BH2021-over-air-baseband/5-1-2-band.png":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn43@2020_5/2021/09/28/13-25-27-869_31a19f214d71356a.webp","http://keenlab.tencent.com/zh/img/BH2021-over-air-baseband/5-2-network-topology.png":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn68@2020_5/2021/09/28/13-25-28-364_ecf86848905a68da.webp","http://keenlab.tencent.com/zh/img/BH2021-over-air-baseband/5-2-IMS.png":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn47@2020_3/2021/09/28/13-25-28-407_56d4125d219e8bbd.webp","http://keenlab.tencent.com/zh/img/BH2021-over-air-baseband/5-2-register.jpg":null,"http://keenlab.tencent.com/zh/img/BH2021-over-air-baseband/5-2-responses.jpg":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn53@2020_2/2021/09/28/13-25-28-337_6a1acb0380326d19.webp","http://keenlab.tencent.com/zh/img/BH2021-over-air-baseband/5-2-failed.png":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn19@2020_6/2021/09/28/13-25-25-759_4855a904d9b329e0.webp","http://keenlab.tencent.com/zh/img/BH2021-over-air-baseband/5-2-wireshark.png":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn22@2020_1/2021/09/28/13-25-29-383_0f4ea5fbc69137f9.webp","http://keenlab.tencent.com/zh/img/BH2021-over-air-baseband/5-2-patch.png":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn40@2020_6/2021/09/28/13-25-27-905_bc63d09ccf598f71.webp","http://keenlab.tencent.com/zh/img/BH2021-over-air-baseband/5-2-patch2.png":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn71@2020_1/2021/09/28/13-25-27-983_c4c58f1007eaf4c9.webp"},"publishedOrCreatedDate":1632835484392}],"record":{"createdTime":"2021-09-28 21:24:44","updatedTime":"2021-09-28 21:24:44","feedId":22909,"fetchDate":"Tue, 28 Sep 2021 13:24:44 +0000","fetchMs":953,"handleMs":16,"totalMs":52200,"newArticles":0,"totalArticles":20,"status":1,"type":0,"ip":"f306b40366a93aa712f78b685bea0f01","hostName":"us-003*","requestId":"8fe0dc53bc844f5495701b84d7228b75_22909","contentType":"application/xml","totalBytes":3054738,"bgimgsTotal":1,"bgimgsGithubTotal":1,"articlesImgsTotal":15,"articlesImgsGithubTotal":13,"successGithubMap":{"myreaderx25":1,"myreaderx7":1,"myreaderx6":1,"myreaderx16":1,"myreaderx32":1,"myreaderx10":1,"myreaderx21":1,"myreaderx4":1,"myreaderx3":1,"myreaderx1":1,"myreaderx30":1,"myreaderx29":1,"myreaderx19":1},"failGithubMap":{"myreaderx23":1,"myreaderx31":1}},"feed":{"createdTime":"2020-09-07 02:28:57","updatedTime":"2021-04-03 13:57:52","id":22909,"name":"腾讯科恩实验室官方博客","url":"http://keenlab.tencent.com/zh/atom.xml","subscriber":144,"website":null,"icon":"http://keenlab.tencent.com/favicon.ico","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx63/cdn63@2020_2/2021/04/03/05-57-51-366_1f7694d28da7227f.ico","description":"","weekly":null,"link":null},"noPictureArticleList":[{"createdTime":"2021-09-28 21:25:35","updatedTime":"2021-09-28 21:25:35","id":null,"feedId":22909,"linkMd5":"4647aff2e69b01b7114c47cb474826a0"}],"tmpCommonImgCdnBytes":60980,"tmpBodyImgCdnBytes":2993758,"tmpBgImgCdnBytes":0,"extra4":{"start":1632835483406,"total":0,"statList":[{"spend":970,"msg":"获取xml内容"},{"spend":16,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":11107,"msg":"正文链接上传到cdn"}]},"extra5":15,"extra6":15,"extra7ImgCdnFailResultVector":[{"code":1,"isDone":false,"source":"http://keenlab.tencent.com/zh/img/BH2021-over-air-baseband/5-1-1-sdr.jpeg","sourceStatusCode":200,"destWidth":475,"destHeight":391,"sourceBytes":36734,"destBytes":17798,"targetWebpQuality":75,"feedId":22909,"totalSpendMs":3710,"convertSpendMs":7,"createdTime":"2021-09-28 21:25:24","host":"us-037*","referer":"http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/","linkMd5ListStr":"4647aff2e69b01b7114c47cb474826a0","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx31/cdn36/contents/2021/09/28/13-25-28-187_3750f0a7053cfd00.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69855631.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Tue, 28 Sep 2021 13:25:28 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["EDF4:3404:65E1:FBEB:615317C8"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1632837909"],"x-ratelimit-resource":["core"],"x-ratelimit-used":["60"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx31/cdn36/contents/2021/09/28/13-25-28-187_3750f0a7053cfd00.webp","historyStatusCode":[],"spendMs":36},"base64UserPassword":null,"token":"da243******************************d9e47"},"githubUser":"myreaderx31","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"35.9 KB","destSize":"17.4 KB","compressRate":"48.5%"},{"code":1,"isDone":false,"source":"http://keenlab.tencent.com/zh/img/BH2021-over-air-baseband/5-2-register.jpg","sourceStatusCode":200,"destWidth":1080,"destHeight":2280,"sourceBytes":780206,"destBytes":238056,"targetWebpQuality":75,"feedId":22909,"totalSpendMs":6145,"convertSpendMs":137,"createdTime":"2021-09-28 21:25:24","host":"us-040*","referer":"http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/","linkMd5ListStr":"4647aff2e69b01b7114c47cb474826a0","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn51/contents/2021/09/28/13-25-30-612_f0657abc11b3117e.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Tue, 28 Sep 2021 13:25:30 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["B866:3E0A:26B5:71CE:615317CA"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1632837892"],"x-ratelimit-resource":["core"],"x-ratelimit-used":["60"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn51/contents/2021/09/28/13-25-30-612_f0657abc11b3117e.webp","historyStatusCode":[],"spendMs":44},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"761.9 KB","destSize":"232.5 KB","compressRate":"30.5%"},{"code":1,"isDone":false,"source":"http://keenlab.tencent.com/zh/img/BH2021-over-air-baseband/5-1-1-sdr.jpeg","sourceStatusCode":200,"destWidth":475,"destHeight":391,"sourceBytes":36734,"destBytes":17798,"targetWebpQuality":75,"feedId":22909,"totalSpendMs":2921,"convertSpendMs":29,"createdTime":"2021-09-28 21:25:28","host":"us-025*","referer":"http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/","linkMd5ListStr":"4647aff2e69b01b7114c47cb474826a0","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx31/cdn36/contents/2021/09/28/13-25-31-117_3750f0a7053cfd00.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69855631.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Tue, 28 Sep 2021 13:25:31 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["D2E4:036C:5D1F:FD31:615317CB"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1632837909"],"x-ratelimit-resource":["core"],"x-ratelimit-used":["60"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx31/cdn36/contents/2021/09/28/13-25-31-117_3750f0a7053cfd00.webp","historyStatusCode":[],"spendMs":34},"base64UserPassword":null,"token":"da243******************************d9e47"},"githubUser":"myreaderx31","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"35.9 KB","destSize":"17.4 KB","compressRate":"48.5%"},{"code":1,"isDone":false,"source":"http://keenlab.tencent.com/zh/img/BH2021-over-air-baseband/5-2-register.jpg","sourceStatusCode":200,"destWidth":1080,"destHeight":2280,"sourceBytes":780206,"destBytes":238056,"targetWebpQuality":75,"feedId":22909,"totalSpendMs":3908,"convertSpendMs":120,"createdTime":"2021-09-28 21:25:30","host":"us-005*","referer":"http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/","linkMd5ListStr":"4647aff2e69b01b7114c47cb474826a0","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn51/contents/2021/09/28/13-25-34-530_f0657abc11b3117e.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Tue, 28 Sep 2021 13:25:34 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["E304:4CE8:4C04:DF4A:615317CE"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1632837892"],"x-ratelimit-resource":["core"],"x-ratelimit-used":["60"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn51/contents/2021/09/28/13-25-34-530_f0657abc11b3117e.webp","historyStatusCode":[],"spendMs":38},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"761.9 KB","destSize":"232.5 KB","compressRate":"30.5%"}],"extra10_invalidATagHrefValue":{"http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/_#2-目标介绍":"http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/#2-目标介绍","http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/_#5-2-IMS-server-setup-amp-hack":"http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/#5-2-IMS-server-setup-amp-hack","http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/_#5-2-1参考":"http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/#5-2-1参考","http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/_#3-审计范围和漏洞挖掘":"http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/#3-审计范围和漏洞挖掘","http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/_#4-2-漏洞利用的可视化演示":"http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/#4-2-漏洞利用的可视化演示","http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/_#5-执行":"http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/#5-执行","http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/_#5-1-1-SDR-Choice":"http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/#5-1-1-SDR-Choice","http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/_/zh/whitepapers/us-21-Over-The-Air-Baseband-Exploit-Gaining-Remote-Code-Execution-on-5G-Smartphones-wp.pdf":"http://keenlab.tencent.com/zh/whitepapers/us-21-Over-The-Air-Baseband-Exploit-Gaining-Remote-Code-Execution-on-5G-Smartphones-wp.pdf","http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/_#1-背景":"http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/#1-背景","http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/_#6-结论":"http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/#6-结论","http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/_#5-1-环境配置":"http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/#5-1-环境配置","http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/_#5-3-Payload-Delivery":"http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/#5-3-Payload-Delivery","http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/_#议题解读":"http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/#议题解读","http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/_#3-1-攻击背景":"http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/#3-1-攻击背景","http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/_#4-1-Exploitation-Payload":"http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/#4-1-Exploitation-Payload","http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/_#3-2-漏洞":"http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/#3-2-漏洞","http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/_#4-Exploit":"http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/#4-Exploit","http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/_#作者简介":"http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/#作者简介","http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/_#5-1-2-LTE-network-setup":"http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/#5-1-2-LTE-network-setup"},"extra111_proxyServerAndStatMap":{"http://us-013.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-56.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-037.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-005.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://europe-58.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-025.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://europe-25.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-017.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-57.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-59.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe67.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-51.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-040.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-029.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"http://keenlab.tencent.com/zh/img/BH2021-over-air-baseband/cover2.jpg","sourceStatusCode":200,"destWidth":1801,"destHeight":812,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn16@2020_6/2021/09/28/13-25-24-259_163cdf9721c24089.webp","sourceBytes":813424,"destBytes":60980,"targetWebpQuality":75,"feedId":22909,"totalSpendMs":4966,"convertSpendMs":96,"createdTime":"2021-09-28 21:25:19","host":"us-033*","referer":"http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/","linkMd5ListStr":"4647aff2e69b01b7114c47cb474826a0,4647aff2e69b01b7114c47cb474826a0","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"794.4 KB","destSize":"59.6 KB","compressRate":"7.5%"},{"code":1,"isDone":false,"source":"http://keenlab.tencent.com/zh/img/BH2021-over-air-baseband/5-2-failed.png","sourceStatusCode":200,"destWidth":1920,"destHeight":1190,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn19@2020_6/2021/09/28/13-25-25-759_4855a904d9b329e0.webp","sourceBytes":304889,"destBytes":175886,"targetWebpQuality":75,"feedId":22909,"totalSpendMs":1698,"convertSpendMs":111,"createdTime":"2021-09-28 21:25:24","host":"europe-57*","referer":"http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/","linkMd5ListStr":"4647aff2e69b01b7114c47cb474826a0","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"297.7 KB","destSize":"171.8 KB","compressRate":"57.7%"},{"code":1,"isDone":false,"source":"http://keenlab.tencent.com/zh/img/BH2021-over-air-baseband/5-1-2-band.png","sourceStatusCode":200,"destWidth":2312,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn43@2020_5/2021/09/28/13-25-27-869_31a19f214d71356a.webp","sourceBytes":188870,"destBytes":85296,"targetWebpQuality":75,"feedId":22909,"totalSpendMs":3604,"convertSpendMs":82,"createdTime":"2021-09-28 21:25:24","host":"us-013*","referer":"http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/","linkMd5ListStr":"4647aff2e69b01b7114c47cb474826a0","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"184.4 KB","destSize":"83.3 KB","compressRate":"45.2%"},{"code":1,"isDone":false,"source":"http://keenlab.tencent.com/zh/img/BH2021-over-air-baseband/5-2-patch.png","sourceStatusCode":200,"destWidth":1298,"destHeight":860,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn40@2020_6/2021/09/28/13-25-27-905_bc63d09ccf598f71.webp","sourceBytes":132143,"destBytes":58450,"targetWebpQuality":75,"feedId":22909,"totalSpendMs":3668,"convertSpendMs":91,"createdTime":"2021-09-28 21:25:24","host":"us-025*","referer":"http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/","linkMd5ListStr":"4647aff2e69b01b7114c47cb474826a0","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"129 KB","destSize":"57.1 KB","compressRate":"44.2%"},{"code":1,"isDone":false,"source":"http://keenlab.tencent.com/zh/img/BH2021-over-air-baseband/5-2-patch2.png","sourceStatusCode":200,"destWidth":1014,"destHeight":596,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn71@2020_1/2021/09/28/13-25-27-983_c4c58f1007eaf4c9.webp","sourceBytes":92302,"destBytes":38374,"targetWebpQuality":75,"feedId":22909,"totalSpendMs":3782,"convertSpendMs":47,"createdTime":"2021-09-28 21:25:24","host":"europe67*","referer":"http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/","linkMd5ListStr":"4647aff2e69b01b7114c47cb474826a0","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"90.1 KB","destSize":"37.5 KB","compressRate":"41.6%"},{"code":1,"isDone":false,"source":"http://keenlab.tencent.com/zh/img/BH2021-over-air-baseband/5-2-responses.jpg","sourceStatusCode":200,"destWidth":1080,"destHeight":2280,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn53@2020_2/2021/09/28/13-25-28-337_6a1acb0380326d19.webp","sourceBytes":371164,"destBytes":113796,"targetWebpQuality":75,"feedId":22909,"totalSpendMs":4191,"convertSpendMs":71,"createdTime":"2021-09-28 21:25:24","host":"us-51*","referer":"http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/","linkMd5ListStr":"4647aff2e69b01b7114c47cb474826a0","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"362.5 KB","destSize":"111.1 KB","compressRate":"30.7%"},{"code":1,"isDone":false,"source":"http://keenlab.tencent.com/zh/img/BH2021-over-air-baseband/5-2-network-topology.png","sourceStatusCode":200,"destWidth":1702,"destHeight":367,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn68@2020_5/2021/09/28/13-25-28-364_ecf86848905a68da.webp","sourceBytes":129220,"destBytes":56088,"targetWebpQuality":75,"feedId":22909,"totalSpendMs":4193,"convertSpendMs":49,"createdTime":"2021-09-28 21:25:24","host":"us-005*","referer":"http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/","linkMd5ListStr":"4647aff2e69b01b7114c47cb474826a0","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"126.2 KB","destSize":"54.8 KB","compressRate":"43.4%"},{"code":1,"isDone":false,"source":"http://keenlab.tencent.com/zh/img/BH2021-over-air-baseband/5-2-IMS.png","sourceStatusCode":200,"destWidth":738,"destHeight":433,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn47@2020_3/2021/09/28/13-25-28-407_56d4125d219e8bbd.webp","sourceBytes":80382,"destBytes":59838,"targetWebpQuality":75,"feedId":22909,"totalSpendMs":4350,"convertSpendMs":17,"createdTime":"2021-09-28 21:25:24","host":"europe-25*","referer":"http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/","linkMd5ListStr":"4647aff2e69b01b7114c47cb474826a0","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"78.5 KB","destSize":"58.4 KB","compressRate":"74.4%"},{"code":1,"isDone":false,"source":"http://keenlab.tencent.com/zh/img/BH2021-over-air-baseband/4-1-payload.jpg","sourceStatusCode":200,"destWidth":1098,"destHeight":1182,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn24@2020_4/2021/09/28/13-25-28-642_25fc54d77823c930.webp","sourceBytes":76674,"destBytes":33942,"targetWebpQuality":75,"feedId":22909,"totalSpendMs":4523,"convertSpendMs":39,"createdTime":"2021-09-28 21:25:24","host":"europe-58*","referer":"http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/","linkMd5ListStr":"4647aff2e69b01b7114c47cb474826a0","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"74.9 KB","destSize":"33.1 KB","compressRate":"44.3%"},{"code":1,"isDone":false,"source":"http://keenlab.tencent.com/zh/img/BH2021-over-air-baseband/5-2-wireshark.png","sourceStatusCode":200,"destWidth":2782,"destHeight":474,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn22@2020_1/2021/09/28/13-25-29-383_0f4ea5fbc69137f9.webp","sourceBytes":238036,"destBytes":133686,"targetWebpQuality":75,"feedId":22909,"totalSpendMs":5285,"convertSpendMs":82,"createdTime":"2021-09-28 21:25:24","host":"europe-56*","referer":"http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/","linkMd5ListStr":"4647aff2e69b01b7114c47cb474826a0","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"232.5 KB","destSize":"130.6 KB","compressRate":"56.2%"},{"code":1,"isDone":false,"source":"http://keenlab.tencent.com/zh/img/BH2021-over-air-baseband/marco.png","sourceStatusCode":200,"destWidth":1080,"destHeight":1080,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn64@2020_3/2021/09/28/13-25-30-167_82185a39e9653307.webp","sourceBytes":1169302,"destBytes":188274,"targetWebpQuality":75,"feedId":22909,"totalSpendMs":5927,"convertSpendMs":88,"createdTime":"2021-09-28 21:25:24","host":"us-017*","referer":"http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/","linkMd5ListStr":"4647aff2e69b01b7114c47cb474826a0","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.1 MB","destSize":"183.9 KB","compressRate":"16.1%"},{"code":1,"isDone":false,"source":"http://keenlab.tencent.com/zh/img/BH2021-over-air-baseband/blackhat.png","sourceStatusCode":200,"destWidth":1104,"destHeight":654,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn59@2020_1/2021/09/28/13-25-30-564_53d3f7689e110e0e.webp","sourceBytes":978414,"destBytes":109348,"targetWebpQuality":75,"feedId":22909,"totalSpendMs":6475,"convertSpendMs":95,"createdTime":"2021-09-28 21:25:24","host":"us-029*","referer":"http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/","linkMd5ListStr":"4647aff2e69b01b7114c47cb474826a0","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"955.5 KB","destSize":"106.8 KB","compressRate":"11.2%"},{"code":1,"isDone":false,"source":"http://keenlab.tencent.com/zh/img/BH2021-over-air-baseband/kira.jpg","sourceStatusCode":200,"destWidth":4268,"destHeight":4268,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn26@2020_4/2021/09/28/13-25-34-616_df75ab1b724c74f7.webp","sourceBytes":3656548,"destBytes":1940780,"targetWebpQuality":75,"feedId":22909,"totalSpendMs":10963,"convertSpendMs":978,"createdTime":"2021-09-28 21:25:24","host":"europe-59*","referer":"http://keenlab.tencent.com/2021/08/06/BlackHatUSA2021-over-the-air-baseband/","linkMd5ListStr":"4647aff2e69b01b7114c47cb474826a0","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"3.5 MB","destSize":"1.9 MB","compressRate":"53.1%"}],"successGithubMap":{"myreaderx25":1,"myreaderx7":1,"myreaderx6":1,"myreaderx16":1,"myreaderx32":1,"myreaderx10":1,"myreaderx21":1,"myreaderx4":1,"myreaderx3":1,"myreaderx1":1,"myreaderx30":1,"myreaderx29":1,"myreaderx19":1},"failGithubMap":{"myreaderx23":1,"myreaderx31":1}}