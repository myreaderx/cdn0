{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-10-13 21:37:27","updatedTime":"2020-10-13 21:37:27","title":"Expectation-Maximization with Less Arbitrariness","link":"http://blog.sigfpe.com/2016/10/expectation-maximization-with-less.html","description":"<b>Introduction</b><p>There are many introductions to the Expectation-Maximisation algorithm. Unfortunately every one I could find uses arbitrary seeming tricks that seem to be plucked out of a hat by magic. They can all be justified in retrospect, but I find it more useful to learn from reusable techniques that you can apply to further problems. Examples of tricks I've seen used are: <ol><li>Using Jensen's inequality.  It's easy to find inequalities that apply in any situation.  But there are often many ways to apply them.  Why apply it to <i>this</i> way of writing this expression and not that one which is equal?</li><li>Substituting <img src=\"https://chart.googleapis.com/chart?cht=tx&chl=1%3DA%2FA\" style=\"vertical-align:middle\"> in the middle of an expression.  Again, you can use <img src=\"https://chart.googleapis.com/chart?cht=tx&chl=1%3DA%2FA\" style=\"vertical-align:middle\"> just about anywhere.  Why choose this <img src=\"https://chart.googleapis.com/chart?cht=tx&chl=A\" style=\"vertical-align:middle\"> at this time? Similarly I found derivations that insert a <img src=\"https://chart.googleapis.com/chart?cht=tx&chl=B-B\" style=\"vertical-align:middle\"> into an expression.</li><li>Majorisation-Minimisation.  This is a great technique, but involves choosing a function that majorises another.  There are so many ways to do this, it's hard to imagine any general purpose method that tells you how to narrow down the choice.</li></ol>My goal is to fill in the details of one key step in the derivation of the EM algorithm in a way that makes it inevitable rather than arbitrary. There's nothing original here, I'm merely expanding on a <a href=\"http://stats.stackexchange.com/questions/44513/the-relationship-between-expectation-maximization-and-majorization-minimization/59470#59470\">stackexchange answer</a>. <P><BR><b>Generalities about EM</b><p>The EM algorithm seeks to construct a maximum likelihood estimator (MLE) with a twist: there are some variables in the system that we can't observe. <P><BR>First assume no hidden variables. We assume there is a vector of parameters <img src=\"https://chart.googleapis.com/chart?cht=tx&chl=%5Ctheta%3D%28%5Ctheta_i%29\" style=\"vertical-align:middle\"> that defines some model. We make some observations <img src=\"https://chart.googleapis.com/chart?cht=tx&chl=x%3D%28x_j%29\" style=\"vertical-align:middle\">. We have a probability density <img src=\"https://chart.googleapis.com/chart?cht=tx&chl=P%28x%7C%5Ctheta%29\" style=\"vertical-align:middle\"> that depends on <img src=\"https://chart.googleapis.com/chart?cht=tx&chl=%5Ctheta\" style=\"vertical-align:middle\">. The likelihood of <img src=\"https://chart.googleapis.com/chart?cht=tx&chl=%5Ctheta\" style=\"vertical-align:middle\"> given the observations <img src=\"https://chart.googleapis.com/chart?cht=tx&chl=x\" style=\"vertical-align:middle\"> is <img src=\"https://chart.googleapis.com/chart?cht=tx&chl=l%28%5Ctheta%7Cx%29%3DP%28x%7C%5Ctheta%29\" style=\"vertical-align:middle\">. The maximum likelhood estimator for <img src=\"https://chart.googleapis.com/chart?cht=tx&chl=%5Ctheta\" style=\"vertical-align:middle\"> is the choice of <img src=\"https://chart.googleapis.com/chart?cht=tx&chl=%5Ctheta\" style=\"vertical-align:middle\"> that maximises <img src=\"https://chart.googleapis.com/chart?cht=tx&chl=l%28%5Ctheta%7Cx%29\" style=\"vertical-align:middle\"> for the <img src=\"https://chart.googleapis.com/chart?cht=tx&chl=x\" style=\"vertical-align:middle\"> we have observed. <P><BR>Now suppose there are also some variables <img src=\"https://chart.googleapis.com/chart?cht=tx&chl=z%3D%28z_k%29\" style=\"vertical-align:middle\"> that we didn't get to observe. We assume a density <img src=\"https://chart.googleapis.com/chart?cht=tx&chl=P%28x%2Cz%7C%5Ctheta%29\" style=\"vertical-align:middle\">. We now have <blockquote><img src=\"https://chart.googleapis.com/chart?cht=tx&chl=P%28x%7C%5Ctheta%29%3D%5Csum_z%20P%28x%2Cz%7C%5Ctheta%29\" style=\"vertical-align:middle\"></blockquote>where we sum over all possible values of <img src=\"https://chart.googleapis.com/chart?cht=tx&chl=z\" style=\"vertical-align:middle\">. The MLE approach says we now need to maximise <blockquote><img src=\"https://chart.googleapis.com/chart?cht=tx&chl=l%28%5Ctheta%7Cx%29%3D%5Csum_z%20P%28x%2Cz%7C%5Ctheta%29.\" style=\"vertical-align:middle\"></blockquote>One of the things that is a challenge here is that the components of <img src=\"https://chart.googleapis.com/chart?cht=tx&chl=%5Ctheta\" style=\"vertical-align:middle\"> might be mixed up among the terms in the sum. If, instead, each term only referred to its own unique block of <img src=\"https://chart.googleapis.com/chart?cht=tx&chl=%5Ctheta_i\" style=\"vertical-align:middle\">, then the maximisation would be easier as we could maximise each term independently of the others. Here's how we might move in that direction. Consider instead the log-likelihood <blockquote><img src=\"https://chart.googleapis.com/chart?cht=tx&chl=%5Clog%20l%28%5Ctheta%7Cx%29%3D%5Clog%5Csum_z%20P%28x%2Cz%7C%5Ctheta%29.\" style=\"vertical-align:middle\"></blockquote>Now imagine that by magic we could commute the logarithm with the sum. We'd need to maximise <blockquote><img src=\"https://chart.googleapis.com/chart?cht=tx&chl=%5Csum_z%20%5Clog%20P%28x%2Cz%7C%5Ctheta%29.\" style=\"vertical-align:middle\"></blockquote>One reason this would be to our advantage is that <img src=\"https://chart.googleapis.com/chart?cht=tx&chl=P%28x%2Cz%7C%5Ctheta%29\" style=\"vertical-align:middle\"> often takes the form <img src=\"https://chart.googleapis.com/chart?cht=tx&chl=%5Cexp%28f%28x%2Cz%2C%5Ctheta%29%29\" style=\"vertical-align:middle\"> where <img src=\"https://chart.googleapis.com/chart?cht=tx&chl=f\" style=\"vertical-align:middle\"> is a simple function to optimise. In addition, <img src=\"https://chart.googleapis.com/chart?cht=tx&chl=f\" style=\"vertical-align:middle\"> may break up as a sum of terms, each with its own block of <img src=\"https://chart.googleapis.com/chart?cht=tx&chl=%5Ctheta_i\" style=\"vertical-align:middle\">'s. Moving the logarithm inside the sum would give us something we could easily maximise term by term. What's more, the <img src=\"https://chart.googleapis.com/chart?cht=tx&chl=P%28x%2Cz%7C%5Ctheta%29\" style=\"vertical-align:middle\"> for each <img src=\"https://chart.googleapis.com/chart?cht=tx&chl=z\" style=\"vertical-align:middle\"> is often a standard probability distribution whose likelihood we already know how to maximise. But, of course, we can't just move that logarithm in. <P><BR><b>Maximisation by proxy</b><p>Sometimes a function is too hard to optimise directly. But if we have a guess for an optimum, we can replace our function with a proxy function that approximates it in the neighbourhood of our guess and optimise that instead. That will give us a new guess and we can continue from there. This is the basis of gradient descent. Suppose <img src=\"https://chart.googleapis.com/chart?cht=tx&chl=f\" style=\"vertical-align:middle\"> is a differentiable function in a neighbourhood of <img src=\"https://chart.googleapis.com/chart?cht=tx&chl=x_0\" style=\"vertical-align:middle\">. Then around <img src=\"https://chart.googleapis.com/chart?cht=tx&chl=x_0\" style=\"vertical-align:middle\"> we have <blockquote><img src=\"https://chart.googleapis.com/chart?cht=tx&chl=f%28x%29%20%5Capprox%20f%28x_0%29%2Bf%27%28x_0%29%5Ccdot%20%28x-x_0%29.\" style=\"vertical-align:middle\"></blockquote>We can try optimising <img src=\"https://chart.googleapis.com/chart?cht=tx&chl=f%28x_0%29%2Bf%27%28x_0%29%5Ccdot%20%28x-x_0%29\" style=\"vertical-align:middle\"> with respect to <img src=\"https://chart.googleapis.com/chart?cht=tx&chl=x\" style=\"vertical-align:middle\"> within a neighbourhood of <img src=\"https://chart.googleapis.com/chart?cht=tx&chl=x_0\" style=\"vertical-align:middle\">. If we pick a small circular neighbourhood then the optimal value will be in the direction of steepest descent. (Note that picking a circular neighbourhood is itself a somewhat arbitrary step, but that's another story.) For gradient descent we're choosing <img src=\"https://chart.googleapis.com/chart?cht=tx&chl=f%28x_0%29%2Bf%27%28x_0%29%5Ccdot%20%28x-x_0%29\" style=\"vertical-align:middle\"> because it matches both the value and derivatives of <img src=\"https://chart.googleapis.com/chart?cht=tx&chl=f\" style=\"vertical-align:middle\"> at <img src=\"https://chart.googleapis.com/chart?cht=tx&chl=x_0\" style=\"vertical-align:middle\">. We could go further and optimise a proxy that shares second derivatives too, and that leads to methods based on Newton-Raphson iteration. <P><BR>We want our logarithm of a sum to be a sum of logarithms. But instead we'll settle for a proxy function that is a sum of logarithms. We'll make the derivatives of the proxy match those of the original function precisely so we're not making an arbitrary choice. <P><BR>Write <blockquote><img src=\"https://chart.googleapis.com/chart?cht=tx&chl=%5Clog%20l%28%5Ctheta%7Cx%29%0A%3D%20%5Clog%5Csum_z%20P%28x%2Cz%7C%5Ctheta%29%0A%5Capprox%20%5Csum_z%5Cbeta_z%5Clog%20P%28x%2Cz%7C%5Ctheta%29%2B%5Cmbox%7Bconstant%7D.\" style=\"vertical-align:middle\"></blockquote>The <img src=\"https://chart.googleapis.com/chart?cht=tx&chl=%5Cbeta_z\" style=\"vertical-align:middle\"> are constants we'll determine. We want to match the derivatives on either side of the <img src=\"https://chart.googleapis.com/chart?cht=tx&chl=%5Capprox\" style=\"vertical-align:middle\">at <img src=\"https://chart.googleapis.com/chart?cht=tx&chl=%5Ctheta%3D%5Ctheta_0\" style=\"vertical-align:middle\">: <blockquote><img src=\"https://chart.googleapis.com/chart?cht=tx&chl=%5Cfrac%7B%5Cpartial%20%5Clog%20l%28%5Ctheta_0%7Cx%29%7D%7B%5Cpartial%5Ctheta_0%7D\" style=\"vertical-align:middle\"> <img src=\"https://chart.googleapis.com/chart?cht=tx&chl=%3D%5Cfrac%7B1%7D%7Bl%28%5Ctheta_0%7Cx%29%7D%20%5Cfrac%7B%5Cpartial%20l%28%5Ctheta_0%7Cx%29%7D%7B%5Cpartial%5Ctheta_0%7D%20%3D%5Csum_z%5Cfrac%7B1%7D%7Bl%28%5Ctheta_0%7Cx%29%7D%20%5Cfrac%7B%5Cpartial%20P%28x%2Cz%7C%5Ctheta_0%29%7D%7B%5Cpartial%5Ctheta_0%7D.\" style=\"vertical-align:middle\"></blockquote>On the other hand we have <blockquote><img src=\"https://chart.googleapis.com/chart?cht=tx&chl=%0A%5Cfrac%7B%5Cpartial%7D%7B%5Cpartial%5Ctheta_0%7D%5Csum_z%5Cbeta_z%5Clog%20P%28x%2Cz%7C%5Ctheta_0%29%0A%3D%5Csum_z%5Cbeta_z%5Cfrac%7B1%7D%7BP%28x%2Cz%7C%5Ctheta_0%29%7D%5Cfrac%7B%5Cpartial%20P%28x%2Cz%7C%5Ctheta_0%29%7D%7B%5Cpartial%5Ctheta_0%7D%0A\" style=\"vertical-align:middle\"></blockquote><P><BR>To achieve equality we want to make these expressions match. We choose <blockquote><img src=\"https://chart.googleapis.com/chart?cht=tx&chl=%0A%5Cbeta_z%20%3D%20%5Cfrac%7BP%28x%2Cz%7C%5Ctheta_0%29%7D%7Bl%28%5Ctheta_0%7Cx%29%7D%0A%3D%20%5Cfrac%7BP%28x%2Cz%7C%5Ctheta_0%29%7D%7BP%28x%7C%5Ctheta_0%29%7D%0A%3D%20P%28z%7Cx%2C%5Ctheta_0%29.%0A\" style=\"vertical-align:middle\"></blockquote>Our desired proxy function is: <blockquote><img src=\"https://chart.googleapis.com/chart?cht=tx&chl=%0A%5Csum_z%20P%28z%7Cx%2C%5Ctheta_0%29%5Clog%20P%28x%2Cz%7C%5Ctheta%29%2B%5Cmbox%7Bconst.%7D%0A%3D%20E_%7BZ%7Cx%2C%5Ctheta_0%7D%28%5Clog%20P%28x%2CZ%7C%5Ctheta%29%29%2B%5Cmbox%7Bconst.%7D%0A\" style=\"vertical-align:middle\"></blockquote><P><BR>So the procedure is to take an estimated <img src=\"https://chart.googleapis.com/chart?cht=tx&chl=%5Ctheta_0\" style=\"vertical-align:middle\"> and obtain a new estimate by optimising this proxy function with respect to <img src=\"https://chart.googleapis.com/chart?cht=tx&chl=%5Ctheta\" style=\"vertical-align:middle\">. This is the standard EM algorithm. <P><BR>It turns out that this proxy has some other useful properties. For example, because of the concavity of the logarithm, the proxy is always smaller than the original likelihood. This means that when we optimise it we never optimise ``too far'' and that progress optimising the proxy is always progress optimising the original likelihood. But I don't need to say anything about this as it's all part of the standard literature. <P><BR><b>Afterword</b><p>As a side effect we have a general purpose optimisation algorithm that has nothing to do with statistics. If your goal is to compute <blockquote><img src=\"https://chart.googleapis.com/chart?cht=tx&chl=%0A%5Cmbox%7Bargmax%7D_x%5Csum_i%5Cexp%28f_i%28x%29%29%0A\" style=\"vertical-align:middle\"></blockquote>you can iterate, at each step computing <blockquote><img src=\"https://chart.googleapis.com/chart?cht=tx&chl=%0A%5Cmbox%7Bargmax%7D_x%5Csum_i%5Cexp%28f_i%28x_0%29%29f_i%28x%29%0A\" style=\"vertical-align:middle\"></blockquote>where <img src=\"https://chart.googleapis.com/chart?cht=tx&chl=x_0\" style=\"vertical-align:middle\"> is the previous iteration. If the <img src=\"https://chart.googleapis.com/chart?cht=tx&chl=f_i\" style=\"vertical-align:middle\"> take a convenient form then this may turn out to be much easier. <P><BR><b>Note</b><p>This was originally written as a PDF using LaTeX. It'll be available <a href=\"https://t.co/hyZrCiAh6h\">here</a> for a while. Some fidelity was lost when converting it to HTML. ","descriptionType":"html","publishedDate":"Sun, 16 Oct 2016 23:04:00 +0000","feedId":17954,"bgimg":"https://chart.googleapis.com/chart?cht=tx&chl=1%3DA%2FA","linkMd5":"7b70189cb58f7392aa955202ddf5d5f7","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn58@2020_1/2020/10/13/13-37-32-792_a4d3c7158a833325.webp","destWidth":69,"destHeight":20,"sourceBytes":1005,"destBytes":590,"author":"sigfpe","articleImgCdnMap":{"https://chart.googleapis.com/chart?cht=tx&chl=1%3DA%2FA":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn58@2020_1/2020/10/13/13-37-32-792_a4d3c7158a833325.webp","https://chart.googleapis.com/chart?cht=tx&chl=A":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn18@2020_6/2020/10/13/13-37-33-890_f0908e826bb00745.webp","https://chart.googleapis.com/chart?cht=tx&chl=B-B":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn57@2020_6/2020/10/13/13-37-33-954_90d32bca4a277e81.webp","https://chart.googleapis.com/chart?cht=tx&chl=%5Ctheta%3D%28%5Ctheta_i%29":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn49@2020_4/2020/10/13/13-37-35-468_99156b41afa693f7.webp","https://chart.googleapis.com/chart?cht=tx&chl=x%3D%28x_j%29":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn93@2020_6/2020/10/13/13-37-34-106_ba06e120d7f34b8f.webp","https://chart.googleapis.com/chart?cht=tx&chl=P%28x%7C%5Ctheta%29":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn21@2020_2/2020/10/13/13-37-43-879_a2c57ec42527f1bd.webp","https://chart.googleapis.com/chart?cht=tx&chl=%5Ctheta":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn97@2020_2/2020/10/13/13-37-34-041_29c17de415786be4.webp","https://chart.googleapis.com/chart?cht=tx&chl=x":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn38@2020_2/2020/10/13/13-37-35-889_cb153d318141fcc1.webp","https://chart.googleapis.com/chart?cht=tx&chl=l%28%5Ctheta%7Cx%29%3DP%28x%7C%5Ctheta%29":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn66@2020_3/2020/10/13/13-38-35-606_587424824ccca5cc.webp","https://chart.googleapis.com/chart?cht=tx&chl=l%28%5Ctheta%7Cx%29":null,"https://chart.googleapis.com/chart?cht=tx&chl=z%3D%28z_k%29":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn5@2020_1/2020/10/13/13-37-34-169_dbf9c4f66ce08f84.webp","https://chart.googleapis.com/chart?cht=tx&chl=P%28x%2Cz%7C%5Ctheta%29":null,"https://chart.googleapis.com/chart?cht=tx&chl=P%28x%7C%5Ctheta%29%3D%5Csum_z%20P%28x%2Cz%7C%5Ctheta%29":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn2@2020_3/2020/10/13/13-37-45-159_3f65b840f50e4ea0.webp","https://chart.googleapis.com/chart?cht=tx&chl=z":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn42@2020_6/2020/10/13/13-37-33-830_0d5246622e10cdca.webp","https://chart.googleapis.com/chart?cht=tx&chl=l%28%5Ctheta%7Cx%29%3D%5Csum_z%20P%28x%2Cz%7C%5Ctheta%29.":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn9@2020_2/2020/10/13/13-37-33-907_9a36fc76b7dfdb13.webp","https://chart.googleapis.com/chart?cht=tx&chl=%5Ctheta_i":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn81@2020_2/2020/10/13/13-37-33-893_0d2c179ea8ad1572.webp","https://chart.googleapis.com/chart?cht=tx&chl=%5Clog%20l%28%5Ctheta%7Cx%29%3D%5Clog%5Csum_z%20P%28x%2Cz%7C%5Ctheta%29.":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn18@2020_6/2020/10/13/13-37-33-879_9beba886cd755e50.webp","https://chart.googleapis.com/chart?cht=tx&chl=%5Csum_z%20%5Clog%20P%28x%2Cz%7C%5Ctheta%29.":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn6@2020_2/2020/10/13/13-37-33-828_a90e577c07a8ffa9.webp","https://chart.googleapis.com/chart?cht=tx&chl=%5Cexp%28f%28x%2Cz%2C%5Ctheta%29%29":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn25@2020_3/2020/10/13/13-37-33-854_2cc9afd3bdd4172e.webp","https://chart.googleapis.com/chart?cht=tx&chl=f":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn33@2020_2/2020/10/13/13-37-33-847_c2d623a0bb627864.webp","https://chart.googleapis.com/chart?cht=tx&chl=x_0":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn74@2020_5/2020/10/13/13-37-33-970_280222641c46652d.webp","https://chart.googleapis.com/chart?cht=tx&chl=f%28x%29%20%5Capprox%20f%28x_0%29%2Bf%27%28x_0%29%5Ccdot%20%28x-x_0%29.":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn61@2020_1/2020/10/13/13-37-34-247_53d7c54653a8519f.webp","https://chart.googleapis.com/chart?cht=tx&chl=f%28x_0%29%2Bf%27%28x_0%29%5Ccdot%20%28x-x_0%29":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn54@2020_1/2020/10/13/13-37-33-885_3b70dfd06041fd5e.webp","https://chart.googleapis.com/chart?cht=tx&chl=%5Clog%20l%28%5Ctheta%7Cx%29%0A%3D%20%5Clog%5Csum_z%20P%28x%2Cz%7C%5Ctheta%29%0A%5Capprox%20%5Csum_z%5Cbeta_z%5Clog%20P%28x%2Cz%7C%5Ctheta%29%2B%5Cmbox%7Bconstant%7D.":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn29@2020_3/2020/10/13/13-37-56-067_e5e3158fdf8e3176.webp","https://chart.googleapis.com/chart?cht=tx&chl=%5Cbeta_z":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn89@2020_6/2020/10/13/13-37-33-838_fa1eee65b2861da2.webp","https://chart.googleapis.com/chart?cht=tx&chl=%5Capprox":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn1@2020_5/2020/10/13/13-37-35-246_b99feb8eeabb2c73.webp","https://chart.googleapis.com/chart?cht=tx&chl=%5Ctheta%3D%5Ctheta_0":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn22@2020_6/2020/10/13/13-37-53-901_19266f6ba974067d.webp","https://chart.googleapis.com/chart?cht=tx&chl=%5Cfrac%7B%5Cpartial%20%5Clog%20l%28%5Ctheta_0%7Cx%29%7D%7B%5Cpartial%5Ctheta_0%7D":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn86@2020_4/2020/10/13/13-37-45-898_8c4a95e86222d1d3.webp","https://chart.googleapis.com/chart?cht=tx&chl=%3D%5Cfrac%7B1%7D%7Bl%28%5Ctheta_0%7Cx%29%7D%20%5Cfrac%7B%5Cpartial%20l%28%5Ctheta_0%7Cx%29%7D%7B%5Cpartial%5Ctheta_0%7D%20%3D%5Csum_z%5Cfrac%7B1%7D%7Bl%28%5Ctheta_0%7Cx%29%7D%20%5Cfrac%7B%5Cpartial%20P%28x%2Cz%7C%5Ctheta_0%29%7D%7B%5Cpartial%5Ctheta_0%7D.":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn93@2020_5/2020/10/13/13-38-34-086_5d403938483e8014.webp","https://chart.googleapis.com/chart?cht=tx&chl=%0A%5Cfrac%7B%5Cpartial%7D%7B%5Cpartial%5Ctheta_0%7D%5Csum_z%5Cbeta_z%5Clog%20P%28x%2Cz%7C%5Ctheta_0%29%0A%3D%5Csum_z%5Cbeta_z%5Cfrac%7B1%7D%7BP%28x%2Cz%7C%5Ctheta_0%29%7D%5Cfrac%7B%5Cpartial%20P%28x%2Cz%7C%5Ctheta_0%29%7D%7B%5Cpartial%5Ctheta_0%7D%0A":"https://cdn.jsdelivr.net/gh/myreaderx/cdn98@2020_6/2020/10/13/13-37-33-847_8926e1874fee4113.webp","https://chart.googleapis.com/chart?cht=tx&chl=%0A%5Cbeta_z%20%3D%20%5Cfrac%7BP%28x%2Cz%7C%5Ctheta_0%29%7D%7Bl%28%5Ctheta_0%7Cx%29%7D%0A%3D%20%5Cfrac%7BP%28x%2Cz%7C%5Ctheta_0%29%7D%7BP%28x%7C%5Ctheta_0%29%7D%0A%3D%20P%28z%7Cx%2C%5Ctheta_0%29.%0A":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn9@2020_1/2020/10/13/13-37-33-832_bf0158f1484a9bbf.webp","https://chart.googleapis.com/chart?cht=tx&chl=%0A%5Csum_z%20P%28z%7Cx%2C%5Ctheta_0%29%5Clog%20P%28x%2Cz%7C%5Ctheta%29%2B%5Cmbox%7Bconst.%7D%0A%3D%20E_%7BZ%7Cx%2C%5Ctheta_0%7D%28%5Clog%20P%28x%2CZ%7C%5Ctheta%29%29%2B%5Cmbox%7Bconst.%7D%0A":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn14@2020_3/2020/10/13/13-37-34-468_7ae58fa194a74db9.webp","https://chart.googleapis.com/chart?cht=tx&chl=%5Ctheta_0":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn70@2020_5/2020/10/13/13-37-33-828_f6c51811ae117632.webp","https://chart.googleapis.com/chart?cht=tx&chl=%0A%5Cmbox%7Bargmax%7D_x%5Csum_i%5Cexp%28f_i%28x%29%29%0A":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn46@2020_5/2020/10/13/13-37-33-829_2bada1abad9dc058.webp","https://chart.googleapis.com/chart?cht=tx&chl=%0A%5Cmbox%7Bargmax%7D_x%5Csum_i%5Cexp%28f_i%28x_0%29%29f_i%28x%29%0A":"https://cdn.jsdelivr.net/gh/myreaderx/cdn86@2020_3/2020/10/13/13-37-34-044_a9010615f2016092.webp","https://chart.googleapis.com/chart?cht=tx&chl=f_i":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn14@2020_4/2020/10/13/13-37-33-907_483e826570a67f31.webp"},"publishedOrCreatedDate":1602596247241}],"record":{"createdTime":"2020-10-13 21:37:27","updatedTime":"2020-10-13 21:37:27","feedId":17954,"fetchDate":"Tue, 13 Oct 2020 13:37:27 +0000","fetchMs":233,"handleMs":57,"totalMs":69602,"newArticles":0,"totalArticles":25,"status":1,"type":0,"ip":"780a3eae2f6c220f6dfdc342a09dce30","hostName":"us-039*","requestId":"73caa6d3123c40a08f88472517c30d54_17954","contentType":"application/atom+xml; charset=UTF-8","totalBytes":40368,"bgimgsTotal":1,"bgimgsGithubTotal":1,"articlesImgsTotal":36,"articlesImgsGithubTotal":34,"successGithubMap":{"myreaderx8":1,"myreaderx15":2,"myreaderx7":1,"myreaderx6":1,"myreaderx16":1,"myreaderx32":1,"myreaderx10":1,"myreaderx4":1,"myreaderx11":2,"myreaderx3":1,"myreaderx33":1,"myreaderx12":2,"myreaderx2":1,"myreaderx13":1,"myreaderx1":1,"myreaderx30":2,"myreaderx31":1,"myreaderx18":2,"myreaderx19":1,"myreaderx":2,"myreaderx25":1,"myreaderx27":1,"myreaderx21":2,"myreaderx22":1,"myreaderx24":1,"myreaderx5oss":1,"myreaderx29":1},"failGithubMap":{"myreaderx14":1,"myreaderx23":1}},"feed":{"createdTime":"2020-09-07 02:16:22","updatedTime":"2020-09-07 02:48:48","id":17954,"name":"A Neighborhood of Infinity","url":"http://sigfpe.blogspot.com/feeds/posts/default","subscriber":185,"website":null,"icon":"http://blog.sigfpe.com/favicon.ico","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx64/cdn68@2020_1/2020/09/06/18-48-48-059_216af7650206f487.ico","description":"","weekly":null,"link":null},"noPictureArticleList":[{"createdTime":"2020-10-13 21:38:36","updatedTime":"2020-10-13 21:38:36","id":null,"feedId":17954,"linkMd5":"7b70189cb58f7392aa955202ddf5d5f7"}],"tmpCommonImgCdnBytes":590,"tmpBodyImgCdnBytes":39778,"tmpBgImgCdnBytes":0,"extra4":{"start":1602596246920,"total":0,"statList":[{"spend":266,"msg":"获取xml内容"},{"spend":57,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":1,"msg":"修正封面图上传失败重新上传"},{"spend":62776,"msg":"正文链接上传到cdn"}]},"extra5":36,"extra6":36,"extra7ImgCdnFailResultVector":[{"code":1,"isDone":false,"source":"https://chart.googleapis.com/chart?cht=tx&chl=P%28x%2Cz%7C%5Ctheta%29","sourceStatusCode":200,"destWidth":67,"destHeight":20,"sourceBytes":1551,"destBytes":760,"targetWebpQuality":75,"feedId":17954,"totalSpendMs":153,"convertSpendMs":2,"createdTime":"2020-10-13 21:37:33","host":"us-017*","referer":"http://blog.sigfpe.com/2016/10/expectation-maximization-with-less.html","linkMd5ListStr":"7b70189cb58f7392aa955202ddf5d5f7,7b70189cb58f7392aa955202ddf5d5f7,7b70189cb58f7392aa955202ddf5d5f7","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn90/contents/2020/10/13/13-37-33-880_70383c3df30e3697.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Tue, 13 Oct 2020 13:37:33 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["988D:69D8:688325:138EB8C:5F85AD9D"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1602597414"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn90/contents/2020/10/13/13-37-33-880_70383c3df30e3697.webp","historyStatusCode":[],"spendMs":99},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"760 B","compressRate":"49%","sourceSize":"1.5 KB"},{"code":1,"isDone":false,"source":"https://chart.googleapis.com/chart?cht=tx&chl=l%28%5Ctheta%7Cx%29","sourceStatusCode":200,"destWidth":45,"destHeight":20,"sourceBytes":1150,"destBytes":562,"targetWebpQuality":75,"feedId":17954,"totalSpendMs":238,"convertSpendMs":4,"createdTime":"2020-10-13 21:37:33","host":"us-009*","referer":"http://blog.sigfpe.com/2016/10/expectation-maximization-with-less.html","linkMd5ListStr":"7b70189cb58f7392aa955202ddf5d5f7","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn78/contents/2020/10/13/13-37-33-915_0ce61f1ed97975de.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Tue, 13 Oct 2020 13:37:34 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["E6E8:1C3A:B34AD0:1C92965:5F85AD9D"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1602597413"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn78/contents/2020/10/13/13-37-33-915_0ce61f1ed97975de.webp","historyStatusCode":[],"spendMs":105},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"562 B","compressRate":"48.9%","sourceSize":"1.1 KB"},{"code":1,"isDone":false,"source":"https://chart.googleapis.com/chart?cht=tx&chl=P%28x%2Cz%7C%5Ctheta%29","sourceStatusCode":200,"destWidth":67,"destHeight":20,"sourceBytes":1551,"destBytes":760,"targetWebpQuality":75,"feedId":17954,"totalSpendMs":64,"convertSpendMs":3,"createdTime":"2020-10-13 21:37:33","host":"us-017*","referer":"http://blog.sigfpe.com/2016/10/expectation-maximization-with-less.html","linkMd5ListStr":"7b70189cb58f7392aa955202ddf5d5f7,7b70189cb58f7392aa955202ddf5d5f7,7b70189cb58f7392aa955202ddf5d5f7","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn90/contents/2020/10/13/13-37-34-014_70383c3df30e3697.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Tue, 13 Oct 2020 13:37:34 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["988D:69D8:688326:138EB8D:5F85AD9D"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1602597414"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn90/contents/2020/10/13/13-37-34-014_70383c3df30e3697.webp","historyStatusCode":[],"spendMs":47},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"760 B","compressRate":"49%","sourceSize":"1.5 KB"},{"code":1,"isDone":false,"source":"https://chart.googleapis.com/chart?cht=tx&chl=l%28%5Ctheta%7Cx%29","sourceStatusCode":200,"destWidth":45,"destHeight":20,"sourceBytes":1150,"destBytes":562,"targetWebpQuality":75,"feedId":17954,"totalSpendMs":64,"convertSpendMs":3,"createdTime":"2020-10-13 21:37:34","host":"us-009*","referer":"http://blog.sigfpe.com/2016/10/expectation-maximization-with-less.html","linkMd5ListStr":"7b70189cb58f7392aa955202ddf5d5f7","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn78/contents/2020/10/13/13-37-34-052_0ce61f1ed97975de.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Tue, 13 Oct 2020 13:37:34 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["E6E8:1C3A:B34AD1:1C92969:5F85AD9E"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1602597413"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn78/contents/2020/10/13/13-37-34-052_0ce61f1ed97975de.webp","historyStatusCode":[],"spendMs":46},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"562 B","compressRate":"48.9%","sourceSize":"1.1 KB"},{"code":1,"isDone":false,"source":"https://chart.googleapis.com/chart?cht=tx&chl=%5Clog%20l%28%5Ctheta%7Cx%29%0A%3D%20%5Clog%5Csum_z%20P%28x%2Cz%7C%5Ctheta%29%0A%5Capprox%20%5Csum_z%5Cbeta_z%5Clog%20P%28x%2Cz%7C%5Ctheta%29%2B%5Cmbox%7Bconstant%7D.","sourceStatusCode":502,"sourceBytes":0,"destBytes":0,"feedId":17954,"totalSpendMs":20170,"convertSpendMs":0,"createdTime":"2020-10-13 21:37:33","host":"us-025*","referer":"http://blog.sigfpe.com/2016/10/expectation-maximization-with-less.html","linkMd5ListStr":"7b70189cb58f7392aa955202ddf5d5f7","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[502],"destSize":"0","sourceSize":"0"},null,null],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://us-013.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://europe-56.herokuapp.com/":{"failCount":1,"successCount":1,"resultList":[200,null]},"http://us-037.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://europe68.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-021.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-005.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://us-009.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://europe-60.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-52.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-025.herokuapp.com/":{"failCount":2,"successCount":0,"resultList":[502,null]},"http://us-001.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://us-017.herokuapp.com/":{"failCount":0,"successCount":5,"resultList":[200,200,200,200,200]},"http://us-033.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://europe64.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://europe-22.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-029.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://chart.googleapis.com/chart?cht=tx&chl=1%3DA%2FA","sourceStatusCode":200,"destWidth":69,"destHeight":20,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn58@2020_1/2020/10/13/13-37-32-792_a4d3c7158a833325.webp","sourceBytes":1005,"destBytes":590,"targetWebpQuality":75,"feedId":17954,"totalSpendMs":6344,"convertSpendMs":4,"createdTime":"2020-10-13 21:37:27","host":"europe-60*","referer":"http://blog.sigfpe.com/2016/10/expectation-maximization-with-less.html","linkMd5ListStr":"7b70189cb58f7392aa955202ddf5d5f7,7b70189cb58f7392aa955202ddf5d5f7,7b70189cb58f7392aa955202ddf5d5f7","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"590 B","compressRate":"58.7%","sourceSize":"1,005 B"},{"code":1,"isDone":false,"source":"https://chart.googleapis.com/chart?cht=tx&chl=%0A%5Cbeta_z%20%3D%20%5Cfrac%7BP%28x%2Cz%7C%5Ctheta_0%29%7D%7Bl%28%5Ctheta_0%7Cx%29%7D%0A%3D%20%5Cfrac%7BP%28x%2Cz%7C%5Ctheta_0%29%7D%7BP%28x%7C%5Ctheta_0%29%7D%0A%3D%20P%28z%7Cx%2C%5Ctheta_0%29.%0A","sourceStatusCode":200,"destWidth":283,"destHeight":43,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn9@2020_1/2020/10/13/13-37-33-832_bf0158f1484a9bbf.webp","sourceBytes":7282,"destBytes":3024,"targetWebpQuality":75,"feedId":17954,"totalSpendMs":812,"convertSpendMs":9,"createdTime":"2020-10-13 21:37:33","host":"us-52*","referer":"http://blog.sigfpe.com/2016/10/expectation-maximization-with-less.html","linkMd5ListStr":"7b70189cb58f7392aa955202ddf5d5f7","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"3 KB","compressRate":"41.5%","sourceSize":"7.1 KB"},{"code":1,"isDone":false,"source":"https://chart.googleapis.com/chart?cht=tx&chl=%0A%5Cmbox%7Bargmax%7D_x%5Csum_i%5Cexp%28f_i%28x%29%29%0A","sourceStatusCode":200,"destWidth":177,"destHeight":23,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn46@2020_5/2020/10/13/13-37-33-829_2bada1abad9dc058.webp","sourceBytes":4052,"destBytes":1640,"targetWebpQuality":75,"feedId":17954,"totalSpendMs":849,"convertSpendMs":2,"createdTime":"2020-10-13 21:37:33","host":"us-52*","referer":"http://blog.sigfpe.com/2016/10/expectation-maximization-with-less.html","linkMd5ListStr":"7b70189cb58f7392aa955202ddf5d5f7","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"1.6 KB","compressRate":"40.5%","sourceSize":"4 KB"},{"code":1,"isDone":false,"source":"https://chart.googleapis.com/chart?cht=tx&chl=%5Ctheta_0","sourceStatusCode":200,"destWidth":17,"destHeight":18,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn70@2020_5/2020/10/13/13-37-33-828_f6c51811ae117632.webp","sourceBytes":563,"destBytes":312,"targetWebpQuality":75,"feedId":17954,"totalSpendMs":882,"convertSpendMs":4,"createdTime":"2020-10-13 21:37:33","host":"us-033*","referer":"http://blog.sigfpe.com/2016/10/expectation-maximization-with-less.html","linkMd5ListStr":"7b70189cb58f7392aa955202ddf5d5f7","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"312 B","compressRate":"55.4%","sourceSize":"563 B"},{"code":1,"isDone":false,"source":"https://chart.googleapis.com/chart?cht=tx&chl=%0A%5Cfrac%7B%5Cpartial%7D%7B%5Cpartial%5Ctheta_0%7D%5Csum_z%5Cbeta_z%5Clog%20P%28x%2Cz%7C%5Ctheta_0%29%0A%3D%5Csum_z%5Cbeta_z%5Cfrac%7B1%7D%7BP%28x%2Cz%7C%5Ctheta_0%29%7D%5Cfrac%7B%5Cpartial%20P%28x%2Cz%7C%5Ctheta_0%29%7D%7B%5Cpartial%5Ctheta_0%7D%0A","sourceStatusCode":200,"destWidth":374,"destHeight":43,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn98@2020_6/2020/10/13/13-37-33-847_8926e1874fee4113.webp","sourceBytes":9292,"destBytes":3704,"targetWebpQuality":75,"feedId":17954,"totalSpendMs":922,"convertSpendMs":4,"createdTime":"2020-10-13 21:37:33","host":"us-013*","referer":"http://blog.sigfpe.com/2016/10/expectation-maximization-with-less.html","linkMd5ListStr":"7b70189cb58f7392aa955202ddf5d5f7","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"3.6 KB","compressRate":"39.9%","sourceSize":"9.1 KB"},{"code":1,"isDone":false,"source":"https://chart.googleapis.com/chart?cht=tx&chl=l%28%5Ctheta%7Cx%29%3D%5Csum_z%20P%28x%2Cz%7C%5Ctheta%29.","sourceStatusCode":200,"destWidth":161,"destHeight":36,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn9@2020_2/2020/10/13/13-37-33-907_9a36fc76b7dfdb13.webp","sourceBytes":3557,"destBytes":1586,"targetWebpQuality":75,"feedId":17954,"totalSpendMs":935,"convertSpendMs":2,"createdTime":"2020-10-13 21:37:33","host":"us-021*","referer":"http://blog.sigfpe.com/2016/10/expectation-maximization-with-less.html","linkMd5ListStr":"7b70189cb58f7392aa955202ddf5d5f7","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"1.5 KB","compressRate":"44.6%","sourceSize":"3.5 KB"},{"code":1,"isDone":false,"source":"https://chart.googleapis.com/chart?cht=tx&chl=f","sourceStatusCode":200,"destWidth":10,"destHeight":18,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn33@2020_2/2020/10/13/13-37-33-847_c2d623a0bb627864.webp","sourceBytes":350,"destBytes":212,"targetWebpQuality":75,"feedId":17954,"totalSpendMs":932,"convertSpendMs":14,"createdTime":"2020-10-13 21:37:33","host":"us-013*","referer":"http://blog.sigfpe.com/2016/10/expectation-maximization-with-less.html","linkMd5ListStr":"7b70189cb58f7392aa955202ddf5d5f7,7b70189cb58f7392aa955202ddf5d5f7,7b70189cb58f7392aa955202ddf5d5f7,7b70189cb58f7392aa955202ddf5d5f7","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"212 B","compressRate":"60.6%","sourceSize":"350 B"},{"code":1,"isDone":false,"source":"https://chart.googleapis.com/chart?cht=tx&chl=%5Csum_z%20%5Clog%20P%28x%2Cz%7C%5Ctheta%29.","sourceStatusCode":200,"destWidth":126,"destHeight":23,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn6@2020_2/2020/10/13/13-37-33-828_a90e577c07a8ffa9.webp","sourceBytes":2785,"destBytes":1184,"targetWebpQuality":75,"feedId":17954,"totalSpendMs":936,"convertSpendMs":4,"createdTime":"2020-10-13 21:37:33","host":"us-033*","referer":"http://blog.sigfpe.com/2016/10/expectation-maximization-with-less.html","linkMd5ListStr":"7b70189cb58f7392aa955202ddf5d5f7","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"1.2 KB","compressRate":"42.5%","sourceSize":"2.7 KB"},{"code":1,"isDone":false,"source":"https://chart.googleapis.com/chart?cht=tx&chl=%5Clog%20l%28%5Ctheta%7Cx%29%3D%5Clog%5Csum_z%20P%28x%2Cz%7C%5Ctheta%29.","sourceStatusCode":200,"destWidth":212,"destHeight":23,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn18@2020_6/2020/10/13/13-37-33-879_9beba886cd755e50.webp","sourceBytes":4543,"destBytes":1838,"targetWebpQuality":75,"feedId":17954,"totalSpendMs":904,"convertSpendMs":4,"createdTime":"2020-10-13 21:37:33","host":"us-017*","referer":"http://blog.sigfpe.com/2016/10/expectation-maximization-with-less.html","linkMd5ListStr":"7b70189cb58f7392aa955202ddf5d5f7","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"1.8 KB","compressRate":"40.5%","sourceSize":"4.4 KB"},{"code":1,"isDone":false,"source":"https://chart.googleapis.com/chart?cht=tx&chl=%5Cexp%28f%28x%2Cz%2C%5Ctheta%29%29","sourceStatusCode":200,"destWidth":98,"destHeight":19,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn25@2020_3/2020/10/13/13-37-33-854_2cc9afd3bdd4172e.webp","sourceBytes":2288,"destBytes":1052,"targetWebpQuality":75,"feedId":17954,"totalSpendMs":960,"convertSpendMs":14,"createdTime":"2020-10-13 21:37:33","host":"us-037*","referer":"http://blog.sigfpe.com/2016/10/expectation-maximization-with-less.html","linkMd5ListStr":"7b70189cb58f7392aa955202ddf5d5f7","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"1 KB","compressRate":"46%","sourceSize":"2.2 KB"},{"code":1,"isDone":false,"source":"https://chart.googleapis.com/chart?cht=tx&chl=f%28x_0%29%2Bf%27%28x_0%29%5Ccdot%20%28x-x_0%29","sourceStatusCode":200,"destWidth":167,"destHeight":22,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn54@2020_1/2020/10/13/13-37-33-885_3b70dfd06041fd5e.webp","sourceBytes":3261,"destBytes":1466,"targetWebpQuality":75,"feedId":17954,"totalSpendMs":914,"convertSpendMs":4,"createdTime":"2020-10-13 21:37:33","host":"us-017*","referer":"http://blog.sigfpe.com/2016/10/expectation-maximization-with-less.html","linkMd5ListStr":"7b70189cb58f7392aa955202ddf5d5f7,7b70189cb58f7392aa955202ddf5d5f7","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"1.4 KB","compressRate":"45%","sourceSize":"3.2 KB"},{"code":1,"isDone":false,"source":"https://chart.googleapis.com/chart?cht=tx&chl=B-B","sourceStatusCode":200,"destWidth":45,"destHeight":14,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn57@2020_6/2020/10/13/13-37-33-954_90d32bca4a277e81.webp","sourceBytes":819,"destBytes":430,"targetWebpQuality":75,"feedId":17954,"totalSpendMs":980,"convertSpendMs":3,"createdTime":"2020-10-13 21:37:33","host":"us-005*","referer":"http://blog.sigfpe.com/2016/10/expectation-maximization-with-less.html","linkMd5ListStr":"7b70189cb58f7392aa955202ddf5d5f7","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"430 B","compressRate":"52.5%","sourceSize":"819 B"},{"code":1,"isDone":false,"source":"https://chart.googleapis.com/chart?cht=tx&chl=%5Cbeta_z","sourceStatusCode":200,"destWidth":19,"destHeight":21,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn89@2020_6/2020/10/13/13-37-33-838_fa1eee65b2861da2.webp","sourceBytes":581,"destBytes":314,"targetWebpQuality":75,"feedId":17954,"totalSpendMs":956,"convertSpendMs":11,"createdTime":"2020-10-13 21:37:33","host":"us-037*","referer":"http://blog.sigfpe.com/2016/10/expectation-maximization-with-less.html","linkMd5ListStr":"7b70189cb58f7392aa955202ddf5d5f7","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"314 B","compressRate":"54%","sourceSize":"581 B"},{"code":1,"isDone":false,"source":"https://chart.googleapis.com/chart?cht=tx&chl=f_i","sourceStatusCode":200,"destWidth":15,"destHeight":21,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn14@2020_4/2020/10/13/13-37-33-907_483e826570a67f31.webp","sourceBytes":468,"destBytes":252,"targetWebpQuality":75,"feedId":17954,"totalSpendMs":1106,"convertSpendMs":5,"createdTime":"2020-10-13 21:37:33","host":"us-009*","referer":"http://blog.sigfpe.com/2016/10/expectation-maximization-with-less.html","linkMd5ListStr":"7b70189cb58f7392aa955202ddf5d5f7","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"252 B","compressRate":"53.8%","sourceSize":"468 B"},{"code":1,"isDone":false,"source":"https://chart.googleapis.com/chart?cht=tx&chl=x_0","sourceStatusCode":200,"destWidth":18,"destHeight":14,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn74@2020_5/2020/10/13/13-37-33-970_280222641c46652d.webp","sourceBytes":492,"destBytes":288,"targetWebpQuality":75,"feedId":17954,"totalSpendMs":1131,"convertSpendMs":4,"createdTime":"2020-10-13 21:37:33","host":"us-021*","referer":"http://blog.sigfpe.com/2016/10/expectation-maximization-with-less.html","linkMd5ListStr":"7b70189cb58f7392aa955202ddf5d5f7,7b70189cb58f7392aa955202ddf5d5f7,7b70189cb58f7392aa955202ddf5d5f7,7b70189cb58f7392aa955202ddf5d5f7,7b70189cb58f7392aa955202ddf5d5f7","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"288 B","compressRate":"58.5%","sourceSize":"492 B"},{"code":1,"isDone":false,"source":"https://chart.googleapis.com/chart?cht=tx&chl=z","sourceStatusCode":200,"destWidth":9,"destHeight":10,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn42@2020_6/2020/10/13/13-37-33-830_0d5246622e10cdca.webp","sourceBytes":267,"destBytes":164,"targetWebpQuality":75,"feedId":17954,"totalSpendMs":1072,"convertSpendMs":3,"createdTime":"2020-10-13 21:37:33","host":"europe64*","referer":"http://blog.sigfpe.com/2016/10/expectation-maximization-with-less.html","linkMd5ListStr":"7b70189cb58f7392aa955202ddf5d5f7,7b70189cb58f7392aa955202ddf5d5f7","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"164 B","compressRate":"61.4%","sourceSize":"267 B"},{"code":1,"isDone":false,"source":"https://chart.googleapis.com/chart?cht=tx&chl=A","sourceStatusCode":200,"destWidth":14,"destHeight":15,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn18@2020_6/2020/10/13/13-37-33-890_f0908e826bb00745.webp","sourceBytes":380,"destBytes":208,"targetWebpQuality":75,"feedId":17954,"totalSpendMs":1054,"convertSpendMs":2,"createdTime":"2020-10-13 21:37:33","host":"europe-22*","referer":"http://blog.sigfpe.com/2016/10/expectation-maximization-with-less.html","linkMd5ListStr":"7b70189cb58f7392aa955202ddf5d5f7","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"208 B","compressRate":"54.7%","sourceSize":"380 B"},{"code":1,"isDone":false,"source":"https://chart.googleapis.com/chart?cht=tx&chl=x%3D%28x_j%29","sourceStatusCode":200,"destWidth":62,"destHeight":23,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn93@2020_6/2020/10/13/13-37-34-106_ba06e120d7f34b8f.webp","sourceBytes":1244,"destBytes":612,"targetWebpQuality":75,"feedId":17954,"totalSpendMs":1197,"convertSpendMs":3,"createdTime":"2020-10-13 21:37:33","host":"us-005*","referer":"http://blog.sigfpe.com/2016/10/expectation-maximization-with-less.html","linkMd5ListStr":"7b70189cb58f7392aa955202ddf5d5f7","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"612 B","compressRate":"49.2%","sourceSize":"1.2 KB"},{"code":1,"isDone":false,"source":"https://chart.googleapis.com/chart?cht=tx&chl=%5Ctheta_i","sourceStatusCode":200,"destWidth":14,"destHeight":18,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn81@2020_2/2020/10/13/13-37-33-893_0d2c179ea8ad1572.webp","sourceBytes":521,"destBytes":270,"targetWebpQuality":75,"feedId":17954,"totalSpendMs":1094,"convertSpendMs":2,"createdTime":"2020-10-13 21:37:33","host":"europe-22*","referer":"http://blog.sigfpe.com/2016/10/expectation-maximization-with-less.html","linkMd5ListStr":"7b70189cb58f7392aa955202ddf5d5f7,7b70189cb58f7392aa955202ddf5d5f7","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"270 B","compressRate":"51.8%","sourceSize":"521 B"},{"code":1,"isDone":false,"source":"https://chart.googleapis.com/chart?cht=tx&chl=%5Ctheta","sourceStatusCode":200,"destWidth":9,"destHeight":15,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn97@2020_2/2020/10/13/13-37-34-041_29c17de415786be4.webp","sourceBytes":378,"destBytes":212,"targetWebpQuality":75,"feedId":17954,"totalSpendMs":1153,"convertSpendMs":2,"createdTime":"2020-10-13 21:37:33","host":"europe68*","referer":"http://blog.sigfpe.com/2016/10/expectation-maximization-with-less.html","linkMd5ListStr":"7b70189cb58f7392aa955202ddf5d5f7,7b70189cb58f7392aa955202ddf5d5f7,7b70189cb58f7392aa955202ddf5d5f7,7b70189cb58f7392aa955202ddf5d5f7,7b70189cb58f7392aa955202ddf5d5f7,7b70189cb58f7392aa955202ddf5d5f7","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"212 B","compressRate":"56.1%","sourceSize":"378 B"},{"code":1,"isDone":false,"source":"https://chart.googleapis.com/chart?cht=tx&chl=%0A%5Cmbox%7Bargmax%7D_x%5Csum_i%5Cexp%28f_i%28x_0%29%29f_i%28x%29%0A","sourceStatusCode":200,"destWidth":225,"destHeight":23,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn86@2020_3/2020/10/13/13-37-34-044_a9010615f2016092.webp","sourceBytes":5081,"destBytes":2034,"targetWebpQuality":75,"feedId":17954,"totalSpendMs":1320,"convertSpendMs":15,"createdTime":"2020-10-13 21:37:33","host":"us-029*","referer":"http://blog.sigfpe.com/2016/10/expectation-maximization-with-less.html","linkMd5ListStr":"7b70189cb58f7392aa955202ddf5d5f7","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"2 KB","compressRate":"40%","sourceSize":"5 KB"},{"code":1,"isDone":false,"source":"https://chart.googleapis.com/chart?cht=tx&chl=z%3D%28z_k%29","sourceStatusCode":200,"destWidth":58,"destHeight":20,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn5@2020_1/2020/10/13/13-37-34-169_dbf9c4f66ce08f84.webp","sourceBytes":1101,"destBytes":574,"targetWebpQuality":75,"feedId":17954,"totalSpendMs":1284,"convertSpendMs":2,"createdTime":"2020-10-13 21:37:33","host":"europe64*","referer":"http://blog.sigfpe.com/2016/10/expectation-maximization-with-less.html","linkMd5ListStr":"7b70189cb58f7392aa955202ddf5d5f7","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"574 B","compressRate":"52.1%","sourceSize":"1.1 KB"},{"code":1,"isDone":false,"source":"https://chart.googleapis.com/chart?cht=tx&chl=f%28x%29%20%5Capprox%20f%28x_0%29%2Bf%27%28x_0%29%5Ccdot%20%28x-x_0%29.","sourceStatusCode":200,"destWidth":222,"destHeight":22,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn61@2020_1/2020/10/13/13-37-34-247_53d7c54653a8519f.webp","sourceBytes":4315,"destBytes":1876,"targetWebpQuality":75,"feedId":17954,"totalSpendMs":1414,"convertSpendMs":4,"createdTime":"2020-10-13 21:37:33","host":"europe68*","referer":"http://blog.sigfpe.com/2016/10/expectation-maximization-with-less.html","linkMd5ListStr":"7b70189cb58f7392aa955202ddf5d5f7","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"1.8 KB","compressRate":"43.5%","sourceSize":"4.2 KB"},{"code":1,"isDone":false,"source":"https://chart.googleapis.com/chart?cht=tx&chl=%0A%5Csum_z%20P%28z%7Cx%2C%5Ctheta_0%29%5Clog%20P%28x%2Cz%7C%5Ctheta%29%2B%5Cmbox%7Bconst.%7D%0A%3D%20E_%7BZ%7Cx%2C%5Ctheta_0%7D%28%5Clog%20P%28x%2CZ%7C%5Ctheta%29%29%2B%5Cmbox%7Bconst.%7D%0A","sourceStatusCode":200,"destWidth":499,"destHeight":23,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn14@2020_3/2020/10/13/13-37-34-468_7ae58fa194a74db9.webp","sourceBytes":9117,"destBytes":3848,"targetWebpQuality":75,"feedId":17954,"totalSpendMs":1623,"convertSpendMs":6,"createdTime":"2020-10-13 21:37:33","host":"us-029*","referer":"http://blog.sigfpe.com/2016/10/expectation-maximization-with-less.html","linkMd5ListStr":"7b70189cb58f7392aa955202ddf5d5f7","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"3.8 KB","compressRate":"42.2%","sourceSize":"8.9 KB"},{"code":1,"isDone":false,"source":"https://chart.googleapis.com/chart?cht=tx&chl=%5Ctheta%3D%28%5Ctheta_i%29","sourceStatusCode":200,"destWidth":54,"destHeight":19,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn49@2020_4/2020/10/13/13-37-35-468_99156b41afa693f7.webp","sourceBytes":1114,"destBytes":620,"targetWebpQuality":75,"feedId":17954,"totalSpendMs":2484,"convertSpendMs":4,"createdTime":"2020-10-13 21:37:33","host":"us-029*","referer":"http://blog.sigfpe.com/2016/10/expectation-maximization-with-less.html","linkMd5ListStr":"7b70189cb58f7392aa955202ddf5d5f7","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"620 B","compressRate":"55.7%","sourceSize":"1.1 KB"},{"code":1,"isDone":false,"source":"https://chart.googleapis.com/chart?cht=tx&chl=%5Capprox","sourceStatusCode":200,"destWidth":13,"destHeight":10,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn1@2020_5/2020/10/13/13-37-35-246_b99feb8eeabb2c73.webp","sourceBytes":377,"destBytes":210,"targetWebpQuality":75,"feedId":17954,"totalSpendMs":2521,"convertSpendMs":7,"createdTime":"2020-10-13 21:37:34","host":"us-001*","referer":"http://blog.sigfpe.com/2016/10/expectation-maximization-with-less.html","linkMd5ListStr":"7b70189cb58f7392aa955202ddf5d5f7","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"210 B","compressRate":"55.7%","sourceSize":"377 B"},{"code":1,"isDone":false,"source":"https://chart.googleapis.com/chart?cht=tx&chl=x","sourceStatusCode":200,"destWidth":10,"destHeight":10,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn38@2020_2/2020/10/13/13-37-35-889_cb153d318141fcc1.webp","sourceBytes":328,"destBytes":192,"targetWebpQuality":75,"feedId":17954,"totalSpendMs":2565,"convertSpendMs":5,"createdTime":"2020-10-13 21:37:34","host":"us-001*","referer":"http://blog.sigfpe.com/2016/10/expectation-maximization-with-less.html","linkMd5ListStr":"7b70189cb58f7392aa955202ddf5d5f7,7b70189cb58f7392aa955202ddf5d5f7,7b70189cb58f7392aa955202ddf5d5f7","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"192 B","compressRate":"58.5%","sourceSize":"328 B"},{"code":1,"isDone":false,"source":"https://chart.googleapis.com/chart?cht=tx&chl=P%28x%7C%5Ctheta%29","sourceStatusCode":200,"destWidth":54,"destHeight":20,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn21@2020_2/2020/10/13/13-37-43-879_a2c57ec42527f1bd.webp","sourceBytes":1282,"destBytes":664,"targetWebpQuality":75,"feedId":17954,"totalSpendMs":10846,"convertSpendMs":3,"createdTime":"2020-10-13 21:37:33","host":"us-005*","referer":"http://blog.sigfpe.com/2016/10/expectation-maximization-with-less.html","linkMd5ListStr":"7b70189cb58f7392aa955202ddf5d5f7","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"664 B","compressRate":"51.8%","sourceSize":"1.3 KB"},{"code":1,"isDone":false,"source":"https://chart.googleapis.com/chart?cht=tx&chl=P%28x%7C%5Ctheta%29%3D%5Csum_z%20P%28x%2Cz%7C%5Ctheta%29","sourceStatusCode":200,"destWidth":167,"destHeight":23,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn2@2020_3/2020/10/13/13-37-45-159_3f65b840f50e4ea0.webp","sourceBytes":3493,"destBytes":1498,"targetWebpQuality":75,"feedId":17954,"totalSpendMs":12495,"convertSpendMs":4,"createdTime":"2020-10-13 21:37:33","host":"europe-56*","referer":"http://blog.sigfpe.com/2016/10/expectation-maximization-with-less.html","linkMd5ListStr":"7b70189cb58f7392aa955202ddf5d5f7","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"1.5 KB","compressRate":"42.9%","sourceSize":"3.4 KB"},{"code":1,"isDone":false,"source":"https://chart.googleapis.com/chart?cht=tx&chl=%5Cfrac%7B%5Cpartial%20%5Clog%20l%28%5Ctheta_0%7Cx%29%7D%7B%5Cpartial%5Ctheta_0%7D","sourceStatusCode":200,"destWidth":81,"destHeight":41,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn86@2020_4/2020/10/13/13-37-45-898_8c4a95e86222d1d3.webp","sourceBytes":2679,"destBytes":1206,"targetWebpQuality":75,"feedId":17954,"totalSpendMs":12921,"convertSpendMs":4,"createdTime":"2020-10-13 21:37:33","host":"europe-60*","referer":"http://blog.sigfpe.com/2016/10/expectation-maximization-with-less.html","linkMd5ListStr":"7b70189cb58f7392aa955202ddf5d5f7","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"1.2 KB","compressRate":"45%","sourceSize":"2.6 KB"},{"code":1,"isDone":false,"source":"https://chart.googleapis.com/chart?cht=tx&chl=%5Ctheta%3D%5Ctheta_0","sourceStatusCode":200,"destWidth":46,"destHeight":18,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn22@2020_6/2020/10/13/13-37-53-901_19266f6ba974067d.webp","sourceBytes":885,"destBytes":458,"targetWebpQuality":75,"feedId":17954,"totalSpendMs":20995,"convertSpendMs":4,"createdTime":"2020-10-13 21:37:33","host":"europe-60*","referer":"http://blog.sigfpe.com/2016/10/expectation-maximization-with-less.html","linkMd5ListStr":"7b70189cb58f7392aa955202ddf5d5f7","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"458 B","compressRate":"51.8%","sourceSize":"885 B"},{"code":1,"isDone":false,"source":"https://chart.googleapis.com/chart?cht=tx&chl=%5Clog%20l%28%5Ctheta%7Cx%29%0A%3D%20%5Clog%5Csum_z%20P%28x%2Cz%7C%5Ctheta%29%0A%5Capprox%20%5Csum_z%5Cbeta_z%5Clog%20P%28x%2Cz%7C%5Ctheta%29%2B%5Cmbox%7Bconstant%7D.","sourceStatusCode":200,"destWidth":460,"destHeight":23,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn29@2020_3/2020/10/13/13-37-56-067_e5e3158fdf8e3176.webp","sourceBytes":9016,"destBytes":3504,"targetWebpQuality":75,"feedId":17954,"totalSpendMs":2735,"convertSpendMs":8,"createdTime":"2020-10-13 21:37:54","host":"us-001*","referer":"http://blog.sigfpe.com/2016/10/expectation-maximization-with-less.html","linkMd5ListStr":"7b70189cb58f7392aa955202ddf5d5f7","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"3.4 KB","compressRate":"38.9%","sourceSize":"8.8 KB"},{"code":1,"isDone":false,"source":"https://chart.googleapis.com/chart?cht=tx&chl=%3D%5Cfrac%7B1%7D%7Bl%28%5Ctheta_0%7Cx%29%7D%20%5Cfrac%7B%5Cpartial%20l%28%5Ctheta_0%7Cx%29%7D%7B%5Cpartial%5Ctheta_0%7D%20%3D%5Csum_z%5Cfrac%7B1%7D%7Bl%28%5Ctheta_0%7Cx%29%7D%20%5Cfrac%7B%5Cpartial%20P%28x%2Cz%7C%5Ctheta_0%29%7D%7B%5Cpartial%5Ctheta_0%7D.","sourceStatusCode":200,"destWidth":282,"destHeight":45,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn93@2020_5/2020/10/13/13-38-34-086_5d403938483e8014.webp","sourceBytes":7637,"destBytes":3186,"targetWebpQuality":75,"feedId":17954,"totalSpendMs":883,"convertSpendMs":4,"createdTime":"2020-10-13 21:38:34","host":"us-017*","referer":"http://blog.sigfpe.com/2016/10/expectation-maximization-with-less.html","linkMd5ListStr":"7b70189cb58f7392aa955202ddf5d5f7","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"3.1 KB","compressRate":"41.7%","sourceSize":"7.5 KB"},{"code":1,"isDone":false,"source":"https://chart.googleapis.com/chart?cht=tx&chl=l%28%5Ctheta%7Cx%29%3DP%28x%7C%5Ctheta%29","sourceStatusCode":200,"destWidth":120,"destHeight":20,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn66@2020_3/2020/10/13/13-38-35-606_587424824ccca5cc.webp","sourceBytes":2331,"destBytes":1140,"targetWebpQuality":75,"feedId":17954,"totalSpendMs":1332,"convertSpendMs":10,"createdTime":"2020-10-13 21:38:35","host":"us-033*","referer":"http://blog.sigfpe.com/2016/10/expectation-maximization-with-less.html","linkMd5ListStr":"7b70189cb58f7392aa955202ddf5d5f7","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"1.1 KB","compressRate":"48.9%","sourceSize":"2.3 KB"}],"successGithubMap":{"myreaderx8":1,"myreaderx15":2,"myreaderx7":1,"myreaderx6":1,"myreaderx16":1,"myreaderx32":1,"myreaderx10":1,"myreaderx4":1,"myreaderx11":2,"myreaderx3":1,"myreaderx33":1,"myreaderx12":2,"myreaderx2":1,"myreaderx13":1,"myreaderx1":1,"myreaderx30":2,"myreaderx31":1,"myreaderx18":2,"myreaderx19":1,"myreaderx":2,"myreaderx25":1,"myreaderx27":1,"myreaderx21":2,"myreaderx22":1,"myreaderx24":1,"myreaderx5oss":1,"myreaderx29":1},"failGithubMap":{"myreaderx14":1,"myreaderx23":1}}