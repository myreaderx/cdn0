{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2021-05-02 14:22:41","updatedTime":"2021-05-02 14:22:41","title":"Reconstructing the GEOS 2.0 (de) Master Images from a Pile of Broken Disks","link":"https://www.pagetable.com/?p=1140","description":"<p>I have this pile of broken GEOS disks that were sent in for replacements. In two previous articles (<a href=\"https://www.pagetable.com/?p=1118\">1</a>, <a href=\"https://www.pagetable.com/?p=1128\">2</a>), I explored the reasons why the disks broke. Now let’s be constructive: Can we reconstruct the original bits by combining the correct parts? This article shows how it is possible with the help of a small tool that combines the good parts of several broken disk images.</p> \n<h2 id=\"Overview\">Overview</h2> \n<p>The original disk set consisted of four double-sided disks. Of my 50 disks, this is the distribution:</p> \n<ul> \n <li>21x <strong>Disk 1/4: System</strong></li> \n <li>18x <strong>Disk 2/4: Backup</strong></li> \n <li>7x <strong>Disk 3/4: GeoSpell</strong></li> \n <li>4x <strong>Disk 4/4: Drivers</strong></li> \n</ul> \n<p>I have created a command line tool to help analyze images of multiple copies of commercial disks:</p> \n<p><a href=\"https://github.com/mist64/combine_d64\">https://github.com/mist64/combine_d64</a></p> \n<p>Let’s use it to reconstruct the original bits! The remaining sections are sorted according the complexity of the reconstruction of the despective disk side:</p> \n<h2 id=\"Disk-1B:-Applications\">Disk 1B: Applications</h2> \n<p>Running the tool on all images of the B side of the first disk (“Applications”) will find two identical copies:</p> \n<pre><code>$ combine_d64.py *.d64\n\nThe following images are identical:  \n05b.d64 14b.d64\n</code></pre> \n<p>And indeed, the reverse sides conain the original unchanged data.</p> \n<p>GEOS disks 1 and 2 are specially mastered for <a href=\"https://www.pagetable.com/?p=1118\">copy protection</a> purposes: When looking at the raw bits on disk, the gaps between sector headers and the sector data contain a signature that cannot be reproduced by an unmodified 1541 drive, and that will be destroyed whenever writing a sector.</p> \n<p>The tool <a href=\"https://github.com/markusC64/g64conv\">g64conv</a> converts <code>.G64</code> files into a textual representation that is easy to analyze. This is what a sector with its header and data section looks like in g64conv’s text format:</p> \n<pre><code>   sync 18  \n   ; header  \n   gcr 08  \n   begin-checksum  \n      checksum 0f  \n      ; sector  \n      gcr 00  \n      ; track  \n      gcr 01  \n      ; id2  \n      gcr 44  \n      ; id1  \n      gcr 4a  \n   end-checksum  \n   gcr 0f  \n   gcr 0f  \n   ; Trk 1 Sec 0  \n   bytes 55 55 55 67 55 55 55 67  \n   bits 111111\n\n   sync 18  \n   ; data  \n   gcr 07  \n   begin-checksum  \n      gcr 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 02 0e 00 ff 02 04 00 ff 11 0b 00 ff 00 ff 00 ff 11 12 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff  \n      checksum 13  \n   end-checksum  \n   gcr 00  \n   gcr 00  \n   bytes 55 55 55 67 55 55 55 67  \n   bits 111111\n</code></pre> \n<p>The <code>55 55 55 67 55 55 55 67</code> bytes after the header and after the data are the copy protection signature. The following small shell script will count the number of sectors that don’t have the signature and have therefore been written to:</p> \n<pre><code>perl g64conv 15b.g64 15b.txt  \ncat 15b.txt |  \n  grep Trk -A 1 | tr '\\n' 'X' |  \n  sed -e \"s/X   bytes/;   bytes/g\" |  \n  tr 'X' '\\n' |  \n  grep Trk |  \n  grep -v \"55 67$\" |  \n  cut -d \";\" -f 2 |  \n  wc -l\n</code></pre> \n<p>Disks 05b and 14b carry the original bits, so we’re done with these. Note that even though we ran the tool on the <code>.D64</code> image, we have to take the low-level <code>.G64</code> image with all the original bits for the copy protection to work.</p> \n<h2 id=\"Disk-3B:-GeoSpell-(English)\">Disk 3B: GeoSpell (English)</h2> \n<p>Running the tool on all copies of the B side of the third disk will tell us that it found identical copies – but two sets of them!</p> \n<pre><code>$ combine_d64.py *.d64\n\nThe following sets of images are identical:  \n0 : 42b.d64 45b.d64  \n1 : 44b.d64 46b.d64\n</code></pre> \n<p>The tool cannot decide which of the two sets – if any –&nbsp;carries the original data. Let’s look at a diff:</p> \n<pre>\n323c323  \n&lt; 00014f0 c6 20 d0 f1 a4 21 c8 <font color=\"red\"><b>a9 00 91 00 60 ac 89 84 b9</b></font>\n---  \n&gt; 00014f0 c6 20 d0 f1 a4 21 c8 <font color=\"green\"><b>01 01 01 01 01 01 01 01 01</b></font>  \n659c659  \n&lt; 00029f0 d0 07 a2 80 2c 03 82 <font color=\"red\"><b>30 1b 20 12 39 a5 15 f0 06</b></font>\n---  \n&gt; 00029f0 d0 07 a2 80 2c 03 82 <font color=\"green\"><b>01 01 01 01 01 01 01 01 01</b></font>  \n995c995  \n&lt; 0003ef0 18 65 08 85 08 90 02 <font color=\"red\"><b>e6 09 a5 09 85 19 a5 08 85</b></font>\n---  \n&gt; 0003ef0 18 65 08 85 08 90 02 <font color=\"green\"><b>01 01 01 01 01 01 01 01 01</b></font>  \n[...]  \n</pre> \n<p>The second set has the last bytes of the last sector of each track replaced by a series of 0x01 characters. Also, all these sectors have checksum errors.</p> \n<p>Looking at the g64conv textual representation shows what’s going on:</p> \n<pre><code>[...]  \n   sync 16  \n   ; data  \n   gcr 07  \n   begin-checksum  \n      gcr 01 07 04 [...] a4 21 c8  \n   bits 11111  \n;   block aborted2  \n   bits 111\n\nend-track\n</code></pre> \n<p>The last sector of each track is aborted. And we have two physical disks with the exact same issue – this was a problem in commercial disk duplication! The motor of the copying machine was probably spinning too slowly, so when a full rotation was complete, it stopped writing before it was done with all the bits of the track. This was probably the reason the disk was sent in for a replacement!</p> \n<p>So we know that the B sides of disks 44 and 46 are broken. Except for the truncated sectors, the data was the same as on the two identical disks 42b and 45b, which gives us high confidence that these contain the correct data.</p> \n<h2 id=\"Disk-4B:-More-Drivers\">Disk 4B: More Drivers</h2> \n<p>For the copies of the B side of the fourth disk we don’t have two identical images:</p> \n<pre><code>$ combine_d64.py *.d64\n\nAll blocks had at least 3 copies.  \nEvery block of the following images is also contained in at least one other file:  \n48b.d64\n</code></pre> \n<p>But there is one image, 48b, where for every block, there are at least two other images that have the same data at this position. This gives us high confidence that the data in 48b is correct.</p> \n<h2 id=\"Disk-4A:-Drivers\">Disk 4A: Drivers</h2> \n<p>It is a little more tricky with the A side of the fourth disk:</p> \n<pre><code>$ combine_d64.py *.d64\n\nThe following blocks only had a limited number of copies:  \n2 copies of block 125 (Trk 6 Sec 20) in 48a.d64 51a.d64  \n2 copies of block 357 (Trk 18 Sec 0) in 48a.d64 50a.d64  \n2 copies of block 358 (Trk 18 Sec 1) in 48a.d64 50a.d64  \nEvery block of the following images is also contained in at least one other file:  \n48a.d64\n</code></pre> \n<p>48a is a candidate, but there are three blocks for which only two other copies have been found.</p> \n<p>As it turns out, disk 50a has the same duplication error as 44b and 46b, the last sector of every track is truncated. If we fill the broken bytes, disk 50a is actually identical with 48a, so we can be very confident that 48a is correct.</p> \n<h2 id=\"Disk-3A:-GeoSpell-(German)\">Disk 3A: GeoSpell (German)</h2> \n<p>But there are also some cases where none of the images seems to be completely correct:</p> \n<pre><code>$ combine_d64.py *.d64\n\nAll blocks had at least 3 copies.  \nThe result was combined from the following images:  \n41a.d64 (667 blocks)  \n42a.d64 (16 blocks)\n</code></pre> \n<p>In this case, the likely result had to be combined from two images.</p> \n<p>If we look at the images closely, we can see that 41a, 43a, 44a and 46a all have the duplication error. Nevertheless, it could source most of the correct sectors from 41a. That’s because it’s the first argument we gave it. If we changed the order of the arguments so that 41a is last, we get this:</p> \n<pre><code>All blocks had at least 3 copies.  \nThe result was combined from the following images:  \n42a.d64 (682 blocks)  \n43a.d64 (1 blocks)\n</code></pre> \n<p>All blocks except one come from 42a. That’s the single block of 42s with a read error. <strong>All</strong> other images contain the the correct copy of it, so we can be very confident that by fixing the sector, we get a correct image.</p> \n<h2 id=\"Disk-2B:-Write-Utilities\">Disk 2B: Write Utilities</h2> \n<p>For the next disk, we tool doesn’t give us as much confidence:</p> \n<pre><code>$ combine_d64.py *.d64\n\nThe following blocks only had a limited number of copies:  \n2 copies of block 297 (Trk 15 Sec 3) in 28b.d64 36b.d64  \nThe result was combined from the following images:  \n22b.d64 (675 blocks)  \n23b.d64 (6 blocks)  \n24b.d64 (1 blocks)  \n28b.d64 (1 blocks)\n</code></pre> \n<p>Again, the resulting had to be combined from several images. This time, it had to use 4 images in order to combine them to the resulting image, which looks suspicious. But that is just be a side effect of the ordering of the files as we passed it to the tool. By putting 36 and 37 first, we get this printout:</p> \n<pre><code>The following blocks only had a limited number of copies:  \n2 copies of block 297 (Trk 15 Sec 3) in 36b.d64 28b.d64  \nThe result was combined from the following images:  \n36b.d64 (679 blocks)  \n37b.d64 (4 blocks)\n</code></pre> \n<p>Note that the resulting image is of course the same. Experimenting with the ordering is useful though, because we can now have a look at the diff between 36b and the result to see whether things look sane.</p> \n<p>But this example teaches us that the majority is not always right. All sectors of 36b carry the “55 67” signature and are unmodified. The app GeoMerge on this disk has never been started –&nbsp;on the other images, it has, which didn’t only stamp in the system’s serial number (track 15 sector 3), but also change 3 other sectors deterministically.</p> \n<p>So the answer is: 36b.</p> \n<h2 id=\"Disk-1A:-System\">Disk 1A: System</h2> \n<p>We have lots of copies of the boot disk, but two blocks that only have two identical copies:</p> \n<pre><code>$ combine_d64.py *.d64\n\nThe following blocks only had a limited number of copies:  \n2 copies of block 358 (Trk 18 Sec 1) in 05a.d64 14a.d64  \n2 copies of block 400 (Trk 20 Sec 5) in 14a.d64 17a.d64  \nThe result was combined from the following images:  \n01a.d64 (638 blocks)  \n03a.d64 (38 blocks)  \n04a.d64 (1 blocks)  \n05a.d64 (4 blocks)  \n12a.d64 (1 blocks)  \n14a.d64 (1 blocks)\n</code></pre> \n<p>Track 20 sector 5 is where the GEOS serial number is stored on the boot disk. Similarly to apps, the serial number is 0 on a new system disk, and a random one will be picked on first boot –&nbsp;and also copied to the backup boot disk. Again, the serial numbers are different on all disks.</p> \n<pre>\n$ for i in *.d64; do hexdump $i | grep 00190c0; done  \n00190c0 b8 50 bf aa 60 <b>1d 06 ff</b> a0 93 d0 0a a0 90 d0 06  \n00190c0 b8 50 bf aa 60 <b>2f c5 ff</b> a0 93 d0 0a a0 90 d0 06  \n00190c0 b8 50 bf aa 60 <b>23 8d ff</b> a0 93 d0 0a a0 90 d0 06  \n00190c0 b8 50 bf aa 60 <b>cd ea ff</b> a0 93 d0 0a a0 90 d0 06  \n00190c0 b8 50 bf aa 60 <b>27 69 ff</b> a0 93 d0 0a a0 90 d0 06  \n00190c0 b8 50 bf aa 60 <b>3e 35 ff</b> a0 93 d0 0a a0 90 d0 06  \n00190c0 b8 50 bf aa 60 <b>86 a1 ff</b> a0 93 d0 0a a0 90 d0 06  \n00190c0 b8 50 bf aa 60 <b>05 3f ff</b> a0 93 d0 0a a0 90 d0 06  \n00190c0 b8 50 bf aa 60 <b>d7 31 ff</b> a0 93 d0 0a a0 90 d0 06  \n00190c0 b8 50 bf aa 60 <b>6d dd 00</b> a0 93 d0 0a a0 90 d0 06  \n00190c0 b8 50 bf aa 60 <b>22 f8 ff</b> a0 93 d0 0a a0 90 d0 06  \n00190c0 b8 50 bf aa 60 <font color=\"red\"><b>00 00 00</b></font> a0 93 d0 0a a0 90 d0 06  \n00190c0 b8 50 bf aa 60 <b>fa 27 ff</b> a0 93 d0 0a a0 90 d0 06  \n00190c0 b8 50 bf aa 60 <b>57 ff ff</b> a0 93 d0 0a a0 90 d0 06  \n00190c0 b8 50 bf aa 60 <font color=\"red\"><b>00 00 00</b></font> a0 93 d0 0a a0 90 d0 06  \n00190c0 b8 50 bf aa 60 <b>4e c9 ff</b> a0 93 d0 0a a0 90 d0 06  \n</pre> \n<p>Disk 14a is one of the two with a serial number of 0. Since this is a GEOS boot disk, we can look for the “55 67” signature to check which sectors have ever been written. And we’re lucky: Disk 14a has all original sectors intact, so we’re done!</p> \n<h2 id=\"Disk-2A:-Backup\">Disk 2A: Backup</h2> \n<p>The serial number is also an issue on the set of backup disks:</p> \n<pre><code>$ combine_d64.py *.d64\n\nFor the following blocks, no duplicates exist:  \n400 (Trk 20 Sec 5)\n</code></pre> \n<p>Every image has a different serial number –&nbsp;but this time, none has a 0.</p> \n<pre>\n$ for i in *.d64; do hexdump $i | grep 00190c0; done  \n00190c0 b8 50 bf aa 60 <b>82 d2 ff</b> a0 93 d0 0a a0 90 d0 06  \n00190c0 b8 50 bf aa 60 <b>1a 35 ff</b> a0 93 d0 0a a0 90 d0 06  \n00190c0 b8 50 bf aa 60 <b>86 a1 ff</b> a0 93 d0 0a a0 90 d0 06  \n00190c0 b8 50 bf aa 60 <b>9a 50 ff</b> a0 93 d0 0a a0 90 d0 06  \n00190c0 b8 50 bf aa 60 <b>07 bd ff</b> a0 93 d0 0a a0 90 d0 06  \n00190c0 b8 50 bf aa 60 <b>dd 21 ff</b> a0 93 d0 0a a0 90 d0 06  \n00190c0 b8 50 bf aa 60 <b>95 0c ff</b> a0 93 d0 0a a0 90 d0 06  \n00190c0 b8 50 bf aa 60 <b>2f c5 ff</b> a0 93 d0 0a a0 90 d0 06  \n00190c0 b8 50 bf aa 60 <b>aa af ff</b> a0 93 d0 0a a0 90 d0 06  \n00190c0 b8 50 bf aa 60 <b>1d 06 ff</b> a0 93 d0 0a a0 90 d0 06  \n00190c0 b8 50 bf aa 60 <b>9a 27 ff</b> a0 93 d0 0a a0 90 d0 06  \n00190c0 b8 50 bf aa 60 <b>fa 27 ff</b> a0 93 d0 0a a0 90 d0 06  \n00190c0 b8 50 bf aa 60 <b>dd f0 ff</b> a0 93 d0 0a a0 90 d0 06  \n00190c0 b8 50 bf aa 60 <b>bd 2b ff</b> a0 93 d0 0a a0 90 d0 06  \n00190c0 b8 50 bf aa 60 <b>cd ea ff</b> a0 93 d0 0a a0 90 d0 06  \n00190c0 b8 50 bf aa 60 <b>23 8d ff</b> a0 93 d0 0a a0 90 d0 06  \n00190c0 b8 50 bf aa 60 <b>19 c0 ff</b> a0 93 d0 0a a0 90 d0 06  \n00190c0 b8 50 bf aa 60 <b>e7 04 ff</b> a0 93 d0 0a a0 90 d0 06  \n</pre> \n<p>Again, we can use the “55 67” signature to check which image has the fewest changed sectors: Disks 22a, 35a and 36a all only have a single changed sector: the one with the serial number. So we can manually reconstruct the correct image by changing the serial number and the flag following it to “00 00 ff”. This is best done in the g64conv <code>.TXT</code> file, where we can also patch the signature back in.</p> \n<h2 id=\"Conclusion\">Conclusion</h2> \n<p>It was possible to recreate the original masters. The GEOS serial number system made things more complicated than it should have been, but the copy protection signature then made things a lot easier again!</p> \n<p>Here are the GEOS 2.0 German master disk images:</p> \n<p><a href=\"https://www.pagetable.com/?p=1140/docs/geos20de_master/geos20de_master.zip\">geos20de_master.zip</a> (902 KB)</p> \n<p><strong>GEOS 64 2.0</strong><br /> Seite A: <strong>Systemdiskette</strong> / Seite B: <strong>Applikationen</strong><br /> Seriennummer: <em>nnnnnnnnn</em><br /> <strong>Copyright by Berkeley Softworks 1988</strong><br /> Bestell-Nr. 51677 – Diskette 1 von 4 / <em>nnnnnnnnxx</em></p> \n<p><strong>GEOS 64 2.0</strong><br /> Seite A:<strong>Sicherungssystem</strong> / Seite B:<strong>Write Utilities</strong><br /> <strong>Copyright by Berkeley Softworks 1988</strong><br /> Floppy 1541/1570/1571 – Diskette 2 von 4<br /> Bestell-Nr. 51677 / <em>nnnnnnnnxx</em></p> \n<p><strong>GEOS 64 2.0</strong><br /> Seite A:<strong>GeoSpell (deutsch)</strong> / Seite B:<strong>GeoSpell (engl)</strong><br /> <strong>Copyright by Berkeley Softworks 1988</strong><br /> Floppy 1541/1570/1571 – Diskette 3 von 4<br /> Bestell-Nr. 51677 / <em>nnnnnnnnxx</em></p> \n<p><strong>GEOS 64 2.0</strong><br /> Seite A: <strong>Treiber</strong> / Seite B: <strong>Weitere Treiber</strong><br /> <strong>Copyright by Berkeley Softworks 1988</strong><br /> Floppy 1541/1570/1571 – Diskette 4 von 4<br /> Bestell-Nr. 51677 / <em>nnnnnnnnxx</em></p> \n<p>When first using them, you will have to go through the regular installation process, pictured below:</p> \n<p><img src=\"https://www.pagetable.com/docs/geos20de_master/geos_install_1.png\" height=\"272\" width=\"384\" alt=\"\" /><img src=\"https://www.pagetable.com/docs/geos20de_master/geos_install_2.png\" height=\"272\" width=\"384\" alt=\"\" /><img src=\"https://www.pagetable.com/docs/geos20de_master/geos_install_3.png\" height=\"272\" width=\"384\" alt=\"\" /><img src=\"https://www.pagetable.com/docs/geos20de_master/geos_install_4.png\" height=\"272\" width=\"384\" alt=\"\" /><img src=\"https://www.pagetable.com/docs/geos20de_master/geos_install_5.png\" height=\"272\" width=\"384\" alt=\"\" /><img src=\"https://www.pagetable.com/docs/geos20de_master/geos_install_6.png\" height=\"272\" width=\"384\" alt=\"\" /><img src=\"https://www.pagetable.com/docs/geos20de_master/geos_install_7.png\" height=\"272\" width=\"384\" alt=\"\" /><img src=\"https://www.pagetable.com/docs/geos20de_master/geos_install_8.png\" height=\"272\" width=\"384\" alt=\"\" /><img src=\"https://www.pagetable.com/docs/geos20de_master/geos_install_9.png\" height=\"272\" width=\"384\" alt=\"\" /><img src=\"https://www.pagetable.com/docs/geos20de_master/geos_install_10.png\" height=\"272\" width=\"384\" alt=\"\" /></p> \n<p>And here is a video of the install process:</p> \n<p><img src=\"https://www.pagetable.com/docs/geos20de_master/geos_install.gif\" height=\"272\" width=\"384\" alt=\"\" /></p>","descriptionType":"html","publishedDate":"Tue, 30 Apr 2019 05:55:59 +0000","feedId":19901,"bgimg":"https://www.pagetable.com/docs/geos20de_master/geos_install_1.png","linkMd5":"53045d5139cf015200567fdce9ea7c62","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn98@2020_4/2021/05/02/06-22-57-903_994bcb6ebdd32384.webp","destWidth":320,"destHeight":200,"sourceBytes":517,"destBytes":9772,"author":"Michael Steil","articleImgCdnMap":{"https://www.pagetable.com/docs/geos20de_master/geos_install_1.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn98@2020_4/2021/05/02/06-22-57-903_994bcb6ebdd32384.webp","https://www.pagetable.com/docs/geos20de_master/geos_install_2.png":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn34@2020_1/2021/05/02/06-23-00-682_ba8852439eea836a.webp","https://www.pagetable.com/docs/geos20de_master/geos_install_3.png":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn4@2020_6/2021/05/02/06-23-00-460_f50abed14097b90a.webp","https://www.pagetable.com/docs/geos20de_master/geos_install_4.png":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn1@2020_1/2021/05/02/06-23-00-284_4963292903afbe68.webp","https://www.pagetable.com/docs/geos20de_master/geos_install_5.png":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn11@2020_1/2021/05/02/06-23-01-390_bf57db83982dcebc.webp","https://www.pagetable.com/docs/geos20de_master/geos_install_6.png":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn8@2020_5/2021/05/02/06-23-00-216_121109af5fa4b914.webp","https://www.pagetable.com/docs/geos20de_master/geos_install_7.png":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn19@2020_6/2021/05/02/06-22-59-862_6b9d7c09174d920a.webp","https://www.pagetable.com/docs/geos20de_master/geos_install_8.png":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn18@2020_5/2021/05/02/06-23-00-531_7e3bc69f52c280e1.webp","https://www.pagetable.com/docs/geos20de_master/geos_install_9.png":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn25@2020_3/2021/05/02/06-23-01-315_a0ebffc0641729e4.webp","https://www.pagetable.com/docs/geos20de_master/geos_install_10.png":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn36@2020_1/2021/05/02/06-23-01-258_66bf1f2c60eb44fe.webp","https://www.pagetable.com/docs/geos20de_master/geos_install.gif":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn30@2020_2/2021/05/02/06-23-01-934_7f6d27be9e0da715.webp"},"publishedOrCreatedDate":1619936561477}],"record":{"createdTime":"2021-05-02 14:22:42","updatedTime":"2021-05-02 14:22:42","feedId":19901,"fetchDate":"Sun, 02 May 2021 06:22:42 +0000","fetchMs":4641,"handleMs":42,"totalMs":27338,"newArticles":0,"totalArticles":100,"status":1,"type":0,"ip":"bc1eecef1292254c09de6c1e66b750f3","hostName":"europe70*","requestId":"b170eb8e1cc7477f98b95bc994558ef4_19901","contentType":"application/rss+xml; charset=UTF-8","totalBytes":373046,"bgimgsTotal":1,"bgimgsGithubTotal":1,"articlesImgsTotal":11,"articlesImgsGithubTotal":11,"successGithubMap":{"myreaderx8":1,"myreaderx15":1,"myreaderx7":1,"myreaderx10":1,"myreaderx22":1,"myreaderx11":1,"myreaderx33":1,"myreaderx3":1,"myreaderx12":1,"myreaderx13":1,"myreaderx5oss":1},"failGithubMap":{}},"feed":{"createdTime":"2020-09-07 02:21:03","updatedTime":"2020-09-07 02:57:00","id":19901,"name":"pagetable.com","url":"http://www.pagetable.com/?feed=rss2","subscriber":166,"website":null,"icon":"https://www.pagetable.com/favicon.ico","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx61/cdn84@2020_5/2020/09/06/18-56-54-748_49cdf9342311a66c.jpg","description":"Some Assembly Required","weekly":null,"link":null},"noPictureArticleList":[],"tmpCommonImgCdnBytes":9772,"tmpBodyImgCdnBytes":363274,"tmpBgImgCdnBytes":0,"extra4":{"start":1619936555077,"total":0,"statList":[{"spend":6358,"msg":"获取xml内容"},{"spend":42,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":3940,"msg":"正文链接上传到cdn"}]},"extra5":11,"extra6":11,"extra7ImgCdnFailResultVector":[],"extra10_invalidATagHrefValue":{"https://www.pagetable.com/?p=1140_docs/geos20de_master/geos20de_master.zip":"https://www.pagetable.com/?p=1140/docs/geos20de_master/geos20de_master.zip"},"extra111_proxyServerAndStatMap":{"http://us-039.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-002.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-034.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe61.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-010.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-003.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-022.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-60.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-011.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-027.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://www.pagetable.com/docs/geos20de_master/geos_install_1.png","sourceStatusCode":200,"destWidth":320,"destHeight":200,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn98@2020_4/2021/05/02/06-22-57-903_994bcb6ebdd32384.webp","sourceBytes":517,"destBytes":9772,"targetWebpQuality":75,"feedId":19901,"totalSpendMs":689,"convertSpendMs":3,"createdTime":"2021-05-02 14:22:57","host":"europe69*","referer":"https://www.pagetable.com/?p=1140","linkMd5ListStr":"53045d5139cf015200567fdce9ea7c62,53045d5139cf015200567fdce9ea7c62","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"517 B","destSize":"9.5 KB","compressRate":"1,890.1%"},{"code":1,"isDone":false,"source":"https://www.pagetable.com/docs/geos20de_master/geos_install_7.png","sourceStatusCode":200,"destWidth":320,"destHeight":200,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn19@2020_6/2021/05/02/06-22-59-862_6b9d7c09174d920a.webp","sourceBytes":1518,"destBytes":12362,"targetWebpQuality":75,"feedId":19901,"totalSpendMs":611,"convertSpendMs":4,"createdTime":"2021-05-02 14:22:59","host":"europe61*","referer":"https://www.pagetable.com/?p=1140","linkMd5ListStr":"53045d5139cf015200567fdce9ea7c62","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.5 KB","destSize":"12.1 KB","compressRate":"814.4%"},{"code":1,"isDone":false,"source":"https://www.pagetable.com/docs/geos20de_master/geos_install_6.png","sourceStatusCode":200,"destWidth":320,"destHeight":200,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn8@2020_5/2021/05/02/06-23-00-216_121109af5fa4b914.webp","sourceBytes":1757,"destBytes":13294,"targetWebpQuality":75,"feedId":19901,"totalSpendMs":885,"convertSpendMs":5,"createdTime":"2021-05-02 14:22:59","host":"us-010*","referer":"https://www.pagetable.com/?p=1140","linkMd5ListStr":"53045d5139cf015200567fdce9ea7c62","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.7 KB","destSize":"13 KB","compressRate":"756.6%"},{"code":1,"isDone":false,"source":"https://www.pagetable.com/docs/geos20de_master/geos_install_4.png","sourceStatusCode":200,"destWidth":320,"destHeight":200,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn1@2020_1/2021/05/02/06-23-00-284_4963292903afbe68.webp","sourceBytes":517,"destBytes":9772,"targetWebpQuality":75,"feedId":19901,"totalSpendMs":871,"convertSpendMs":8,"createdTime":"2021-05-02 14:22:59","host":"us-034*","referer":"https://www.pagetable.com/?p=1140","linkMd5ListStr":"53045d5139cf015200567fdce9ea7c62","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"517 B","destSize":"9.5 KB","compressRate":"1,890.1%"},{"code":1,"isDone":false,"source":"https://www.pagetable.com/docs/geos20de_master/geos_install_3.png","sourceStatusCode":200,"destWidth":320,"destHeight":200,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn4@2020_6/2021/05/02/06-23-00-460_f50abed14097b90a.webp","sourceBytes":474,"destBytes":9296,"targetWebpQuality":75,"feedId":19901,"totalSpendMs":928,"convertSpendMs":5,"createdTime":"2021-05-02 14:22:59","host":"us-022*","referer":"https://www.pagetable.com/?p=1140","linkMd5ListStr":"53045d5139cf015200567fdce9ea7c62","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"474 B","destSize":"9.1 KB","compressRate":"1,961.2%"},{"code":1,"isDone":false,"source":"https://www.pagetable.com/docs/geos20de_master/geos_install_8.png","sourceStatusCode":200,"destWidth":320,"destHeight":200,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn18@2020_5/2021/05/02/06-23-00-531_7e3bc69f52c280e1.webp","sourceBytes":420,"destBytes":8194,"targetWebpQuality":75,"feedId":19901,"totalSpendMs":624,"convertSpendMs":6,"createdTime":"2021-05-02 14:23:00","host":"europe-60*","referer":"https://www.pagetable.com/?p=1140","linkMd5ListStr":"53045d5139cf015200567fdce9ea7c62","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"420 B","destSize":"8 KB","compressRate":"1,951%"},{"code":1,"isDone":false,"source":"https://www.pagetable.com/docs/geos20de_master/geos_install_2.png","sourceStatusCode":200,"destWidth":320,"destHeight":200,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn34@2020_1/2021/05/02/06-23-00-682_ba8852439eea836a.webp","sourceBytes":1230,"destBytes":13406,"targetWebpQuality":75,"feedId":19901,"totalSpendMs":925,"convertSpendMs":4,"createdTime":"2021-05-02 14:23:00","host":"us-002*","referer":"https://www.pagetable.com/?p=1140","linkMd5ListStr":"53045d5139cf015200567fdce9ea7c62","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.2 KB","destSize":"13.1 KB","compressRate":"1,089.9%"},{"code":1,"isDone":false,"source":"https://www.pagetable.com/docs/geos20de_master/geos_install_10.png","sourceStatusCode":200,"destWidth":320,"destHeight":200,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn36@2020_1/2021/05/02/06-23-01-258_66bf1f2c60eb44fe.webp","sourceBytes":415,"destBytes":8272,"targetWebpQuality":75,"feedId":19901,"totalSpendMs":906,"convertSpendMs":4,"createdTime":"2021-05-02 14:23:00","host":"us-003*","referer":"https://www.pagetable.com/?p=1140","linkMd5ListStr":"53045d5139cf015200567fdce9ea7c62","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"415 B","destSize":"8.1 KB","compressRate":"1,993.3%"},{"code":1,"isDone":false,"source":"https://www.pagetable.com/docs/geos20de_master/geos_install_9.png","sourceStatusCode":200,"destWidth":320,"destHeight":200,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn25@2020_3/2021/05/02/06-23-01-315_a0ebffc0641729e4.webp","sourceBytes":1706,"destBytes":13104,"targetWebpQuality":75,"feedId":19901,"totalSpendMs":862,"convertSpendMs":4,"createdTime":"2021-05-02 14:23:00","host":"us-039*","referer":"https://www.pagetable.com/?p=1140","linkMd5ListStr":"53045d5139cf015200567fdce9ea7c62","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.7 KB","destSize":"12.8 KB","compressRate":"768.1%"},{"code":1,"isDone":false,"source":"https://www.pagetable.com/docs/geos20de_master/geos_install_5.png","sourceStatusCode":200,"destWidth":320,"destHeight":200,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn11@2020_1/2021/05/02/06-23-01-390_bf57db83982dcebc.webp","sourceBytes":474,"destBytes":9296,"targetWebpQuality":75,"feedId":19901,"totalSpendMs":871,"convertSpendMs":5,"createdTime":"2021-05-02 14:23:00","host":"us-011*","referer":"https://www.pagetable.com/?p=1140","linkMd5ListStr":"53045d5139cf015200567fdce9ea7c62","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"474 B","destSize":"9.1 KB","compressRate":"1,961.2%"},{"code":1,"isDone":false,"source":"https://www.pagetable.com/docs/geos20de_master/geos_install.gif","sourceStatusCode":200,"destWidth":384,"destHeight":272,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn30@2020_2/2021/05/02/06-23-01-934_7f6d27be9e0da715.webp","sourceBytes":74958,"destBytes":266278,"targetWebpQuality":75,"feedId":19901,"totalSpendMs":2214,"convertSpendMs":1157,"createdTime":"2021-05-02 14:23:00","host":"us-027*","referer":"https://www.pagetable.com/?p=1140","linkMd5ListStr":"53045d5139cf015200567fdce9ea7c62","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"73.2 KB","destSize":"260 KB","compressRate":"355.2%"}],"successGithubMap":{"myreaderx8":1,"myreaderx15":1,"myreaderx7":1,"myreaderx10":1,"myreaderx22":1,"myreaderx11":1,"myreaderx33":1,"myreaderx3":1,"myreaderx12":1,"myreaderx13":1,"myreaderx5oss":1},"failGithubMap":{}}