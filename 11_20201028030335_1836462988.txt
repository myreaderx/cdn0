{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-10-28 11:03:07","updatedTime":"2020-10-28 11:03:07","title":"Using MySQL 8 Persisted System Variables","link":"https://www.percona.com/blog/?p=72010","description":"<img width=\"200\" height=\"112\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/MySQL-8-Persisted-System-Variables-200x112.png\" class=\"webfeedsFeaturedVisual wp-post-image\" alt=\"MySQL 8 Persisted System Variables\" loading=\"lazy\" style=\"display: block; margin-bottom: 5px; clear:both;max-width: 100%;\" link_thumbnail=\"\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/MySQL-8-Persisted-System-Variables-200x112.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/MySQL-8-Persisted-System-Variables-300x168.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/MySQL-8-Persisted-System-Variables-1024x572.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/10/MySQL-8-Persisted-System-Variables-367x205.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/10/MySQL-8-Persisted-System-Variables.png 1200w\" sizes=\"(max-width: 200px) 100vw, 200px\" /><p><img loading=\"lazy\" class=\"alignright size-medium wp-image-72295\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/MySQL-8-Persisted-System-Variables-300x168.png\" alt=\"MySQL 8 Persisted System Variables\" width=\"300\" height=\"168\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/MySQL-8-Persisted-System-Variables-300x168.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/MySQL-8-Persisted-System-Variables-1024x572.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/10/MySQL-8-Persisted-System-Variables-200x112.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/MySQL-8-Persisted-System-Variables-367x205.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/10/MySQL-8-Persisted-System-Variables.png 1200w\" sizes=\"(max-width: 300px) 100vw, 300px\" />This blog discusses new features about the persisted system variables and how we can use it to make variable changes persistent. The MySQL server maintains system variables that control its operations. The dynamic variables used prior to the MySQL 8 release are not persistent and are reset upon restart. These variables can be changed at runtime using the SET statement to affect the operation of the current server instance but we have to manually update my.cnf config file to make them persistent. In many cases, updating my.cnf from the server-side is not a convenient option, and leaving the variable just updated dynamically reverts on the subsequent restart without any history.</p>\n<p>Persisted system variables are one of the useful features introduced in MySQL 8. The new functionality helps DBAs update the variables dynamically and register them without touching the configuration files from the server-side.</p>\n<h2>How to Persist the Global System Variables?</h2>\n<p>Like SET GLOBAL, SET PERSIST is the command that can be used for updating the system variables at runtime and make them persistent across restarts. When we use the PERSIST keyword, the variable changes are updated to the mysqld-auto.cnf option file in the data directory. The mysqld-auto.cnf is a JSON format file created only upon the first execution of the PERSIST or PERSIST_ONLY statement.<b></b></p>\n<p>Let’s see how this feature works using an example updating the max connections.</p><pre class=\"crayon-plain-tag\">mysql&#62; SET PERSIST max_connections = 1000;\nQuery OK, 0 rows affected (0.00 sec)\nmysql&#62; select @@max_connections\\G\n*************************** 1. row ***************************\n@@max_connections: 1000\n1 row in set (0.00 sec)</pre><p>The resulting mysqld-auto.cnf looks like this:</p><pre class=\"crayon-plain-tag\">cat /var/lib/mysql/mysqld-auto.cnf\n{ \"Version\" : 1 , \"mysql_server\" : { \"max_connections\" : { \"Value\" : \"1000\" , \"Metadata\" : { \"Timestamp\" : 1602543199335909 , \"User\" : \"root\" , \"Host\" : \"localhost\" } } } }</pre><p></p>\n<h2>How to Persist the Read-Only System Variables?</h2>\n<p>When there is a need to change variables that are read-only, we need to use the PERSIST_ONLY keyword. This clause updates the change in the mysqld-auto.cnf file but does not apply in the MySQL, persisting upon the next MySQL restart. This makes PERSIST_ONLY suitable for configuring read-only system variables that can be set only at server startup.</p><pre class=\"crayon-plain-tag\">mysql&#62;  SET PERSIST innodb_log_file_size=50331648*2;\nERROR 1238 (HY000): Variable 'innodb_log_file_size' is a read-only variable\nmysql&#62; set persist_only innodb_log_file_size=50331648*2;\nQuery OK, 0 rows affected (0.01 sec)</pre><p></p>\n<h2>How to Clear the Persisted System Variable Settings?</h2>\n<p>We can use the RESET PERSIST command to remove persisted settings from mysqld-auto.cnf. Be careful when running the command without a specific variable name as it will remove all the settings from the configuration file. In effect, it removes the persisted settings from mysqld-auto.cnf but not from MySQL.</p>\n<p>See the below examples.</p><pre class=\"crayon-plain-tag\">mysql&#62; RESET PERSIST;\nQuery OK, 0 rows affected (0.00 sec)\ncat /var/lib/mysql/mysqld-auto.cnf\n{ \"Version\" : 1 , \"mysql_server\" : {  } }</pre><p></p><pre class=\"crayon-plain-tag\">mysql&#62; select @@max_connections;\n+-------------------+\n| @@max_connections |\n+-------------------+\n|              1000 |\n+-------------------+\n1 row in set (0.01 sec)</pre><p>If you may want to clear a specific variable instead of clearing all settings from the configuration file, the following example shows us how to do this. If we try to remove a variable that does not exist in the mysqld-auto.cnf it results in an error as shown below and we can use the IF EXISTS clause to suppress the error.</p><pre class=\"crayon-plain-tag\">mysql&#62; RESET PERSIST max_connections;\nQuery OK, 0 rows affected (0.00 sec)\nmysql&#62; RESET PERSIST innodb_max_dirty_pages_pct;\nERROR 3615 (HY000): Variable innodb_max_dirty_pages_pct does not exist in persisted config file\nmysql&#62;\nmysql&#62; RESET PERSIST IF EXISTS innodb_max_dirty_pages_pct;\nQuery OK, 0 rows affected, 1 warning (0.00 sec)\nmysql&#62; show warnings;\n| Warning | 3615 | Variable innodb_max_dirty_pages_pct does not exist in persisted config file |</pre><p></p>\n<h2>Is There a Way to Disable Persistence?</h2>\n<p>Yes, the persisted_globals_load parameter is used to enable or disable the persisted system variables. When disabled, the server startup sequence ignores the mysqld-auto.cnf file. Manually changing to the mysqld-auto.cnf file may result in a parse error at server startup. In this case, the server reports an error and exits. If this issue occurs, then you have to start the server with the persisted_globals_load system variable disabled or with the &#8211;no-defaults option as given in the example below.</p><pre class=\"crayon-plain-tag\">mysql&#62; select @@persisted_globals_load ;\n+-------------------------------------+\n| @@persisted_globals_load            |\n+-------------------------------------+\n|                 1                   |\n+-------------------------------------+\n1 row in set (0.00 sec)\n\ngrep -i persisted_globals_load /etc/my.cnf\npersisted_globals_load=0\n\nmysql&#62; restart;\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql&#62;  select @@persisted_globals_load ;\n+-----------------------------------+\n|    @@persisted_globals_load       |\n+-----------------------------------+\n|                 0                 |\n+----------------------------------+\n1 row in set (0.00 sec)\n\nmysql&#62; select @@max_connections;\n+-------------------+\n| @@max_connections |\n+-------------------+\n|               500 |\n+-------------------+\n1 row in set (0.00 sec)</pre><p></p>\n<h2>What Grants Are Required?</h2>\n<p>Considering security, the right permissions for the right user is definitely a best practice. The SYSTEM_VARIABLES_ADMIN and PERSIST_RO_VARIABLES_ADMIN are the required privileges for a user to use the SET PERSIST_ONLY to persist global system variables to the mysqld-auto.cnf.</p>\n<p>The user also needs to have the SHUTDOWN privilege to be able to use the RESTART command. It provides a way to restart MySQL from the client session without requiring command-line access on the server host.</p><pre class=\"crayon-plain-tag\">mysql&#62; CREATE USER 'admin_persist'@'localhost' IDENTIFIED BY '*********';\nQuery OK, 0 rows affected (0.02 sec)\n\nmysql&#62; GRANT SYSTEM_VARIABLES_ADMIN, PERSIST_RO_VARIABLES_ADMIN, SHUTDOWN on *.* to 'admin_persist'@'localhost';\nQuery OK, 0 rows affected (0.03 sec)</pre><p></p>\n<h2>How to Monitor the Variables</h2>\n<p>To list the variables that have been updated using the PERSIST option, we can query the performance_schema.persisted_variables table joining with a couple of other tables as shown below. This is a simple example of how to monitor the variables from the MySQL side and based on your needs, you can modify the query.</p><pre class=\"crayon-plain-tag\">mysql&#62; select v.VARIABLE_NAME,g.VARIABLE_VALUE current_value,p.VARIABLE_VALUE as persist_value,SET_TIME,SET_USER,VARIABLE_SOURCE,VARIABLE_PATH from performance_schema.variables_info v JOIN performance_schema.persisted_variables p USING(VARIABLE_NAME) JOIN performance_schema.global_variables g USING(VARIABLE_NAME)\\G\n*************************** 1. row ***************************\n  VARIABLE_NAME: innodb_log_file_size\n  current_value: 50331648\n  persist_value: 100663296\n       SET_TIME: 2020-10-12 18:54:35.725177\n       SET_USER: arun\nVARIABLE_SOURCE: COMPILED\n  VARIABLE_PATH:\n\n*************************** 2. row ***************************\n  VARIABLE_NAME: max_connections\n  current_value: 1000\n  persist_value: 1000\n       SET_TIME: 2020-10-12 18:53:19.336115\n       SET_USER: root\nVARIABLE_SOURCE: DYNAMIC\n  VARIABLE_PATH:\n2 rows in set (0.06 sec)\n\nmysql&#62; restart;\nQuery OK, 0 rows affected (0.01 sec)\n\nselect v.VARIABLE_NAME,g.VARIABLE_VALUE current_value,p.VARIABLE_VALUE as persist_value,SET_TIME,SET_USER,VARIABLE_SOURCE,VARIABLE_PATH from performance_schema.variables_info v JOIN performance_schema.persisted_variables p USING(VARIABLE_NAME) JOIN performance_schema.global_variables g USING(VARIABLE_NAME)\\G\n*************************** 1. row ***************************\n  VARIABLE_NAME: innodb_log_file_size\n  current_value: 100663296\n  persist_value: 100663296\n       SET_TIME: 2020-10-12 18:54:35.725177\n       SET_USER: arun\nVARIABLE_SOURCE: PERSISTED\n  VARIABLE_PATH: /var/lib/mysql/mysqld-auto.cnf\n\n*************************** 2. row ***************************\n  VARIABLE_NAME: max_connections\n  current_value: 1000\n  persist_value: 1000\n       SET_TIME: 2020-10-12 18:53:19.335909\n       SET_USER: root\nVARIABLE_SOURCE: PERSISTED\n  VARIABLE_PATH: /var/lib/mysql/mysqld-auto.cnf\n2 rows in set (0.16 sec)</pre><p>Hopefully, this blog helped to explain what “Persisted System Variables” is and how it operates.</p>\n","descriptionType":"html","publishedDate":"Tue, 27 Oct 2020 16:13:18 +0000","feedId":11,"bgimg":"","linkMd5":"11f34f8db0cbce73afca3a4e031ece65","bgimgJsdelivr":"","metaImg":"","author":"Arunjith Aravindan","articleImgCdnMap":{"https://www.percona.com/blog/wp-content/uploads/2020/10/MySQL-8-Persisted-System-Variables-200x112.png":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn99@2020_2/2020/10/28/03-03-17-694_93d29654d4834dbb.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/MySQL-8-Persisted-System-Variables-300x168.png":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn87@2020_1/2020/10/28/03-03-26-158_a9f7920f91dead32.webp"},"publishedOrCreatedDate":1603854187179},{"createdTime":"2020-10-28 11:03:07","updatedTime":"2020-10-28 11:03:07","title":"MySQL 8.0.22: Asynchronous Replication Automatic Connection (IO Thread) Failover","link":"https://www.percona.com/blog/?p=72175","description":"<img width=\"200\" height=\"105\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/MySQL-8.0.22-Asynchronous-Replication-Automatic-Connection-200x105.png\" class=\"webfeedsFeaturedVisual wp-post-image\" alt=\"MySQL 8.0.22 Asynchronous Replication Automatic Connection\" loading=\"lazy\" style=\"display: block; margin-bottom: 5px; clear:both;max-width: 100%;\" link_thumbnail=\"\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/MySQL-8.0.22-Asynchronous-Replication-Automatic-Connection-200x105.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/MySQL-8.0.22-Asynchronous-Replication-Automatic-Connection-300x157.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/MySQL-8.0.22-Asynchronous-Replication-Automatic-Connection-1024x536.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/10/MySQL-8.0.22-Asynchronous-Replication-Automatic-Connection-1140x595.png 1140w, https://www.percona.com/blog/wp-content/uploads/2020/10/MySQL-8.0.22-Asynchronous-Replication-Automatic-Connection-367x192.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/10/MySQL-8.0.22-Asynchronous-Replication-Automatic-Connection.png 1200w\" sizes=\"(max-width: 200px) 100vw, 200px\" /><p><img loading=\"lazy\" class=\"alignright size-medium wp-image-72271\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/MySQL-8.0.22-Asynchronous-Replication-Automatic-Connection-300x157.png\" alt=\"MySQL 8.0.22 Asynchronous Replication Automatic Connection\" width=\"300\" height=\"157\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/MySQL-8.0.22-Asynchronous-Replication-Automatic-Connection-300x157.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/MySQL-8.0.22-Asynchronous-Replication-Automatic-Connection-1024x536.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/10/MySQL-8.0.22-Asynchronous-Replication-Automatic-Connection-200x105.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/MySQL-8.0.22-Asynchronous-Replication-Automatic-Connection-1140x595.png 1140w, https://www.percona.com/blog/wp-content/uploads/2020/10/MySQL-8.0.22-Asynchronous-Replication-Automatic-Connection-367x192.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/10/MySQL-8.0.22-Asynchronous-Replication-Automatic-Connection.png 1200w\" sizes=\"(max-width: 300px) 100vw, 300px\" />MySQL 8.0.22 was released on Oct 19, 2020, and came with nice features and a lot of bug fixes. Now, you can configure your async replica to choose the new source in case the existing source connection (IO thread) fails. In this blog, I am going to explain the entire process involved in this configuration with a use case.</p>\n<h2>Overview</h2>\n<p><span>This feature is very helpful to keep your replica server in sync in case of current source fails. </span></p>\n<p><span>To activate asynchronous connection failover, we need to set the &#8220;SOURCE_CONNECTION_AUTO_FAILOVER=1&#8221; on the &#8220;CHANGE MASTER&#8221; statement.</span></p>\n<p><span>Once the IO connection fails, it will try to connect the existing source based on the “MASTER_RETRY_COUNT, MASTER_CONNECT_RETRY”. Then only it will do the failover. </span></p>\n<p><span>The feature will only work when the IO connection is failed, maybe the source crashed or stopped, or any network failures. This will not work if the replica is manually stopped using the “STOP REPLICA”. </span></p>\n<p><span>We have two new functions, which will help to add and delete the server entries from the source list. </span></p>\n<ul>\n<li><span>asynchronous_connection_failover_add_source → Arguments (&#8216;channel&#8217;,&#8217;host&#8217;,port,&#8217;network_namespace&#8217;,weight)</span></li>\n<li><span>asynchronous_connection_failover_delete_source &#8212; Arguments (&#8216;channel&#8217;,&#8217;host&#8217;,port,&#8217;network_namespace)</span></li>\n</ul>\n<p><span>The source servers need to be configured in the table &#8220;mysql.replication_asynchronous_connection_failover&#8221;. We can also use the table &#8220;performance_schema.replication_asynchronous_connection_failover&#8221; to view the available servers in source list.</span></p>\n<h2>Requirements</h2>\n<ul>\n<li><span>GTID should be enabled on all the servers.</span></li>\n<li><span>Regarding auto-positioning purpose, MASTER_AUTO_POSITION should be enabled on the replica ( CHANGE MASTER ).</span></li>\n<li><span>The user and password should be the same on all the source servers.</span></li>\n<li><span>Replication user and password must be set for the channel using the CHANGE MASTER .. FOR CHANNEL statement. </span></li>\n</ul>\n<h2>Use Case</h2>\n<p><span>I have two data centers and three servers (dc1, dc2, report).</span></p>\n<ul>\n<li><span>“dc1” and “report” servers are in the same data center.</span></li>\n<li><span>“dc2” is in a different data center.</span></li>\n<li><span>“dc1” and “dc2” are in active-passive async replication setup (dc1 &#8211; active, dc2 &#8211; passive)</span></li>\n<li><span>“report” is configured as an async replica under “dc1” for reporting purposes.</span></li>\n</ul>\n<p><span>Here, my requirement is, if the active node “dc1” is failed, I need to configure the “report” server under “dc2” to get the live data without manual work after a failure happens.</span></p>\n<h2>Configuration for Automatic Connection Failover</h2>\n<p><span>I have installed MySQL 8.0.22 on all three servers and configured the active &#8211; passive replication between “dc1” and “dc2”.</span></p><pre class=\"crayon-plain-tag\">[root@dc1 ~]# mysql -e \"select @@version, @@version_comment\\G\"\n*************************** 1. row ***************************\n        @@version: 8.0.22\n@@version_comment: MySQL Community Server - GPL</pre><p><span>At dc1,</span></p><pre class=\"crayon-plain-tag\">mysql&#62; show replica status\\G\n                  Source_Host: dc2\n           Replica_IO_Running: Yes\n          Replica_SQL_Running: Yes\n1 row in set (0.00 sec)</pre><p><span>At dc2,</span></p><pre class=\"crayon-plain-tag\">mysql&#62; show replica status\\G\n                  Source_Host: dc1\n           Replica_IO_Running: Yes\n          Replica_SQL_Running: Yes\n1 row in set (0.00 sec)</pre><p><span>Now, I need to configure the “report” server as an async replica under “dc1” with automatic failover options.</span></p>\n<p><span>At report,</span></p><pre class=\"crayon-plain-tag\">mysql&#62; change master to\n    -&#62; master_user='Autofailover',\n    -&#62; master_password='Autofailover@321',\n    -&#62; master_host='dc1',\n    -&#62; master_auto_position=1,\n    -&#62; get_master_public_key=1,\n    -&#62; source_connection_auto_failover=1,\n    -&#62; master_retry_count=3,\n    -&#62; master_connect_retry=10\n    -&#62; for channel \"herc7\";\nQuery OK, 0 rows affected, 2 warnings (0.03 sec)</pre><p>&#160;</p>\n<p><b><i>source_connection_auto_failover :</i></b><i><span> To activate the automatic failover feature.</span></i></p>\n<p><b><i>master_retry_count, master_connect_retry :</i></b><i><span> The default setting is huge ( master_retry_count = 86400, master_connect_retry = 60 ), with that we need to wait 60 days ( 86400 * 60 /60/60/24 ) for the failover. So, i reduced the settings to 30 seconds ( 10 *3 )</span></i></p><pre class=\"crayon-plain-tag\">mysql&#62; start replica for channel \"herc7\";\nQuery OK, 0 rows affected, 1 warning (0.00 sec)\n\nmysql&#62; show replica status\\G\n                  Source_Host: dc1\n                Connect_Retry: 10\n           Replica_IO_Running: Yes\n          Replica_SQL_Running: Yes\n        Seconds_Behind_Source: 0\n                Last_IO_Error: \n    Replica_SQL_Running_State: Slave has read all relay log; waiting for more updates\n           Source_Retry_Count: 3\n      Last_IO_Error_Timestamp: \n                Auto_Position: 1\n                 Channel_Name: herc7\n1 row in set (0.00 sec)</pre><p><span>You can see the replication is started and the failover settings are applied. The current primary source is “dc1”. </span><span>Now, I am going to use the function to add the server details into the source list for the failover to dc2.</span></p>\n<p>At &#8220;report&#8221;,</p><pre class=\"crayon-plain-tag\">mysql&#62; select asynchronous_connection_failover_add_source('herc7', 'dc2', 3306, '', 50);\n+------------------------------------------------------------------------------+\n| asynchronous_connection_failover_add_source('herc7', 'dc2', 3306, '', 50)    |\n+------------------------------------------------------------------------------+\n| The UDF asynchronous_connection_failover_add_source() executed successfully. |\n+------------------------------------------------------------------------------+\n1 row in set (0.00 sec)\n\nmysql&#62; select * from mysql.replication_asynchronous_connection_failover\\G\n*************************** 1. row ***************************\n     Channel_name: herc7\n             Host: dc2\n             Port: 3306\nNetwork_namespace: \n           Weight: 50\n1 row in set (0.00 sec)</pre><p><span>It shows the source list is updated with dc2 details. We are good to perform the failover now. </span></p>\n<p><span>I am going to shut down the MySQL service on dc1. </span></p>\n<p><span>At dc1, </span></p><pre class=\"crayon-plain-tag\">[root@dc1 ~]# service mysqld stop\nRedirecting to /bin/systemctl stop mysqld.service\n[root@dc1 ~]#</pre><p><span>At report server,</span></p><pre class=\"crayon-plain-tag\">mysql&#62; show replica status\\G\n                 Source_Host: dc1\n                Connect_Retry: 10\n           Replica_IO_Running: Connecting\n          Replica_SQL_Running: Yes\n        Seconds_Behind_Source: NULL\n                Last_IO_Error: error reconnecting to master 'Autofailover@dc1:3306' - retry-time: 10 retries: 2 message: Can't connect to MySQL server on 'dc1' (111)\n    Replica_SQL_Running_State: Slave has read all relay log; waiting for more updates\n           Source_Retry_Count: 3\n      Last_IO_Error_Timestamp: 201019 21:32:26\n                Auto_Position: 1\n                 Channel_Name: herc7\n1 row in set (0.00 sec)</pre><p><span>The IO thread is in “connecting” state. This means it is trying to establish the connection to the existing source (dc1) based on the “master_retry_count” and “master_connect_retry” settings. </span></p>\n<p><span> </span><span>After 30 seconds,</span></p><pre class=\"crayon-plain-tag\">mysql&#62; show replica status\\G\n                  Source_Host: dc2\n                Connect_Retry: 10\n           Replica_IO_Running: Yes\n          Replica_SQL_Running: Yes\n        Seconds_Behind_Source: 0\n                Last_IO_Error: \n    Replica_SQL_Running_State: Slave has read all relay log; waiting for more updates\n           Source_Retry_Count: 3\n      Last_IO_Error_Timestamp: \n                Auto_Position: 1\n                 Channel_Name: herc7\n1 row in set (0.00 sec)</pre><p><span>You can see the source_host was changed to “dc2”. So, the server “report” performed the auto failover and connected to “dc2”. </span></p>\n<p><span>From the error log,</span></p><pre class=\"crayon-plain-tag\">2020-10-19T21:32:16.247460Z 53 [ERROR] [MY-010584] [Repl] Slave I/O for channel 'herc7': error reconnecting to master 'Autofailover@dc1:3306' - retry-time: 10 retries: 1 message: Can't connect to MySQL server on 'dc1' (111), Error_code: MY-002003\n2020-10-19T21:32:26.249887Z 53 [ERROR] [MY-010584] [Repl] Slave I/O for channel 'herc7': error reconnecting to master 'Autofailover@dc1:3306' - retry-time: 10 retries: 2 message: Can't connect to MySQL server on 'dc1' (111), Error_code: MY-002003\n2020-10-19T21:32:36.251989Z 53 [ERROR] [MY-010584] [Repl] Slave I/O for channel 'herc7': error reconnecting to master 'Autofailover@dc1:3306' - retry-time: 10 retries: 3 message: Can't connect to MySQL server on 'dc1' (111), Error_code: MY-002003\n2020-10-19T21:32:36.254585Z 56 [Warning] [MY-010897] [Repl] Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.\n2020-10-19T21:32:36.256170Z 56 [System] [MY-010562] [Repl] Slave I/O thread for channel 'herc7': connected to master 'Autofailover@dc2:3306',replication started in log 'FIRST' at position 196\n2020-10-19T21:32:36.258628Z 56 [Warning] [MY-010549] [Repl] The master's UUID has changed, although this should not happen unless you have changed it manually. The old UUID was f68b8693-1246-11eb-a6c0-5254004d77d3.</pre><p><span>The first three lines say it tried to connect the existing primary source “dc1” in a 10 seconds interval. There was no response from “dc1”, so it does the failover to “dc2” (connected to master &#8216;Autofailover@dc2:3306&#8217;).</span></p>\n<p><span>It works perfectly!</span></p>\n<h2>Is Failback Possible?</h2>\n<p><span>Let&#8217;s experiment with the below two scenarios,</span></p>\n<ul>\n<li><span>What happens if the primary node comes back online?</span></li>\n<li><span>Does it perform a failback in case the server with higher weight comes back online?</span></li>\n</ul>\n<h3>What happens if the primary node comes back online?</h3>\n<p><span>I am going to start the “dc1”, which was shut down earlier to test the failover.</span></p>\n<p><span>At “dc1”,</span></p><pre class=\"crayon-plain-tag\">[root@dc1 ~]# service mysqld start\nRedirecting to /bin/systemctl start mysqld.service\n[root@dc1 ~]# mysql -e \"show status like 'uptime'\\G\"\n*************************** 1. row ***************************\nVariable_name: Uptime\n        Value: 4</pre><p><span>Let&#8217;s see the replication on the “report” server.</span></p><pre class=\"crayon-plain-tag\">mysql&#62; show replica status\\G\n                  Source_Host: dc2\n           Replica_IO_Running: Yes\n          Replica_SQL_Running: Yes\n    Replica_SQL_Running_State: Slave has read all relay log; waiting for more updates\n                 Channel_Name: herc7\n1 row in set (0.00 sec)</pre><p><span>No changes. It is still connected to “dc2”. Failback has not happened.</span></p>\n<h3>Does it perform a failback in case the server with higher weight comes back online?</h3>\n<p><span>To test this, again I shut down the MySQL on “dc1” and updated the source list on the “report” server (dc1 weight &#62; dc2 weight).</span></p><pre class=\"crayon-plain-tag\">select asynchronous_connection_failover_add_source('herc7', 'dc1', 3306, '', 70)\\G\n\nmysql&#62; select * from replication_asynchronous_connection_failover\\G\n*************************** 1. row ***************************\n     Channel_name: herc7\n             Host: dc1\n             Port: 3306\nNetwork_namespace: \n           Weight: 70\n*************************** 2. row ***************************\n     Channel_name: herc7\n             Host: dc2\n             Port: 3306\nNetwork_namespace: \n           Weight: 50\n2 rows in set (0.00 sec)</pre><p><span>You can see the server “dc1” is configured with a higher weight (70). Now I am going to start the MySQL service on “dc1”.</span></p>\n<p><span>At “dc1”,</span></p><pre class=\"crayon-plain-tag\">[root@dc1 ~]# service mysqld start\nRedirecting to /bin/systemctl start mysqld.service\n[root@dc1 ~]# mysql -e \"show status like 'uptime'\\G\"\n*************************** 1. row ***************************\nVariable_name: Uptime\n        Value: 37</pre><p><span>At “report” server,</span></p><pre class=\"crayon-plain-tag\">mysql&#62; show replica status\\G\n                  Source_Host: dc2\n           Replica_IO_Running: Yes\n          Replica_SQL_Running: Yes\n    Replica_SQL_Running_State: Slave has read all relay log; waiting for more updates\n1 row in set (0.00 sec)</pre><p><span>No changes, so once the failover is done to the new source, the automatic failback will not happen until the new source goes down. </span></p>\n<p><strong>From MySQL doc:</strong></p>\n<blockquote><p><i><span>Once the replica has succeeded in making a connection, it does not change the connection unless the new source stops or there is a network failure. This is the case even if the source that became unavailable and triggered the connection change becomes available again and has a higher priority setting.</span></i></p></blockquote>\n<p><span>This solution is also very helpful in (cluster + async replica) environments. You can automatically switch the connection to another cluster node, in case the existing source cluster node fails. If your network is not stable, you need to consider to set the proper retry settings, because you may face the frequent failover with low thresholds.</span></p>\n","descriptionType":"html","publishedDate":"Mon, 26 Oct 2020 19:46:18 +0000","feedId":11,"bgimg":"","linkMd5":"928f438a60c8ef59f361f73f3cbfbd94","bgimgJsdelivr":"","metaImg":"","author":"Sri Sakthivel","articleImgCdnMap":{"https://www.percona.com/blog/wp-content/uploads/2020/10/MySQL-8.0.22-Asynchronous-Replication-Automatic-Connection-200x105.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn56@2020_5/2020/10/28/03-03-09-965_39e0f008bd9e83a8.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/MySQL-8.0.22-Asynchronous-Replication-Automatic-Connection-300x157.png":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn7@2020_5/2020/10/28/03-03-12-009_953d3b12ebfa7671.webp"},"publishedOrCreatedDate":1603854187179},{"createdTime":"2020-10-28 11:03:07","updatedTime":"2020-10-28 11:03:07","title":"Webinar November 10: Google Cloud Platform – MySQL at Scale with Reliable HA","link":"https://www.percona.com/blog/?p=72185","description":"<img width=\"200\" height=\"112\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/webinar-Google-Cloud-Platform-200x112.png\" class=\"webfeedsFeaturedVisual wp-post-image\" alt=\"webinar Percona Google Cloud Platform\" loading=\"lazy\" style=\"display: block; margin-bottom: 5px; clear:both;max-width: 100%;\" link_thumbnail=\"\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/webinar-Google-Cloud-Platform-200x112.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/webinar-Google-Cloud-Platform-300x168.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/webinar-Google-Cloud-Platform-1024x572.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/10/webinar-Google-Cloud-Platform-367x205.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/10/webinar-Google-Cloud-Platform.png 1200w\" sizes=\"(max-width: 200px) 100vw, 200px\" /><p><img loading=\"lazy\" class=\"alignright size-medium wp-image-72187\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/webinar-Google-Cloud-Platform-300x168.png\" alt=\"webinar Percona Google Cloud Platform\" width=\"300\" height=\"168\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/webinar-Google-Cloud-Platform-300x168.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/webinar-Google-Cloud-Platform-1024x572.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/10/webinar-Google-Cloud-Platform-200x112.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/webinar-Google-Cloud-Platform-367x205.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/10/webinar-Google-Cloud-Platform.png 1200w\" sizes=\"(max-width: 300px) 100vw, 300px\" />Google Cloud Platform (GCP), with its CloudSQL offering, has become a leading platform for database-as-a-service workload deployments for many organizations. Scale and High Availability have surfaced as primary goals for many of these deployments. Unfortunately, the attainment of these objectives has been challenging.</p>\n<p>Often, the answer has been to simply add more CloudSQL databases. Many, however, have found a better solution in Percona’s fully managed MySQL environment based in Google’s GCE. Percona’s fully managed MySQL offering provides benefits similar to CloudSQL, plus the ability to run MySQL with an unlimited number of tables and much more reliable database availability. This has empowered these organizations to reclaim control over their architecture decisions. With Percona’s fully managed MySQL, your database architecture choices are once again based on your needs and the needs of your workload, rather than the capabilities of the underlying platform. Learn more about GCP and the benefits of Percona&#8217;s fully-managed database service to scale and consolidate your databases.</p>\n<p>Please join Stephen Thorn and Michal Nosek, Percona Solution Engineers, on <strong>Tuesday, November 10th, at 1 pm EDT</strong> for their webinar <strong>&#8220;Google Cloud Platform: MySQL at Scale with Reliable HA</strong>&#8220;.</p>\n<p style=\"text-align: center;\"><a target=\"_blank\" class=\"btn btn-primary btn-lg\" href=\"https://attendee.gotowebinar.com/register/492270457854334223?source=Blog\">Register for Webinar</a></p>\n<p>If you can&#8217;t attend, <a target=\"_blank\" href=\"https://attendee.gotowebinar.com/register/492270457854334223?source=Blog\">sign up anyway</a> and we&#8217;ll send you the slides and recording afterward.</p>\n","descriptionType":"html","publishedDate":"Thu, 22 Oct 2020 14:46:07 +0000","feedId":11,"bgimg":"","linkMd5":"f74c673914fee2805ad9473b1690ebe4","bgimgJsdelivr":"","metaImg":"","author":"David Quilty","articleImgCdnMap":{"https://www.percona.com/blog/wp-content/uploads/2020/10/webinar-Google-Cloud-Platform-200x112.png":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn43@2020_4/2020/10/28/03-03-24-530_289e28eab2ced64d.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/webinar-Google-Cloud-Platform-300x168.png":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn3@2020_1/2020/10/28/03-03-19-849_bc8c60916a4ca240.webp"},"publishedOrCreatedDate":1603854187179},{"createdTime":"2020-10-28 11:03:07","updatedTime":"2020-10-28 11:03:07","title":"CVE-2020-26542: SimpleLDAP Authentication in Percona Server for MySQL, Percona Server for MongoDB","link":"https://www.percona.com/blog/?p=71846","description":"<img width=\"200\" height=\"105\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/CVE-2020-26542-200x105.png\" class=\"webfeedsFeaturedVisual wp-post-image\" alt=\"CVE-2020-26542\" loading=\"lazy\" style=\"display: block; margin-bottom: 5px; clear:both;max-width: 100%;\" link_thumbnail=\"\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/CVE-2020-26542-200x105.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/CVE-2020-26542-300x157.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/CVE-2020-26542-1024x536.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/10/CVE-2020-26542-1140x595.png 1140w, https://www.percona.com/blog/wp-content/uploads/2020/10/CVE-2020-26542-367x192.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/10/CVE-2020-26542.png 1200w\" sizes=\"(max-width: 200px) 100vw, 200px\" /><h2>CVE-2020-26542</h2>\n<p>When using the SimpleLDAP authentication in conjunction with Microsoft’s Active Directory, Percona has discovered a flaw that would allow authentication to complete when passing a blank value for the account password, leading to access against the service integrated with which Active Directory is deployed at the level granted to the authenticating account.</p>\n<h3>Applicability</h3>\n<h2><a target=\"_blank\" href=\"https://www.percona.com/downloads/Percona-Server-LATEST/\">Percona Server for MySQL</a></h2>\n<p>Percona Server for Mysql 8.x. &#60; 8.0.21</p>\n<h2><a target=\"_blank\" href=\"https://www.percona.com/downloads/Percona-XtraDB-Cluster-LATEST/\">Percona XtraDB Cluster</a></h2>\n<p>Percona XtraDB Cluster 8.x. &#60; 8.0.20.11-3</p>\n<h2><a target=\"_blank\" href=\"https://www.percona.com/downloads/percona-server-mongodb-LATEST/\">Percona Server for MongoDB</a></h2>\n<p>Only the exact minor versions listed here are affected: 3.6.19-7.0, 4.0.18-11, 4.0.19-12, 4.0.20-13, 4.2.5-5, 4.2.6-6, 4.2.7-7, 4.2.8-8, 4.2.9-9, 4.4.0-1, 4.4.1-2</p>\n<h3>More Information</h3>\n<p><a target=\"_blank\" href=\"https://jira.percona.com/browse/PS-7358\">https://jira.percona.com/browse/PS-7358</a></p>\n<p><a target=\"_blank\" href=\"https://jira.percona.com/browse/PSMDB-726\">https://jira.percona.com/browse/PSMDB-726</a></p>\n<h3>Release Notes</h3>\n<p><a target=\"_blank\" href=\"https://www.percona.com/doc/percona-distribution-mysql/8.0/release-notes-pxc-v8.0.20.upd2.html\">https://www.percona.com/doc/percona-distribution-mysql/8.0/release-notes-pxc-v8.0.20.upd2.html</a></p>\n<blockquote class=\"wp-embedded-content\" data-secret=\"gNSdlFU30Q\"><p><a target=\"_blank\" href=\"https://www.percona.com/blog/2020/10/13/percona-distribution-for-mysql-pxc-variant-8-0-20-fixes-for-security-vulnerability-release-roundup-october-13-2020/\">Percona Distribution for MySQL (PXC Variant) 8.0.20, Fixes For Security Vulnerability: Release Roundup October 13, 2020</a></p></blockquote>\n<p><iframe class=\"wp-embedded-content\" sandbox=\"allow-scripts\" security=\"restricted\" title=\"&#8220;Percona Distribution for MySQL (PXC Variant) 8.0.20, Fixes For Security Vulnerability: Release Roundup October 13, 2020&#8221; &#8212; Percona Database Performance Blog\" src=\"https://www.percona.com/blog/2020/10/13/percona-distribution-for-mysql-pxc-variant-8-0-20-fixes-for-security-vulnerability-release-roundup-october-13-2020/embed/#?secret=gNSdlFU30Q\" data-secret=\"gNSdlFU30Q\" width=\"600\" height=\"338\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\"></iframe></p>\n<p>&#160;</p>\n","descriptionType":"html","publishedDate":"Fri, 23 Oct 2020 13:59:08 +0000","feedId":11,"bgimg":"","linkMd5":"8b6053d13fd207a21eadc4c23e48c700","bgimgJsdelivr":"","metaImg":"","author":"David Busby","articleImgCdnMap":{"https://www.percona.com/blog/wp-content/uploads/2020/10/CVE-2020-26542-200x105.png":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn68@2020_6/2020/10/28/03-03-27-858_e7f0f930cffbcf9f.webp"},"publishedOrCreatedDate":1603854187179},{"createdTime":"2020-10-28 11:03:07","updatedTime":"2020-10-28 11:03:07","title":"A First Glance at Amazon Aurora Serverless RDS","link":"https://www.percona.com/blog/?p=71612","description":"<img width=\"200\" height=\"112\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Amazon-Aurora-Serverless-200x112.png\" class=\"webfeedsFeaturedVisual wp-post-image\" alt=\"Amazon Aurora Serverless\" loading=\"lazy\" style=\"display: block; margin-bottom: 5px; clear:both;max-width: 100%;\" link_thumbnail=\"\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Amazon-Aurora-Serverless-200x112.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/Amazon-Aurora-Serverless-300x168.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/Amazon-Aurora-Serverless-1024x572.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/10/Amazon-Aurora-Serverless-367x205.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/10/Amazon-Aurora-Serverless.png 1200w\" sizes=\"(max-width: 200px) 100vw, 200px\" /><p><img loading=\"lazy\" class=\"alignright size-medium wp-image-72286\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Amazon-Aurora-Serverless-300x168.png\" alt=\"Amazon Aurora Serverless\" width=\"300\" height=\"168\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Amazon-Aurora-Serverless-300x168.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/Amazon-Aurora-Serverless-1024x572.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/10/Amazon-Aurora-Serverless-200x112.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/Amazon-Aurora-Serverless-367x205.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/10/Amazon-Aurora-Serverless.png 1200w\" sizes=\"(max-width: 300px) 100vw, 300px\" />If you often deploy services in the cloud, you certainly, at least once, forgot to stop a test instance. I am like you and I forgot my share of these. Another mistake I do once in a while is to provision a bigger instance than needed, just in case, and forget to downsize it. While this is true for compute instances, it is especially true for database instances. Over time, this situation ends up adding a cost premium. In this post, we&#8217;ll discuss a solution to mitigate these extra costs, the use of the RDS Aurora Serverless service.</p>\n<h2>What is Amazon Aurora Serverless?</h2>\n<p>Since last spring, Amazon unveiled a new database related product: <a target=\"_blank\" href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html\">RDS Aurora Serverless</a>. The aim of this new product is to simplify the management around Aurora clusters. It brings a likely benefit for the end users, better control over cost. Here are some of the benefits we can expect from this product:</p>\n<ul>\n<li>Automatic scaling up</li>\n<li>Automatic scaling down</li>\n<li>Automatic shutdown after a period of inactivity</li>\n<li>Automatic startup</li>\n</ul>\n<p>The database is constantly monitored and if the load grows beyond a given threshold, a bigger Aurora instance is added to the cluster, the connections are moved and the old instance is dropped. The opposite steps happen when a low load is detected. Also, if the database is completely inactive for some time, it is automatically stopped and restarted when needed. The RDS Aurora Serverless cluster type is available for MySQL (5.6 and 5.7) and PostgreSQL (10.12).</p>\n<h2>Architecture</h2>\n<p>The RDS Aurora Serverless architecture is similar to the regular RDS Aurora one.  There are three main components; a proxy layer handling the endpoints, the servers processing the queries, and the storage.  The proxy layer and the storage are about the same. As the name implies, what is dynamic with the Aurora Serverless type are the servers.</p>\n<p>There are not many details available as to how things are actually implemented but likely but the proxy layer is able to transfer a connection from one server to another when there is a scale up or down event. Essentially, we can assume that when the cluster is modified, the steps are the following:</p>\n<ol>\n<li>A new Aurora server instance is created with the new size</li>\n<li>The new instance is added to the Aurora cluster</li>\n<li>The writer role is transferred to the new instance</li>\n<li>The existing connections are moved</li>\n<li>The old instance is removed</li>\n</ol>\n<p>&#160;</p>\n<h2>How To Configure It</h2>\n<p>The configuration of an RDS Aurora Serverless cluster is very similar to a regular Aurora cluster, there are just a few additional steps.  First, of course, you need to choose the serverless type:</p>\n<p><img loading=\"lazy\" class=\"aligncenter wp-image-71701 size-full\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/select_type_serverless.png\" alt=\"RDS Aurora Serverless cluster\" width=\"676\" height=\"422\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/select_type_serverless.png 676w, https://www.percona.com/blog/wp-content/uploads/2020/10/select_type_serverless-300x187.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/select_type_serverless-200x125.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/select_type_serverless-367x229.png 367w\" sizes=\"(max-width: 676px) 100vw, 676px\" /></p>\n<p>And then you have to specify the limits of your cluster in &#8220;Capacity&#8221;. The capacity unit is ACU which stands for Aurora Capacity Unit. I couldn&#8217;t find the exact meaning for the ACU, the documentation has: &#8220;Each ACU is a combination of processing and memory capacity.&#8221;. An ACU seems to provide about 2GB of RAM and the range of possible values is 1 to 256. You set the minimum and maximum ACU you want for the cluster in the following dialog box:</p>\n<p><img loading=\"lazy\" class=\"aligncenter wp-image-71705 size-full\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Capacity_setting_serverless.png\" alt=\"Aurora Capacity Unit\" width=\"761\" height=\"243\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Capacity_setting_serverless.png 761w, https://www.percona.com/blog/wp-content/uploads/2020/10/Capacity_setting_serverless-300x96.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/Capacity_setting_serverless-200x64.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/Capacity_setting_serverless-367x117.png 367w\" sizes=\"(max-width: 761px) 100vw, 761px\" /></p>\n<p>The last step is to specify the inactivity timeout after which the database is paused:</p>\n<p><img loading=\"lazy\" class=\"aligncenter wp-image-71706 size-full\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/scaling_serverless.png\" alt=\"specify the inactivity timeout\" width=\"700\" height=\"397\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/scaling_serverless.png 700w, https://www.percona.com/blog/wp-content/uploads/2020/10/scaling_serverless-300x170.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/scaling_serverless-200x113.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/scaling_serverless-367x208.png 367w\" sizes=\"(max-width: 700px) 100vw, 700px\" /></p>\n<h2></h2>\n<h2>How It Works</h2>\n<h3>Startup</h3>\n<p>If the Aurora Serverless cluster has no running server instances, an attempt to connect to the database will trigger the creation of a new instance.  This process takes some time.  I used a simple script to measure the connection time after an inactivity timeout and found the following statistics:</p><pre class=\"crayon-plain-tag\">Min = 31s\nMax = 54s\naverage = 42s\nStdDev = 7.1s\nCount = 17</pre><p>You&#8217;ll need to make sure the application is aware of a new connection, as the database can take close to a minute to complete.  I got caught a few times with sysbench timing out after 30s. It is important to remember the initial capacity used is the same as the one when the Aurora Serverless instance stopped, unless you enabled the &#8220;Force scaling the capacity&#8230;&#8221; parameter in the configuration.</p>\n<h3>Pause</h3>\n<p>If an Aurora Serverless cluster is idle for more than its defined inactivity time, it will be automatically paused.  The inactivity here is defined in terms of active connections, not queries. An idle connection doing nothing will prevent the Aurora Serverless instance from stopping. If you intend to use the automatic pause feature, I recommend setting the &#8220;wait_timeout&#8221; and &#8220;interactive_timeout&#8221; to values in line with the cluster inactivity time.</p>\n<h3>Scale Up</h3>\n<p>A process monitors the Aurora Serverless instance and if it sees a performance issue that could be solved by the use of a larger instance type, it triggers a scale up event.  When there is an ongoing scale up (or down) event, you&#8217;ll see a process like this one in the MySQL process list:</p><pre class=\"crayon-plain-tag\">call action start_seamless_scaling('AQEAAEgBh893wRScvsaFbDguqAqinNK7...</pre><p>Bear in mind a scale up event can take some time, especially if the server is very busy. While doing some benchmarks, I witness more than 200s on a few occasions. The queries load is affected for a few seconds when the instances are swapped.</p>\n<p>To illustrate the scale up behavior, I ran a modified sysbench benchmark to force some CPU load. Here&#8217;s a 32 threads benchmarks scanning a table on an Aurora Serverless cluster having an initial capacity of 1.</p>\n<p><img loading=\"lazy\" class=\"aligncenter wp-image-71749 size-large\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/sb_load_serverless-1024x572.png\" alt=\"Aurora Serverless sysbench benchmark\" width=\"900\" height=\"503\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/sb_load_serverless-1024x572.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/10/sb_load_serverless-300x167.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/sb_load_serverless-200x112.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/sb_load_serverless-367x205.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/10/sb_load_serverless.png 1460w\" sizes=\"(max-width: 900px) 100vw, 900px\" /></p>\n<p>The first scale up happened a little after 600s while the second one occurred around 1100s. The second event didn&#8217;t improve much the load but that is likely an artifact of the benchmark. It took a long time to increase the capacity from 1 to 2, it could be related to the high CPU usage on the instance. There is usually a small disruption of the query load when the instances are swapped but nothing too bad.</p>\n<h3>Scale Down</h3>\n<p>While scale up events happen when needed, scale down events are throttled to about once per 5 minutes except if the previous scaling event was a &#8220;scale up&#8221;, then the delay is 15 minutes.</p>\n<h2>Pros and Cons of Aurora Serverless</h2>\n<p>The RDS Aurora Serverless offering is very compelling for many use cases. It reduces the cost and simplifies the management. However, you must accept the inherent limitations like the long start up time when the instance was on pause and the small hiccups when the capacity is modified. If you cannot cope with the start up time, you can just configure the instance so it doesn&#8217;t pause, it will scale down to a capacity of 1 which seems to map to a t3.small instance type.</p>\n<p>Of course, such an architecture imposes some drawbacks. Here&#8217;s a list of a few cons:</p>\n<ul>\n<li>As we have seen, the scale up time is affected by the database load</li>\n<li>Failover can also take more time than normally expected, especially if the ACU value is high</li>\n<li>You are limited to one node although, at an ACU of 256, it means a db.r4.16xlarge</li>\n<li>No public IP but you can set up a Data API</li>\n<li>The application must be robust in the way it deals with database connections because of possible delays and reconnections</li>\n</ul>\n<h2>Cost Savings</h2>\n<p>The cost of an RDS Aurora cluster has three components: the instance costs, the IO costs, and the storage costs. The Aurora Serverless offering affects only the instance costs. The cost is a flat rate per capacity unit per hour. Like for the normal instances, the costs are region-dependent.  The lowest is found in the us-east at $0.06 USD per Capacity unit per hour.</p>\n<p>If we consider a database used by web developers during the day and which can be paused out of the normal work hours and during the weekends, the saving can be above $240/month if the daily average capacity is only eight hours.</p>\n","descriptionType":"html","publishedDate":"Tue, 27 Oct 2020 13:54:00 +0000","feedId":11,"bgimg":"","linkMd5":"a4ca489826c03a3e726a3671f2c09f1e","bgimgJsdelivr":"","metaImg":"","author":"Yves Trudeau","articleImgCdnMap":{"https://www.percona.com/blog/wp-content/uploads/2020/10/Amazon-Aurora-Serverless-200x112.png":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn45@2020_2/2020/10/28/03-03-08-263_9a065aaa7d233960.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/Amazon-Aurora-Serverless-300x168.png":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn18@2020_6/2020/10/28/03-03-29-594_92250eb1ecb58b1f.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/select_type_serverless.png":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn77@2020_1/2020/10/28/03-03-18-004_d36cb878b2c0da3b.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/Capacity_setting_serverless.png":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn19@2020_2/2020/10/28/03-03-08-127_92b4d236645b2ea3.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/scaling_serverless.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn96@2020_4/2020/10/28/03-03-11-655_3f4d8230857143b5.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/sb_load_serverless-1024x572.png":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn16@2020_4/2020/10/28/03-03-08-265_cffc0deb56e7d1dc.webp"},"publishedOrCreatedDate":1603854187183},{"createdTime":"2020-10-28 11:03:07","updatedTime":"2020-10-28 11:03:07","title":"Percona Distribution for PostgreSQL 13, Updates to Percona Distribution for MySQL: Release Roundup October 26, 2020","link":"https://www.percona.com/blog/?p=72007","description":"<img width=\"200\" height=\"112\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Software-Release-Oct-26-200x112.png\" class=\"webfeedsFeaturedVisual wp-post-image\" alt=\"Percona Software Release Oct 26\" loading=\"lazy\" style=\"display: block; margin-bottom: 5px; clear:both;max-width: 100%;\" link_thumbnail=\"\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Software-Release-Oct-26-200x112.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Software-Release-Oct-26-300x169.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Software-Release-Oct-26-367x206.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Software-Release-Oct-26.png 712w\" sizes=\"(max-width: 200px) 100vw, 200px\" /><h2><img loading=\"lazy\" class=\"alignright size-medium wp-image-72234\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Software-Release-Oct-26-300x169.png\" alt=\"Percona Software Release Oct 26\" width=\"300\" height=\"169\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Software-Release-Oct-26-300x169.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Software-Release-Oct-26-200x112.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Software-Release-Oct-26-367x206.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Software-Release-Oct-26.png 712w\" sizes=\"(max-width: 300px) 100vw, 300px\" />It&#8217;s release roundup time here at Percona!</h2>\n<p>Our Release Roundups <span class=\"s1\">showcase the latest software updates, tools, and features to help you manage and deploy our software, with</span> highlights and critical information, as well as links to the full release notes and direct links to the software or service itself.</p>\n<p>Today&#8217;s post includes those releases and updates that have come out since October 13, 2020, including the release of Percona Distribution for PostgreSQL 13.0 with <a target=\"_blank\" class=\"reference external\" href=\"https://www.percona.com/blog/2020/10/14/announcing-pg_stat_monitor-tech-preview-get-better-insights-into-query-performance-in-postgresql/\">pg_stat_monitor</a>, updates to both Percona Server for MySQL and Percona XtraDB Cluster variants of Percona Distribution for MySQL, a bug fix for Percona XtraDB Cluster, and new features for Percona Backup for MongoDB.</p>\n<h2>Percona Distribution for PostgreSQL 13.0</h2>\n<p>On October 16, 2020, we released <a target=\"_blank\" href=\"https://www.percona.com/doc/postgresql/13/release-notes-v13.0.html\">Percona Distribution for PostgreSQL 13.0</a>, a collection of tools to assist you in managing PostgreSQL. This release is based on the latest major version of PostgreSQL 13.0 and also includes <a target=\"_blank\" class=\"reference external\" href=\"https://github.com/percona/pg_stat_monitor\">pg_stat_monitor</a> (Tech Preview Feature <a target=\"_blank\" id=\"id1\" class=\"footnote-reference\" href=\"https://www.percona.com/doc/postgresql/13/release-notes-v13.0.html#id4\">[1]</a>), a new statistics collection extension for PostgreSQL.</p>\n<p><a target=\"_blank\" href=\"https://www.percona.com/downloads/postgresql-distribution-13/LATEST/\">Download Percona Distribution for PostgreSQL 13.0</a></p>\n<p>&#160;</p>\n<h2>Percona Distribution for MySQL (PS and PXC Variants)</h2>\n<p>We have updated both <a target=\"_blank\" href=\"https://www.percona.com/doc/percona-distribution-mysql/8.0/release-notes-ps-v8.0.21.html\">Percona Distribution for MySQL (PS variant) 8.0.21</a> and <a target=\"_blank\" href=\"https://www.percona.com/doc/percona-distribution-mysql/8.0/release-notes-pxc-v8.0.20.upd2.html\">Percona Distribution for MySQL (PXC variant) 8.0.20</a>. Percona Distribution for MySQL is a single solution with the best and most critical enterprise components from the MySQL open source community, designed and tested to work together.  It provides two deployment variants: one is based on Percona Server for MySQL and another one is based on Percona XtraDB Cluster. This enables you to choose the MySQL deployment approach that best meets your specific needs.</p>\n<p><a target=\"_blank\" href=\"https://www.percona.com/downloads/percona-distribution-mysql-ps/LATEST/\">Download Percona Distribution for MySQL (PS variant) 8.0.21</a></p>\n<p><a target=\"_blank\" href=\"https://www.percona.com/downloads/percona-distribution-mysql-pxc/LATEST/\">Download Percona Distribution for MySQL (PXC variant) 8.0.20</a></p>\n<p>&#160;</p>\n<h2>Percona Server for MySQL 8.0.21-12</h2>\n<p>On October 13, 2020, <a target=\"_blank\" href=\"https://www.percona.com/doc/percona-server/LATEST/release-notes/Percona-Server-8.0.21-12.html\">Percona Server for MySQL 8.0.21-12</a> was released. It includes all the features available in MySQL 8.0.21 Community Edition in addition to enterprise-grade features developed by Percona. As well as bug fixes as listed in the release notes, this version offers several improvements, including making the default value of rocksdb_wal_recovery_mode compatible with InnoDB, blocking enable/disable redo log with lock tables for backup, and the introduction of crypt_schema 2 for better error checking in encryption threads.</p>\n<p><a target=\"_blank\" href=\"https://www.percona.com/downloads/Percona-Server-LATEST/\">Download Percona Server for MySQL 8.0.21-12</a></p>\n<p>&#160;</p>\n<h2>Percona XtraDB Cluster 5.6.49-28.42.3</h2>\n<p><a target=\"_blank\" href=\"https://www.percona.com/doc/percona-xtradb-cluster/5.6/release-notes/Percona-XtraDB-Cluster-5.6.49-28.42.3.html\">Percona XtraDB Cluster 5.6.49-28.42.3</a> was released on October 22, 2020. It is a free, open source, enterprise-grade solution that includes the high availability and security features your business needs to meet customer expectations and business goals. Bug fix <a target=\"_blank\" class=\"reference external\" href=\"https://jira.percona.com/browse/PXC-3456\">PXC-3456</a> allows specific characters in SST method names and SST request data.</p>\n<p><a target=\"_blank\" href=\"https://www.percona.com/downloads/Percona-XtraDB-Cluster-56/\">Download Percona XtraDB Cluster 5.6.49-28.42.3</a></p>\n<p>&#160;</p>\n<h2>Percona XtraDB Cluster 5.7.31-31-45.3</h2>\n<p>On October 22, 2020, <a target=\"_blank\" href=\"https://www.percona.com/doc/percona-xtradb-cluster/5.7/release-notes/Percona-XtraDB-Cluster-5.7.31-31-45.3.html\">Percona XtraDB Cluster 5.7.31-31-45.3</a> was released, which fixed a bug that allows for specific characters in SST method names and SST request data.</p>\n<p><a target=\"_blank\" href=\"https://www.percona.com/downloads/Percona-XtraDB-Cluster-57/\">Download Percona XtraDB Cluster 5.7.31-31-45.3</a></p>\n<p>&#160;</p>\n<h2>Percona XtraDB Cluster 8.0.20-11.3</h2>\n<p><a target=\"_blank\" href=\"https://www.percona.com/doc/percona-xtradb-cluster/8.0/release-notes/Percona-XtraDB-Cluster-8.0.20-11.3.html\">Percona XtraDB Cluster 8.0.20-11.3</a> was released on October 22, 2020. This release fixes a bug to allow specific characters in SST method names and SST request data.</p>\n<p><a target=\"_blank\" href=\"https://www.percona.com/downloads/Percona-XtraDB-Cluster-LATEST/\">Download Percona XtraDB Cluster 8.0.20-11.3</a></p>\n<p>&#160;</p>\n<h2>Percona Server for MongoDB 3.6.20-9.0</h2>\n<p><a target=\"_blank\" href=\"https://www.percona.com/doc/percona-server-for-mongodb/3.6/release_notes/3.6.20-9.0.html\">Percona Server for MongoDB 3.6.20-9.0</a> was released on October 22, 2020. It is an enhanced, open source, and highly-scalable database that is a fully-compatible, drop-in replacement for MongoDB 3.6.20 Community Edition, supporting MongoDB 3.6.20 protocols and drivers. In this release, we improved audit log performance and fixed several bugs, including when createBackup using AWS remote location fails with “EntityTooLarge” and LDAP authentication randomly fails with the “Bad parameter to an ldap routine” message in the log.</p>\n<p>Download <a target=\"_blank\" href=\"https://www.percona.com/software/mongodb/percona-server-for-mongodb\">Percona Server for MongoDB</a> 3.6.20-9.0</p>\n<p>&#160;</p>\n<h2>Percona Backup for MongoDB 1.3.2</h2>\n<p>October 14, 202 saw the release of <a target=\"_blank\" href=\"https://www.percona.com/doc/percona-backup-mongodb/release-notes/1.3.2.html\">Percona Backup for MongoDB 1.3.2</a>. It is a distributed, low-impact solution for consistent backups of MongoDB sharded clusters and replica sets. A new feature is the addition of AWS KMS key encryption/decryption for S3 buckets and improvements include the use of s2 compression as default for <code class=\"docutils literal\"><span class=\"pre\">pbm-speed-test</span></code> instead of gzip. There are also several bug fixes.</p>\n<p><a target=\"_blank\" href=\"https://www.percona.com/downloads/percona-backup-mongodb/\">Download Percona Backup for MongoDB 1.3.2</a></p>\n<p>&#160;</p>\n<h2>Percona Monitoring and Management 2.11.0</h2>\n<p>On October 14, 2020, we released <a target=\"_blank\" href=\"https://www.percona.com/doc/percona-monitoring-and-management/2.x/release-notes/2.11.0.html\">Percona Monitoring and Management 2.11.0</a>, a free and open-source platform for managing and monitoring MySQL, MongoDB, and PostgreSQL performance. This release introduces a technical preview of a new PostgreSQL extension ‘pg_stat_monitor’, as well as an update to Prometheus to v2.21.0 and Grafana plugin updates grafana-polystat-panel=1.2.2, grafana-piechart-panel=1.6.1.</p>\n<p><a target=\"_blank\" href=\"https://www.percona.com/downloads/pmm2/\">Download Percona Monitoring and Management 2.11.0</a></p>\n<p>&#160;</p>\n<h2>Percona Monitoring and Management 2.11.1</h2>\n<p>October 19, 2020, saw the release of <a target=\"_blank\" href=\"https://www.percona.com/doc/percona-monitoring-and-management/2.x/release-notes/2.11.1.html\">Percona Monitoring and Management 2.11.1</a>. This release fixes a bug that contributed to high CPU usage after update to 2.11.0.</p>\n<p><a target=\"_blank\" href=\"https://www.percona.com/downloads/pmm2/\">Download Percona Monitoring and Management 2.11.1</a></p>\n<p>&#160;</p>\n<p>That&#8217;s it for this roundup, and be sure to <a target=\"_blank\" href=\"https://twitter.com/Percona\" target=\"_blank\" rel=\"&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;noopener&#34; noopener noreferrer\">follow us on Twitter</a> to stay up-to-date on the most recent releases! Percona is a leader in providing best-of-breed enterprise-class support, consulting, managed services, training, and software for MySQL, MongoDB, PostgreSQL, MariaDB, and other open source databases in on-premises and cloud environments.</p>\n<hr />\n<p>We understand that choosing open source software for your business can be a potential minefield. You need to select the best available options, which fully support and adapt to your changing needs. Choosing the right open source software can allow you access to enterprise-level features, without the associated costs.</p>\n<p>In our white paper, we discuss the key features that make open source software attractive, and why Percona&#8217;s software might be the best option for your business.</p>\n<p style=\"text-align: center;\"><a target=\"_blank\" class=\"btn btn-primary btn-lg\" href=\"https://www.percona.com/resources/white-papers/when-percona-software-right-choice?utm_source=blog&#38;utm_medium=download&#38;utm_campaign=roundup&#38;utm_content=whitepaper\" rel=\"noopener\">Download: When is Percona Software the Right Choice?</a></p>\n","descriptionType":"html","publishedDate":"Mon, 26 Oct 2020 13:54:45 +0000","feedId":11,"bgimg":"","linkMd5":"ef7a03da544caf26d9275c0ed10e3fe6","bgimgJsdelivr":"","metaImg":"","author":"David Quilty","articleImgCdnMap":{"https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Software-Release-Oct-26-200x112.png":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn22@2020_2/2020/10/28/03-03-09-132_e8a98635f5dc479c.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Software-Release-Oct-26-300x169.png":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn6@2020_2/2020/10/28/03-03-22-651_9feac703bf3e1d09.webp"},"publishedOrCreatedDate":1603854187183},{"createdTime":"2020-10-28 11:03:07","updatedTime":"2020-10-28 11:03:07","title":"Using Volume Snapshot/Clone in Kubernetes","link":"https://www.percona.com/blog/?p=72169","description":"<img width=\"200\" height=\"112\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Volume-snapshot-and-clone-Kubernetes-200x112.png\" class=\"webfeedsFeaturedVisual wp-post-image\" alt=\"Volume snapshot and clone Kubernetes\" loading=\"lazy\" style=\"display: block; margin-bottom: 5px; clear:both;max-width: 100%;\" link_thumbnail=\"\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Volume-snapshot-and-clone-Kubernetes-200x112.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/Volume-snapshot-and-clone-Kubernetes-300x168.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/Volume-snapshot-and-clone-Kubernetes-1024x572.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/10/Volume-snapshot-and-clone-Kubernetes-367x205.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/10/Volume-snapshot-and-clone-Kubernetes.png 1200w\" sizes=\"(max-width: 200px) 100vw, 200px\" /><p><img loading=\"lazy\" class=\"alignright size-medium wp-image-72201\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Volume-snapshot-and-clone-Kubernetes-300x168.png\" alt=\"Volume snapshot and clone Kubernetes\" width=\"300\" height=\"168\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Volume-snapshot-and-clone-Kubernetes-300x168.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/Volume-snapshot-and-clone-Kubernetes-1024x572.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/10/Volume-snapshot-and-clone-Kubernetes-200x112.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/Volume-snapshot-and-clone-Kubernetes-367x205.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/10/Volume-snapshot-and-clone-Kubernetes.png 1200w\" sizes=\"(max-width: 300px) 100vw, 300px\" />One of the most exciting storage-related features in Kubernetes is Volume snapshot and clone. It allows you to take a snapshot of data volume and later to clone into a new volume, which opens a variety of possibilities like instant backups or testing upgrades. This feature also brings Kubernetes deployments close to cloud providers, which allow you to get volume snapshots with one click.</p>\n<p><strong>Word of caution</strong>: for the database, it still might be required to apply fsfreeze and FLUSH TABLES WITH READ LOCK or <pre class=\"crayon-plain-tag\">LOCK BINLOG FOR BACKUP</pre>.</p>\n<blockquote><p>It is much easier in MySQL 8 now, because as with atomic DDL, MySQL 8 should provide crash-safe consistent snapshots without additional locking.</p></blockquote>\n<p><span>Let’s review how we can use this feature with <a target=\"_blank\" href=\"https://cloud.google.com/kubernetes-engine\">Google Cloud Kubernetes Engine</a> and <a target=\"_blank\" href=\"https://www.percona.com/doc/kubernetes-operator-for-pxc/index.html\">Percona Kubernetes Operator for XtraDB Cluster</a>.</span></p>\n<p>First, the snapshot feature is still beta, so it is not available by default. You need to use GKE version 1.14 or later and you need to have the following enabled in your GKE: <a target=\"_blank\" href=\"https://cloud.google.com/kubernetes-engine/docs/how-to/persistent-volumes/gce-pd-csi-driver#enabling_on_a_new_cluster\">https://cloud.google.com/kubernetes-engine/docs/how-to/persistent-volumes/gce-pd-csi-driver#enabling_on_a_new_cluster</a>.</p>\n<p>It is done by enabling “Compute Engine persistent disk CSI Driver“.</p>\n<p>Now we need to create a Cluster using storageClassName: standard-rwo for PersistentVolumeClaims. So the relevant part in the resource definition looks like this:</p><pre class=\"crayon-plain-tag\">persistentVolumeClaim:\n        storageClassName: standard-rwo\n        accessModes: [ \"ReadWriteOnce\" ]\n        resources:\n          requests:\n            storage: 11Gi</pre><p>Let’s assume we have cluster1 running:</p><pre class=\"crayon-plain-tag\">NAME                                               READY   STATUS    RESTARTS   AGE\ncluster1-haproxy-0                                 2/2     Running   0          49m\ncluster1-haproxy-1                                 2/2     Running   0          48m\ncluster1-haproxy-2                                 2/2     Running   0          48m\ncluster1-pxc-0                                     1/1     Running   0          50m\ncluster1-pxc-1                                     1/1     Running   0          48m\ncluster1-pxc-2                                     1/1     Running   0          47m\npercona-xtradb-cluster-operator-79d786dcfb-btkw2   1/1     Running   0          5h34m</pre><p>And we want to clone a cluster into a new cluster, provisioning with the same dataset. Of course, it can be done using backup into a new volume, but snapshot and clone allow for achieving this much easier. There are still some additional required steps, I will list them as a Cheat Sheet.</p>\n<p><strong>1. Create VolumeSnapshotClass</strong> (<em>I am not sure why this one is not present by default</em>)</p><pre class=\"crayon-plain-tag\">apiVersion: snapshot.storage.k8s.io/v1beta1\nkind: VolumeSnapshotClass\nmetadata:\n        name: onesc\ndriver: pd.csi.storage.gke.io\ndeletionPolicy: Delete</pre><p><strong>2. Create snapshot</strong></p><pre class=\"crayon-plain-tag\">apiVersion: snapshot.storage.k8s.io/v1beta1\nkind: VolumeSnapshot\nmetadata:\n  name: snapshot-for-newcluster\nspec:\n  volumeSnapshotClassName: onesc\n  source:\n    persistentVolumeClaimName: datadir-cluster1-pxc-0</pre><p><strong>3. Clone into a new volume</strong></p>\n<p>Here I should note that we need to use the following as volume name convention used by Percona XtraDB Cluster Operator, it is:</p><pre class=\"crayon-plain-tag\">datadir-&#60;CLUSTERNAME&#62;-pxc-0</pre><p>Where CLUSTERNAME is the name used when we create clusters. So now we can clone snapshot into a volume:</p><pre class=\"crayon-plain-tag\">datadir-newcluster-pxc-0</pre><p>Where newcluster is the name of the new cluster.</p><pre class=\"crayon-plain-tag\">apiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: datadir-newcluster-pxc-0\nspec:\n  dataSource:\n    name: snapshot-for-newcluster\n    kind: VolumeSnapshot\n    apiGroup: snapshot.storage.k8s.io\n  storageClassName: standard-rwo\n  accessModes:\n    - ReadWriteOnce\n  resources:\n    requests:\n      storage: 11Gi</pre><p><strong>Important</strong>: the volume spec in storageClassName and accessModes and storage size should match the original volume.</p>\n<p>After volume claim created, now we can start newcluster, however, there is still a caveat; we need to use:</p><pre class=\"crayon-plain-tag\">forceUnsafeBootstrap: true</pre><p>Because otherwise, <a target=\"_blank\" href=\"https://www.percona.com/software/mysql-database/percona-xtradb-cluster\">Percona XtraDB Cluster</a> will think the data from the snapshot was not after clean shutdown (which is true) and will refuse to start.</p>\n<p>There is still some limitation to this approach, which you may find inconvenient: the volume can be cloned in only the same namespace, so it can’t be easily transferred from the PRODUCTION namespace into the QA namespace.</p>\n<p>Though it still can be done but will require some extra steps and admin Kubernetes privileges, I will show how in the following blog posts.</p>\n","descriptionType":"html","publishedDate":"Thu, 22 Oct 2020 17:36:01 +0000","feedId":11,"bgimg":"","linkMd5":"0a9c11b331192491d308b55651350ad5","bgimgJsdelivr":"","metaImg":"","author":"Vadim Tkachenko","articleImgCdnMap":{"https://www.percona.com/blog/wp-content/uploads/2020/10/Volume-snapshot-and-clone-Kubernetes-200x112.png":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn83@2020_6/2020/10/28/03-03-14-201_590620f7bc2a8b99.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/Volume-snapshot-and-clone-Kubernetes-300x168.png":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn62@2020_2/2020/10/28/03-03-27-763_85f4a0c2708c70e0.webp"},"publishedOrCreatedDate":1603854187179},{"createdTime":"2020-10-28 11:03:07","updatedTime":"2020-10-28 11:03:07","title":"Community Contributors Invited to Update Percona Monitoring and Management Documentation","link":"https://www.percona.com/blog/?p=72212","description":"<img width=\"200\" height=\"112\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Monitoring-and-Management-Documentation-200x112.png\" class=\"webfeedsFeaturedVisual wp-post-image\" alt=\"Percona Monitoring and Management Documentation\" loading=\"lazy\" style=\"display: block; margin-bottom: 5px; clear:both;max-width: 100%;\" link_thumbnail=\"\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Monitoring-and-Management-Documentation-200x112.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Monitoring-and-Management-Documentation-300x168.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Monitoring-and-Management-Documentation-1024x572.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Monitoring-and-Management-Documentation-367x205.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Monitoring-and-Management-Documentation.png 1200w\" sizes=\"(max-width: 200px) 100vw, 200px\" /><p><img loading=\"lazy\" class=\"alignright size-medium wp-image-72266\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Monitoring-and-Management-Documentation-300x168.png\" alt=\"Percona Monitoring and Management Documentation\" width=\"300\" height=\"168\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Monitoring-and-Management-Documentation-300x168.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Monitoring-and-Management-Documentation-1024x572.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Monitoring-and-Management-Documentation-200x112.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Monitoring-and-Management-Documentation-367x205.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Monitoring-and-Management-Documentation.png 1200w\" sizes=\"(max-width: 300px) 100vw, 300px\" />Percona is making changes in its documentation processes for Percona Monitoring and Management (PMM) to make it easier and more welcoming for community members to contribute to our documentation.</p>\n<p><a target=\"_blank\" href=\"https://www.percona.com/software/database-tools/percona-monitoring-and-management\">Percona Monitoring and Management</a> (PMM) is a free, open-source database monitoring tool. It ‘mind-melds’ with your MySQL, MongoDB, or PostgreSQL servers and tells you what’s going on inside; what queries are draining resources, and why.</p>\n<p><a target=\"_blank\" href=\"https://www.percona.com/doc/percona-monitoring-and-management/2.x/index.html\">PMM’s technical documentation</a> is good. But, with your help, we want to make it better. Here’s what we’ve got planned for it.</p>\n<ul>\n<li>a move from <a target=\"_blank\" href=\"https://docutils.sourceforge.io/docs/user/rst/quickstart.html\">reStructuredText</a> to <a target=\"_blank\" href=\"https://daringfireball.net/projects/markdown/\">Markdown</a>, making it easier for anyone to contribute;</li>\n<li>a complete reorganization of sections, to make them more logical and consistent;</li>\n<li>more ways to navigate the documentation (search, content maps, topic directories);</li>\n<li>more examples and screenshots better suited to your use-cases;</li>\n<li>regular ‘test-drives’ of our documentation, to make sure it’s technically correct and up-to-date;</li>\n<li>more visual elements, to help you understand and navigate the content;</li>\n<li>a (gradual) rewording and reformatting of everything, to make it easier (and, who knows? more fun) to read.</li>\n</ul>\n<h2 id=\"whychange\">Why Change?</h2>\n<p>The PMM team writes great software, but we don’t use it the way you do.</p>\n<p>We want PMM’s documentation to be as open as its code, and to encourage contributions to improve the quality and usability of the information. In effect, we want all our users to be PMM technical writers. (It’s one of the motivations for moving to Markdown: to encourage more community contributions.)</p>\n<p>To see for yourselves, take a look at our <a target=\"_blank\" href=\"https://github.com/percona/pmm-doc\">PMM Documentation</a> GitHub repository, or click the <em>Edit this page</em> link anywhere in the PMM2 documentation site to jump to the Markdown source file for that page. (But you can still use <a target=\"_blank\" href=\"https://jira.percona.com/projects/PMM\">Jira</a> to suggest changes or improvements.)</p>\n<h2 id=\"whatwillchange\">What Will Change?</h2>\n<p>The PMM technical documentation website is static HTML created by <a target=\"_blank\" href=\"https://www.sphinx-doc.org/\">Sphinx</a> and reStructuredText. These are great tools for technical writers, less so for developers and users.</p>\n<p>We converted our documentation to Markdown because it’s a cleaner syntax, it’s easier to learn, and the files look good when seen in GitHub. There’s also a wider variety of tools for converting Markdown into HTML.</p>\n<p>Behind the scenes, we’ll switch to using MkDocs to convert the Markdown files into HTML. At first, the new site will have the same look and feel, the same section names, and the same page URLs.</p>\n<p><strong><em>Rest assured, the content stays the same!</em></strong> (At least for now.)</p>\n<p>There will be some subtle changes to the navigation bars—MkDocs treats sections differently—but only the most loyal, avid and eagle-eyed readers should notice.</p>\n<p>We’ll try to preserve your favorite bookmarks, and help you reorient yourself to the new section layout when it comes. But some links will change—the web wasn’t written in stone.</p>\n<h3 id=\"summary\">Summary</h3>\n<p>The documentation for PMM 2 evolved from that for PMM 1. Its structure (the sections and their order) has grown organically over time, not always in the most logical way.</p>\n<p>What’s we have now is not the best way to explain PMM 2 and its potential, nor will it accommodate the new exciting product features coming down the line.</p>\n<p>We’re working on changes. (We’d love your help.)</p>\n","descriptionType":"html","publishedDate":"Mon, 26 Oct 2020 18:20:38 +0000","feedId":11,"bgimg":"","linkMd5":"517f7b4d3c7d9a3cfc267ab72ad3675e","bgimgJsdelivr":"","metaImg":"","author":"Paul Jacobs","articleImgCdnMap":{"https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Monitoring-and-Management-Documentation-200x112.png":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn73@2020_5/2020/10/28/03-03-15-952_7cb7b959def10845.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Monitoring-and-Management-Documentation-300x168.png":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn54@2020_6/2020/10/28/03-03-26-477_a9fbcea0432e3507.webp"},"publishedOrCreatedDate":1603854187179},{"createdTime":"2020-10-28 11:03:07","updatedTime":"2020-10-28 11:03:07","title":"Annotations Provide Context to Timelines in Percona Monitoring and Management","link":"https://www.percona.com/blog/?p=71772","description":"<img width=\"200\" height=\"112\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Annotations-Percona-Monitoring-and-Management-200x112.png\" class=\"webfeedsFeaturedVisual wp-post-image\" alt=\"Annotations Percona Monitoring and Management\" loading=\"lazy\" style=\"display: block; margin-bottom: 5px; clear:both;max-width: 100%;\" link_thumbnail=\"\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Annotations-Percona-Monitoring-and-Management-200x112.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/Annotations-Percona-Monitoring-and-Management-300x168.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/Annotations-Percona-Monitoring-and-Management-1024x572.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/10/Annotations-Percona-Monitoring-and-Management-367x205.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/10/Annotations-Percona-Monitoring-and-Management.png 1200w\" sizes=\"(max-width: 200px) 100vw, 200px\" /><p><span style=\"font-size: 12px;\"><strong>About the Author</strong> &#8211; </span><span style=\"font-size: 12px;\">This blog was written as a collaboration with my colleague Jiri Ctvrtka.  Jiri is a senior software developer from Brno, Czech Republic, and has been partnering with Percona for almost a year working on various components of our Percona Platform. He’s been programming in Go since 2015 and Jiri’s got a passion for simplicity, speed, and precision of data and has focused that passion on understanding impacts of changes and reimagined the Percona Monitoring and Management (PMM) Annotations functionality.</span></p>\n<p><strong><em>&#8220;Does anyone remember what caused this large spike last Thursday at 2:24 am?&#8221;</em></strong></p>\n<h2><img loading=\"lazy\" class=\"alignright size-medium wp-image-72167\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Annotations-Percona-Monitoring-and-Management-300x168.png\" alt=\"Annotations Percona Monitoring and Management\" width=\"300\" height=\"168\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Annotations-Percona-Monitoring-and-Management-300x168.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/Annotations-Percona-Monitoring-and-Management-1024x572.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/10/Annotations-Percona-Monitoring-and-Management-200x112.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/Annotations-Percona-Monitoring-and-Management-367x205.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/10/Annotations-Percona-Monitoring-and-Management.png 1200w\" sizes=\"(max-width: 300px) 100vw, 300px\" />What are Annotations?</h2>\n<p>Annotations are a way to provide context to timelines in <a target=\"_blank\" href=\"https://www.percona.com/software/database-tools/percona-monitoring-and-management\">Percona Monitoring and Management</a> (PMM). For example, in bigger teams, it is a good way to inform others about an event, or important changes that may have occurred. It can contain any kind of information but we see it most commonly used for indicating there was an outage, maintenance window start/end, deployment of new code, security event, etc.  Annotations in PMM help provide quick explanations to peaks and valleys in graphs or indicate when something took place on the timeline and create correlations.</p>\n<p>&#160;</p>\n<div id=\"attachment_72194\" style=\"width: 568px\" class=\"wp-caption aligncenter\"><img aria-describedby=\"caption-attachment-72194\" loading=\"lazy\" class=\"size-full wp-image-72194\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-22-at-1.09.05-PM.png\" alt=\"\" width=\"558\" height=\"364\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-22-at-1.09.05-PM.png 558w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-22-at-1.09.05-PM-300x196.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-22-at-1.09.05-PM-200x130.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-22-at-1.09.05-PM-367x239.png 367w\" sizes=\"(max-width: 558px) 100vw, 558px\" /><p id=\"caption-attachment-72194\" class=\"wp-caption-text\">An example of annotations automatically added at the beginning and end of a benchmark test.</p></div>\n<p>Every annotation can be shown/hidden by a simple toggle button presented in the filter options. So you don’t need to be worried about crowded charts of annotations. You can toggle on/off and zoom in or out around events to get better detail.</p>\n<div id=\"attachment_72162\" style=\"width: 341px\" class=\"wp-caption aligncenter\"><img aria-describedby=\"caption-attachment-72162\" loading=\"lazy\" class=\"wp-image-72162 size-full\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/AnnotationsToggle.png\" alt=\"\" width=\"331\" height=\"70\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/AnnotationsToggle.png 331w, https://www.percona.com/blog/wp-content/uploads/2020/10/AnnotationsToggle-300x63.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/AnnotationsToggle-200x42.png 200w\" sizes=\"(max-width: 331px) 100vw, 331px\" /><p id=\"caption-attachment-72162\" class=\"wp-caption-text\">Filter contains a toggle button to turn on/off the visibility of annotations.</p></div>\n<h2>How Can I Add Annotations?</h2>\n<p>Annotations can simply be added by the pmm-admin option: annotate. So, let&#8217;s try it:</p><pre class=\"crayon-plain-tag\">pmm-admin annotate “Deployed web version 2.4.6“</pre><p>That command will place an annotation on every chart in every node and service&#8230;maybe more than you need. What if you only needed to add an annotation for a specific node or service to indicate a broad network outage? Or add specific annotations for specific nodes or services to indicate a software update was applied? This is all possible as pmm-admin provides four flags, which can be used for just this purpose.</p><pre class=\"crayon-plain-tag\">--node = annotate the node the pmm-admin command was run on\n--node-name = annotate node with specified name\n--service = annotate all services running on the node the pmm-admin command was run on\n--service-name = annotate service with specified name</pre><p>All these flags can be combined together for options to annotate more nodes or services by just only one command. The order of flags doesn&#8217;t matter. Just imagine how many combinations you have!  Even better, imagine how easily this can be integrated into our CI/CD or deploy pipelines!</p>\n<p>You can also add annotations via the API with curl commands:</p><pre class=\"crayon-plain-tag\">curl 'http://admin:admin@localhost/graph/api/annotations' -H 'Content-Type: application/json;charset=UTF-8' --data-binary '{\"tags\": <b>ARRAY OF TAGS</b>,\"text\":\"<b>TEXT</b>\"}'</pre><p><strong>ARRAY OF TAGS</strong> = Names of node or service, like for node pmm-server and service pmm-server-mysql it will be &#8220;tags: [&#8220;pmm-server&#8221;, &#8220;pmm-server-mysql&#8221;]&#8221;</p>\n<h3>Some Examples for Better Understanding</h3>\n<p><strong>Case 1</strong>: We have a DB node we need to take offline for maintenance and want to capture this on all its graphs to explain the gap in reporting data.</p><pre class=\"crayon-plain-tag\">pmm-admin annotate \"`date` - System is going down for Maintenance - RFC-2232-2020\" --node-name=”db1002”</pre><p>via API:</p><pre class=\"crayon-plain-tag\">curl 'http://admin:admin@localhost/graph/api/annotations' -H 'Content-Type: application/json;charset=UTF-8' --data-binary '{\"tags\": [\"db1002\"],\"text\":\"`date` - System is going down for Maintenance - RFC-2232-2020\"}'</pre><p>or if pmm-admin is running on this node then you don&#8217;t even need to know the name of this node and can set it as part of the shutdown routine.</p><pre class=\"crayon-plain-tag\">pmm-admin annotate \"`date` - System is being shut down/rebooted\"</pre><p><strong>Case 2:</strong> We have node pmm-server and three services running on the current node (mysql, postgres, mongo). So, yeah, it&#8217;s simple right?</p><pre class=\"crayon-plain-tag\">pmm-admin annotate “`date` - Apply configuration change - RFC-1009-2020“ –service-name=mysql\npmm-admin annotate “Restarting Postgres to apply security patch - “ –service-name=postgres\npmm-admin annotate “`date` - Service Disruption Reported via Support - SUP-239“ –service-name=mongo</pre><p>via API:</p><pre class=\"crayon-plain-tag\">curl 'http://admin:admin@localhost/graph/api/annotations' -H 'Content-Type: application/json;charset=UTF-8' --data-binary '{\"tags\": [\"mysql\", \"postgresl\", \"mongo\"],\"text\":\"`date` - Apply configuration change - RFC-1009-2020\"}'</pre><p>Or you can do it in one command:</p><pre class=\"crayon-plain-tag\">pmm-admin annotate “Services Recycled to pickup config changes“ –service</pre><p>And that&#8217;s it!  All services found running on that node will be annotated.</p>\n<p><strong>Case 3</strong>: We have node “registrationDb” and many services running on the current node. What if we want to annotate that node and also every service running on this node by just one command? Again, no problem:</p><pre class=\"crayon-plain-tag\">pmm-admin annotate “`date` - Security alerted to possible event“ –node-name=registrationDb --service</pre><p>via API:</p><pre class=\"crayon-plain-tag\">curl 'http://admin:admin@localhost/graph/api/annotations' -H 'Content-Type: application/json;charset=UTF-8' --data-binary '{\"tags\": [\"registrationDb\", \"service1\", \"service2\",...*],\"text\":\"`date` - Security alerted to possible event\"}'</pre><p>* while the PMM admin command &#8211;service flag will add to all services, you need to add all services names of the current node to get the same result using the API but you can make an API call to get all services on a given node</p>\n<p>That&#8217;s it, no matter how many services you are running on node registrationDb the annotations will be presented on all of them and on node graphs as well.</p>\n<p><strong>Case 4</strong>: We have 100 services running on the current node and also another node named pmm-server2 and we need to annotate all 100 services on the current node (but not the current node) along with node pmm-server2.  Simple:</p><pre class=\"crayon-plain-tag\">pmm-admin annotate “`date` - Load Test Start“ –node-name=pmm-server2 --service</pre><p>via API:</p><pre class=\"crayon-plain-tag\">curl 'http://admin:admin@localhost/graph/api/annotations' -H 'Content-Type: application/json;charset=UTF-8' --data-binary '{\"tags\": [\"pmm-server2\", \"service1\", \"service2\",...*],\"text\":\"`date` - Load Test - Increasing to 100 threads\"}'</pre><p>* while the PMM admin command &#8211;service flag will add to all services, you need to add all services names of the current node to get the same result using the API but you can make an API call to get all services on a given node</p>\n<p>The current node will not be annotated, but every service on this node will be along with node pmm-server2.</p>\n<p>Here’s a little guide to see many of the possible combinations of flags and what will result:</p>\n<p><b>&#8211;node</b> = current node<br />\n<b>&#8211;node-name</b> = node with name<br />\n<b>&#8211;node &#8211;node-name</b> = current node and node with name<br />\n<b>&#8211;node &#8211;service-name</b> = current node and service with name<br />\n<b>&#8211;node &#8211;node-name &#8211;service-name</b> = current node, node with name, and service with name<br />\n<b>&#8211;node &#8211;service</b> = current node and all services of current node<br />\n<b>&#8211;node-name &#8211;service</b> = all services of current node, node with name<br />\n<b>&#8211;node &#8211;node-name &#8211;service</b> = all services of current node, node with name, and current node<br />\n<b>&#8211;service</b> = all services of current node<br />\n<b>&#8211;service-name</b> = service with name<br />\n<b>&#8211;service &#8211;service-name</b> = all services of current node, service with name<br />\n<b>&#8211;service &#8211;node-name</b> = all services of current node and node with name<br />\n<b>&#8211;service-name &#8211;node-name</b> = service with name and node with name<br />\n<b>&#8211;service &#8211;service-name &#8211;node-name</b> = service with name, all services on current node, and node with name</p>\n<p>So thanks to annotations, correlating events on your servers is now easier than ever.  We’d love to hear or even see how you’re using annotations to make your life easier, hopefully, we&#8217;ve given you some ideas to get started right away!</p>\n<p style=\"text-align: center;\"><a target=\"_blank\" href=\"https://www.percona.com/software/database-tools/percona-monitoring-and-management\">Download Percona Monitoring and Management Today</a></p>\n","descriptionType":"html","publishedDate":"Thu, 22 Oct 2020 13:02:19 +0000","feedId":11,"bgimg":"","linkMd5":"fbc096ce5c6e4afa275647f97eec87da","bgimgJsdelivr":"","metaImg":"","author":"Steve Hoffman","articleImgCdnMap":{"https://www.percona.com/blog/wp-content/uploads/2020/10/Annotations-Percona-Monitoring-and-Management-200x112.png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn11@2020_2/2020/10/28/03-03-26-363_fc01552aca5484c4.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/Annotations-Percona-Monitoring-and-Management-300x168.png":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn23@2020_4/2020/10/28/03-03-18-277_cd7c064567ab975e.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-22-at-1.09.05-PM.png":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn9@2020_2/2020/10/28/03-03-24-564_57291f42613c87db.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/AnnotationsToggle.png":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn14@2020_3/2020/10/28/03-03-08-033_10d5cbc337d7c251.webp"},"publishedOrCreatedDate":1603854187179},{"createdTime":"2020-10-28 11:03:07","updatedTime":"2020-10-28 11:03:07","title":"MySQL New Releases and Percona XtraBackup Incompatibilities","link":"https://www.percona.com/blog/?p=72177","description":"<img width=\"200\" height=\"105\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/MySQL-Percona-Backup-Incompatibilities-200x105.png\" class=\"webfeedsFeaturedVisual wp-post-image\" alt=\"MySQL Percona Backup Incompatibilities\" loading=\"lazy\" style=\"display: block; margin-bottom: 5px; clear:both;max-width: 100%;\" link_thumbnail=\"\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/MySQL-Percona-Backup-Incompatibilities-200x105.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/MySQL-Percona-Backup-Incompatibilities-300x157.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/MySQL-Percona-Backup-Incompatibilities-1024x536.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/10/MySQL-Percona-Backup-Incompatibilities-1140x595.png 1140w, https://www.percona.com/blog/wp-content/uploads/2020/10/MySQL-Percona-Backup-Incompatibilities-367x192.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/10/MySQL-Percona-Backup-Incompatibilities.png 1200w\" sizes=\"(max-width: 200px) 100vw, 200px\" /><p><img loading=\"lazy\" class=\"alignright size-medium wp-image-72203\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/MySQL-Percona-Backup-Incompatibilities-300x157.png\" alt=\"MySQL Percona Backup Incompatibilities\" width=\"300\" height=\"157\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/MySQL-Percona-Backup-Incompatibilities-300x157.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/MySQL-Percona-Backup-Incompatibilities-1024x536.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/10/MySQL-Percona-Backup-Incompatibilities-200x105.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/MySQL-Percona-Backup-Incompatibilities-1140x595.png 1140w, https://www.percona.com/blog/wp-content/uploads/2020/10/MySQL-Percona-Backup-Incompatibilities-367x192.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/10/MySQL-Percona-Backup-Incompatibilities.png 1200w\" sizes=\"(max-width: 300px) 100vw, 300px\" />Earlier this week, Oracle released their Q4 releases series. As on the previous releases, backward compatibility has been broken with previous versions of the server. This time on both MySQL 5.7 and 8.0:</p>\n<h2>MySQL 5.7.32</h2>\n<p>While our QA team was performing an extensive test on it,  we found out this version introduced a new compression format version. This change breaks backward compatibility with older versions of MySQL, which is expected on the 8.0 series but is not on 5.7. As <a target=\"_blank\" href=\"https://www.percona.com/software/mysql-database/percona-xtrabackup\">Percona XtraBackup</a> (PXB) is based on MySQL code, it makes MySQL 5.7.32 incompatible with current versions of Percona XtraBackup 2.4.20 and prior.</p>\n<p>The issue does not affect only Percona XtraBackup but also prevents users from downgrading the server from 5.7.32 to any lower version on the 5.7 series &#8211; More details at <a target=\"_blank\" href=\"https://bugs.mysql.com/bug.php?id=101266.\">https://bugs.mysql.com/bug.php?id=101266.</a></p>\n<p>In summary, if you have tables with compression flag as below:</p><pre class=\"crayon-plain-tag\">CREATE TABLE t1 (c1 INT) COMPRESSION=\"zlib\";</pre><p>The issue will manifest if a user using 5.7.32:</p>\n<ul>\n<li>Creates a new compressed table.</li>\n<li>Runs any ALTER TABLE  that uses the algorithm copy (table rebuild) on a compressed table.</li>\n</ul>\n<p><strong>At this moment, we advise users using compressed tables to hold the upgrade to 5.7.32.</strong></p>\n<p>We are currently working on making Percona XtraBackup 2.4.21 fully compatible with 5.7.32.</p>\n<h2>MySQL 8.0.22</h2>\n<p>Percona XtraBackup 8.0.14 (the latest version available) is not compatible with MySQL 8.0.22 due to disk format changes introduced in the 8.0.22 release.</p>\n<p><em><a target=\"_blank\" href=\"https://dev.mysql.com/worklog/task/?id=13782\">WL#13782</a>: InnoDB: Add dynamic config option to use fallocate() on Linux</em> introduced a new redo log record MLOG_FILE_EXTEND which is written on the file extension and doesn’t depend on &#8211;innodb-extend-and-initialize option. Unfortunately this time, the redo log format version is not bumped up. Percona XtraBackup 8.0.14 during backup, cannot parse this new redo log record and so backup fails.</p>\n<p>If by chance, MLOG_FILE_EXTEND is checkpointed, PXB during backup doesn’t see this new record. This leads to a misleading successful backup that cannot be prepared. Let&#8217;s see why.</p>\n<p><em><a target=\"_blank\" href=\"https://github.com/mysql/mysql-server/commit/d23f1d858e4db14c112dae8a9c963942ad7d02c1\">Bug#31587625</a>: PERFORMANCE DEGRADATION AFTER WL14073</em><br />\nThis bug fix in 8.0.22, increased the DD version to 8022. PXB during prepare, de-serializes the SDI from IBD file to bootstrap dictionary. Due to the higher DD_VERSION in SDI, PXB 8.0.14 cannot deserialize the SDI and prepare fails.</p>\n<p><strong>At this moment, we advise all users to hold the upgrade to 8.0.22.</strong></p>\n<p>We are working on these incompatible issues, look out for an upcoming release of PXB release to take successful, consistent backups of 8.0.22</p>\n","descriptionType":"html","publishedDate":"Fri, 23 Oct 2020 15:43:24 +0000","feedId":11,"bgimg":"","linkMd5":"0d9f461223523e12b1e4d04cd87043a4","bgimgJsdelivr":"","metaImg":"","author":"Marcelo Altmann","articleImgCdnMap":{"https://www.percona.com/blog/wp-content/uploads/2020/10/MySQL-Percona-Backup-Incompatibilities-200x105.png":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn50@2020_3/2020/10/28/03-03-26-108_209cf8c5267c8693.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/MySQL-Percona-Backup-Incompatibilities-300x157.png":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn91@2020_1/2020/10/28/03-03-34-122_4f294fe39c3973b9.webp"},"publishedOrCreatedDate":1603854187183}],"record":{"createdTime":"2020-10-28 11:03:07","updatedTime":"2020-10-28 11:03:07","feedId":11,"fetchDate":"Wed, 28 Oct 2020 03:03:07 +0000","fetchMs":730,"handleMs":798,"totalMs":30181,"newArticles":0,"totalArticles":40,"status":1,"type":0,"ip":"109185facf80dc2fd96f0699ce74a6de","hostName":"europe-58*","requestId":"21a6a4c68ca945b19849609386515049_11","contentType":"application/rss+xml; charset=UTF-8","totalBytes":261004,"bgimgsTotal":0,"bgimgsGithubTotal":0,"articlesImgsTotal":25,"articlesImgsGithubTotal":25,"successGithubMap":{"myreaderx14":1,"myreaderx8":1,"myreaderx15":1,"myreaderx7":1,"myreaderx16":1,"myreaderx6":1,"myreaderx4":1,"myreaderx10":1,"myreaderx33":1,"myreaderx11":1,"myreaderx3":1,"myreaderx2":1,"myreaderx1":1,"myreaderx13":1,"myreaderx30":1,"myreaderx31":1,"myreaderx18":1,"myreaderx19":1,"myreaderx":1,"myreaderx25":1,"myreaderx21":1,"myreaderx23":1,"myreaderx24":1,"myreaderx5oss":1,"myreaderx29":1},"failGithubMap":{}},"feed":{"createdTime":"2020-05-30 17:21:38","updatedTime":"2020-09-01 09:23:03","id":11,"name":"Percona Database Performance Blog","url":"https://www.percona.com/blog/feed/","subscriber":null,"website":null,"icon":"https://www.percona.com/blog/wp-content/uploads/2018/09/percona-32x32.png","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx63/cdn89@2020_6/2020/09/01/01-23-01-358_b72bb3b39c378fe6.png","description":"","weekly":null,"link":null},"noPictureArticleList":[],"tmpCommonImgCdnBytes":0,"tmpBodyImgCdnBytes":261004,"tmpBgImgCdnBytes":0,"extra4":{"start":1603854185343,"total":0,"statList":[{"spend":1048,"msg":"获取xml内容"},{"spend":799,"msg":"解释文章"},{"spend":3,"msg":"上传封面图到cdn"},{"spend":2,"msg":"修正封面图上传失败重新上传"},{"spend":28215,"msg":"正文链接上传到cdn"}]},"extra5":25,"extra6":25,"extra7ImgCdnFailResultVector":[],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://europe-56.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://europe65.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe68.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-55.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe63.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-034.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-028.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe61.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-035.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-60.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-011.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-25.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-017.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe62.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe64.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-57.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-59.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe67.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-023.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-016.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-029.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-040.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-012.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/AnnotationsToggle.png","sourceStatusCode":200,"destWidth":331,"destHeight":70,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn14@2020_3/2020/10/28/03-03-08-033_10d5cbc337d7c251.webp","sourceBytes":8483,"destBytes":2168,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1728,"convertSpendMs":9,"createdTime":"2020-10-28 11:03:07","host":"europe-60*","referer":"https://www.percona.com/blog/?p=71772","linkMd5ListStr":"fbc096ce5c6e4afa275647f97eec87da","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"8.3 KB","destSize":"2.1 KB","compressRate":"25.6%"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/Capacity_setting_serverless.png","sourceStatusCode":200,"destWidth":761,"destHeight":243,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn19@2020_2/2020/10/28/03-03-08-127_92b4d236645b2ea3.webp","sourceBytes":21537,"destBytes":13198,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1908,"convertSpendMs":12,"createdTime":"2020-10-28 11:03:07","host":"europe64*","referer":"https://www.percona.com/blog/?p=71612","linkMd5ListStr":"a4ca489826c03a3e726a3671f2c09f1e","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"21 KB","destSize":"12.9 KB","compressRate":"61.3%"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/sb_load_serverless-1024x572.png","sourceStatusCode":200,"destWidth":1024,"destHeight":572,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn16@2020_4/2020/10/28/03-03-08-265_cffc0deb56e7d1dc.webp","sourceBytes":190067,"destBytes":47328,"targetWebpQuality":75,"feedId":11,"totalSpendMs":2344,"convertSpendMs":37,"createdTime":"2020-10-28 11:03:07","host":"europe65*","referer":"https://www.percona.com/blog/?p=71612","linkMd5ListStr":"a4ca489826c03a3e726a3671f2c09f1e","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"185.6 KB","destSize":"46.2 KB","compressRate":"24.9%"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/Amazon-Aurora-Serverless-200x112.png","sourceStatusCode":200,"destWidth":200,"destHeight":112,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn45@2020_2/2020/10/28/03-03-08-263_9a065aaa7d233960.webp","sourceBytes":16804,"destBytes":4472,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1799,"convertSpendMs":28,"createdTime":"2020-10-28 11:03:07","host":"us-029*","referer":"https://www.percona.com/blog/?p=71612","linkMd5ListStr":"a4ca489826c03a3e726a3671f2c09f1e","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"16.4 KB","destSize":"4.4 KB","compressRate":"26.6%"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Software-Release-Oct-26-200x112.png","sourceStatusCode":200,"destWidth":200,"destHeight":112,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn22@2020_2/2020/10/28/03-03-09-132_e8a98635f5dc479c.webp","sourceBytes":42447,"destBytes":5132,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1892,"convertSpendMs":7,"createdTime":"2020-10-28 11:03:08","host":"europe62*","referer":"https://www.percona.com/blog/?p=72007","linkMd5ListStr":"ef7a03da544caf26d9275c0ed10e3fe6","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"41.5 KB","destSize":"5 KB","compressRate":"12.1%"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/MySQL-8.0.22-Asynchronous-Replication-Automatic-Connection-200x105.png","sourceStatusCode":200,"destWidth":200,"destHeight":105,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn56@2020_5/2020/10/28/03-03-09-965_39e0f008bd9e83a8.webp","sourceBytes":16618,"destBytes":5324,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1691,"convertSpendMs":7,"createdTime":"2020-10-28 11:03:09","host":"europe67*","referer":"https://www.percona.com/blog/?p=72175","linkMd5ListStr":"928f438a60c8ef59f361f73f3cbfbd94","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"16.2 KB","destSize":"5.2 KB","compressRate":"32%"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/scaling_serverless.png","sourceStatusCode":200,"destWidth":700,"destHeight":397,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn96@2020_4/2020/10/28/03-03-11-655_3f4d8230857143b5.webp","sourceBytes":48334,"destBytes":24936,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1091,"convertSpendMs":20,"createdTime":"2020-10-28 11:03:11","host":"us-028*","referer":"https://www.percona.com/blog/?p=71612","linkMd5ListStr":"a4ca489826c03a3e726a3671f2c09f1e","githubUser":"myreaderx14","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"47.2 KB","destSize":"24.4 KB","compressRate":"51.6%"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/MySQL-8.0.22-Asynchronous-Replication-Automatic-Connection-300x157.png","sourceStatusCode":200,"destWidth":300,"destHeight":157,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn7@2020_5/2020/10/28/03-03-12-009_953d3b12ebfa7671.webp","sourceBytes":25196,"destBytes":10038,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1854,"convertSpendMs":6,"createdTime":"2020-10-28 11:03:11","host":"europe61*","referer":"https://www.percona.com/blog/?p=72175","linkMd5ListStr":"928f438a60c8ef59f361f73f3cbfbd94","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"24.6 KB","destSize":"9.8 KB","compressRate":"39.8%"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/Volume-snapshot-and-clone-Kubernetes-200x112.png","sourceStatusCode":200,"destWidth":200,"destHeight":112,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn83@2020_6/2020/10/28/03-03-14-201_590620f7bc2a8b99.webp","sourceBytes":17731,"destBytes":5760,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1769,"convertSpendMs":5,"createdTime":"2020-10-28 11:03:13","host":"europe-25*","referer":"https://www.percona.com/blog/?p=72169","linkMd5ListStr":"0a9c11b331192491d308b55651350ad5","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"17.3 KB","destSize":"5.6 KB","compressRate":"32.5%"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Monitoring-and-Management-Documentation-200x112.png","sourceStatusCode":200,"destWidth":200,"destHeight":112,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn73@2020_5/2020/10/28/03-03-15-952_7cb7b959def10845.webp","sourceBytes":26433,"destBytes":6938,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1312,"convertSpendMs":7,"createdTime":"2020-10-28 11:03:15","host":"us-023*","referer":"https://www.percona.com/blog/?p=72212","linkMd5ListStr":"517f7b4d3c7d9a3cfc267ab72ad3675e","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"25.8 KB","destSize":"6.8 KB","compressRate":"26.2%"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/MySQL-8-Persisted-System-Variables-200x112.png","sourceStatusCode":200,"destWidth":200,"destHeight":112,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn99@2020_2/2020/10/28/03-03-17-694_93d29654d4834dbb.webp","sourceBytes":13037,"destBytes":3578,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1152,"convertSpendMs":16,"createdTime":"2020-10-28 11:03:17","host":"us-016*","referer":"https://www.percona.com/blog/?p=72010","linkMd5ListStr":"11f34f8db0cbce73afca3a4e031ece65","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"12.7 KB","destSize":"3.5 KB","compressRate":"27.4%"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/select_type_serverless.png","sourceStatusCode":200,"destWidth":676,"destHeight":422,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn77@2020_1/2020/10/28/03-03-18-004_d36cb878b2c0da3b.webp","sourceBytes":52181,"destBytes":27198,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1380,"convertSpendMs":28,"createdTime":"2020-10-28 11:03:17","host":"us-011*","referer":"https://www.percona.com/blog/?p=71612","linkMd5ListStr":"a4ca489826c03a3e726a3671f2c09f1e","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"51 KB","destSize":"26.6 KB","compressRate":"52.1%"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/Annotations-Percona-Monitoring-and-Management-300x168.png","sourceStatusCode":200,"destWidth":300,"destHeight":168,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn23@2020_4/2020/10/28/03-03-18-277_cd7c064567ab975e.webp","sourceBytes":34493,"destBytes":10576,"targetWebpQuality":75,"feedId":11,"totalSpendMs":2004,"convertSpendMs":10,"createdTime":"2020-10-28 11:03:17","host":"europe-59*","referer":"https://www.percona.com/blog/?p=71772","linkMd5ListStr":"fbc096ce5c6e4afa275647f97eec87da","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"33.7 KB","destSize":"10.3 KB","compressRate":"30.7%"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/webinar-Google-Cloud-Platform-300x168.png","sourceStatusCode":200,"destWidth":300,"destHeight":168,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn3@2020_1/2020/10/28/03-03-19-849_bc8c60916a4ca240.webp","sourceBytes":50103,"destBytes":7908,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1299,"convertSpendMs":99,"createdTime":"2020-10-28 11:03:19","host":"us-012*","referer":"https://www.percona.com/blog/?p=72185","linkMd5ListStr":"f74c673914fee2805ad9473b1690ebe4","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"48.9 KB","destSize":"7.7 KB","compressRate":"15.8%"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Software-Release-Oct-26-300x169.png","sourceStatusCode":200,"destWidth":300,"destHeight":169,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn6@2020_2/2020/10/28/03-03-22-651_9feac703bf3e1d09.webp","sourceBytes":86477,"destBytes":10756,"targetWebpQuality":75,"feedId":11,"totalSpendMs":2126,"convertSpendMs":11,"createdTime":"2020-10-28 11:03:21","host":"europe-57*","referer":"https://www.percona.com/blog/?p=72007","linkMd5ListStr":"ef7a03da544caf26d9275c0ed10e3fe6","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"84.5 KB","destSize":"10.5 KB","compressRate":"12.4%"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/webinar-Google-Cloud-Platform-200x112.png","sourceStatusCode":200,"destWidth":200,"destHeight":112,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn43@2020_4/2020/10/28/03-03-24-530_289e28eab2ced64d.webp","sourceBytes":26601,"destBytes":4260,"targetWebpQuality":75,"feedId":11,"totalSpendMs":2230,"convertSpendMs":9,"createdTime":"2020-10-28 11:03:23","host":"europe-56*","referer":"https://www.percona.com/blog/?p=72185","linkMd5ListStr":"f74c673914fee2805ad9473b1690ebe4","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"26 KB","destSize":"4.2 KB","compressRate":"16%"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-22-at-1.09.05-PM.png","sourceStatusCode":200,"destWidth":558,"destHeight":364,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn9@2020_2/2020/10/28/03-03-24-564_57291f42613c87db.webp","sourceBytes":46768,"destBytes":12356,"targetWebpQuality":75,"feedId":11,"totalSpendMs":2132,"convertSpendMs":24,"createdTime":"2020-10-28 11:03:23","host":"europe-56*","referer":"https://www.percona.com/blog/?p=71772","linkMd5ListStr":"fbc096ce5c6e4afa275647f97eec87da","githubUser":"myreaderx23","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"45.7 KB","destSize":"12.1 KB","compressRate":"26.4%"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/MySQL-8-Persisted-System-Variables-300x168.png","sourceStatusCode":200,"destWidth":300,"destHeight":168,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn87@2020_1/2020/10/28/03-03-26-158_a9f7920f91dead32.webp","sourceBytes":24390,"destBytes":6774,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1648,"convertSpendMs":6,"createdTime":"2020-10-28 11:03:25","host":"europe63*","referer":"https://www.percona.com/blog/?p=72010","linkMd5ListStr":"11f34f8db0cbce73afca3a4e031ece65","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"23.8 KB","destSize":"6.6 KB","compressRate":"27.8%"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/MySQL-Percona-Backup-Incompatibilities-200x105.png","sourceStatusCode":200,"destWidth":200,"destHeight":105,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn50@2020_3/2020/10/28/03-03-26-108_209cf8c5267c8693.webp","sourceBytes":14525,"destBytes":4242,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1392,"convertSpendMs":10,"createdTime":"2020-10-28 11:03:25","host":"us-017*","referer":"https://www.percona.com/blog/?p=72177","linkMd5ListStr":"0d9f461223523e12b1e4d04cd87043a4","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"14.2 KB","destSize":"4.1 KB","compressRate":"29.2%"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/Annotations-Percona-Monitoring-and-Management-200x112.png","sourceStatusCode":200,"destWidth":200,"destHeight":112,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn11@2020_2/2020/10/28/03-03-26-363_fc01552aca5484c4.webp","sourceBytes":19258,"destBytes":5430,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1725,"convertSpendMs":8,"createdTime":"2020-10-28 11:03:25","host":"europe63*","referer":"https://www.percona.com/blog/?p=71772","linkMd5ListStr":"fbc096ce5c6e4afa275647f97eec87da","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"18.8 KB","destSize":"5.3 KB","compressRate":"28.2%"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Monitoring-and-Management-Documentation-300x168.png","sourceStatusCode":200,"destWidth":300,"destHeight":168,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn54@2020_6/2020/10/28/03-03-26-477_a9fbcea0432e3507.webp","sourceBytes":46687,"destBytes":12814,"targetWebpQuality":75,"feedId":11,"totalSpendMs":2215,"convertSpendMs":13,"createdTime":"2020-10-28 11:03:25","host":"europe68*","referer":"https://www.percona.com/blog/?p=72212","linkMd5ListStr":"517f7b4d3c7d9a3cfc267ab72ad3675e","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"45.6 KB","destSize":"12.5 KB","compressRate":"27.4%"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/Volume-snapshot-and-clone-Kubernetes-300x168.png","sourceStatusCode":200,"destWidth":300,"destHeight":168,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn62@2020_2/2020/10/28/03-03-27-763_85f4a0c2708c70e0.webp","sourceBytes":30467,"destBytes":9944,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1016,"convertSpendMs":8,"createdTime":"2020-10-28 11:03:27","host":"us-55*","referer":"https://www.percona.com/blog/?p=72169","linkMd5ListStr":"0a9c11b331192491d308b55651350ad5","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"29.8 KB","destSize":"9.7 KB","compressRate":"32.6%"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/CVE-2020-26542-200x105.png","sourceStatusCode":200,"destWidth":200,"destHeight":105,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn68@2020_6/2020/10/28/03-03-27-858_e7f0f930cffbcf9f.webp","sourceBytes":9647,"destBytes":3090,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1159,"convertSpendMs":10,"createdTime":"2020-10-28 11:03:27","host":"us-034*","referer":"https://www.percona.com/blog/?p=71846","linkMd5ListStr":"8b6053d13fd207a21eadc4c23e48c700","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"9.4 KB","destSize":"3 KB","compressRate":"32%"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/Amazon-Aurora-Serverless-300x168.png","sourceStatusCode":200,"destWidth":300,"destHeight":168,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn18@2020_6/2020/10/28/03-03-29-594_92250eb1ecb58b1f.webp","sourceBytes":29199,"destBytes":9020,"targetWebpQuality":75,"feedId":11,"totalSpendMs":2746,"convertSpendMs":86,"createdTime":"2020-10-28 11:03:27","host":"us-035*","referer":"https://www.percona.com/blog/?p=71612","linkMd5ListStr":"a4ca489826c03a3e726a3671f2c09f1e","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"28.5 KB","destSize":"8.8 KB","compressRate":"30.9%"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/MySQL-Percona-Backup-Incompatibilities-300x157.png","sourceStatusCode":200,"destWidth":300,"destHeight":157,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn91@2020_1/2020/10/28/03-03-34-122_4f294fe39c3973b9.webp","sourceBytes":24216,"destBytes":7764,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1848,"convertSpendMs":93,"createdTime":"2020-10-28 11:03:33","host":"us-040*","referer":"https://www.percona.com/blog/?p=72177","linkMd5ListStr":"0d9f461223523e12b1e4d04cd87043a4","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"23.6 KB","destSize":"7.6 KB","compressRate":"32.1%"}],"successGithubMap":{"myreaderx14":1,"myreaderx8":1,"myreaderx15":1,"myreaderx7":1,"myreaderx16":1,"myreaderx6":1,"myreaderx4":1,"myreaderx10":1,"myreaderx33":1,"myreaderx11":1,"myreaderx3":1,"myreaderx2":1,"myreaderx1":1,"myreaderx13":1,"myreaderx30":1,"myreaderx31":1,"myreaderx18":1,"myreaderx19":1,"myreaderx":1,"myreaderx25":1,"myreaderx21":1,"myreaderx23":1,"myreaderx24":1,"myreaderx5oss":1,"myreaderx29":1},"failGithubMap":{}}