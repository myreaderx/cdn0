{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-10-14 11:27:59","updatedTime":"2020-10-14 11:27:59","title":"Introduction to Radio Hacking","link":"http://18.130.251.17/?p=317","description":"<p>Cloning basic Keyfobs using GNURadio and an SDR!</p> \n<h2>Introduction</h2> \n<p>In my <a href=\"http://18.130.251.17/an-introduction-to-hardware-hacking/\">introduction to hardware hacking</a>, I mention that radio systems may be part of the attack surface for a hardware device penetration test. So I thought I’d give a gentle introduction to hacking with an SDR here!</p> \n<p>Firstly, what’s an SDR? It stands for software-defined radio, and refers to a category of devices which allow you to interface with radio. There are a lot of SDR devices on the market to choose from when you first get started – a RTL-SDR can be picked up for £15 and devices from Ettus Research go well into the thousands of pounds.</p> \n<span id=\"more-317\"></span> \n<p>I’ll be using an Ettus Research b200mini-i USRP during these examples, but if your SDR can receive and transmit on 433MHz then you can follow these steps directly – if not I’ll just use this as an example to talk about some of the tools and techniques.</p> \n<p>In this example we’ll be targeting a simple home alarm, which works by placing sensors on doors/windows and engages and disengages with a keyfob. The fob itself looks like this:</p> \n<div class=\"wp-block-image\"> \n <figure class=\"aligncenter size-medium\"> \n  <img loading=\"lazy\" width=\"300\" height=\"300\" src=\"https://gracefulsecurity.com/wp-content/uploads/2020/02/14372505-F775-4373-BE4A-051FE8E84A2C-300x300.jpeg\" alt=\"\" class=\"wp-image-318\" srcset=\"https://gracefulsecurity.com/wp-content/uploads/2020/02/14372505-F775-4373-BE4A-051FE8E84A2C-300x300.jpeg 300w, https://gracefulsecurity.com/wp-content/uploads/2020/02/14372505-F775-4373-BE4A-051FE8E84A2C-1024x1024.jpeg 1024w, https://gracefulsecurity.com/wp-content/uploads/2020/02/14372505-F775-4373-BE4A-051FE8E84A2C-150x150.jpeg 150w, https://gracefulsecurity.com/wp-content/uploads/2020/02/14372505-F775-4373-BE4A-051FE8E84A2C-768x768.jpeg 768w, https://gracefulsecurity.com/wp-content/uploads/2020/02/14372505-F775-4373-BE4A-051FE8E84A2C-1536x1536.jpeg 1536w, https://gracefulsecurity.com/wp-content/uploads/2020/02/14372505-F775-4373-BE4A-051FE8E84A2C-1200x1200.jpeg 1200w, https://gracefulsecurity.com/wp-content/uploads/2020/02/14372505-F775-4373-BE4A-051FE8E84A2C-1980x1980.jpeg 1980w, https://gracefulsecurity.com/wp-content/uploads/2020/02/14372505-F775-4373-BE4A-051FE8E84A2C.jpeg 2048w\" sizes=\"(max-width: 300px) 100vw, 300px\" /> \n </figure> \n</div> \n<p>There are many <a href=\"https://www.amazon.co.uk/tiiwee-Home-Alarm-System-Starter/dp/B071R4RXWZ/\">similar devices</a> available on sites like Amazon, if you’d like to play along at home.</p> \n<h2>Cloning a Keyfob</h2> \n<p>Many of these devices utilise a simple fixed “password” for engaging the alarm, which can be captured using an SDR and then replayed at will. The overall attack simplicity often surprises people who haven’t seen this kind of thing before – and it’s a good simple introduction to trying out the tools.</p> \n<p>The first thing we need to do is determine what frequency the fob is operating on. A very common frequency for these kinds of devices is 433MHz, so I started there and got lucky on my first attempt.</p> \n<p>How did I confirm it was 433MHz? By using GNURadio to listen to that frequency and look for data transmissions. This is easily seen with an SDR listening on that frequency in GNURadio. With a UHD this is as simple as running a command like:</p> \n<pre class=\"wp-block-preformatted\">uhd_fft -f 433M -s 4M\n<em>Note if you're running GNURadio in a Virtual Machine, and are having difficulty connecting to the UHD - this may be because after uploading the firmware to the device it reboots and VMware loses the connection. I found it much easier to do this on a bare-metal Linux installation to avoid this quirk.</em></pre> \n<figure class=\"wp-block-image size-large\"> \n <img loading=\"lazy\" width=\"1024\" height=\"783\" src=\"https://gracefulsecurity.com/wp-content/uploads/2020/02/Frequency3-1024x783.png\" alt=\"\" class=\"wp-image-319\" srcset=\"https://gracefulsecurity.com/wp-content/uploads/2020/02/Frequency3-1024x783.png 1024w, https://gracefulsecurity.com/wp-content/uploads/2020/02/Frequency3-300x229.png 300w, https://gracefulsecurity.com/wp-content/uploads/2020/02/Frequency3-768x587.png 768w, https://gracefulsecurity.com/wp-content/uploads/2020/02/Frequency3-1200x917.png 1200w, https://gracefulsecurity.com/wp-content/uploads/2020/02/Frequency3.png 1295w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /> \n <figcaption>\n   A “waterfall” view of the frequencies between 431MHz and 435MHz, showing a red line when the key fob was pressed. \n </figcaption> \n</figure> \n<p>The above screenshot shows the SDR listening on frequencies around 433MHz, the view runs bottom to top slowly; you can see the point in which I pressed the key fob button here showing in red on the waterfall. Giving a frequency of about 433.912MHz. So now we know where to monitor!</p> \n<p>Now we know where to monitor we can take a look at GNURadio companion, and set up a project to first record, and then replay on demand, the “password”.</p> \n<p>You can start the tool with:</p> \n<pre class=\"wp-block-preformatted\">gnuradio-companion</pre> \n<p>The menu will look something like this:</p> \n<figure class=\"wp-block-image size-large\"> \n <img loading=\"lazy\" width=\"1024\" height=\"562\" src=\"https://gracefulsecurity.com/wp-content/uploads/2020/02/GUI-2-1024x562.png\" alt=\"\" class=\"wp-image-320\" srcset=\"https://gracefulsecurity.com/wp-content/uploads/2020/02/GUI-2-1024x562.png 1024w, https://gracefulsecurity.com/wp-content/uploads/2020/02/GUI-2-300x165.png 300w, https://gracefulsecurity.com/wp-content/uploads/2020/02/GUI-2-768x421.png 768w, https://gracefulsecurity.com/wp-content/uploads/2020/02/GUI-2-1536x842.png 1536w, https://gracefulsecurity.com/wp-content/uploads/2020/02/GUI-2-1200x658.png 1200w, https://gracefulsecurity.com/wp-content/uploads/2020/02/GUI-2.png 1920w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /> \n <figcaption>\n   A blank project in GNURadio-Companion; showing the “widgets” menu on the right and a sample rate of 2M set, on the left. \n </figcaption> \n</figure> \n<p>In the project space, you’ll want to double click the “variable” box and set the sample_rate to 2000000 (2M). I’ve done that already, so you can see it showing as 2M in the screenshot above. Now you can select some widgets from the menu on the right. Left click any of the options once and hit CTRL+F and you’ll be able to search for what you need.</p> \n<p>As I’m using an Ettus I’ll use a “UHD: USRP Source”, but you’ll want an appropriate source for your radio device. I’m also going to select a “File Sink” and a “WX GUI Scope Sink”. None, if you’re using Fedora, you’ll have a bad time with WX GUI components as it uses Wayland, intead of X, by default. You can quickly change this however by logging out and hittin the cog on the login screen and selecting “Gnome over X”. or a similar suitable “over X” option!</p> \n<p>Once you’d selected those widgets you can connect them by clicking the small “tab” on the edge of the boxes and clicking where you would like to connect it. I’ve connected my source to both the file and GUI output. Like this</p> \n<figure class=\"wp-block-image size-large\"> \n <img loading=\"lazy\" width=\"1024\" height=\"562\" src=\"https://gracefulsecurity.com/wp-content/uploads/2020/02/GUI-1-1024x562.png\" alt=\"\" class=\"wp-image-321\" srcset=\"https://gracefulsecurity.com/wp-content/uploads/2020/02/GUI-1-1024x562.png 1024w, https://gracefulsecurity.com/wp-content/uploads/2020/02/GUI-1-300x165.png 300w, https://gracefulsecurity.com/wp-content/uploads/2020/02/GUI-1-768x421.png 768w, https://gracefulsecurity.com/wp-content/uploads/2020/02/GUI-1-1536x842.png 1536w, https://gracefulsecurity.com/wp-content/uploads/2020/02/GUI-1-1200x658.png 1200w, https://gracefulsecurity.com/wp-content/uploads/2020/02/GUI-1.png 1920w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /> \n <figcaption>\n   GNURadio-Companion, showing three connected widgets. \n </figcaption> \n</figure> \n<p>You might also notice from the above, that I’ve set some of the widget variables. For USRP Source Gain, I’ve selected 38. Which was actually the default selected by uhd_fft earlier and works reliably with this device. I’ve selected antenna 2, RX2, you may only have a single option on your device. I’ve given the file sink a filename to save to, I’ve used “TestingAgain” for mine as I lack creativity. For frequency it wants it in Hz so 433.912MHz becomes 43391200.</p> \n<p>Now I can run the project to allow me to capture a keyfob command!</p> \n<figure class=\"wp-block-image size-large\"> \n <img loading=\"lazy\" width=\"1024\" height=\"576\" src=\"https://gracefulsecurity.com/wp-content/uploads/2020/02/Screenshot-1-1024x576.png\" alt=\"\" class=\"wp-image-322\" srcset=\"https://gracefulsecurity.com/wp-content/uploads/2020/02/Screenshot-1-1024x576.png 1024w, https://gracefulsecurity.com/wp-content/uploads/2020/02/Screenshot-1-300x169.png 300w, https://gracefulsecurity.com/wp-content/uploads/2020/02/Screenshot-1-768x432.png 768w, https://gracefulsecurity.com/wp-content/uploads/2020/02/Screenshot-1-1536x864.png 1536w, https://gracefulsecurity.com/wp-content/uploads/2020/02/Screenshot-1-1200x675.png 1200w, https://gracefulsecurity.com/wp-content/uploads/2020/02/Screenshot-1.png 1920w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /> \n <figcaption>\n   A screenshot of the project running, whilst pressing a keyfob button. \n </figcaption> \n</figure> \n<p>In the above screenshot you’ll see that I’ve run the project and taken the screenshto whilst pressing the keyfob button – and that the keyfob signal is shown neatly in my GUI block.</p> \n<p>It’s unlikely that yours will be neat like this by default, if you adjust how it’s displayed with the buttons on the right: secs/div, counts/div, Y offset. You’ll need to disable Autoarrange for all of these buttons to become active. How you want to set it will depend largely on your screen size and PC power. You can see what I’ve got mine set to on the axis of the above screenshot – I find this works well on my small screen.</p> \n<p>Once you’ve captured a keyfob press, you can simply close the “top block” GUI window shown above, and the data will have written to the file you specified in your file sink! For me it was about 70MB of data, but you’ll see shortly that of course there’s a blank capture at the start and end of the file which we can optionally remove.</p> \n<h2>Replaying a Payload</h2> \n<p>Now that we’ve got a file “TestingAgain” containing a valid keyfob press; we can set up GNURadio to transmit the “password” to the alarm system!</p> \n<p>To do that, you’ll first want to disable your existing widgets (you can delete them of course, but I prefer to disable them so I can capture and replay several button presses, e.g. lock/unlock, in a row). You can do that by right clicking them and selecting disable.</p> \n<p>Add a “file source” and a device sink. I’m using “UHD: USRP Sink” of course as I’m using the Ettus, but if you’re using a different SDR device you may have a different sink widget. In the file source widget, select the file you saved earlier and don’t forget to connect it to your sink!</p> \n<p>For the sink, I’ve set the gain to 38 as before. I’ve also set the Centre Frequency to 43381200 again (as with the source earlier). That will leave you something like this:</p> \n<figure class=\"wp-block-image size-large\"> \n <img loading=\"lazy\" width=\"1024\" height=\"562\" src=\"https://gracefulsecurity.com/wp-content/uploads/2020/02/GUI-3-1024x562.png\" alt=\"\" class=\"wp-image-323\" srcset=\"https://gracefulsecurity.com/wp-content/uploads/2020/02/GUI-3-1024x562.png 1024w, https://gracefulsecurity.com/wp-content/uploads/2020/02/GUI-3-300x165.png 300w, https://gracefulsecurity.com/wp-content/uploads/2020/02/GUI-3-768x421.png 768w, https://gracefulsecurity.com/wp-content/uploads/2020/02/GUI-3-1536x842.png 1536w, https://gracefulsecurity.com/wp-content/uploads/2020/02/GUI-3-1200x658.png 1200w, https://gracefulsecurity.com/wp-content/uploads/2020/02/GUI-3.png 1920w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /> \n <figcaption>\n   GNUCompanion showing three disabled “record” widgets, and two new “replay” widgets. \n </figcaption> \n</figure> \n<p>Now hit play on the top bar and you should hear your alarm lock/unlock! It should look something like this:</p> \n<blockquote class=\"twitter-tweet\" data-lang=\"en-gb\"> \n <p lang=\"en\" dir=\"ltr\">Spent the day playing with the USRP again; and of course cloning the key-fobs for my alarm and entrance gate!<br><br>Here’s a simple radio replay attack <img src=\"https://s.w.org/images/core/emoji/13.0.0/72x72/1f642.png\" alt=\"🙂\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" /> <a href=\"https://t.co/rKMGxFBykx\">pic.twitter.com/rKMGxFBykx</a></br></br></p>— HollyGraceful (@HollyGraceful) \n <a href=\"https://twitter.com/HollyGraceful/status/1107397641342722053?ref_src=twsrc%5Etfw\">17 March 2019</a> \n</blockquote> \n<script async=\"\" src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script> \n<p>If you put the audio on you’ll hear the keyfob engage the lock – and then I replay the payload with GNURadio!<br /></p> \n<h2>Editing Captured DataFoo</h2> \n<p>Another thing you can do, is edit the captured data in Audacity – I won’t go into details here as I’ll save that for part two – but just in case you want to start playing around with it: here’s how to import and export the waveform.</p> \n<p>Firstly you can import the data into Audacity using:</p> \n<pre class=\"wp-block-preformatted\">File &gt; Import &gt; Raw Data</pre> \n<p>You should get something like this:</p> \n<figure class=\"wp-block-image size-large\"> \n <img loading=\"lazy\" width=\"1024\" height=\"594\" src=\"https://gracefulsecurity.com/wp-content/uploads/2020/02/WastedSpace-1024x594.png\" alt=\"\" class=\"wp-image-324\" srcset=\"https://gracefulsecurity.com/wp-content/uploads/2020/02/WastedSpace-1024x594.png 1024w, https://gracefulsecurity.com/wp-content/uploads/2020/02/WastedSpace-300x174.png 300w, https://gracefulsecurity.com/wp-content/uploads/2020/02/WastedSpace-768x446.png 768w, https://gracefulsecurity.com/wp-content/uploads/2020/02/WastedSpace-1200x696.png 1200w, https://gracefulsecurity.com/wp-content/uploads/2020/02/WastedSpace.png 1360w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /> \n</figure> \n<p>You can get rid of any wasted space at the beginning by highlighting it with the mouse and hitting the backspace key. I do this to cut the file down to the minimum needed and to remove any delay at the start of a replay attack.</p> \n<p>Interestingly though, if your keyfob is similar to mine, you’ll end up with something like this:</p> \n<figure class=\"wp-block-image size-large\"> \n <img loading=\"lazy\" width=\"1024\" height=\"422\" src=\"https://gracefulsecurity.com/wp-content/uploads/2020/02/WastedBytes-1024x422.png\" alt=\"\" class=\"wp-image-325\" srcset=\"https://gracefulsecurity.com/wp-content/uploads/2020/02/WastedBytes-1024x422.png 1024w, https://gracefulsecurity.com/wp-content/uploads/2020/02/WastedBytes-300x124.png 300w, https://gracefulsecurity.com/wp-content/uploads/2020/02/WastedBytes-768x317.png 768w, https://gracefulsecurity.com/wp-content/uploads/2020/02/WastedBytes-1200x495.png 1200w, https://gracefulsecurity.com/wp-content/uploads/2020/02/WastedBytes.png 1360w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /> \n <figcaption>\n   Audacity showing the waveform cut down to just the data \n </figcaption> \n</figure> \n<p> Now this might not seem like anything special; and we haven’t yet looked into what this data actually contains – we’ll save that for a future post! However if curiousity takes you, or I guess if your mouse hand slips when you’re deleting data. You might realise that this whole waveform isn’t actually necassary – if you were for example to cut it right down to the first six pieces, you’d end up with this: </p> \n<figure class=\"wp-block-image size-large\"> \n <img loading=\"lazy\" width=\"1024\" height=\"422\" src=\"https://gracefulsecurity.com/wp-content/uploads/2020/02/CutDown-1024x422.png\" alt=\"\" class=\"wp-image-326\" srcset=\"https://gracefulsecurity.com/wp-content/uploads/2020/02/CutDown-1024x422.png 1024w, https://gracefulsecurity.com/wp-content/uploads/2020/02/CutDown-300x124.png 300w, https://gracefulsecurity.com/wp-content/uploads/2020/02/CutDown-768x317.png 768w, https://gracefulsecurity.com/wp-content/uploads/2020/02/CutDown-1200x495.png 1200w, https://gracefulsecurity.com/wp-content/uploads/2020/02/CutDown.png 1360w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /> \n <figcaption>\n   Waveform cut down to show just the first six pieces – which turns out to be enough to interact with the alarm for a successful lock/unlock. \n </figcaption> \n</figure> \n<p>We’ll look at bruteforcing the keys for fobs like this one in another part – but here we’ve got a short waveform which we can supply to an SDR through GNURadio whenever we like, to replay the lock/unlock code. A surprisingly simple attack!</p> \n<p>Last thing though, we need to save the file. Just hit:</p> \n<pre class=\"wp-block-preformatted\">File &gt; Export &gt; Export Audio</pre> \n<p>Then save it as “Other uncompressed”, “Header: Raw (header-less)” and “Encoding: 32-bit float” and you can use that smaller file with GNURadio whenever you like <img src=\"https://s.w.org/images/core/emoji/13.0.0/72x72/1f642.png\" alt=\"🙂\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" /></p> \n<figure class=\"wp-block-image size-large\"> \n <img loading=\"lazy\" width=\"840\" height=\"667\" src=\"https://gracefulsecurity.com/wp-content/uploads/2020/02/Clipped.png\" alt=\"\" class=\"wp-image-327\" srcset=\"https://gracefulsecurity.com/wp-content/uploads/2020/02/Clipped.png 840w, https://gracefulsecurity.com/wp-content/uploads/2020/02/Clipped-300x238.png 300w, https://gracefulsecurity.com/wp-content/uploads/2020/02/Clipped-768x610.png 768w\" sizes=\"(max-width: 840px) 100vw, 840px\" /> \n <figcaption>\n   A screenshot of the export options to ensure the clipped file works with GNURadio \n </figcaption> \n</figure> \n<p></p> \n<p>The post <a href=\"https://gracefulsecurity.com/introduction-to-radio-hacking/\" target=\"_blank\">Introduction to Radio Hacking</a> first appeared on <a href=\"https://gracefulsecurity.com/\" target=\"_blank\">GracefulSecurity</a>.</p>","descriptionType":"html","publishedDate":"Sun, 17 Mar 2019 09:00:00 +0000","feedId":38542,"bgimg":"https://gracefulsecurity.com/wp-content/uploads/2020/02/14372505-F775-4373-BE4A-051FE8E84A2C-300x300.jpeg","linkMd5":"f57bce79a94cf27510d41cade7e72ad9","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn18@2020_5/2020/10/14/03-38-01-880_e65096fde0c43c3c.webp","destWidth":300,"destHeight":300,"sourceBytes":12931,"destBytes":7372,"author":"HollyGraceful","articleImgCdnMap":{"https://gracefulsecurity.com/wp-content/uploads/2020/02/14372505-F775-4373-BE4A-051FE8E84A2C-300x300.jpeg":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn18@2020_5/2020/10/14/03-38-01-880_e65096fde0c43c3c.webp","https://gracefulsecurity.com/wp-content/uploads/2020/02/Frequency3-1024x783.png":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn34@2020_3/2020/10/14/03-38-03-028_0ce2ec47f61dbd9f.webp","https://gracefulsecurity.com/wp-content/uploads/2020/02/GUI-2-1024x562.png":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn42@2020_6/2020/10/14/03-38-03-631_eef1b08244fdd608.webp","https://gracefulsecurity.com/wp-content/uploads/2020/02/GUI-1-1024x562.png":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn50@2020_4/2020/10/14/03-38-03-630_d85a4ecce207b86d.webp","https://gracefulsecurity.com/wp-content/uploads/2020/02/Screenshot-1-1024x576.png":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn46@2020_1/2020/10/14/03-38-03-545_14822b1e4e0a23bf.webp","https://gracefulsecurity.com/wp-content/uploads/2020/02/GUI-3-1024x562.png":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn37@2020_5/2020/10/14/03-38-03-632_be5991f831b0e929.webp","https://s.w.org/images/core/emoji/13.0.0/72x72/1f642.png":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn54@2020_5/2020/10/14/03-38-02-870_48013d3a393020f8.webp","https://gracefulsecurity.com/wp-content/uploads/2020/02/WastedSpace-1024x594.png":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn21@2020_5/2020/10/14/03-38-03-815_17bf4a595246fd90.webp","https://gracefulsecurity.com/wp-content/uploads/2020/02/WastedBytes-1024x422.png":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn58@2020_6/2020/10/14/03-38-03-653_598d73d5ec7cbba6.webp","https://gracefulsecurity.com/wp-content/uploads/2020/02/CutDown-1024x422.png":null,"https://gracefulsecurity.com/wp-content/uploads/2020/02/Clipped.png":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn29@2020_2/2020/10/14/03-38-03-554_2e9cf1c5ec385345.webp"},"publishedOrCreatedDate":1602646079653}],"record":{"createdTime":"2020-10-14 11:27:59","updatedTime":"2020-10-14 11:27:59","feedId":38542,"fetchDate":"Wed, 14 Oct 2020 03:27:59 +0000","fetchMs":387,"handleMs":17,"totalMs":605576,"newArticles":0,"totalArticles":10,"status":1,"type":0,"ip":"10bb6f634c85211292dc3d83b8841bf5","hostName":"europe70*","requestId":"dcf8ef1376ed42c9ac006b01511ab3f6_38542","contentType":"application/rss+xml; charset=UTF-8","totalBytes":342122,"bgimgsTotal":1,"bgimgsGithubTotal":1,"articlesImgsTotal":11,"articlesImgsGithubTotal":10,"successGithubMap":{"myreaderx8":1,"myreaderx6":1,"myreaderx4":1,"myreaderx21":1,"myreaderx11":1,"myreaderx33":1,"myreaderx12":1,"myreaderx1":1,"myreaderx30":1,"myreaderx5oss":1},"failGithubMap":{"myreaderx23":1}},"feed":{"createdTime":"2020-09-07 03:14:28","updatedTime":"2020-09-07 05:29:49","id":38542,"name":"GracefulSecurity","url":"https://www.gracefulsecurity.com/feed/","subscriber":83,"website":null,"icon":"https://gracefulsecurity.com/favicon.ico","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx63/cdn51@2020_5/2020/09/06/21-29-48-565_efa7f8a14ab972d4.png","description":"","weekly":null,"link":null},"noPictureArticleList":[{"createdTime":"2020-10-14 11:38:04","updatedTime":"2020-10-14 11:38:04","id":null,"feedId":38542,"linkMd5":"f57bce79a94cf27510d41cade7e72ad9"}],"tmpCommonImgCdnBytes":7372,"tmpBodyImgCdnBytes":334750,"tmpBgImgCdnBytes":0,"extra4":{"start":1602646079237,"total":0,"statList":[{"spend":399,"msg":"获取xml内容"},{"spend":17,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":2072,"msg":"正文链接上传到cdn"}]},"extra5":11,"extra6":11,"extra7ImgCdnFailResultVector":[{"code":1,"isDone":false,"source":"https://gracefulsecurity.com/wp-content/uploads/2020/02/CutDown-1024x422.png","sourceStatusCode":200,"destWidth":1024,"destHeight":422,"sourceBytes":136408,"destBytes":55314,"targetWebpQuality":75,"feedId":38542,"totalSpendMs":836,"convertSpendMs":42,"createdTime":"2020-10-14 11:38:02","host":"us-013*","referer":"http://18.130.251.17/?p=317","linkMd5ListStr":"f57bce79a94cf27510d41cade7e72ad9","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn25/contents/2020/10/14/03-38-03-674_aa89426f3a502a88.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Wed, 14 Oct 2020 03:38:03 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["C8A8:3C49:4D4DC8:856FD8:5F867297"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1602648417"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn25/contents/2020/10/14/03-38-03-674_aa89426f3a502a88.webp","historyStatusCode":[],"spendMs":55},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"133.2 KB","destSize":"54 KB","compressRate":"40.6%"},{"code":1,"isDone":false,"source":"https://gracefulsecurity.com/wp-content/uploads/2020/02/CutDown-1024x422.png","sourceStatusCode":200,"destWidth":1024,"destHeight":422,"sourceBytes":136408,"destBytes":55314,"targetWebpQuality":75,"feedId":38542,"totalSpendMs":660,"convertSpendMs":29,"createdTime":"2020-10-14 11:38:03","host":"us-013*","referer":"http://18.130.251.17/?p=317","linkMd5ListStr":"f57bce79a94cf27510d41cade7e72ad9","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn25/contents/2020/10/14/03-38-04-406_aa89426f3a502a88.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Wed, 14 Oct 2020 03:38:04 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["C8A8:3C49:4D4E54:85748B:5F86729B"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1602648417"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn25/contents/2020/10/14/03-38-04-406_aa89426f3a502a88.webp","historyStatusCode":[],"spendMs":53},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"133.2 KB","destSize":"54 KB","compressRate":"40.6%"}],"extra10_invalidATagHrefValue":{"http://18.130.251.17/?p=317_/an-introduction-to-hardware-hacking/":"http://18.130.251.17/an-introduction-to-hardware-hacking/"},"extra111_proxyServerAndStatMap":{"http://us-013.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-025.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-001.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-017.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-55.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe63.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-005.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe67.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-51.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-029.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://gracefulsecurity.com/wp-content/uploads/2020/02/14372505-F775-4373-BE4A-051FE8E84A2C-300x300.jpeg","sourceStatusCode":200,"destWidth":300,"destHeight":300,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn18@2020_5/2020/10/14/03-38-01-880_e65096fde0c43c3c.webp","sourceBytes":12931,"destBytes":7372,"targetWebpQuality":75,"feedId":38542,"totalSpendMs":1336,"convertSpendMs":7,"createdTime":"2020-10-14 11:38:01","host":"us-037*","referer":"http://18.130.251.17/?p=317","linkMd5ListStr":"f57bce79a94cf27510d41cade7e72ad9,f57bce79a94cf27510d41cade7e72ad9","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"12.6 KB","destSize":"7.2 KB","compressRate":"57%"},{"code":1,"isDone":false,"source":"https://s.w.org/images/core/emoji/13.0.0/72x72/1f642.png","sourceStatusCode":200,"destWidth":72,"destHeight":72,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn54@2020_5/2020/10/14/03-38-02-870_48013d3a393020f8.webp","sourceBytes":620,"destBytes":1362,"targetWebpQuality":75,"feedId":38542,"totalSpendMs":1001,"convertSpendMs":4,"createdTime":"2020-10-14 11:38:02","host":"europe67*","referer":"http://18.130.251.17/?p=317","linkMd5ListStr":"f57bce79a94cf27510d41cade7e72ad9,f57bce79a94cf27510d41cade7e72ad9","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"620 B","destSize":"1.3 KB","compressRate":"219.7%"},{"code":1,"isDone":false,"source":"https://gracefulsecurity.com/wp-content/uploads/2020/02/Frequency3-1024x783.png","sourceStatusCode":200,"destWidth":1024,"destHeight":783,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn34@2020_3/2020/10/14/03-38-03-028_0ce2ec47f61dbd9f.webp","sourceBytes":432429,"destBytes":25614,"targetWebpQuality":75,"feedId":38542,"totalSpendMs":1285,"convertSpendMs":39,"createdTime":"2020-10-14 11:38:02","host":"europe63*","referer":"http://18.130.251.17/?p=317","linkMd5ListStr":"f57bce79a94cf27510d41cade7e72ad9","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"422.3 KB","destSize":"25 KB","compressRate":"5.9%"},{"code":1,"isDone":false,"source":"https://gracefulsecurity.com/wp-content/uploads/2020/02/Screenshot-1-1024x576.png","sourceStatusCode":200,"destWidth":1024,"destHeight":576,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn46@2020_1/2020/10/14/03-38-03-545_14822b1e4e0a23bf.webp","sourceBytes":56088,"destBytes":23804,"targetWebpQuality":75,"feedId":38542,"totalSpendMs":1524,"convertSpendMs":35,"createdTime":"2020-10-14 11:38:02","host":"us-017*","referer":"http://18.130.251.17/?p=317","linkMd5ListStr":"f57bce79a94cf27510d41cade7e72ad9","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"54.8 KB","destSize":"23.2 KB","compressRate":"42.4%"},{"code":1,"isDone":false,"source":"https://gracefulsecurity.com/wp-content/uploads/2020/02/GUI-3-1024x562.png","sourceStatusCode":200,"destWidth":1024,"destHeight":562,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn37@2020_5/2020/10/14/03-38-03-632_be5991f831b0e929.webp","sourceBytes":134140,"destBytes":28634,"targetWebpQuality":75,"feedId":38542,"totalSpendMs":1589,"convertSpendMs":28,"createdTime":"2020-10-14 11:38:02","host":"us-51*","referer":"http://18.130.251.17/?p=317","linkMd5ListStr":"f57bce79a94cf27510d41cade7e72ad9","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"131 KB","destSize":"28 KB","compressRate":"21.3%"},{"code":1,"isDone":false,"source":"https://gracefulsecurity.com/wp-content/uploads/2020/02/GUI-1-1024x562.png","sourceStatusCode":200,"destWidth":1024,"destHeight":562,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn50@2020_4/2020/10/14/03-38-03-630_d85a4ecce207b86d.webp","sourceBytes":123952,"destBytes":26172,"targetWebpQuality":75,"feedId":38542,"totalSpendMs":1618,"convertSpendMs":25,"createdTime":"2020-10-14 11:38:02","host":"us-005*","referer":"http://18.130.251.17/?p=317","linkMd5ListStr":"f57bce79a94cf27510d41cade7e72ad9","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"121 KB","destSize":"25.6 KB","compressRate":"21.1%"},{"code":1,"isDone":false,"source":"https://gracefulsecurity.com/wp-content/uploads/2020/02/GUI-2-1024x562.png","sourceStatusCode":200,"destWidth":1024,"destHeight":562,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn42@2020_6/2020/10/14/03-38-03-631_eef1b08244fdd608.webp","sourceBytes":106702,"destBytes":22072,"targetWebpQuality":75,"feedId":38542,"totalSpendMs":1656,"convertSpendMs":47,"createdTime":"2020-10-14 11:38:02","host":"us-029*","referer":"http://18.130.251.17/?p=317","linkMd5ListStr":"f57bce79a94cf27510d41cade7e72ad9","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"104.2 KB","destSize":"21.6 KB","compressRate":"20.7%"},{"code":1,"isDone":false,"source":"https://gracefulsecurity.com/wp-content/uploads/2020/02/Clipped.png","sourceStatusCode":200,"destWidth":840,"destHeight":667,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn29@2020_2/2020/10/14/03-38-03-554_2e9cf1c5ec385345.webp","sourceBytes":61002,"destBytes":78020,"targetWebpQuality":75,"feedId":38542,"totalSpendMs":1681,"convertSpendMs":56,"createdTime":"2020-10-14 11:38:02","host":"us-001*","referer":"http://18.130.251.17/?p=317","linkMd5ListStr":"f57bce79a94cf27510d41cade7e72ad9","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"59.6 KB","destSize":"76.2 KB","compressRate":"127.9%"},{"code":1,"isDone":false,"source":"https://gracefulsecurity.com/wp-content/uploads/2020/02/WastedBytes-1024x422.png","sourceStatusCode":200,"destWidth":1024,"destHeight":422,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn58@2020_6/2020/10/14/03-38-03-653_598d73d5ec7cbba6.webp","sourceBytes":173754,"destBytes":69224,"targetWebpQuality":75,"feedId":38542,"totalSpendMs":1761,"convertSpendMs":48,"createdTime":"2020-10-14 11:38:02","host":"us-55*","referer":"http://18.130.251.17/?p=317","linkMd5ListStr":"f57bce79a94cf27510d41cade7e72ad9","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"169.7 KB","destSize":"67.6 KB","compressRate":"39.8%"},{"code":1,"isDone":false,"source":"https://gracefulsecurity.com/wp-content/uploads/2020/02/WastedSpace-1024x594.png","sourceStatusCode":200,"destWidth":1024,"destHeight":594,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn21@2020_5/2020/10/14/03-38-03-815_17bf4a595246fd90.webp","sourceBytes":139064,"destBytes":59848,"targetWebpQuality":75,"feedId":38542,"totalSpendMs":1891,"convertSpendMs":105,"createdTime":"2020-10-14 11:38:02","host":"us-025*","referer":"http://18.130.251.17/?p=317","linkMd5ListStr":"f57bce79a94cf27510d41cade7e72ad9","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"135.8 KB","destSize":"58.4 KB","compressRate":"43%"}],"successGithubMap":{"myreaderx8":1,"myreaderx6":1,"myreaderx4":1,"myreaderx21":1,"myreaderx11":1,"myreaderx33":1,"myreaderx12":1,"myreaderx1":1,"myreaderx30":1,"myreaderx5oss":1},"failGithubMap":{"myreaderx23":1}}