{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-11-18 16:46:36","updatedTime":"2020-11-18 16:46:36","title":"[wiki] How to redirect all emails to one inbox on Yii2 applications","link":"https://www.yiiframework.com/wiki/2566/how-to-redirect-all-emails-to-one-inbox-on-yii2-applications","description":"<div class=\"markdown\"><p><a href=\"https://www.yiiframework.com/doc/api/2.0/yii-mail-basemailer#$useFileTransport-detail\">\\yii\\mail\\BaseMailer::useFileTransport</a> is a great tool. If you activate it, all\nemails sent trough this mailer will be saved (by default) on <code>@runtime/mail</code>\ninstead of being sent, allowing the devs to inspect thre result. </p>\n<p>But what happens if we want to actually receive the emails on our inboxes. When\nall emails are suppose to go to one account, there is no problem: setup it as\na param and the modify it in the <code>params-local.php</code> (assuming advaced\napplication template).</p>\n<p>The big issue arises when the app is supposed to send emails to different\naccounts and make use of replyTo, cc and bcc fields. It's almost impossible try\nto solve it with previous approach and without using a lot of <code>if(YII_DEBUG)</code>.</p>\n<p>Well, next there is a solution: </p>\n<pre><code class=\"hljs php\"><span class=\"hljs-string\">'useFileTransport'</span> =&#62; <span class=\"hljs-keyword\">true</span>,\n<span class=\"hljs-string\">'fileTransportCallback'</span> =&#62; <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-params\">(\\yii\\mail\\MailerInterface $mailer, \\yii\\mail\\MessageInterface $message)</span> </span>{\n    $message-&#62;attachContent(json_encode([\n            <span class=\"hljs-string\">'to'</span> =&#62; $message-&#62;getTo(),\n            <span class=\"hljs-string\">'cc'</span> =&#62; $message-&#62;getCc(),\n            <span class=\"hljs-string\">'bcc'</span> =&#62; $message-&#62;getBcc(),\n            <span class=\"hljs-string\">'replyTo'</span> =&#62; $message-&#62;getReplyTo(),\n        ]), [<span class=\"hljs-string\">'fileName'</span> =&#62; <span class=\"hljs-string\">'metadata.json'</span>, <span class=\"hljs-string\">'contentType'</span> =&#62; <span class=\"hljs-string\">'application/json'</span>])\n        -&#62;setTo(<span class=\"hljs-string\">'debug@mydomain.com'</span>) <span class=\"hljs-comment\">// account to receive all the emails</span>\n        -&#62;setCc(<span class=\"hljs-keyword\">null</span>)\n        -&#62;setBcc(<span class=\"hljs-keyword\">null</span>)\n        -&#62;setReplyTo(<span class=\"hljs-keyword\">null</span>);\n\n    $mailer-&#62;useFileTransport = <span class=\"hljs-keyword\">false</span>;\n    $mailer-&#62;send($message);\n    $mailer-&#62;useFileTransport = <span class=\"hljs-keyword\">true</span>;\n\n    <span class=\"hljs-keyword\">return</span> $mailer-&#62;generateMessageFileName();\n}\n\n</code></pre>\n<p>How it works? <code>fileTransportCallback</code> is the callback to specify the filename that should be used to create the saved email on <code>@runtime/mail</code>. It \"intercepts\" the send email process, so we can use it for our porpuses.</p>\n<ol><li>Attach a json file with the real recipients information so we can review it</li>\n<li>Set the recipient (TO) as the email address where we want to receive all the\nemails.</li>\n<li>Set the others recipients fields as null</li>\n<li>Deactivate <code>useFileTransport</code></li>\n<li>Send the email</li>\n<li>Activate <code>useFileTransport</code></li>\n<li>Return the defaut file name (datetime of the operation)</li>\n</ol><p>This way we both receive all the emails on the specified account and get them stored\non <code>@runtime/mail</code>.</p>\n<p>Pretty simple helper to review emails on Yii2 applications.</p>\n<p>Originally posted on: <a href=\"https://glpzzz.github.io/2020/10/02/yii2-redirect-all-emails.html\">https://glpzzz.github.io/2020/10/02/yii2-redirect-all-emails.html</a></p>\n</div>","descriptionType":"html","publishedDate":"Wed, 18 Nov 2020 08:46:21 +0000","feedId":42098,"bgimg":"","linkMd5":"efad7e81d3c245ccf069e4e18c11a06f","bgimgJsdelivr":"","metaImg":"","author":"glpzzz","publishedOrCreatedDate":1605689196451}],"record":{"createdTime":"2020-11-18 16:46:36","updatedTime":"2020-11-18 16:46:36","feedId":42098,"fetchDate":"Wed, 18 Nov 2020 08:46:36 +0000","fetchMs":31926,"handleMs":319,"totalMs":32475,"newArticles":0,"totalArticles":60,"status":1,"type":0,"ip":"10453b4ea40236af920fff4f414aa727","hostName":"us-034*","requestId":"6da92059435b4b24991918bb52ca4edd_42098","contentType":"text/html; charset=UTF-8","totalBytes":0,"bgimgsTotal":0,"bgimgsGithubTotal":0,"articlesImgsTotal":0,"articlesImgsGithubTotal":0,"successGithubMap":{},"failGithubMap":{}},"feed":{"createdTime":"2020-09-07 03:26:22","updatedTime":"2020-09-07 05:43:33","id":42098,"name":"Live News for Yii Framework","url":"http://www.yiiframework.com/rss.xml/","subscriber":76,"website":null,"icon":"https://www.yiiframework.com/favico/apple-touch-icon.png","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx64/cdn19@2020_4/2020/09/06/21-43-33-416_34a7a3d1515a04b1.png","description":"News, fresh extensions and wiki articles about Yii framework.","weekly":null,"link":null},"noPictureArticleList":[],"tmpCommonImgCdnBytes":0,"tmpBodyImgCdnBytes":0,"tmpBgImgCdnBytes":0,"extra4":{"start":1605689163988,"total":0,"statList":[{"spend":32144,"msg":"获取xml内容"},{"spend":319,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":0,"msg":"正文链接上传到cdn"}]},"extra5":0,"extra6":0,"extra7ImgCdnFailResultVector":[],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{},"extra12ImgCdnSuccessResultVector":[],"successGithubMap":{},"failGithubMap":{}}