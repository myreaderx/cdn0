{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2021-09-28 01:06:28","updatedTime":"2021-09-28 01:06:28","title":"HTML slot 插槽元素深入","link":"https://www.zhangxinxu.com/wordpress/?p=10125","description":"<p>by <a href=\"https://www.zhangxinxu.com/\">zhangxinxu</a> from <a href=\"https://www.zhangxinxu.com/wordpress/?p=10125\">https://www.zhangxinxu.com/wordpress/?p=10125</a> 鑫空间-鑫生活<br /> 本文欢迎分享与聚合，全文转载就不必了，尊重版权，圈子就这么大，若急用可以联系授权。</p> \n<p><script>window.wxShareImgUrl = 'https://www.zhangxinxu.com/study/image/share/202109-slot.png';if(!/zhangxinxu/.test(location.host)){document.body.addEventListener('mousedown',function(){location.href='https://www.zhangxinxu.com/wordpress/?p=10125'});}</script></p> \n<p><img src=\"https://image.zhangxinxu.com/image/blog/202109/slot-cover.png\" width=\"484\" height=\"297\" alt=\"slot占位图\" class=\"alignright clip thumb size-medium\" /></p> \n<h3>一、引言</h3> \n<p>无论是实例组件还是 HTML 组件，传参都是免不了的。</p> \n<p>以 Web Components 组件举例，我们要传递宽度和高度，就可以使用自定义的 <code>width</code> 或 <code>height</code> 属性，例如：</p> \n<pre>&lt;by-zxx width=\"300\" height=\"150\"&gt;&lt;/by-zxx&gt;</pre> \n<p>但有时候，我们需要传递的参数是一段 HTML 内容，这个时候，这段 HTML 该如何传入组件内？</p> \n<p>此时就需要使用插槽元素 <code>&lt;slot&gt;</code>。</p> \n<h3>二、Shadow 中才有用</h3> \n<p><code>&lt;slot&gt;</code> 元素只能在 Shadow DOM 中使用才有插槽效果，否则，就可以看成是个普通的 HTML 元素。</p> \n<p>例如，直接在 <code>&lt;body&gt;</code> 元素下的这段 HTML 代码是无效的，即图片元素是无法替换“占位元素”这个内容的：</p> \n<pre>&lt;img src=\"1.png\" slot=\"some\"&gt;\n&lt;p&gt;\n    内容：&lt;slot name=\"some\"&gt;占位元素&lt;/slot&gt;\n&lt;/p&gt;</pre> \n<p>可以说，<code>&lt;slot&gt;</code> 元素就是为 Web Components 组件开发而设计的。</p> \n<h3>三、基本使用示意</h3> \n<p>下面通过一个简单的例子带大家了解下 <code>&lt;slot&gt;</code> 元素的作用。</p> \n<p>以 <code>alert</code> 弹框组件示意，弹框的结构其实是固定的，变化的是提示的内容，此时提示内容就可以作为参数传进去，然而，有时候提示内容的结构会比较复杂，是一个复合的 DOM 结构，就非常适合使用 <code>&lt;slot&gt;</code> 元素实现。</p> \n<p>我们不妨定义一个名为 ‘zxx-alert’ 的弹框组件，为了示意简明，组件样式和 HTML 结构我们放在 <code>&lt;template&gt;</code> 元素中，如下所示：</p> \n<pre>&lt;template id=\"alertTpl\"&gt;\n    &lt;style&gt;\n        :host(:not([open])) {\n            display: none;\n        }\n        :host {\n            position: fixed;\n            left: 0; top: 0;\n            height: 100%; width: 100%;\n            background-color: rgba(25, 28, 34, 0.88);\n            z-index: 19;\n            display: grid;\n            place-items: center;\n        }\n        dialog {\n            position: static;\n            display: inherit;\n        }\n    &lt;/style&gt;\n    &lt;dialog&gt;\n        &lt;slot name=\"alert\"&gt;暂无提示信息&lt;/slot&gt;\n        &lt;p&gt;\n            &lt;button&gt;确定&lt;/button&gt;\n        &lt;/p&gt;\n    &lt;/dialog&gt;\n&lt;/template&gt;</pre> \n<p>其中，就出现了插槽元素，其 HTML 代码如下所示：</p> \n<pre>&lt;slot name=\"alert\"&gt;暂无提示信息&lt;/slot&gt;</pre> \n<p>表示这部分内容是可以在外部，被自定义元素中的其他 HTML 替换掉的。</p> \n<p>当然，要想生效，需要转换成 Shadow DOM 元素，并作为自定义组件的一部分，相关执行代码如下所示：</p> \n<pre>customElements.define('zxx-alert', class extends HTMLElement {\n    constructor() {\n        super();\n        let contentDoc = document.getElementById('alertTpl').content;\n\n        const shadowRoot = this.attachShadow({\n            mode: 'open'\n        }).append(contentDoc.cloneNode(true));  \n    }\n});</pre> \n<p>此时，只需要在 <code>&lt;zxx-alert&gt;</code> 元素内设置好对应的匹配插槽的内容（通过 <code>slot</code> 属性和 <code>&lt;slot&gt;</code> 元素的 <code>name</code> 值匹配），这部分内容就可以作为提示信息出现了，例如：</p> \n<pre>&lt;zxx-alert open&gt;\n    &lt;p slot=\"alert\"&gt;插槽执行成功！&lt;/p&gt;\n&lt;/zxx-alert&gt;</pre> \n<p>此时，就有类似下图的效果：</p> \n<p><img src=\"https://image.zhangxinxu.com/image/blog/202109/2021-09-23_200148.png\" width=\"184\" height=\"180\" alt=\"alert弹框插槽实现效果\" /></p> \n<p>DOM 内容作为参数变成了 alert 提示框的提示内容了，可以看出，使用 <code>&lt;slot&gt;</code> 元素实现动态内容呈现会非常的灵活。</p> \n<p><span class=\"hidden\">//zxx: 如果你看到这段文字，说明你现在访问是体验糟糕的垃圾盗版网站，你可以访问原文获得很好的体验：https://www.zhangxinxu.com/wordpress/?p=10125（作者张鑫旭）</span></p> \n<h3>四、插槽匹配规则</h3> \n<p>一句话概括就是：</p> \n<p><code>&lt;slot&gt;</code> 插槽元素的<code>name</code> 属性值和任意 HTML 元素的 <code>slot</code> 属性值一致的时候会被匹配。</p> \n<p>具体细节如下：</p> \n<h4>1. name 值唯一</h4> \n<p><code>&lt;slot&gt;</code> 支持 <code>name</code> 属性，可以看成是身份标识，需要是唯一的，因为多个相同 name 最多只会匹配一个插槽元素。例如：</p> \n<pre>&lt;dialog&gt;\n    &lt;slot name=\"alert\"&gt;暂无提示信息&lt;/slot&gt;\n    &lt;p&gt;&lt;slot name=\"alert\"&gt;暂无提示信息 +1&lt;/slot&gt;&lt;/p&gt;\n    &lt;p&gt;\n        &lt;button&gt;确定&lt;/button&gt;\n    &lt;/p&gt;\n&lt;/dialog&gt;</pre> \n<p>下面这个 <code>name=\"alert\"</code> 插槽元素就不会被 HTML 替换，如下下图所示（下面这行文字）：</p> \n<p><img src=\"https://image.zhangxinxu.com/image/blog/202109/2021-09-23_173102.png\" width=\"206\" height=\"207\" alt=\"name多个的时候问题\" /></p> \n<h4>2. slot 属性值可以不唯一</h4> \n<p>而 <code>slot</code> 属性值可以不唯一，例如下面这段 HTML 代码如下所示：</p> \n<pre>&lt;zxx-alert open&gt;\n    &lt;p slot=\"alert\"&gt;插槽执行成功！&lt;/p&gt;\n    &lt;p slot=\"alert\"&gt;插槽执行成功 +1！&lt;/p&gt;\n&lt;/zxx-alert&gt;</pre> \n<p>会看到两段执行成功的提示，如下图所示（截自 Firefox 浏览器）：</p> \n<p><img src=\"https://image.zhangxinxu.com/image/blog/202109/2021-09-23_181956.png\" width=\"228\" height=\"235\" alt=\"slot 属性值相同Firefox下\" /></p> \n<h4>3. 一个组件可以多个插槽</h4> \n<p>同一个组件可以使用多个插槽，例如，预留一个按钮的位置：</p> \n<pre>&lt;dialog&gt;\n    &lt;slot name=\"alert\"&gt;暂无提示信息&lt;/slot&gt;\n    &lt;p&gt;\n        &lt;button&gt;确定&lt;/button&gt;\n        &lt;slot name=\"button\"&gt;&lt;/slot&gt;\n    &lt;/p&gt;\n&lt;/dialog&gt;</pre> \n<pre>&lt;zxx-alert open&gt;\n    &lt;p slot=\"alert\"&gt;插槽执行成功！&lt;/p&gt;\n    &lt;button slot=\"button\"&gt;取消&lt;/button&gt;\n&lt;/zxx-alert&gt;</pre> \n<p>此时可以看到，不仅提示内容被插入了，取消按钮也一并插入到了弹框之中，效果如下截图所示：</p> \n<p><img src=\"https://image.zhangxinxu.com/image/blog/202109/2021-09-23_195434.png\" width=\"172\" height=\"179\" alt=\"多个插槽同时使用示意\" /></p> \n<h4>4. 必须是组件的子元素</h4> \n<p>用来匹配的元素也必须写在自定义元素组件中，作为子元素存在，例如下面配对元素在自定义元素之外，是没有插槽效果的：</p> \n<pre>&lt;p slot=\"alert\"&gt;插槽执行成功！&lt;/p&gt;\n&lt;zxx-alert open&gt;&lt;/zxx-alert&gt;</pre> \n<p>以及下面这种，匹配元素不是子元素，而是子元素的子元素，也是无法作为有效的插槽显示的：</p> \n<pre>&lt;zxx-alert open&gt;\n    &lt;p slot=\"alert\"&gt;插槽执行成功！&lt;/p&gt;\n    &lt;div&gt;\n        &lt;button slot=\"button\"&gt;取消&lt;/button&gt;\n    &lt;/div&gt;\n&lt;/zxx-alert&gt;</pre> \n<p>效果如下，可以看到并没有取消按钮：</p> \n<p><img src=\"https://image.zhangxinxu.com/image/blog/202109/2021-09-23_200148.png\" width=\"184\" height=\"180\" alt=\"取消按钮插槽没生效\" /></p> \n<p>即使 <code>&lt;div&gt;</code> 元素设置 <code>display:contents</code> 也无效。</p> \n<h3>五、slot 元素中的事件</h3> \n<p>以弹框中的取消按钮举例，如果给取消按钮的插槽添加事件呢？</p> \n<pre>&lt;zxx-alert open&gt;\n    &lt;p slot=\"alert\"&gt;插槽执行成功！&lt;/p&gt;\n    &lt;button slot=\"button\"&gt;取消&lt;/button&gt;\n&lt;/zxx-alert&gt;</pre> \n<p>是这样的，虽然视觉上，匹配元素替换了插槽元素，实际上，两者的位置并未发生变化，其 HTML 结构关系如下图所示：</p> \n<p><img src=\"https://image.zhangxinxu.com/image/blog/202109/2021-09-23_200720.png\" width=\"335\" height=\"270\" alt=\"slot元素位置关系\" /></p> \n<p>因此，要实现点击弹框中的取消按钮关闭弹框，只需要在原始的 <code>&lt;slot&gt;</code> 元素或者匹配的 <code>&lt;button&gt;</code> 元素上写事件就可以，DOM 层级关系依然按照原始的 DOM 关系处理就可以了。</p> \n<p>例如，下面两种处理都可以关闭弹框：</p> \n<pre><span style=\"color:green\">// 1. 匹配按钮元素添加事件</span>\n&lt;zxx-alert open&gt;\n    &lt;p slot=\"alert\"&gt;插槽执行成功！&lt;/p&gt;\n    &lt;button slot=\"button\" onclick=\"this.parentElement.removeAttribute('open')&gt;取消&lt;/button&gt;\n&lt;/zxx-alert&gt;</pre> \n<p>或者在定义 Web 组件的时候处理（只显示关键代码）：</p> \n<pre>customElements.define('zxx-alert', class extends HTMLElement {\n    constructor() {\n        <span style=\"color:green\">// 同上</span>\n    }\n    connectedCallback () {\n        <span style=\"color:green\">// 直接 slot 元素上添加事件</span>\n        this.shadowRoot.querySelector('[name=\"button\"]').onclick = () =&gt; {\n            this.toggleAttribute('open', false);\n        };\n    }\n});</pre> \n<p>眼见为实，您可以狠狠地点击这里：<a href=\"https://www.zhangxinxu.com/study/202109/html-slot-dialog-demo.php\" rel=\"noopener\" target=\"_blank\">HTML slot元素实现弹框demo</a></p> \n<h3>六、特殊的display值</h3> \n<p>据我所知，<code>&lt;slot&gt;</code> 元素是唯一 <code>display</code> 默认值是 <code>contents</code> 的元素（如果错误，欢迎指正）。</p> \n<p><img src=\"https://image.zhangxinxu.com/image/blog/202109/2021-09-23_203317.png\" width=\"373\" height=\"165\" alt=\"slot元素默认display值\" /></p> \n<h4>display:contents是什么？</h4> \n<p><code>display:contents</code> 的作用就是其名字所表示的意思，只有内容盒子，其余所有盒子都取消，这就产生了下面这些现象：</p> \n<ul> \n <li>所有的布局都需要动用盒模型，因此 <code>display:contents</code> 元素没有任何布局效果；例如，下面的 <code>&lt;item&gt;</code> 元素虽然被 <code>&lt;div&gt;</code> 嵌套了，但依然是 flex 子项，因为这层嵌套的 <code>&lt;div&gt;</code> 不参与布局。 <pre>&lt;section style=\"display:flex;height:100px;\"&gt;\n  &lt;div style=\"display:contents;\"&gt;\n    &lt;item style=\"flex:1;background:skyblue;\"&gt;1&lt;/item&gt;\n    &lt;item style=\"flex:1;background:aliceblue;\"&gt;2&lt;/item&gt;\n    &lt;item style=\"flex:1;background:skyblue;\"&gt;3&lt;/item&gt;\n  &lt;/div&gt;\n&lt;/section&gt;</pre> <p>渲染效果如下：</p> <p><img src=\"https://image.zhangxinxu.com/image/blog/202109/2021-09-23_203030.png\" width=\"553\" height=\"117\" alt=\"display:contents不参与布局\"> </img></p></li> \n <li>宽高背景等都是作用在非内容盒子上的，因此 <code>display:contents</code> 元素无法设置尺寸，无法设置背景色；</li> \n <li><code>display:contents</code> 元素只能设置与文字内容相关的CSS，例如color颜色，font-size字号等。</li> \n</ul> \n<p>总而言之，<code>display:contents</code>就是“占着茅坑不拉屎”的意思，如果对这个 CSS 声明的作用没有多大概念，想想 <code>&lt;slot&gt;</code> 元素就好了。</p> \n<p>非本文重点，不再进一步展开了。</p> \n<h3>七、结尾再说点什么</h3> \n<p>刚刚尝试录了点 <a href=\"https://l-ui.com/\" rel=\"noopener\" target=\"_blank\">LuLu UI</a> 的教程视频，效果可以说惨不忍睹形容，光线，背景都不忍直视，当然还有表达和陈述的问题，看来录视频也是门很深的学问，慢慢积累吧。</p> \n<p><a href=\"https://bbs.cssworld.cn/\" rel=\"noopener\" target=\"_blank\">CSS世界论坛首页</a>前两天弄了下，看起来有点样子了，照着之前 Discuz 的 UI 弄了下，其实是 GitHub Issues 的数据，之前 Discuz 有漏洞，网站总是被攻击，我给下掉了，老数据我会有空的时候整理上去的。</p> \n<p>其他就没什么想说的了，这两天特别的困，不知道为什么，才23:49，就困得不行，录视频的时候眼睛也是不停地眨，难道是岁月不饶人的表现。</p> \n<p>对了，想起来了，补充下，兼容性忘记说了，<code>&lt;slot&gt;</code> 元素兼容性和 Web 组件开发 V2 规范一致，现代浏览器都支持。</p> \n<p><img src=\"https://image.zhangxinxu.com/image/blog/202109/2021-09-24_000604.png\" width=\"632\" height=\"218\" alt=\"slot兼容性图\" class=\"alignnone size-medium\" /></p> \n<p>这回真的结尾了，如果你觉得本文写得还不错，欢迎分享到朋友圈，微博等。</p> \n<p>比心，感谢！</p> \n<p><img loading=\"lazy\" src=\"https://image.zhangxinxu.com/image/emtion/emoji/2600.svg\" width=\"20\" height=\"20\" align=\"absmiddle\" /></p> \n<p>本文为原创文章，欢迎分享，勿全文转载，如果实在喜欢，可收藏，永不过期，且会及时更新知识点及修正错误，阅读体验也更好。<br /> 本文地址：<a href=\"https://www.zhangxinxu.com/wordpress/?p=10125\">https://www.zhangxinxu.com/wordpress/?p=10125</a></p> \n<p>（本篇完）</p>","descriptionType":"html","publishedDate":"Thu, 23 Sep 2021 16:04:44 +0000","feedId":5706,"bgimg":"https://image.zhangxinxu.com/image/blog/202109/slot-cover.png","linkMd5":"15d3029fb19cd5a302fd654d96225ac3","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn28@2020_6/2021/09/27/17-06-32-276_253d21b9788f6938.webp","destWidth":484,"destHeight":297,"sourceBytes":3499,"destBytes":6026,"author":"张 鑫旭","articleImgCdnMap":{"https://image.zhangxinxu.com/image/blog/202109/slot-cover.png":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn28@2020_6/2021/09/27/17-06-32-276_253d21b9788f6938.webp","https://image.zhangxinxu.com/image/blog/202109/2021-09-23_200148.png":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn60@2020_5/2021/09/27/17-06-34-747_c67a6199a7fb71e3.webp","https://image.zhangxinxu.com/image/blog/202109/2021-09-23_173102.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn43@2020_5/2021/09/27/17-07-35-443_c16ed146692fc13f.webp","https://image.zhangxinxu.com/image/blog/202109/2021-09-23_181956.png":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn40@2020_4/2021/09/27/17-06-34-866_ab8ba2c01bec2ad8.webp","https://image.zhangxinxu.com/image/blog/202109/2021-09-23_195434.png":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn46@2020_6/2021/09/27/17-06-34-846_299694c445fe0dec.webp","https://image.zhangxinxu.com/image/blog/202109/2021-09-23_200720.png":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn49@2020_4/2021/09/27/17-06-34-662_f24ae912a29c7ded.webp","https://image.zhangxinxu.com/image/blog/202109/2021-09-23_203317.png":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn56@2020_1/2021/09/27/17-06-34-253_5a4187a55a988dda.webp","https://image.zhangxinxu.com/image/blog/202109/2021-09-23_203030.png":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn31@2020_4/2021/09/27/17-06-34-720_6cbd8718819ed5fd.webp","https://image.zhangxinxu.com/image/blog/202109/2021-09-24_000604.png":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn33@2020_3/2021/09/27/17-06-34-966_aed79ca2cff60e56.webp","https://image.zhangxinxu.com/image/emtion/emoji/2600.svg":null},"publishedOrCreatedDate":1632762388590}],"record":{"createdTime":"2021-09-28 01:06:28","updatedTime":"2021-09-28 01:06:28","feedId":5706,"fetchDate":"Mon, 27 Sep 2021 17:06:28 +0000","fetchMs":2850,"handleMs":11,"totalMs":70563,"newArticles":0,"totalArticles":10,"status":1,"type":0,"ip":"4cf9ab886509ef3fd2ece0a16b714d9c","hostName":"europe61*","requestId":"2bbbc7588f164e1f854b0dee4bae682e_5706","contentType":"application/rss+xml; charset=UTF-8","totalBytes":62766,"bgimgsTotal":1,"bgimgsGithubTotal":1,"articlesImgsTotal":10,"articlesImgsGithubTotal":9,"successGithubMap":{"myreaderx25":1,"myreaderx10":1,"myreaderx3":1,"myreaderx22":1,"myreaderx11":1,"myreaderx13":1,"myreaderx30":1,"myreaderx5oss":1,"myreaderx19":1},"failGithubMap":{"myreaderx23":1}},"feed":{"createdTime":"2020-08-25 04:30:15","updatedTime":"2020-09-01 11:15:46","id":5706,"name":"张鑫旭-鑫空间-鑫生活","url":"http://www.zhangxinxu.com/wordpress/feed/","subscriber":null,"website":null,"icon":"https://www.zhangxinxu.com/favicon.ico","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx61/cdn89@2020_1/2020/09/01/03-15-46-738_9a339309f46b07b8.ico","description":"提高前端技术，先从使用谷歌搜索做起","weekly":null,"link":null},"noPictureArticleList":[{"createdTime":"2021-09-28 01:07:35","updatedTime":"2021-09-28 01:07:35","id":null,"feedId":5706,"linkMd5":"15d3029fb19cd5a302fd654d96225ac3"}],"tmpCommonImgCdnBytes":6026,"tmpBodyImgCdnBytes":56740,"tmpBgImgCdnBytes":0,"extra4":{"start":1632762385230,"total":0,"statList":[{"spend":3350,"msg":"获取xml内容"},{"spend":11,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":63201,"msg":"正文链接上传到cdn"}]},"extra5":10,"extra6":10,"extra7ImgCdnFailResultVector":[{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/emtion/emoji/2600.svg","sourceStatusCode":200,"destWidth":0,"destHeight":0,"sourceBytes":782,"destBytes":782,"feedId":5706,"totalSpendMs":2710,"convertSpendMs":0,"createdTime":"2021-09-28 01:06:32","host":"europe69*","referer":"https://www.zhangxinxu.com/wordpress/?p=10125","linkMd5ListStr":"15d3029fb19cd5a302fd654d96225ac3","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn63/contents/2021/09/27/17-06-35-178_3aa607479243e22b.svg","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Mon, 27 Sep 2021 17:06:35 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["DB7A:1256C:1D7BD5B:1E08274:6151FA1B"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1632765307"],"x-ratelimit-resource":["core"],"x-ratelimit-used":["61"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn63/contents/2021/09/27/17-06-35-178_3aa607479243e22b.svg","historyStatusCode":[],"spendMs":147},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"782 B","destSize":"782 B","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/emtion/emoji/2600.svg","sourceStatusCode":200,"destWidth":0,"destHeight":0,"sourceBytes":782,"destBytes":782,"feedId":5706,"totalSpendMs":983,"convertSpendMs":0,"createdTime":"2021-09-28 01:06:35","host":"us-029*","referer":"https://www.zhangxinxu.com/wordpress/?p=10125","linkMd5ListStr":"15d3029fb19cd5a302fd654d96225ac3","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn63/contents/2021/09/27/17-06-36-380_3aa607479243e22b.svg","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Mon, 27 Sep 2021 17:06:36 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["B1D6:0C25:2DBF474:89E79EC:6151FA1C"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1632765307"],"x-ratelimit-resource":["core"],"x-ratelimit-used":["61"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn63/contents/2021/09/27/17-06-36-380_3aa607479243e22b.svg","historyStatusCode":[],"spendMs":31},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"782 B","destSize":"782 B","compressRate":"100%"},null],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://us-006.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-013.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-018.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe69.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-002.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-51.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]},"http://us-030.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-014.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-029.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202109/slot-cover.png","sourceStatusCode":200,"destWidth":484,"destHeight":297,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn28@2020_6/2021/09/27/17-06-32-276_253d21b9788f6938.webp","sourceBytes":3499,"destBytes":6026,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":1683,"convertSpendMs":5,"createdTime":"2021-09-28 01:06:30","host":"us-038*","referer":"https://www.zhangxinxu.com/wordpress/?p=10125","linkMd5ListStr":"15d3029fb19cd5a302fd654d96225ac3,15d3029fb19cd5a302fd654d96225ac3","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"3.4 KB","destSize":"5.9 KB","compressRate":"172.2%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202109/2021-09-23_203317.png","sourceStatusCode":200,"destWidth":373,"destHeight":165,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn56@2020_1/2021/09/27/17-06-34-253_5a4187a55a988dda.webp","sourceBytes":5026,"destBytes":7318,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":1887,"convertSpendMs":5,"createdTime":"2021-09-28 01:06:32","host":"us-018*","referer":"https://www.zhangxinxu.com/wordpress/?p=10125","linkMd5ListStr":"15d3029fb19cd5a302fd654d96225ac3","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"4.9 KB","destSize":"7.1 KB","compressRate":"145.6%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202109/2021-09-23_200720.png","sourceStatusCode":200,"destWidth":335,"destHeight":270,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn49@2020_4/2021/09/27/17-06-34-662_f24ae912a29c7ded.webp","sourceBytes":9121,"destBytes":14946,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":2224,"convertSpendMs":14,"createdTime":"2021-09-28 01:06:32","host":"us-029*","referer":"https://www.zhangxinxu.com/wordpress/?p=10125","linkMd5ListStr":"15d3029fb19cd5a302fd654d96225ac3","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"8.9 KB","destSize":"14.6 KB","compressRate":"163.9%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202109/2021-09-23_200148.png","sourceStatusCode":200,"destWidth":184,"destHeight":180,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn60@2020_5/2021/09/27/17-06-34-747_c67a6199a7fb71e3.webp","sourceBytes":1485,"destBytes":2320,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":2295,"convertSpendMs":3,"createdTime":"2021-09-28 01:06:32","host":"us-006*","referer":"https://www.zhangxinxu.com/wordpress/?p=10125","linkMd5ListStr":"15d3029fb19cd5a302fd654d96225ac3,15d3029fb19cd5a302fd654d96225ac3","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.5 KB","destSize":"2.3 KB","compressRate":"156.2%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202109/2021-09-23_203030.png","sourceStatusCode":200,"destWidth":553,"destHeight":117,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn31@2020_4/2021/09/27/17-06-34-720_6cbd8718819ed5fd.webp","sourceBytes":1326,"destBytes":1238,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":2300,"convertSpendMs":5,"createdTime":"2021-09-28 01:06:32","host":"us-013*","referer":"https://www.zhangxinxu.com/wordpress/?p=10125","linkMd5ListStr":"15d3029fb19cd5a302fd654d96225ac3","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.3 KB","destSize":"1.2 KB","compressRate":"93.4%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202109/2021-09-23_195434.png","sourceStatusCode":200,"destWidth":172,"destHeight":179,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn46@2020_6/2021/09/27/17-06-34-846_299694c445fe0dec.webp","sourceBytes":1655,"destBytes":2802,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":2408,"convertSpendMs":4,"createdTime":"2021-09-28 01:06:32","host":"us-030*","referer":"https://www.zhangxinxu.com/wordpress/?p=10125","linkMd5ListStr":"15d3029fb19cd5a302fd654d96225ac3","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.6 KB","destSize":"2.7 KB","compressRate":"169.3%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202109/2021-09-23_181956.png","sourceStatusCode":200,"destWidth":228,"destHeight":235,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn40@2020_4/2021/09/27/17-06-34-866_ab8ba2c01bec2ad8.webp","sourceBytes":2283,"destBytes":4070,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":2420,"convertSpendMs":3,"createdTime":"2021-09-28 01:06:32","host":"us-002*","referer":"https://www.zhangxinxu.com/wordpress/?p=10125","linkMd5ListStr":"15d3029fb19cd5a302fd654d96225ac3","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"2.2 KB","destSize":"4 KB","compressRate":"178.3%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202109/2021-09-24_000604.png","sourceStatusCode":200,"destWidth":632,"destHeight":218,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn33@2020_3/2021/09/27/17-06-34-966_aed79ca2cff60e56.webp","sourceBytes":9820,"destBytes":20292,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":2544,"convertSpendMs":9,"createdTime":"2021-09-28 01:06:32","host":"us-014*","referer":"https://www.zhangxinxu.com/wordpress/?p=10125","linkMd5ListStr":"15d3029fb19cd5a302fd654d96225ac3","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"9.6 KB","destSize":"19.8 KB","compressRate":"206.6%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202109/2021-09-23_173102.png","sourceStatusCode":200,"destWidth":206,"destHeight":207,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn43@2020_5/2021/09/27/17-07-35-443_c16ed146692fc13f.webp","sourceBytes":2145,"destBytes":3754,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":1756,"convertSpendMs":3,"createdTime":"2021-09-28 01:07:33","host":"us-006*","referer":"https://www.zhangxinxu.com/wordpress/?p=10125","linkMd5ListStr":"15d3029fb19cd5a302fd654d96225ac3","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"2.1 KB","destSize":"3.7 KB","compressRate":"175%"}],"successGithubMap":{"myreaderx25":1,"myreaderx10":1,"myreaderx3":1,"myreaderx22":1,"myreaderx11":1,"myreaderx13":1,"myreaderx30":1,"myreaderx5oss":1,"myreaderx19":1},"failGithubMap":{"myreaderx23":1}}