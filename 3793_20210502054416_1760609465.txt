{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2021-05-02 13:42:53","updatedTime":"2021-05-02 13:42:53","title":"Model-Based RL for Decentralized Multi-agent Navigation","link":"http://feedproxy.google.com/~r/blogspot/gJZg/~3/dneVgPPqCRA/model-based-rl-for-decentralized-multi.html","description":"<span class=\"byline-author\">Posted by Rose E. Wang, Student Researcher and Aleksandra Faust, Staff Research Scientist, Google Research</span> <p>As robots become more ubiquitous in day-to-day life, the complexity of their interactions with each other and with the environment grows. In a controlled environment, such as a lab, multiple robots can coordinate their actions and efforts through a <a href=\"https://pdfs.semanticscholar.org/bfde/b90cb2493713e7838dcff8034a22e4d1ef42.pdf\">centralized planner</a> that facilitates communication between individual agents. And while much research has been done to address reliable <a href=\"https://ieeexplore.ieee.org/document/8643443\">sensor-informed</a> <a href=\"https://arxiv.org/abs/1810.00352\">goal navigation</a>, in many real-world applications aligning goals across independent robotic agents must be done without a centralized planner, which poses non-trivial challenges.  </p><p>An example of such a challenging <a href=\"https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7139692&amp;casa_token=Rcnnu_U-sFwAAAAA:OXHAD51tRsMhk5QSElfeLcheO4skjFsTsSnnZjgxZuuXDxuB_ryKvsKyH-bsrn8ezTOx_bP1\">decentralized</a> task is the <a href=\"https://arxiv.org/pdf/1402.5639.pdf\">rendezvous</a> task, in which multiple agents must agree upon a time and place at which they can meet, without explicitly communicating with one another. This <a href=\"https://arxiv.org/pdf/2003.11778.pdf\">goal alignment</a> task plays an important role in real world multiagent and human-robot settings, e.g., performing <a href=\"http://m.roboticsproceedings.org/rss11/p31.pdf\">object handovers</a> or determining <a href=\"https://www.cs.utexas.edu/~pstone/Papers/bib2html/b2hd-AAAI10-adhoc.html\">goals on the fly</a>. Solving the decentralized rendezvous task in this situation depends not just on the obstacles in the environment, but also the policies and dynamics of each agent. Addressing potential miscoordination and dealing with noisy sensor data depends on the agents’ ability to model the motions of other agents as well as their own, and to adapt to diverging intentions while using limited information. </p><table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto;\"><tbody><tr><td style=\"text-align: center;\"><a href=\"https://1.bp.blogspot.com/-xsrSi3N7gSs/YIhwcUlyeEI/AAAAAAAAHeo/FxfyrqirVQssh9oP2GyKGKQxFxB9578hwCLcBGAsYHQ/s772/image4.png\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" data-original-height=\"518\" data-original-width=\"772\" height=\"269\" src=\"https://1.bp.blogspot.com/-xsrSi3N7gSs/YIhwcUlyeEI/AAAAAAAAHeo/FxfyrqirVQssh9oP2GyKGKQxFxB9578hwCLcBGAsYHQ/w400-h269/image4.png\" width=\"400\" /></a></td></tr><tr><td class=\"tr-caption\" style=\"text-align: center;\">An example of two independently controlled robots separated by obstacles that share the objective of meeting each other. How should they move in order to meet? Example trajectories are illustrated in red and blue arrows for each robot. Each robot makes an independent decision of where to go based on their own observations.</td></tr></tbody></table><p>In “<a href=\"https://arxiv.org/pdf/2003.06906.pdf\">Model-based Reinforcement Learning for Decentralized Multiagent Rendezvous</a>”, presented at <a href=\"https://sites.google.com/corp/robot-learning.org/corl2020\">CoRL 2020</a>, we propose an holistic approach to address the challenges of the decentralized rendezvous task, which we call hierarchical predictive planning (<em>HPP</em>). This is a decentralized, <a href=\"https://www.cs.cmu.edu/~tom/10701_sp11/slides/Kaelbling.pdf#page=15\">model-based reinforcement learning</a> (RL) system that enables agents to align their goals on the fly in the real world. We evaluate <em>HPP </em>in a mixture of real-world and simulated environments and compare it to several learning-based planning and centralized baselines. In those evaluations, we show that <em>HPP</em> is able to more effectively predict and align trajectories, avoid miscoordinations, and directly transfer to the real world without additional fine-tuning.  </p><p><b>Putting Together Prediction, Planning and Control</b><br />Akin to a standard navigation pipeline, our learning-based system consists of three modules: prediction, planning, and control. Each agent employs the prediction model to learn agent motion and to predict the future positions of itself (the <em>ego-agent</em>) and others based on its own observations (e.g., from LiDAR and team position information) of other agents’ behaviors and navigation patterns. So, each agent learns two prediction models, one for its own motion and one for the other agent. These motion predictors constitute the prediction module, and are used by each agent’s planning module.  </p><p>The output of the prediction module — the estimate of where each agent, both the ego-agent and the other agents, is most likely to be given the ego-agent’s own sensor observations — is useful information for the planning module, which evaluates different goal locations and maintains a belief distribution over where the team should converge. The belief distribution is periodically updated using evaluations provided by the prediction model. An agent samples from this belief distribution to update the goal to which it should navigate.  </p><p>The selected goal is passed to the agent’s control module, which is equipped with a pre-trained, imperfect navigation policy that can navigate to a given location in the obstacle-laden environment. The control policy then determines what action the robot should execute.  </p><p>This process of observing other agents, updating belief distributions and navigating to an updated goal repeats until agents have successfully rendezvoused. While the hierarchical planning and control setup <a href=\"https://arxiv.org/abs/1903.09870\">are not</a> <a href=\"https://arxiv.org/abs/1710.03937\">unusual</a>, our work closes the loop between the control and planning for decentralized multiagent systems by use of the sensor-informed prediction module.  </p><p><b>Training the Prediction Models</b><br /><em>HPP</em> trains motion predictors in simulation, assuming that each agent is controlled by a hidden, perhaps suboptimal, control policy capable of avoiding obstacles. The key difficulty lies in training prediction models without access to other agents’ sensor observations and control policies.  </p><p>The predictors are trained via self-supervision. To collect the training data, we randomly place all the agents and obstacles in an environment, and each agent is given a random goal (unknown to other agents). As the agents move toward their respective goals, each agent records the experience — its sensor observations and the poses of all agents (itself and other agents). Next, from the recorded experience, the agent learns a separate predictor for each agent in the team including itself (target agent). The training dataset consists of ego-agent initial sensor observations, target agent’s pose and goal, labeled with future ego-observations and target agent poses. The goal and labels are inferred from the recorded experience. </p><p>As a result, the predictors learn <em>temporal causality</em> of the present and future ego-agent’s observations and target agent’s poses, conditioned on the target agent’s assumed goals — in other words the models predict where each agent will be in the future based on the present. The predictor training is done only with the information available to agents at the runtime, and in environments independent from the deployment environments. </p><table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto;\"><tbody><tr><td style=\"text-align: center;\"><a href=\"https://1.bp.blogspot.com/-w-sDOcLNS4s/YIhwkz8qUqI/AAAAAAAAHes/0_0cSPsFUh0RXlpfMEMExAIEzNbE64iiQCLcBGAsYHQ/s960/image1.jpg\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" data-original-height=\"540\" data-original-width=\"960\" height=\"225\" src=\"https://1.bp.blogspot.com/-w-sDOcLNS4s/YIhwkz8qUqI/AAAAAAAAHes/0_0cSPsFUh0RXlpfMEMExAIEzNbE64iiQCLcBGAsYHQ/w400-h225/image1.jpg\" width=\"400\" /></a></td></tr><tr><td class=\"tr-caption\" style=\"text-align: center;\">The training environment for the model prediction models. The environment is filled with randomly filled obstacles. All agents (<strong>left</strong> in blue, <strong>upper right</strong> in red) are given the same random goal (<strong>center</strong> in green) and move with their own control modules towards it.</td></tr></tbody></table><p><b>Selecting Goals for Alignment</b><br />A model-based RL planner for each agent uses the learned predictors in the deployment environments to guide the agents towards the rendezvous point. The planner takes into account what it believes the other agents would do when also completing the rendezvous task.  </p><table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto;\"><tbody><tr><td style=\"text-align: center;\"><a href=\"https://1.bp.blogspot.com/-kyZDitCJXfE/YIhwrrUctLI/AAAAAAAAHew/Xe7VvRcTy9MjtxMpH0UU_YPOxfZ98-nvgCLcBGAsYHQ/s1000/image7.gif\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" data-original-height=\"562\" data-original-width=\"1000\" height=\"360\" src=\"https://1.bp.blogspot.com/-kyZDitCJXfE/YIhwrrUctLI/AAAAAAAAHew/Xe7VvRcTy9MjtxMpH0UU_YPOxfZ98-nvgCLcBGAsYHQ/w640-h360/image7.gif\" width=\"640\" /></a></td></tr><tr><td class=\"tr-caption\" style=\"text-align: center;\">HPP illustration. Each robot independently considers several potential rendezvous points, and evaluates each point based how close it believes that the agents can get.</td></tr></tbody></table><p>To perform this reasoning, each agent independently samples a series of potential goals and selects the goal that it believes it would be the most likely to succeed. This process effectively simulates a centralized planner for fictitious agents by using the prediction models to predict trajectories of those agents moving to a fixed goal. Conditioned on a proposed goal, the algorithm predicts the poses of the agents in the future, which are generated from sequential roll outs of the prediction models. Each goal is then evaluated by scoring the anticipated system state using the task reward favoring goals that bring agents closer together. We use the <a href=\"https://link.springer.com/article/10.1007/s10479-005-5724-z\">cross-entropy method</a> (CEM) to convert these goal evaluations into belief updates over potential rendezvous points. Finally, the agent’s planner selects a goal for itself from this new belief distribution and passes this goal to the agent’s control module.  </p><table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto;\"><tbody><tr><td style=\"text-align: center;\"><a href=\"https://1.bp.blogspot.com/-hwu17vDZ9Lk/YIh0HAb1FJI/AAAAAAAAHfg/uhZFCdKZkncxNIIFkKcUT-VYR27ZpljEACLcBGAsYHQ/s536/GoalEvaluation.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><img border=\"0\" data-original-height=\"478\" data-original-width=\"536\" src=\"https://1.bp.blogspot.com/-hwu17vDZ9Lk/YIh0HAb1FJI/AAAAAAAAHfg/uhZFCdKZkncxNIIFkKcUT-VYR27ZpljEACLcBGAsYHQ/s320/GoalEvaluation.png\" width=\"320\" /></a></td></tr><tr><td class=\"tr-caption\" style=\"text-align: center;\">A simple illustration of the goal evaluation. At the end of a simulated trajectory, the agents (red, <b>left</b>, and blue, <b>right</b>) are either far (<b>top</b>) or close (<b>bottom</b>) to each other. The goal in the bottom image is better than the goal on top because agents end up closer to each other.</td></tr></tbody></table><p><b>Results</b><br />We compare <em>HPP </em>against several baselines — <a href=\"https://arxiv.org/pdf/1706.02275.pdf\">MADDPG</a> (learning-based), <a href=\"http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.35.1853\">RRT</a> (planning) with CEM, and centralized baselines that use heuristics for selecting the agent’s rendezvous point — in a mixture of real-world and simulated environments. </p><table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto;\"><tbody><tr><td style=\"text-align: center;\"><a href=\"https://1.bp.blogspot.com/-jfhAfU2pkhI/YIhxB6bPQAI/AAAAAAAAHfE/ssku4cBrBqckrFPJyGYXc5qnIfD0oolVgCLcBGAsYHQ/s1247/image8.png\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" data-original-height=\"365\" data-original-width=\"1247\" height=\"188\" src=\"https://1.bp.blogspot.com/-jfhAfU2pkhI/YIhxB6bPQAI/AAAAAAAAHfE/ssku4cBrBqckrFPJyGYXc5qnIfD0oolVgCLcBGAsYHQ/w640-h188/image8.png\" width=\"640\" /></a></td></tr><tr><td class=\"tr-caption\" style=\"text-align: center;\">Evaluation environments, each of which are independent of the training environment for the agent’s control policy and prediction modules.</td></tr></tbody></table><p>There are two main takeaways from our results. One is that <em>HPP</em> enables agents to predict and align trajectories, avoiding miscoordinations. For example:  </p><div style=\"text-align: center;\"><a href=\"https://1.bp.blogspot.com/-_vv-QvkRVHg/YIhxKGS_8ZI/AAAAAAAAHfM/ENJYMCgtf5IYCWAR2eROfOM0YU5OCxagQCLcBGAsYHQ/s600/image3.gif\"><img border=\"0\" data-original-height=\"338\" data-original-width=\"600\" height=\"360\" src=\"https://1.bp.blogspot.com/-_vv-QvkRVHg/YIhxKGS_8ZI/AAAAAAAAHfM/ENJYMCgtf5IYCWAR2eROfOM0YU5OCxagQCLcBGAsYHQ/w640-h360/image3.gif\" width=\"640\" /></a></div><br />The second takeaway is that HPP transfers directly into the real world without additional training. For example:  <div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://1.bp.blogspot.com/-cQIoEoSzd4A/YIhxS5ZYMXI/AAAAAAAAHfQ/yVnT_NKQ0p0IHKykYawrn1aIzRnDytsLQCLcBGAsYHQ/s600/image6.gif\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"338\" data-original-width=\"600\" height=\"360\" src=\"https://1.bp.blogspot.com/-cQIoEoSzd4A/YIhxS5ZYMXI/AAAAAAAAHfQ/yVnT_NKQ0p0IHKykYawrn1aIzRnDytsLQCLcBGAsYHQ/w640-h360/image6.gif\" width=\"640\" /></a></div><p><b>Conclusion</b><br />This work presents HPP, a model-based RL approach for decentralized multiagent coordination. Agents first learn to predict where they and their teammates are going to be from their own sensors and decide and navigate to a common goal. Our experiments demonstrate the method generalizes to new environments and handles miscoordination while making no assumptions about the dynamics of other agents. This may be of interest to the larger multiagent research community as a real-world example of a decentralized task using noisy sensors and imperfect controllers, to the motion planning community as an example of a learning-based planning system that closes the loop between the planner and controller, and to the RL community as an example of model-based RL as feedback in a hierarchical, self-supervised prediction setting. </p><p><b>Acknowledgements</b><br /><em>This research was done by Rose E. Wang, J. Chase Kew, Dennis Lee, Tsang-Wei Edward Lee, Tingnan Zhang, Brian Ichter, Jie Tan, Aleksandra Faust with special thanks to Michael Everett, Oscar Ramirez and Igor Mordatch for the insightful discussions.</em></p><div class=\"feedflare\">\n<a href=\"http://feeds.feedburner.com/~ff/blogspot/gJZg?a=dneVgPPqCRA:K9tKNDLWNAQ:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/blogspot/gJZg?d=yIl2AUoC8zA\" border=\"0\"></img></a>\n</div><img src=\"http://feeds.feedburner.com/~r/blogspot/gJZg/~4/dneVgPPqCRA\" height=\"1\" width=\"1\" alt=\"\"/>","descriptionType":"html","publishedDate":"Wed, 28 Apr 2021 17:09:00 +0000","feedId":3793,"bgimg":"https://1.bp.blogspot.com/-xsrSi3N7gSs/YIhwcUlyeEI/AAAAAAAAHeo/FxfyrqirVQssh9oP2GyKGKQxFxB9578hwCLcBGAsYHQ/w400-h269/image4.png","linkMd5":"25af6933bfd628e469c0d26c012a67b8","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn94@2020_2/2021/05/02/05-42-53-886_02e320edcde39100.webp","destWidth":400,"destHeight":269,"sourceBytes":135767,"destBytes":14050,"author":"Google AI","articleImgCdnMap":{"https://1.bp.blogspot.com/-xsrSi3N7gSs/YIhwcUlyeEI/AAAAAAAAHeo/FxfyrqirVQssh9oP2GyKGKQxFxB9578hwCLcBGAsYHQ/w400-h269/image4.png":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn94@2020_2/2021/05/02/05-42-53-886_02e320edcde39100.webp","https://1.bp.blogspot.com/-w-sDOcLNS4s/YIhwkz8qUqI/AAAAAAAAHes/0_0cSPsFUh0RXlpfMEMExAIEzNbE64iiQCLcBGAsYHQ/w400-h225/image1.jpg":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn17@2020_1/2021/05/02/05-42-54-231_431c1fb19caceff6.webp","https://1.bp.blogspot.com/-kyZDitCJXfE/YIhwrrUctLI/AAAAAAAAHew/Xe7VvRcTy9MjtxMpH0UU_YPOxfZ98-nvgCLcBGAsYHQ/w640-h360/image7.gif":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn14@2020_1/2021/05/02/05-42-57-318_8602777b9c1bb63f.webp","https://1.bp.blogspot.com/-hwu17vDZ9Lk/YIh0HAb1FJI/AAAAAAAAHfg/uhZFCdKZkncxNIIFkKcUT-VYR27ZpljEACLcBGAsYHQ/s320/GoalEvaluation.png":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn6@2020_4/2021/05/02/05-42-54-233_98de467c60a1de34.webp","https://1.bp.blogspot.com/-jfhAfU2pkhI/YIhxB6bPQAI/AAAAAAAAHfE/ssku4cBrBqckrFPJyGYXc5qnIfD0oolVgCLcBGAsYHQ/w640-h188/image8.png":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn99@2020_1/2021/05/02/05-42-54-395_bee5f84e18bdb668.webp","https://1.bp.blogspot.com/-_vv-QvkRVHg/YIhxKGS_8ZI/AAAAAAAAHfM/ENJYMCgtf5IYCWAR2eROfOM0YU5OCxagQCLcBGAsYHQ/w640-h360/image3.gif":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn25@2020_4/2021/05/02/05-44-15-747_ba518ff91d6114e8.webp","https://1.bp.blogspot.com/-cQIoEoSzd4A/YIhxS5ZYMXI/AAAAAAAAHfQ/yVnT_NKQ0p0IHKykYawrn1aIzRnDytsLQCLcBGAsYHQ/w640-h360/image6.gif":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn19@2020_5/2021/05/02/05-42-57-553_96c9d9abd7da0fe6.webp","http://feeds.feedburner.com/~ff/blogspot/gJZg?d=yIl2AUoC8zA":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn97@2020_3/2021/05/02/05-42-54-254_483d6fcb94af4f84.webp","http://feeds.feedburner.com/~r/blogspot/gJZg/~4/dneVgPPqCRA":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn2@2020_2/2021/05/02/05-42-56-279_65769ae35fc343f6.webp"},"publishedOrCreatedDate":1619934173846}],"record":{"createdTime":"2021-05-02 13:42:53","updatedTime":"2021-05-02 13:42:53","feedId":3793,"fetchDate":"Sun, 02 May 2021 05:42:53 +0000","fetchMs":16,"handleMs":38,"totalMs":82362,"newArticles":0,"totalArticles":25,"status":1,"type":0,"ip":"79b59b7ab14b8d981e3d8a220e20848a","hostName":"us-019*","requestId":"99c95088fd064a569742ebd8fb5dffdb_3793","contentType":"text/xml; charset=UTF-8","totalBytes":4101152,"bgimgsTotal":1,"bgimgsGithubTotal":1,"articlesImgsTotal":9,"articlesImgsGithubTotal":9,"successGithubMap":{"myreaderx8":1,"myreaderx6":1,"myreaderx27":1,"myreaderx32":1,"myreaderx22":1,"myreaderx12":1,"myreaderx1":1,"myreaderx13":1,"myreaderx29":1},"failGithubMap":{}},"feed":{"createdTime":"2020-08-25 04:29:31","updatedTime":"2020-09-01 10:35:46","id":3793,"name":"Google AI Blog","url":"http://feeds.feedburner.com/blogspot/gJZg","subscriber":null,"website":null,"icon":"http://ai.googleblog.com/favicon.ico","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx65/cdn63@2020_3/2020/09/01/02-35-46-379_40612c2a706c05a6.ico","description":"The latest news from Google AI.","weekly":null,"link":null},"noPictureArticleList":[],"tmpCommonImgCdnBytes":14050,"tmpBodyImgCdnBytes":4087102,"tmpBgImgCdnBytes":0,"extra4":{"start":1619934173763,"total":0,"statList":[{"spend":45,"msg":"获取xml内容"},{"spend":38,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":81932,"msg":"正文链接上传到cdn"}]},"extra5":9,"extra6":9,"extra7ImgCdnFailResultVector":[null],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://europe68.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]},"http://europe62.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-004.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-005.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-51.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-030.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-52.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-040.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://1.bp.blogspot.com/-xsrSi3N7gSs/YIhwcUlyeEI/AAAAAAAAHeo/FxfyrqirVQssh9oP2GyKGKQxFxB9578hwCLcBGAsYHQ/w400-h269/image4.png","sourceStatusCode":200,"destWidth":400,"destHeight":269,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn94@2020_2/2021/05/02/05-42-53-886_02e320edcde39100.webp","sourceBytes":135767,"destBytes":14050,"targetWebpQuality":75,"feedId":3793,"totalSpendMs":333,"convertSpendMs":9,"createdTime":"2021-05-02 13:42:53","host":"us-026*","referer":"http://feedproxy.google.com/~r/blogspot/gJZg/~3/dneVgPPqCRA/model-based-rl-for-decentralized-multi.html","linkMd5ListStr":"25af6933bfd628e469c0d26c012a67b8,25af6933bfd628e469c0d26c012a67b8","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"132.6 KB","destSize":"13.7 KB","compressRate":"10.3%"},{"code":1,"isDone":false,"source":"https://1.bp.blogspot.com/-hwu17vDZ9Lk/YIh0HAb1FJI/AAAAAAAAHfg/uhZFCdKZkncxNIIFkKcUT-VYR27ZpljEACLcBGAsYHQ/s320/GoalEvaluation.png","sourceStatusCode":200,"destWidth":320,"destHeight":286,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn6@2020_4/2021/05/02/05-42-54-233_98de467c60a1de34.webp","sourceBytes":25520,"destBytes":6180,"targetWebpQuality":75,"feedId":3793,"totalSpendMs":247,"convertSpendMs":7,"createdTime":"2021-05-02 13:42:54","host":"us-52*","referer":"http://feedproxy.google.com/~r/blogspot/gJZg/~3/dneVgPPqCRA/model-based-rl-for-decentralized-multi.html","linkMd5ListStr":"25af6933bfd628e469c0d26c012a67b8","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"24.9 KB","destSize":"6 KB","compressRate":"24.2%"},{"code":1,"isDone":false,"source":"https://1.bp.blogspot.com/-w-sDOcLNS4s/YIhwkz8qUqI/AAAAAAAAHes/0_0cSPsFUh0RXlpfMEMExAIEzNbE64iiQCLcBGAsYHQ/w400-h225/image1.jpg","sourceStatusCode":200,"destWidth":400,"destHeight":225,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn17@2020_1/2021/05/02/05-42-54-231_431c1fb19caceff6.webp","sourceBytes":30497,"destBytes":14496,"targetWebpQuality":75,"feedId":3793,"totalSpendMs":288,"convertSpendMs":6,"createdTime":"2021-05-02 13:42:54","host":"us-005*","referer":"http://feedproxy.google.com/~r/blogspot/gJZg/~3/dneVgPPqCRA/model-based-rl-for-decentralized-multi.html","linkMd5ListStr":"25af6933bfd628e469c0d26c012a67b8","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"29.8 KB","destSize":"14.2 KB","compressRate":"47.5%"},{"code":1,"isDone":false,"source":"http://feeds.feedburner.com/~ff/blogspot/gJZg?d=yIl2AUoC8zA","sourceStatusCode":200,"destWidth":62,"destHeight":24,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn97@2020_3/2021/05/02/05-42-54-254_483d6fcb94af4f84.webp","sourceBytes":997,"destBytes":310,"targetWebpQuality":75,"feedId":3793,"totalSpendMs":315,"convertSpendMs":3,"createdTime":"2021-05-02 13:42:54","host":"us-51*","referer":"http://feedproxy.google.com/~r/blogspot/gJZg/~3/dneVgPPqCRA/model-based-rl-for-decentralized-multi.html","linkMd5ListStr":"25af6933bfd628e469c0d26c012a67b8","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"997 B","destSize":"310 B","compressRate":"31.1%"},{"code":1,"isDone":false,"source":"https://1.bp.blogspot.com/-jfhAfU2pkhI/YIhxB6bPQAI/AAAAAAAAHfE/ssku4cBrBqckrFPJyGYXc5qnIfD0oolVgCLcBGAsYHQ/w640-h188/image8.png","sourceStatusCode":200,"destWidth":640,"destHeight":187,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn99@2020_1/2021/05/02/05-42-54-395_bee5f84e18bdb668.webp","sourceBytes":140395,"destBytes":20018,"targetWebpQuality":75,"feedId":3793,"totalSpendMs":532,"convertSpendMs":9,"createdTime":"2021-05-02 13:42:54","host":"europe62*","referer":"http://feedproxy.google.com/~r/blogspot/gJZg/~3/dneVgPPqCRA/model-based-rl-for-decentralized-multi.html","linkMd5ListStr":"25af6933bfd628e469c0d26c012a67b8","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"137.1 KB","destSize":"19.5 KB","compressRate":"14.3%"},{"code":1,"isDone":false,"source":"http://feeds.feedburner.com/~r/blogspot/gJZg/~4/dneVgPPqCRA","sourceStatusCode":200,"destWidth":1,"destHeight":1,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn2@2020_2/2021/05/02/05-42-56-279_65769ae35fc343f6.webp","sourceBytes":43,"destBytes":72,"targetWebpQuality":75,"feedId":3793,"totalSpendMs":292,"convertSpendMs":3,"createdTime":"2021-05-02 13:42:56","host":"us-040*","referer":"http://feedproxy.google.com/~r/blogspot/gJZg/~3/dneVgPPqCRA/model-based-rl-for-decentralized-multi.html","linkMd5ListStr":"25af6933bfd628e469c0d26c012a67b8","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"43 B","destSize":"72 B","compressRate":"167.4%"},{"code":1,"isDone":false,"source":"https://1.bp.blogspot.com/-kyZDitCJXfE/YIhwrrUctLI/AAAAAAAAHew/Xe7VvRcTy9MjtxMpH0UU_YPOxfZ98-nvgCLcBGAsYHQ/w640-h360/image7.gif","sourceStatusCode":200,"destWidth":640,"destHeight":360,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn14@2020_1/2021/05/02/05-42-57-318_8602777b9c1bb63f.webp","sourceBytes":9563879,"destBytes":2376724,"targetWebpQuality":37,"feedId":3793,"totalSpendMs":3650,"convertSpendMs":2961,"createdTime":"2021-05-02 13:42:54","host":"us-030*","referer":"http://feedproxy.google.com/~r/blogspot/gJZg/~3/dneVgPPqCRA/model-based-rl-for-decentralized-multi.html","linkMd5ListStr":"25af6933bfd628e469c0d26c012a67b8","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"9.1 MB","destSize":"2.3 MB","compressRate":"24.9%"},{"code":1,"isDone":false,"source":"https://1.bp.blogspot.com/-cQIoEoSzd4A/YIhxS5ZYMXI/AAAAAAAAHfQ/yVnT_NKQ0p0IHKykYawrn1aIzRnDytsLQCLcBGAsYHQ/w640-h360/image6.gif","sourceStatusCode":200,"destWidth":600,"destHeight":338,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn19@2020_5/2021/05/02/05-42-57-553_96c9d9abd7da0fe6.webp","sourceBytes":16431360,"destBytes":989170,"targetWebpQuality":4,"feedId":3793,"totalSpendMs":4282,"convertSpendMs":2685,"createdTime":"2021-05-02 13:42:54","host":"us-004*","referer":"http://feedproxy.google.com/~r/blogspot/gJZg/~3/dneVgPPqCRA/model-based-rl-for-decentralized-multi.html","linkMd5ListStr":"25af6933bfd628e469c0d26c012a67b8","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"15.7 MB","destSize":"966 KB","compressRate":"6%"},{"code":1,"isDone":false,"source":"https://1.bp.blogspot.com/-_vv-QvkRVHg/YIhxKGS_8ZI/AAAAAAAAHfM/ENJYMCgtf5IYCWAR2eROfOM0YU5OCxagQCLcBGAsYHQ/w640-h360/image3.gif","sourceStatusCode":200,"destWidth":600,"destHeight":338,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn25@2020_4/2021/05/02/05-44-15-747_ba518ff91d6114e8.webp","sourceBytes":18083910,"destBytes":680132,"targetWebpQuality":4,"feedId":3793,"totalSpendMs":3372,"convertSpendMs":2646,"createdTime":"2021-05-02 13:44:12","host":"us-040*","referer":"http://feedproxy.google.com/~r/blogspot/gJZg/~3/dneVgPPqCRA/model-based-rl-for-decentralized-multi.html","linkMd5ListStr":"25af6933bfd628e469c0d26c012a67b8","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"17.2 MB","destSize":"664.2 KB","compressRate":"3.8%"}],"successGithubMap":{"myreaderx8":1,"myreaderx6":1,"myreaderx27":1,"myreaderx32":1,"myreaderx22":1,"myreaderx12":1,"myreaderx1":1,"myreaderx13":1,"myreaderx29":1},"failGithubMap":{}}