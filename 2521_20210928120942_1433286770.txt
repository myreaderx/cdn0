{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2021-09-28 20:08:22","updatedTime":"2021-09-28 20:08:22","title":"面试官问：淘宝七天自动确认收货，让你设计，可以怎么实现？","link":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E9%9D%A2%E8%AF%95%E5%AE%98%E9%97%AE%EF%BC%9A%E6%B7%98%E5%AE%9D%E4%B8%83%E5%A4%A9%E8%87%AA%E5%8A%A8%E7%A1%AE%E8%AE%A4%E6%94%B6%E8%B4%A7%EF%BC%8C%E8%AE%A9%E4%BD%A0%E8%AE%BE%E8%AE%A1%EF%BC%8C%E5%8F%AF%E4%BB%A5%E6%80%8E%E4%B9%88%E5%AE%9E%E7%8E%B0%EF%BC%9F","description":"<div><div><div id=\"media\" class=\"rich_media_thumb_wrp\">\n\n            <img class=\"rich_media_thumb\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/eZzl4LXykQxWaAZBibTRu1464m9e9oMSuibYpQODklK31VicKS9mZKFt2F0jINZSZgOeuwliaoBYmKdEWzDte4F3vw/0?wx_fmt=jpeg?imageView2/1/w/600\">\n        </div>\n    \n\n    \n\n    <div class=\"rich_media_content\" id=\"js_content\">\n                    \n\n                    \n                    \n                    \n                    <section data-mpa-template=\"t\" mpa-paragraph-type=\"ignored\" data-mpa-powered-by=\"yiban.io\"><section data-mpa-template=\"t\" mpa-paragraph-type=\"ignored\"><section><p style=\"text-align: center;\"><span style=\"font-size: 14px;letter-spacing: 0.5440000295639038px;text-align: center;max-width: 100%;color: rgb(255, 41, 65);line-height: 22.4px;\">（给</span><span style=\"font-size: 14px;letter-spacing: 0.5440000295639038px;text-align: center;max-width: 100%;line-height: 22.4px;color: rgb(0, 128, 255);\">ImportNew</span><span style=\"font-size: 14px;letter-spacing: 0.5440000295639038px;text-align: center;max-width: 100%;color: rgb(255, 41, 65);line-height: 22.4px;\">加星标，提高Java技能）</span></p><p style=\"text-align: center;\"><br></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">目前常见的应用软件都有消息的延迟推送的影子，应用也极为广泛，例如：</span></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\"><br></span></p><ul style=\"text-align: left;\" class=\"list-paddingleft-2\"><li style=\"text-align: left;font-size: 15px;\"><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">淘宝七天自动确认收货。在我们签收商品后，物流系统会在七天后延时发送一个消息给支付系统，通知支付系统将款打给商家，这个过程持续七天，就是使用了消息中间件的延迟推送功能；</span></p></li><li style=\"text-align: left;font-size: 15px;\"><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">12306 购票支付确认页面。我们在选好票点击确定跳转的页面中往往都会有倒计时，代表着 30 分钟内订单不确认的话将会自动取消订单。其实在下订单那一刻开始购票业务系统就会发送一个延时消息给订单系统，延时 30 分钟，告诉订单系统订单未完成，如果我们在 30 分钟内完成了订单，则可以通过逻辑代码判断来忽略掉收到的消息。</span></p></li></ul><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">在上面两种场景中，如果我们使用下面两种传统解决方案无疑大大降低了系统的整体性能和吞吐量：</span></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\"><br></span></p><ul style=\"text-align: left;\" class=\"list-paddingleft-2\"><li style=\"text-align: left;font-size: 15px;\"><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">使用 Redis 给订单设置过期时间，最后通过判断 <span style=\"font-size: 15px;text-align: left;\">Redis</span> 中是否还有该订单来决定订单是否已经完成。这种解决方案相较于消息的延迟推送性能较低，因为我们知道 <span style=\"font-size: 15px;text-align: left;\">Redis</span> 都是存储于内存中，我们遇到恶意下单或者刷单的将会给内存带来巨大压力；</span></p></li><li style=\"text-align: left;font-size: 15px;\"><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">使用传统的数据库轮询来判断数据库表中订单的状态，这无疑增加了 IO 次数，性能极低；</span></p></li><li style=\"text-align: left;font-size: 15px;\"><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">使用 JVM 原生的 DelayQueue ，也是大量占用内存，而且没有持久化策略，系统宕机或者重启都会丢失订单信息。</span></p></li></ul><h2 style=\"text-align: left;\"><br></h2><h2 style=\"text-align: left;\"><span style=\"color: rgb(171, 25, 66);\"><strong><span style=\"color: rgb(171, 25, 66);font-size: 15px;text-align: left;\">消息延迟推送的实现</span></strong></span></h2><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">在 RabbitMQ 3.6.x 之前我们一般采用<strong>死</strong><strong>信队列 + TTL过期时间</strong>来实现延迟队列，我们这里不做过多介绍<span style=\"color: rgb(49, 70, 89);font-family: Lato, \" pingfang sc yahei sans-serif left rgb>，可以参考之前文章来了解：</span><a target=\"_blank\" href=\"http://mp.weixin.qq.com/s?__biz=MjM5NzMyMjAwMA==&amp;mid=2651487535&amp;idx=2&amp;sn=c13beb684fa10db1a206b77681b5cf04&amp;chksm=bd2511508a5298464a05061ae910b0622b6d0e006851b9db06f9ff1595ea2df1419e9ed8fc81&amp;scene=21#wechat_redirect\" textvalue=\"TTL、死信队列\" data-itemshowtype=\"0\" tab=\"innerlink\" data-linktype=\"2\">TTL、死信队列</a>。</span><span style=\"font-size: 15px;\"></span></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\"><br></span></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">在 RabbitMQ 3.6.x 开始，RabbitMQ 官方提供了延迟队列的插件，可以下载放置到 RabbitMQ 根目录下的 plugins 下。</span></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\"><br></span></p><p style=\"text-align: left;\"><span style=\"color: rgb(136, 136, 136);font-size: 14px;\">插件下载地址：</span><span style=\"color: rgb(136, 136, 136);font-size: 12px;\">https://github.com/rabbitmq/rabbitmq-delayed-message-exchange</span></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\"><br></span></p><p style=\"text-align: center;\"><img data-ratio=\"0.25925925925925924\" data-type=\"png\" data-w=\"1458\" style=\"text-align: left; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQwCJNM32ydzFEg79KAb0Kv6aarafcuCEgcG0lIe6I61f6BMicplCAqZbLYoPTLQvM2jfGEcLzjuovA/640?wx_fmt=png\"></p><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">首先，我们创建交换机和消息队列。</span></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\"><br></span></p><pre style=\"text-align: left;\"><div data-clipboard-target=\"#copy_target_0\" title=\"复制代码\" style=\"text-align: left;\"><section class=\"code-snippet__fix code-snippet__js\"><ul class=\"code-snippet__line-index code-snippet__js\"><li><li><li><li><li><li><li><li><li><li><li><li><li><li><li><li><li><li><li><li><li><li><li><li><li><li><li><li><li><li><li><li><li><li></ul><pre class=\"code-snippet__js\" data-lang=\"java\"><code><span class=\"code-snippet_outer\"><span class=\"code-snippet__keyword\">import</span> org.springframework.amqp.core.*;</span></code><code><span class=\"code-snippet_outer\"><span class=\"code-snippet__keyword\">import</span> org.springframework.context.annotation.Bean;</span></code><code><span class=\"code-snippet_outer\"><span class=\"code-snippet__keyword\">import</span> org.springframework.context.annotation.Configuration;</span></code><code><span class=\"code-snippet_outer\"><br></span></code><code><span class=\"code-snippet_outer\"><span class=\"code-snippet__keyword\">import</span> java.util.HashMap;</span></code><code><span class=\"code-snippet_outer\"><span class=\"code-snippet__keyword\">import</span> java.util.Map;</span></code><code><span class=\"code-snippet_outer\"><br></span></code><code><span class=\"code-snippet_outer\"><span class=\"code-snippet__meta\">@Configuration</span></span></code><code><span class=\"code-snippet_outer\"><span class=\"code-snippet__keyword\">public</span> <span class=\"code-snippet__class\"><span class=\"code-snippet__keyword\">class</span> <span class=\"code-snippet__title\">MQConfig</span> </span>{</span></code><code><span class=\"code-snippet_outer\"><br></span></code><code><span class=\"code-snippet_outer\">    <span class=\"code-snippet__keyword\">public</span> <span class=\"code-snippet__keyword\">static</span> <span class=\"code-snippet__keyword\">final</span> String LAZY_EXCHANGE = <span class=\"code-snippet__string\">\"Ex.LazyExchange\"</span>;</span></code><code><span class=\"code-snippet_outer\">    <span class=\"code-snippet__keyword\">public</span> <span class=\"code-snippet__keyword\">static</span> <span class=\"code-snippet__keyword\">final</span> String LAZY_QUEUE = <span class=\"code-snippet__string\">\"MQ.LazyQueue\"</span>;</span></code><code><span class=\"code-snippet_outer\">    <span class=\"code-snippet__keyword\">public</span> <span class=\"code-snippet__keyword\">static</span> <span class=\"code-snippet__keyword\">final</span> String LAZY_KEY = <span class=\"code-snippet__string\">\"lazy.#\"</span>;</span></code><code><span class=\"code-snippet_outer\"><br></span></code><code><span class=\"code-snippet_outer\">    <span class=\"code-snippet__meta\">@Bean</span></span></code><code><span class=\"code-snippet_outer\">    <span class=\"code-snippet__function\"><span class=\"code-snippet__keyword\">public</span> TopicExchange <span class=\"code-snippet__title\">lazyExchange</span><span class=\"code-snippet__params\">()</span> </span>{</span></code><code><span class=\"code-snippet_outer\">        <span class=\"code-snippet__comment\">//Map<string object> pros = new HashMap&lt;&gt;();</string></span></span></code><code><span class=\"code-snippet_outer\">        <span class=\"code-snippet__comment\">//设置交换机支持延迟消息推送</span></span></code><code><span class=\"code-snippet_outer\">        <span class=\"code-snippet__comment\">//pros.put(\"x-delayed-message\", \"topic\");</span></span></code><code><span class=\"code-snippet_outer\">        TopicExchange exchange = <span class=\"code-snippet__keyword\">new</span> TopicExchange(LAZY_EXCHANGE, <span class=\"code-snippet__keyword\">true</span>, <span class=\"code-snippet__keyword\">false</span>, pros);</span></code><code><span class=\"code-snippet_outer\">        exchange.setDelayed(<span class=\"code-snippet__keyword\">true</span>);</span></code><code><span class=\"code-snippet_outer\">        <span class=\"code-snippet__keyword\">return</span> exchange;</span></code><code><span class=\"code-snippet_outer\">    }</span></code><code><span class=\"code-snippet_outer\"><br></span></code><code><span class=\"code-snippet_outer\">    <span class=\"code-snippet__meta\">@Bean</span></span></code><code><span class=\"code-snippet_outer\">    <span class=\"code-snippet__function\"><span class=\"code-snippet__keyword\">public</span> Queue <span class=\"code-snippet__title\">lazyQueue</span><span class=\"code-snippet__params\">()</span> </span>{</span></code><code><span class=\"code-snippet_outer\">        <span class=\"code-snippet__keyword\">return</span> <span class=\"code-snippet__keyword\">new</span> Queue(LAZY_QUEUE, <span class=\"code-snippet__keyword\">true</span>);</span></code><code><span class=\"code-snippet_outer\">    }</span></code><code><span class=\"code-snippet_outer\"><br></span></code><code><span class=\"code-snippet_outer\">    <span class=\"code-snippet__meta\">@Bean</span></span></code><code><span class=\"code-snippet_outer\">    <span class=\"code-snippet__function\"><span class=\"code-snippet__keyword\">public</span> Binding <span class=\"code-snippet__title\">lazyBinding</span><span class=\"code-snippet__params\">()</span> </span>{</span></code><code><span class=\"code-snippet_outer\">        <span class=\"code-snippet__keyword\">return</span> BindingBuilder.bind(lazyQueue()).to(lazyExchange()).with(LAZY_KEY);</span></code><code><span class=\"code-snippet_outer\">    }</span></code><code><span class=\"code-snippet_outer\">}</span></code></pre></section></div><span style=\"font-size: 15px;\"><br></span></pre><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">我们在 Exchange 的声明中可以设置 exchange.setDelayed(true) 来开启延迟队列，也可以设置为以下内容传入交换机声明的方法中，因为第一种方式的底层就是通过这种方式来实现的。</span></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\"><br></span></p><section class=\"code-snippet__fix code-snippet__js\"><ul class=\"code-snippet__line-index code-snippet__js\"><li><li><li><li></ul><pre class=\"code-snippet__js\" data-lang=\"javascript\"><code><span class=\"code-snippet_outer\"><span class=\"code-snippet__comment\">//Map<string object> pros = new HashMap&lt;&gt;();</string></span></span></code><code><span class=\"code-snippet_outer\"><span class=\"code-snippet__comment\">//设置交换机支持延迟消息推送</span></span></code><code><span class=\"code-snippet_outer\"><span class=\"code-snippet__comment\">//pros.put(\"x-delayed-message\", \"topic\");</span></span></code><code><span class=\"code-snippet_outer\">TopicExchange exchange = <span class=\"code-snippet__keyword\">new</span> TopicExchange(LAZY_EXCHANGE, <span class=\"code-snippet__literal\">true</span>, <span class=\"code-snippet__literal\">false</span>, pros);</span></code></pre></section><p style=\"text-align: left;\"><span style=\"font-size: 15px;\"></span></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">发送消息时我们需要指定延迟推送的时间，我们这里在发送消息的方法中传入参数 new MessagePostProcessor() 是为了获得 Message对象，因为需要借助 Message对象的API 来设置延迟时间。</span></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\"><br></span></p><section class=\"code-snippet__fix code-snippet__js\"><ul class=\"code-snippet__line-index code-snippet__js\"><li><li><li><li><li><li><li><li><li><li><li><li><li><li><li><li><li><li><li><li><li><li><li><li><li><li><li><li><li><li><li><li><li><li><li><li><li><li><li><li><li></ul><pre class=\"code-snippet__js\" data-lang=\"swift\"><code><span class=\"code-snippet_outer\"><span class=\"code-snippet__keyword\">import</span> com.anqi.mq.config.MQConfig;</span></code><code><span class=\"code-snippet_outer\"><span class=\"code-snippet__keyword\">import</span> org.springframework.amqp.AmqpException;</span></code><code><span class=\"code-snippet_outer\"><span class=\"code-snippet__keyword\">import</span> org.springframework.amqp.core.Message;</span></code><code><span class=\"code-snippet_outer\"><span class=\"code-snippet__keyword\">import</span> org.springframework.amqp.core.MessageDeliveryMode;</span></code><code><span class=\"code-snippet_outer\"><span class=\"code-snippet__keyword\">import</span> org.springframework.amqp.core.MessagePostProcessor;</span></code><code><span class=\"code-snippet_outer\"><span class=\"code-snippet__keyword\">import</span> org.springframework.amqp.rabbit.connection.CorrelationData;</span></code><code><span class=\"code-snippet_outer\"><span class=\"code-snippet__keyword\">import</span> org.springframework.amqp.rabbit.core.RabbitTemplate;</span></code><code><span class=\"code-snippet_outer\"><span class=\"code-snippet__keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span></code><code><span class=\"code-snippet_outer\"><span class=\"code-snippet__keyword\">import</span> org.springframework.stereotype.Component;</span></code><code><span class=\"code-snippet_outer\"><br></span></code><code><span class=\"code-snippet_outer\"><span class=\"code-snippet__keyword\">import</span> java.util.Date;</span></code><code><span class=\"code-snippet_outer\"><br></span></code><code><span class=\"code-snippet_outer\">@<span class=\"code-snippet__type\">Component</span></span></code><code><span class=\"code-snippet_outer\"><span class=\"code-snippet__keyword\">public</span> <span class=\"code-snippet__class\"><span class=\"code-snippet__keyword\">class</span> <span class=\"code-snippet__title\">MQSender</span> </span>{</span></code><code><span class=\"code-snippet_outer\"><br></span></code><code><span class=\"code-snippet_outer\">    @<span class=\"code-snippet__type\">Autowired</span></span></code><code><span class=\"code-snippet_outer\">    <span class=\"code-snippet__keyword\">private</span> <span class=\"code-snippet__type\">RabbitTemplate</span> rabbitTemplate;</span></code><code><span class=\"code-snippet_outer\"><br></span></code><code><span class=\"code-snippet_outer\">    <span class=\"code-snippet__comment\">//confirmCallback returnCallback 代码省略，请参照上一篇</span></span></code><code><span class=\"code-snippet_outer\"><br></span></code><code><span class=\"code-snippet_outer\">    <span class=\"code-snippet__keyword\">public</span> void sendLazy(<span class=\"code-snippet__type\">Object</span> message) {</span></code><code><span class=\"code-snippet_outer\">        rabbitTemplate.setMandatory(<span class=\"code-snippet__literal\">true</span>);</span></code><code><span class=\"code-snippet_outer\">        rabbitTemplate.setConfirmCallback(confirmCallback);</span></code><code><span class=\"code-snippet_outer\">        rabbitTemplate.setReturnCallback(returnCallback);</span></code><code><span class=\"code-snippet_outer\">        <span class=\"code-snippet__comment\">//id + 时间戳 全局唯一</span></span></code><code><span class=\"code-snippet_outer\">        <span class=\"code-snippet__type\">CorrelationData</span> correlationData = new <span class=\"code-snippet__type\">CorrelationData</span>(<span class=\"code-snippet__string\">\"12345678909\"</span> + new <span class=\"code-snippet__type\">Date</span>());</span></code><code><span class=\"code-snippet_outer\"><br></span></code><code><span class=\"code-snippet_outer\">        <span class=\"code-snippet__comment\">//发送消息时指定 header 延迟时间</span></span></code><code><span class=\"code-snippet_outer\">        rabbitTemplate.convertAndSend(<span class=\"code-snippet__type\">MQConfig</span>.<span class=\"code-snippet__type\">LAZY_EXCHANGE</span>, <span class=\"code-snippet__string\">\"lazy.boot\"</span>, message,</span></code><code><span class=\"code-snippet_outer\">            new <span class=\"code-snippet__type\">MessagePostProcessor</span>() {</span></code><code><span class=\"code-snippet_outer\">                @<span class=\"code-snippet__type\">Override</span></span></code><code><span class=\"code-snippet_outer\">                <span class=\"code-snippet__keyword\">public</span> <span class=\"code-snippet__type\">Message</span> postProcessMessage(<span class=\"code-snippet__type\">Message</span> message) <span class=\"code-snippet__keyword\">throws</span> <span class=\"code-snippet__type\">AmqpException</span> {</span></code><code><span class=\"code-snippet_outer\">                    <span class=\"code-snippet__comment\">//设置消息持久化</span></span></code><code><span class=\"code-snippet_outer\">                    message.getMessageProperties().setDeliveryMode(<span class=\"code-snippet__type\">MessageDeliveryMode</span>.<span class=\"code-snippet__type\">PERSISTENT</span>);</span></code><code><span class=\"code-snippet_outer\">                    <span class=\"code-snippet__comment\">//message.getMessageProperties().setHeader(\"x-delay\", \"6000\");</span></span></code><code><span class=\"code-snippet_outer\">                    message.getMessageProperties().setDelay(<span class=\"code-snippet__number\">6000</span>);</span></code><code><span class=\"code-snippet_outer\">                    <span class=\"code-snippet__keyword\">return</span> message;</span></code><code><span class=\"code-snippet_outer\">                }</span></code><code><span class=\"code-snippet_outer\">            }, correlationData);</span></code><code><span class=\"code-snippet_outer\">    }</span></code><code><span class=\"code-snippet_outer\">}</span></code></pre></section><p style=\"text-align: left;\"><span style=\"font-size: 15px;\"></span></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">我们可以观察 setDelay(Integer i) 底层代码，也是在 header 中设置 x-delay。等同于我们手动设置 header</span></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\"><br></span></p><section class=\"code-snippet__fix code-snippet__js\"><ul class=\"code-snippet__line-index code-snippet__js\"><li></ul><pre class=\"code-snippet__js\" data-lang=\"javascript\"><code><span class=\"code-snippet_outer\">message.getMessageProperties().setHeader(<span class=\"code-snippet__string\">\"x-delay\"</span>, <span class=\"code-snippet__string\">\"6000\"</span>);</span></code></pre></section><p style=\"text-align: left;\"><span style=\"font-size: 15px;\"></span></p><pre style=\"text-align: left;\"><span style=\"font-size: 15px;\"><br></span></pre><section class=\"code-snippet__fix code-snippet__js\"><ul class=\"code-snippet__line-index code-snippet__js\"><li><li><li><li><li><li><li><li><li><li><li><li></ul><pre class=\"code-snippet__js\" data-lang=\"cs\"><code><span class=\"code-snippet_outer\"><span class=\"code-snippet__comment\">/**</span></span></code><code><span class=\"code-snippet_outer\"><span class=\"code-snippet__comment\"> * Set the x-delay header.</span></span></code><code><span class=\"code-snippet_outer\"><span class=\"code-snippet__comment\"> * @param delay the delay.</span></span></code><code><span class=\"code-snippet_outer\"><span class=\"code-snippet__comment\"> * @since 1.6</span></span></code><code><span class=\"code-snippet_outer\"><span class=\"code-snippet__comment\"> */</span></span></code><code><span class=\"code-snippet_outer\"><span class=\"code-snippet__function\"><span class=\"code-snippet__keyword\">public</span> <span class=\"code-snippet__keyword\">void</span> <span class=\"code-snippet__title\">setDelay</span>(<span class=\"code-snippet__params\">Integer delay</span>)</span> {</span></code><code><span class=\"code-snippet_outer\">    <span class=\"code-snippet__keyword\">if</span> (delay == <span class=\"code-snippet__literal\">null</span> || delay &lt; <span class=\"code-snippet__number\">0</span>) {</span></code><code><span class=\"code-snippet_outer\">        <span class=\"code-snippet__keyword\">this</span>.headers.<span class=\"code-snippet__keyword\">remove</span>(X_DELAY);</span></code><code><span class=\"code-snippet_outer\">    } <span class=\"code-snippet__keyword\">else</span> {</span></code><code><span class=\"code-snippet_outer\">        <span class=\"code-snippet__keyword\">this</span>.headers.put(X_DELAY, delay);</span></code><code><span class=\"code-snippet_outer\">    }</span></code><code><span class=\"code-snippet_outer\">}</span></code></pre></section><pre style=\"text-align: left;\"><br><span style=\"font-size: 15px;\"></span></pre><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">消费端进行消费：</span></p><p style=\"text-align: left;\"><br></p><section class=\"code-snippet__fix code-snippet__js\"><ul class=\"code-snippet__line-index code-snippet__js\"><li><li><li><li><li><li><li><li><li><li><li><li><li><li><li><li><li><li></ul><pre class=\"code-snippet__js\" data-lang=\"java\"><code><span class=\"code-snippet_outer\"><span class=\"code-snippet__keyword\">import</span> com.rabbitmq.client.Channel;</span></code><code><span class=\"code-snippet_outer\"><span class=\"code-snippet__keyword\">import</span> org.springframework.amqp.rabbit.annotation.*;</span></code><code><span class=\"code-snippet_outer\"><span class=\"code-snippet__keyword\">import</span> org.springframework.amqp.support.AmqpHeaders;</span></code><code><span class=\"code-snippet_outer\"><span class=\"code-snippet__keyword\">import</span> org.springframework.stereotype.Component;</span></code><code><span class=\"code-snippet_outer\"><br></span></code><code><span class=\"code-snippet_outer\"><span class=\"code-snippet__keyword\">import</span> java.io.IOException;</span></code><code><span class=\"code-snippet_outer\"><span class=\"code-snippet__keyword\">import</span> java.util.Map;</span></code><code><span class=\"code-snippet_outer\"><br></span></code><code><span class=\"code-snippet_outer\"><span class=\"code-snippet__meta\">@Component</span></span></code><code><span class=\"code-snippet_outer\"><span class=\"code-snippet__keyword\">public</span> <span class=\"code-snippet__class\"><span class=\"code-snippet__keyword\">class</span> <span class=\"code-snippet__title\">MQReceiver</span> </span>{</span></code><code><span class=\"code-snippet_outer\">    <span class=\"code-snippet__meta\">@RabbitListener</span>(queues = <span class=\"code-snippet__string\">\"MQ.LazyQueue\"</span>)</span></code><code><span class=\"code-snippet_outer\">    <span class=\"code-snippet__meta\">@RabbitHandler</span></span></code><code><span class=\"code-snippet_outer\">    <span class=\"code-snippet__function\"><span class=\"code-snippet__keyword\">public</span> <span class=\"code-snippet__keyword\">void</span> <span class=\"code-snippet__title\">onLazyMessage</span><span class=\"code-snippet__params\">(Message msg, Channel channel)</span> <span class=\"code-snippet__keyword\">throws</span> IOException </span>{</span></code><code><span class=\"code-snippet_outer\">        <span class=\"code-snippet__keyword\">long</span> deliveryTag = msg.getMessageProperties().getDeliveryTag();</span></code><code><span class=\"code-snippet_outer\">        channel.basicAck(deliveryTag, <span class=\"code-snippet__keyword\">true</span>);</span></code><code><span class=\"code-snippet_outer\">        System.out.println(<span class=\"code-snippet__string\">\"lazy receive \"</span> + <span class=\"code-snippet__keyword\">new</span> String(msg.getBody()));</span></code><code><span class=\"code-snippet_outer\">    }</span></code><code><span class=\"code-snippet_outer\">}</span></code></pre></section><p style=\"text-align: left;\"><br></p><h2 style=\"text-align: left;\"><span style=\"color: rgb(171, 25, 66);\"><strong><span style=\"color: rgb(171, 25, 66);font-size: 15px;text-align: left;\">测试结果</span></strong></span></h2><p><span style=\"color: rgb(171, 25, 66);\"><strong><span style=\"color: rgb(171, 25, 66);font-size: 15px;text-align: left;\"><br></span></strong></span></p><pre style=\"text-align: left;\"><div data-clipboard-target=\"#copy_target_5\" title=\"复制代码\" style=\"text-align: left;\"><section class=\"code-snippet__fix code-snippet__js\"><ul class=\"code-snippet__line-index code-snippet__js\"><li><li><li><li><li><li><li><li><li><li><li><li><li><li><li><li><li><li><li><li></ul><pre class=\"code-snippet__js\" data-lang=\"java\"><code><span class=\"code-snippet_outer\"><span class=\"code-snippet__keyword\">import</span> org.junit.Test;</span></code><code><span class=\"code-snippet_outer\"><span class=\"code-snippet__keyword\">import</span> org.junit.runner.RunWith;</span></code><code><span class=\"code-snippet_outer\"><span class=\"code-snippet__keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span></code><code><span class=\"code-snippet_outer\"><span class=\"code-snippet__keyword\">import</span> org.springframework.boot.test.context.SpringBootTest;</span></code><code><span class=\"code-snippet_outer\"><span class=\"code-snippet__keyword\">import</span> org.springframework.test.context.junit4.SpringRunner;</span></code><code><span class=\"code-snippet_outer\"><br></span></code><code><span class=\"code-snippet_outer\"><span class=\"code-snippet__meta\">@SpringBootTest</span></span></code><code><span class=\"code-snippet_outer\"><span class=\"code-snippet__meta\">@RunWith</span>(SpringRunner.class)</span></code><code><span class=\"code-snippet_outer\"><span class=\"code-snippet__keyword\">public</span> <span class=\"code-snippet__class\"><span class=\"code-snippet__keyword\">class</span> <span class=\"code-snippet__title\">MQSenderTest</span> </span>{</span></code><code><span class=\"code-snippet_outer\"><br></span></code><code><span class=\"code-snippet_outer\">    <span class=\"code-snippet__meta\">@Autowired</span></span></code><code><span class=\"code-snippet_outer\">    <span class=\"code-snippet__keyword\">private</span> MQSender mqSender;</span></code><code><span class=\"code-snippet_outer\"><br></span></code><code><span class=\"code-snippet_outer\">    <span class=\"code-snippet__meta\">@Test</span></span></code><code><span class=\"code-snippet_outer\">    <span class=\"code-snippet__function\"><span class=\"code-snippet__keyword\">public</span> <span class=\"code-snippet__keyword\">void</span> <span class=\"code-snippet__title\">sendLazy</span><span class=\"code-snippet__params\">()</span> <span class=\"code-snippet__keyword\">throws</span> Exception </span>{</span></code><code><span class=\"code-snippet_outer\">        String msg = <span class=\"code-snippet__string\">\"hello spring boot\"</span>;</span></code><code><span class=\"code-snippet_outer\"><br></span></code><code><span class=\"code-snippet_outer\">        mqSender.sendLazy(msg + <span class=\"code-snippet__string\">\":\"</span>);</span></code><code><span class=\"code-snippet_outer\">    }</span></code><code><span class=\"code-snippet_outer\">}</span></code></pre></section></div></pre><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">果然在 6 秒后收到了消息 “lazy receive hello spring boot:”。</span></p><p><span style=\"font-size: 14px;color: rgb(154, 154, 154);font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif></span><br></p><blockquote class=\"js_blockquote_wrap\" data-type=\"2\" data-url=\"\" data-author-name=\"\" data-content-utf8-length=\"46\" data-source-title=\"\" style=\"color: rgb(154, 154, 154);font-size: 15px;white-space: normal;\"><section class=\"js_blockquote_digest\" style=\"color: rgb(154, 154, 154);font-size: 15px;white-space: normal;\"><section style=\"color: rgb(154, 154, 154);font-size: 15px;white-space: normal;\"><p style=\"color: rgb(154, 154, 154);font-size: 15px;white-space: normal;\"><span style=\"font-size: 14px;\">转自：</span><span style=\"font-size: 14px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif>海向</span><span style=\"font-size: 14px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif>，</span></p><p style=\"color: rgb(154, 154, 154);font-size: 15px;white-space: normal;\"><span style=\"font-size: 14px;\">链</span><span style=\"font-size: 14px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif>接：cnblogs.com/haixiang/p/10966985.html</span><span style=\"font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif></span></p></section></section></blockquote><p style=\"white-space: normal;text-align: center;\"><span style=\"font-size: 15px;color: rgb(136, 136, 136);\"><br></span></p><p style=\"white-space: normal;text-align: center;\"><span style=\"font-size: 15px;color: rgb(136, 136, 136);\">- EOF -</span></p><section donone=\"shifuMouseDownCard('shifu_c_030')\" label=\"Copyright Reserved by PLAYHUDONG.\" style=\"margin-top: 1em;margin-bottom: 1em;white-space: normal;text-align: start;max-width: 100%;caret-color: rgb(0, 0, 0);color: rgb(0, 0, 0);border-width: 0px;border-style: initial;border-color: initial;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-left: 1em;max-width: 100%;line-height: 1.4;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"padding: 3px 8px;max-width: 100%;border-radius: 4px;color: rgb(255, 255, 255);background-color: rgb(255, 105, 31);font-family: inherit;text-align: inherit;text-decoration: inherit;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">推荐阅读</span>  <span style=\"margin-left: 4px;padding: 3px 8px;max-width: 100%;border-radius: 1.2em;color: rgb(255, 255, 255);line-height: 1.2;background-color: rgb(204, 204, 204);font-family: inherit;text-align: inherit;text-decoration: inherit;border-color: rgb(249, 110, 87);font-size: 12px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">点击标题可跳转</span></section><section style=\"margin-top: -11px;padding: 22px 16px 16px;max-width: 100%;border-width: 1px;border-style: solid;border-color: rgb(255, 105, 31);color: rgb(51, 51, 51);font-size: 1em;font-family: inherit;text-align: inherit;text-decoration: inherit;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><p style=\"max-width: 100%;min-height: 1em;line-height: 2em;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"text-decoration: underline;font-size: 13px;\">1、<a target=\"_blank\" href=\"http://mp.weixin.qq.com/s?__biz=MjM5NzMyMjAwMA==&amp;mid=2651487535&amp;idx=2&amp;sn=c13beb684fa10db1a206b77681b5cf04&amp;chksm=bd2511508a5298464a05061ae910b0622b6d0e006851b9db06f9ff1595ea2df1419e9ed8fc81&amp;scene=21#wechat_redirect\" data-itemshowtype=\"0\" tab=\"innerlink\" style=\"font-size: 13px;text-align: start;white-space: normal;caret-color: rgb(0, 0, 0);\" data-linktype=\"2\">RabbitMQ 消费端限流、TTL、死信队列</a></span></p><p style=\"max-width: 100%;min-height: 1em;line-height: 2em;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"text-decoration: underline;font-size: 13px;\">2、<a target=\"_blank\" href=\"http://mp.weixin.qq.com/s?__biz=MjM5NzMyMjAwMA==&amp;mid=2651487535&amp;idx=2&amp;sn=c13beb684fa10db1a206b77681b5cf04&amp;chksm=bd2511508a5298464a05061ae910b0622b6d0e006851b9db06f9ff1595ea2df1419e9ed8fc81&amp;scene=21#wechat_redirect\" data-itemshowtype=\"0\" tab=\"innerlink\" data-linktype=\"2\"></a><a target=\"_blank\" href=\"http://mp.weixin.qq.com/s?__biz=MjM5NzMyMjAwMA==&amp;mid=2651493274&amp;idx=1&amp;sn=5c371fb52304519bfd017c33a6752fe6&amp;chksm=bd25ffe58a5276f31d75960ab95021308273a285e6bc23abf8970fdf68a19c6057cfb31fe4db&amp;scene=21#wechat_redirect\" data-itemshowtype=\"11\" tab=\"innerlink\" style=\"font-size: 13px;text-align: start;white-space: normal;caret-color: rgb(0, 0, 0);\" data-linktype=\"2\">别人家的团队怎么用RabbitMQ：我总结的5点规范</a></span></p><p style=\"max-width: 100%;min-height: 1em;line-height: 2em;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"text-decoration: underline;font-size: 13px;\">3、<a target=\"_blank\" href=\"http://mp.weixin.qq.com/s?__biz=MjM5NzMyMjAwMA==&amp;mid=2651486667&amp;idx=1&amp;sn=21cbdfaeb1abc109c514a3ffef441eac&amp;chksm=bd2515b48a529ca2c5f9721b46fcd4e8bb8c845f951156d988fcafdc6ab583c80b95fa3fb394&amp;scene=21#wechat_redirect\" data-itemshowtype=\"0\" tab=\"innerlink\" data-linktype=\"2\">SpringBoot+RabbitMQ （保证消息100%投递成功并被消费）</a></span></p></section></section><p style=\"white-space: normal;caret-color: rgb(0, 0, 0);color: rgb(0, 0, 0);text-align: start;max-width: 100%;min-height: 1em;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br></p><p style=\"text-align: center;\"><span style=\"max-width: 100%;font-size: 14px;color: rgb(255, 169, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\">看完本文有收获？请转发分享给更多人</span><br></p><p style=\"white-space: normal;max-width: 100%;min-height: 1em;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;color: rgb(255, 169, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\">关注「ImportNew」，提升Java技能</strong></p><p style=\"white-space: normal;max-width: 100%;min-height: 1em;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><img data-ratio=\"0.9166666666666666\" data-s=\"300,640\" data-type=\"jpeg\" data-w=\"600\" style=\"box-sizing: border-box !important; overflow-wrap: break-word !important; visibility: visible !important; width: 600px !important; max-width: 600px\" width=\"auto\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/2A8tXicCG8ylbWIGfdoDED35IRRySQZTXUkJ1eop9MHApzFibKnOo0diboXpl0rmS5mH78YJhsWQv0dhv718A6kUA/640?wx_fmt=jpeg\"></p><p style=\"text-align: right;\"><span style=\"font-size: 14px;text-align: right;\"></span><span style=\"max-width: 100%;font-family: -apple-system-font, system-ui, \" helvetica neue sc sans gb yahei ui arial sans-serif center break-word border-box>点赞和在看就是最大的支持</span><span style=\"max-width: 100%;font-family: -apple-system-font, system-ui, \" helvetica neue sc sans gb yahei ui arial sans-serif center break-word border-box>❤️</span><span style=\"font-size: 14px;text-align: right;\"></span></p><section><br></section></section></section></section>\n                </div>\n\n    \n    <br>\n\n    \n        <a target=\"_blank\" href=\"http://mp.weixin.qq.com/s?__biz=MjM5NzMyMjAwMA==&amp;mid=2651501333&amp;idx=2&amp;sn=00e1a8a8f266249fc338cd0b9648e0ce&amp;chksm=bd25df6a8a52567c1d88f39463d286c4fcb5e745066cb10016897e84a6c59828dd850f83d8a7#rd\" style=\"color: blue\" class=\"media_tool_meta meta_primary\">原文</a>\n        <br>\n    \n\n    \n\n    <img alt=\"\" width=\"1px\" height=\"1px\" class=\"\" style=\"width:1px;height:1px;display:none\" src=\"http://www.jintiankansha.me/rss_static/54540/bY8kx4U4Xp\"></div></div>","descriptionType":"html","publishedDate":"Sun, 26 Sep 2021 03:30:00 +0000","feedId":2521,"bgimg":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/eZzl4LXykQxWaAZBibTRu1464m9e9oMSuibYpQODklK31VicKS9mZKFt2F0jINZSZgOeuwliaoBYmKdEWzDte4F3vw/0?wx_fmt=jpeg?imageView2/1/w/600","linkMd5":"60944489fe005fa838842e85861f3daa","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn93@2020_1/2021/09/28/12-08-46-338_ac29e2a4370cf279.webp","destWidth":699,"destHeight":700,"sourceBytes":68842,"destBytes":53358,"author":"","articleImgCdnMap":{"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/eZzl4LXykQxWaAZBibTRu1464m9e9oMSuibYpQODklK31VicKS9mZKFt2F0jINZSZgOeuwliaoBYmKdEWzDte4F3vw/0?wx_fmt=jpeg?imageView2/1/w/600":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn93@2020_1/2021/09/28/12-08-46-338_ac29e2a4370cf279.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQwCJNM32ydzFEg79KAb0Kv6aarafcuCEgcG0lIe6I61f6BMicplCAqZbLYoPTLQvM2jfGEcLzjuovA/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn1@2020_3/2021/09/28/12-09-13-344_eb24f4e265b2b916.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/2A8tXicCG8ylbWIGfdoDED35IRRySQZTXUkJ1eop9MHApzFibKnOo0diboXpl0rmS5mH78YJhsWQv0dhv718A6kUA/640?wx_fmt=jpeg":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn4@2020_6/2021/09/28/12-09-41-664_f93d0239d4369c75.webp","http://www.jintiankansha.me/rss_static/54540/bY8kx4U4Xp":null},"publishedOrCreatedDate":1632830902763}],"record":{"createdTime":"2021-09-28 20:08:22","updatedTime":"2021-09-28 20:08:22","feedId":2521,"fetchDate":"Tue, 28 Sep 2021 12:08:22 +0000","fetchMs":193,"handleMs":26,"totalMs":80259,"newArticles":0,"totalArticles":5,"status":1,"type":0,"ip":"245d88d7b2d8f26704713c23b090d029","hostName":"us-007*","requestId":"c167b1eb17114726b54140c898ba5acb_2521","contentType":"application/rss+xml","totalBytes":108728,"bgimgsTotal":1,"bgimgsGithubTotal":1,"articlesImgsTotal":4,"articlesImgsGithubTotal":3,"successGithubMap":{"myreaderx15":1,"myreaderx27":1,"myreaderx19":1},"failGithubMap":{}},"feed":{"createdTime":"2020-08-24 21:31:41","updatedTime":"2020-09-01 10:09:47","id":2521,"name":"ImportNew","url":"http://feedmaker.kindle4rss.com/feeds/importnew.weixin.xml","subscriber":null,"website":null,"icon":"http://www.sogou.com/images/logo/new/favicon.ico?v=4","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx63/cdn9@2020_3/2020/09/01/02-08-31-388_d24121c9beed1de6.ico","description":"伯乐在线旗下账号，专注Java技术分享，包括Java基础技术、进阶技能、架构设计和Java技术领域动态等。","weekly":null,"link":null},"noPictureArticleList":[{"createdTime":"2021-09-28 20:09:42","updatedTime":"2021-09-28 20:09:42","id":null,"feedId":2521,"linkMd5":"60944489fe005fa838842e85861f3daa"}],"tmpCommonImgCdnBytes":53358,"tmpBodyImgCdnBytes":55370,"tmpBgImgCdnBytes":0,"extra4":{"start":1632830902401,"total":0,"statList":[{"spend":336,"msg":"获取xml内容"},{"spend":26,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":56070,"msg":"正文链接上传到cdn"}]},"extra5":4,"extra6":4,"extra7ImgCdnFailResultVector":[{"code":1,"isDone":false,"source":"http://www.jintiankansha.me/rss_static/54540/bY8kx4U4Xp","sourceStatusCode":405,"sourceBytes":0,"destBytes":0,"feedId":2521,"totalSpendMs":475,"convertSpendMs":0,"createdTime":"2021-09-28 20:08:46","host":"us-034*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E9%9D%A2%E8%AF%95%E5%AE%98%E9%97%AE%EF%BC%9A%E6%B7%98%E5%AE%9D%E4%B8%83%E5%A4%A9%E8%87%AA%E5%8A%A8%E7%A1%AE%E8%AE%A4%E6%94%B6%E8%B4%A7%EF%BC%8C%E8%AE%A9%E4%BD%A0%E8%AE%BE%E8%AE%A1%EF%BC%8C%E5%8F%AF%E4%BB%A5%E6%80%8E%E4%B9%88%E5%AE%9E%E7%8E%B0%EF%BC%9F","linkMd5ListStr":"60944489fe005fa838842e85861f3daa","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[405],"sourceSize":"0","destSize":"0"},{"code":1,"isDone":false,"source":"http://www.jintiankansha.me/rss_static/54540/bY8kx4U4Xp","sourceStatusCode":405,"sourceBytes":0,"destBytes":0,"feedId":2521,"totalSpendMs":930,"convertSpendMs":0,"createdTime":"2021-09-28 20:08:47","host":"europe69*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E9%9D%A2%E8%AF%95%E5%AE%98%E9%97%AE%EF%BC%9A%E6%B7%98%E5%AE%9D%E4%B8%83%E5%A4%A9%E8%87%AA%E5%8A%A8%E7%A1%AE%E8%AE%A4%E6%94%B6%E8%B4%A7%EF%BC%8C%E8%AE%A9%E4%BD%A0%E8%AE%BE%E8%AE%A1%EF%BC%8C%E5%8F%AF%E4%BB%A5%E6%80%8E%E4%B9%88%E5%AE%9E%E7%8E%B0%EF%BC%9F","linkMd5ListStr":"60944489fe005fa838842e85861f3daa","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[405],"sourceSize":"0","destSize":"0"}],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://us-032.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe69.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[405]},"http://us-033.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-034.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[405]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/eZzl4LXykQxWaAZBibTRu1464m9e9oMSuibYpQODklK31VicKS9mZKFt2F0jINZSZgOeuwliaoBYmKdEWzDte4F3vw/0?wx_fmt=jpeg?imageView2/1/w/600","sourceStatusCode":200,"destWidth":699,"destHeight":700,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn93@2020_1/2021/09/28/12-08-46-338_ac29e2a4370cf279.webp","sourceBytes":68842,"destBytes":53358,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":23807,"convertSpendMs":19,"createdTime":"2021-09-28 20:08:22","host":"us-003*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E9%9D%A2%E8%AF%95%E5%AE%98%E9%97%AE%EF%BC%9A%E6%B7%98%E5%AE%9D%E4%B8%83%E5%A4%A9%E8%87%AA%E5%8A%A8%E7%A1%AE%E8%AE%A4%E6%94%B6%E8%B4%A7%EF%BC%8C%E8%AE%A9%E4%BD%A0%E8%AE%BE%E8%AE%A1%EF%BC%8C%E5%8F%AF%E4%BB%A5%E6%80%8E%E4%B9%88%E5%AE%9E%E7%8E%B0%EF%BC%9F","linkMd5ListStr":"60944489fe005fa838842e85861f3daa,60944489fe005fa838842e85861f3daa","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"67.2 KB","destSize":"52.1 KB","compressRate":"77.5%"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQwCJNM32ydzFEg79KAb0Kv6aarafcuCEgcG0lIe6I61f6BMicplCAqZbLYoPTLQvM2jfGEcLzjuovA/640?wx_fmt=png","sourceStatusCode":200,"destWidth":1080,"destHeight":280,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn1@2020_3/2021/09/28/12-09-13-344_eb24f4e265b2b916.webp","sourceBytes":78758,"destBytes":23762,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":27001,"convertSpendMs":23,"createdTime":"2021-09-28 20:08:46","host":"us-032*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E9%9D%A2%E8%AF%95%E5%AE%98%E9%97%AE%EF%BC%9A%E6%B7%98%E5%AE%9D%E4%B8%83%E5%A4%A9%E8%87%AA%E5%8A%A8%E7%A1%AE%E8%AE%A4%E6%94%B6%E8%B4%A7%EF%BC%8C%E8%AE%A9%E4%BD%A0%E8%AE%BE%E8%AE%A1%EF%BC%8C%E5%8F%AF%E4%BB%A5%E6%80%8E%E4%B9%88%E5%AE%9E%E7%8E%B0%EF%BC%9F","linkMd5ListStr":"60944489fe005fa838842e85861f3daa","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"76.9 KB","destSize":"23.2 KB","compressRate":"30.2%"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/2A8tXicCG8ylbWIGfdoDED35IRRySQZTXUkJ1eop9MHApzFibKnOo0diboXpl0rmS5mH78YJhsWQv0dhv718A6kUA/640?wx_fmt=jpeg","sourceStatusCode":200,"destWidth":600,"destHeight":550,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn4@2020_6/2021/09/28/12-09-41-664_f93d0239d4369c75.webp","sourceBytes":37143,"destBytes":31608,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":55299,"convertSpendMs":12,"createdTime":"2021-09-28 20:08:46","host":"us-033*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E9%9D%A2%E8%AF%95%E5%AE%98%E9%97%AE%EF%BC%9A%E6%B7%98%E5%AE%9D%E4%B8%83%E5%A4%A9%E8%87%AA%E5%8A%A8%E7%A1%AE%E8%AE%A4%E6%94%B6%E8%B4%A7%EF%BC%8C%E8%AE%A9%E4%BD%A0%E8%AE%BE%E8%AE%A1%EF%BC%8C%E5%8F%AF%E4%BB%A5%E6%80%8E%E4%B9%88%E5%AE%9E%E7%8E%B0%EF%BC%9F","linkMd5ListStr":"60944489fe005fa838842e85861f3daa","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"36.3 KB","destSize":"30.9 KB","compressRate":"85.1%"}],"successGithubMap":{"myreaderx15":1,"myreaderx27":1,"myreaderx19":1},"failGithubMap":{}}